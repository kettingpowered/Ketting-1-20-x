a com/mojang/math/Axis
	a XN
	b XP
	c YN
	d YP
	e ZN
	f ZP
aaf$a net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action
	a ADD
	b REMOVE
	c $VALUES
	a ()[Laaf$a; $values
aaf$b net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Parameters
	a displayName
	b playerPrefix
	c playerSuffix
	d nametagVisibility
	e collisionRule
	f color
	g options
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()I getOptions
	c ()Lnet/minecraft/EnumChatFormat; getColor
	d ()Ljava/lang/String; getNametagVisibility
	e ()Ljava/lang/String; getCollisionRule
	f ()Lnet/minecraft/network/chat/IChatBaseComponent; getPlayerPrefix
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getPlayerSuffix
abv$b net/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType
	a INTERACT
	b ATTACK
	c INTERACT_AT
	d reader
	e $VALUES
	a ()[Labv$b; $values
abv$c net/minecraft/network/protocol/game/ServerboundInteractPacket$Handler
	a ()V onAttack
	a (Lnet/minecraft/world/EnumHand;)V onInteraction
	a (Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/Vec3D;)V onInteraction
abv$d net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAction
	a hand
	a ()Labv$b; getType
	a (Labv$c;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
abv$e net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAtLocationAction
	a hand
	b location
	a ()Labv$b; getType
	a (Labv$c;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
aby$d net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Laby$d; read
adz$a net/minecraft/network/protocol/status/ServerStatus$Favicon
	a CODEC
	b iconBytes
	c PREFIX
	a ()[B iconBytes
aef$a net/minecraft/network/syncher/EntityDataSerializer$ForValueType
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
aeh$b net/minecraft/network/syncher/SynchedEntityData$DataValue
	a id
	b serializer
	c value
	a ()I id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;I)Laeh$b; read
	a (Lnet/minecraft/network/PacketDataSerializer;ILnet/minecraft/network/syncher/DataWatcherSerializer;)Laeh$b; read
	a (Lnet/minecraft/network/syncher/DataWatcherObject;Ljava/lang/Object;)Laeh$b; create
	b ()Lnet/minecraft/network/syncher/DataWatcherSerializer; serializer
	c ()Ljava/lang/Object; value
aer$a net/minecraft/resources/RegistryDataLoader$Loader
aer$b net/minecraft/resources/RegistryDataLoader$RegistryData
	a key
	b elementCodec
	a ()Lnet/minecraft/resources/ResourceKey; key
	a (Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lcom/mojang/datafixers/util/Pair; create
	b ()Lcom/mojang/serialization/Codec; elementCodec
aeu$a net/minecraft/resources/RegistryOps$RegistryInfo
	a owner
	b getter
	c elementsLifecycle
	a ()Lnet/minecraft/core/HolderOwner; owner
	b ()Lnet/minecraft/core/HolderGetter; getter
	c ()Lcom/mojang/serialization/Lifecycle; elementsLifecycle
aeu$b net/minecraft/resources/RegistryOps$RegistryInfoLookup
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; lookup
aev$a net/minecraft/resources/ResourceKey$InternKey
	a registry
	b location
	a ()Lnet/minecraft/resources/MinecraftKey; registry
	b ()Lnet/minecraft/resources/MinecraftKey; location
aew$a net/minecraft/resources/ResourceLocation$Dummy
aew$b net/minecraft/resources/ResourceLocation$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/resources/MinecraftKey; deserialize
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
aez net/minecraft/server/ChainedJsonException
	a entries
	b message
	a (Ljava/lang/Exception;)Laez; forException
	a (Ljava/lang/String;)V prependJsonKey
	b (Ljava/lang/String;)V setFilenameAndFlush
aez$a net/minecraft/server/ChainedJsonException$Entry
	a filename
	b jsonKeys
	a ()Ljava/lang/String; getFilename
	a (Ljava/lang/String;)V addJsonKey
	b ()Ljava/lang/String; getJsonKeys
afe$a net/minecraft/server/PlayerAdvancements$Data
	a CODEC
	b map
	a ()Ljava/util/Map; map
	a (Ljava/util/function/BiConsumer;)V forEach
afq$a net/minecraft/server/WorldLoader$DataLoadContext
	a resources
	b dataConfiguration
	c datapackWorldgen
	d datapackDimensions
	a ()Lnet/minecraft/server/packs/resources/IResourceManager; resources
	b ()Lnet/minecraft/world/level/WorldDataConfiguration; dataConfiguration
	c ()Lnet/minecraft/core/IRegistryCustom$Dimension; datapackWorldgen
	d ()Lnet/minecraft/core/IRegistryCustom$Dimension; datapackDimensions
afq$b net/minecraft/server/WorldLoader$DataLoadOutput
	a cookie
	b finalDimensions
	a ()Ljava/lang/Object; cookie
	b ()Lnet/minecraft/core/IRegistryCustom$Dimension; finalDimensions
afq$c net/minecraft/server/WorldLoader$InitConfig
	a packConfig
	b commandSelection
	c functionCompilationLevel
	a ()Lafq$d; packConfig
	b ()Lnet/minecraft/commands/CommandDispatcher$ServerType; commandSelection
	c ()I functionCompilationLevel
afq$d net/minecraft/server/WorldLoader$PackConfig
	a packRepository
	b initialDataConfig
	c safeMode
	d initMode
	a ()Lcom/mojang/datafixers/util/Pair; createResourceManager
	b ()Lnet/minecraft/server/packs/repository/ResourcePackRepository; packRepository
	c ()Lnet/minecraft/world/level/WorldDataConfiguration; initialDataConfig
	d ()Z safeMode
	e ()Z initMode
afq$e net/minecraft/server/WorldLoader$ResultFactory
afq$f net/minecraft/server/WorldLoader$WorldDataSupplier
afs$a net/minecraft/server/advancements/AdvancementVisibilityEvaluator$Output
afs$b net/minecraft/server/advancements/AdvancementVisibilityEvaluator$VisibilityRule
	a SHOW
	b HIDE
	c NO_CHANGE
	d $VALUES
	a ()[Lafs$b; $values
afx net/minecraft/server/chase/ChaseClient
	a LOGGER
	b RECONNECT_INTERVAL_SECONDS
	c serverHost
	d serverPort
	e server
	f wantsToRun
	g socket
	h thread
	a ()V start
	a (Ljava/lang/String;)V handleMessage
	a (Ljava/util/Scanner;)V handleTeleport
	b ()V stop
	b (Ljava/lang/String;)V executeCommand
	b (Ljava/util/Scanner;)Ljava/util/Optional; parseTarget
	c ()V run
afx$a net/minecraft/server/chase/ChaseClient$TeleportTarget
	a level
	b pos
	c rot
	a ()Lnet/minecraft/resources/ResourceKey; level
	b ()Lnet/minecraft/world/phys/Vec3D; pos
	c ()Lnet/minecraft/world/phys/Vec2F; rot
afy net/minecraft/server/chase/ChaseServer
	a LOGGER
	b serverBindAddress
	c serverPort
	d playerList
	e broadcastIntervalMs
	f wantsToRun
	g serverSocket
	h clientSockets
	a ()V start
	b ()V stop
	c ()V runSender
	d ()V runAcceptor
	e ()Lafy$a; getPlayerPosition
afy$a net/minecraft/server/chase/ChaseServer$PlayerPosition
	a dimensionName
	b x
	c y
	d z
	e yRot
	f xRot
	a ()Ljava/lang/String; dimensionName
	b ()D x
	c ()D y
	d ()D z
	e ()F yRot
	f ()F xRot
	g ()Ljava/lang/String; format
agg net/minecraft/server/commands/ChaseCommand
	a DIMENSION_NAMES
	b LOGGER
	c DEFAULT_CONNECT_HOST
	d DEFAULT_BIND_ADDRESS
	e DEFAULT_PORT
	f BROADCAST_INTERVAL_MS
	g chaseServer
	h chaseClient
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I stop
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;I)I lead
	b (Lnet/minecraft/commands/CommandListenerWrapper;)Z alreadyRunning
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;I)I follow
agi$b net/minecraft/server/commands/CloneCommands$CommandFunction
agi$c net/minecraft/server/commands/CloneCommands$DimensionAndPosition
	a dimension
	b position
	a ()Lnet/minecraft/server/level/WorldServer; dimension
	b ()Lnet/minecraft/core/BlockPosition; position
agk$a net/minecraft/server/commands/DataPackCommand$Inserter
agm$a net/minecraft/server/commands/DebugCommand$Tracer
	b INDENT_OFFSET
	c output
	d lastIndent
	e waitingForResult
	T_ ()Z shouldInformAdmins
	a (I)V indentAndSave
	a (ILjava/lang/String;)V onCommand
	a (ILjava/lang/String;I)V onReturn
	a (ILnet/minecraft/resources/MinecraftKey;I)V onCall
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	b (I)V printIndent
	b (ILjava/lang/String;)V onError
	e ()V newLine
	j_ ()Z acceptsSuccess
	k_ ()Z alwaysAccepts
	v_ ()Z acceptsFailure
ago net/minecraft/server/commands/DebugMobSpawningCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/core/BlockPosition;)I spawnMobs
agp net/minecraft/server/commands/DebugPathCommand
	a ERROR_NOT_MOB
	b ERROR_NO_PATH
	c ERROR_NOT_COMPLETE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;)I fillBlocks
agv$a net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate
agv$b net/minecraft/server/commands/ExecuteCommand$CommandPredicate
aha$a net/minecraft/server/commands/FunctionCommand$FunctionResult
	a value
	b isReturn
	a ()I value
	b ()Z isReturn
ahl$a net/minecraft/server/commands/LootCommand$Callback
ahl$b net/minecraft/server/commands/LootCommand$DropConsumer
ahl$c net/minecraft/server/commands/LootCommand$TailProvider
ahv net/minecraft/server/commands/RaidCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I glow
	a (Lnet/minecraft/commands/CommandListenerWrapper;I)I setBadOmenLevel
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/network/chat/IChatBaseComponent;)I playSound
	a (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/world/entity/raid/Raid; getRaid
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I spawnLeader
	b (Lnet/minecraft/commands/CommandListenerWrapper;I)I start
	c (Lnet/minecraft/commands/CommandListenerWrapper;)I stop
	d (Lnet/minecraft/commands/CommandListenerWrapper;)I check
ahz net/minecraft/server/commands/ResetChunksCommand
	a LOGGER
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;IZ)I resetChunks
ai$a net/minecraft/advancements/AdvancementRequirements$Strategy
	a AND
	b OR
aip$a net/minecraft/server/commands/SpreadPlayersCommand$Position
	a x
	b z
	a ()V normalize
	a (DDDD)Z clamp
	a (Laip$a;)D dist
	a (Lnet/minecraft/util/RandomSource;DDDD)V randomize
	a (Lnet/minecraft/world/level/IBlockAccess;I)I getSpawnY
	b ()D getLength
	b (Laip$a;)V moveAway
	b (Lnet/minecraft/world/level/IBlockAccess;I)Z isSafe
aiw$a net/minecraft/server/commands/TeleportCommand$LookAt
	a position
	b entity
	c anchor
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;)V perform
aj$a net/minecraft/advancements/AdvancementRewards$Builder
	a experience
	b loot
	c recipes
	d function
	a ()Lnet/minecraft/advancements/AdvancementRewards; build
	a (I)Laj$a; experience
	a (Lnet/minecraft/resources/MinecraftKey;)Laj$a; loot
	b (I)Laj$a; addExperience
	b (Lnet/minecraft/resources/MinecraftKey;)Laj$a; addLootTable
	c (Lnet/minecraft/resources/MinecraftKey;)Laj$a; recipe
	d (Lnet/minecraft/resources/MinecraftKey;)Laj$a; addRecipe
	e (Lnet/minecraft/resources/MinecraftKey;)Laj$a; function
	f (Lnet/minecraft/resources/MinecraftKey;)Laj$a; runs
ajb net/minecraft/server/commands/WardenSpawnTrackerCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I resetTracker
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;I)I setWarningLevel
ajh$a net/minecraft/server/commands/data/DataCommands$DataManipulator
ajh$b net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator
ajh$c net/minecraft/server/commands/data/DataCommands$DataProvider
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/commands/data/CommandDataAccessor; access
ajh$d net/minecraft/server/commands/data/DataCommands$StringProcessor
ajx net/minecraft/server/level/BlockDestructionProgress
	a id
	b pos
	c progress
	d updatedRenderTick
	a ()I getId
	a (I)V setProgress
	a (Lajx;)I compareTo
	b ()Lnet/minecraft/core/BlockPosition; getPos
	b (I)V updateTick
	c ()I getProgress
	d ()I getUpdatedRenderTick
ajy$b net/minecraft/server/level/ChunkHolder$ChunkSaveDebug
	a thread
	b future
	c source
ajy$c net/minecraft/server/level/ChunkHolder$LevelChangeListener
ajy$d net/minecraft/server/level/ChunkHolder$PlayerProvider
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)Ljava/util/List; getPlayers
ak$a net/minecraft/advancements/AdvancementTree$Listener
	a ()V onAdvancementsCleared
	a (Lnet/minecraft/advancements/AdvancementNode;)V onAddAdvancementRoot
	b (Lnet/minecraft/advancements/AdvancementNode;)V onRemoveAdvancementRoot
	c (Lnet/minecraft/advancements/AdvancementNode;)V onAddAdvancementTask
	d (Lnet/minecraft/advancements/AdvancementNode;)V onRemoveAdvancementTask
aka$a net/minecraft/server/level/ChunkMap$DistanceManager
	a (J)Z isChunkToRemove
	a (JILnet/minecraft/server/level/PlayerChunk;I)Lnet/minecraft/server/level/PlayerChunk; updateChunkScheduling
	b (J)Lnet/minecraft/server/level/PlayerChunk; getChunk
akc$a net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message
	a task
	b pos
	c level
akc$b net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release
	a task
	b pos
	c clearQueue
ake$a net/minecraft/server/level/ChunkTrackingView$Positioned
	b center
	c viewDistance
	a ()Lnet/minecraft/world/level/ChunkCoordIntPair; center
	a (IIZ)Z contains
	a (Lake$a;)Z squareIntersects
	a (Ljava/util/function/Consumer;)V forEach
	b ()I viewDistance
	c ()I minX
	d ()I minZ
	e ()I maxX
	f ()I maxZ
aki$a net/minecraft/server/level/DistanceManager$ChunkTicketTracker
	b MAX_LEVEL
	a (I)I runDistanceUpdates
	a (JI)V setLevel
	b (J)I getLevelFromSource
	c (J)I getLevel
aki$b net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker
	a chunks
	b maxDistance
	a ()V runAllUpdates
	a (JI)V setLevel
	a (JII)V onLevelChange
	a (Ljava/lang/String;)V dumpChunks
	b (J)I getLevelFromSource
	c (J)I getLevel
	d (J)Z havePlayer
aki$c net/minecraft/server/level/DistanceManager$PlayerTicketTracker
	g viewDistance
	h queueLevels
	i toUpdate
	a ()V runAllUpdates
	a (I)V updateViewDistance
	a (JII)V onLevelChange
	a (JIZZ)V onLevelChange
	c (I)Z haveTicketFor
ako$a net/minecraft/server/level/ServerChunkCache$ChunkAndHolder
	a chunk
	b holder
	a ()Lnet/minecraft/world/level/chunk/Chunk; chunk
	b ()Lnet/minecraft/server/level/PlayerChunk; holder
ako$b net/minecraft/server/level/ServerChunkCache$MainThreadExecutor
	at ()Z scheduleExecutables
	au ()Ljava/lang/Thread; getRunningThread
	d (Ljava/lang/Runnable;)V doRunTask
	e (Ljava/lang/Runnable;)Z shouldRun
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	x ()Z pollTask
akq$a net/minecraft/server/level/ServerLevel$EntityCallbacks
	a (Ljava/lang/Object;)V onSectionChange
	a (Lnet/minecraft/world/entity/Entity;)V onCreated
	b (Ljava/lang/Object;)V onTrackingEnd
	b (Lnet/minecraft/world/entity/Entity;)V onDestroyed
	c (Ljava/lang/Object;)V onTrackingStart
	c (Lnet/minecraft/world/entity/Entity;)V onTickingStart
	d (Ljava/lang/Object;)V onTickingEnd
	d (Lnet/minecraft/world/entity/Entity;)V onTickingEnd
	e (Ljava/lang/Object;)V onTickingStart
	e (Lnet/minecraft/world/entity/Entity;)V onTrackingStart
	f (Ljava/lang/Object;)V onDestroyed
	f (Lnet/minecraft/world/entity/Entity;)V onTrackingEnd
	g (Ljava/lang/Object;)V onCreated
	g (Lnet/minecraft/world/entity/Entity;)V onSectionChange
alc net/minecraft/server/level/progress/ProcessorChunkProgressListener
	a delegate
	b mailbox
	a ()V start
	a (Lnet/minecraft/server/level/progress/WorldLoadListener;Ljava/util/concurrent/Executor;)Lalc; createStarted
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/ChunkStatus;)V onStatusChange
	b ()V stop
ald net/minecraft/server/level/progress/StoringChunkProgressListener
	a delegate
	b statuses
	c spawnPos
	d fullDiameter
	e radius
	f diameter
	g started
	a ()V start
	a (II)Lnet/minecraft/world/level/chunk/ChunkStatus; getStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/ChunkStatus;)V onStatusChange
	b ()V stop
	c ()I getFullDiameter
	d ()I getDiameter
	e ()I getProgress
alg$a net/minecraft/server/network/ConfigurationTask$Type
	a id
	a ()Ljava/lang/String; id
alp$a net/minecraft/server/network/ServerGamePacketListenerImpl$EntityInteraction
alv$a net/minecraft/server/network/TextFilterClient$IgnoreStrategy
	a NEVER_IGNORE
	b IGNORE_FULLY_FILTERED
alv$b net/minecraft/server/network/TextFilterClient$JoinOrLeaveEncoder
alv$c net/minecraft/server/network/TextFilterClient$MessageEncoder
alv$d net/minecraft/server/network/TextFilterClient$PlayerContext
	c profile
	d streamExecutor
	a ()V join
	a (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; processStreamMessage
	a (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; processMessageBundle
	b ()V leave
alv$e net/minecraft/server/network/TextFilterClient$RequestFailedException
amf$a net/minecraft/server/packs/FilePackResources$FileResourcesSupplier
	a content
	b isBuiltin
	a (Ljava/lang/String;)Lnet/minecraft/server/packs/IResourcePack; openPrimary
	a (Ljava/lang/String;Lanb$a;)Lnet/minecraft/server/packs/IResourcePack; openFull
amf$b net/minecraft/server/packs/FilePackResources$SharedZipFileAccess
	a file
	b zipFile
	c failedToLoad
	a ()Ljava/util/zip/ZipFile; getOrCreateZipFile
amg$a net/minecraft/server/packs/OverlayMetadataSection$OverlayEntry
	a format
	b overlay
	c CODEC
	a ()Lnet/minecraft/util/InclusiveRange; format
	a (I)Z isApplicable
	b ()Ljava/lang/String; overlay
amh$a net/minecraft/server/packs/PackResources$ResourceOutput
amj$a net/minecraft/server/packs/PathPackResources$PathResourcesSupplier
	a content
	b isBuiltin
	a (Ljava/lang/String;)Lnet/minecraft/server/packs/IResourcePack; openPrimary
	a (Ljava/lang/String;Lanb$a;)Lnet/minecraft/server/packs/IResourcePack; openFull
amq$a net/minecraft/server/packs/linkfs/LinkFileSystem$Builder
	a root
	a (Ljava/lang/String;)Ljava/nio/file/FileSystem; build
	a (Ljava/util/List;Ljava/lang/String;Ljava/nio/file/Path;)Lamq$a; put
	a (Ljava/util/List;Ljava/nio/file/Path;)Lamq$a; put
amq$b net/minecraft/server/packs/linkfs/LinkFileSystem$DirectoryEntry
	a children
	b files
	a ()Ljava/util/Map; children
	b ()Ljava/util/Map; files
amr$a net/minecraft/server/packs/linkfs/PathContents$DirectoryContents
	c children
	a ()Ljava/util/Map; children
amr$b net/minecraft/server/packs/linkfs/PathContents$FileContents
	c contents
	a ()Ljava/nio/file/Path; contents
ana$a net/minecraft/server/packs/repository/FolderRepositorySource$FolderPackDetector
	a isBuiltin
	a (Ljava/nio/file/Path;)Lanb$c; createZipPack
	b (Ljava/nio/file/Path;)Lanb$c; createDirectoryPack
	c (Ljava/nio/file/Path;)Ljava/lang/Object; createDirectoryPack
	d (Ljava/nio/file/Path;)Ljava/lang/Object; createZipPack
anb$a net/minecraft/server/packs/repository/Pack$Info
	a description
	b compatibility
	c requestedFeatures
	d overlays
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; description
	b ()Lnet/minecraft/server/packs/repository/EnumResourcePackVersion; compatibility
	c ()Lnet/minecraft/world/flag/FeatureFlagSet; requestedFeatures
	d ()Ljava/util/List; overlays
anb$c net/minecraft/server/packs/repository/Pack$ResourcesSupplier
	a (Ljava/lang/String;)Lnet/minecraft/server/packs/IResourcePack; openPrimary
	a (Ljava/lang/String;Lanb$a;)Lnet/minecraft/server/packs/IResourcePack; openFull
ank$b net/minecraft/server/packs/resources/FallbackResourceManager$EntryStack
	a fileLocation
	b metadataLocation
	c fileSources
	d metaSources
	a ()Lnet/minecraft/resources/MinecraftKey; fileLocation
	b ()Lnet/minecraft/resources/MinecraftKey; metadataLocation
	c ()Ljava/util/List; fileSources
	d ()Ljava/util/Map; metaSources
ank$c net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream
	a message
	b closed
ank$d net/minecraft/server/packs/resources/FallbackResourceManager$PackEntry
	a name
	b resources
	c filter
	a ()Ljava/lang/String; name
	a (Ljava/util/Collection;)V filterAll
	a (Lnet/minecraft/resources/MinecraftKey;)Z isFiltered
	b ()Lnet/minecraft/server/packs/IResourcePack; resources
	c ()Ljava/util/function/Predicate; filter
ank$e net/minecraft/server/packs/resources/FallbackResourceManager$ResourceWithSource
	a source
	b resource
	a ()Lnet/minecraft/server/packs/IResourcePack; source
	b ()Lnet/minecraft/server/packs/resources/IoSupplier; resource
ann$a net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier
	a (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; wait
ano$a net/minecraft/server/packs/resources/ProfiledReloadInstance$State
	a name
	b preparationResult
	c reloadResult
	d preparationNanos
	e reloadNanos
anq net/minecraft/server/packs/resources/ReloadableResourceManager
	a LOGGER
	b resources
	c listeners
	d type
	a ()Ljava/util/Set; getNamespaces
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/packs/resources/IReloadable; createReload
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/List; getResourceStack
	a (Lnet/minecraft/server/packs/resources/IReloadListener;)V registerReloadListener
	b ()Ljava/util/stream/Stream; listPacks
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
anu net/minecraft/server/packs/resources/ResourceManagerReloadListener
	a (Lann$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
anv$a net/minecraft/server/packs/resources/ResourceMetadata$Builder
	a map
	a ()Lnet/minecraft/server/packs/resources/ResourceMetadata; build
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;Ljava/lang/Object;)Lanv$a; put
anz$a net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory
ao$a net/minecraft/advancements/CriterionTrigger$Listener
	a trigger
	b advancement
	c criterion
	a ()Lnet/minecraft/advancements/CriterionInstance; trigger
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V run
	b ()Lnet/minecraft/advancements/AdvancementHolder; advancement
	c ()Ljava/lang/String; criterion
aph$a net/minecraft/stats/RecipeBookSettings$TypeSettings
	a open
	b filtering
	a ()Laph$a; copy
apw net/minecraft/tags/FlatLevelGeneratorPresetTags
	a VISIBLE
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
aqe net/minecraft/tags/TagBuilder
	a entries
	a ()Laqe; create
	a (Lnet/minecraft/resources/MinecraftKey;)Laqe; addElement
	a (Lnet/minecraft/tags/TagEntry;)Laqe; add
	b ()Ljava/util/List; build
	b (Lnet/minecraft/resources/MinecraftKey;)Laqe; addOptionalElement
	c (Lnet/minecraft/resources/MinecraftKey;)Laqe; addTag
	d (Lnet/minecraft/resources/MinecraftKey;)Laqe; addOptionalTag
aqf$a net/minecraft/tags/TagEntry$Lookup
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/Object; element
	b (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Collection; tag
aqi$a net/minecraft/tags/TagLoader$EntryWithSource
	a entry
	b source
	a ()Lnet/minecraft/tags/TagEntry; entry
	b ()Ljava/lang/String; source
aqi$b net/minecraft/tags/TagLoader$SortingEntry
	a entries
	a ()Ljava/util/List; entries
	a (Ljava/util/function/Consumer;)V visitRequiredDependencies
	b (Ljava/util/function/Consumer;)V visitOptionalDependencies
aqj$a net/minecraft/tags/TagManager$LoadResult
	a key
	b tags
	a ()Lnet/minecraft/resources/ResourceKey; key
	b ()Ljava/util/Map; tags
aqk$a net/minecraft/tags/TagNetworkSerialization$NetworkPayload
	a tags
	a ()Z isEmpty
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b (Lnet/minecraft/network/PacketDataSerializer;)Laqk$a; read
aqk$b net/minecraft/tags/TagNetworkSerialization$TagOutput
aql net/minecraft/tags/WorldPresetTags
	a NORMAL
	b EXTENDED
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
aqn$a net/minecraft/util/AbortableIterationConsumer$Continuation
	a CONTINUE
	b ABORT
	c $VALUES
	a ()Z shouldAbort
	b ()[Laqn$a; $values
aqo net/minecraft/util/ArrayListDeque
	a MIN_GROWTH
	b contents
	c head
	d size
	a ()I capacity
	a (I)I getIndex
	a (II)V verifyIndexInRange
	a ([Ljava/lang/Object;I)V copyCount
	b ()V grow
	b (I)V verifyIndexInRange
	c (I)Ljava/lang/Object; getInner
aqo$a net/minecraft/util/ArrayListDeque$DescendingIterator
	b index
aqr$a net/minecraft/util/ByIdMap$OutOfBoundsStrategy
	a ZERO
	b WRAP
	c CLAMP
	d $VALUES
	a ()[Laqr$a; $values
aqt net/minecraft/util/CommonColors
	a WHITE
	b BLACK
	c GRAY
	d LIGHT_GRAY
	e RED
aqu net/minecraft/util/CommonLinks
	a GDPR
	b EULA
	c PRIVACY_STATEMENT
	d ATTRIBUTION
	e LICENSES
	f BUY_MINECRAFT_JAVA
	g ACCOUNT_SETTINGS
	h SNAPSHOT_FEEDBACK
	i RELEASE_FEEDBACK
	j SNAPSHOT_BUGS_FEEDBACK
	k ACCESSIBILITY_HELP
	l REPORTING_HELP
	m SUSPENSION_HELP
	n BLOCKING_HELP
	o SYMLINK_HELP
	p START_REALMS_TRIAL
	q BUY_REALMS
	r REALMS_TERMS
	s REALMS_CONTENT_CREATION
	t REALMS_UPDATE_MOJANG_ACCOUNT
	a (Ljava/lang/String;Ljava/util/UUID;)Ljava/lang/String; extendRealms
	a (Ljava/lang/String;Ljava/util/UUID;Z)Ljava/lang/String; extendRealms
aqw$a net/minecraft/util/Crypt$ByteArrayToKeyFunction
aqw$b net/minecraft/util/Crypt$SaltSignaturePair
	a EMPTY
	b salt
	c signature
	a ()Z isValid
	a (Lnet/minecraft/network/PacketDataSerializer;Laqw$b;)V write
	b ()[B saltAsBytes
	c ()J salt
	d ()[B signature
aqw$c net/minecraft/util/Crypt$SaltSupplier
	a secureRandom
	a ()J getLong
aqy$a net/minecraft/util/CsvOutput$Builder
	a headers
	a (Ljava/io/Writer;)Lnet/minecraft/util/CSVWriter; build
	a (Ljava/lang/String;)Laqy$a; addColumn
aqz net/minecraft/util/CubicSampler
	a GAUSSIAN_SAMPLE_RADIUS
	b GAUSSIAN_SAMPLE_BREADTH
	c GAUSSIAN_SAMPLE_KERNEL
	a (Lnet/minecraft/world/phys/Vec3D;Laqz$a;)Lnet/minecraft/world/phys/Vec3D; gaussianSampleVec3
aqz$a net/minecraft/util/CubicSampler$Vec3Fetcher
ara$b net/minecraft/util/CubicSpline$Builder
	a coordinate
	b valueTransformer
	c locations
	d values
	e derivatives
	a ()Lnet/minecraft/util/CubicSpline; build
	a (FF)Lara$b; addPoint
	a (FFF)Lara$b; addPoint
	a (FLnet/minecraft/util/CubicSpline;)Lara$b; addPoint
	a (FLnet/minecraft/util/CubicSpline;F)Lara$b; addPoint
ara$c net/minecraft/util/CubicSpline$Constant
	b value
	a ()Ljava/lang/String; parityString
	a (Lara$d;)Lnet/minecraft/util/CubicSpline; mapAll
	a (Ljava/lang/Object;)F apply
	b ()F minValue
	c ()F maxValue
	d ()F value
ara$d net/minecraft/util/CubicSpline$CoordinateVisitor
ara$e net/minecraft/util/CubicSpline$Multipoint
	b coordinate
	c locations
	d values
	e derivatives
	f minValue
	g maxValue
	a ()Ljava/lang/String; parityString
	a (F[FF[FI)F linearExtend
	a (Lara$d;)Lnet/minecraft/util/CubicSpline; mapAll
	a (Ljava/lang/Object;)F apply
	a (Lnet/minecraft/util/ToFloatFunction;[FLjava/util/List;[F)Lara$e; create
	a ([F)Ljava/lang/String; toString
	a ([FF)I findIntervalStart
	a ([FLjava/util/List;[F)V validateSizes
	b ()F minValue
	c ()F maxValue
	d ()Lnet/minecraft/util/ToFloatFunction; coordinate
	e ()[F locations
	f ()Ljava/util/List; values
	g ()[F derivatives
arc$a net/minecraft/util/DependencySorter$Entry
	a (Ljava/util/function/Consumer;)V visitRequiredDependencies
	b (Ljava/util/function/Consumer;)V visitOptionalDependencies
arf$b net/minecraft/util/ExtraCodecs$EitherCodec
	a first
	b second
	a (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
arf$c net/minecraft/util/ExtraCodecs$RecursiveCodec
	a wrapped
arf$d net/minecraft/util/ExtraCodecs$StrictOptionalFieldCodec
	a name
	b elementCodec
	a (Ljava/util/Optional;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; encode
arf$e net/minecraft/util/ExtraCodecs$StrictUnboundedMapCodec
	a keyCodec
	b elementCodec
	a (Ljava/util/Map;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
arf$f net/minecraft/util/ExtraCodecs$TagOrElementLocation
	a id
	b tag
	a ()Lnet/minecraft/resources/MinecraftKey; id
	b ()Z tag
	c ()Ljava/lang/String; decoratedId
arf$g net/minecraft/util/ExtraCodecs$XorCodec
	a first
	b second
	a ()Lcom/mojang/serialization/Codec; first
	a (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	b ()Lcom/mojang/serialization/Codec; second
arh$a net/minecraft/util/FastColor$ABGR32
	a (I)I alpha
	a (II)I color
	a (IIII)I color
	b (I)I red
	c (I)I green
	d (I)I blue
	e (I)I transparent
	f (I)I opaque
arh$b net/minecraft/util/FastColor$ARGB32
	a (FII)I lerp
	a (I)I alpha
	a (II)I multiply
	a (IIII)I color
	b (I)I red
	c (I)I green
	d (I)I blue
arv$a net/minecraft/util/ModCheck$Confidence
	a PROBABLY_NOT
	b VERY_LIKELY
	c DEFINITELY
	d description
	e shouldReportAsModified
	f $VALUES
	a ()[Larv$a; $values
arx$a net/minecraft/util/NativeModuleLister$NativeModuleInfo
	a name
	b version
arx$b net/minecraft/util/NativeModuleLister$NativeModuleVersion
	a description
	b version
	c company
asa net/minecraft/util/PngInfo
	a width
	b height
	c PNG_HEADER
	d IHDR_TYPE
	e IHDR_SIZE
	a ()I width
	a (Ljava/io/InputStream;)Lasa; fromStream
	a ([B)Lasa; fromBytes
	b ()I height
asg$a net/minecraft/util/SignatureUpdater$Output
asj$a net/minecraft/util/SimpleBitStorage$InitializationException
asl net/minecraft/util/SmoothDouble
	a targetValue
	b remainingValue
	c lastAmount
	a ()V reset
	a (DD)D getNewDeltaValue
asm$a net/minecraft/util/SortedArraySet$ArrayIterator
	b index
	c last
asn$a net/minecraft/util/SpawnUtil$Strategy
	a LEGACY_IRON_GOLEM
	b ON_TOP_OF_COLLIDER
asp$a net/minecraft/util/StringRepresentable$EnumCodec
	a codec
	b resolver
	a (Ljava/lang/Enum;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Ljava/lang/String;)Ljava/lang/Enum; byName
	a (Ljava/lang/String;Ljava/lang/Enum;)Ljava/lang/Enum; byName
asr$a net/minecraft/util/TaskChainer$DelayedTask
ast$a net/minecraft/util/TimeSource$NanoTimeSource
au$a net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance
	a block
	b item
	c numBees
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/block/Block;Lcb$a;Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lnet/minecraft/advancements/Criterion; destroyedBeeNest
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/ItemStack;I)Z matches
aup$a net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer
	a SIZE
	b NIBBLE_SIZE
	c data
	a (I)Z isFirst
	a (III)I get
	b (I)I getPosition
aup$c net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section
	a y
	b palette
	c listTag
	d section
	e hasData
	f toFix
	g update
	h seen
	i buffer
	a ()Lcom/mojang/serialization/Dynamic; write
	a (I)Lcom/mojang/serialization/Dynamic; getBlock
	a (II)V addFix
	a (ILcom/mojang/serialization/Dynamic;)V setBlock
	b (I)I upgrade
aup$d net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk
	a sides
	b sections
	c level
	d x
	e z
	f blockEntities
	a ()Lcom/mojang/serialization/Dynamic; write
	a (I)Lcom/mojang/serialization/Dynamic; getBlock
	a (ILcom/mojang/serialization/Dynamic;)V setBlock
	a (ILnet/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction;)I relative
	b (I)Lcom/mojang/serialization/Dynamic; getBlockEntity
	c (I)Lcom/mojang/serialization/Dynamic; removeBlockEntity
	d (I)Laup$c; getSection
auq$a net/minecraft/util/datafix/fixes/ChunkProtoTickListFix$PoorMansPalettedContainer
	a SIZE_BITS
	b palette
	c data
	d bits
	e mask
	f valuesPerLong
	a ()Ljava/util/List; palette
	a (III)Lcom/mojang/serialization/Dynamic; get
	b ()[J data
	b (III)I getIndex
av$a net/minecraft/advancements/critereon/BlockPredicate$Builder
	a blocks
	b tag
	c properties
	d nbt
	a ()Lav$a; block
	a (Lda$a;)Lav$a; setProperties
	a (Ljava/util/Collection;)Lav$a; of
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lav$a; hasNbt
	a (Lnet/minecraft/tags/TagKey;)Lav$a; of
	a ([Lnet/minecraft/world/level/block/Block;)Lav$a; of
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionBlock; build
aw$a net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance
	a parent
	b partner
	c child
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lbq$a;)Lnet/minecraft/advancements/Criterion; bredAnimals
	a (Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; bredAnimals
	a (Ljava/util/Optional;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
	c ()Lnet/minecraft/advancements/Criterion; bredAnimals
ax$a net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance
	a potion
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;)Z matches
	c ()Lnet/minecraft/advancements/Criterion; brewedPotion
axp$a net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection
	h PERSISTENT
	i DECAYABLE
	j DISTANCE
	k leaveIds
	l logIds
	m stateToIdMap
	a ()Z skippable
	a (I)Z isLog
	a (III)V setDistance
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic; makeLeafTag
	b (I)Z isLeaf
	d (I)I getDistance
axp$b net/minecraft/util/datafix/fixes/LeavesFix$Section
	a BLOCK_STATES_TAG
	b NAME_TAG
	c PROPERTIES_TAG
	d paletteFinder
	e palette
	f index
	g storage
	h blockStateType
	a ()Z skippable
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; write
	a (Lcom/mojang/serialization/Dynamic;)V readStorage
	a (Ljava/lang/String;ZI)I getStateId
	b ()Z isSkippable
	c ()I getIndex
	c (I)I getBlock
ay$a net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance
	a from
	b to
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/Criterion; changedDimensionTo
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/Criterion; changedDimension
	b (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/Criterion; changedDimensionFrom
	b (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Z matches
	c ()Lnet/minecraft/advancements/Criterion; changedDimension
az$a net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance
	a victims
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Ljava/util/Collection;)Z matches
	a ([Lbq$a;)Lnet/minecraft/advancements/Criterion; channeledLightning
azj$a net/minecraft/util/datafix/fixes/StatsCounterFix$StatType
	a type
	b typeKey
	a ()Ljava/lang/String; type
	b ()Ljava/lang/String; typeKey
azo$a net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion
	a biomeMapping
	b fallback
	a ()Ljava/util/Map; biomeMapping
	a (Ljava/lang/String;)Lazo$a; trivial
	a (Ljava/util/Map;)Ljava/util/Map; unpack
	a (Ljava/util/Map;Ljava/lang/String;)Lazo$a; biomeMapped
	b ()Ljava/lang/String; fallback
azq$a net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection
	h chestIds
	a ()Z skippable
	a (I)Z isTrappedChest
azz$a net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration
	a CODEC
	b spacing
	c separation
	d salt
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; serialize
b com/mojang/math/Constants
	a PI
	b RAD_TO_DEG
	c DEG_TO_RAD
	d EPSILON
ba$a net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance
	a level
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (I)Z matches
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lnet/minecraft/advancements/Criterion; constructedBeacon
	c ()Lnet/minecraft/advancements/Criterion; constructedBeacon
bb$a net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance
	a item
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lcb$a;)Lnet/minecraft/advancements/Criterion; usedItem
	a (Lnet/minecraft/world/item/ItemStack;)Z matches
	a (Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/advancements/Criterion; usedItem
	c ()Lnet/minecraft/advancements/Criterion; usedItem
bd$a net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance
	a zombie
	b villager
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
	c ()Lnet/minecraft/advancements/Criterion; curedZombieVillager
bdb net/minecraft/util/eventlog/EventLogDirectory
	a LOGGER
	b COMPRESS_BUFFER_SIZE
	c COMPRESSED_EXTENSION
	d root
	e extension
	a ()Lbdb$d; listFiles
	a (Ljava/nio/channels/ReadableByteChannel;Ljava/nio/file/Path;)V writeCompressed
	a (Ljava/nio/file/Path;)Lbdb$b; parseFile
	a (Ljava/nio/file/Path;Ljava/lang/String;)Lbdb; open
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)V tryCompress
	a (Ljava/time/LocalDate;)Lbdb$e; createNewFile
bdb$a net/minecraft/util/eventlog/EventLogDirectory$CompressedFile
	a path
	b id
	a ()Ljava/io/Reader; openReader
	b ()Lbdb$a; compress
	c ()Ljava/nio/file/Path; path
	d ()Lbdb$c; id
bdb$b net/minecraft/util/eventlog/EventLogDirectory$File
	a ()Ljava/io/Reader; openReader
	b ()Lbdb$a; compress
	c ()Ljava/nio/file/Path; path
	d ()Lbdb$c; id
bdb$c net/minecraft/util/eventlog/EventLogDirectory$FileId
	a date
	b index
	c DATE_FORMATTER
	a ()Ljava/time/LocalDate; date
	a (Ljava/lang/String;)Lbdb$c; parse
	b ()I index
	b (Ljava/lang/String;)Ljava/lang/String; toFileName
bdb$d net/minecraft/util/eventlog/EventLogDirectory$FileList
	a files
	a ()Lbdb$d; compressAll
	a (Ljava/time/LocalDate;I)Lbdb$d; prune
	b ()Ljava/util/stream/Stream; stream
	c ()Ljava/util/Set; ids
bdb$e net/minecraft/util/eventlog/EventLogDirectory$RawFile
	a path
	b id
	a ()Ljava/io/Reader; openReader
	b ()Lbdb$a; compress
	c ()Ljava/nio/file/Path; path
	d ()Lbdb$c; id
	e ()Ljava/nio/channels/FileChannel; openChannel
bdc net/minecraft/util/eventlog/JsonEventLog
	a GSON
	b codec
	c channel
	d referenceCount
	a ()Lbdd; openReader
	a (Lcom/mojang/serialization/Codec;Ljava/nio/file/Path;)Lbdc; open
	a (Ljava/lang/Object;)V write
	b ()V releaseReference
bdd net/minecraft/util/eventlog/JsonEventLogReader
	a ()Ljava/lang/Object; next
	a (Lcom/mojang/serialization/Codec;Ljava/io/Reader;)Lbdd; create
bdf$a net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription
	a name
	b getter
	c description
	d type
	a ()Ljavax/management/MBeanAttributeInfo; asMBeanAttributeInfo
bdi$a net/minecraft/util/profiling/ActiveProfiler$PathEntry
	a maxDuration
	b minDuration
	c accumulatedDuration
	d count
	e counters
	a ()J getDuration
	b ()J getMaxDuration
	c ()J getCount
	d ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
bdl$a net/minecraft/util/profiling/FilledProfileResults$CounterCollector
	a selfValue
	b totalValue
	c children
	a (Ljava/util/Iterator;J)V addValue
bdv$a net/minecraft/util/profiling/jfr/JvmProfiler$NoOpProfiler
	a noOpCommit
	b LOGGER
	a (F)V onServerTick
	a (Lnet/minecraft/network/EnumProtocol;ILjava/net/SocketAddress;I)V onPacketReceived
	a (Lnet/minecraft/util/profiling/jfr/Environment;)Z start
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; onChunkGenerate
	b ()Ljava/nio/file/Path; stop
	b (Lnet/minecraft/network/EnumProtocol;ILjava/net/SocketAddress;I)V onPacketSent
	c ()Z isRunning
	d ()Z isAvailable
	e ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; onWorldLoadedStarted
be$a net/minecraft/advancements/critereon/DamagePredicate$Builder
	a dealtDamage
	b takenDamage
	c sourceEntity
	d blocked
	e type
	a ()Lbe$a; damageInstance
	a (Lbf$a;)Lbe$a; type
	a (Ljava/lang/Boolean;)Lbe$a; blocked
	a (Lnet/minecraft/advancements/critereon/CriterionConditionDamageSource;)Lbe$a; type
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lbe$a; sourceEntity
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lbe$a; dealtDamage
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionDamage; build
	b (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lbe$a; takenDamage
bea$a net/minecraft/util/profiling/jfr/event/PacketEvent$Fields
	a REMOTE_ADDRESS
	b PROTOCOL_ID
	c PACKET_ID
	d BYTES
bed$a net/minecraft/util/profiling/jfr/parse/JfrStatsParser$MutableCountAndSize
	a count
	b totalSize
	a ()Lbem$a; toCountAndSize
	a (I)V increment
bek$a net/minecraft/util/profiling/jfr/stats/FileIOStat$Summary
	a totalBytes
	b bytesPerSecond
	c counts
	d countsPerSecond
	e timeSpentInIO
	f topTenContributorsByTotalBytes
	a ()J totalBytes
	b ()D bytesPerSecond
	c ()J counts
	d ()D countsPerSecond
	e ()Ljava/time/Duration; timeSpentInIO
	f ()Ljava/util/List; topTenContributorsByTotalBytes
bel$a net/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary
	a duration
	b gcTotalDuration
	c totalGCs
	d allocationRateBytesPerSecond
	a ()F gcOverHead
	b ()Ljava/time/Duration; duration
	c ()Ljava/time/Duration; gcTotalDuration
	d ()I totalGCs
	e ()D allocationRateBytesPerSecond
bel$b net/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing
	a BEFORE_GC
	b AFTER_GC
	c $VALUES
	a ()[Lbel$b; $values
bem$a net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize
	a totalCount
	b totalSize
	c SIZE_THEN_COUNT
	a ()J totalCount
	a (Lbem$a;)Lbem$a; add
	b ()J totalSize
bem$b net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification
	a direction
	b protocolId
	c packetId
	d PACKET_NAME_BY_ID
	a ()Ljava/lang/String; packetName
	a (Ljdk/jfr/consumer/RecordedEvent;)Lbem$b; from
	b ()Lnet/minecraft/network/protocol/EnumProtocolDirection; direction
	c ()Ljava/lang/String; protocolId
	d ()I packetId
ben$a net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary
	a allocationsPerSecondByThread
	a ()Ljava/util/Map; allocationsPerSecondByThread
bet$a net/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder
	a name
	b category
	c sampler
	d context
	e beforeTick
	f thresholdTest
	a ()Lnet/minecraft/util/profiling/metrics/MetricSampler; build
	a (Lbet$c;)Lbet$a; withThresholdAlert
	a (Ljava/util/function/Consumer;)Lbet$a; withBeforeTick
bet$b net/minecraft/util/profiling/metrics/MetricSampler$SamplerResult
	a recording
	b firstTick
	c lastTick
	a ()I getFirstTick
	a (I)D valueAtTick
	b ()I getLastTick
bet$c net/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest
bet$d net/minecraft/util/profiling/metrics/MetricSampler$ValueIncreasedByPercentage
	a percentageIncreaseThreshold
	b previousValue
beu$a net/minecraft/util/profiling/metrics/MetricsRegistry$AggregatedMetricSampler
	b delegates
	a (Ljava/util/List;)Lbet$c; thresholdTest
	b (Ljava/util/List;)V beforeTick
	c (Ljava/util/List;)D averageValueFromDelegates
bf$a net/minecraft/advancements/critereon/DamageSourcePredicate$Builder
	a tags
	b directEntity
	c sourceEntity
	a ()Lbf$a; damageType
	a (Lbq$a;)Lbf$a; direct
	a (Lnet/minecraft/advancements/critereon/TagPredicate;)Lbf$a; tag
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionDamageSource; build
	b (Lbq$a;)Lbf$a; source
bfc$a net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$CpuStats
	a nrOfCpus
	b systemInfo
	c processor
	d previousCpuLoadTick
	e currentLoad
	f lastPollMs
	a (I)D loadForCpu
bfi$a net/minecraft/util/random/SimpleWeightedRandomList$Builder
	a result
	a ()Lnet/minecraft/util/random/SimpleWeightedRandomList; build
	a (Ljava/lang/Object;I)Lbfi$a; add
bfk$a net/minecraft/util/random/WeightedEntry$IntrusiveBase
	a weight
	a ()Lnet/minecraft/util/random/Weight; getWeight
bfk$b net/minecraft/util/random/WeightedEntry$Wrapper
	a data
	b weight
	a ()Lnet/minecraft/util/random/Weight; getWeight
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	b ()Ljava/lang/Object; getData
bfp net/minecraft/util/thread/NamedThreadFactory
	a LOGGER
	b group
	c threadNumber
	d namePrefix
bft$a net/minecraft/util/thread/StrictQueue$FixedPriorityQueue
	a queues
	b size
	a ()Ljava/lang/Object; pop
	a (Lbft$b;)Z push
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
	c ()I size
	d ()Ljava/lang/Runnable; pop
bft$b net/minecraft/util/thread/StrictQueue$IntRunnable
	a priority
	b task
	a ()I getPriority
bft$c net/minecraft/util/thread/StrictQueue$QueueStrictQueue
	a queue
	a ()Ljava/lang/Object; pop
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
	c ()I size
bgf net/minecraft/util/valueproviders/MultipliedFloats
	a values
	a (Lnet/minecraft/util/RandomSource;)F sample
bhe$a net/minecraft/world/RandomSequences$DirtyMarkingRandomSource
	c random
	a (I)I nextInt
	b (J)V setSeed
	d ()Lnet/minecraft/util/RandomSource; fork
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; forkPositional
	f ()I nextInt
	g ()J nextLong
	h ()Z nextBoolean
	i ()F nextFloat
	j ()D nextDouble
	k ()D nextGaussian
bi$a net/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance
	a startPosition
	b distance
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lbq$a;Lnet/minecraft/advancements/critereon/CriterionConditionDistance;)Lnet/minecraft/advancements/Criterion; rideEntityInLava
	a (Lbq$a;Lnet/minecraft/advancements/critereon/CriterionConditionDistance;Lcj$a;)Lnet/minecraft/advancements/Criterion; fallFromHeight
	a (Lnet/minecraft/advancements/critereon/CriterionConditionDistance;)Lnet/minecraft/advancements/Criterion; travelledThroughNether
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z matches
bib$a net/minecraft/world/effect/MobEffect$MobEffectAttributeModifierTemplate
	b id
	c amount
	d operation
	a ()Ljava/util/UUID; getAttributeModifierId
	a (I)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; create
bid$a net/minecraft/world/effect/MobEffectInstance$FactorData
	a CODEC
	b paddingDuration
	c factorStart
	d factorTarget
	e factorCurrent
	f ticksActive
	g factorPreviousFrame
	h hadEffectLastTick
	a (Lnet/minecraft/world/effect/MobEffect;)V tick
	a (Lnet/minecraft/world/entity/EntityLiving;F)F getFactor
bil$a net/minecraft/world/entity/AgeableMob$AgeableMobGroupData
	a groupSize
	b shouldSpawnBaby
	c babySpawnChance
	a ()I getGroupSize
	b ()V increaseGroupSizeByOne
	c ()Z isShouldSpawnBaby
	d ()F getBabySpawnChance
bip$b$a net/minecraft/world/entity/Display$BlockDisplay$BlockRenderState
	a blockState
	a ()Lnet/minecraft/world/level/block/state/IBlockData; blockState
bip$g$a net/minecraft/world/entity/Display$ItemDisplay$ItemRenderState
	a itemStack
	b itemTransform
	a ()Lnet/minecraft/world/item/ItemStack; itemStack
	b ()Lnet/minecraft/world/item/ItemDisplayContext; itemTransform
bip$h net/minecraft/world/entity/Display$LinearFloatInterpolator
	a previous
	b current
	a ()F previous
	b ()F current
bip$i net/minecraft/world/entity/Display$LinearIntInterpolator
	a previous
	b current
	a ()I previous
	b ()I current
bip$j net/minecraft/world/entity/Display$PosRotInterpolationTarget
	a steps
	b targetX
	c targetY
	d targetZ
	e targetYRot
	f targetXRot
	a (Lnet/minecraft/world/entity/Entity;)V applyTargetPosAndRot
	b (Lnet/minecraft/world/entity/Entity;)V applyLerpStep
bip$k net/minecraft/world/entity/Display$RenderState
	a transformation
	b billboardConstraints
	c brightnessOverride
	d shadowRadius
	e shadowStrength
	f glowColorOverride
	a ()Lnet/minecraft/world/entity/Display$GenericInterpolator; transformation
	b ()Lnet/minecraft/world/entity/Display$BillboardConstraints; billboardConstraints
	c ()I brightnessOverride
	d ()Lnet/minecraft/world/entity/Display$FloatInterpolator; shadowRadius
	e ()Lnet/minecraft/world/entity/Display$FloatInterpolator; shadowStrength
	f ()I glowColorOverride
bip$l$e net/minecraft/world/entity/Display$TextDisplay$TextRenderState
	a text
	b lineWidth
	c textOpacity
	d backgroundColor
	e flags
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; text
	b ()I lineWidth
	c ()Lnet/minecraft/world/entity/Display$IntInterpolator; textOpacity
	d ()Lnet/minecraft/world/entity/Display$IntInterpolator; backgroundColor
	e ()B flags
bip$m net/minecraft/world/entity/Display$TransformationInterpolator
	a previous
	b current
	a ()Lcom/mojang/math/Transformation; previous
	a (F)Lcom/mojang/math/Transformation; get
	b ()Lcom/mojang/math/Transformation; current
bis net/minecraft/world/entity/EntityEvent
	A PERMISSION_LEVEL_OWNERS
	B ATTACK_BLOCKED
	C SHIELD_DISABLED
	D FISHING_ROD_REEL_IN
	E ARMORSTAND_WOBBLE
	F STOP_OFFER_FLOWER
	G TALISMAN_ACTIVATE
	H DOLPHIN_LOOKING_FOR_TREASURE
	I RAVAGER_STUNNED
	J TRUSTING_FAILED
	K TRUSTING_SUCCEEDED
	L VILLAGER_SWEAT
	M BAD_OMEN_TRIGGERED
	N FOX_EAT
	O TELEPORT
	P MAINHAND_BREAK
	Q OFFHAND_BREAK
	R HEAD_BREAK
	S CHEST_BREAK
	T LEGS_BREAK
	U FEET_BREAK
	V HONEY_SLIDE
	W HONEY_JUMP
	X SWAP_HANDS
	Y CANCEL_SHAKE_WETNESS
	Z START_RAM
	a JUMP
	aa END_RAM
	ab POOF
	ac TENDRILS_SHIVER
	ad SONIC_CHARGE
	ae SNIFFER_DIGGING_SOUND
	b DEATH
	c START_ATTACKING
	d STOP_ATTACKING
	e TAMING_FAILED
	f TAMING_SUCCEEDED
	g SHAKE_WETNESS
	h USE_ITEM_COMPLETE
	i EAT_GRASS
	j OFFER_FLOWER
	k LOVE_HEARTS
	l VILLAGER_ANGRY
	m VILLAGER_HAPPY
	n WITCH_HAT_MAGIC
	o ZOMBIE_CONVERTING
	p FIREWORKS_EXPLODE
	q IN_LOVE_HEARTS
	r SQUID_ANIM_SYNCH
	s SILVERFISH_MERGE_ANIM
	t GUARDIAN_ATTACK_SOUND
	u REDUCED_DEBUG_INFO
	v FULL_DEBUG_INFO
	w PERMISSION_LEVEL_ALL
	x PERMISSION_LEVEL_MODERATORS
	y PERMISSION_LEVEL_GAMEMASTERS
	z PERMISSION_LEVEL_ADMINS
biu$b net/minecraft/world/entity/EntityType$EntityFactory
bj$a net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance
	a effects
	b source
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lbq$a;)Lnet/minecraft/advancements/Criterion; gotEffectsFrom
	a (Lcm$a;)Lnet/minecraft/advancements/Criterion; hasEffects
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
bjg$a net/minecraft/world/entity/LivingEntity$Fallsounds
	a small
	b big
	a ()Lnet/minecraft/sounds/SoundEffect; small
	b ()Lnet/minecraft/sounds/SoundEffect; big
bk$a net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance
	a item
	b levels
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/item/ItemStack;I)Z matches
	c ()Lnet/minecraft/advancements/Criterion; enchantedItem
bka$a net/minecraft/world/entity/SpawnPlacements$Data
	a heightMap
	b placement
	c predicate
bka$b net/minecraft/world/entity/SpawnPlacements$SpawnPredicate
bkg$a net/minecraft/world/entity/ai/Brain$MemoryValue
	a type
	b value
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V serialize
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)V setMemoryInternal
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)Lbkg$a; createUnchecked
bkg$b net/minecraft/world/entity/ai/Brain$Provider
	a memoryTypes
	b sensorTypes
	c codec
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
bkq$a net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry
	a MIN_INTERVAL_INCREASE
	b MAX_INTERVAL_INCREASE
	c MAX_RETRY_PATHFINDING_INTERVAL
	d random
	e previousAttemptTimestamp
	f nextScheduledAttemptTimestamp
	g currentDelay
	a (J)V markAttempt
	b (J)Z isStillValid
	c (J)Z shouldRetry
bm$a net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance
	a block
	b state
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/Criterion; entersBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z matches
bma$a net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos$PossibleJump
	a jumpTarget
	b ()Lnet/minecraft/core/BlockPosition; getJumpTarget
bml$a net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$RamCandidate
	a startPosition
	b targetPosition
	c target
	a ()Lnet/minecraft/core/BlockPosition; getStartPosition
	b ()Lnet/minecraft/core/BlockPosition; getTargetPosition
	c ()Lnet/minecraft/world/entity/EntityLiving; getTarget
bmw$a net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes$Ticker
	a interval
	b ticksUntilNextStart
	a (Lnet/minecraft/util/RandomSource;)Z tickDownAndCheck
bn$a net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder
	a head
	b chest
	c legs
	d feet
	e mainhand
	f offhand
	a ()Lbn$a; equipment
	a (Lcb$a;)Lbn$a; head
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionEntityEquipment; build
	b (Lcb$a;)Lbn$a; chest
	c (Lcb$a;)Lbn$a; legs
	d (Lcb$a;)Lbn$a; feet
	e (Lcb$a;)Lbn$a; mainhand
	f (Lcb$a;)Lbn$a; offhand
bnf$a net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry
	a data
	b weight
	c randWeight
	a ()Ljava/lang/Object; getData
	a (F)V setRandom
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	b ()I getWeight
	c ()D getRandWeight
bo$a net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder
	a isOnFire
	b isCrouching
	c isSprinting
	d isSwimming
	e isBaby
	a ()Lbo$a; flags
	a (Ljava/lang/Boolean;)Lbo$a; setOnFire
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionEntityFlags; build
	b (Ljava/lang/Boolean;)Lbo$a; setCrouching
	c (Ljava/lang/Boolean;)Lbo$a; setSprinting
	d (Ljava/lang/Boolean;)Lbo$a; setSwimming
	e (Ljava/lang/Boolean;)Lbo$a; setIsBaby
boj$a net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Constant
boj$b net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance
	a (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; ap2
	a (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; ap3
	a (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; ap4
	a (Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; point
	a (Ljava/util/function/Function;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; map
	a (Ljava/util/function/Supplier;Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; point
	a (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;)Ljava/util/Optional; tryGet
	a (Lnet/minecraft/world/entity/ai/behavior/declarative/Trigger;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; ifTriggered
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; registered
	b (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;)Ljava/lang/Object; get
	b (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; present
	c (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; absent
boj$b$a net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$Mu
boj$c net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Mu
boj$d net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$PureMemory
boj$e net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWithResult
	a ()Ljava/lang/String; debugString
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Ljava/lang/Object; tryTrigger
boj$f net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWrapper
bol$a net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Absent
	a memory
	a ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; memory
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; createAccessor
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; condition
bol$b net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Present
	a memory
	a ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; memory
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; createAccessor
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; condition
bol$c net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Registered
	a memory
	a ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; memory
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; createAccessor
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; condition
bp$a net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance
	a damage
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lbe$a;)Lnet/minecraft/advancements/Criterion; entityHurtPlayer
	a (Lnet/minecraft/advancements/critereon/CriterionConditionDamage;)Lnet/minecraft/advancements/Criterion; entityHurtPlayer
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z matches
	c ()Lnet/minecraft/advancements/Criterion; entityHurtPlayer
bq$a net/minecraft/advancements/critereon/EntityPredicate$Builder
	a entityType
	b distanceToPlayer
	c location
	d steppingOnLocation
	e effects
	f nbt
	g flags
	h equipment
	i subPredicate
	j vehicle
	k passenger
	l targetedEntity
	m team
	a ()Lbq$a; entity
	a (Lbn$a;)Lbq$a; equipment
	a (Lbo$a;)Lbq$a; flags
	a (Lbq$a;)Lbq$a; vehicle
	a (Lcj$a;)Lbq$a; located
	a (Lcm$a;)Lbq$a; effects
	a (Ljava/lang/String;)Lbq$a; team
	a (Lnet/minecraft/advancements/critereon/CriterionConditionDistance;)Lbq$a; distance
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntityEquipment;)Lbq$a; equipment
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntityType;)Lbq$a; entityType
	a (Lnet/minecraft/advancements/critereon/CriterionConditionNBT;)Lbq$a; nbt
	a (Lnet/minecraft/advancements/critereon/EntitySubPredicate;)Lbq$a; subPredicate
	a (Lnet/minecraft/tags/TagKey;)Lbq$a; of
	a (Lnet/minecraft/world/entity/EntityTypes;)Lbq$a; of
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionEntity; build
	b (Lbq$a;)Lbq$a; passenger
	b (Lcj$a;)Lbq$a; steppingOn
	c (Lbq$a;)Lbq$a; targetedEntity
br$a net/minecraft/advancements/critereon/EntitySubPredicate$Type
	a codec
	a ()Lcom/mojang/serialization/MapCodec; codec
br$b net/minecraft/advancements/critereon/EntitySubPredicate$Types
	a ANY
	b LIGHTNING
	c FISHING_HOOK
	d PLAYER
	e SLIME
	f CAT
	g FROG
	h AXOLOTL
	i BOAT
	j FOX
	k MOOSHROOM
	l PAINTING
	m RABBIT
	n HORSE
	o LLAMA
	p VILLAGER
	q PARROT
	r TROPICAL_FISH
	s TYPES
	t TYPE_CODEC
bsd$a net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips
	a entries
	a ()V decay
	a (Ljava/util/UUID;)Ljava/util/stream/Stream; unpack
	a (Ljava/util/function/Predicate;)I weightedValue
	a (Lnet/minecraft/world/entity/ai/gossip/ReputationType;)V makeSureValueIsntTooLowOrTooHigh
	b ()Z isEmpty
	b (Lnet/minecraft/world/entity/ai/gossip/ReputationType;)V remove
bsd$b net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry
	a CODEC
	b LIST_CODEC
	c target
	d type
	e value
	a ()I weightedValue
	b ()Ljava/util/UUID; target
	c ()Lnet/minecraft/world/entity/ai/gossip/ReputationType; type
	d ()I value
bt$a net/minecraft/advancements/critereon/EntityVariantPredicate$SubPredicate
	b type
	c getter
	d variant
	a ()Lbr$a; type
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Z matches
	b ()Ljava/util/function/Function; getter
	c ()Ljava/lang/Object; variant
bu$a net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance
	a item
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lcb$a;)Lnet/minecraft/advancements/Criterion; filledBucket
	a (Lnet/minecraft/world/item/ItemStack;)Z matches
buf$a net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker
	b levels
	a ()V runAllUpdates
	a (JI)V setLevel
	b (J)I getLevelFromSource
	c (J)I getLevel
buo$a net/minecraft/world/entity/animal/AbstractFish$FishMoveControl
	l fish
	a ()V tick
buo$b net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal
	i fish
	a ()Z canUse
buq$a net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData
	a leader
bus$a net/minecraft/world/entity/animal/Bee$BaseBeeGoal
	a ()Z canUse
	b ()Z canContinueToUse
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
bus$b net/minecraft/world/entity/animal/Bee$BeeAttackGoal
	a ()Z canUse
	b ()Z canContinueToUse
bus$c net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal
	a ()Z canUse
	b ()Z canContinueToUse
	i ()Z beeCanTarget
bus$d net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal
	c ()V start
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
bus$e net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal
	b MAX_TRAVELLING_TICKS
	d travellingTicks
	e MAX_BLACKLISTED_TARGETS
	f blacklistedTargets
	g lastPath
	h TICKS_BEFORE_HIVE_DROP
	i ticksStuck
	a ()Z canUse
	a (Lnet/minecraft/core/BlockPosition;)Z pathfindDirectlyTowards
	b ()Z canContinueToUse
	b (Lnet/minecraft/core/BlockPosition;)Z isTargetBlacklisted
	c ()V start
	c (Lnet/minecraft/core/BlockPosition;)V blacklistTarget
	d ()V stop
	d (Lnet/minecraft/core/BlockPosition;)Z hasReachedTarget
	e ()V tick
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	k ()V clearBlacklist
	l ()V dropAndBlacklistHive
	m ()V dropHive
bus$f net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal
	c MAX_TRAVELLING_TICKS
	d travellingTicks
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	k ()Z wantsToGoToKnownFlower
bus$g net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal
	b GROW_CHANCE
	e ()V tick
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
bus$h net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityLiving;)V alertOther
	b ()Z canContinueToUse
bus$i net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal
	c ()V start
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	k ()Ljava/util/List; findNearbyHivesWithSpace
bus$j net/minecraft/world/entity/animal/Bee$BeeLookControl
	a ()V tick
	c ()Z resetXRotOnTick
bus$k net/minecraft/world/entity/animal/Bee$BeePollinateGoal
	c MIN_POLLINATION_TICKS
	d MIN_FIND_FLOWER_RETRY_COOLDOWN
	e MAX_FIND_FLOWER_RETRY_COOLDOWN
	f VALID_POLLINATION_BLOCKS
	g ARRIVAL_THRESHOLD
	h POSITION_CHANGE_CHANCE
	i SPEED_MODIFIER
	j HOVER_HEIGHT_WITHIN_FLOWER
	k HOVER_POS_OFFSET
	l successfulPollinatingTicks
	m lastSoundPlayedTick
	n pollinating
	o hoverPos
	p pollinatingTicks
	q MAX_POLLINATING_TICKS
	Q_ ()Z requiresUpdateEveryTick
	a (Ljava/util/function/Predicate;D)Ljava/util/Optional; findNearestBlock
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	k ()Z hasPollinatedLongEnough
	l ()Z isPollinating
	m ()V stopPollinating
	n ()V setWantedPos
	o ()F getOffset
	p ()Ljava/util/Optional; findNearbyFlower
bus$l net/minecraft/world/entity/animal/Bee$BeeWanderGoal
	b WANDER_THRESHOLD
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	h ()Lnet/minecraft/world/phys/Vec3D; findPos
buu$a net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal
	i cat
	a ()Z canUse
	b ()Z canContinueToUse
buu$b net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal
	a cat
	b ownerPlayer
	c goalPos
	d onBedTicks
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z spaceIsOccupied
	i ()V giveMorningGift
buz$a net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal
	a dolphin
	b stuck
	P_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
buz$b net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal
	a dolphin
	b speedModifier
	c player
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
buz$c net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal
	b cooldown
	a ()Z canUse
	a (Lnet/minecraft/world/item/ItemStack;)V drop
	c ()V start
	d ()V stop
	e ()V tick
bvb$a net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal
	j trustedLastHurtBy
	k trustedLastHurt
	l timestamp
	a ()Z canUse
	c ()V start
bvb$b net/minecraft/world/entity/animal/Fox$FaceplantGoal
	a countdown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bvb$c net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector
	a (Lnet/minecraft/world/entity/EntityLiving;)Z test
bvb$d net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal
	b alertableTargeting
	h ()Z hasShelter
	i ()Z alertable
bvb$e net/minecraft/world/entity/animal/Fox$FoxBreedGoal
	c ()V start
	g ()V breed
bvb$f net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal
	g ticksWaited
	i WAIT_TICKS
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	a (Lnet/minecraft/world/level/block/state/IBlockData;)V pickGlowBerry
	b (Lnet/minecraft/world/level/block/state/IBlockData;)V pickSweetBerries
	c ()V start
	e ()V tick
	i ()D acceptedDistance
	l ()Z shouldRecalculatePath
	o ()V onReachedTarget
bvb$g net/minecraft/world/entity/animal/Fox$FoxFloatGoal
	a ()Z canUse
	c ()V start
bvb$h net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal
	e fox
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bvb$i net/minecraft/world/entity/animal/Fox$FoxGroupData
	a type
bvb$j net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal
	a ()Z canUse
	b ()Z canContinueToUse
bvb$k net/minecraft/world/entity/animal/Fox$FoxLookControl
	a ()V tick
	c ()Z resetXRotOnTick
bvb$l net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityLiving;)V checkAndPerformAttack
	c ()V start
bvb$m net/minecraft/world/entity/animal/Fox$FoxMoveControl
	a ()V tick
bvb$n net/minecraft/world/entity/animal/Fox$FoxPanicGoal
	h ()Z shouldPanic
bvb$o net/minecraft/world/entity/animal/Fox$FoxPounceGoal
	P_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bvb$p net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal
	a ()Z canUse
	c ()V start
	e ()V tick
bvb$q net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	h ()Z canFoxMove
bvb$r net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal
	c relX
	d relZ
	e lookTime
	f looksRemaining
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	k ()V resetLook
bvb$s net/minecraft/world/entity/animal/Fox$SeekShelterGoal
	c interval
	a ()Z canUse
	c ()V start
bvb$t net/minecraft/world/entity/animal/Fox$SleepGoal
	c WAIT_TIME_BEFORE_SLEEP
	d countdown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	k ()Z canSleep
bvb$u net/minecraft/world/entity/animal/Fox$StalkPreyGoal
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bvf$a net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal
	i ocelot
	a ()Z canUse
	b ()Z canContinueToUse
bvf$b net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal
	c ocelot
	h ()Z canScare
bvg$b net/minecraft/world/entity/animal/Panda$PandaAttackGoal
	b panda
	a ()Z canUse
bvg$c net/minecraft/world/entity/animal/Panda$PandaAvoidGoal
	i panda
	a ()Z canUse
bvg$d net/minecraft/world/entity/animal/Panda$PandaBreedGoal
	d panda
	e unhappyCooldown
	a ()Z canUse
	h ()Z canFindBamboo
bvg$e net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal
	a panda
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityLiving;)V alertOther
	b ()Z canContinueToUse
bvg$f net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal
	a panda
	b cooldown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
bvg$g net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal
	h panda
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	b ()Z canContinueToUse
	e ()V tick
bvg$h net/minecraft/world/entity/animal/Panda$PandaMoveControl
	l panda
	a ()V tick
bvg$i net/minecraft/world/entity/animal/Panda$PandaPanicGoal
	h panda
	b ()Z canContinueToUse
	h ()Z shouldPanic
bvg$j net/minecraft/world/entity/animal/Panda$PandaRollGoal
	a panda
	P_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bvg$k net/minecraft/world/entity/animal/Panda$PandaSitGoal
	b cooldown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bvg$l net/minecraft/world/entity/animal/Panda$PandaSneezeGoal
	a panda
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bvh$a net/minecraft/world/entity/animal/Parrot$ParrotWanderGoal
	h ()Lnet/minecraft/world/phys/Vec3D; getPosition
	k ()Lnet/minecraft/world/phys/Vec3D; getTreePos
bvj$a net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal
	a ()Z canUse
	l ()D getFollowDistance
bvj$b net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityLiving;)V alertOther
	c ()V start
bvj$c net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal
	a (Lnet/minecraft/world/entity/EntityLiving;)V checkAndPerformAttack
	d ()V stop
bvj$d net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal
	h ()Z shouldPanic
bvk$a net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal
	a fish
	a ()Z canUse
	c ()V start
	d ()V stop
bvq$a net/minecraft/world/entity/animal/Squid$SquidFleeGoal
	b SQUID_FLEE_SPEED
	c SQUID_FLEE_MIN_DISTANCE
	d SQUID_FLEE_MAX_DISTANCE
	e fleeTicks
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	c ()V start
	e ()V tick
bvr$c net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData
	b variant
bvr$d net/minecraft/world/entity/animal/TropicalFish$Variant
	a pattern
	b baseColor
	c patternColor
	a ()I getPackedId
	b ()Lnet/minecraft/world/entity/animal/EntityTropicalFish$Variant; pattern
	c ()Lnet/minecraft/world/item/EnumColor; baseColor
	d ()Lnet/minecraft/world/item/EnumColor; patternColor
bvs$a net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal
	d turtle
	a ()Z canUse
	g ()V breed
bvs$b net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal
	a turtle
	b speedModifier
	c stuck
	d closeToHomeTryTicks
	e GIVE_UP_TICKS
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bvs$c net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal
	g GIVE_UP_TICKS
	h turtle
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	l ()Z shouldRecalculatePath
bvs$d net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal
	g turtle
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	e ()V tick
bvs$e net/minecraft/world/entity/animal/Turtle$TurtleMoveControl
	l turtle
	a ()V tick
	g ()V updateSpeed
bvs$f net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal
	a ()Z canUse
bvs$g net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation
	a (Lnet/minecraft/core/BlockPosition;)Z isStableDestination
bvs$h net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal
	i turtle
	a ()Z canUse
bvs$i net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal
	a turtle
	b speedModifier
	c stuck
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bvu$a net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal
	j wolf
	a ()Z canUse
	a (Lnet/minecraft/world/entity/animal/horse/EntityLlama;)Z avoidLlama
	c ()V start
	e ()V tick
bvu$b net/minecraft/world/entity/animal/Wolf$WolfPanicGoal
	h ()Z shouldPanic
bvv$a net/minecraft/world/entity/animal/allay/Allay$JukeboxListener
	b listenerSource
	c listenerRadius
	a ()Lnet/minecraft/world/level/gameevent/PositionSource; getListenerSource
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEvent;Ldjt$a;Lnet/minecraft/world/phys/Vec3D;)Z handleGameEvent
	b ()I getListenerRadius
bvv$b net/minecraft/world/entity/animal/allay/Allay$VibrationUser
	b VIBRATION_EVENT_LISTENER_RANGE
	c positionSource
	a ()I getListenerRadius
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Ldjt$a;)Z canReceiveVibration
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V onReceiveVibration
	b ()Lnet/minecraft/world/level/gameevent/PositionSource; getPositionSource
	c ()Lnet/minecraft/tags/TagKey; getListenableEvents
bvy$a net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlGroupData
	a types
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; getVariant
bvy$b net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlLookControl
	a ()V tick
bvy$c net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlMoveControl
	l axolotl
	a ()V tick
bw$a net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance
	a rod
	b entity
	c item
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; fishedItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;Ljava/util/Collection;)Z matches
bwd$a net/minecraft/world/entity/animal/camel/Camel$CamelBodyRotationControl
	a ()V clientTick
bwd$b net/minecraft/world/entity/animal/camel/Camel$CamelLookControl
	a ()V tick
bwd$c net/minecraft/world/entity/animal/camel/Camel$CamelMoveControl
	a ()V tick
bwe$a net/minecraft/world/entity/animal/camel/CamelAi$CamelPanic
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
bwe$b net/minecraft/world/entity/animal/camel/CamelAi$RandomSitting
	c minimalPoseTicks
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/camel/Camel;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/camel/Camel;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
bwg$a net/minecraft/world/entity/animal/frog/Frog$FrogLookControl
	c ()Z resetXRotOnTick
bwg$b net/minecraft/world/entity/animal/frog/Frog$FrogNodeEvaluator
	l belowPos
	a ()Lnet/minecraft/world/level/pathfinder/PathPoint; getStart
	a (Lnet/minecraft/world/level/IBlockAccess;III)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
bwg$c net/minecraft/world/entity/animal/frog/Frog$FrogPathNavigation
	a (I)Lnet/minecraft/world/level/pathfinder/Pathfinder; createPathFinder
	b (Lnet/minecraft/world/level/pathfinder/PathType;)Z canCutCorner
bwi$a net/minecraft/world/entity/animal/frog/ShootTongue$State
	a MOVE_TO_TARGET
	b CATCH_ANIMATION
	c EAT_ANIMATION
	d DONE
	e $VALUES
	a ()[Lbwi$a; $values
bws$a net/minecraft/world/entity/animal/horse/Horse$HorseGroupData
	a variant
bwt$a net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal
	l ()D getFollowDistance
bwt$b net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData
	a variant
bwt$c net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal
	b ()Z canContinueToUse
bwy$a net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal
	a llama
	b ownerLastHurtBy
	c timestamp
	a ()Z canUse
	c ()V start
bx$a net/minecraft/advancements/critereon/FluidPredicate$Builder
	a fluid
	b fluids
	c properties
	a ()Lbx$a; fluid
	a (Lnet/minecraft/advancements/critereon/CriterionTriggerProperties;)Lbx$a; setProperties
	a (Lnet/minecraft/tags/TagKey;)Lbx$a; of
	a (Lnet/minecraft/world/level/material/FluidType;)Lbx$a; of
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionFluid; build
bxe$a net/minecraft/world/entity/animal/sniffer/SnifferAi$Digging
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
bxe$b net/minecraft/world/entity/animal/sniffer/SnifferAi$FeelingHappy
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
bxe$c net/minecraft/world/entity/animal/sniffer/SnifferAi$FinishedDigging
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
bxe$d net/minecraft/world/entity/animal/sniffer/SnifferAi$Scenting
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
bxe$e net/minecraft/world/entity/animal/sniffer/SnifferAi$Searching
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
bxe$f net/minecraft/world/entity/animal/sniffer/SnifferAi$Sniffing
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
by$a net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance
	a ()Lcom/google/gson/JsonObject; serializeToJson
byb$a net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal
	a ()Z canUse
byq$a net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose
	a CROSSED
	b ATTACKING
	c SPELLCASTING
	d BOW_AND_ARROW
	e CROSSBOW_HOLD
	f CROSSBOW_CHARGE
	g CELEBRATING
	h NEUTRAL
	i $VALUES
	a ()[Lbyq$a; $values
byq$b net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal
	a ()Z canUse
byw$a net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal
	b drowned
	a ()Z canUse
	b ()Z canContinueToUse
byw$b net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal
	g drowned
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
byw$c net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f level
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	h ()Lnet/minecraft/world/phys/Vec3D; getWaterPos
byw$d net/minecraft/world/entity/monster/Drowned$DrownedMoveControl
	l drowned
	a ()V tick
byw$e net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal
	a drowned
	b speedModifier
	c seaLevel
	d stuck
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
byw$f net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal
	a drowned
	a ()Z canUse
	c ()V start
	d ()V stop
byy$a net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt
	a enderman
	b target
	a ()Z canUse
	c ()V start
	e ()V tick
bz$a net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance
	a slotsOccupied
	b slotsFull
	c slotsEmpty
	d predicates
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/entity/player/PlayerInventory;Lnet/minecraft/world/item/ItemStack;III)Z matches
	a ([Lcb$a;)Lnet/minecraft/advancements/Criterion; hasItems
	a ([Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Lnet/minecraft/advancements/Criterion; hasItems
	a ([Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/advancements/Criterion; hasItems
bzb$a net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal
	a (DDDDFI)V createSpellEntity
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lnet/minecraft/sounds/SoundEffect; getSpellPrepareSound
	m ()Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; getSpell
bzb$b net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal
	e ()V tick
bzb$c net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal
	e vexCountTargeting
	a ()Z canUse
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lnet/minecraft/sounds/SoundEffect; getSpellPrepareSound
	m ()Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; getSpell
bzb$d net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal
	e wololoTargeting
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lnet/minecraft/sounds/SoundEffect; getSpellPrepareSound
	m ()Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; getSpell
	n ()I getCastWarmupTime
bzg$a net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal
	e lastTargetId
	a ()Z canUse
	c ()V start
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lnet/minecraft/sounds/SoundEffect; getSpellPrepareSound
	m ()Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; getSpell
bzg$b net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal
	a ()Z canUse
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lnet/minecraft/sounds/SoundEffect; getSpellPrepareSound
	m ()Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; getSpell
bzj$a net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal
	a NAVIGATION_FAILED_COOLDOWN
	b mob
	c speedModifier
	d leaderSpeedModifier
	e cooldownUntil
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Ljava/util/List; findPatrolCompanions
	i ()Z moveRandomly
bzk$b net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal
	b attackTargeting
	c nextScanTick
	a ()Z canUse
	b ()Z canContinueToUse
bzk$c net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal
	b nextSweepTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()V setAnchorAboveTarget
bzk$d net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl
	a ()V clientTick
bzk$e net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal
	c angle
	d distance
	e height
	f clockwise
	a ()Z canUse
	c ()V start
	e ()V tick
	i ()V selectNext
bzk$f net/minecraft/world/entity/monster/Phantom$PhantomLookControl
	a ()V tick
bzk$g net/minecraft/world/entity/monster/Phantom$PhantomMoveControl
	m speed
	a ()V tick
bzk$h net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal
	h ()Z touchingTarget
bzk$i net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal
	c CAT_SEARCH_TICK_DELAY
	d isScaredOfCat
	e catSearchTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bzo$a net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal
	b attackTime
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bzo$b net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl
	a ()V clientTick
bzo$c net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal
	a ()Z canUse
	a (D)Lnet/minecraft/world/phys/AxisAlignedBB; getTargetSearchArea
bzo$d net/minecraft/world/entity/monster/Shulker$ShulkerLookControl
	b ()V clampHeadRotationToBody
	h ()Ljava/util/Optional; getXRotD
	i ()Ljava/util/Optional; getYRotD
bzo$e net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal
	a ()Z canUse
	a (D)Lnet/minecraft/world/phys/AxisAlignedBB; getTargetSearchArea
bzo$f net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal
	b peekTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bzs$b net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bzv$a net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal
	g strider
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	k ()Lnet/minecraft/core/BlockPosition; getMoveToTarget
	l ()Z shouldRecalculatePath
bzv$b net/minecraft/world/entity/monster/Strider$StriderPathNavigation
	a (I)Lnet/minecraft/world/level/pathfinder/Pathfinder; createPathFinder
	a (Lnet/minecraft/core/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/world/level/pathfinder/PathType;)Z hasValidPathType
bzw$a net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bzw$b net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal
	b copyOwnerTargeting
	a ()Z canUse
	c ()V start
bzw$c net/minecraft/world/entity/monster/Vex$VexMoveControl
	a ()V tick
bzw$d net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
bzx$a net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bzx$b net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal
	a ()Z canUse
	c ()V start
c com/mojang/math/Divisor
	a denominator
	b quotient
	c mod
	d returnedParts
	e remainder
	a (II)Ljava/lang/Iterable; asIterable
ca$a net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance
	a item
	b durability
	c delta
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Ljava/util/Optional;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lnet/minecraft/advancements/Criterion; changedDurability
	a (Ljava/util/Optional;Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lnet/minecraft/advancements/Criterion; changedDurability
	a (Lnet/minecraft/world/item/ItemStack;I)Z matches
cab$a net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V playDestroyProgressSound
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V playBreakSound
	i ()D acceptedDistance
cax$a net/minecraft/world/entity/monster/warden/AngerManagement$Sorter
	a angerManagement
	a ()Lnet/minecraft/world/entity/monster/warden/AngerManagement; angerManagement
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)I compare
cay$a net/minecraft/world/entity/monster/warden/Warden$VibrationUser
	b GAME_EVENT_LISTENER_RANGE
	c positionSource
	a ()I getListenerRadius
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Ldjt$a;)Z canReceiveVibration
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V onReceiveVibration
	b ()Lnet/minecraft/world/level/gameevent/PositionSource; getPositionSource
	c ()Lnet/minecraft/tags/TagKey; getListenableEvents
	d ()Z canTriggerAvoidVibration
cb$a net/minecraft/advancements/critereon/ItemPredicate$Builder
	a enchantments
	b storedEnchantments
	c items
	d tag
	e count
	f durability
	g potion
	h nbt
	a ()Lcb$a; item
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEnchantments;)Lcb$a; hasEnchantment
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lcb$a; withCount
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lcb$a; hasNbt
	a (Lnet/minecraft/tags/TagKey;)Lcb$a; of
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;)Lcb$a; isPotion
	a ([Lnet/minecraft/world/level/IMaterial;)Lcb$a; of
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionItem; build
	b (Lnet/minecraft/advancements/critereon/CriterionConditionEnchantments;)Lcb$a; hasStoredEnchantment
	b (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lcb$a; hasDurability
cbl$a net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds
	a item
	b value
	c maxUses
	d villagerXp
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/ItemDye; getRandomDye
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
cbl$b net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems
	a itemStack
	b maxUses
	c villagerXp
	d emeraldAmount
	e priceMultiplier
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
cbl$c net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem
	a trades
	b cost
	c maxUses
	d villagerXp
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
cbl$d net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds
	a villagerXp
	b tradeableEnchantments
	c minLevel
	d maxLevel
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
cbl$e net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds
	a itemStack
	b baseEmeraldCost
	c maxUses
	d villagerXp
	e priceMultiplier
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
cbl$f net/minecraft/world/entity/npc/VillagerTrades$FailureItemListing
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
cbl$h net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems
	a fromItem
	b emeraldCost
	c toItem
	d maxUses
	e villagerXp
	f priceMultiplier
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
cbl$i net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds
	a itemStack
	b emeraldCost
	c maxUses
	d villagerXp
	e priceMultiplier
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
cbl$j net/minecraft/world/entity/npc/VillagerTrades$SuspiciousStewForEmerald
	a effects
	b xp
	c priceMultiplier
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
cbl$k net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds
	a toItem
	b toCount
	c emeraldCost
	d maxUses
	e villagerXp
	f fromItem
	g fromCount
	h priceMultiplier
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
cbl$l net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds
	a emeraldCost
	b destination
	c displayName
	d destinationType
	e maxUses
	f villagerXp
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
cbl$m net/minecraft/world/entity/npc/VillagerTrades$TypeSpecificTrade
	a trades
	a ()Ljava/util/Map; trades
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
	a (Lnet/minecraft/world/entity/npc/VillagerTrades$IMerchantRecipeOption;[Lnet/minecraft/world/entity/npc/VillagerType;)Lcbl$m; oneTradeInBiomes
cbn$a net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal
	a trader
	b stopDistance
	c speedModifier
	a ()Z canUse
	a (Lnet/minecraft/core/BlockPosition;D)Z isTooFarAway
	d ()V stop
	e ()V tick
cbw net/minecraft/world/entity/player/ProfileKeyPair
	a CODEC
	b privateKey
	c publicKey
	d refreshedAfter
	a ()Z dueRefresh
	b ()Ljava/security/PrivateKey; privateKey
	c ()Lnet/minecraft/world/entity/player/ProfilePublicKey; publicKey
	d ()Ljava/time/Instant; refreshedAfter
cbx$a net/minecraft/world/entity/player/ProfilePublicKey$Data
	a CODEC
	b expiresAt
	c key
	d keySignature
	e MAX_KEY_SIGNATURE_SIZE
	a ()Z hasExpired
	a (Ljava/time/Duration;)Z hasExpired
	a (Ljava/util/UUID;)[B signedPayload
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/util/SignatureValidator;Ljava/util/UUID;)Z validateSignature
	b ()Ljava/time/Instant; expiresAt
	c ()Ljava/security/PublicKey; key
	d ()[B keySignature
cbx$b net/minecraft/world/entity/player/ProfilePublicKey$ValidationException
cby$a net/minecraft/world/entity/player/StackedContents$RecipePicker
	b recipe
	c ingredients
	d ingredientCount
	e items
	f itemCount
	g data
	h path
	a ()[I getUniqueAvailableIngredientItems
	a (I)Z dfs
	a (ILit/unimi/dsi/fastutil/ints/IntList;)Z tryPick
	a (ZI)V visit
	a (ZII)Z hasConnection
	b ()I getMinIngredientCount
	b (I)Z isSatisfied
	b (ILit/unimi/dsi/fastutil/ints/IntList;)I tryPickAll
	b (ZI)Z hasVisited
	b (ZII)Z hasResidual
	c (I)V setSatisfied
	c (ZI)I getVisitedIndex
	c (ZII)V toggleResidual
	d (I)I getSatisfiedIndex
	d (ZII)I getIndex
cc$a net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger$TriggerInstance
	a location
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lcj$a;Lcb$a;)Lnet/minecraft/advancements/Criterion; itemUsedOnBlock
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/Criterion; placedBlock
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
	a ([Lefp$a;)Lnet/minecraft/advancements/Criterion; placedBlock
	b (Lcj$a;Lcb$a;)Lnet/minecraft/advancements/Criterion; allayDropItemOnBlock
	c (Lcj$a;Lcb$a;)Lcc$a; itemUsedOnLocation
cd$a net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance
	a victims
	b uniqueEntityTypes
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Ljava/util/Collection;I)Z matches
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lnet/minecraft/advancements/Criterion; crossbowKilled
	a ([Lbq$a;)Lnet/minecraft/advancements/Criterion; crossbowKilled
cdc$a net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal
	a shoutTargeting
	c mob
	d hostileRadiusSqr
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
cdc$b net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal
	b mob
	a ()Z canUse
	e ()V tick
cdc$c net/minecraft/world/entity/raid/Raider$RaiderCelebration
	b mob
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
cdc$d net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal
	a raider
	b speedModifier
	c poiPos
	d visited
	e distanceToPoi
	f stuck
	a ()Z canUse
	a (Lnet/minecraft/core/BlockPosition;)Z hasNotVisited
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z isValidRaid
	i ()Z hasSuitablePoi
	k ()V updateVisited
cdi$a net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition
	a time
	b activity
	a ()I getTime
	b ()Lnet/minecraft/world/entity/schedule/Activity; getActivity
cdt$a net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase
	e ()Lnet/minecraft/server/level/WorldServer; getLevel
	f ()V onUpdated
	g ()Lnet/minecraft/world/phys/Vec3D; getPosition
	h ()Lnet/minecraft/world/entity/vehicle/EntityMinecartCommandBlock; getMinecart
	i ()Lnet/minecraft/commands/CommandListenerWrapper; createCommandSourceStack
	j ()Z isValid
ce$a net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance
	a entityPredicate
	b killingBlow
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lbq$a;)Lnet/minecraft/advancements/Criterion; playerKilledEntity
	a (Lbq$a;Lbf$a;)Lnet/minecraft/advancements/Criterion; playerKilledEntity
	a (Lbq$a;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; playerKilledEntity
	a (Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; playerKilledEntity
	a (Ljava/util/Optional;Lbf$a;)Lnet/minecraft/advancements/Criterion; playerKilledEntity
	a (Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; playerKilledEntity
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/damagesource/DamageSource;)Z matches
	b (Lbq$a;)Lnet/minecraft/advancements/Criterion; entityKilledPlayer
	b (Lbq$a;Lbf$a;)Lnet/minecraft/advancements/Criterion; entityKilledPlayer
	b (Lbq$a;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; entityKilledPlayer
	b (Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; entityKilledPlayer
	b (Ljava/util/Optional;Lbf$a;)Lnet/minecraft/advancements/Criterion; entityKilledPlayer
	b (Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; entityKilledPlayer
	c ()Lnet/minecraft/advancements/Criterion; playerKilledEntity
	d ()Lnet/minecraft/advancements/Criterion; playerKilledEntityNearSculkCatalyst
	e ()Lnet/minecraft/advancements/Criterion; entityKilledPlayer
ceb$a net/minecraft/world/flag/FeatureFlagRegistry$Builder
	a universe
	b id
	c flags
	a ()Lnet/minecraft/world/flag/FeatureFlagRegistry; build
	a (Ljava/lang/String;)Lnet/minecraft/world/flag/FeatureFlag; createVanilla
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/flag/FeatureFlag; create
ceg net/minecraft/world/food/FoodConstants
	a MAX_FOOD
	b MAX_SATURATION
	c START_SATURATION
	d SATURATION_FLOOR
	e EXHAUSTION_DROP
	f HEALTH_TICK_COUNT
	g HEALTH_TICK_COUNT_SATURATED
	h HEAL_LEVEL
	i SPRINT_LEVEL
	j STARVE_LEVEL
	k FOOD_SATURATION_POOR
	l FOOD_SATURATION_LOW
	m FOOD_SATURATION_NORMAL
	n FOOD_SATURATION_GOOD
	o FOOD_SATURATION_MAX
	p FOOD_SATURATION_SUPERNATURAL
	q EXHAUSTION_HEAL
	r EXHAUSTION_JUMP
	s EXHAUSTION_SPRINT_JUMP
	t EXHAUSTION_MINE
	u EXHAUSTION_ATTACK
	v EXHAUSTION_WALK
	w EXHAUSTION_CROUCH
	x EXHAUSTION_SPRINT
	y EXHAUSTION_SWIM
cei$a net/minecraft/world/food/FoodProperties$Builder
	a nutrition
	b saturationModifier
	c isMeat
	d canAlwaysEat
	e fastFood
	f effects
	a ()Lcei$a; meat
	a (F)Lcei$a; saturationMod
	a (I)Lcei$a; nutrition
	a (Lnet/minecraft/world/effect/MobEffect;F)Lcei$a; effect
	b ()Lcei$a; alwaysEat
	c ()Lcei$a; fast
	d ()Lnet/minecraft/world/food/FoodInfo; build
ceq$a net/minecraft/world/inventory/BrewingStandMenu$FuelSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	b (Lnet/minecraft/world/item/ItemStack;)Z mayPlaceItem
cf$a net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance
	a distance
	b duration
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/advancements/critereon/CriterionConditionDistance;)Lnet/minecraft/advancements/Criterion; levitated
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/phys/Vec3D;I)Z matches
cfm$a net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder
	a slots
	b resultSlot
	a ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; build
	a (III)Lcfm$a; withResultSlot
	a (IIILjava/util/function/Predicate;)Lcfm$a; withSlot
cfm$b net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$SlotDefinition
	a slotIndex
	b x
	c y
	d mayPlace
	e EMPTY
	a ()I slotIndex
	b ()I x
	c ()I y
	d ()Ljava/util/function/Predicate; mayPlace
cg$a net/minecraft/advancements/critereon/LightPredicate$Builder
	a composite
	a ()Lcg$a; light
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lcg$a; setComposite
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionLight; build
cgp$a net/minecraft/world/item/ArmorItem$Type
	a HELMET
	b CHESTPLATE
	c LEGGINGS
	d BOOTS
	e slot
	f name
	g $VALUES
	a ()Lnet/minecraft/world/entity/EnumItemSlot; getSlot
	b ()Ljava/lang/String; getName
	c ()[Lcgp$a; $values
chf$a net/minecraft/world/item/BrushItem$DustParticlesDelta
	a xd
	b yd
	c zd
	d ALONG_SIDE_DELTA
	e OUT_FROM_SIDE_DELTA
	a ()D xd
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/core/EnumDirection;)Lchf$a; fromDirection
	b ()D yd
	c ()D zd
chl$a net/minecraft/world/item/CreativeModeTab$Builder
	a EMPTY_GENERATOR
	b row
	c column
	d displayName
	e iconGenerator
	f displayItemsGenerator
	g canScroll
	h showTitle
	i alignedRight
	j type
	k backgroundSuffix
	a ()Lchl$a; alignedRight
	a (Lchl$b;)Lchl$a; displayItems
	a (Lchl$h;)Lchl$a; type
	a (Ljava/lang/String;)Lchl$a; backgroundSuffix
	a (Ljava/util/function/Supplier;)Lchl$a; icon
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lchl$a; title
	b ()Lchl$a; hideTitle
	c ()Lchl$a; noScrollBar
	d ()Lnet/minecraft/world/item/CreativeModeTab; build
chl$b net/minecraft/world/item/CreativeModeTab$DisplayItemsGenerator
chl$c net/minecraft/world/item/CreativeModeTab$ItemDisplayBuilder
	a tabContents
	b searchTabContents
	c tab
	d featureFlagSet
	a (Lnet/minecraft/world/item/ItemStack;Lchl$g;)V accept
chl$d net/minecraft/world/item/CreativeModeTab$ItemDisplayParameters
	a enabledFeatures
	b hasPermissions
	c holders
	a ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	a (Lnet/minecraft/world/flag/FeatureFlagSet;ZLhg$b;)Z needsUpdate
	b ()Z hasPermissions
	c ()Lhg$b; holders
chl$e net/minecraft/world/item/CreativeModeTab$Output
	a (Ljava/util/Collection;)V acceptAll
	a (Ljava/util/Collection;Lchl$g;)V acceptAll
	a (Lnet/minecraft/world/item/ItemStack;)V accept
	a (Lnet/minecraft/world/item/ItemStack;Lchl$g;)V accept
	a (Lnet/minecraft/world/level/IMaterial;)V accept
	a (Lnet/minecraft/world/level/IMaterial;Lchl$g;)V accept
chl$f net/minecraft/world/item/CreativeModeTab$Row
	a TOP
	b BOTTOM
	c $VALUES
	a ()[Lchl$f; $values
chl$g net/minecraft/world/item/CreativeModeTab$TabVisibility
	a PARENT_AND_SEARCH_TABS
	b PARENT_TAB_ONLY
	c SEARCH_TAB_ONLY
	d $VALUES
	a ()[Lchl$g; $values
chl$h net/minecraft/world/item/CreativeModeTab$Type
	a CATEGORY
	b INVENTORY
	c HOTBAR
	d SEARCH
	e $VALUES
	a ()[Lchl$h; $values
ci$a net/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance
	a lightning
	b bystander
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; lightningStrike
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Ljava/util/List;)Z matches
cj$a net/minecraft/advancements/critereon/LocationPredicate$Builder
	a x
	b y
	c z
	d biome
	e structure
	f dimension
	g smokey
	h light
	i block
	j fluid
	a ()Lcj$a; location
	a (Lav$a;)Lcj$a; setBlock
	a (Lbx$a;)Lcj$a; setFluid
	a (Lcg$a;)Lcj$a; setLight
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lcj$a; atYLocation
	a (Lnet/minecraft/resources/ResourceKey;)Lcj$a; inBiome
	a (Z)Lcj$a; setSmokey
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionLocation; build
	b (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lcj$a; setX
	b (Lnet/minecraft/resources/ResourceKey;)Lcj$a; inDimension
	c (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lcj$a; setY
	c (Lnet/minecraft/resources/ResourceKey;)Lcj$a; inStructure
	d (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lcj$a; setZ
	d (Lnet/minecraft/resources/ResourceKey;)Lcj$a; setBiome
	e (Lnet/minecraft/resources/ResourceKey;)Lcj$a; setStructure
	f (Lnet/minecraft/resources/ResourceKey;)Lcj$a; setDimension
cj$b net/minecraft/advancements/critereon/LocationPredicate$PositionPredicate
	a CODEC
	b x
	c y
	d z
	a ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; x
	a (DDD)Z matches
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Ljava/util/Optional; of
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; y
	c ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; z
ck$a net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance
	a lootTable
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/advancements/Criterion; lootTableUsed
	b (Lnet/minecraft/resources/MinecraftKey;)Z matches
ckw$a net/minecraft/world/item/TooltipFlag$Default
	c advanced
	d creative
	a ()Z isAdvanced
	b ()Z isCreative
	c ()Lckw$a; asCreative
	d ()Z advanced
	e ()Z creative
cl$a net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory
cl$b net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory
cm$a net/minecraft/advancements/critereon/MobEffectsPredicate$Builder
	a effectMap
	a ()Lcm$a; effects
	a (Lnet/minecraft/world/effect/MobEffectList;)Lcm$a; and
	a (Lnet/minecraft/world/effect/MobEffectList;Lcm$b;)Lcm$a; and
	b ()Ljava/util/Optional; build
cm$b net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate
	a CODEC
	b amplifier
	c duration
	d ambient
	e visible
	a ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; amplifier
	a (Lnet/minecraft/world/effect/MobEffect;)Z matches
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; duration
	c ()Ljava/util/Optional; ambient
	d ()Ljava/util/Optional; visible
cmg$b net/minecraft/world/item/crafting/Ingredient$TagValue
	b tag
	c CODEC
	a ()Ljava/util/Collection; getItems
	b ()Lnet/minecraft/tags/TagKey; tag
cml$a net/minecraft/world/item/crafting/RecipeManager$CachedCheck
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Ljava/util/Optional; getRecipeFor
cmq$a net/minecraft/world/item/crafting/ShapelessRecipe$Serializer
	x CODEC
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/ShapelessRecipes;)V toNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/ShapelessRecipes; fromNetwork
cmt$a net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker
cmu$a net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer$Factory
cmv$a net/minecraft/world/item/crafting/SingleItemRecipe$Serializer
	x factory
	y RESULT_CODEC
	z codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/RecipeSingleItem;)V toNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/RecipeSingleItem; fromNetwork
cmv$a$a net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker
cmy$a net/minecraft/world/item/crafting/SmithingTransformRecipe$Serializer
	x CODEC
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/SmithingTransformRecipe;)V toNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/SmithingTransformRecipe; fromNetwork
cmz$a net/minecraft/world/item/crafting/SmithingTrimRecipe$Serializer
	x CODEC
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/SmithingTrimRecipe;)V toNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/SmithingTrimRecipe; fromNetwork
cnq$a net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor
co$a net/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance
	a item
	b entity
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; thrownItemPickedUpByPlayer
	a (Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; thrownItemPickedUpByEntity
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
com/mojang/blaze3d/platform/GlStateManager$a com/mojang/blaze3d/platform/GlStateManager$BlendState
	a mode
	b srcRgb
	c dstRgb
	d srcAlpha
	e dstAlpha
com/mojang/blaze3d/platform/GlStateManager$b com/mojang/blaze3d/platform/GlStateManager$BooleanState
	a state
	b enabled
	a ()V disable
	a (Z)V setEnabled
	b ()V enable
com/mojang/blaze3d/platform/GlStateManager$c com/mojang/blaze3d/platform/GlStateManager$ColorLogicState
	a enable
	b op
com/mojang/blaze3d/platform/GlStateManager$d com/mojang/blaze3d/platform/GlStateManager$ColorMask
	a red
	b green
	c blue
	d alpha
com/mojang/blaze3d/platform/GlStateManager$e com/mojang/blaze3d/platform/GlStateManager$CullState
	a enable
	b mode
com/mojang/blaze3d/platform/GlStateManager$f com/mojang/blaze3d/platform/GlStateManager$DepthState
	a mode
	b mask
	c func
com/mojang/blaze3d/platform/GlStateManager$g com/mojang/blaze3d/platform/GlStateManager$LogicOp
	a AND
	b AND_INVERTED
	c AND_REVERSE
	d CLEAR
	e COPY
	f COPY_INVERTED
	g EQUIV
	h INVERT
	i NAND
	j NOOP
	k NOR
	l OR
	m OR_INVERTED
	n OR_REVERSE
	o SET
	p XOR
	q value
	r $VALUES
	a ()[Lcom/mojang/blaze3d/platform/GlStateManager$g; $values
com/mojang/blaze3d/platform/GlStateManager$h com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState
	a fill
	b line
	c factor
	d units
com/mojang/blaze3d/platform/GlStateManager$i com/mojang/blaze3d/platform/GlStateManager$ScissorState
	a mode
com/mojang/blaze3d/platform/GlStateManager$j com/mojang/blaze3d/platform/GlStateManager$StencilFunc
	a func
	b ref
	c mask
com/mojang/blaze3d/platform/GlStateManager$k com/mojang/blaze3d/platform/GlStateManager$StencilState
	a func
	b mask
	c fail
	d zfail
	e zpass
com/mojang/blaze3d/platform/GlStateManager$l com/mojang/blaze3d/platform/GlStateManager$TextureState
	a binding
com/mojang/blaze3d/platform/GlStateManager$m com/mojang/blaze3d/platform/GlStateManager$Viewport
	a INSTANCE
	b x
	c y
	d width
	e height
	f $VALUES
	a ()I x
	b ()I y
	c ()I width
	d ()I height
	e ()[Lcom/mojang/blaze3d/platform/GlStateManager$m; $values
com/mojang/blaze3d/systems/RenderSystem$a com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer
	a vertexStride
	b indexStride
	c generator
	d name
	e type
	f indexCount
	a ()Lelu$a; type
	a (I)Z hasStorage
	a (Ljava/nio/ByteBuffer;)Lit/unimi/dsi/fastutil/ints/IntConsumer; intConsumer
	b (I)V bind
	c (I)V ensureStorage
com/mojang/blaze3d/systems/RenderSystem$a$a com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer$IndexGenerator
com/mojang/math/PointGroupO com/mojang/math/OctahedralGroup
	A INVERT_Y
	B INVERT_Z
	C ROT_60_REF_NNN
	D ROT_60_REF_NNP
	E ROT_60_REF_NPN
	F ROT_60_REF_NPP
	G ROT_60_REF_PNN
	H ROT_60_REF_PNP
	I ROT_60_REF_PPN
	J ROT_60_REF_PPP
	K SWAP_XY
	L SWAP_YZ
	M SWAP_XZ
	N SWAP_NEG_XY
	O SWAP_NEG_YZ
	P SWAP_NEG_XZ
	Q ROT_90_REF_X_NEG
	R ROT_90_REF_X_POS
	S ROT_90_REF_Y_NEG
	T ROT_90_REF_Y_POS
	U ROT_90_REF_Z_NEG
	V ROT_90_REF_Z_POS
	X transformation
	Y name
	Z rotatedDirections
	a IDENTITY
	aa invertX
	ab invertY
	ac invertZ
	ad permutation
	ae cayleyTable
	af inverseTable
	ag $VALUES
	b ROT_180_FACE_XY
	c ROT_180_FACE_XZ
	d ROT_180_FACE_YZ
	e ROT_120_NNN
	f ROT_120_NNP
	g ROT_120_NPN
	h ROT_120_NPP
	i ROT_120_PNN
	j ROT_120_PNP
	k ROT_120_PPN
	l ROT_120_PPP
	m ROT_180_EDGE_XY_NEG
	n ROT_180_EDGE_XY_POS
	o ROT_180_EDGE_XZ_NEG
	p ROT_180_EDGE_XZ_POS
	q ROT_180_EDGE_YZ_NEG
	r ROT_180_EDGE_YZ_POS
	s ROT_90_X_NEG
	t ROT_90_X_POS
	u ROT_90_Y_NEG
	v ROT_90_Y_POS
	w ROT_90_Z_NEG
	x ROT_90_Z_POS
	y INVERSION
	z INVERT_X
	a ()Lcom/mojang/math/PointGroupO; inverse
	a (Lcom/mojang/math/PointGroupO;)Lcom/mojang/math/PointGroupO; compose
	a (Lnet/minecraft/core/BlockPropertyJigsawOrientation;)Lnet/minecraft/core/BlockPropertyJigsawOrientation; rotate
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)Z inverts
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/EnumDirection; rotate
	b ()Lorg/joml/Matrix3f; transformation
	c ()Ljava/lang/String; getSerializedName
	d ()Lit/unimi/dsi/fastutil/booleans/BooleanList; packInversions
	e ()[Lcom/mojang/math/PointGroupO; $values
com/mojang/math/PointGroupS com/mojang/math/SymmetricGroup3
	a P123
	b P213
	c P132
	d P231
	e P312
	f P321
	g permutation
	h transformation
	i ORDER
	j cayleyTable
	k $VALUES
	a ()Lorg/joml/Matrix3f; transformation
	a (I)I permutation
	a (Lcom/mojang/math/PointGroupS;)Lcom/mojang/math/PointGroupS; compose
	b ()[Lcom/mojang/math/PointGroupS; $values
cp$a net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance
	a damage
	b entity
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lbe$a;)Lnet/minecraft/advancements/Criterion; playerHurtEntityWithDamage
	a (Lbe$a;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; playerHurtEntity
	a (Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; playerHurtEntityWithDamage
	a (Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; playerHurtEntity
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z matches
	b (Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; playerHurtEntity
	c ()Lnet/minecraft/advancements/Criterion; playerHurtEntity
cpe$c net/minecraft/world/level/ClipContext$ShapeGetter
cpr$h net/minecraft/world/level/GameRules$VisitorCaller
cpv$a net/minecraft/world/level/Level$ExplosionInteraction
	a NONE
	b BLOCK
	c MOB
	d TNT
	e $VALUES
	a ()[Lcpv$a; $values
cq$a net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance
	a item
	b entity
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lcb$a;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; itemUsedOnEntity
	a (Ljava/util/Optional;Lcb$a;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; itemUsedOnEntity
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
cqf$a net/minecraft/world/level/LocalMobCapCalculator$MobCounts
	a counts
	a (Lnet/minecraft/world/entity/EnumCreatureType;)V add
	b (Lnet/minecraft/world/entity/EnumCreatureType;)Z canSpawn
cqg$a net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback
cqg$b net/minecraft/world/level/NaturalSpawner$ChunkGetter
cqg$c net/minecraft/world/level/NaturalSpawner$SpawnPredicate
cqg$d net/minecraft/world/level/NaturalSpawner$SpawnState
	a spawnableChunkCount
	b mobCategoryCounts
	c spawnPotential
	d unmodifiableMobCategoryCounts
	e localMobCapCalculator
	f lastCheckedPos
	g lastCheckedType
	h lastCharge
	a ()I getSpawnableChunkCount
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/level/chunk/IChunkAccess;)V afterSpawn
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/chunk/IChunkAccess;)Z canSpawn
	a (Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/world/level/ChunkCoordIntPair;)Z canSpawnForCategory
	b ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getMobCategoryCounts
cqj$a net/minecraft/world/level/PotentialCalculator$PointCharge
	a pos
	b charge
	a (Lnet/minecraft/core/BlockPosition;)D getPotentialChange
cqm$a net/minecraft/world/level/SpawnData$CustomSpawnRules
	a CODEC
	b blockLightLimit
	c skyLightLimit
	d LIGHT_RANGE
	a ()Lnet/minecraft/util/InclusiveRange; blockLightLimit
	a (Ljava/lang/String;)Lcom/mojang/serialization/MapCodec; lightLimit
	a (Lnet/minecraft/util/InclusiveRange;)Lcom/mojang/serialization/DataResult; checkLightBoundaries
	b ()Lnet/minecraft/util/InclusiveRange; skyLightLimit
cqt$a net/minecraft/world/level/biome/Biome$BiomeBuilder
	a hasPrecipitation
	b temperature
	c temperatureModifier
	d downfall
	e specialEffects
	f mobSpawnSettings
	g generationSettings
	a ()Lnet/minecraft/world/level/biome/BiomeBase; build
	a (F)Lcqt$a; temperature
	a (Lnet/minecraft/world/level/biome/BiomeBase$TemperatureModifier;)Lcqt$a; temperatureAdjustment
	a (Lnet/minecraft/world/level/biome/BiomeFog;)Lcqt$a; specialEffects
	a (Lnet/minecraft/world/level/biome/BiomeSettingsGeneration;)Lcqt$a; generationSettings
	a (Lnet/minecraft/world/level/biome/BiomeSettingsMobs;)Lcqt$a; mobSpawnSettings
	a (Z)Lcqt$a; hasPrecipitation
	b (F)Lcqt$a; downfall
cqu$a net/minecraft/world/level/biome/BiomeGenerationSettings$Builder
	a placedFeatures
	b worldCarvers
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Decoration;Lnet/minecraft/resources/ResourceKey;)Lcqu$a; addFeature
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;Lnet/minecraft/resources/ResourceKey;)Lcqu$a; addCarver
cqu$b net/minecraft/world/level/biome/BiomeGenerationSettings$PlainBuilder
	a carvers
	b features
	a ()Lnet/minecraft/world/level/biome/BiomeSettingsGeneration; build
	a (I)V addFeatureStepsUpTo
	a (ILnet/minecraft/core/Holder;)Lcqu$b; addFeature
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Decoration;Lnet/minecraft/core/Holder;)Lcqu$b; addFeature
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;Lnet/minecraft/core/Holder;)Lcqu$b; addCarver
cqz$a net/minecraft/world/level/biome/BiomeSpecialEffects$Builder
	a fogColor
	b waterColor
	c waterFogColor
	d skyColor
	e foliageColorOverride
	f grassColorOverride
	g grassColorModifier
	h ambientParticle
	i ambientLoopSoundEvent
	j ambientMoodSettings
	k ambientAdditionsSettings
	l backgroundMusic
	a ()Lnet/minecraft/world/level/biome/BiomeFog; build
	a (I)Lcqz$a; fogColor
	a (Lnet/minecraft/core/Holder;)Lcqz$a; ambientLoopSound
	a (Lnet/minecraft/sounds/Music;)Lcqz$a; backgroundMusic
	a (Lnet/minecraft/world/level/biome/BiomeFog$GrassColor;)Lcqz$a; grassColorModifier
	a (Lnet/minecraft/world/level/biome/BiomeParticles;)Lcqz$a; ambientParticle
	a (Lnet/minecraft/world/level/biome/CaveSound;)Lcqz$a; ambientAdditionsSound
	a (Lnet/minecraft/world/level/biome/CaveSoundSettings;)Lcqz$a; ambientMoodSound
	b (I)Lcqz$a; waterColor
	c (I)Lcqz$a; waterFogColor
	d (I)Lcqz$a; skyColor
	e (I)Lcqz$a; foliageColorOverride
	f (I)Lcqz$a; grassColorOverride
cr$a net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate
	a CODEC
	c criterions
	a ()Lit/unimi/dsi/fastutil/objects/Object2BooleanMap; criterions
	a (Lnet/minecraft/advancements/AdvancementProgress;)Z test
cr$b net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate
	a CODEC
	c state
	a ()Z state
	a (Lnet/minecraft/advancements/AdvancementProgress;)Z test
cr$c net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate
	b CODEC
cr$d net/minecraft/advancements/critereon/PlayerPredicate$Builder
	a level
	b gameType
	c stats
	d recipes
	e advancements
	f lookingAt
	a ()Lcr$d; player
	a (Lbq$a;)Lcr$d; setLookingAt
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lcr$d; setLevel
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/util/Map;)Lcr$d; checkAdvancementCriterions
	a (Lnet/minecraft/resources/MinecraftKey;Z)Lcr$d; addRecipe
	a (Lnet/minecraft/stats/StatisticWrapper;Lhe$c;Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lcr$d; addStat
	a (Lnet/minecraft/world/level/EnumGamemode;)Lcr$d; setGameType
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionPlayer; build
	b (Lnet/minecraft/resources/MinecraftKey;Z)Lcr$d; checkAdvancementDone
cr$e net/minecraft/advancements/critereon/PlayerPredicate$StatMatcher
	a CODEC
	b type
	c value
	d range
	e stat
	a ()Lnet/minecraft/stats/StatisticWrapper; type
	a (Lnet/minecraft/stats/StatisticManager;)Z matches
	a (Lnet/minecraft/stats/StatisticWrapper;)Lcom/mojang/serialization/Codec; createTypedCodec
	b ()Lnet/minecraft/core/Holder; value
	c ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; range
	d ()Ljava/util/function/Supplier; stat
crc$a net/minecraft/world/level/biome/Climate$DistanceMetric
crc$b net/minecraft/world/level/biome/Climate$Parameter
	a CODEC
	b min
	c max
	a ()J min
	a (F)Lcrc$b; point
	a (FF)Lcrc$b; span
	a (J)J distance
	a (Lcrc$b;)J distance
	a (Lcrc$b;Lcrc$b;)Lcrc$b; span
	b ()J max
	b (Lcrc$b;)Lcrc$b; span
crc$c net/minecraft/world/level/biome/Climate$ParameterList
	a values
	b index
	a ()Ljava/util/List; values
	a (Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec; codec
	a (Lcrc$h;)Ljava/lang/Object; findValue
	a (Lcrc$h;Lcrc$a;)Ljava/lang/Object; findValueIndex
	b (Lcrc$h;)Ljava/lang/Object; findValueBruteForce
	c (Lcrc$h;)Ljava/lang/Object; findValueIndex
crc$d net/minecraft/world/level/biome/Climate$ParameterPoint
	a CODEC
	b temperature
	c humidity
	d continentalness
	e erosion
	f depth
	g weirdness
	h offset
	a ()Ljava/util/List; parameterSpace
	a (Lcrc$h;)J fitness
	b ()Lcrc$b; temperature
	c ()Lcrc$b; humidity
	d ()Lcrc$b; continentalness
	e ()Lcrc$b; erosion
	f ()Lcrc$b; depth
	g ()Lcrc$b; weirdness
	h ()J offset
crc$e net/minecraft/world/level/biome/Climate$RTree
	a CHILDREN_PER_NODE
	b root
	c lastResult
	a (ILjava/util/List;)Lcrc$e$b; build
	a (IZ)Ljava/util/Comparator; comparator
	a (Lcrc$h;Lcrc$a;)Ljava/lang/Object; search
	a (Ljava/util/List;)Lcrc$e; create
	a (Ljava/util/List;IIZ)V sort
	a ([Lcrc$b;)J cost
	b (Ljava/util/List;)Ljava/util/List; bucketize
	c (Ljava/util/List;)Ljava/util/List; buildParameterSpace
crc$e$a net/minecraft/world/level/biome/Climate$RTree$Leaf
	b value
	a ([JLcrc$e$a;Lcrc$a;)Lcrc$e$a; search
crc$e$b net/minecraft/world/level/biome/Climate$RTree$Node
	a parameterSpace
	a ([J)J distance
	a ([JLcrc$e$a;Lcrc$a;)Lcrc$e$a; search
crc$e$c net/minecraft/world/level/biome/Climate$RTree$SubTree
	b children
	a ([JLcrc$e$a;Lcrc$a;)Lcrc$e$a; search
crc$g net/minecraft/world/level/biome/Climate$SpawnFinder
	a result
	a (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;FF)V radialSearch
	a (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;II)Lcrc$g$a; getSpawnPositionAndFitness
crc$g$a net/minecraft/world/level/biome/Climate$SpawnFinder$Result
	a location
	b fitness
	a ()Lnet/minecraft/core/BlockPosition; location
	b ()J fitness
crc$h net/minecraft/world/level/biome/Climate$TargetPoint
	a temperature
	b humidity
	c continentalness
	d erosion
	e depth
	f weirdness
	a ()[J toParameterArray
	b ()J temperature
	c ()J humidity
	d ()J continentalness
	e ()J erosion
	f ()J depth
	g ()J weirdness
crd$b net/minecraft/world/level/biome/FeatureSorter$StepFeatureData
	a features
	b indexMapping
	a ()Ljava/util/List; features
	b ()Ljava/util/function/ToIntFunction; indexMapping
crf$a net/minecraft/world/level/biome/MobSpawnSettings$Builder
	a spawners
	b mobSpawnCosts
	c creatureGenerationProbability
	a ()Lnet/minecraft/world/level/biome/BiomeSettingsMobs; build
	a (F)Lcrf$a; creatureGenerationProbability
	a (Lnet/minecraft/world/entity/EntityTypes;DD)Lcrf$a; addMobCharge
	a (Lnet/minecraft/world/entity/EnumCreatureType;Lcrf$c;)Lcrf$a; addSpawn
crf$b net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost
	a CODEC
	b energyBudget
	c charge
	a ()D energyBudget
	b ()D charge
crf$c net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData
	a CODEC
	b type
	c minCount
	d maxCount
crh$a net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset
	a NETHER
	b OVERWORLD
	c CODEC
	d id
	e provider
	f BY_NAME
	a ()Ljava/util/stream/Stream; usedBiomes
	a (Ljava/util/function/Function;)Lcrc$c; generateOverworldBiomes
	b ()Lnet/minecraft/resources/MinecraftKey; id
	c ()Lcrh$a$a; provider
crh$a$a net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$SourceProvider
cs$a net/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance
	a (Lbq$a;)Lnet/minecraft/advancements/Criterion; located
	a (Lcj$a;)Lnet/minecraft/advancements/Criterion; located
	a (Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; located
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/advancements/Criterion; walkOnBlockWithEquipment
	c ()Lnet/minecraft/advancements/Criterion; sleptInBed
	d ()Lnet/minecraft/advancements/Criterion; raidWon
	e ()Lnet/minecraft/advancements/Criterion; avoidVibration
	f ()Lnet/minecraft/advancements/Criterion; tick
csv$a net/minecraft/world/level/block/Block$BlockStatePairKey
	a first
	b second
	c direction
ct$a net/minecraft/advancements/critereon/RecipeCraftedTrigger$TriggerInstance
	a recipeId
	b predicates
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/advancements/Criterion; craftedItem
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/util/List;)Lnet/minecraft/advancements/Criterion; craftedItem
	b (Lnet/minecraft/resources/MinecraftKey;Ljava/util/List;)Z matches
cu$a net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance
	a recipe
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z matches
cv$a net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance
	a item
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; shotCrossbow
	a (Lnet/minecraft/world/item/ItemStack;)Z matches
	a (Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/advancements/Criterion; shotCrossbow
cw$a net/minecraft/advancements/critereon/SimpleCriterionTrigger$SimpleInstance
	b ()Ljava/util/Optional; playerPredicate
cx$a net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance
	a block
	b state
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/Criterion; slidesDownBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z matches
cxe net/minecraft/world/level/block/LevelEvent
	A SOUND_CHORUS_GROW
	B SOUND_CHORUS_DEATH
	C SOUND_BREWING_STAND_BREW
	D SOUND_END_PORTAL_SPAWN
	E SOUND_PHANTOM_BITE
	F SOUND_ZOMBIE_TO_DROWNED
	G SOUND_HUSK_TO_ZOMBIE
	H SOUND_GRINDSTONE_USED
	I SOUND_PAGE_TURN
	J SOUND_SMITHING_TABLE_USED
	K SOUND_POINTED_DRIPSTONE_LAND
	L SOUND_DRIP_LAVA_INTO_CAULDRON
	M SOUND_DRIP_WATER_INTO_CAULDRON
	N SOUND_SKELETON_TO_STRAY
	O COMPOSTER_FILL
	P LAVA_FIZZ
	Q REDSTONE_TORCH_BURNOUT
	R END_PORTAL_FRAME_FILL
	S DRIPSTONE_DRIP
	T PARTICLES_AND_SOUND_PLANT_GROWTH
	U PARTICLES_SHOOT
	V PARTICLES_DESTROY_BLOCK
	W PARTICLES_SPELL_POTION_SPLASH
	X PARTICLES_EYE_OF_ENDER_DEATH
	Y PARTICLES_MOBBLOCK_SPAWN
	Z PARTICLES_PLANT_GROWTH
	a SOUND_DISPENSER_DISPENSE
	aa PARTICLES_DRAGON_FIREBALL_SPLASH
	ab PARTICLES_INSTANT_POTION_SPLASH
	ac PARTICLES_DRAGON_BLOCK_BREAK
	ad PARTICLES_WATER_EVAPORATING
	ae ANIMATION_END_GATEWAY_SPAWN
	af ANIMATION_DRAGON_SUMMON_ROAR
	ag PARTICLES_ELECTRIC_SPARK
	ah PARTICLES_AND_SOUND_WAX_ON
	ai PARTICLES_WAX_OFF
	aj PARTICLES_SCRAPE
	ak PARTICLES_SCULK_CHARGE
	al PARTICLES_SCULK_SHRIEK
	am PARTICLES_AND_SOUND_BRUSH_BLOCK_COMPLETE
	an PARTICLES_EGG_CRACK
	b SOUND_DISPENSER_FAIL
	c SOUND_DISPENSER_PROJECTILE_LAUNCH
	d SOUND_ENDER_EYE_LAUNCH
	e SOUND_FIREWORK_SHOOT
	f SOUND_EXTINGUISH_FIRE
	g SOUND_PLAY_JUKEBOX_SONG
	h SOUND_STOP_JUKEBOX_SONG
	i SOUND_GHAST_WARNING
	j SOUND_GHAST_FIREBALL
	k SOUND_DRAGON_FIREBALL
	l SOUND_BLAZE_FIREBALL
	m SOUND_ZOMBIE_WOODEN_DOOR
	n SOUND_ZOMBIE_IRON_DOOR
	o SOUND_ZOMBIE_DOOR_CRASH
	p SOUND_WITHER_BLOCK_BREAK
	q SOUND_WITHER_BOSS_SPAWN
	r SOUND_WITHER_BOSS_SHOOT
	s SOUND_BAT_LIFTOFF
	t SOUND_ZOMBIE_INFECTED
	u SOUND_ZOMBIE_CONVERTED
	v SOUND_DRAGON_DEATH
	w SOUND_ANVIL_BROKEN
	x SOUND_ANVIL_USED
	y SOUND_ANVIL_LAND
	z SOUND_PORTAL_TRAVEL
cxu$a net/minecraft/world/level/block/MultifaceSpreader$DefaultSpreaderConfig
	a block
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lcxu$c;)Z canSpreadInto
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;)Z stateCanBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
cxu$b net/minecraft/world/level/block/MultifaceSpreader$SpreadConfig
	a ()[Lcxu$e; getSpreadTypes
	a (Lnet/minecraft/world/level/GeneratorAccess;Lcxu$c;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z placeBlock
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lcxu$c;)Z canSpreadInto
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isOtherBlockValidAsSource
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z hasFace
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z canSpreadFrom
cxu$c net/minecraft/world/level/block/MultifaceSpreader$SpreadPos
	a pos
	b face
	a ()Lnet/minecraft/core/BlockPosition; pos
	b ()Lnet/minecraft/core/EnumDirection; face
cxu$d net/minecraft/world/level/block/MultifaceSpreader$SpreadPredicate
cxu$e net/minecraft/world/level/block/MultifaceSpreader$SpreadType
	a SAME_POSITION
	b SAME_PLANE
	c WRAP_AROUND
	d $VALUES
	a ()[Lcxu$e; $values
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)Lcxu$c; getSpreadPos
cyi$a net/minecraft/world/level/block/PitcherCropBlock$PosAndState
	a pos
	b state
	a ()Lnet/minecraft/core/BlockPosition; pos
	b ()Lnet/minecraft/world/level/block/state/IBlockData; state
cyl$a net/minecraft/world/level/block/PointedDripstoneBlock$FluidInfo
	a pos
	b fluid
	c sourceState
	a ()Lnet/minecraft/core/BlockPosition; pos
	b ()Lnet/minecraft/world/level/material/FluidType; fluid
	c ()Lnet/minecraft/world/level/block/state/IBlockData; sourceState
cz$a net/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance
	a (Lbq$a;)Lnet/minecraft/advancements/Criterion; playerStartsRiding
czq$a net/minecraft/world/level/block/SculkSpreader$ChargeCursor
	a MAX_CURSOR_DECAY_DELAY
	b CODEC
	c NON_CORNER_NEIGHBOURS
	d pos
	e charge
	f updateDelay
	g decayDelay
	h facings
	i DIRECTION_SET
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lczq$a;)V mergeWith
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/List; getRandomizedNonCornerNeighbourOffsets
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Z isMovementUnobstructed
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isUnobstructed
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/BlockPosition; getValidMovementPos
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)V update
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Z)Z shouldUpdate
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/SculkBehaviour; getBlockBehaviour
	b ()I getCharge
	c ()I getDecayDelay
	d ()Ljava/util/Set; getFacingData
czr$a net/minecraft/world/level/block/SculkVeinBlock$SculkVeinSpreaderConfig
	c spreadTypes
	a ()[Lcxu$e; getSpreadTypes
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;)Z stateCanBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isOtherBlockValidAsSource
czx$a net/minecraft/world/level/block/SkullBlock$Type
d com/mojang/math/FieldsAreNonnullByDefault
da$a net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder
	a matchers
	a ()Lda$a; properties
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;I)Lda$a; hasProperty
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Lda$a; hasProperty
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/String;)Lda$a; hasProperty
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Z)Lda$a; hasProperty
	b ()Ljava/util/Optional; build
da$b net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactMatcher
	a CODEC
	c value
	a ()Ljava/lang/String; value
	a (Lnet/minecraft/world/level/block/state/IBlockDataHolder;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Z match
da$c net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher
	a name
	b valueMatcher
	a ()Ljava/lang/String; name
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)Ljava/util/Optional; checkState
	a (Lnet/minecraft/world/level/block/state/BlockStateList;Lnet/minecraft/world/level/block/state/IBlockDataHolder;)Z match
	b ()Lda$e; valueMatcher
da$d net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedMatcher
	a CODEC
	c minValue
	d maxValue
	a ()Ljava/util/Optional; minValue
	a (Lnet/minecraft/world/level/block/state/IBlockDataHolder;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Z match
	b ()Ljava/util/Optional; maxValue
da$e net/minecraft/advancements/critereon/StatePropertiesPredicate$ValueMatcher
	b CODEC
	a (Lnet/minecraft/world/level/block/state/IBlockDataHolder;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Z match
day$a net/minecraft/world/level/block/SuspiciousEffectHolder$EffectEntry
	a CODEC
	b LIST_CODEC
	c effect
	d duration
	a ()Lnet/minecraft/world/effect/MobEffect; createEffectInstance
	b ()Lnet/minecraft/world/effect/MobEffectList; effect
	c ()I duration
db$a net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance
	a entity
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lbq$a;)Lnet/minecraft/advancements/Criterion; summonedEntity
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
dbx$a net/minecraft/world/level/block/WeatheringCopper$WeatherState
	a UNAFFECTED
	b EXPOSED
	c WEATHERED
	d OXIDIZED
	e $VALUES
	a ()[Ldbx$a; $values
dcm$a net/minecraft/world/level/block/entity/BannerPattern$Builder
	a patterns
	a ()Lnet/minecraft/nbt/NBTTagList; toListTag
	a (Lcom/mojang/datafixers/util/Pair;)Ldcm$a; addPattern
	a (Lnet/minecraft/core/Holder;Lnet/minecraft/world/item/EnumColor;)Ldcm$a; addPattern
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/EnumColor;)Ldcm$a; addPattern
dct$a net/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction
dcx$a net/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier
dcx$b net/minecraft/world/level/block/entity/BlockEntityType$Builder
	a factory
	b validBlocks
	a (Lcom/mojang/datafixers/types/Type;)Lnet/minecraft/world/level/block/entity/TileEntityTypes; build
	a (Ldcx$a;[Lnet/minecraft/world/level/block/Block;)Ldcx$b; of
dd$a net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance
	a entity
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lbq$a;)Lnet/minecraft/advancements/Criterion; tamedAnimal
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
	c ()Lnet/minecraft/advancements/Criterion; tamedAnimal
dda$a net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity$VibrationUser
	a ()I getListenerRadius
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Ldjt$a;)Z canReceiveVibration
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)I getBackSignal
de$a net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance
	a signalStrength
	b projectile
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; targetHit
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/phys/Vec3D;I)Z matches
dea$a net/minecraft/world/level/block/entity/SculkSensorBlockEntity$VibrationUser
	a positionSource
	b LISTENER_RANGE
	c blockPos
	a ()I getListenerRadius
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Ldjt$a;)Z canReceiveVibration
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V onReceiveVibration
	b ()Lnet/minecraft/world/level/gameevent/PositionSource; getPositionSource
	d ()Z canTriggerAvoidVibration
	e ()V onDataChanged
	f ()Z requiresAdjacentChunksToBeTicking
deb$a net/minecraft/world/level/block/entity/SculkShriekerBlockEntity$VibrationUser
	b LISTENER_RADIUS
	c positionSource
	a ()I getListenerRadius
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Ldjt$a;)Z canReceiveVibration
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V onReceiveVibration
	b ()Lnet/minecraft/world/level/gameevent/PositionSource; getPositionSource
	c ()Lnet/minecraft/tags/TagKey; getListenableEvents
	e ()V onDataChanged
	f ()Z requiresAdjacentChunksToBeTicking
df$a net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance
	a villager
	b item
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lbq$a;)Lnet/minecraft/advancements/Criterion; tradedWithVillager
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/item/ItemStack;)Z matches
	c ()Lnet/minecraft/advancements/Criterion; tradedWithVillager
dfi$b net/minecraft/world/level/block/state/BlockBehaviour$OffsetFunction
dfi$e net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate
dfi$f net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate
dfk$a net/minecraft/world/level/block/state/StateDefinition$Builder
	a owner
	b properties
	a (Ljava/util/function/Function;Ldfk$b;)Lnet/minecraft/world/level/block/state/BlockStateList; create
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;)V validateProperty
	a ([Lnet/minecraft/world/level/block/state/properties/IBlockState;)Ldfk$a; add
dfk$b net/minecraft/world/level/block/state/StateDefinition$Factory
dg$a net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance
	a level
	a (D)Z matches
dgk$a net/minecraft/world/level/block/state/properties/NoteBlockInstrument$Type
	a BASE_BLOCK
	b MOB_HEAD
	c CUSTOM
	d $VALUES
	a ()[Ldgk$a; $values
dgm$a net/minecraft/world/level/block/state/properties/Property$Value
	a property
	b value
	a ()Lnet/minecraft/world/level/block/state/properties/IBlockState; property
	b ()Ljava/lang/Comparable; value
dgy$a net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener
	a worldBorder
	a (Lnet/minecraft/world/level/border/WorldBorder;D)V onBorderSizeSet
	a (Lnet/minecraft/world/level/border/WorldBorder;DD)V onBorderCenterSet
	a (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V onBorderSizeLerping
	a (Lnet/minecraft/world/level/border/WorldBorder;I)V onBorderSetWarningTime
	b (Lnet/minecraft/world/level/border/WorldBorder;D)V onBorderSetDamagePerBlock
	b (Lnet/minecraft/world/level/border/WorldBorder;I)V onBorderSetWarningBlocks
	c (Lnet/minecraft/world/level/border/WorldBorder;D)V onBorderSetDamageSafeZOne
dh$a net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance
	a item
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Lnet/minecraft/advancements/Criterion; usedTotem
	a (Lnet/minecraft/world/item/ItemStack;)Z matches
	a (Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/advancements/Criterion; usedTotem
dha$a net/minecraft/world/level/border/WorldBorder$BorderExtent
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lnet/minecraft/world/level/border/BorderStatus; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Ldha$a; update
	m ()Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
dha$b net/minecraft/world/level/border/WorldBorder$MovingBorderExtent
	b from
	c to
	d lerpEnd
	e lerpBegin
	f lerpDuration
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lnet/minecraft/world/level/border/BorderStatus; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Ldha$a; update
	m ()Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
dha$c net/minecraft/world/level/border/WorldBorder$Settings
	a centerX
	b centerZ
	c damagePerBlock
	d safeZone
	e warningBlocks
	f warningTime
	g size
	h sizeLerpTime
	i sizeLerpTarget
	a ()D getCenterX
	a (Lcom/mojang/serialization/DynamicLike;Ldha$c;)Ldha$c; read
	a (Lnet/minecraft/nbt/NBTTagCompound;)V write
	b ()D getCenterZ
	c ()D getDamagePerBlock
	d ()D getSafeZone
	e ()I getWarningBlocks
	f ()I getWarningTime
	g ()D getSize
	h ()J getSizeLerpTime
	i ()D getSizeLerpTarget
dha$d net/minecraft/world/level/border/WorldBorder$StaticBorderExtent
	b size
	c minX
	d minZ
	e maxX
	f maxZ
	g shape
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lnet/minecraft/world/level/border/BorderStatus; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Ldha$a; update
	m ()Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	n ()V updateBox
dhe$a net/minecraft/world/level/chunk/CarvingMask$Mask
dhf$a net/minecraft/world/level/chunk/ChunkAccess$TicksToSave
	a blocks
	b fluids
	a ()Lnet/minecraft/world/ticks/SerializableTickContainer; blocks
	b ()Lnet/minecraft/world/ticks/SerializableTickContainer; fluids
dhk$b net/minecraft/world/level/chunk/ChunkStatus$GenerationTask
dhk$c net/minecraft/world/level/chunk/ChunkStatus$LoadingTask
dhk$d net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask
dhq$a net/minecraft/world/level/chunk/LevelChunk$BoundTickingBlockEntity
	b blockEntity
	c ticker
	d loggedInvalidBlockState
	a ()V tick
	b ()Z isRemoved
	c ()Lnet/minecraft/core/BlockPosition; getPos
	d ()Ljava/lang/String; getType
dhq$c net/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor
dhq$d net/minecraft/world/level/chunk/LevelChunk$RebindableTickingBlockEntityWrapper
	b ticker
	a ()V tick
	a (Lnet/minecraft/world/level/block/entity/TickingBlockEntity;)V rebind
	b ()Z isRemoved
	c ()Lnet/minecraft/core/BlockPosition; getPos
	d ()Ljava/lang/String; getType
dhw$a net/minecraft/world/level/chunk/Palette$Factory
dhy$a net/minecraft/world/level/chunk/PalettedContainer$Configuration
	a factory
	b bits
	a ()Ldhw$a; factory
	a (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/DataPaletteExpandable;I)Ldhy$c; createData
	b ()I bits
dhy$b net/minecraft/world/level/chunk/PalettedContainer$CountConsumer
dhy$c net/minecraft/world/level/chunk/PalettedContainer$Data
	a configuration
	b storage
	c palette
	a ()I getSerializedSize
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/world/level/chunk/DataPalette;Lnet/minecraft/util/DataBits;)V copyFrom
	b ()Ldhy$c; copy
	c ()Ldhy$a; configuration
	d ()Lnet/minecraft/util/DataBits; storage
	e ()Lnet/minecraft/world/level/chunk/DataPalette; palette
dhy$d net/minecraft/world/level/chunk/PalettedContainer$Strategy
	a SINGLE_VALUE_PALETTE_FACTORY
	b LINEAR_PALETTE_FACTORY
	c HASHMAP_PALETTE_FACTORY
	d SECTION_STATES
	e SECTION_BIOMES
	f GLOBAL_PALETTE_FACTORY
	g sizeBits
	a ()I size
	a (III)I getIndex
	a (Lnet/minecraft/core/Registry;I)Ldhy$a; getConfiguration
	b (Lnet/minecraft/core/Registry;I)I calculateBitsForSerialization
dhz$a net/minecraft/world/level/chunk/PalettedContainerRO$PackedData
	a paletteEntries
	b storage
	a ()Ljava/util/List; paletteEntries
	b ()Ljava/util/Optional; storage
dhz$b net/minecraft/world/level/chunk/PalettedContainerRO$Unpacker
di$a net/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance
	a item
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lbq$a;Lcb$a;)Lnet/minecraft/advancements/Criterion; lookingAt
	a (Lnet/minecraft/world/item/ItemStack;)Z matches
did$a net/minecraft/world/level/chunk/UpgradeData$BlockFixer
	a (Lnet/minecraft/world/level/GeneratorAccess;)V processChunk
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
dij$a net/minecraft/world/level/chunk/storage/IOWorker$PendingStore
	a data
	b result
dil$b net/minecraft/world/level/chunk/storage/RegionFile$CommitOp
din$a net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper
dir net/minecraft/world/level/dimension/DimensionDefaults
	a OVERWORLD_MIN_Y
	b OVERWORLD_LEVEL_HEIGHT
	c OVERWORLD_GENERATION_HEIGHT
	d OVERWORLD_LOGICAL_HEIGHT
	e NETHER_MIN_Y
	f NETHER_LEVEL_HEIGHT
	g NETHER_GENERATION_HEIGHT
	h NETHER_LOGICAL_HEIGHT
	i END_MIN_Y
	j END_LEVEL_HEIGHT
	k END_GENERATION_HEIGHT
	l END_LOGICAL_HEIGHT
dis$a net/minecraft/world/level/dimension/DimensionType$MonsterSettings
	a CODEC
	b piglinSafe
	c hasRaids
	d monsterSpawnLightTest
	e monsterSpawnBlockLightLimit
	a ()Z piglinSafe
	b ()Z hasRaids
	c ()Lnet/minecraft/util/valueproviders/IntProvider; monsterSpawnLightTest
	d ()I monsterSpawnBlockLightLimit
div$a net/minecraft/world/level/dimension/end/EndDragonFight$Data
	a CODEC
	b DEFAULT
	c needsStateScanning
	d dragonKilled
	e previouslyKilled
	f isRespawning
	g dragonUUID
	h exitPortalLocation
	i gateways
	a ()Z needsStateScanning
	b ()Z dragonKilled
	c ()Z previouslyKilled
	d ()Z isRespawning
	e ()Ljava/util/Optional; dragonUUID
	f ()Ljava/util/Optional; exitPortalLocation
	g ()Ljava/util/Optional; gateways
djl$a net/minecraft/world/level/entity/PersistentEntitySectionManager$Callback
	c entity
	d currentSectionKey
	e currentSection
	a ()V onMove
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V onRemove
	a (Lnet/minecraft/world/level/entity/Visibility;Lnet/minecraft/world/level/entity/Visibility;)V updateStatus
djl$b net/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus
	a FRESH
	b PENDING
	c LOADED
	d $VALUES
	a ()[Ldjl$b; $values
djm net/minecraft/world/level/entity/TransientEntitySectionManager
	a LOGGER
	b callbacks
	c entityStorage
	d sectionStorage
	e tickingChunks
	f entityGetter
	a ()Lnet/minecraft/world/level/entity/LevelEntityGetter; getEntityGetter
	a (JLnet/minecraft/world/level/entity/EntitySection;)V removeSectionIfEmpty
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V startTicking
	a (Lnet/minecraft/world/level/entity/EntityAccess;)V addEntity
	b ()I count
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)V stopTicking
	c ()Ljava/lang/String; gatherStats
djm$a net/minecraft/world/level/entity/TransientEntitySectionManager$Callback
	c entity
	d currentSectionKey
	e currentSection
	a ()V onMove
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V onRemove
djp$a net/minecraft/world/level/gameevent/BlockPositionSource$Type
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/gameevent/BlockPositionSource; read
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/gameevent/BlockPositionSource;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/gameevent/PositionSource;)V write
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/gameevent/PositionSource; read
djr$a net/minecraft/world/level/gameevent/EntityPositionSource$Type
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/gameevent/EntityPositionSource; read
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/gameevent/EntityPositionSource;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/gameevent/PositionSource;)V write
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/gameevent/PositionSource; read
djs$a net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry$OnEmptyAction
djt$a net/minecraft/world/level/gameevent/GameEvent$Context
	a sourceEntity
	b affectedState
	a ()Lnet/minecraft/world/entity/Entity; sourceEntity
	a (Lnet/minecraft/world/entity/Entity;)Ldjt$a; of
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;)Ldjt$a; of
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Ldjt$a; of
	b ()Lnet/minecraft/world/level/block/state/IBlockData; affectedState
djt$b net/minecraft/world/level/gameevent/GameEvent$ListenerInfo
	a gameEvent
	b source
	c context
	d recipient
	e distanceToRecipient
	a ()Lnet/minecraft/world/level/gameevent/GameEvent; gameEvent
	a (Ldjt$b;)I compareTo
	b ()Lnet/minecraft/world/phys/Vec3D; source
	c ()Ldjt$a; context
	d ()Lnet/minecraft/world/level/gameevent/GameEventListener; recipient
djv$a net/minecraft/world/level/gameevent/GameEventListener$DeliveryMode
	a UNSPECIFIED
	b BY_DISTANCE
	c $VALUES
	a ()[Ldjv$a; $values
djv$b net/minecraft/world/level/gameevent/GameEventListener$Holder
	d ()Lnet/minecraft/world/level/gameevent/GameEventListener; getListener
djw$a net/minecraft/world/level/gameevent/GameEventListenerRegistry$ListenerVisitor
dkc$a net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data
	a CODEC
	b NBT_TAG_KEY
	c currentVibration
	d travelTimeInTicks
	e selectionStrategy
	f reloadVibrationParticle
	a ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSelector; getSelectionStrategy
	a (I)V setTravelTimeInTicks
	a (Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo;)V setCurrentVibration
	a (Z)V setReloadVibrationParticle
	b ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo; getCurrentVibration
	c ()I getTravelTimeInTicks
	d ()V decrementTravelTime
	e ()Z shouldReloadVibrationParticle
dkc$b net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Listener
	a system
	a ()Lnet/minecraft/world/level/gameevent/PositionSource; getListenerSource
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)F distanceBetweenInBlocks
	a (Lnet/minecraft/server/level/WorldServer;Ldkc$a;Lnet/minecraft/world/level/gameevent/GameEvent;Ldjt$a;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)V scheduleVibration
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEvent;Ldjt$a;Lnet/minecraft/world/phys/Vec3D;)Z handleGameEvent
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z isOccluded
	b ()I getListenerRadius
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEvent;Ldjt$a;Lnet/minecraft/world/phys/Vec3D;)V forceScheduleVibration
dkc$c net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Ticker
	a (Lnet/minecraft/server/level/WorldServer;Ldkc$a;Ldkc$d;)V trySelectAndScheduleVibration
	a (Lnet/minecraft/server/level/WorldServer;Ldkc$a;Ldkc$d;Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo;)Z receiveVibration
	a (Lnet/minecraft/world/level/World;Ldkc$a;Ldkc$d;)V tick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z areAdjacentChunksTicking
	b (Lnet/minecraft/server/level/WorldServer;Ldkc$a;Ldkc$d;)V tryReloadVibrationParticle
dkc$d net/minecraft/world/level/gameevent/vibrations/VibrationSystem$User
	a ()I getListenerRadius
	a (F)I calculateTravelTimeInTicks
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Ldjt$a;)Z canReceiveVibration
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V onReceiveVibration
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Ldjt$a;)Z isValidVibration
	b ()Lnet/minecraft/world/level/gameevent/PositionSource; getPositionSource
	c ()Lnet/minecraft/tags/TagKey; getListenableEvents
	d ()Z canTriggerAvoidVibration
	e ()V onDataChanged
	f ()Z requiresAdjacentChunksToBeTicking
dke$a net/minecraft/world/level/levelgen/Aquifer$FluidPicker
dke$b net/minecraft/world/level/levelgen/Aquifer$FluidStatus
	a fluidLevel
	b fluidType
	a (I)Lnet/minecraft/world/level/block/state/IBlockData; at
dke$c net/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer
	A gridSizeX
	B gridSizeZ
	C SURFACE_SAMPLING_OFFSETS_IN_CHUNKS
	a X_RANGE
	b Y_RANGE
	c Z_RANGE
	d X_SEPARATION
	e Y_SEPARATION
	f Z_SEPARATION
	g X_SPACING
	h Y_SPACING
	i Z_SPACING
	j MAX_REASONABLE_DISTANCE_TO_AQUIFER_CENTER
	k FLOWING_UPDATE_SIMULARITY
	l noiseChunk
	m barrierNoise
	n fluidLevelFloodednessNoise
	o fluidLevelSpreadNoise
	p lavaNoise
	q positionalRandomFactory
	r aquiferCache
	s aquiferLocationCache
	t globalFluidPicker
	u erosion
	v depth
	w shouldScheduleFluidUpdate
	x minGridX
	y minGridY
	z minGridZ
	a ()Z shouldScheduleFluidUpdate
	a (I)I gridX
	a (II)D similarity
	a (III)I getIndex
	a (IIII)I computeRandomizedFluidSurfaceLevel
	a (IIILdke$b;I)Lnet/minecraft/world/level/block/state/IBlockData; computeFluidType
	a (IIILdke$b;IZ)I computeSurfaceLevel
	a (J)Ldke$b; getAquiferStatus
	a (Ldkl$b;D)Lnet/minecraft/world/level/block/state/IBlockData; computeSubstance
	a (Ldkl$b;Lorg/apache/commons/lang3/mutable/MutableDouble;Ldke$b;Ldke$b;)D calculatePressure
	b (I)I gridY
	b (III)Ldke$b; computeFluid
	c (I)I gridZ
dkf$a net/minecraft/world/level/levelgen/Beardifier$Rigid
	a box
	b terrainAdjustment
	c groundLevelDelta
	a ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; box
	b ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; terrainAdjustment
	c ()I groundLevelDelta
dki$a net/minecraft/world/level/levelgen/Column$Line
	a INSTANCE
	b ()Ljava/util/OptionalInt; getCeiling
	c ()Ljava/util/OptionalInt; getFloor
	d ()Ljava/util/OptionalInt; getHeight
dki$b net/minecraft/world/level/levelgen/Column$Range
	a floor
	b ceiling
	b ()Ljava/util/OptionalInt; getCeiling
	c ()Ljava/util/OptionalInt; getFloor
	d ()Ljava/util/OptionalInt; getHeight
	e ()I ceiling
	f ()I floor
	g ()I height
dki$c net/minecraft/world/level/levelgen/Column$Ray
	a edge
	b pointingUp
	b ()Ljava/util/OptionalInt; getCeiling
	c ()Ljava/util/OptionalInt; getFloor
	d ()Ljava/util/OptionalInt; getHeight
dkk net/minecraft/world/level/levelgen/Density
	a SURFACE
	b UNRECOVERABLY_DENSE
	c UNRECOVERABLY_THIN
dkl$a net/minecraft/world/level/levelgen/DensityFunction$ContextProvider
	a (I)Ldkl$b; forIndex
	a ([DLnet/minecraft/world/level/levelgen/DensityFunction;)V fillAllDirectly
dkl$b net/minecraft/world/level/levelgen/DensityFunction$FunctionContext
	a ()I blockX
	b ()I blockY
	c ()I blockZ
	d ()Lnet/minecraft/world/level/levelgen/blending/Blender; getBlender
dkl$c net/minecraft/world/level/levelgen/DensityFunction$NoiseHolder
	a CODEC
	b noiseData
	c noise
	a ()D maxValue
	a (DDD)D getValue
	b ()Lnet/minecraft/core/Holder; noiseData
	c ()Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal; noise
dkl$d net/minecraft/world/level/levelgen/DensityFunction$SimpleFunction
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdkl$a;)V fillArray
dkl$e net/minecraft/world/level/levelgen/DensityFunction$SinglePointContext
	a blockX
	b blockY
	c blockZ
	a ()I blockX
	b ()I blockY
	c ()I blockZ
dkl$f net/minecraft/world/level/levelgen/DensityFunction$Visitor
	a (Ldkl$c;)Ldkl$c; visitNoise
dkm$a net/minecraft/world/level/levelgen/DensityFunctions$Ap2
	e type
	f argument1
	g argument2
	h minValue
	i maxValue
	a ()D minValue
	a (Ldkl$b;)D compute
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	j ()Ldkm$y$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; argument1
	l ()Lnet/minecraft/world/level/levelgen/DensityFunction; argument2
dkm$aa net/minecraft/world/level/levelgen/DensityFunctions$YClampedGradient
	a CODEC
	e fromY
	f toY
	g fromValue
	h toValue
	i DATA_CODEC
	a ()D minValue
	a (Ldkl$b;)D compute
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()I fromY
	k ()I toY
	l ()D fromValue
	m ()D toValue
dkm$b net/minecraft/world/level/levelgen/DensityFunctions$BeardifierMarker
	a INSTANCE
	f $VALUES
	a ()D minValue
	a (Ldkl$b;)D compute
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	j ()[Ldkm$b; $values
dkm$c net/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker
	e CODEC
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
dkm$d net/minecraft/world/level/levelgen/DensityFunctions$BlendAlpha
	a INSTANCE
	e CODEC
	f $VALUES
	a ()D minValue
	a (Ldkl$b;)D compute
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()[Ldkm$d; $values
dkm$e net/minecraft/world/level/levelgen/DensityFunctions$BlendDensity
	a input
	e CODEC
	a ()D minValue
	a (Ldkl$b;D)D transform
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
dkm$f net/minecraft/world/level/levelgen/DensityFunctions$BlendOffset
	a INSTANCE
	e CODEC
	f $VALUES
	a ()D minValue
	a (Ldkl$b;)D compute
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()[Ldkm$f; $values
dkm$g net/minecraft/world/level/levelgen/DensityFunctions$Clamp
	a CODEC
	e input
	f minValue
	g maxValue
	h DATA_CODEC
	a ()D minValue
	a (D)D transform
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	aw_ ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
dkm$h net/minecraft/world/level/levelgen/DensityFunctions$Constant
	a value
	e CODEC
	f ZERO
	a ()D minValue
	a (Ldkl$b;)D compute
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()D value
dkm$i net/minecraft/world/level/levelgen/DensityFunctions$EndIslandDensityFunction
	a CODEC
	e ISLAND_THRESHOLD
	f islandNoise
	a ()D minValue
	a (Ldkl$b;)D compute
	a (Lnet/minecraft/world/level/levelgen/synth/NoiseGenerator3Handler;II)F getHeightValue
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
dkm$j net/minecraft/world/level/levelgen/DensityFunctions$HolderHolder
	a function
	a ()D minValue
	a (Ldkl$b;)D compute
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Lnet/minecraft/core/Holder; function
dkm$k net/minecraft/world/level/levelgen/DensityFunctions$Mapped
	a type
	e input
	f minValue
	g maxValue
	a ()D minValue
	a (D)D transform
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a (Ldkm$k$a;D)D transform
	a (Ldkm$k$a;Lnet/minecraft/world/level/levelgen/DensityFunction;)Ldkm$k; create
	aw_ ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
	b ()D maxValue
	b (Ldkl$f;)Ldkm$k; mapAll
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	k ()Ldkm$k$a; type
dkm$k$a net/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type
	a ABS
	b SQUARE
	c CUBE
	d HALF_NEGATIVE
	e QUARTER_NEGATIVE
	f SQUEEZE
	g name
	h codec
	i $VALUES
	a ()[Ldkm$k$a; $values
	c ()Ljava/lang/String; getSerializedName
dkm$l net/minecraft/world/level/levelgen/DensityFunctions$Marker
	a type
	e wrapped
	a ()D minValue
	a (Ldkl$b;)D compute
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	j ()Ldkm$l$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dkm$l$a net/minecraft/world/level/levelgen/DensityFunctions$Marker$Type
	a Interpolated
	b FlatCache
	c Cache2D
	d CacheOnce
	e CacheAllInCell
	f name
	g codec
	h $VALUES
	a ()[Ldkm$l$a; $values
	c ()Ljava/lang/String; getSerializedName
dkm$m net/minecraft/world/level/levelgen/DensityFunctions$MarkerOrMarked
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Ldkm$l$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dkm$n net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd
	e specificType
	f input
	g minValue
	h maxValue
	i argument
	a ()D minValue
	a (D)D transform
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	aw_ ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
	b ()D maxValue
	j ()Ldkm$y$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; argument1
	l ()Lnet/minecraft/world/level/levelgen/DensityFunction; argument2
	m ()Ldkm$n$a; specificType
	n ()D argument
dkm$n$a net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type
	a MUL
	b ADD
	c $VALUES
	a ()[Ldkm$n$a; $values
dkm$o net/minecraft/world/level/levelgen/DensityFunctions$Noise
	a DATA_CODEC
	e CODEC
	f noise
	g xzScale
	h yScale
	a ()D minValue
	a (Ldkl$b;)D compute
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Ldkl$c; noise
	k ()D xzScale
	l ()D yScale
dkm$p net/minecraft/world/level/levelgen/DensityFunctions$PureTransformer
	a (D)D transform
	a (Ldkl$b;)D compute
	a ([DLdkl$a;)V fillArray
	aw_ ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
dkm$q net/minecraft/world/level/levelgen/DensityFunctions$RangeChoice
	a DATA_CODEC
	e CODEC
	f input
	g minInclusive
	h maxExclusive
	i whenInRange
	j whenOutOfRange
	a ()D minValue
	a (Ldkl$b;)D compute
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
	k ()D minInclusive
	l ()D maxExclusive
	m ()Lnet/minecraft/world/level/levelgen/DensityFunction; whenInRange
	n ()Lnet/minecraft/world/level/levelgen/DensityFunction; whenOutOfRange
dkm$r net/minecraft/world/level/levelgen/DensityFunctions$Shift
	a offsetNoise
	e CODEC
	a (Ldkl$b;)D compute
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Ldkl$c; offsetNoise
dkm$s net/minecraft/world/level/levelgen/DensityFunctions$ShiftA
	a offsetNoise
	e CODEC
	a (Ldkl$b;)D compute
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Ldkl$c; offsetNoise
dkm$t net/minecraft/world/level/levelgen/DensityFunctions$ShiftB
	a offsetNoise
	e CODEC
	a (Ldkl$b;)D compute
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Ldkl$c; offsetNoise
dkm$u net/minecraft/world/level/levelgen/DensityFunctions$ShiftNoise
	a ()D minValue
	a (DDD)D compute
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	j ()Ldkl$c; offsetNoise
dkm$v net/minecraft/world/level/levelgen/DensityFunctions$ShiftedNoise
	a CODEC
	e shiftX
	f shiftY
	g shiftZ
	h xzScale
	i yScale
	j noise
	k DATA_CODEC
	a ()D minValue
	a (Ldkl$b;)D compute
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Lnet/minecraft/world/level/levelgen/DensityFunction; shiftX
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; shiftY
	l ()Lnet/minecraft/world/level/levelgen/DensityFunction; shiftZ
	m ()D xzScale
	n ()D yScale
	o ()Ldkl$c; noise
dkm$w net/minecraft/world/level/levelgen/DensityFunctions$Spline
	a CODEC
	e spline
	f SPLINE_CODEC
	g DATA_CODEC
	a ()D minValue
	a (Ldkl$b;)D compute
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Lnet/minecraft/util/CubicSpline; spline
dkm$w$a net/minecraft/world/level/levelgen/DensityFunctions$Spline$Coordinate
	b CODEC
	c function
	a ()Lnet/minecraft/core/Holder; function
	a (Ldkl$f;)Ldkm$w$a; mapAll
	a (Ldkm$w$b;)F apply
	a (Ljava/lang/Object;)F apply
	b ()F minValue
	c ()F maxValue
dkm$w$b net/minecraft/world/level/levelgen/DensityFunctions$Spline$Point
	a context
	a ()Ldkl$b; context
dkm$x net/minecraft/world/level/levelgen/DensityFunctions$TransformerWithContext
	a (Ldkl$b;)D compute
	a (Ldkl$b;D)D transform
	a ([DLdkl$a;)V fillArray
	j ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
dkm$y net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction
	a LOGGER
	a (Ldkm$y$a;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Ldkm$y; create
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Ldkm$y$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; argument1
	l ()Lnet/minecraft/world/level/levelgen/DensityFunction; argument2
dkm$y$a net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type
	a ADD
	b MUL
	c MIN
	d MAX
	e codec
	f name
	g $VALUES
	a ()[Ldkm$y$a; $values
	c ()Ljava/lang/String; getSerializedName
dkm$z net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler
	a CODEC
	e input
	f noise
	g rarityValueMapper
	h DATA_CODEC
	a ()D minValue
	a (Ldkl$b;D)D transform
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
	k ()Ldkl$c; noise
	l ()Ldkm$z$a; rarityValueMapper
dkm$z$a net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper
	a TYPE1
	b TYPE2
	c CODEC
	d name
	e mapper
	f maxRarity
	g $VALUES
	a ()[Ldkm$z$a; $values
	c ()Ljava/lang/String; getSerializedName
dkt$a net/minecraft/world/level/levelgen/LegacyRandomSource$LegacyPositionalRandomFactory
	a seed
	a (III)Lnet/minecraft/util/RandomSource; at
	a (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; fromHashOf
	a (Ljava/lang/StringBuilder;)V parityConfigString
dkw$a net/minecraft/world/level/levelgen/NoiseChunk$BlendAlpha
	a ()D minValue
	a (Ldkl$b;)D compute
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dkw$b net/minecraft/world/level/levelgen/NoiseChunk$BlendOffset
	a ()D minValue
	a (Ldkl$b;)D compute
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dkw$c net/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller
dkw$d net/minecraft/world/level/levelgen/NoiseChunk$Cache2D
	a function
	e lastPos2D
	f lastValue
	a (Ldkl$b;)D compute
	a ([DLdkl$a;)V fillArray
	j ()Ldkm$l$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dkw$e net/minecraft/world/level/levelgen/NoiseChunk$CacheAllInCell
	e noiseFiller
	f values
	a (Ldkl$b;)D compute
	a ([DLdkl$a;)V fillArray
	j ()Ldkm$l$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dkw$f net/minecraft/world/level/levelgen/NoiseChunk$CacheOnce
	e function
	f lastCounter
	g lastArrayCounter
	h lastValue
	i lastArray
	a (Ldkl$b;)D compute
	a ([DLdkl$a;)V fillArray
	j ()Ldkm$l$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dkw$g net/minecraft/world/level/levelgen/NoiseChunk$FlatCache
	e noiseFiller
	f values
	a (Ldkl$b;)D compute
	a ([DLdkl$a;)V fillArray
	j ()Ldkm$l$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dkw$h net/minecraft/world/level/levelgen/NoiseChunk$NoiseChunkDensityFunction
	a ()D minValue
	b ()D maxValue
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dkw$i net/minecraft/world/level/levelgen/NoiseChunk$NoiseInterpolator
	e slice0
	f slice1
	g noiseFiller
	h noise000
	i noise001
	j noise100
	k noise101
	l noise010
	m noise011
	n noise110
	o noise111
	p valueXZ00
	q valueXZ10
	r valueXZ01
	s valueXZ11
	t valueZ0
	u valueZ1
	v value
	a (D)V updateForY
	a (II)[[D allocateSlice
	a (Ldkl$b;)D compute
	a ([DLdkl$a;)V fillArray
	b (D)V updateForX
	b (II)V selectCellYZ
	c (D)V updateForZ
	j ()Ldkm$l$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
	l ()V swapSlices
dkz$a net/minecraft/world/level/levelgen/NoiseRouterData$QuantizedSpaghettiRarity
	a (D)D getSphaghettiRarity2D
	b (D)D getSpaghettiRarity3D
dlc$a net/minecraft/world/level/levelgen/OreVeinifier$VeinType
	a COPPER
	b IRON
	c minY
	d maxY
	e ore
	f rawOreBlock
	g filler
	h $VALUES
	a ()[Ldlc$a; $values
dlh$a net/minecraft/world/level/levelgen/RandomSupport$Seed128bit
	a seedLo
	b seedHi
	a ()Ldlh$a; mixed
	a (JJ)Ldlh$a; xor
	a (Ldlh$a;)Ldlh$a; xor
	b ()J seedLo
	c ()J seedHi
dlj$a net/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface
	a INSTANCE
	c CODEC
	d $VALUES
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$e; apply
	b ()[Ldlj$a; $values
dlj$aa net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource
	a anchor
	c surfaceDepthMultiplier
	d addStoneDepth
	e CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$e; apply
	b ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; anchor
	c ()I surfaceDepthMultiplier
	d ()Z addStoneDepth
dlj$b net/minecraft/world/level/levelgen/SurfaceRules$Bandlands
	a INSTANCE
	c CODEC
	d $VALUES
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$u; apply
	b ()[Ldlj$b; $values
dlj$c net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource
	a CODEC
	c biomes
	d biomeNameTest
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$e; apply
dlj$d net/minecraft/world/level/levelgen/SurfaceRules$BlockRuleSource
	a resultState
	c rule
	d CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$u; apply
	b ()Lnet/minecraft/world/level/block/state/IBlockData; resultState
	c ()Ldlj$r; rule
dlj$e net/minecraft/world/level/levelgen/SurfaceRules$Condition
	b ()Z test
dlj$f net/minecraft/world/level/levelgen/SurfaceRules$ConditionSource
	b CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Lnet/minecraft/core/IRegistry;)Lcom/mojang/serialization/Codec; bootstrap
dlj$g net/minecraft/world/level/levelgen/SurfaceRules$Context
	A biome
	B blockY
	C waterHeight
	D stoneDepthBelow
	E stoneDepthAbove
	a HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE
	b SURFACE_CELL_BITS
	c SURFACE_CELL_SIZE
	d SURFACE_CELL_MASK
	e system
	f temperature
	g steep
	h hole
	i abovePreliminarySurface
	j randomState
	k chunk
	l noiseChunk
	m biomeGetter
	n context
	o lastPreliminarySurfaceCellOrigin
	p preliminarySurfaceCache
	q lastUpdateXZ
	r blockX
	s blockZ
	t surfaceDepth
	u lastSurfaceDepth2Update
	v surfaceSecondary
	w lastMinSurfaceLevelUpdate
	x minSurfaceLevel
	y lastUpdateY
	z pos
	a ()D getSurfaceSecondary
	a (I)I blockCoordToSurfaceCell
	a (II)V updateXZ
	a (IIIIII)V updateY
	b ()I getMinSurfaceLevel
	b (I)I surfaceCellToBlockCoord
dlj$g$a net/minecraft/world/level/levelgen/SurfaceRules$Context$AbovePreliminarySurfaceCondition
	b ()Z test
dlj$g$b net/minecraft/world/level/levelgen/SurfaceRules$Context$HoleCondition
	a ()Z compute
dlj$g$c net/minecraft/world/level/levelgen/SurfaceRules$Context$SteepMaterialCondition
	a ()Z compute
dlj$g$d net/minecraft/world/level/levelgen/SurfaceRules$Context$TemperatureHelperCondition
	a ()Z compute
dlj$h net/minecraft/world/level/levelgen/SurfaceRules$Hole
	a INSTANCE
	c CODEC
	d $VALUES
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$e; apply
	b ()[Ldlj$h; $values
dlj$i net/minecraft/world/level/levelgen/SurfaceRules$LazyCondition
	a lastUpdate
	c context
	d result
	a ()Z compute
	b ()Z test
	c ()J getContextLastUpdate
dlj$j net/minecraft/world/level/levelgen/SurfaceRules$LazyXZCondition
	c ()J getContextLastUpdate
dlj$k net/minecraft/world/level/levelgen/SurfaceRules$LazyYCondition
	c ()J getContextLastUpdate
dlj$l net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource
	a noise
	c minThreshold
	d maxThreshold
	e CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$e; apply
	b ()Lnet/minecraft/resources/ResourceKey; noise
	c ()D minThreshold
	d ()D maxThreshold
dlj$m net/minecraft/world/level/levelgen/SurfaceRules$NotCondition
	a target
	a ()Ldlj$e; target
	b ()Z test
dlj$n net/minecraft/world/level/levelgen/SurfaceRules$NotConditionSource
	a target
	c CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$e; apply
	b ()Ldlj$f; target
dlj$o net/minecraft/world/level/levelgen/SurfaceRules$RuleSource
	b CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Lnet/minecraft/core/IRegistry;)Lcom/mojang/serialization/Codec; bootstrap
dlj$p net/minecraft/world/level/levelgen/SurfaceRules$SequenceRule
	a rules
	a ()Ljava/util/List; rules
dlj$q net/minecraft/world/level/levelgen/SurfaceRules$SequenceRuleSource
	a sequence
	c CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$u; apply
	b ()Ljava/util/List; sequence
dlj$r net/minecraft/world/level/levelgen/SurfaceRules$StateRule
	a state
	a ()Lnet/minecraft/world/level/block/state/IBlockData; state
dlj$s net/minecraft/world/level/levelgen/SurfaceRules$Steep
	a INSTANCE
	c CODEC
	d $VALUES
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$e; apply
	b ()[Ldlj$s; $values
dlj$t net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck
	a offset
	c addSurfaceDepth
	d secondaryDepthRange
	e surfaceType
	f CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$e; apply
	b ()I offset
	c ()Z addSurfaceDepth
	d ()I secondaryDepthRange
	e ()Lnet/minecraft/world/level/levelgen/placement/CaveSurface; surfaceType
dlj$u net/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule
dlj$v net/minecraft/world/level/levelgen/SurfaceRules$Temperature
	a INSTANCE
	c CODEC
	d $VALUES
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$e; apply
	b ()[Ldlj$v; $values
dlj$w net/minecraft/world/level/levelgen/SurfaceRules$TestRule
	a condition
	b followup
	a ()Ldlj$e; condition
	b ()Ldlj$u; followup
dlj$x net/minecraft/world/level/levelgen/SurfaceRules$TestRuleSource
	a ifTrue
	c thenRun
	d CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$u; apply
	b ()Ldlj$f; ifTrue
	c ()Ldlj$o; thenRun
dlj$y net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource
	a randomName
	c trueAtAndBelow
	d falseAtAndAbove
	e CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$e; apply
	b ()Lnet/minecraft/resources/MinecraftKey; randomName
	c ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; trueAtAndBelow
	d ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; falseAtAndAbove
dlj$z net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource
	a offset
	c surfaceDepthMultiplier
	d addStoneDepth
	e CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldlj$g;)Ldlj$e; apply
	b ()I offset
	c ()I surfaceDepthMultiplier
	d ()Z addStoneDepth
dlm$a net/minecraft/world/level/levelgen/VerticalAnchor$AboveBottom
	d CODEC
	e offset
	a (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I resolveY
	c ()I offset
dlm$b net/minecraft/world/level/levelgen/VerticalAnchor$Absolute
	d CODEC
	e y
	a (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I resolveY
	c ()I y
dlm$c net/minecraft/world/level/levelgen/VerticalAnchor$BelowTop
	d CODEC
	e offset
	a (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I resolveY
	c ()I offset
dln$b net/minecraft/world/level/levelgen/WorldDimensions$Complete
	a dimensions
	b specialWorldProperty
	a ()Lcom/mojang/serialization/Lifecycle; lifecycle
	b ()Lnet/minecraft/core/IRegistryCustom$Dimension; dimensionsRegistryAccess
	c ()Lnet/minecraft/core/IRegistry; dimensions
	d ()Leck$a; specialWorldProperty
dlr$a net/minecraft/world/level/levelgen/WorldgenRandom$Algorithm
	a LEGACY
	b XOROSHIRO
	c constructor
	d $VALUES
	a ()[Ldlr$a; $values
	a (J)Lnet/minecraft/util/RandomSource; newInstance
dlt$a net/minecraft/world/level/levelgen/XoroshiroRandomSource$XoroshiroPositionalRandomFactory
	a seedLo
	b seedHi
	a (III)Lnet/minecraft/util/RandomSource; at
	a (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; fromHashOf
	a (Ljava/lang/StringBuilder;)V parityConfigString
dlu$a net/minecraft/world/level/levelgen/blending/Blender$BlendingOutput
	a alpha
	b blendingOffset
	a ()D alpha
	b ()D blendingOffset
dlu$b net/minecraft/world/level/levelgen/blending/Blender$CellValueGetter
dlu$c net/minecraft/world/level/levelgen/blending/Blender$DistanceGetter
dlv$a net/minecraft/world/level/levelgen/blending/BlendingData$BiomeConsumer
dlv$b net/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer
dlv$c net/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer
dmo$a net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$CanyonShapeConfiguration
	a CODEC
	b distanceFactor
	c thickness
	d widthSmoothness
	e horizontalRadiusFactor
	f verticalRadiusDefaultFactor
	g verticalRadiusCenterFactor
dmx$a net/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker
dn$a net/minecraft/commands/CommandBuildContext$Configurable
	a (Ldn$b;)V missingTagAccessPolicy
dn$b net/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy
	a CREATE_NEW
	b FAIL
	c $VALUES
	a ()[Ldn$b; $values
dnx net/minecraft/world/level/levelgen/feature/FeatureCountTracker
	a LOGGER
	b data
	a ()V clearCounts
	a (Lnet/minecraft/server/level/WorldServer;)V chunkDecorated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/levelgen/feature/WorldGenFeatureConfigured;Ljava/util/Optional;)V featurePlaced
	b ()V logCounts
dnx$a net/minecraft/world/level/levelgen/feature/FeatureCountTracker$FeatureData
	a feature
	b topFeature
	a ()Lnet/minecraft/world/level/levelgen/feature/WorldGenFeatureConfigured; feature
	b ()Ljava/util/Optional; topFeature
dnx$b net/minecraft/world/level/levelgen/feature/FeatureCountTracker$LevelData
	a featureData
	b chunksWithFeatures
	a ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; featureData
	b ()Lorg/apache/commons/lang3/mutable/MutableInt; chunksWithFeatures
dol$a net/minecraft/world/level/levelgen/feature/LakeFeature$Configuration
	a CODEC
	b fluid
	c barrier
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; fluid
	b ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; barrier
dom$a net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone
	a root
	b pointingUp
	c radius
	d bluntness
	e scale
	a ()I getHeight
	a (F)I getHeightAtRadius
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Ldom$b;)Z moveBackUntilBaseIsInsideStoneAndShrinkRadiusIfNecessary
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Ldom$b;)V placeBlocks
	a (Lnet/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration;)Z isSuitableForWind
	b ()I getMinY
	c ()I getMaxY
dom$b net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter
	a originY
	b windSpeed
	a ()Ldom$b; noWind
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; offset
dp$a net/minecraft/commands/CommandFunction$CacheableFunction
	a NONE
	b id
	c resolved
	d function
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lnet/minecraft/server/CustomFunctionData;)Ljava/util/Optional; get
dp$b net/minecraft/commands/CommandFunction$CommandEntry
	a parse
	a (Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/commands/CommandListenerWrapper;)I execute
dp$c net/minecraft/commands/CommandFunction$CommandMacro
	a DECIMAL_FORMAT
	b parameters
	c MAX_CACHE_ENTRIES
	d cache
	a (Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/commands/CustomFunction; substituteAndParse
	a (Lnet/minecraft/nbt/NBTBase;)Ljava/lang/String; stringify
	a (Lnet/minecraft/nbt/NBTTagCompound;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/commands/CustomFunction; instantiate
dp$d net/minecraft/commands/CommandFunction$Entry
dp$e net/minecraft/commands/CommandFunction$FunctionEntry
	a function
dp$f net/minecraft/commands/CommandFunction$MacroEntry
	a segments
	b parameters
	a ()Ljava/util/List; parameters
	a (Ljava/util/List;)Ljava/lang/String; substitute
dpg$b net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader
	a (Ljava/lang/Long;)Ljava/util/List; load
dpr$a net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer
	a CODEC
	b height
	c state
	a ()Lnet/minecraft/util/valueproviders/IntProvider; height
	b ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; state
dqi$a net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState
	a CODEC
	b target
	c state
dqw$a net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder
	a trunkProvider
	b foliageProvider
	c trunkPlacer
	d foliagePlacer
	e rootPlacer
	f dirtProvider
	g minimumSize
	h decorators
	i ignoreVines
	j forceDirt
	a ()Ldqw$a; ignoreVines
	a (Ljava/util/List;)Ldqw$a; decorators
	a (Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider;)Ldqw$a; dirt
	b ()Ldqw$a; forceDirt
	c ()Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration; build
dr$a net/minecraft/commands/CommandSigningContext$SignedArguments
	b arguments
	a ()Ljava/util/Map; arguments
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; getArgument
drm$a net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment
	a pos
	b radiusOffset
	c doubleTrunk
	a ()Lnet/minecraft/core/BlockPosition; pos
	b ()I radiusOffset
	c ()Z doubleTrunk
drm$b net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter
	a (Lnet/minecraft/core/BlockPosition;)Z isSet
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V set
dsj$a net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider$Rule
	a CODEC
	b ifTrue
	c then
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; ifTrue
	b ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; then
dss$a net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context
	a level
	b decorationSetter
	c random
	d logs
	e leaves
	f roots
	a ()Lnet/minecraft/world/level/VirtualLevelReadable; level
	a (Lnet/minecraft/core/BlockPosition;)Z isAir
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean;)V placeVine
	b ()Lnet/minecraft/util/RandomSource; random
	c ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; logs
	d ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; leaves
	e ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; roots
dsz$a net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords
	a attachment
	b branchBase
	a ()I getBranchBase
dtk$a net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets$Bootstrap
	a context
	a ()V run
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/resources/ResourceKey;Ljava/util/Set;ZZ[Lnet/minecraft/world/level/levelgen/flat/WorldGenFlatLayerInfo;)V register
dtx net/minecraft/world/level/levelgen/material/WorldGenMaterialRule
	a (Lnet/minecraft/world/level/levelgen/NoiseChunk;III)Lnet/minecraft/world/level/block/state/IBlockData; apply
du$b net/minecraft/commands/Commands$ParseFunction
duy$a net/minecraft/world/level/levelgen/presets/WorldPresets$Bootstrap
	a context
	b noiseSettings
	c biomes
	d placedFeatures
	e structureSets
	f multiNoiseBiomeSourceParameterLists
	g overworldDimensionType
	h netherStem
	i endStem
	a ()V bootstrap
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/dimension/WorldDimension;)V registerCustomOverworldPreset
	a (Lnet/minecraft/world/level/biome/WorldChunkManager;)V registerOverworlds
	a (Lnet/minecraft/world/level/biome/WorldChunkManager;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/dimension/WorldDimension; makeNoiseBasedOverworld
	a (Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/world/level/dimension/WorldDimension; makeOverworld
	a (Lnet/minecraft/world/level/dimension/WorldDimension;)Lnet/minecraft/world/level/levelgen/presets/WorldPreset; createPresetWithCustomOverworld
dvf net/minecraft/world/level/levelgen/structure/PostPlacementProcessor
	a NONE
dvh$a net/minecraft/world/level/levelgen/structure/SinglePieceStructure$PieceConstructor
dvi$a net/minecraft/world/level/levelgen/structure/Structure$GenerationContext
	a registryAccess
	b chunkGenerator
	c biomeSource
	d randomState
	e structureTemplateManager
	f random
	g seed
	h chunkPos
	i heightAccessor
	j validBiome
	a ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	a (JLnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/world/level/levelgen/SeededRandom; makeRandom
	b ()Lnet/minecraft/world/level/chunk/ChunkGenerator; chunkGenerator
	c ()Lnet/minecraft/world/level/biome/WorldChunkManager; biomeSource
	d ()Lnet/minecraft/world/level/levelgen/RandomState; randomState
	e ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; structureTemplateManager
	f ()Lnet/minecraft/world/level/levelgen/SeededRandom; random
	g ()J seed
	h ()Lnet/minecraft/world/level/ChunkCoordIntPair; chunkPos
	i ()Lnet/minecraft/world/level/LevelHeightAccessor; heightAccessor
	j ()Ljava/util/function/Predicate; validBiome
dvi$b net/minecraft/world/level/levelgen/structure/Structure$GenerationStub
	a position
	b generator
	a ()Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder; getPiecesBuilder
	b ()Lnet/minecraft/core/BlockPosition; position
	c ()Lcom/mojang/datafixers/util/Either; generator
dvi$c net/minecraft/world/level/levelgen/structure/Structure$StructureSettings
	a CODEC
	b biomes
	c spawnOverrides
	d step
	e terrainAdaptation
	a ()Lnet/minecraft/core/HolderSet; biomes
	b ()Ljava/util/Map; spawnOverrides
	c ()Lnet/minecraft/world/level/levelgen/WorldGenStage$Decoration; step
	d ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; terrainAdaptation
dvo$a net/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry
	a CODEC
	b structure
	c weight
	a ()Lnet/minecraft/core/Holder; structure
	b ()I weight
dvp$a net/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType
	a PIECE
	b STRUCTURE
	c CODEC
	d id
	e $VALUES
	a ()[Ldvp$a; $values
	c ()Ljava/lang/String; getSerializedName
dvv net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator
dvv$a net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context
	a config
	b chunkGenerator
	c structureTemplateManager
	d chunkPos
	e heightAccessor
	f random
	g seed
	a ()Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration; config
	b ()Lnet/minecraft/world/level/chunk/ChunkGenerator; chunkGenerator
	c ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; structureTemplateManager
	d ()Lnet/minecraft/world/level/ChunkCoordIntPair; chunkPos
	e ()Lnet/minecraft/world/level/LevelHeightAccessor; heightAccessor
	f ()Lnet/minecraft/world/level/levelgen/SeededRandom; random
	g ()J seed
dvw net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier
dvw$a net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context
	a chunkGenerator
	b biomeSource
	c randomState
	d seed
	e chunkPos
	f config
	g heightAccessor
	h validBiome
	i structureTemplateManager
	j registryAccess
	a ()Lnet/minecraft/world/level/chunk/ChunkGenerator; chunkGenerator
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;)Z validBiomeOnTop
	b ()Lnet/minecraft/world/level/biome/WorldChunkManager; biomeSource
	c ()Lnet/minecraft/world/level/levelgen/RandomState; randomState
	d ()J seed
	e ()Lnet/minecraft/world/level/ChunkCoordIntPair; chunkPos
	f ()Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration; config
	g ()Lnet/minecraft/world/level/LevelHeightAccessor; heightAccessor
	h ()Ljava/util/function/Predicate; validBiome
	i ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; structureTemplateManager
	j ()Lnet/minecraft/core/IRegistryCustom; registryAccess
dvz$a net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType
dvz$b net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$StructureTemplateType
dw$a net/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType
	a TAGS
	b ELEMENTS
	c ALL
	d $VALUES
	a ()Z shouldSuggestTags
	b ()Z shouldSuggestElements
	c ()[Ldw$a; $values
dw$b net/minecraft/commands/SharedSuggestionProvider$TextCoordinates
	a DEFAULT_LOCAL
	b DEFAULT_GLOBAL
	c x
	d y
	e z
dwf$a net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$ExclusionZone
	a CODEC
	b otherSet
	c chunkCount
	a ()Lnet/minecraft/core/Holder; otherSet
	a (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z isPlacementForbidden
	b ()I chunkCount
dwf$b net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReducer
dwf$c net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod
	a DEFAULT
	b LEGACY_TYPE_1
	c LEGACY_TYPE_2
	d LEGACY_TYPE_3
	e CODEC
	f name
	g reducer
	h $VALUES
	a ()[Ldwf$c; $values
	a (JIIIF)Z shouldGenerate
	c ()Ljava/lang/String; getSerializedName
dwl$a net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$PieceState
	a piece
	b free
	c depth
dwl$b net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$Placer
	a pools
	b maxDepth
	c chunkGenerator
	d structureTemplateManager
	e pieces
	f random
	g placing
	a (Lnet/minecraft/world/level/levelgen/structure/WorldGenFeaturePillagerOutpostPoolPiece;Lorg/apache/commons/lang3/mutable/MutableObject;IZLnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)V tryPlacingChildren
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;)Lnet/minecraft/resources/ResourceKey; readPoolName
dwt$a net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces$BuriedTreasurePiece
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Z isLiquid
dwx$a net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece
	a (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; makeResourceLocation
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	a (ZLnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	b ()Lnet/minecraft/resources/MinecraftKey; makeTemplateLocation
dwx$b net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$SectionGenerator
	a ()V init
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;ILdwx$a;Lnet/minecraft/core/BlockPosition;Ljava/util/List;Lnet/minecraft/util/RandomSource;)Z generate
dwz$a net/minecraft/world/level/levelgen/structure/structures/IglooPieces$IglooPiece
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/core/BlockPosition; makePosition
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dx$a net/minecraft/commands/arguments/AngleArgument$SingleAngle
	a angle
	b isRelative
	a (Lnet/minecraft/commands/CommandListenerWrapper;)F getAngle
dxc$a net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece$MossStoneSelector
	a (Lnet/minecraft/util/RandomSource;IIIZ)V next
dxe$a net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCorridor
	b hasRails
	c spiderCorridor
	d hasPlacedSpider
	h numSections
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;II)V fillColumnBetween
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;III)V placeDoubleLowerOrUpperSupport
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIII)Z hasSturdyNeighbours
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIILnet/minecraft/util/RandomSource;)V placeSupport
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;FIII)V maybePlaceCobWeb
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/resources/MinecraftKey;)Z createChest
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canPlaceColumnOnTopOf
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; findCorridorSize
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/block/state/IBlockData;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V fillColumnDown
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canHangChainBelow
	c (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/block/state/IBlockData;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V fillPillarDownOrChainUp
dxe$b net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCrossing
	b direction
	c isTwoFloored
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIII)V placeSupportPillar
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; findCrossing
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxe$c net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece
	a type
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Z isInInvalidLocation
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/block/state/IBlockData;III)V setPlanksBlock
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIII)Z isSupportingBox
	a (Lnet/minecraft/world/level/IWorldReader;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Z canBeReplaced
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxe$d net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftRoom
	b childEntranceBoxes
	a (III)V move
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxe$e net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftStairs
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; findStairs
dxf$a net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type
	a NORMAL
	b MESA
	c CODEC
	d BY_ID
	e name
	f woodState
	g planksState
	h fenceState
	i $VALUES
	a ()Ljava/lang/String; getName
	a (I)Ldxf$a; byId
	b ()Lnet/minecraft/world/level/block/state/IBlockData; getWoodState
	c ()Ljava/lang/String; getSerializedName
	d ()Lnet/minecraft/world/level/block/state/IBlockData; getPlanksState
	e ()Lnet/minecraft/world/level/block/state/IBlockData; getFenceState
	f ()[Ldxf$a; $values
dxg$a net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeCrossing
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldxg$a; createPiece
dxg$b net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeEndFiller
	a WIDTH
	b HEIGHT
	c DEPTH
	d selfSeed
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxg$b; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxg$c net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeStraight
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxg$c; createPiece
dxg$d net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorStairsPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldxg$d; createPiece
dxg$e net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorTBalconyPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldxg$e; createPiece
dxg$f net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleEntrance
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxg$f; createPiece
dxg$g net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorCrossingPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldxg$g; createPiece
dxg$h net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorLeftTurnPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	d isNeedingChest
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxg$h; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxg$i net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldxg$i; createPiece
dxg$j net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorRightTurnPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	d isNeedingChest
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxg$j; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxg$k net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleStalkRoom
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldxg$k; createPiece
dxg$l net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$MonsterThrone
	a WIDTH
	b HEIGHT
	c DEPTH
	d hasPlacedSpawner
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIIILnet/minecraft/core/EnumDirection;)Ldxg$l; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxg$m net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece
	a (Ldxg$q;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxg$m; generatePiece
	a (Ldxg$q;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;IZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateAndAddPiece
	a (Ldxg$q;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateChildForward
	a (Ljava/util/List;)I updatePieceWeight
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Z isOkBox
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Ldxg$q;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateChildLeft
	c (Ldxg$q;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateChildRight
dxg$n net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$PieceWeight
	a pieceClass
	b weight
	c placeCount
	d maxPlaceCount
	e allowInRow
	a ()Z isValid
	a (I)Z doPlace
dxg$o net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$RoomCrossing
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldxg$o; createPiece
dxg$p net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StairsRoom
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIIILnet/minecraft/core/EnumDirection;)Ldxg$p; createPiece
dxg$q net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece
	a previousPiece
	b availableBridgePieces
	c availableCastlePieces
	d pendingChildren
dxi$a net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces$NetherFossilPiece
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxk$a net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXRoom
	a (Ldxk$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldxk$v;Lnet/minecraft/util/RandomSource;)Ldxk$r; create
dxk$b net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXYRoom
	a (Ldxk$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldxk$v;Lnet/minecraft/util/RandomSource;)Ldxk$r; create
dxk$c net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYRoom
	a (Ldxk$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldxk$v;Lnet/minecraft/util/RandomSource;)Ldxk$r; create
dxk$d net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYZRoom
	a (Ldxk$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldxk$v;Lnet/minecraft/util/RandomSource;)Ldxk$r; create
dxk$e net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleZRoom
	a (Ldxk$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldxk$v;Lnet/minecraft/util/RandomSource;)Ldxk$r; create
dxk$f net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleRoom
	a (Ldxk$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldxk$v;Lnet/minecraft/util/RandomSource;)Ldxk$r; create
dxk$g net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleTopRoom
	a (Ldxk$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldxk$v;Lnet/minecraft/util/RandomSource;)Ldxk$r; create
dxk$h net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentBuilding
	C WIDTH
	D HEIGHT
	E DEPTH
	F TOP_POSITION
	G sourceRoom
	H coreRoom
	I childPieces
	a BIOME_RANGE_CHECK
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V generateEntranceArchs
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (ZILnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V generateWing
	b (Lnet/minecraft/util/RandomSource;)Ljava/util/List; generateRoomGraph
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V generateEntranceWall
	c (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V generateRoofPiece
	d (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V generateLowerWall
	e (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V generateMiddleWall
	f (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V generateUpperWall
dxk$i net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentRoomFitter
	a (Ldxk$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldxk$v;Lnet/minecraft/util/RandomSource;)Ldxk$r; create
dxk$j net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentCoreRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dxk$k net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dxk$l net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXYRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dxk$m net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dxk$n net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYZRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dxk$o net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleZRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dxk$p net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentEntryRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dxk$q net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPenthouse
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dxk$r net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece
	A PENTHOUSE_INDEX
	B roomDefinition
	b BASE_GRAY
	c BASE_LIGHT
	d BASE_BLACK
	h DOT_DECO_DATA
	i LAMP_BLOCK
	j DO_FILL
	k FILL_BLOCK
	l FILL_KEEP
	m GRIDROOM_WIDTH
	n GRIDROOM_DEPTH
	o GRIDROOM_HEIGHT
	p GRID_WIDTH
	q GRID_DEPTH
	r GRID_HEIGHT
	s GRID_FLOOR_COUNT
	t GRID_SIZE
	u GRIDROOM_SOURCE_INDEX
	v GRIDROOM_TOP_CONNECT_INDEX
	w GRIDROOM_LEFTWING_CONNECT_INDEX
	x GRIDROOM_RIGHTWING_CONNECT_INDEX
	y LEFTWING_INDEX
	z RIGHTWING_INDEX
	a (Lnet/minecraft/core/EnumDirection;Ldxk$v;III)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; makeBoundingBox
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;III)V spawnElder
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIIILnet/minecraft/world/level/block/state/IBlockData;)V generateBoxOnFillOnly
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIZ)V generateDefaultFloor
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIII)Z chunkIntersects
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIII)V generateWaterBox
	c (III)I getRoomIndex
dxk$s net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleRoom
	a mainDesign
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dxk$t net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleTopRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dxk$u net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentWingRoom
	a mainDesign
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dxk$v net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition
	a index
	b connections
	c hasOpening
	d claimed
	e isSource
	f scanIndex
	a ()V updateOpenings
	a (I)Z findSource
	a (Lnet/minecraft/core/EnumDirection;Ldxk$v;)V setConnection
	b ()Z isSpecial
	c ()I countOpenings
dxm$a net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$OceanRuinPiece
	h biomeType
	i integrity
	j isLarge
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getHeight
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;FLdxn$a;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/nbt/NBTTagCompound;)Ldxm$a; create
dxn$a net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type
	a WARM
	b COLD
	c CODEC
	d name
	e $VALUES
	a ()Ljava/lang/String; getName
	b ()[Ldxn$a; $values
	c ()Ljava/lang/String; getSerializedName
dxo$a net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties
	a CODEC
	b cold
	c mossiness
	d airPocket
	e overgrown
	f vines
	g replaceWithBlackstone
dxo$b net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement
	a ON_LAND_SURFACE
	b PARTLY_BURIED
	c ON_OCEAN_FLOOR
	d IN_MOUNTAIN
	e UNDERGROUND
	f IN_NETHER
	g CODEC
	h name
	i $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Ldxo$b; byName
	b ()[Ldxo$b; $values
	c ()Ljava/lang/String; getSerializedName
dxp$a net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure$Setup
	a CODEC
	b placement
	c airPocketProbability
	d mossiness
	e overgrown
	f vines
	g canBeCold
	h replaceWithBlackstone
	i weight
	a ()Ldxo$b; placement
	b ()F airPocketProbability
	c ()F mossiness
	d ()Z overgrown
	e ()Z vines
	f ()Z canBeCold
	g ()Z replaceWithBlackstone
	h ()F weight
dxq$a net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces$ShipwreckPiece
	h isBeached
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxs$a net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$ChestCorridor
	a WIDTH
	b HEIGHT
	c DEPTH
	d hasPlacedChest
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxs$a; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxs$b net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FillerCorridor
	a steps
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; findPieceBox
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxs$c net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FiveCrossing
	a WIDTH
	b HEIGHT
	c DEPTH
	d leftLow
	i leftHigh
	j rightLow
	k rightHigh
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxs$c; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxs$d net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$LeftTurn
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxs$d; createPiece
dxs$e net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Library
	a WIDTH
	b HEIGHT
	c TALL_HEIGHT
	d DEPTH
	i isTall
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxs$e; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxs$f net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PieceWeight
	a pieceClass
	b weight
	c placeCount
	d maxPlaceCount
	a ()Z isValid
	a (I)Z doPlace
dxs$g net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PortalRoom
	a WIDTH
	b HEIGHT
	c DEPTH
	d hasPlacedSpawner
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldxs$g; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxs$h net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PrisonHall
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxs$h; createPiece
dxs$i net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RightTurn
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxs$i; createPiece
dxs$j net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RoomCrossing
	a WIDTH
	b HEIGHT
	c DEPTH
	d type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxs$j; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxs$k net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$SmoothStoneSelector
	a (Lnet/minecraft/util/RandomSource;IIIZ)V next
dxs$l net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StairsDown
	a WIDTH
	b HEIGHT
	c DEPTH
	d isSource
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxs$l; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxs$m net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece
	a previousPiece
	b portalRoomPiece
	c pendingChildren
	h ()Lnet/minecraft/core/BlockPosition; getLocatorPosition
dxs$n net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Straight
	a WIDTH
	b HEIGHT
	c DEPTH
	d leftChild
	i rightChild
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxs$n; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dxs$o net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StraightStairsDown
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxs$o; createPiece
dxs$p net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece
	h entryDoor
	a (Ldxs$m;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateSmallDoorChildForward
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Ldxs$p$a;III)V generateSmallDoor
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Z isOkBox
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Ldxs$m;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateSmallDoorChildLeft
	b (Lnet/minecraft/util/RandomSource;)Ldxs$p$a; randomSmallDoor
	c (Ldxs$m;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateSmallDoorChildRight
dxs$p$a net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType
	a OPENING
	b WOOD_DOOR
	c GRATES
	d IRON_DOOR
	e $VALUES
	a ()[Ldxs$p$a; $values
dxs$q net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Turn
	a WIDTH
	b HEIGHT
	c DEPTH
dxw$a net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FirstFloorRoomCollection
	a (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x1
	a (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; get1x2SideEntrance
	b (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x1Secret
	b (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x2Secret
	d (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get2x2
	e (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get2x2Secret
dxw$b net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection
	a (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x1
	a (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; get1x2SideEntrance
	b (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x1Secret
	b (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x2Secret
	d (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get2x2
	e (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get2x2Secret
dxw$c net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionGrid
	a DEFAULT_SIZE
	b CLEAR
	c CORRIDOR
	d ROOM
	e START_ROOM
	f TEST_ROOM
	g BLOCKED
	h ROOM_1x1
	i ROOM_1x2
	j ROOM_2x2
	k ROOM_ORIGIN_FLAG
	l ROOM_DOOR_FLAG
	m ROOM_STAIRS_FLAG
	n ROOM_CORRIDOR_FLAG
	o ROOM_TYPE_MASK
	p ROOM_ID_MASK
	q random
	r baseGrid
	s thirdFloorGrid
	t floorRooms
	u entranceX
	v entranceY
	a ()V setupThirdFloor
	a (Ldxw$g;)Z cleanEdges
	a (Ldxw$g;II)Z isHouse
	a (Ldxw$g;IIII)Z isRoomId
	a (Ldxw$g;IILnet/minecraft/core/EnumDirection;I)V recursiveCorridor
	a (Ldxw$g;Ldxw$g;)V identifyRooms
	b (Ldxw$g;IIII)Lnet/minecraft/core/EnumDirection; get1x2RoomDirection
dxw$d net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionPiecePlacer
	a structureTemplateManager
	b random
	c startX
	d startY
	a (Ljava/util/List;Ldxw$e;)V entrance
	a (Ljava/util/List;Ldxw$e;Ldxw$g;Lnet/minecraft/core/EnumDirection;IIII)V traverseOuterWalls
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Ldxw$b;)V addRoom2x2Secret
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Ldxw$g;Ldxw$g;)V createRoof
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/EnumDirection;Ldxw$b;)V addRoom1x1
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;Ldxw$b;)V addRoom2x2
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;Ldxw$b;Z)V addRoom1x2
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Ljava/util/List;Ldxw$c;)V createMansion
	b (Ljava/util/List;Ldxw$e;)V traverseWallPiece
	c (Ljava/util/List;Ldxw$e;)V traverseTurn
	d (Ljava/util/List;Ldxw$e;)V traverseInnerTurn
dxw$e net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData
	a rotation
	b position
	c wallType
dxw$f net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SecondFloorRoomCollection
	a (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x1
	a (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; get1x2SideEntrance
	b (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x1Secret
	b (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x2Secret
	d (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get2x2
	e (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get2x2Secret
dxw$g net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid
	a grid
	b width
	c height
	d valueIfOutside
	a (II)I get
	a (III)V set
	a (IIII)V setif
	a (IIIII)V set
	b (III)Z edgesTo
dxw$h net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$ThirdFloorRoomCollection
dxw$i net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$WoodlandMansionPiece
	a (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; makeLocation
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b ()Lnet/minecraft/resources/MinecraftKey; makeTemplateLocation
dy$a net/minecraft/commands/arguments/ArgumentSignatures$Entry
	a name
	b signature
	a ()Ljava/lang/String; name
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lnet/minecraft/network/chat/MessageSignature; signature
dy$b net/minecraft/commands/arguments/ArgumentSignatures$Signer
dzb$a net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette
	a blocks
	b cache
	a ()Ljava/util/List; blocks
	a (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; blocks
dzb$b net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette
	a DEFAULT_BLOCK_STATE
	b ids
	c lastId
	a (I)Lnet/minecraft/world/level/block/state/IBlockData; stateFor
	a (Lnet/minecraft/world/level/block/state/IBlockData;)I idFor
	a (Lnet/minecraft/world/level/block/state/IBlockData;I)V addMapping
dzc$a net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$InputStreamOpener
dzc$b net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$Source
	a loader
	b lister
	a ()Ljava/util/function/Function; loader
	b ()Ljava/util/function/Supplier; lister
dzp$a net/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters
	a DIRECT_CODEC
	b CODEC
	c firstOctave
	d amplitudes
	a ()I firstOctave
	b ()Lit/unimi/dsi/fastutil/doubles/DoubleList; amplitudes
dzv$a net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap
	a ()Ldzv$a; copy
	b ()Lnet/minecraft/world/level/lighting/LightEngineStorageArray; copy
eaa$a net/minecraft/world/level/lighting/LayerLightSectionStorage$SectionState
	a EMPTY
	b MIN_NEIGHBORS
	c MAX_NEIGHBORS
	d HAS_DATA_BIT
	e NEIGHBOR_COUNT_BITS
	a (B)Z hasData
	a (BI)B neighborCount
	a (BZ)B hasData
	b (B)I neighborCount
	c (B)Leaa$b; type
eaa$b net/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType
	a EMPTY
	b LIGHT_ONLY
	c LIGHT_AND_DATA
	d display
	e $VALUES
	a ()Ljava/lang/String; display
	b ()[Leaa$b; $values
ead$a net/minecraft/world/level/lighting/LightEngine$QueueEntry
	a FROM_LEVEL_BITS
	b DIRECTION_BITS
	c LEVEL_MASK
	d DIRECTIONS_MASK
	e FLAG_FROM_EMPTY_SHAPE
	f FLAG_INCREASE_FROM_EMISSION
	a (I)J decreaseAllDirections
	a (ILnet/minecraft/core/EnumDirection;)J decreaseSkipOneDirection
	a (IZ)J increaseLightFromEmission
	a (IZLnet/minecraft/core/EnumDirection;)J increaseSkipOneDirection
	a (J)I getFromLevel
	a (JI)J withLevel
	a (JLnet/minecraft/core/EnumDirection;)Z shouldPropagateInDirection
	a (ZZZZZ)J increaseSkySourceInDirections
	b (IZLnet/minecraft/core/EnumDirection;)J increaseOnlyOneDirection
	b (J)Z isFromEmptyShape
	b (JLnet/minecraft/core/EnumDirection;)J withDirection
	c (J)Z isIncreaseFromEmission
	c (JLnet/minecraft/core/EnumDirection;)J withoutDirection
eag$a net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap
	b currentLowestY
	c topSections
	a ()Leag$a; copy
	b ()Lnet/minecraft/world/level/lighting/LightEngineStorageArray; copy
eah net/minecraft/world/level/lighting/SpatialLongSet
	a map
eah$a net/minecraft/world/level/lighting/SpatialLongSet$InternalMap
	a X_BITS
	b Z_BITS
	c Y_BITS
	d Y_OFFSET
	e Z_OFFSET
	g X_OFFSET
	h OUTER_MASK
	i lastPos
	j lastOuterKey
	k minSize
	a ()J removeFirstBit
	a (IJ)Z replaceBit
	a (J)J getOuterKey
	a (JI)J getFullKey
	b (IJ)Z removeFromEntry
	b (J)I getInnerKey
	c (J)Z addBit
	d (J)Z removeBit
	e (J)Z removeFromNullEntry
eao net/minecraft/world/level/material/FogType
	a LAVA
	b WATER
	c POWDER_SNOW
	d NONE
	e $VALUES
	a ()[Leao; $values
eap$a net/minecraft/world/level/material/LavaFluid$Flowing
	a (Ldfk$a;)V createFluidStateDefinition
	c (Lnet/minecraft/world/level/material/Fluid;)Z isSource
	d (Lnet/minecraft/world/level/material/Fluid;)I getAmount
eap$b net/minecraft/world/level/material/LavaFluid$Source
	c (Lnet/minecraft/world/level/material/Fluid;)Z isSource
	d (Lnet/minecraft/world/level/material/Fluid;)I getAmount
eaq$a net/minecraft/world/level/material/MapColor$Brightness
	a LOW
	b NORMAL
	c HIGH
	d LOWEST
	e id
	f modifier
	g VALUES
	h $VALUES
	a ()[Leaq$a; $values
	a (I)Leaq$a; byId
	b (I)Leaq$a; byIdUnsafe
eas$a net/minecraft/world/level/material/WaterFluid$Flowing
	a (Ldfk$a;)V createFluidStateDefinition
	c (Lnet/minecraft/world/level/material/Fluid;)Z isSource
	d (Lnet/minecraft/world/level/material/Fluid;)I getAmount
eas$b net/minecraft/world/level/material/WaterFluid$Source
	c (Lnet/minecraft/world/level/material/Fluid;)Z isSource
	d (Lnet/minecraft/world/level/material/Fluid;)I getAmount
ebb$a net/minecraft/world/level/pathfinder/Path$DebugData
	a openSet
	b closedSet
	c targetNodes
	a ()[Lnet/minecraft/world/level/pathfinder/PathPoint; openSet
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()[Lnet/minecraft/world/level/pathfinder/PathPoint; closedSet
	b (Lnet/minecraft/network/PacketDataSerializer;)Lebb$a; read
	c ()Ljava/util/Set; targetNodes
ebm$a net/minecraft/world/level/redstone/CollectingNeighborUpdater$FullNeighborUpdate
	a state
	b pos
	c block
	d neighborPos
	e movedByPiston
	a ()Lnet/minecraft/world/level/block/state/IBlockData; state
	a (Lnet/minecraft/world/level/World;)Z runNext
	b ()Lnet/minecraft/core/BlockPosition; pos
	c ()Lnet/minecraft/world/level/block/Block; block
	d ()Lnet/minecraft/core/BlockPosition; neighborPos
	e ()Z movedByPiston
ebm$b net/minecraft/world/level/redstone/CollectingNeighborUpdater$MultiNeighborUpdate
	a sourcePos
	b sourceBlock
	c skipDirection
	d idx
	a (Lnet/minecraft/world/level/World;)Z runNext
ebm$c net/minecraft/world/level/redstone/CollectingNeighborUpdater$NeighborUpdates
	a (Lnet/minecraft/world/level/World;)Z runNext
ebm$d net/minecraft/world/level/redstone/CollectingNeighborUpdater$ShapeUpdate
	a direction
	b state
	c pos
	d neighborPos
	e updateFlags
	f updateLimit
	a ()Lnet/minecraft/core/EnumDirection; direction
	a (Lnet/minecraft/world/level/World;)Z runNext
	b ()Lnet/minecraft/world/level/block/state/IBlockData; state
	c ()Lnet/minecraft/core/BlockPosition; pos
	d ()Lnet/minecraft/core/BlockPosition; neighborPos
	e ()I updateFlags
	f ()I updateLimit
ebm$e net/minecraft/world/level/redstone/CollectingNeighborUpdater$SimpleNeighborUpdate
	a pos
	b block
	c neighborPos
	a ()Lnet/minecraft/core/BlockPosition; pos
	a (Lnet/minecraft/world/level/World;)Z runNext
	b ()Lnet/minecraft/world/level/block/Block; block
	c ()Lnet/minecraft/core/BlockPosition; neighborPos
ebn net/minecraft/world/level/redstone/InstantNeighborUpdater
	b level
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V neighborChanged
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;II)V shapeUpdate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
ebp net/minecraft/world/level/redstone/Redstone
	a SIGNAL_MIN
	b SIGNAL_MAX
	c SIGNAL_NONE
ebr$a net/minecraft/world/level/saveddata/SavedData$Factory
	a constructor
	b deserializer
	c type
	a ()Ljava/util/function/Supplier; constructor
	b ()Ljava/util/function/Function; deserializer
	c ()Lnet/minecraft/util/datafix/DataFixTypes; type
ebw$b net/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch
	a startX
	b startY
	c width
	d height
	e mapColors
	a (Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V applyToMap
ebz$a net/minecraft/world/level/storage/CommandStorage$Container
	a TAG_CONTENTS
	b storage
	a (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; get
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTTagCompound;)V put
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	b (Ljava/lang/String;)Ljava/util/stream/Stream; getKeys
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lebz$a; load
ecg$a net/minecraft/world/level/storage/LevelStorageSource$LevelCandidates
	a levels
	a ()Z isEmpty
	b ()Ljava/util/List; levels
ecg$b net/minecraft/world/level/storage/LevelStorageSource$LevelDirectory
	a path
	a ()Ljava/lang/String; directoryName
	a (Ljava/time/LocalDateTime;)Ljava/nio/file/Path; corruptedDataFile
	a (Lnet/minecraft/world/level/storage/SavedFile;)Ljava/nio/file/Path; resourcePath
	b ()Ljava/nio/file/Path; dataFile
	c ()Ljava/nio/file/Path; oldDataFile
	d ()Ljava/nio/file/Path; iconFile
	e ()Ljava/nio/file/Path; lockFile
	f ()Ljava/nio/file/Path; path
ech$a net/minecraft/world/level/storage/LevelSummary$BackupStatus
	a NONE
	b DOWNGRADE
	c UPGRADE_TO_SNAPSHOT
	d shouldBackup
	e severe
	f translationKey
	g $VALUES
	a ()Z shouldBackup
	b ()Z isSevere
	c ()Ljava/lang/String; getTranslationKey
	d ()[Lech$a; $values
ech$b net/minecraft/world/level/storage/LevelSummary$SymlinkLevelSummary
	b ()Ljava/lang/String; getLevelName
	f ()J getLastPlayed
	q ()Z isDisabled
	s ()Lnet/minecraft/network/chat/IChatBaseComponent; getInfo
eck$a net/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty
	a NONE
	b FLAT
	c DEBUG
	d $VALUES
	a ()[Leck$a; $values
ecp$a net/minecraft/world/level/storage/loot/IntRange$IntChecker
ecp$b net/minecraft/world/level/storage/loot/IntRange$IntLimiter
ecq$c net/minecraft/world/level/storage/loot/LootContext$VisitedEntry
	a type
	b value
	a ()Lnet/minecraft/world/level/storage/loot/LootDataType; type
	b ()Ljava/lang/Object; value
ecv$a net/minecraft/world/level/storage/loot/LootDataType$Validator
ecw$a net/minecraft/world/level/storage/loot/LootParams$Builder
	a level
	b params
	c dynamicDrops
	d luck
	a ()Lnet/minecraft/server/level/WorldServer; getLevel
	a (F)Lecw$a; withLuck
	a (Lnet/minecraft/resources/MinecraftKey;Lecw$b;)Lecw$a; withDynamicDrop
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Ljava/lang/Object; getParameter
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;Ljava/lang/Object;)Lecw$a; withParameter
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet;)Lnet/minecraft/world/level/storage/loot/LootParams; create
	b (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Ljava/lang/Object; getOptionalParameter
	b (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;Ljava/lang/Object;)Lecw$a; withOptionalParameter
ecw$b net/minecraft/world/level/storage/loot/LootParams$DynamicDrop
ecx$a net/minecraft/world/level/storage/loot/LootPool$Builder
	a entries
	b conditions
	c functions
	d rolls
	e bonusRolls
	a ()Lecx$a; unwrap
	a (Ledj$a;)Lecx$a; add
	a (Leed$a;)Lecx$a; apply
	a (Lefp$a;)Lecx$a; when
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lecx$a; setRolls
	b ()Lnet/minecraft/world/level/storage/loot/LootSelector; build
	b (Leed$a;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; apply
	b (Lefp$a;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; when
	b (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lecx$a; setBonusRolls
	c ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; unwrap
	d ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; unwrap
ecy$a net/minecraft/world/level/storage/loot/LootTable$Builder
	a pools
	b functions
	c paramSet
	d randomSequence
	a ()Lecy$a; unwrap
	a (Lecx$a;)Lecy$a; withPool
	a (Leed$a;)Lecy$a; apply
	a (Lnet/minecraft/resources/MinecraftKey;)Lecy$a; setRandomSequence
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet;)Lecy$a; setParamSet
	b ()Lnet/minecraft/world/level/storage/loot/LootTable; build
	b (Leed$a;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; apply
	c ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; unwrap
eda$a net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder
	a entries
	a ()Leda$a; getThis
	a (Ledj$a;)Leda$a; otherwise
	ax_ ()Ledj$a; getThis
	b ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract; build
edc$a net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor
edf$a net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder
	a entries
	a ()Ledf$a; getThis
	ax_ ()Ledj$a; getThis
	b ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract; build
	b (Ledj$a;)Ledf$a; append
edj$a net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder
	a conditions
	a (Ledj$a;)Leda$a; otherwise
	a (Lefp$a;)Ledj$a; when
	ax_ ()Ledj$a; getThis
	b ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract; build
	b (Ledj$a;)Ledf$a; append
	b (Lefp$a;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; when
	c (Ledj$a;)Ledn$a; then
	d ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; unwrap
	e ()Ledj$a; unwrap
	f ()Ljava/util/List; getConditions
edl$a net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder
	a weight
	b quality
	c functions
	a ()Ljava/util/List; getFunctions
	a (I)Ledl$a; setWeight
	a (Leed$a;)Ledl$a; apply
	b (I)Ledl$a; setQuality
	b (Leed$a;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; apply
	c ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; unwrap
edl$b net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder
	c constructor
	ax_ ()Ledj$a; getThis
	b ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract; build
	g ()Ledl$b; getThis
edl$c net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase
	a (F)I getWeight
edl$d net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor
edn$a net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder
	a entries
	a ()Ledn$a; getThis
	ax_ ()Ledj$a; getThis
	b ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract; build
	c (Ledj$a;)Ledn$a; then
edq$a net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount
	a TYPE
	b extraRounds
	c probability
	d CODEC
	a ()Ledq$c; getType
	a (Lnet/minecraft/util/RandomSource;II)I calculateNewCount
	b ()I extraRounds
	c ()F probability
edq$b net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula
	a ()Ledq$c; getType
	a (Lnet/minecraft/util/RandomSource;II)I calculateNewCount
edq$c net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaType
	a id
	b codec
	a ()Lnet/minecraft/resources/MinecraftKey; id
	b ()Lcom/mojang/serialization/Codec; codec
edq$d net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops
	a CODEC
	b TYPE
	a ()Ledq$c; getType
	a (Lnet/minecraft/util/RandomSource;II)I calculateNewCount
edq$e net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount
	a CODEC
	b TYPE
	c bonusMultiplier
	a ()Ledq$c; getType
	a (Lnet/minecraft/util/RandomSource;II)I calculateNewCount
	b ()I bonusMultiplier
eds$a net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder
	a block
	b properties
	a ()Leds$a; getThis
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;)Leds$a; copy
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leec$a; getThis
edu$a net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder
	a source
	b ops
	a ()Ledu$a; getThis
	a (Ljava/lang/String;Ljava/lang/String;)Ledu$a; copy
	a (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyNBT$Action;)Ledu$a; copy
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leec$a; getThis
edu$b net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation
	a CODEC
	b sourcePath
	c targetPath
	d op
	a ()Ledu$d; sourcePath
	a (Ljava/util/function/Supplier;Lnet/minecraft/nbt/NBTBase;)V apply
	b ()Ledu$d; targetPath
	c ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyNBT$Action; op
edu$d net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Path
	a CODEC
	b string
	c path
	a ()Ljava/lang/String; string
	a (Ljava/lang/String;)Ledu$d; of
	b ()Lej$g; path
edv$a net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder
	a enchantments
	a ()Ledv$a; getThis
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Ledv$a; withEnchantment
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leec$a; getThis
edw$a net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder
	a levels
	b treasure
	a ()Ledw$a; getThis
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leec$a; getThis
	e ()Ledw$a; allowTreasure
edx$a net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder
	a destination
	b mapDecoration
	c zoom
	d searchRadius
	e skipKnownStructures
	a ()Ledx$a; getThis
	a (B)Ledx$a; setZoom
	a (I)Ledx$a; setSearchRadius
	a (Lnet/minecraft/tags/TagKey;)Ledx$a; setDestination
	a (Lnet/minecraft/world/level/saveddata/maps/MapIcon$Type;)Ledx$a; setMapDecoration
	a (Z)Ledx$a; setSkipKnownStructures
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leec$a; getThis
eec$a net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder
	a conditions
	a (Lefp$a;)Leec$a; when
	b (Lefp$a;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; when
	c ()Leec$a; getThis
	d ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; unwrap
	f ()Leec$a; unwrap
	g ()Ljava/util/List; getConditions
eec$b net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder
	a constructor
	a ()Leec$b; getThis
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leec$a; getThis
eed$a net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
eeg$a net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder
	a count
	b limit
	a ()Leeg$a; getThis
	a (I)Leeg$a; setLimit
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leec$a; getThis
eei$a net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder
	a modifiers
	a ()Leei$a; getThis
	a (Leei$c;)Leei$a; withModifier
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leec$a; getThis
eei$b net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier
	a CODEC
	b name
	c attribute
	d operation
	e amount
	f slots
	g id
	h SLOTS_CODEC
	a ()Ljava/lang/String; name
	b ()Lnet/minecraft/core/Holder; attribute
	c ()Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; operation
	d ()Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider; amount
	e ()Ljava/util/List; slots
	f ()Ljava/util/Optional; id
eei$c net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder
	a name
	b attribute
	c operation
	d amount
	e id
	f slots
	a ()Leei$b; build
	a (Ljava/util/UUID;)Leei$c; withUuid
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Leei$c; forSlot
eej$a net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder
	a patterns
	b append
	a ()Leej$a; getThis
	a (Lnet/minecraft/core/Holder;Lnet/minecraft/world/item/EnumColor;)Leej$a; addPattern
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/EnumColor;)Leej$a; addPattern
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leec$a; getThis
eek$a net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder
	a entries
	b type
	a ()Leek$a; getThis
	a (Ledj$a;)Leek$a; withEntry
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leec$a; getThis
eem$a net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder
	a enchantments
	b add
	a ()Leem$a; getThis
	a (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Leem$a; withEnchantment
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leec$a; getThis
eeq$a net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder
	a replace
	b resolutionContext
	c lore
	a ()Leeq$a; getThis
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Leeq$a; addLine
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Leeq$a; setResolutionContext
	a (Z)Leeq$a; setReplace
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leec$a; getThis
eeu$a net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder
	a effects
	a ()Leeu$a; getThis
	a (Lnet/minecraft/world/effect/MobEffectList;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Leeu$a; withEffect
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leec$a; getThis
eeu$b net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$EffectEntry
	a CODEC
	b effect
	c duration
	a ()Lnet/minecraft/core/Holder; effect
	b ()Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider; duration
efd$a net/minecraft/world/level/storage/loot/predicates/AllOfCondition$Builder
	a (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; create
efe$a net/minecraft/world/level/storage/loot/predicates/AnyOfCondition$Builder
	a (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; create
efg$a net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition$Builder
	a terms
	a (Lefp$a;)V addTerm
	a (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; create
efk$a net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder
	a scores
	b entityTarget
	a (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/IntRange;)Lefk$a; withScore
efo$a net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder
	a block
	b properties
	a (Lda$a;)Lefo$a; setProperties
efp$a net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder
efx$a net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder
	a period
	b value
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionTimeCheck; build
	a (J)Lefx$a; setPeriod
efz$a net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder
	a isRaining
	b isThundering
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionWeatherCheck; build
	a (Z)Lefz$a; setRaining
	b (Z)Lefz$a; setThundering
eg$a net/minecraft/commands/arguments/GameProfileArgument$Result
eg$b net/minecraft/commands/arguments/GameProfileArgument$SelectorResult
	a selector
egb$a net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter
	a ()Ljava/lang/String; getId
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/nbt/NBTBase; get
	b ()Ljava/util/Set; getReferencedContextParams
egw$a net/minecraft/world/level/timers/FunctionCallback$Serializer
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/timers/CustomFunctionCallback; deserialize
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/timers/CustomFunctionCallback;)V serialize
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer;)V serialize
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer; deserialize
egx$a net/minecraft/world/level/timers/FunctionTagCallback$Serializer
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/timers/CustomFunctionCallbackTag; deserialize
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/timers/CustomFunctionCallbackTag;)V serialize
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer;)V serialize
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer; deserialize
egy$a net/minecraft/world/level/timers/TimerCallback$Serializer
	a id
	b cls
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer;)V serialize
	b ()Ljava/lang/Class; getCls
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer; deserialize
eha$a net/minecraft/world/level/timers/TimerQueue$Event
	a triggerTime
	b sequentialId
	c id
	d callback
ehf$a net/minecraft/world/level/validation/PathAllowList$ConfigEntry
	a type
	b pattern
	a ()Lehf$b; type
	a (Ljava/lang/String;)Ljava/util/Optional; parse
	a (Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher; compile
	b ()Ljava/lang/String; pattern
	b (Ljava/lang/String;)Lehf$a; glob
	c (Ljava/lang/String;)Lehf$a; regex
	d (Ljava/lang/String;)Lehf$a; prefix
ehf$b net/minecraft/world/level/validation/PathAllowList$EntryType
	a FILESYSTEM
	b PREFIX
ehw$a net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer
ehw$b net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer
ehz$a net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer
ei$a net/minecraft/commands/arguments/MessageArgument$Message
	a text
	b parts
	a ()Ljava/lang/String; getText
	a (Lcom/mojang/brigadier/StringReader;Z)Lei$a; parseText
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/network/chat/IChatBaseComponent; resolveComponent
	a (Lnet/minecraft/commands/CommandListenerWrapper;Z)Lnet/minecraft/network/chat/IChatBaseComponent; toComponent
	b ()[Lei$b; getParts
ei$b net/minecraft/commands/arguments/MessageArgument$Part
	a start
	b end
	c selector
	a ()I getStart
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/network/chat/IChatBaseComponent; toComponent
	b ()I getEnd
	c ()Lnet/minecraft/commands/arguments/selector/EntitySelector; getSelector
eid$a net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer
eiw$a net/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer
ej$a net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode
	a INSTANCE
	a ()Lnet/minecraft/nbt/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/nbt/NBTBase;)I removeTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
ej$b net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode
	a name
	a ()Lnet/minecraft/nbt/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/nbt/NBTBase;)I removeTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
ej$c net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode
	a index
	a ()Lnet/minecraft/nbt/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/nbt/NBTBase;)I removeTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
ej$d net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode
	a pattern
	b predicate
	a ()Lnet/minecraft/nbt/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/nbt/NBTBase;)I removeTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
ej$e net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode
	a name
	b pattern
	c predicate
	a ()Lnet/minecraft/nbt/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/nbt/NBTBase;)I removeTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
ej$f net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode
	a predicate
	a ()Lnet/minecraft/nbt/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/nbt/NBTBase;)I removeTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
ej$g net/minecraft/commands/arguments/NbtPathArgument$NbtPath
	a original
	b nodeToOriginalPosition
	c nodes
	a ()I estimatePathDepth
	a (ILnet/minecraft/nbt/NBTTagCompound;Ljava/util/List;)I insert
	a (Lej$h;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; createNotFoundException
	a (Ljava/util/List;Ljava/util/function/Function;)I apply
	a (Lnet/minecraft/nbt/NBTBase;)Ljava/util/List; get
	a (Lnet/minecraft/nbt/NBTBase;I)Z isTooDeep
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)Ljava/util/List; getOrCreate
	a (Lnet/minecraft/nbt/NBTBase;Lnet/minecraft/nbt/NBTBase;)I set
	b (Lnet/minecraft/nbt/NBTBase;)I countMatching
	c (Lnet/minecraft/nbt/NBTBase;)I remove
	d (Lnet/minecraft/nbt/NBTBase;)Ljava/util/List; getOrCreateParents
ej$h net/minecraft/commands/arguments/NbtPathArgument$Node
	a ()Lnet/minecraft/nbt/NBTBase; createPreferredParentTag
	a (Ljava/util/List;)Ljava/util/List; get
	a (Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List; collect
	a (Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List; getOrCreate
	a (Lnet/minecraft/nbt/NBTBase;)I removeTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
ejg com/mojang/blaze3d/Blaze3D
	a ()V youJustLostTheGame
	a (Leka;F)V process
	b ()D getTime
	b (Leka;F)V render
ejh com/mojang/blaze3d/DontObfuscate
eji com/mojang/blaze3d/FieldsAreNonnullByDefault
ejj com/mojang/blaze3d/MethodsReturnNonnullByDefault
ejk com/mojang/blaze3d/audio/Channel
	a BUFFER_DURATION_SECONDS
	b LOGGER
	c QUEUED_BUFFER_COUNT
	d source
	e initialized
	f streamingBufferSize
	g stream
	a ()Lejk; create
	a (F)V setPitch
	a (I)V pumpBuffers
	a (Lejp;)V attachStaticBuffer
	a (Lgdi;)V attachBufferStream
	a (Ljavax/sound/sampled/AudioFormat;I)I calculateBufferSize
	a (Lnet/minecraft/world/phys/Vec3D;)V setSelfPosition
	a (Z)V setLooping
	b ()V destroy
	b (F)V setVolume
	b (Z)V setRelative
	c ()V play
	c (F)V linearAttenuation
	d ()V pause
	e ()V unpause
	f ()V stop
	g ()Z playing
	h ()Z stopped
	i ()V disableAttenuation
	j ()V updateStream
	k ()I getState
	l ()I removeProcessedBuffers
ejl com/mojang/blaze3d/audio/Library
	a LOGGER
	b NO_DEVICE
	c DEFAULT_CHANNEL_COUNT
	d currentDevice
	e context
	f supportsDisconnections
	g defaultDeviceName
	h EMPTY
	i staticChannels
	j streamingChannels
	k listener
	a ()Ljava/lang/String; getDefaultDeviceName
	a (Lejk;)V releaseChannel
	a (Lejl$c;)Lejk; acquireChannel
	a (Ljava/lang/String;)J openDeviceOrFallback
	a (Ljava/lang/String;Z)V init
	a (Z)V setHrtf
	b ()Ljava/lang/String; getCurrentDeviceName
	b (Ljava/lang/String;)Ljava/util/OptionalLong; tryOpenDevice
	c ()Z hasDefaultDeviceChanged
	d ()V cleanup
	e ()Lejm; getListener
	f ()Ljava/lang/String; getDebugString
	g ()Ljava/util/List; getAvailableSoundDevices
	h ()Z isCurrentDeviceDisconnected
	i ()I getChannelCount
ejl$a com/mojang/blaze3d/audio/Library$ChannelPool
	a ()Lejk; acquire
	a (Lejk;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
ejl$b com/mojang/blaze3d/audio/Library$CountingChannelPool
	a limit
	b activeChannels
	a ()Lejk; acquire
	a (Lejk;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
ejl$c com/mojang/blaze3d/audio/Library$Pool
	a STATIC
	b STREAMING
	c $VALUES
	a ()[Lejl$c; $values
ejm com/mojang/blaze3d/audio/Listener
	a gain
	b position
	a ()Lnet/minecraft/world/phys/Vec3D; getListenerPosition
	a (F)V setGain
	a (Lnet/minecraft/world/phys/Vec3D;)V setListenerPosition
	a (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V setListenerOrientation
	b ()F getGain
	c ()V reset
ejn com/mojang/blaze3d/audio/OggAudioStream
	a EXPECTED_MAX_FRAME_SIZE
	b handle
	c audioFormat
	d input
	e buffer
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
	a (Lejn$a;)Z readFrame
	a (Ljava/nio/FloatBuffer;Lejn$a;)V convertMono
	a (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Lejn$a;)V convertStereo
	b ()Ljava/nio/ByteBuffer; readAll
	c ()Z refillFromStream
	d ()V forwardBuffer
ejn$a com/mojang/blaze3d/audio/OggAudioStream$OutputConcat
	a buffers
	b bufferSize
	c byteCount
	d currentBuffer
	a ()Ljava/nio/ByteBuffer; get
	a (F)V put
	b ()V createNewBuffer
ejo com/mojang/blaze3d/audio/OpenAlUtil
	a LOGGER
	a (I)Ljava/lang/String; alErrorToString
	a (JLjava/lang/String;)Z checkALCError
	a (Ljava/lang/String;)Z checkALError
	a (Ljavax/sound/sampled/AudioFormat;)I audioFormatToOpenAl
	b (I)Ljava/lang/String; alcErrorToString
ejp com/mojang/blaze3d/audio/SoundBuffer
	a data
	b format
	c hasAlBuffer
	d alBuffer
	a ()Ljava/util/OptionalInt; getAlBuffer
	b ()V discardAlBuffer
	c ()Ljava/util/OptionalInt; releaseAlBuffer
ejr com/mojang/blaze3d/font/GlyphInfo
	a ()F getBoldOffset
	a (Z)F getAdvance
	b ()F getShadowOffset
ejr$a com/mojang/blaze3d/font/GlyphInfo$SpaceGlyphInfo
ejs com/mojang/blaze3d/font/GlyphProvider
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lejr; getGlyph
ejt com/mojang/blaze3d/font/SheetGlyphInfo
	a ()I getPixelWidth
	a (II)V upload
	b ()I getPixelHeight
	c ()Z isColored
	d ()F getOversample
	e ()F getLeft
	f ()F getRight
	g ()F getUp
	h ()F getDown
	i ()F getBearingX
	j ()F getBearingY
eju com/mojang/blaze3d/font/SpaceProvider
	a glyphs
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lejr; getGlyph
eju$a com/mojang/blaze3d/font/SpaceProvider$Definition
	a CODEC
	c advances
	a ()Levp; type
	b ()Lcom/mojang/datafixers/util/Either; unpack
	c ()Ljava/util/Map; advances
ejv com/mojang/blaze3d/font/TrueTypeGlyphProvider
	a fontMemory
	b font
	c oversample
	d skip
	e shiftX
	f shiftY
	g pointScale
	h ascent
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lejr; getGlyph
	b ()Lorg/lwjgl/stb/STBTTFontinfo; validateFontOpen
ejv$a com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph
	b width
	c height
	d bearingX
	e bearingY
	f advance
	g index
ejy com/mojang/blaze3d/pipeline/MainTarget
	a DEFAULT_WIDTH
	b DEFAULT_HEIGHT
	l DEFAULT_DIMENSIONS
	a (Lejy$b;)Z allocateColorAttachment
	b (II)V createFrameBuffer
	b (Lejy$b;)Z allocateDepthAttachment
	c (II)Lejy$b; allocateAttachments
ejy$a com/mojang/blaze3d/pipeline/MainTarget$AttachmentState
	a NONE
	b COLOR
	c DEPTH
	d COLOR_DEPTH
	e VALUES
	f $VALUES
	a ()[Lejy$a; $values
	a (Lejy$a;)Lejy$a; with
ejy$b com/mojang/blaze3d/pipeline/MainTarget$Dimension
	a width
	b height
	a (II)Ljava/util/List; listWithFallback
ejz com/mojang/blaze3d/pipeline/RenderCall
eka com/mojang/blaze3d/pipeline/RenderPipeline
	a renderCalls
	b isRecording
	c recordingBuffer
	d isProcessing
	e processedBuffer
	f renderingBuffer
	a ()Z canBeginRecording
	a (Lejz;)V recordRenderCall
	b ()Z beginRecording
	c ()V endRecording
	d ()Z canBeginProcessing
	e ()Z beginProcessing
	f ()V processRecordedQueue
	g ()V endProcessing
	h ()Ljava/util/concurrent/ConcurrentLinkedQueue; startRendering
	i ()Ljava/util/concurrent/ConcurrentLinkedQueue; getRecordingQueue
	j ()Ljava/util/concurrent/ConcurrentLinkedQueue; getProcessedQueue
ekb com/mojang/blaze3d/pipeline/RenderTarget
	a RED_CHANNEL
	b GREEN_CHANNEL
	c width
	d height
	e viewWidth
	f viewHeight
	g useDepth
	h frameBufferId
	i colorTextureId
	j depthBufferId
	k filterMode
	l BLUE_CHANNEL
	m ALPHA_CHANNEL
	n clearChannels
	a ()V destroyBuffers
	a (FFFF)V setClearColor
	a (I)V setFilterMode
	a (II)V blitToScreen
	a (IIZ)V resize
	a (Lekb;)V copyDepthFrom
	a (Z)V bindWrite
	b ()V checkStatus
	b (IIZ)V createBuffers
	b (Z)V clear
	c ()V bindRead
	c (IIZ)V blitToScreen
	c (Z)V _bindWrite
	d ()V unbindRead
	d (IIZ)V _resize
	e ()V unbindWrite
	e (IIZ)V _blitToScreen
	f ()I getColorTextureId
	g ()I getDepthTextureId
ekc com/mojang/blaze3d/pipeline/TextureTarget
eke com/mojang/blaze3d/platform/ClipboardManager
	a FORMAT_UNAVAILABLE
	b clipboardScratchBuffer
	a (JLjava/lang/String;)V setClipboard
	a (JLjava/nio/ByteBuffer;[B)V pushClipboard
	a (JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String; getClipboard
ekf com/mojang/blaze3d/platform/DebugMemoryUntracker
	a UNTRACK
	a (J)V untrack
	a (Lorg/lwjgl/system/Pointer;)V untrack
ekg com/mojang/blaze3d/platform/DisplayData
	a width
	b height
	c fullscreenWidth
	d fullscreenHeight
	e isFullscreen
ekh com/mojang/blaze3d/platform/GlDebug
	a LOGGER
	b CIRCULAR_LOG_SIZE
	c MESSAGE_BUFFER
	d lastEntry
	e DEBUG_LEVELS
	f DEBUG_LEVELS_ARB
	g debugEnabled
	a ()Ljava/util/List; getLastOpenGlDebugMessages
	a (I)Ljava/lang/String; sourceToString
	a (IIIIIJJ)V printDebugLog
	a (IZ)V enableDebugCallback
	b ()Z isDebugEnabled
	b (I)Ljava/lang/String; typeToString
	c (I)Ljava/lang/String; severityToString
	d (I)Ljava/lang/String; printUnknownToken
ekh$a com/mojang/blaze3d/platform/GlDebug$LogEntry
	a id
	b source
	c type
	d severity
	e message
	f count
	a (IIIILjava/lang/String;)Z isSame
eki com/mojang/blaze3d/platform/GlUtil
	a ()Ljava/lang/String; getVendor
	a (I)Ljava/nio/ByteBuffer; allocateMemory
	a (Ljava/nio/Buffer;)V freeMemory
	b ()Ljava/lang/String; getCpuInfo
	c ()Ljava/lang/String; getRenderer
	d ()Ljava/lang/String; getOpenGLVersion
ekj com/mojang/blaze3d/platform/IconSet
	a RELEASE
	b SNAPSHOT
	c path
	d $VALUES
	a ()[Lekj; $values
	a (Lnet/minecraft/server/packs/IResourcePack;)Ljava/util/List; getStandardIcons
	a (Lnet/minecraft/server/packs/IResourcePack;Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; getFile
	b (Lnet/minecraft/server/packs/IResourcePack;)Lnet/minecraft/server/packs/resources/IoSupplier; getMacIcon
ekk com/mojang/blaze3d/platform/InputConstants
	A KEY_Q
	B KEY_R
	C KEY_S
	D KEY_T
	E KEY_U
	F KEY_V
	G KEY_W
	H KEY_X
	I KEY_Y
	J KEY_Z
	K KEY_F1
	L KEY_F2
	M KEY_F3
	N KEY_F4
	O KEY_F5
	P KEY_F6
	Q KEY_F7
	R KEY_F8
	S KEY_F9
	T KEY_F10
	U KEY_F11
	V KEY_F12
	W KEY_F13
	X KEY_F14
	Y KEY_F15
	Z KEY_F16
	a KEY_0
	aA KEY_UP
	aB KEY_ADD
	aC KEY_APOSTROPHE
	aD KEY_BACKSLASH
	aE KEY_COMMA
	aF KEY_EQUALS
	aG KEY_GRAVE
	aH KEY_LBRACKET
	aI KEY_MINUS
	aJ KEY_MULTIPLY
	aK KEY_PERIOD
	aL KEY_RBRACKET
	aM KEY_SEMICOLON
	aN KEY_SLASH
	aO KEY_SPACE
	aP KEY_TAB
	aQ KEY_LALT
	aR KEY_LCONTROL
	aS KEY_LSHIFT
	aT KEY_LWIN
	aU KEY_RALT
	aV KEY_RCONTROL
	aW KEY_RSHIFT
	aX KEY_RWIN
	aY KEY_RETURN
	aZ KEY_ESCAPE
	aa KEY_F17
	ab KEY_F18
	ac KEY_F19
	ad KEY_F20
	ae KEY_F21
	af KEY_F22
	ag KEY_F23
	ah KEY_F24
	ai KEY_F25
	aj KEY_NUMLOCK
	ak KEY_NUMPAD0
	al KEY_NUMPAD1
	am KEY_NUMPAD2
	an KEY_NUMPAD3
	ao KEY_NUMPAD4
	ap KEY_NUMPAD5
	aq KEY_NUMPAD6
	ar KEY_NUMPAD7
	as KEY_NUMPAD8
	at KEY_NUMPAD9
	au KEY_NUMPADCOMMA
	av KEY_NUMPADENTER
	aw KEY_NUMPADEQUALS
	ax KEY_DOWN
	ay KEY_LEFT
	az KEY_RIGHT
	b KEY_1
	ba KEY_BACKSPACE
	bb KEY_DELETE
	bc KEY_END
	bd KEY_HOME
	be KEY_INSERT
	bf KEY_PAGEDOWN
	bg KEY_PAGEUP
	bh KEY_CAPSLOCK
	bi KEY_PAUSE
	bj KEY_SCROLLLOCK
	bk KEY_PRINTSCREEN
	bl PRESS
	bm RELEASE
	bn REPEAT
	bo MOUSE_BUTTON_LEFT
	bp MOUSE_BUTTON_MIDDLE
	bq MOUSE_BUTTON_RIGHT
	br MOD_CONTROL
	bs CURSOR
	bt CURSOR_DISABLED
	bu CURSOR_NORMAL
	bv UNKNOWN
	bw GLFW_RAW_MOUSE_MOTION_SUPPORTED
	bx GLFW_RAW_MOUSE_MOTION
	c KEY_2
	d KEY_3
	e KEY_4
	f KEY_5
	g KEY_6
	h KEY_7
	i KEY_8
	j KEY_9
	k KEY_A
	l KEY_B
	m KEY_C
	n KEY_D
	o KEY_E
	p KEY_F
	q KEY_G
	r KEY_H
	s KEY_I
	t KEY_J
	u KEY_K
	v KEY_L
	w KEY_M
	x KEY_N
	y KEY_O
	z KEY_P
	a ()Z isRawMouseInputSupported
	a (II)Lekk$a; getKey
	a (JI)Z isKeyDown
	a (JIDD)V grabOrReleaseMouse
	a (JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;Lorg/lwjgl/glfw/GLFWDropCallbackI;)V setupMouseCallbacks
	a (JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V setupKeyboardCallbacks
	a (JZ)V updateRawMouseInput
	a (Ljava/lang/String;)Lekk$a; getKey
ekk$a com/mojang/blaze3d/platform/InputConstants$Key
	a name
	b type
	c value
	d displayName
	e NAME_MAP
	a ()Lekk$b; getType
	b ()I getValue
	c ()Ljava/lang/String; getName
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	e ()Ljava/util/OptionalInt; getNumericKeyValue
ekk$b com/mojang/blaze3d/platform/InputConstants$Type
	a KEYSYM
	b SCANCODE
	c MOUSE
	d KEY_KEYBOARD_UNKNOWN
	e map
	f defaultPrefix
	g displayTextSupplier
	h $VALUES
	a ()[Lekk$b; $values
	a (I)Lekk$a; getOrCreate
	a (Lekk$b;Ljava/lang/String;I)V addKey
ekl com/mojang/blaze3d/platform/Lighting
	a DIFFUSE_LIGHT_0
	b DIFFUSE_LIGHT_1
	c NETHER_DIFFUSE_LIGHT_0
	d NETHER_DIFFUSE_LIGHT_1
	e INVENTORY_DIFFUSE_LIGHT_0
	f INVENTORY_DIFFUSE_LIGHT_1
	a ()V setupForFlatItems
	a (Lorg/joml/Matrix4f;)V setupNetherLevel
	b ()V setupFor3DItems
	b (Lorg/joml/Matrix4f;)V setupLevel
	c ()V setupForEntityInInventory
ekm com/mojang/blaze3d/platform/MacosUtil
	a NS_FULL_SCREEN_WINDOW_MASK
	a (J)V toggleFullscreen
	a (Lca/weblite/objc/NSObject;)Z isInKioskMode
	a (Lnet/minecraft/server/packs/resources/IoSupplier;)V loadIcon
	b (J)Ljava/util/Optional; getNsWindow
	b (Lca/weblite/objc/NSObject;)V toggleFullscreen
ekn com/mojang/blaze3d/platform/MemoryTracker
	a ALLOCATOR
	a (I)Ljava/nio/ByteBuffer; create
	a (Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer; resize
eko com/mojang/blaze3d/platform/Monitor
	a monitor
	b videoModes
	c currentMode
	d x
	e y
	a ()V refreshVideoModes
	a (I)Leks; getMode
	a (Leks;)I getVideoModeIndex
	a (Ljava/util/Optional;)Leks; getPreferredVidMode
	b ()Leks; getCurrentMode
	c ()I getX
	d ()I getY
	e ()I getModeCount
	f ()J getMonitor
ekp com/mojang/blaze3d/platform/MonitorCreator
ekq com/mojang/blaze3d/platform/NativeImage
	a LOGGER
	b OPEN_OPTIONS
	c format
	d width
	e height
	f useStbFree
	g pixels
	h size
	a ()I getWidth
	a (F)V downloadDepthBuffer
	a (II)I getPixelRGBA
	a (IIB)V setPixelLuminance
	a (III)V setPixelRGBA
	a (IIIII)V fillRect
	a (IIIIIIIZZ)V upload
	a (IIIIIIIZZZZ)V upload
	a (IIIIIIZZ)V copyRect
	a (IIIILekq;)V resizeSubRectTo
	a (IIIZ)V upload
	a (IZ)V downloadTexture
	a (Lekq$a;Ljava/io/InputStream;)Lekq; read
	a (Lekq$a;Ljava/nio/ByteBuffer;)Lekq; read
	a (Lekq;)V copyFrom
	a (Lekq;IIIIIIZZ)V copyRect
	a (Ljava/io/File;)V writeToFile
	a (Ljava/io/InputStream;)Lekq; read
	a (Ljava/nio/ByteBuffer;)Lekq; read
	a (Ljava/nio/channels/WritableByteChannel;)Z writeToChannel
	a (Ljava/nio/file/Path;)V writeToFile
	a (Ljava/util/function/IntUnaryOperator;)Lekq; mappedCopy
	a (Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V copyFromFont
	a (ZZ)V setFilter
	a ([B)Lekq; read
	b ()I getHeight
	b (II)B getRedOrLuminance
	b (III)V blendPixel
	b (IIIIIIIZZZZ)V _upload
	b (Ljava/util/function/IntUnaryOperator;)V applyToAllPixels
	c ()Lekq$a; format
	c (II)B getGreenOrLuminance
	d ()[I getPixelsRGBA
	d (II)B getBlueOrLuminance
	e ()[I makePixelArray
	e (II)B getLuminanceOrAlpha
	f ()V drawPixels
	f (II)Z isOutsideBounds
	g ()[B asByteArray
	h ()V flipY
	i ()V untrack
	j ()V checkAllocated
ekq$a com/mojang/blaze3d/platform/NativeImage$Format
	a RGBA
	b RGB
	c LUMINANCE_ALPHA
	d LUMINANCE
	e components
	f glFormat
	g hasRed
	h hasGreen
	i hasBlue
	j hasLuminance
	k hasAlpha
	l redOffset
	m greenOffset
	n blueOffset
	o luminanceOffset
	p alphaOffset
	q supportedByStb
	r $VALUES
	a ()I components
	a (I)Lekq$a; getStbFormat
	b ()V setPackPixelStoreState
	c ()V setUnpackPixelStoreState
	d ()I glFormat
	e ()Z hasRed
	f ()Z hasGreen
	g ()Z hasBlue
	h ()Z hasLuminance
	i ()Z hasAlpha
	j ()I redOffset
	k ()I greenOffset
	l ()I blueOffset
	m ()I luminanceOffset
	n ()I alphaOffset
	o ()Z hasLuminanceOrRed
	p ()Z hasLuminanceOrGreen
	q ()Z hasLuminanceOrBlue
	r ()Z hasLuminanceOrAlpha
	s ()I luminanceOrRedOffset
	t ()I luminanceOrGreenOffset
	u ()I luminanceOrBlueOffset
	v ()I luminanceOrAlphaOffset
	w ()Z supportedByStb
	x ()[Lekq$a; $values
ekq$b com/mojang/blaze3d/platform/NativeImage$InternalGlFormat
	a RGBA
	b RGB
	c RG
	d RED
	e glFormat
	f $VALUES
	a ()I glFormat
	b ()[Lekq$b; $values
ekq$c com/mojang/blaze3d/platform/NativeImage$WriteCallback
	a output
	b exception
	a ()V throwIfException
ekr com/mojang/blaze3d/platform/ScreenManager
	a LOGGER
	b monitors
	c monitorCreator
	a ()V shutdown
	a (III)I clamp
	a (J)Leko; getMonitor
	a (JI)V onMonitorChange
	a (Lekt;)Leko; findBestMonitor
eks com/mojang/blaze3d/platform/VideoMode
	a width
	b height
	c redBits
	d greenBits
	e blueBits
	f refreshRate
	g PATTERN
	a ()I getWidth
	a (Ljava/lang/String;)Ljava/util/Optional; read
	b ()I getHeight
	c ()I getRedBits
	d ()I getGreenBits
	e ()I getBlueBits
	f ()I getRefreshRate
	g ()Ljava/lang/String; write
ekt com/mojang/blaze3d/platform/Window
	a LOGGER
	b defaultErrorCallback
	c eventHandler
	d screenManager
	e window
	f windowedX
	g windowedY
	h windowedWidth
	i windowedHeight
	j preferredFullscreenVideoMode
	k fullscreen
	l actuallyFullscreen
	m x
	n y
	o width
	p height
	q framebufferWidth
	r framebufferHeight
	s guiScaledWidth
	t guiScaledHeight
	u guiScale
	v errorSection
	w dirty
	x framerateLimit
	y vsync
	a ()I getRefreshRate
	a (D)V setGuiScale
	a (I)V setFramerateLimit
	a (II)V setWindowed
	a (IJ)V defaultErrorCallback
	a (IZ)I calculateScale
	a (JII)V onMove
	a (JZ)V onFocus
	a (Ljava/lang/String;)V setErrorSection
	a (Ljava/util/Optional;)V setPreferredFullscreenVideoMode
	a (Ljava/util/function/BiConsumer;)V checkGlfwError
	a (Lnet/minecraft/server/packs/IResourcePack;Lekj;)V setIcon
	a (Z)V updateVsync
	b ()Z shouldClose
	b (I)V setWidth
	b (IJ)V bootCrash
	b (JII)V onFramebufferResize
	b (JZ)V onEnter
	b (Ljava/lang/String;)V setTitle
	b (Z)V updateRawMouseInput
	c ()V setDefaultErrorCallback
	c (I)V setHeight
	c (JII)V onResize
	c (Z)V updateFullscreen
	d ()I getFramerateLimit
	e ()V updateDisplay
	f ()Ljava/util/Optional; getPreferredFullscreenVideoMode
	g ()V changeFullscreenVideoMode
	h ()V toggleFullScreen
	i ()J getWindow
	j ()Z isFullscreen
	k ()I getWidth
	l ()I getHeight
	m ()I getScreenWidth
	n ()I getScreenHeight
	o ()I getGuiScaledWidth
	p ()I getGuiScaledHeight
	q ()I getX
	r ()I getY
	s ()D getGuiScale
	t ()Leko; findBestMonitor
	u ()V setBootErrorCallback
	v ()V refreshFramebufferSize
	w ()V setMode
ekt$a com/mojang/blaze3d/platform/Window$WindowInitFailed
eku com/mojang/blaze3d/platform/WindowEventHandler
	a ()V resizeDisplay
	a (Z)V setWindowActive
	b ()V cursorEntered
ekw com/mojang/blaze3d/preprocessor/GlslPreprocessor
	a C_COMMENT
	b LINE_COMMENT
	c REGEX_MOJ_IMPORT
	d REGEX_VERSION
	e REGEX_ENDS_WITH_WHITESPACE
	a (Ljava/lang/String;)Ljava/util/List; process
	a (Ljava/lang/String;I)Ljava/lang/String; setVersion
	a (Ljava/lang/String;Lekw$a;)Ljava/lang/String; processVersions
	a (Ljava/lang/String;Lekw$a;Ljava/lang/String;)Ljava/util/List; processImports
	a (Ljava/lang/String;Ljava/util/regex/Matcher;)Z isDirectiveEnabled
	a (Ljava/lang/String;Ljava/util/regex/Matcher;I)Z isDirectiveDisabled
	a (ZLjava/lang/String;)Ljava/lang/String; applyImport
ekw$a com/mojang/blaze3d/preprocessor/GlslPreprocessor$Context
	a glslVersion
	b sourceId
eky com/mojang/blaze3d/shaders/AbstractUniform
	a (F)V set
	a (FF)V set
	a (FFF)V set
	a (FFFF)V set
	a (FFFFFF)V setMat2x3
	a (FFFFFFFF)V setMat2x4
	a (FFFFFFFFF)V setMat3x3
	a (FFFFFFFFFFFF)V setMat3x4
	a (FFFFFFFFFFFFFFFF)V setMat4x4
	a (I)V set
	a (II)V set
	a (III)V set
	a (IIII)V setSafe
	a (Lorg/joml/Matrix3f;)V set
	a (Lorg/joml/Matrix4f;)V set
	a (Lorg/joml/Vector3f;)V set
	a (Lorg/joml/Vector4f;)V set
	a ([F)V set
	b (FFFF)V setSafe
	b (FFFFFF)V setMat3x2
	b (FFFFFFFF)V setMat4x2
	b (FFFFFFFFFFFF)V setMat4x3
	b (IIII)V set
	c (FFFF)V setMat2x2
ekz com/mojang/blaze3d/shaders/BlendMode
	a lastApplied
	b srcColorFactor
	c srcAlphaFactor
	d dstColorFactor
	e dstAlphaFactor
	f blendFunc
	g separateBlend
	h opaque
	a ()V apply
	a (Ljava/lang/String;)I stringToBlendFunc
	b ()Z isOpaque
	b (Ljava/lang/String;)I stringToBlendFactor
ela com/mojang/blaze3d/shaders/Effect
elb com/mojang/blaze3d/shaders/EffectProgram
	a PREPROCESSOR
	b references
	a ()V close
	a (Lela;)V attachToEffect
	a (Leld$a;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lelb; compileShader
elc com/mojang/blaze3d/shaders/FogShape
	a SPHERE
	b CYLINDER
	c index
	d $VALUES
	a ()I getIndex
	b ()[Lelc; $values
eld com/mojang/blaze3d/shaders/Program
	a MAX_LOG_LENGTH
	b type
	c name
	d id
	a ()V close
	a (Leld$a;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lekw;)Leld; compileShader
	a (Lelf;)V attachToShader
	b ()Ljava/lang/String; getName
	b (Leld$a;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lekw;)I compileShaderInternal
	c ()I getId
eld$a com/mojang/blaze3d/shaders/Program$Type
	a VERTEX
	b FRAGMENT
	c name
	d extension
	e glType
	f programs
	g $VALUES
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getExtension
	c ()Ljava/util/Map; getPrograms
	d ()I getGlType
	e ()[Leld$a; $values
ele com/mojang/blaze3d/shaders/ProgramManager
	a LOGGER
	a ()I createProgram
	a (I)V glUseProgram
	a (Lelf;)V releaseProgram
	b (Lelf;)V linkShader
elf com/mojang/blaze3d/shaders/Shader
	a ()I getId
	b ()V markDirty
	c ()Leld; getVertexProgram
	d ()Leld; getFragmentProgram
	e ()V attachToProgram
elg com/mojang/blaze3d/shaders/Uniform
	a UT_INT1
	b UT_INT2
	c UT_INT3
	d UT_INT4
	e UT_FLOAT1
	f UT_FLOAT2
	g UT_FLOAT3
	h UT_FLOAT4
	i UT_MAT2
	j UT_MAT3
	k UT_MAT4
	l LOGGER
	m TRANSPOSE_MATRICIES
	n location
	o count
	p type
	q intValues
	r floatValues
	s name
	t dirty
	u parent
	a ()Ljava/lang/String; getName
	a (F)V set
	a (FF)V set
	a (FFF)V set
	a (FFFF)V set
	a (FFFFFF)V setMat2x3
	a (FFFFFFFF)V setMat2x4
	a (FFFFFFFFF)V setMat3x3
	a (FFFFFFFFFFFF)V setMat3x4
	a (FFFFFFFFFFFFFFFF)V setMat4x4
	a (I)V set
	a (IF)V set
	a (II)V set
	a (III)V set
	a (IIII)V setSafe
	a (IILjava/lang/CharSequence;)V glBindAttribLocation
	a (ILjava/lang/CharSequence;)I glGetUniformLocation
	a (Ljava/lang/String;)I getTypeFromString
	a (Lorg/joml/Matrix3f;)V set
	a (Lorg/joml/Matrix4f;)V set
	a (Lorg/joml/Vector3f;)V set
	a (Lorg/joml/Vector4f;)V set
	a ([F)V set
	b ()V upload
	b (FFFF)V setSafe
	b (FFFFFF)V setMat3x2
	b (FFFFFFFF)V setMat4x2
	b (FFFFFFFFFFFF)V setMat4x3
	b (I)V setLocation
	b (II)V uploadInteger
	b (IIII)V set
	b (ILjava/lang/CharSequence;)I glGetAttribLocation
	c ()I getLocation
	c (FFFF)V setMat2x2
	d ()I getCount
	e ()I getType
	f ()Ljava/nio/IntBuffer; getIntBuffer
	g ()Ljava/nio/FloatBuffer; getFloatBuffer
	h ()V markDirty
	i ()V uploadAsInteger
	j ()V uploadAsFloat
	k ()V uploadAsMatrix
eli com/mojang/blaze3d/systems/TimerQuery
	a nextQueryName
	a ()Ljava/util/Optional; getInstance
	b ()V beginProfile
	c ()Leli$a; endProfile
eli$a com/mojang/blaze3d/systems/TimerQuery$FrameProfile
	a NO_RESULT
	b CANCELLED_RESULT
	c queryName
	d result
	a ()V cancel
	b ()Z isDone
	c ()J get
eli$b com/mojang/blaze3d/systems/TimerQuery$TimerQueryLazyLoader
	a INSTANCE
	a ()Leli; instantiate
elk com/mojang/blaze3d/vertex/BufferBuilder
	f GROWTH_SIZE
	g LOGGER
	h buffer
	i renderedBufferCount
	j renderedBufferPointer
	k nextElementByte
	l vertices
	m currentElement
	n elementIndex
	o format
	p mode
	q fastFormat
	r fullFormat
	s building
	t sortingPoints
	u sorting
	v indexOnly
	a ()Lelk$c; getSortState
	a (FFFFFFFFFIIFFF)V vertex
	a (IB)V putByte
	a (IF)V putFloat
	a (IIII)Lelt; color
	a (ILelu$a;)Lit/unimi/dsi/fastutil/ints/IntConsumer; intConsumer
	a (IS)V putShort
	a (Lelk$c;)V restoreSortState
	a (Lelu$a;)V putSortedQuadIndices
	a (Lelu$b;Lelu;)V begin
	a (Lelu;)V switchFormat
	a (Lelx;)V setQuadSorting
	b ()Z isCurrentBatchEmpty
	c ()Lelk$b; endOrDiscardIfEmpty
	c (II)Ljava/nio/ByteBuffer; bufferSlice
	d ()Lelk$b; end
	d (I)V ensureCapacity
	e ()V endVertex
	e (I)I roundUp
	f ()V nextElement
	g ()V clear
	h ()V discard
	i ()Lelv; currentElement
	j ()Z building
	l ()V ensureVertexCapacity
	m ()[Lorg/joml/Vector3f; makeQuadSortingPoints
	n ()V ensureDrawing
	o ()Lelk$b; storeRenderedBuffer
	p ()V reset
	q ()V releaseRenderedBuffer
elk$a com/mojang/blaze3d/vertex/BufferBuilder$DrawState
	a format
	b vertexCount
	c indexCount
	d mode
	e indexType
	f indexOnly
	g sequentialIndex
	a ()I vertexBufferSize
	b ()I vertexBufferStart
	c ()I vertexBufferEnd
	d ()I indexBufferStart
	e ()I indexBufferEnd
	f ()I bufferSize
	g ()Lelu; format
	h ()I vertexCount
	i ()I indexCount
	j ()Lelu$b; mode
	k ()Lelu$a; indexType
	l ()Z indexOnly
	m ()Z sequentialIndex
	n ()I indexBufferSize
elk$b com/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer
	b pointer
	c drawState
	d released
	a ()Ljava/nio/ByteBuffer; vertexBuffer
	b ()Ljava/nio/ByteBuffer; indexBuffer
	c ()Lelk$a; drawState
	d ()Z isEmpty
	e ()V release
elk$c com/mojang/blaze3d/vertex/BufferBuilder$SortState
	a mode
	b vertices
	c sortingPoints
	d sorting
ell com/mojang/blaze3d/vertex/BufferUploader
	a lastImmediateBuffer
	a ()V reset
	a (Lelk$b;)V drawWithShader
	a (Lels;)V bindImmediateBuffer
	a (Lelu;)Lels; bindImmediateBuffer
	b ()V invalidate
	b (Lelk$b;)V draw
	c (Lelk$b;)V _drawWithShader
	d (Lelk$b;)Lels; upload
elm com/mojang/blaze3d/vertex/BufferVertexConsumer
	a (DDD)Lelt; vertex
	a (F)B normalIntValue
	a (FF)Lelt; uv
	a (FFF)Lelt; normal
	a (IB)V putByte
	a (IF)V putFloat
	a (II)Lelt; overlayCoords
	a (IIII)Lelt; color
	a (IS)V putShort
	a (SSI)Lelt; uvShort
	b (II)Lelt; uv2
	f ()V nextElement
	i ()Lelv; currentElement
eln com/mojang/blaze3d/vertex/DefaultVertexFormat
	a ELEMENT_POSITION
	b ELEMENT_COLOR
	c ELEMENT_UV0
	d ELEMENT_UV1
	e ELEMENT_UV2
	f ELEMENT_NORMAL
	g ELEMENT_PADDING
	h ELEMENT_UV
	i BLIT_SCREEN
	j BLOCK
	k NEW_ENTITY
	l PARTICLE
	m POSITION
	n POSITION_COLOR
	o POSITION_COLOR_NORMAL
	p POSITION_COLOR_LIGHTMAP
	q POSITION_TEX
	r POSITION_COLOR_TEX
	s POSITION_TEX_COLOR
	t POSITION_COLOR_TEX_LIGHTMAP
	u POSITION_TEX_LIGHTMAP_COLOR
	v POSITION_TEX_COLOR_NORMAL
elo com/mojang/blaze3d/vertex/DefaultedVertexConsumer
	a defaultColorSet
	b defaultR
	c defaultG
	d defaultB
	e defaultA
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
elp com/mojang/blaze3d/vertex/PoseStack
	a poseStack
	a ()V pushPose
	a (DDD)V translate
	a (FFF)V translate
	a (Lorg/joml/Matrix4f;)V mulPoseMatrix
	a (Lorg/joml/Quaternionf;)V mulPose
	a (Lorg/joml/Quaternionf;FFF)V rotateAround
	b ()V popPose
	b (FFF)V scale
	c ()Lelp$a; last
	d ()Z clear
	e ()V setIdentity
elp$a com/mojang/blaze3d/vertex/PoseStack$Pose
	a pose
	b normal
	a ()Lorg/joml/Matrix4f; pose
	b ()Lorg/joml/Matrix3f; normal
elq com/mojang/blaze3d/vertex/SheetedDecalTextureGenerator
	f delegate
	g cameraInversePose
	h normalInversePose
	i textureScale
	j x
	k y
	l z
	m overlayU
	n overlayV
	o lightCoords
	p nx
	q ny
	r nz
	a ()V resetState
	a (DDD)Lelt; vertex
	a (FF)Lelt; uv
	a (FFF)Lelt; normal
	a (II)Lelt; overlayCoords
	a (IIII)Lelt; color
	b (II)Lelt; uv2
	e ()V endVertex
elr com/mojang/blaze3d/vertex/Tesselator
	a MAX_MEMORY_USE
	b MAX_FLOATS
	c builder
	d INSTANCE
	a ()Lelr; getInstance
	b ()V end
	c ()Lelk; getBuilder
els com/mojang/blaze3d/vertex/VertexBuffer
	a usage
	b vertexBufferId
	c indexBufferId
	d arrayObjectId
	e format
	f sequentialIndices
	g indexType
	h indexCount
	i mode
	a ()V bind
	a (Lelk$a;Ljava/nio/ByteBuffer;)Lelu; uploadVertexBuffer
	a (Lelk$b;)V upload
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lfos;)V drawWithShader
	b ()V unbind
	b (Lelk$a;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/systems/RenderSystem$a; uploadIndexBuffer
	b (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lfos;)V _drawWithShader
	c ()V draw
	d ()Lelu; getFormat
	e ()Z isInvalid
	f ()Lelu$a; getIndexType
els$a com/mojang/blaze3d/vertex/VertexBuffer$Usage
	a STATIC
	b DYNAMIC
	c id
	d $VALUES
	a ()[Lels$a; $values
elt com/mojang/blaze3d/vertex/VertexConsumer
	a (DDD)Lelt; vertex
	a (FF)Lelt; uv
	a (FFF)Lelt; normal
	a (FFFF)Lelt; color
	a (FFFFFFFFFIIFFF)V vertex
	a (I)Lelt; color
	a (II)Lelt; overlayCoords
	a (IIII)Lelt; color
	a (Lelp$a;Lfpb;FFFII)V putBulkData
	a (Lelp$a;Lfpb;[FFFF[IIZ)V putBulkData
	a (Lorg/joml/Matrix3f;FFF)Lelt; normal
	a (Lorg/joml/Matrix4f;FFF)Lelt; vertex
	b (I)Lelt; uv2
	b (II)Lelt; uv2
	b (IIII)V defaultColor
	c (I)Lelt; overlayCoords
	e ()V endVertex
	k ()V unsetDefaultColor
elu com/mojang/blaze3d/vertex/VertexFormat
	a elements
	b elementMapping
	c offsets
	d vertexSize
	e immediateDrawVertexBuffer
	a ()I getIntegerSize
	b ()I getVertexSize
	c ()Lcom/google/common/collect/ImmutableList; getElements
	d ()Lcom/google/common/collect/ImmutableList; getElementAttributeNames
	e ()V setupBufferState
	f ()V clearBufferState
	g ()Lels; getImmediateDrawVertexBuffer
	h ()V _setupBufferState
	i ()V _clearBufferState
elu$a com/mojang/blaze3d/vertex/VertexFormat$IndexType
	a SHORT
	b INT
	c asGLType
	d bytes
	e $VALUES
	a ()[Lelu$a; $values
	a (I)Lelu$a; least
elu$b com/mojang/blaze3d/vertex/VertexFormat$Mode
	a LINES
	b LINE_STRIP
	c DEBUG_LINES
	d DEBUG_LINE_STRIP
	e TRIANGLES
	f TRIANGLE_STRIP
	g TRIANGLE_FAN
	h QUADS
	i asGLMode
	j primitiveLength
	k primitiveStride
	l connectedPrimitives
	m $VALUES
	a ()[Lelu$b; $values
	a (I)I indexCount
elv com/mojang/blaze3d/vertex/VertexFormatElement
	a type
	b usage
	c index
	d count
	e byteSize
	a ()Lelv$a; getType
	a (I)V clearBufferState
	a (IJI)V setupBufferState
	a (ILelv$b;)Z supportsUsage
	b ()Lelv$b; getUsage
	c ()I getCount
	d ()I getIndex
	e ()I getByteSize
	f ()Z isPosition
elv$a com/mojang/blaze3d/vertex/VertexFormatElement$Type
	a FLOAT
	b UBYTE
	c BYTE
	d USHORT
	e SHORT
	f UINT
	g INT
	h size
	i name
	j glType
	k $VALUES
	a ()I getSize
	b ()Ljava/lang/String; getName
	c ()I getGlType
	d ()[Lelv$a; $values
elv$b com/mojang/blaze3d/vertex/VertexFormatElement$Usage
	a POSITION
	b NORMAL
	c COLOR
	d UV
	e PADDING
	f GENERIC
	g name
	h setupState
	i clearState
	j $VALUES
	a ()Ljava/lang/String; getName
	a (II)V clearBufferState
	a (IIIJII)V setupBufferState
	b ()[Lelv$b; $values
elv$b$a com/mojang/blaze3d/vertex/VertexFormatElement$Usage$ClearState
elv$b$b com/mojang/blaze3d/vertex/VertexFormatElement$Usage$SetupState
elw com/mojang/blaze3d/vertex/VertexMultiConsumer
	a ()Lelt; create
	a (Lelt;)Lelt; create
	a (Lelt;Lelt;)Lelt; create
	a ([Lelt;)Lelt; create
elw$a com/mojang/blaze3d/vertex/VertexMultiConsumer$Double
	a first
	b second
	a (DDD)Lelt; vertex
	a (FF)Lelt; uv
	a (FFF)Lelt; normal
	a (FFFFFFFFFIIFFF)V vertex
	a (II)Lelt; overlayCoords
	a (IIII)Lelt; color
	b (II)Lelt; uv2
	b (IIII)V defaultColor
	e ()V endVertex
	k ()V unsetDefaultColor
elw$b com/mojang/blaze3d/vertex/VertexMultiConsumer$Multiple
	a delegates
	a (DDD)Lelt; vertex
	a (FF)Lelt; uv
	a (FFF)Lelt; normal
	a (FFFFFFFFFIIFFF)V vertex
	a (II)Lelt; overlayCoords
	a (IIII)Lelt; color
	a (Ljava/util/function/Consumer;)V forEach
	b (II)Lelt; uv2
	b (IIII)V defaultColor
	e ()V endVertex
	k ()V unsetDefaultColor
elx com/mojang/blaze3d/vertex/VertexSorting
	a DISTANCE_TO_ORIGIN
	b ORTHOGRAPHIC_Z
	a (FFF)Lelx; byDistance
	a (Lelx$a;)Lelx; byDistance
	a (Lorg/joml/Vector3f;)Lelx; byDistance
elx$a com/mojang/blaze3d/vertex/VertexSorting$DistanceFunction
elz com/mojang/realmsclient/RealmsAvailability
	a LOGGER
	b future
	a ()Ljava/util/concurrent/CompletableFuture; get
	a (Ljava/util/concurrent/CompletableFuture;)Z shouldRefresh
	b ()Ljava/util/concurrent/CompletableFuture; check
elz$a com/mojang/realmsclient/RealmsAvailability$Result
	a type
	b exception
	a ()Lelz$b; type
	a (Leyk;)Leyk; createErrorScreen
	b ()Lens; exception
elz$b com/mojang/realmsclient/RealmsAvailability$Type
	a SUCCESS
	b INCOMPATIBLE_CLIENT
	c NEEDS_PARENTAL_CONSENT
	d AUTHENTICATION_ERROR
	e UNEXPECTED_ERROR
	f $VALUES
	a ()[Lelz$b; $values
ema com/mojang/realmsclient/RealmsMainScreen
	A CLOSED_SPRITE
	B INVITE_SPRITE
	C NEWS_SPRITE
	D LOGGER
	E LOGO_LOCATION
	F NO_REALMS_LOCATION
	G TITLE
	H LOADING_TEXT
	I SERVER_UNITIALIZED_TEXT
	J SUBSCRIPTION_EXPIRED_TEXT
	K SUBSCRIPTION_RENEW_TEXT
	L TRIAL_EXPIRED_TEXT
	M SELECT_MINIGAME_PREFIX
	N PLAY_TEXT
	O LEAVE_SERVER_TEXT
	P CONFIGURE_SERVER_TEXT
	Q SERVER_EXPIRED_TOOLTIP
	R SERVER_EXPIRES_SOON_TOOLTIP
	S SERVER_EXPIRES_IN_DAY_TOOLTIP
	T SERVER_OPEN_TOOLTIP
	U SERVER_CLOSED_TOOLTIP
	V UNITIALIZED_WORLD_NARRATION
	W NO_REALMS_TEXT
	X NO_PENDING_INVITES
	Y PENDING_INVITES
	Z BUTTON_WIDTH
	a INFO_SPRITE
	aA newsLink
	aB lastClickTime
	aC notifications
	aD addRealmButton
	aE pendingInvitesButton
	aF newsButton
	aG activeLayoutState
	aH layout
	aa BUTTON_COLUMNS
	ab BUTTON_SPACING
	ac CONTENT_WIDTH
	ad LOGO_WIDTH
	ae LOGO_HEIGHT
	af LOGO_TEXTURE_WIDTH
	ag LOGO_TEXTURE_HEIGHT
	ah LOGO_PADDING
	ai HEADER_HEIGHT
	aj FOOTER_PADDING
	ak ENTRY_WIDTH
	al ITEM_HEIGHT
	am availability
	an dataSubscription
	ao handledSeenNotifications
	ap regionsPinged
	aq inviteNarrationLimiter
	ar lastScreen
	as playButton
	at backButton
	au renewButton
	av configureButton
	aw leaveButton
	ax realmSelectionList
	ay serverList
	az trialsAvailable
	b NEW_REALM_SPRITE
	c EXPIRED_SPRITE
	y EXPIRES_SOON_SPRITE
	z OPEN_SPRITE
	D ()Lewa; createHeader
	E ()Lewd; createNoRealmsContent
	F ()V updateButtonStates
	G ()V refreshRealmsSelectionList
	H ()V pingRegions
	I ()Ljava/util/List; getOwnedNonExpiredWorldIds
	J ()Lemw; getSelectedServer
	K ()V openTrialAvailablePopup
	a (Lema$e;)V updateLayout
	a (Lema$h;Lemv;)V addEntriesForNotification
	a (Lema$i;Ljava/util/function/Consumer;)V callRealmsClient
	a (Lemw;)Z shouldPlayButtonBeActive
	a (Lemw;Leyk;)V play
	a (Lenv;)Lepe$c; initDataFetcher
	a (Lesf;IIF)V render
	a (Lesf;Ljava/lang/String;I)V renderEnvironment
	a (Ljava/util/UUID;)V dismissNotification
	a (ZLemw;)V leaveServer
	aH_ ()V init
	b ()V repositionElements
	b (Lema$e;)Levz; createLayout
	b (Lemw;)Z shouldRenewButtonBeActive
	c ()V tick
	c (Lema$e;)Lewa; createFooter
	c (Lemw;)Z shouldConfigureButtonBeActive
	d ()V refreshPendingInvites
	d (Lemw;)Z shouldLeaveButtonBeActive
	e ()V refreshServerList
	e (Lemw;)V onRenew
	f ()V resetScreen
	f (Lemw;)V configureClicked
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	g (Lemw;)V leaveClicked
	h (Lemw;)V removeServer
	i (Lemw;)Z isSelfOwnedServer
	j (Lemw;)Z isSelfOwnedNonExpiredServer
ema$a com/mojang/realmsclient/RealmsMainScreen$ButtonEntry
	c button
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lesf;IIIIIIIZF)V render
ema$b com/mojang/realmsclient/RealmsMainScreen$CrossButton
	b SPRITES
ema$c com/mojang/realmsclient/RealmsMainScreen$EmptyEntry
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lesf;IIIIIIIZF)V render
ema$d com/mojang/realmsclient/RealmsMainScreen$Entry
	b ()Lemw; getServer
ema$e com/mojang/realmsclient/RealmsMainScreen$LayoutState
	a LOADING
	b NO_REALMS
	c LIST
	d $VALUES
	a ()[Lema$e; $values
ema$f com/mojang/realmsclient/RealmsMainScreen$NotificationButton
	d NOTIFICATION_ICONS
	s UNKNOWN_COUNT
	t SIZE
	u SPRITE_SIZE
	v notificationCount
	a ()I notificationCount
	a (I)V setNotificationCount
	a (Lesf;)V drawNotificationCounter
	b (Lesf;IIF)V renderWidget
ema$g com/mojang/realmsclient/RealmsMainScreen$NotificationMessageEntry
	c SIDE_MARGINS
	d OUTLINE_COLOR
	e text
	f frameItemHeight
	g children
	h dismissButton
	i textWidget
	j gridLayout
	k textFrame
	l lastEntryWidth
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (I)V updateEntryWidth
	a (III)Z keyPressed
	a (Lesf;IIIIIIIZF)V render
	b (I)V refreshLayout
	b (Lesf;IIIIIIIZF)V renderBack
ema$h com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList
	a ()I getMaxPosition
	a (Lema$d;)V setSelected
	a (Lesl$a;)V setSelected
	b ()I getRowWidth
ema$i com/mojang/realmsclient/RealmsMainScreen$RealmsCall
ema$j com/mojang/realmsclient/RealmsMainScreen$ServerEntry
	c SKIN_HEAD_LARGE_WIDTH
	d serverData
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lemw;Lesf;IIIIII)V renderStatusLights
	a (Lesf;IIIIIIIZF)V render
	a (Lesf;IIIILnet/minecraft/resources/MinecraftKey;Ljava/util/function/Supplier;)V drawRealmStatus
	b ()Lemw; getServer
	d ()V playRealm
	e ()V createUnitializedRealm
emb com/mojang/realmsclient/Unit
	a B
	b KB
	c MB
	d GB
	e BASE_UNIT
	f $VALUES
	a ()[Lemb; $values
	a (J)Lemb; getLargest
	a (JLemb;)D convertTo
	b (J)Ljava/lang/String; humanReadable
	b (JLemb;)Ljava/lang/String; humanReadable
emc com/mojang/realmsclient/client/FileDownload
	a LOGGER
	b cancelled
	c finished
	d error
	e extracting
	f tempFile
	g resourcePackPath
	h request
	i currentThread
	j requestConfig
	k INVALID_FILE_NAMES
	a ()V cancel
	a (Lenm;Ljava/lang/String;Leoi$a;Lnet/minecraft/world/level/storage/Convertable;)V download
	a (Ljava/io/File;)V deletePlayerTag
	a (Ljava/lang/String;)J contentLength
	a (Ljava/lang/String;Ljava/io/File;Lnet/minecraft/world/level/storage/Convertable;)V untarGzipArchive
	b ()Z isFinished
	b (Ljava/lang/String;)Ljava/lang/String; findAvailableFolderName
	c ()Z isError
	d ()Z isExtracting
emc$a com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream
	a listener
	a (Ljava/awt/event/ActionListener;)V setListener
emc$b com/mojang/realmsclient/client/FileDownload$ProgressListener
	b worldName
	c tempFile
	d levelStorageSource
	e downloadStatus
emc$c com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener
	b tempFile
	c downloadStatus
	d worldDownload
emd com/mojang/realmsclient/client/FileUpload
	a LOGGER
	b MAX_RETRIES
	c UPLOAD_PATH
	d file
	e worldId
	f slotId
	g uploadInfo
	h sessionId
	i username
	j clientVersion
	k uploadStatus
	l cancelled
	m uploadTask
	n requestConfig
	a ()V cancel
	a (I)Lepc; requestUpload
	a (JI)Z shouldRetry
	a (Ljava/util/function/Consumer;)V upload
	a (Lorg/apache/http/HttpResponse;)J getRetryDelaySeconds
	a (Lorg/apache/http/HttpResponse;Lepc$a;)V handleResponse
	a (Lorg/apache/http/client/methods/HttpPost;)V setupRequest
	a (Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V cleanup
	b ()Z isFinished
	b (JI)Lepc; retryUploadAfter
emd$a com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity
	a length
	b content
	c uploadStatus
eme com/mojang/realmsclient/client/Ping
	a ()Ljava/util/List; pingAllRegions
	a (Ljava/lang/String;)I ping
	a ([Leme$a;)Ljava/util/List; ping
	b ()J now
eme$a com/mojang/realmsclient/client/Ping$Region
	a US_EAST_1
	b US_WEST_2
	c US_WEST_1
	d EU_WEST_1
	e AP_SOUTHEAST_1
	f AP_SOUTHEAST_2
	g AP_NORTHEAST_1
	h SA_EAST_1
	i name
	j endpoint
	k $VALUES
	a ()[Leme$a; $values
emf com/mojang/realmsclient/client/RealmsClient
	A PATH_PENDING_INVITES_COUNT
	B PATH_PENDING_INVITES
	C PATH_ACCEPT_INVITE
	D PATH_REJECT_INVITE
	E PATH_UNINVITE_MYSELF
	F PATH_WORLD_UPDATE
	G PATH_SLOT
	H PATH_WORLD_OPEN
	I PATH_WORLD_CLOSE
	J PATH_WORLD_RESET
	K PATH_DELETE_WORLD
	L PATH_WORLD_BACKUPS
	M PATH_WORLD_DOWNLOAD
	N PATH_WORLD_UPLOAD
	O PATH_CLIENT_COMPATIBLE
	P PATH_TOS_AGREED
	Q PATH_NEWS
	R PATH_MARK_NOTIFICATIONS_SEEN
	S PATH_DISMISS_NOTIFICATIONS
	T GSON
	a ENVIRONMENT
	b LOGGER
	c sessionId
	d username
	e minecraft
	f WORLDS_RESOURCE_PATH
	g INVITES_RESOURCE_PATH
	h MCO_RESOURCE_PATH
	i SUBSCRIPTION_RESOURCE
	j ACTIVITIES_RESOURCE
	k OPS_RESOURCE
	l REGIONS_RESOURCE
	m TRIALS_RESOURCE
	n NOTIFICATIONS_RESOURCE
	o PATH_INITIALIZE
	p PATH_GET_ACTIVTIES
	q PATH_GET_LIVESTATS
	r PATH_GET_SUBSCRIPTION
	s PATH_OP
	t PATH_PUT_INTO_MINIGAMES_MODE
	u PATH_AVAILABLE
	v PATH_TEMPLATES
	w PATH_WORLD_JOIN
	x PATH_WORLD_GET
	y PATH_WORLD_INVITES
	z PATH_WORLD_UNINVITE
	a ()Lemf; create
	a (IILemw$c;)Leno; fetchWorldTemplates
	a (J)Lemw; getOwnWorld
	a (JI)Z switchSlot
	a (JILend;)V updateSlot
	a (JLepp;)Ljava/lang/Boolean; resetWorldWithSeed
	a (JLjava/lang/String;)Lemw; invite
	a (JLjava/lang/String;Ljava/lang/String;)V initializeWorld
	a (JLjava/util/UUID;)V uninvite
	a (Lemi;)Ljava/lang/String; execute
	a (Lemp;)Z isBlocked
	a (Lemr;)V sendPingResults
	a (Leqv;)Lemf; create
	a (Ljava/lang/String;)V acceptInvitation
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; url
	a (Ljava/util/List;)V notificationsSeen
	b ()Lemy; listWorlds
	b (J)Leni; getActivity
	b (JI)Lenm; requestDownloadInfo
	b (JLjava/lang/String;)V restoreWorld
	b (JLjava/lang/String;Ljava/lang/String;)V update
	b (JLjava/util/UUID;)Lemo; op
	b (Ljava/lang/String;)V rejectInvitation
	b (Ljava/util/List;)V notificationsDismiss
	c ()Ljava/util/List; getNotifications
	c (J)Lemx; join
	c (JLjava/lang/String;)Ljava/lang/Boolean; putIntoMinigameMode
	c (JLjava/util/UUID;)Lemo; deop
	c (Ljava/lang/String;)Ljava/lang/String; url
	c (Ljava/util/List;)Lcom/google/gson/JsonArray; uuidListToJsonArray
	d ()Lenb; getLiveStats
	d (J)V uninviteMyselfFrom
	d (JLjava/lang/String;)Ljava/lang/Boolean; resetWorldWithTemplate
	e ()Z hasParentalConsent
	e (J)Lemm; backupsFor
	e (JLjava/lang/String;)Lenk; requestUploadInfo
	f ()Lemf$a; clientCompatible
	f (J)Ljava/lang/Boolean; open
	g ()I pendingInvitesCount
	g (J)Ljava/lang/Boolean; close
	h ()Lemq; pendingInvites
	h (J)Lenj; subscriptionFor
	i ()V agreeToTos
	i (J)V deleteWorld
	j ()Lemu; getNews
	k ()Ljava/lang/Boolean; trialAvailable
emf$a com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse
	a COMPATIBLE
	b OUTDATED
	c OTHER
	d $VALUES
	a ()[Lemf$a; $values
emf$b com/mojang/realmsclient/client/RealmsClient$Environment
	a PRODUCTION
	b STAGE
	c LOCAL
	d baseUrl
	e protocol
	f $VALUES
	a ()[Lemf$b; $values
	a (Ljava/lang/String;)Ljava/util/Optional; byName
emg com/mojang/realmsclient/client/RealmsClientConfig
	a proxy
	a ()Ljava/net/Proxy; getProxy
	a (Ljava/net/Proxy;)V setProxy
emh com/mojang/realmsclient/client/RealmsError
	a NO_MESSAGE
	b LOGGER
	a ()I errorCode
	a (ILjava/lang/String;)Lemh; parse
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; errorMessage
	c ()Ljava/lang/String; logMessage
emh$a com/mojang/realmsclient/client/RealmsError$AuthenticationError
	c ERROR_CODE
	d message
	a ()I errorCode
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; errorMessage
	c ()Ljava/lang/String; logMessage
	d ()Ljava/lang/String; message
emh$b com/mojang/realmsclient/client/RealmsError$CustomError
	c SERVICE_BUSY
	d RETRY_MESSAGE
	e httpCode
	f payload
	a ()I errorCode
	a (I)Lemh$b; retry
	a (Lenr;)Lemh$b; connectivityError
	a (Ljava/lang/String;)Lemh$b; unknownCompatibilityResponse
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; errorMessage
	b (I)Lemh$b; noPayload
	c ()Ljava/lang/String; logMessage
	d ()I httpCode
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; payload
emh$c com/mojang/realmsclient/client/RealmsError$ErrorWithJsonPayload
	c httpCode
	d code
	e reason
	f message
	a ()I errorCode
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; errorMessage
	c ()Ljava/lang/String; logMessage
	d ()I httpCode
	e ()I code
	f ()Ljava/lang/String; reason
	g ()Ljava/lang/String; message
emh$d com/mojang/realmsclient/client/RealmsError$ErrorWithRawPayload
	c httpCode
	d payload
	a ()I errorCode
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; errorMessage
	c ()Ljava/lang/String; logMessage
	d ()I httpCode
	e ()Ljava/lang/String; payload
emi com/mojang/realmsclient/client/Request
	a connection
	b url
	c connected
	d DEFAULT_READ_TIMEOUT
	e DEFAULT_CONNECT_TIMEOUT
	a ()I getRetryAfterHeader
	a (Ljava/io/InputStream;)Ljava/lang/String; read
	a (Ljava/lang/String;)Lemi; get
	a (Ljava/lang/String;II)Lemi; get
	a (Ljava/lang/String;Ljava/lang/String;)V cookie
	a (Ljava/lang/String;Ljava/lang/String;II)Lemi; post
	a (Ljava/net/HttpURLConnection;)I getRetryAfterHeader
	a (Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String; getHeader
	a (Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V cookie
	b ()I responseCode
	b (Ljava/lang/String;)Lemi; delete
	b (Ljava/lang/String;Ljava/lang/String;)Lemi; header
	b (Ljava/lang/String;Ljava/lang/String;II)Lemi; put
	c ()Ljava/lang/String; text
	c (Ljava/lang/String;)Ljava/lang/String; getHeader
	c (Ljava/lang/String;Ljava/lang/String;)Lemi; post
	d ()Lemi; connect
	d (Ljava/lang/String;Ljava/lang/String;)Lemi; put
	e ()Lemi; doConnect
	f ()V dispose
emi$a com/mojang/realmsclient/client/Request$Delete
	e ()Lemi; doConnect
	f ()Lemi$a; doConnect
emi$b com/mojang/realmsclient/client/Request$Get
	e ()Lemi; doConnect
	f ()Lemi$b; doConnect
emi$c com/mojang/realmsclient/client/Request$Post
	c content
	e ()Lemi; doConnect
	f ()Lemi$c; doConnect
emi$d com/mojang/realmsclient/client/Request$Put
	c content
	e ()Lemi; doConnect
	f ()Lemi$d; doConnect
emj com/mojang/realmsclient/client/UploadStatus
	a bytesWritten
	b totalBytes
eml com/mojang/realmsclient/dto/Backup
	a backupId
	b lastModifiedDate
	c size
	d metadata
	e changeList
	f LOGGER
	g uploadedVersion
	a ()Z isUploadedVersion
	a (Lcom/google/gson/JsonElement;)Leml; parse
	a (Z)V setUploadedVersion
emm com/mojang/realmsclient/dto/BackupList
	a backups
	b LOGGER
	a (Ljava/lang/String;)Lemm; parse
emn com/mojang/realmsclient/dto/GuardedSerializer
	a gson
	a (Lcom/google/gson/JsonElement;)Ljava/lang/String; toJson
	a (Lenf;)Ljava/lang/String; toJson
	a (Ljava/lang/String;Ljava/lang/Class;)Lenf; fromJson
emo com/mojang/realmsclient/dto/Ops
	a ops
	a (Ljava/lang/String;)Lemo; parse
emp com/mojang/realmsclient/dto/PendingInvite
	a invitationId
	b worldName
	c worldOwnerName
	d worldOwnerUuid
	e date
	f LOGGER
	a (Lcom/google/gson/JsonObject;)Lemp; parse
emq com/mojang/realmsclient/dto/PendingInvitesList
	a pendingInvites
	b LOGGER
	a (Ljava/lang/String;)Lemq; parse
emr com/mojang/realmsclient/dto/PingResult
	a pingResults
	b worldIds
ems com/mojang/realmsclient/dto/PlayerInfo
	a name
	b uuid
	c operator
	d accepted
	e online
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)V setName
	a (Ljava/util/UUID;)V setUuid
	a (Z)V setOperator
	b ()Ljava/util/UUID; getUuid
	b (Z)V setAccepted
	c ()Z isOperator
	c (Z)V setOnline
	d ()Z getAccepted
	e ()Z getOnline
emt com/mojang/realmsclient/dto/RealmsDescriptionDto
	a name
	b description
emu com/mojang/realmsclient/dto/RealmsNews
	a newsLink
	b LOGGER
	a (Ljava/lang/String;)Lemu; parse
emv com/mojang/realmsclient/dto/RealmsNotification
	a LOGGER
	b NOTIFICATION_UUID
	c DISMISSABLE
	d SEEN
	e TYPE
	f VISIT_URL
	g uuid
	h dismissable
	i seen
	j type
	a ()Z seen
	a (Lcom/google/gson/JsonObject;)Lemv; parse
	a (Ljava/lang/String;)Ljava/util/List; parseList
	b ()Z dismissable
	c ()Ljava/util/UUID; uuid
emv$a com/mojang/realmsclient/dto/RealmsNotification$VisitUrl
	a URL
	b BUTTON_TEXT
	c MESSAGE
	d url
	e buttonText
	f message
	a (Lemv;Lcom/google/gson/JsonObject;)Lemv$a; parse
	a (Leyk;)Lesq; buildOpenLinkButton
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getMessage
emw com/mojang/realmsclient/dto/RealmsServer
	a id
	b remoteSubscriptionId
	c name
	d motd
	e state
	f owner
	g ownerUUID
	h players
	i slots
	j expired
	k expiredTrial
	l daysLeft
	m worldType
	n activeSlot
	o minigameName
	p minigameId
	q minigameImage
	r serverPing
	s LOGGER
	a ()Ljava/lang/String; getDescription
	a (I)Ljava/lang/String; getWorldName
	a (Lcom/google/gson/JsonArray;)Ljava/util/List; parseInvited
	a (Lcom/google/gson/JsonObject;)Lemw; parse
	a (Lemw;)V sortInvited
	a (Lena;)V updateServerPing
	a (Ljava/lang/String;)V setName
	a (Ljava/util/Map;)Ljava/util/Map; cloneSlots
	b ()Ljava/lang/String; getName
	b (Lcom/google/gson/JsonArray;)Ljava/util/Map; parseSlots
	b (Ljava/lang/String;)V setDescription
	c ()Ljava/lang/String; getMinigameName
	c (Ljava/lang/String;)Lemw; parse
	d ()Lemw; clone
	d (Ljava/lang/String;)Lfjh; toServerData
	e ()Ljava/util/Map; createEmptySlots
	e (Ljava/lang/String;)Lemw$b; getState
	f (Ljava/lang/String;)Lemw$c; getWorldType
emw$a com/mojang/realmsclient/dto/RealmsServer$McoServerComparator
	a refOwner
	a (Lemw;Lemw;)I compare
emw$b com/mojang/realmsclient/dto/RealmsServer$State
	a CLOSED
	b OPEN
	c UNINITIALIZED
	d $VALUES
	a ()[Lemw$b; $values
emw$c com/mojang/realmsclient/dto/RealmsServer$WorldType
	a NORMAL
	b MINIGAME
	c ADVENTUREMAP
	d EXPERIENCE
	e INSPIRATION
	f $VALUES
	a ()[Lemw$c; $values
emx com/mojang/realmsclient/dto/RealmsServerAddress
	a address
	b resourcePackUrl
	c resourcePackHash
	d LOGGER
	a (Ljava/lang/String;)Lemx; parse
emy com/mojang/realmsclient/dto/RealmsServerList
	a servers
	b LOGGER
	a (Ljava/lang/String;)Lemy; parse
emz com/mojang/realmsclient/dto/RealmsServerPing
	a nrOfPlayers
	b playerList
en$a net/minecraft/commands/arguments/OperationArgument$Operation
en$b net/minecraft/commands/arguments/OperationArgument$SimpleOperation
ena com/mojang/realmsclient/dto/RealmsServerPlayerList
	a serverId
	b players
	c LOGGER
	a (Lcom/google/gson/JsonArray;)Ljava/util/List; parsePlayers
	a (Lcom/google/gson/JsonObject;)Lena; parse
enb com/mojang/realmsclient/dto/RealmsServerPlayerLists
	a servers
	b LOGGER
	a (Ljava/lang/String;)Lenb; parse
enc com/mojang/realmsclient/dto/RealmsText
	a TRANSLATION_KEY
	b ARGS
	c translationKey
	d args
	a (Lcom/google/gson/JsonObject;)Lenc; parse
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; createComponent
end com/mojang/realmsclient/dto/RealmsWorldOptions
	a pvp
	b spawnAnimals
	c spawnMonsters
	d spawnNPCs
	e spawnProtection
	f commandBlocks
	g forceGameMode
	h difficulty
	i gameMode
	j templateId
	k templateImage
	l empty
	m slotName
	n DEFAULT_FORCE_GAME_MODE
	o DEFAULT_PVP
	p DEFAULT_SPAWN_ANIMALS
	q DEFAULT_SPAWN_MONSTERS
	r DEFAULT_SPAWN_NPCS
	s DEFAULT_SPAWN_PROTECTION
	t DEFAULT_COMMAND_BLOCKS
	u DEFAULT_DIFFICULTY
	v DEFAULT_GAME_MODE
	w DEFAULT_SLOT_NAME
	x DEFAULT_TEMPLATE_ID
	y DEFAULT_TEMPLATE_IMAGE
	a ()Lend; createDefaults
	a (I)Ljava/lang/String; getSlotName
	a (Lcom/google/gson/JsonObject;)Lend; parse
	a (Z)V setEmpty
	b ()Lend; createEmptyDefaults
	b (I)Ljava/lang/String; getDefaultSlotName
	c ()Ljava/lang/String; toJson
	d ()Lend; clone
ene com/mojang/realmsclient/dto/RealmsWorldResetDto
	a seed
	b worldTemplateId
	c levelType
	d generateStructures
enf com/mojang/realmsclient/dto/ReflectionBasedSerialization
eng com/mojang/realmsclient/dto/RegionPingResult
	a regionName
	b ping
	a ()I ping
enh com/mojang/realmsclient/dto/ServerActivity
	a profileUuid
	b joinTime
	c leaveTime
	a (Lcom/google/gson/JsonObject;)Lenh; parse
eni com/mojang/realmsclient/dto/ServerActivityList
	a periodInMillis
	b serverActivities
	a (Ljava/lang/String;)Leni; parse
enj com/mojang/realmsclient/dto/Subscription
	a startDate
	b daysLeft
	c type
	d LOGGER
	a (Ljava/lang/String;)Lenj; parse
	b (Ljava/lang/String;)Lenj$a; typeFrom
enj$a com/mojang/realmsclient/dto/Subscription$SubscriptionType
	a NORMAL
	b RECURRING
	c $VALUES
	a ()[Lenj$a; $values
enk com/mojang/realmsclient/dto/UploadInfo
	a LOGGER
	b DEFAULT_SCHEMA
	c DEFAULT_PORT
	d URI_SCHEMA_PATTERN
	e worldClosed
	f token
	g uploadEndpoint
	a ()Ljava/lang/String; getToken
	a (II)I selectPortOrDefault
	a (Ljava/lang/String;)Lenk; parse
	a (Ljava/lang/String;I)Ljava/net/URI; assembleUri
	a (Ljava/lang/String;Ljava/util/regex/Matcher;)Ljava/lang/String; ensureEndpointSchema
	b ()Ljava/net/URI; getUploadEndpoint
	b (Ljava/lang/String;)Ljava/lang/String; createRequest
	c ()Z isWorldClosed
enl com/mojang/realmsclient/dto/ValueObject
	a (Ljava/lang/reflect/Field;)Ljava/lang/String; getName
	b (Ljava/lang/reflect/Field;)Z isStatic
enm com/mojang/realmsclient/dto/WorldDownload
	a downloadLink
	b resourcePackUrl
	c resourcePackHash
	d LOGGER
	a (Ljava/lang/String;)Lenm; parse
enn com/mojang/realmsclient/dto/WorldTemplate
	a id
	b name
	c version
	d author
	e link
	f image
	g trailer
	h recommendedPlayers
	i type
	j LOGGER
	a (Lcom/google/gson/JsonObject;)Lenn; parse
enn$a com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType
	a WORLD_TEMPLATE
	b MINIGAME
	c ADVENTUREMAP
	d EXPERIENCE
	e INSPIRATION
	f $VALUES
	a ()[Lenn$a; $values
eno com/mojang/realmsclient/dto/WorldTemplatePaginatedList
	a templates
	b page
	c size
	d total
	e LOGGER
	a ()Z isLastPage
	a (Ljava/lang/String;)Leno; parse
enq com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler
	a logger
enr com/mojang/realmsclient/exception/RealmsHttpException
ens com/mojang/realmsclient/exception/RealmsServiceException
	a realmsError
ent com/mojang/realmsclient/exception/RetryCallException
	b DEFAULT_DELAY
	c delaySeconds
env com/mojang/realmsclient/gui/RealmsDataFetcher
	a dataFetcher
	b notificationsTask
	c serverListUpdateTask
	d pendingInvitesTask
	e trialAvailabilityTask
	f newsTask
	g newsManager
enw com/mojang/realmsclient/gui/RealmsNewsManager
	a newsLocalStorage
	b hasUnreadNews
	c newsLink
	a ()Z hasUnreadNews
	a (Lemu;)V updateUnreadNews
	b ()Ljava/lang/String; newsLink
	b (Lemu;)Lepk$a; updateNewsStorage
enx com/mojang/realmsclient/gui/RealmsServerList
	a minecraft
	b removedServers
	c servers
	a ()Z isEmpty
	a (Lemw;)V removeItem
	a (Ljava/util/List;)V updateServersList
eny com/mojang/realmsclient/gui/RealmsWorldSlotButton
	A slotIndex
	B state
	a EMPTY_SLOT_LOCATION
	b DEFAULT_WORLD_SLOT_1
	c DEFAULT_WORLD_SLOT_2
	d DEFAULT_WORLD_SLOT_3
	s SLOT_FRAME_SPRITE
	t CHECKMARK_SPRITE
	u SLOT_ACTIVE_TOOLTIP
	v SWITCH_TO_MINIGAME_SLOT_TOOLTIP
	w SWITCH_TO_WORLD_SLOT_TOOLTIP
	x MINIGAME
	y serverDataProvider
	z toolTipSetter
	a ()Leny$b; getState
	a (Lemw;Ljava/lang/String;ZZLeny$a;)Lcom/mojang/datafixers/util/Pair; getTooltipAndNarration
	a (Lemw;ZZ)Leny$a; getAction
	a (Lesf;II)V renderCheckMark
	a (Lesf;IIIIZLjava/lang/String;IJLjava/lang/String;ZZLeny$a;Lnet/minecraft/network/chat/IChatBaseComponent;)V drawSlotFrame
	b ()V tick
	b (Lesf;IIF)V renderWidget
eny$a com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action
	a NOTHING
	b SWITCH_SLOT
	c JOIN
	d $VALUES
	a ()[Leny$a; $values
eny$b com/mojang/realmsclient/gui/RealmsWorldSlotButton$State
	a empty
	b minigame
	c action
	d isCurrentlyActiveSlot
	e slotName
	f imageId
	g image
	h actionPrompt
enz com/mojang/realmsclient/gui/RowButton
	a width
	b height
	c xOffset
	d yOffset
	a ()I getRight
	a (I)V onClick
	a (Lesf;IIII)V drawForRowAt
	a (Lesf;IIZ)V draw
	a (Lesf;Ljava/util/List;Lgfa;IIII)V drawButtonsInRow
	a (Lgfa;Letm$a;Ljava/util/List;IDD)V rowButtonMouseClicked
	b ()I getBottom
eob com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen
	A backupInfoList
	a TITLE
	b UNKNOWN
	c lastScreen
	y backup
	z layout
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; gameDifficultyMetadata
	a (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; checkForSpecificMetadata
	aH_ ()V init
	az_ ()V onClose
	b ()V repositionElements
	b (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; gameModeMetadata
eob$a com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList
eob$b com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoListEntry
	b TEMPLATE_NAME
	c GAME_DIFFICULTY
	d NAME
	e GAME_SERVER_VERSION
	f UPLOADED
	g ENABLED_PACK
	h DESCRIPTION
	i GAME_MODE
	j SEED
	k WORLD_TYPE
	l UNDEFINED
	m key
	n value
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lesf;IIIIIIIZF)V render
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; translateKey
eoc com/mojang/realmsclient/gui/screens/RealmsBackupScreen
	A lastScreen
	B backups
	C backupObjectSelectionList
	D selectedBackup
	E slotId
	F downloadButton
	G restoreButton
	H changesButton
	I noBackups
	J serverData
	K UPLOADED_KEY
	a LOGGER
	b RESTORE_TOOLTIP
	c HAS_CHANGES_TOOLTIP
	y TITLE
	z NO_BACKUPS_LABEL
	D ()V updateButtonStates
	E ()Z shouldChangesButtonBeVisible
	F ()Z shouldRestoreButtonBeVisible
	G ()V downloadClicked
	H ()V downloadWorldData
	I ()V restore
	a (I)V restoreClicked
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	aH_ ()V init
eoc$a com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList
	a ()I getMaxPosition
	a (I)V selectItem
	a (Leml;)V addEntry
	a (Leoc$b;)V setSelected
	a (Lesl$a;)V setSelected
	b ()I getRowWidth
	b (I)V selectInviteListItem
	c ()I getScrollbarPosition
eoc$b com/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry
	b Y_PADDING
	c X_PADDING
	d CHANGES_BUTTON_SPRITES
	e RESTORE_BUTTON_SPRITES
	f backup
	g children
	h restoreButton
	i changesButton
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Leml;)V populateChangeList
	a (Lesf;IIIIIIIZF)V render
	a (Ljava/lang/String;)V addToChangeList
	a (Ljava/util/Date;)Ljava/lang/String; getMediumDatePresentation
	b ()V addChangesButton
	d ()V addRestoreButton
eod com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen
	A serverId
	B message
	C leftX
	D slotsThatHasBeenDownloaded
	E animTick
	a SLOT_FRAME_SPRITE
	b LOGGER
	c DEFAULT_BUTTON_WIDTH
	y lastScreen
	z serverData
	D ()V addButtons
	E ()Z isMinigame
	a (I)I getFramePositionX
	a (J)V fetchServerData
	a (Lesf;IIF)V render
	a (Lesf;IIIIZLjava/lang/String;IJLjava/lang/String;Z)V drawSlotFrame
	aH_ ()V init
	az_ ()V onClose
	b (I)V downloadWorld
	c ()V tick
	e ()V doSwitchOrReset
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
eoe com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen
	a INCOMPATIBLE_TITLE
	b INCOMPATIBLE_MESSAGES_SNAPSHOT
	c INCOMPATIBLE_MESSAGES
	y lastScreen
	D ()[Lnet/minecraft/network/chat/IChatBaseComponent; getMessages
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	aH_ ()V init
eof com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen
	A WORLD_LIST_TITLE
	B TITLE
	C SERVER_EXPIRED_TOOLTIP
	D SERVER_EXPIRING_SOON_TOOLTIP
	E SERVER_EXPIRING_IN_DAY_TOOLTIP
	F SERVER_OPEN_TOOLTIP
	G SERVER_CLOSED_TOOLTIP
	H DEFAULT_BUTTON_WIDTH
	I DEFAULT_BUTTON_OFFSET
	J toolTip
	K lastScreen
	L serverData
	M serverId
	N leftX
	O rightX
	P playersButton
	Q settingsButton
	R subscriptionButton
	S optionsButton
	T backupButton
	U resetWorldButton
	V switchMinigameButton
	W stateChanged
	X clicks
	Y slotButtonList
	a EXPIRED_SPRITE
	b EXPIRES_SOON_SPRITE
	c OPEN_SPRITE
	y CLOSED_SPRITE
	z LOGGER
	D ()V backButtonClicked
	E ()V disableButtons
	F ()V switchToMinigame
	G ()Z isMinigame
	H ()V hideRegularButtons
	I ()V hideMinigameButtons
	a (I)Leny; addSlotButton
	a (II)I centerButton
	a (III)Z keyPressed
	a (ILemw;)V switchToFullSlot
	a (J)V fetchServerData
	a (Lemw;)V joinRealm
	a (Lend;)V saveSlotSettings
	a (Lenn;)V templateSelectionCallback
	a (Lesf;IIF)V render
	a (Lesf;IIII)V drawServerStatus
	a (Lesf;IIIILnet/minecraft/resources/MinecraftKey;Ljava/util/function/Supplier;)V drawRealmStatus
	a (Lesq;)V hide
	a (Leyk;)V closeTheWorld
	a (Ljava/lang/String;Ljava/lang/String;)V saveSettings
	a (ZLeyk;)V openTheWorld
	aH_ ()V init
	b (I)I leftButton
	b (ILemw;)V switchToEmptySlot
	b (Lesq;)V show
	c ()V tick
	c (I)I frame
	e ()V stateChanged
	f ()Leof; getNewScreen
eog com/mojang/realmsclient/gui/screens/RealmsConfirmScreen
	a callback
	b title1
	c title2
	a (Lesf;IIF)V render
	aH_ ()V init
eoh com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen
	A lastScreen
	B layout
	C nameBox
	D descriptionBox
	a NAME_LABEL
	b DESCRIPTION_LABEL
	c BUTTON_SPACING
	y CONTENT_WIDTH
	z server
	D ()V createWorld
	aH_ ()V init
	az_ ()V onClose
	b ()V repositionElements
eoi com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen
	A BAR_BORDER
	B lastScreen
	C worldDownload
	D downloadTitle
	E narrationRateLimiter
	F cancelButton
	G worldName
	H downloadStatus
	I errorMessage
	J status
	K progress
	L cancelled
	M showDots
	N finished
	O extracting
	P previousWrittenBytes
	Q previousTimeSnapshot
	R bytesPersSecond
	S animTick
	T DOTS
	U dotIndex
	V checked
	W callback
	a LOGGER
	b DOWNLOAD_LOCK
	c BAR_WIDTH
	y BAR_TOP
	z BAR_BOTTOM
	D ()V checkDownloadSize
	E ()Lnet/minecraft/network/chat/IChatBaseComponent; createProgressNarrationMessage
	F ()V backButtonClicked
	G ()V downloadSave
	H ()V downloadCancelled
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	a (Lesf;J)V drawDownloadSpeed0
	a (Ljava/lang/String;)J getContentLength
	aH_ ()V init
	c ()V tick
	c (Lesf;)V drawDots
	d (Lesf;)V drawProgressBar
	e (Lesf;)V drawDownloadSpeed
eoi$a com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus
	a bytesWritten
	b totalBytes
eoj com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen
	a nextScreen
	b lines
	c line2Split
	a (Lens;)Leoj$a; errorMessage
	a (Lesf;IIF)V render
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Leoj$a; errorMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Leoj$a; errorMessage
	aH_ ()V init
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
eoj$a com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen$ErrorMessage
	a title
	b detail
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; title
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; detail
eok com/mojang/realmsclient/gui/screens/RealmsInviteScreen
	A inviteButton
	B serverData
	C configureScreen
	D lastScreen
	E message
	a LOGGER
	b NAME_LABEL
	c INVITING_PLAYER_TEXT
	y NO_SUCH_PLAYER_ERROR_TEXT
	z profileName
	D ()V onInvite
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V showMessage
	aH_ ()V init
eol com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen
	A line3
	B yesNoQuestion
	a callback
	b WARNING
	c INFO
	y type
	z line2
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	aH_ ()V init
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
eol$a com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type
	a WARNING
	b INFO
	c colorCode
	d text
	e $VALUES
	a ()[Leol$a; $values
eom com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen
	A layout
	B loadingDotsWidget
	a LOGGER
	b REPEATED_NARRATOR
	c task
	y lastScreen
	z title
	a (III)Z keyPressed
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setTitle
	aH_ ()V init
	b ()V repositionElements
	c ()V tick
	e ()V cancel
eon com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTickTaskScreen
	a task
	c ()V tick
	e ()V cancel
eoo com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen
	A realmsDataSubscription
	B currentConfiguration
	C numberOfPendingInvites
	D trialAvailable
	E hasUnreadNews
	F hasUnseenNotifications
	G showAll
	H onlyNotifications
	a UNSEEN_NOTIFICATION_SPRITE
	b NEWS_SPRITE
	c INVITE_SPRITE
	y TRIAL_AVAILABLE_SPRITE
	z validClient
	D ()Leoo$a; getConfiguration
	E ()Z getRealmsNotificationsEnabled
	F ()Z inTitleScreen
	a (Lenv;Lepe$c;)V addNewsAndInvitesSubscriptions
	a (Lesf;IIF)V render
	aA_ ()V added
	aH_ ()V init
	b (Lenv;Lepe$c;)V addNotificationsSubscriptions
	b (Lesf;IIF)V renderBackground
	c ()V tick
	c (Lesf;)V drawIcons
eoo$a com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen$DataFetcherConfiguration
	a ()Z showOldNotifications
	a (Lenv;)Lepe$c; initDataFetcher
eop com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen
	a MESSAGE
	b nextScreen
	c messageLines
	a (Lesf;IIF)V render
	aH_ ()V init
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
eoq com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen
	A NO_PENDING_INVITES_TEXT
	B ACCEPT_INVITE
	C REJECT_INVITE
	D lastScreen
	E pendingInvites
	F toolTip
	G pendingInvitationSelectionList
	H selectedInvite
	I acceptButton
	J rejectButton
	a ACCEPT_HIGHLIGHTED_SPRITE
	b ACCEPT_SPRITE
	c REJECT_HIGHLIGHTED_SPRITE
	y REJECT_SPRITE
	z LOGGER
	D ()V updateButtonStates
	a (I)Z shouldAcceptAndRejectButtonBeVisible
	a (IZ)V handleInvitation
	a (Lesf;IIF)V render
	aH_ ()V init
	az_ ()V onClose
eoq$a com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry
	b TEXT_LEFT
	c pendingInvite
	d rowButtons
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lesf;IIIIIIIZF)V render
	a (Lesf;Lemp;IIII)V renderPendingInvitationItem
eoq$a$a com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$AcceptRowButton
	a (I)V onClick
	a (Lesf;IIZ)V draw
eoq$a$b com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$RejectRowButton
	a (I)V onClick
	a (Lesf;IIZ)V draw
eoq$b com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList
	a ()I getMaxPosition
	a (I)V selectItem
	a (Leoq$a;)V setSelected
	a (Lesl$a;)V setSelected
	b ()I getRowWidth
	b (I)V removeAtIndex
	c (I)V selectInviteListItem
eor com/mojang/realmsclient/gui/screens/RealmsPlayerScreen
	A REMOVE_ENTRY_TOOLTIP
	B NO_ENTRY_SELECTED
	C lastScreen
	D serverData
	E invitedObjectSelectionList
	F column1X
	G columnWidth
	H removeButton
	I opdeopButton
	J playerIndex
	K stateChanged
	a LOGGER
	b OPTIONS_BACKGROUND
	c QUESTION_TITLE
	y NORMAL_USER_TOOLTIP
	z OP_TOOLTIP
	D ()V updateButtonStates
	E ()V backButtonClicked
	a (III)Z keyPressed
	a (Lemo;)V updateOps
	a (Lesf;IIF)V render
	aH_ ()V init
	i (I)Z shouldRemoveAndOpdeopButtonBeVisible
	j (I)V op
	k (I)V deop
	l (I)V uninvite
eor$a com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry
	b X_OFFSET
	c Y_PADDING
	d BUTTON_WIDTH
	e BUTTON_HEIGHT
	f REMOVE_BUTTON_SPRITES
	g MAKE_OP_BUTTON_SPRITES
	h REMOVE_OP_BUTTON_SPRITES
	i playerInfo
	j children
	k removeButton
	l makeOpButton
	m removeOpButton
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lesf;IIIIIIIZF)V render
	b ()V updateButtons
eor$b com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList
	a ()I getMaxPosition
	a (I)V selectItem
	a (Lems;)V addEntry
	a (Leor$a;)V setSelected
	a (Lesl$a;)V setSelected
	b ()I getRowWidth
	b (I)V selectInviteListItem
	c ()I getScrollbarPosition
	d ()V updateButtons
eos com/mojang/realmsclient/gui/screens/RealmsPopupScreen
	A BG_TEXTURE_WIDTH
	B BG_TEXTURE_HEIGHT
	C BG_BORDER_SIZE
	D IMAGE_WIDTH
	E IMAGE_HEIGHT
	F BUTTON_SPACING
	G PADDING
	H WIDTH
	I HEIGHT
	J TEXT_WIDTH
	K BUTTON_WIDTH
	L CAROUSEL_SWITCH_INTERVAL
	M carouselImages
	N backgroundScreen
	O trialAvailable
	P createTrialButton
	Q carouselIndex
	R carouselTick
	a POPUP_TEXT
	b CLOSE_TEXT
	c BACKGROUND_SPRITE
	y TRIAL_AVAILABLE_SPRITE
	z CROSS_BUTTON_SPRITES
	D ()I left
	E ()I top
	F ()I right
	G ()I bottom
	a (Lesf;IIF)V render
	a (Lesf;Lesq;)V renderDiamond
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V updateCarouselImages
	aH_ ()V init
	az_ ()V onClose
	b (Lesf;IIF)V renderBackground
	c ()V tick
eot com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen
	A callback
	B seedEdit
	C levelType
	D generateStructures
	E buttonTitle
	a TITLE
	b SEED_LABEL
	c BUTTON_SPACING
	y CONTENT_WIDTH
	z layout
	D ()Lepp; createWorldGenerationInfo
	aH_ ()V init
	az_ ()V onClose
	b ()V repositionElements
eou com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen
	A CREATE_REALM_SUBTITLE
	B CREATE_WORLD_TITLE
	C CREATE_WORLD_SUBTITLE
	D RESET_WORLD_TITLE
	E RESET_WORLD_SUBTITLE
	F RESET_WORLD_RESET_TASK_TITLE
	G WORLD_TEMPLATES_TITLE
	H ADVENTURES_TITLE
	I EXPERIENCES_TITLE
	J INSPIRATION_TITLE
	K lastScreen
	L serverData
	M subtitle
	N subtitleColor
	O resetTaskTitle
	P UPLOAD_LOCATION
	Q ADVENTURE_MAP_LOCATION
	R SURVIVAL_SPAWN_LOCATION
	S NEW_WORLD_LOCATION
	T EXPERIENCE_LOCATION
	U INSPIRATION_LOCATION
	V templates
	W adventuremaps
	X experiences
	Y inspirations
	Z resetWorldRunnable
	a CREATE_WORLD_RESET_TASK_TITLE
	aa layout
	b slot
	c LOGGER
	y SLOT_FRAME_SPRITE
	z CREATE_REALM_TITLE
	a (I)I frame
	a (Lenn;)V templateSelectionCallback
	a (Lepp;)V generationSelectionCallback
	a (Lepv;)V startTask
	a (Leyk;ILemw;Ljava/lang/Runnable;)Leou; forEmptySlot
	a (Leyk;Lemw;Ljava/lang/Runnable;)Leou; forNewRealm
	a (Ljava/lang/Runnable;)V switchSlot
	aH_ ()V init
	az_ ()V onClose
	b (Leyk;Lemw;Ljava/lang/Runnable;)Leou; forResetSlot
	b (Ljava/lang/Runnable;)V resetWorld
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
eou$a com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton
	b WIDTH
	c HEIGHT
	d IMAGE_SIZE
	s image
	b (Lesf;IIF)V renderWidget
eov com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen
	A CHEATS_TEXT
	B DATE_FORMAT
	C lastScreen
	D worldId
	E slotId
	F uploadButton
	G levelList
	H selectedWorld
	I worldSelectionList
	a TITLE
	b LOGGER
	c UNABLE_TO_LOAD_WORLD
	y WORLD_TEXT
	z HARDCORE_TEXT
	D ()V loadLevelList
	E ()V upload
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	a (Lnet/minecraft/world/level/storage/WorldInfo;)Lnet/minecraft/network/chat/IChatBaseComponent; gameModeName
	aH_ ()V init
	b (Lnet/minecraft/world/level/storage/WorldInfo;)Ljava/lang/String; formatLastPlayed
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
eov$a com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry
	b levelSummary
	c name
	d id
	e info
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lesf;III)V renderItem
	a (Lesf;IIIIIIIZF)V render
eov$b com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList
	a ()I getMaxPosition
	a (Leov$a;)V setSelected
	a (Lesl$a;)V setSelected
	a (Lnet/minecraft/world/level/storage/WorldInfo;)V addEntry
eow com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen
	A BUTTON_WIDTH
	B BUTTON_SPACING
	C layout
	D callback
	E worldTemplateObjectSelectionList
	F worldType
	G selectButton
	H trailerButton
	I publisherButton
	J selectedTemplate
	K currentLink
	L warning
	M noTemplatesMessage
	a LOGGER
	b SLOT_FRAME_SPRITE
	c SELECT_BUTTON_NAME
	y TRAILER_BUTTON_NAME
	z PUBLISHER_BUTTON_NAME
	D ()V updateButtonStates
	E ()V selectTemplate
	F ()V onTrailer
	G ()V onPublish
	H ()I getHeaderHeight
	a (Leno;)V fetchTemplatesAsync
	a (Leno;Lemf;)Lcom/mojang/datafixers/util/Either; fetchTemplates
	a (Lesf;IIF)V render
	a (Lesf;IILjava/util/List;)V renderMultilineMessage
	a ([Lnet/minecraft/network/chat/IChatBaseComponent;)V setWarning
	aH_ ()V init
	az_ ()V onClose
	b ()V repositionElements
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
eow$a com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry
	a template
	c WEBSITE_LINK_SPRITES
	d TRAILER_LINK_SPRITES
	e PUBLISHER_LINK_TOOLTIP
	f TRAILER_LINK_TOOLTIP
	g lastClickTime
	h websiteButton
	i trailerButton
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lesf;IIIIIIIZF)V render
eow$b com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList
	a ()I getMaxPosition
	a (DDI)Z mouseClicked
	a (Lenn;)V addEntry
	a (Leow$a;)V setSelected
	a (Lesl$a;)V setSelected
	b ()I getRowWidth
	d ()Z isEmpty
	e ()Ljava/util/List; getTemplates
eox com/mojang/realmsclient/gui/screens/RealmsSettingsScreen
	A doneButton
	B descEdit
	C nameEdit
	a COMPONENT_WIDTH
	b NAME_LABEL
	c DESCRIPTION_LABEL
	y configureWorldScreen
	z serverData
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	aH_ ()V init
	c ()V tick
	f ()V save
eoy com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen
	A NAME_LABEL
	B SPAWN_PROTECTION_TEXT
	C SPAWN_WARNING_TITLE
	D nameEdit
	E column1X
	F columnWidth
	G options
	H worldType
	I difficulty
	J gameMode
	K defaultSlotName
	L worldName
	M pvp
	N spawnNPCs
	O spawnAnimals
	P spawnMonsters
	Q spawnProtection
	R commandBlocks
	S forceGameMode
	T spawnProtectionButton
	a DIFFICULTIES
	b GAME_MODES
	c parent
	y DEFAULT_DIFFICULTY
	z DEFAULT_GAME_MODE
	D ()V saveSettings
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	a (Ljava/lang/String;)V setWorldName
	a (Ljava/util/List;II)Ljava/lang/Object; findByIndex
	a (Ljava/util/List;Ljava/lang/Object;I)I findIndex
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/function/Consumer;)Lesx$b; confirmDangerousOption
	aH_ ()V init
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
eoy$a com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider
	d minValue
	e maxValue
	a ()V applyValue
	a (DD)V onClick
	b ()V updateMessage
	b (DD)V onRelease
eoz com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen
	A SUBSCRIPTION_EXPIRED_TEXT
	B SUBSCRIPTION_LESS_THAN_A_DAY_TEXT
	C UNKNOWN
	D RECURRING_INFO
	E lastScreen
	F serverData
	G mainScreen
	H daysLeft
	I startDate
	J type
	a LOGGER
	b SUBSCRIPTION_TITLE
	c SUBSCRIPTION_START_LABEL
	y TIME_LEFT_LABEL
	z DAYS_LEFT_LABEL
	a (I)Lnet/minecraft/network/chat/IChatBaseComponent; daysLeftPresentation
	a (III)Z keyPressed
	a (J)V getSubscription
	a (Lesf;IIF)V render
	aH_ ()V init
	b (J)Lnet/minecraft/network/chat/IChatBaseComponent; localPresentation
	c (Z)V deleteRealm
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
ep$a net/minecraft/commands/arguments/RangeArgument$Floats
	a EXAMPLES
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; getRange
ep$b net/minecraft/commands/arguments/RangeArgument$Ints
	a EXAMPLES
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; getRange
epa com/mojang/realmsclient/gui/screens/RealmsTermsScreen
	A realmsServer
	B onLink
	a LOGGER
	b TITLE
	c TERMS_STATIC_TEXT
	y TERMS_LINK_TEXT
	z lastScreen
	D ()V agreedToTos
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	aH_ ()V init
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
epb com/mojang/realmsclient/gui/screens/RealmsUploadScreen
	A BAR_BORDER
	B DOTS
	C VERIFYING_TEXT
	D lastScreen
	E selectedLevel
	F worldId
	G slotId
	H uploadStatus
	I narrationRateLimiter
	J errorMessage
	K status
	L progress
	M cancelled
	N uploadFinished
	O showDots
	P uploadStarted
	Q backButton
	R cancelButton
	S tickCount
	T previousWrittenBytes
	U previousTimeSnapshot
	V bytesPersSecond
	a LOGGER
	b UPLOAD_LOCK
	c BAR_WIDTH
	y BAR_TOP
	z BAR_BOTTOM
	D ()V onBack
	E ()V onCancel
	F ()Lnet/minecraft/network/chat/IChatBaseComponent; createProgressNarrationMessage
	G ()V upload
	H ()V uploadCancelled
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	a (Lesf;J)V drawUploadSpeed0
	a (Ljava/io/File;)Z verify
	a (Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V addFileToTarGz
	a ([Lnet/minecraft/network/chat/IChatBaseComponent;)V setErrorMessage
	aH_ ()V init
	b (Ljava/io/File;)Ljava/io/File; tarGzipArchive
	c ()V tick
	c (Lesf;)V drawDots
	d (Lesf;)V drawProgressBar
	e (Lesf;)V drawUploadSpeed
epc com/mojang/realmsclient/gui/screens/UploadResult
	a statusCode
	b errorMessage
epc$a com/mojang/realmsclient/gui/screens/UploadResult$Builder
	a statusCode
	b errorMessage
	a ()Lepc; build
	a (I)Lepc$a; withStatusCode
	a (Ljava/lang/String;)Lepc$a; withErrorMessage
epe com/mojang/realmsclient/gui/task/DataFetcher
	a LOGGER
	b executor
	c resolution
	d timeSource
	a ()Lepe$c; createSubscription
	a (Ljava/lang/String;Ljava/util/concurrent/Callable;Ljava/time/Duration;Lepf;)Lepe$e; createTask
epe$a com/mojang/realmsclient/gui/task/DataFetcher$ComputationResult
	a value
	b time
	a ()Lcom/mojang/datafixers/util/Either; value
	b ()J time
epe$b com/mojang/realmsclient/gui/task/DataFetcher$SubscribedTask
	b task
	c output
	d lastCheckTime
	a ()V runCallbackIfNeeded
	a (J)V update
	b ()V runCallback
	c ()V reset
epe$c com/mojang/realmsclient/gui/task/DataFetcher$Subscription
	b subscriptions
	a ()V forceUpdate
	a (Lepe$e;Ljava/util/function/Consumer;)V subscribe
	b ()V tick
	c ()V reset
epe$d com/mojang/realmsclient/gui/task/DataFetcher$SuccessfulComputationResult
	a value
	b time
	a ()Ljava/lang/Object; value
	b ()J time
epe$e com/mojang/realmsclient/gui/task/DataFetcher$Task
	b id
	c updater
	d period
	e repeatStrategy
	f pendingTask
	g lastResult
	h nextUpdate
	a ()V reset
	a (J)V updateIfNeeded
epf com/mojang/realmsclient/gui/task/RepeatedDelayStrategy
	a CONSTANT
	a ()J delayCyclesAfterSuccess
	a (I)Lepf; exponentialBackoff
	b ()J delayCyclesAfterFailure
epi com/mojang/realmsclient/util/JsonUtils
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/lang/String; getRequiredString
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;I)I getIntOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;J)J getLongOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getStringOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/util/UUID;)Ljava/util/UUID; getUuidOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/util/function/Function;)Ljava/lang/Object; getRequired
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z getBooleanOr
	b (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date; getDateOr
epj com/mojang/realmsclient/util/LevelType
	a DEFAULT
	b FLAT
	c LARGE_BIOMES
	d AMPLIFIED
	e index
	f name
	g $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	b ()I getDtoIndex
	c ()[Lepj; $values
epk com/mojang/realmsclient/util/RealmsPersistence
	a FILE_NAME
	b GSON
	c LOGGER
	a ()Lepk$a; read
	a (Lepk$a;)V save
	b ()Lepk$a; readFile
	b (Lepk$a;)V writeFile
	c ()Ljava/nio/file/Path; getPathToData
epk$a com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData
	a newsLink
	b hasUnreadNews
epl com/mojang/realmsclient/util/RealmsTextureManager
	a TEXTURES
	b LOGGER
	c TEMPLATE_ICON_LOCATION
	a (Ljava/lang/String;)Lekq; loadImage
	a (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; worldTemplate
	b (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getTexture
epl$a com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture
	a image
	b textureId
	a ()Ljava/lang/String; image
	b ()Lnet/minecraft/resources/MinecraftKey; textureId
epm com/mojang/realmsclient/util/RealmsUtil
	a RIGHT_NOW
	b MINUTES
	c HOURS
	d DAYS
	a (J)Lnet/minecraft/network/chat/IChatBaseComponent; convertToAgePresentation
	a (Lesf;IIILjava/util/UUID;)V renderPlayerFace
	a (Ljava/util/Date;)Lnet/minecraft/network/chat/IChatBaseComponent; convertToAgePresentationFromInstant
epn com/mojang/realmsclient/util/TextRenderingUtils
	a (Ljava/lang/String;)Ljava/util/List; lineBreak
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; split
	a (Ljava/lang/String;Ljava/util/List;)Ljava/util/List; decompose
	a (Ljava/lang/String;[Lepn$b;)Ljava/util/List; decompose
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/List; insertLinks
epn$a com/mojang/realmsclient/util/TextRenderingUtils$Line
	a segments
epn$b com/mojang/realmsclient/util/TextRenderingUtils$LineSegment
	a fullText
	b linkTitle
	c linkUrl
	a ()Ljava/lang/String; renderedText
	a (Ljava/lang/String;)Lepn$b; text
	a (Ljava/lang/String;Ljava/lang/String;)Lepn$b; link
	b ()Z isLink
	c ()Ljava/lang/String; getLinkUrl
epo com/mojang/realmsclient/util/UploadTokenCache
	a TOKEN_CACHE
	a (J)Ljava/lang/String; get
	a (JLjava/lang/String;)V put
	b (J)V invalidate
epp com/mojang/realmsclient/util/WorldGenerationInfo
	a seed
	b levelType
	c generateStructures
	a ()Ljava/lang/String; getSeed
	b ()Lepj; getLevelType
	c ()Z shouldGenerateStructures
epr com/mojang/realmsclient/util/task/CloseServerTask
	b LOGGER
	c TITLE
	d serverData
	e configureScreen
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
eps com/mojang/realmsclient/util/task/ConnectTask
	b TITLE
	c realmsConnect
	d server
	e address
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	b ()V abortTask
	c ()V tick
ept com/mojang/realmsclient/util/task/DownloadTask
	b LOGGER
	c TITLE
	d worldId
	e slot
	f lastScreen
	g downloadName
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
epu com/mojang/realmsclient/util/task/GetServerDetailsTask
	b LOGGER
	c TITLE
	d server
	e lastScreen
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	a (Lemx;)Leom; connectScreen
	a (Lemx;Ljava/util/function/Function;)Leol; resourcePackDownloadConfirmationScreen
	b (Lemx;)Ljava/util/concurrent/CompletableFuture; scheduleResourcePackDownload
	f ()Lemx; fetchServerAddress
epv com/mojang/realmsclient/util/task/LongRunningTask
	a NUMBER_OF_RETRIES
	b LOGGER
	c aborted
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	a (J)V pause
	a (Lens;)V error
	a (Leyk;)V setScreen
	a (Ljava/lang/Exception;)V error
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V error
	b ()V abortTask
	c ()V tick
	d ()Z aborted
	e ()V init
epw com/mojang/realmsclient/util/task/OpenServerTask
	b LOGGER
	c TITLE
	d serverData
	e returnScreen
	f join
	g minecraft
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
epx com/mojang/realmsclient/util/task/ResettingGeneratedWorldTask
	b generationInfo
	a (Lemf;J)V sendResetRequest
epy com/mojang/realmsclient/util/task/ResettingTemplateWorldTask
	b template
	a (Lemf;J)V sendResetRequest
epz com/mojang/realmsclient/util/task/ResettingWorldTask
	b LOGGER
	c serverId
	d title
	e callback
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	a (Lemf;J)V sendResetRequest
eq$a net/minecraft/commands/arguments/ResourceArgument$Info
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	a (Leq$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Leq$a$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ResourceArgument;)Leq$a$a; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)Leq$a$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
eq$a$a net/minecraft/commands/arguments/ResourceArgument$Info$Template
	b registryKey
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceArgument; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
eqa com/mojang/realmsclient/util/task/RestoreTask
	b LOGGER
	c TITLE
	d backup
	e worldId
	f lastScreen
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
eqb com/mojang/realmsclient/util/task/SwitchMinigameTask
	b LOGGER
	c TITLE
	d worldId
	e worldTemplate
	f lastScreen
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
eqc com/mojang/realmsclient/util/task/SwitchSlotTask
	b LOGGER
	c TITLE
	d worldId
	e slot
	f callback
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
eqd com/mojang/realmsclient/util/task/WorldCreationTask
	b LOGGER
	c TITLE
	d name
	e motd
	f worldId
	g lastScreen
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
eqf net/minecraft/client/AttackIndicatorStatus
	a OFF
	b CROSSHAIR
	c HOTBAR
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Leqf; byId
	b ()Ljava/lang/String; getKey
	c ()[Leqf; $values
eqg net/minecraft/client/Camera
	a FOG_DISTANCE_SCALE
	b initialized
	c level
	d entity
	e position
	f blockPosition
	g forwards
	h up
	i left
	j xRot
	k yRot
	l rotation
	m detached
	n eyeHeight
	o eyeHeightOld
	a ()V tick
	a (D)D getMaxZoom
	a (DDD)V move
	a (FF)V setRotation
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/entity/Entity;ZZF)V setup
	a (Lnet/minecraft/world/phys/Vec3D;)V setPosition
	b ()Lnet/minecraft/world/phys/Vec3D; getPosition
	b (DDD)V setPosition
	c ()Lnet/minecraft/core/BlockPosition; getBlockPosition
	d ()F getXRot
	e ()F getYRot
	f ()Lorg/joml/Quaternionf; rotation
	g ()Lnet/minecraft/world/entity/Entity; getEntity
	h ()Z isInitialized
	i ()Z isDetached
	j ()Leqg$a; getNearPlane
	k ()Leao; getFluidInCamera
	l ()Lorg/joml/Vector3f; getLookVector
	m ()Lorg/joml/Vector3f; getUpVector
	n ()Lorg/joml/Vector3f; getLeftVector
	o ()V reset
eqg$a net/minecraft/client/Camera$NearPlane
	a forward
	b left
	c up
	a ()Lnet/minecraft/world/phys/Vec3D; getTopLeft
	a (FF)Lnet/minecraft/world/phys/Vec3D; getPointOnPlane
	b ()Lnet/minecraft/world/phys/Vec3D; getTopRight
	c ()Lnet/minecraft/world/phys/Vec3D; getBottomLeft
	d ()Lnet/minecraft/world/phys/Vec3D; getBottomRight
eqh net/minecraft/client/CameraType
	a FIRST_PERSON
	b THIRD_PERSON_BACK
	c THIRD_PERSON_FRONT
	d VALUES
	e firstPerson
	f mirrored
	g $VALUES
	a ()Z isFirstPerson
	b ()Z isMirrored
	c ()Leqh; cycle
	d ()[Leqh; $values
eqi net/minecraft/client/ClientRecipeBook
	c LOGGER
	d collectionsByTab
	e allCollections
	a (Lere;)Ljava/util/List; getCollection
	a (Ljava/lang/Iterable;)Ljava/util/Map; categorizeAndGroupRecipes
	a (Ljava/lang/Iterable;Lnet/minecraft/core/IRegistryCustom;)V setupCollections
	b ()Ljava/util/List; getCollections
	g (Lnet/minecraft/world/item/crafting/RecipeHolder;)Lere; getCategory
eqj net/minecraft/client/CloudStatus
	a OFF
	b FAST
	c FANCY
	d CODEC
	e id
	f legacyName
	g key
	h $VALUES
	a ()I getId
	b ()Ljava/lang/String; getKey
	c ()Ljava/lang/String; getSerializedName
	e ()[Leqj; $values
eqk net/minecraft/client/CommandHistory
	a LOGGER
	b MAX_PERSISTED_COMMAND_HISTORY
	c PERSISTED_COMMANDS_FILE_NAME
	d commandsPath
	e lastCommands
	a ()Ljava/util/Collection; history
	a (Ljava/lang/String;)V addCommand
	b ()V save
eql net/minecraft/client/ComponentCollector
	a parts
	a ()Lnet/minecraft/network/chat/IChatFormatted; getResult
	a (Lnet/minecraft/network/chat/IChatFormatted;)V append
	b ()Lnet/minecraft/network/chat/IChatFormatted; getResultOrEmpty
	c ()V reset
eqm net/minecraft/client/DebugQueryHandler
	a connection
	b transactionId
	c callback
	a (ILjava/util/function/Consumer;)V queryEntityTag
	a (ILnet/minecraft/nbt/NBTTagCompound;)Z handleResponse
	a (Ljava/util/function/Consumer;)I startTransaction
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Consumer;)V queryBlockEntityTag
eqn net/minecraft/client/GameNarrator
	a NO_TITLE
	b LOGGER
	c minecraft
	d narrator
	a ()Z isActive
	a (Leqx;)V updateNarratorStatus
	a (Ljava/lang/String;)V sayNow
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sayChat
	a (Z)V checkStatus
	b ()V clear
	b (Ljava/lang/String;)V logNarratedMessage
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V say
	c ()V destroy
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V sayNow
	d ()Leqx; getStatus
eqn$a net/minecraft/client/GameNarrator$NarratorInitException
eqo net/minecraft/client/GraphicsStatus
	a FAST
	b FANCY
	c FABULOUS
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Leqo; byId
	b ()Ljava/lang/String; getKey
	c ()[Leqo; $values
eqp net/minecraft/client/GuiMessage
	a addedTime
	b content
	c signature
	d tag
	a ()I addedTime
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; content
	c ()Lnet/minecraft/network/chat/MessageSignature; signature
	d ()Leqq; tag
eqp$a net/minecraft/client/GuiMessage$Line
	a addedTime
	b content
	c tag
	d endOfEntry
	a ()I addedTime
	b ()Lnet/minecraft/util/FormattedString; content
	c ()Leqq; tag
	d ()Z endOfEntry
eqq net/minecraft/client/GuiMessageTag
	a indicatorColor
	b icon
	c text
	d logTag
	e SYSTEM_TEXT
	f SYSTEM_TEXT_SINGLE_PLAYER
	g CHAT_NOT_SECURE_TEXT
	h CHAT_MODIFIED_TEXT
	i CHAT_ERROR_TEXT
	j CHAT_NOT_SECURE_INDICATOR_COLOR
	k CHAT_MODIFIED_INDICATOR_COLOR
	l SYSTEM
	m SYSTEM_SINGLE_PLAYER
	n CHAT_NOT_SECURE
	o CHAT_ERROR
	a ()Leqq; system
	a (Ljava/lang/String;)Leqq; chatModified
	b ()Leqq; systemSinglePlayer
	c ()Leqq; chatNotSecure
	d ()Leqq; chatError
	e ()I indicatorColor
	f ()Leqq$a; icon
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; text
	h ()Ljava/lang/String; logTag
eqq$a net/minecraft/client/GuiMessageTag$Icon
	a CHAT_MODIFIED
	b sprite
	c width
	d height
	e $VALUES
	a ()[Leqq$a; $values
	a (Lesf;II)V draw
eqr net/minecraft/client/HotbarManager
	a NUM_HOTBAR_GROUPS
	b LOGGER
	c optionsFile
	d fixerUpper
	e hotbars
	f loaded
	a ()V save
	a (I)Lfni; get
	b ()V load
eqs net/minecraft/client/InputType
	a NONE
	b MOUSE
	c KEYBOARD_ARROW
	d KEYBOARD_TAB
	e $VALUES
	a ()Z isMouse
	b ()Z isKeyboard
	c ()[Leqs; $values
eqt net/minecraft/client/KeyMapping
	a CATEGORY_MOVEMENT
	b CATEGORY_MISC
	c CATEGORY_MULTIPLAYER
	d CATEGORY_GAMEPLAY
	e CATEGORY_INVENTORY
	f CATEGORY_INTERFACE
	g CATEGORY_CREATIVE
	h ALL
	i MAP
	j CATEGORIES
	k CATEGORY_SORT_ORDER
	l name
	m defaultKey
	n category
	o key
	p isDown
	q clickCount
	a ()V setAll
	a (I)Z matchesMouse
	a (II)Z matches
	a (Lekk$a;)V click
	a (Lekk$a;Z)V set
	a (Leqt;)I compareTo
	a (Ljava/lang/String;)Ljava/util/function/Supplier; createNameSupplier
	a (Z)V setDown
	b ()V releaseAll
	b (Lekk$a;)V setKey
	b (Leqt;)Z same
	c ()V resetToggleKeys
	d ()V resetMapping
	e ()Z isDown
	f ()Ljava/lang/String; getCategory
	g ()Z consumeClick
	h ()Ljava/lang/String; getName
	i ()Lekk$a; getDefaultKey
	j ()Z isUnbound
	k ()Lnet/minecraft/network/chat/IChatBaseComponent; getTranslatedKeyMessage
	l ()Z isDefault
	m ()Ljava/lang/String; saveString
	n ()V release
equ net/minecraft/client/KeyboardHandler
	a DEBUG_CRASH_TIME
	b minecraft
	c clipboardManager
	d debugCrashKeyTime
	e debugCrashKeyReportedTime
	f debugCrashKeyReportedCount
	g handledDebugKey
	a ()Ljava/lang/String; getClipboard
	a (I)Z handleChunkDebugKeys
	a (J)V setup
	a (JII)V charTyped
	a (JIIII)V keyPress
	a (Ljava/lang/String;)V setClipboard
	a (Ljava/lang/String;[Ljava/lang/Object;)V debugFeedbackTranslated
	a (Lnet/minecraft/EnumChatFormat;Lnet/minecraft/network/chat/IChatBaseComponent;)V debugComponent
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V debugFeedbackComponent
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/nbt/NBTTagCompound;)V copyCreateEntityCommand
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/nbt/NBTTagCompound;)V copyCreateBlockCommand
	a (ZZ)V copyRecreateCommand
	b ()V tick
	b (I)Z handleDebugKeys
	b (Ljava/lang/String;[Ljava/lang/Object;)V debugWarningTranslated
	c (Ljava/lang/String;[Ljava/lang/Object;)V debugFeedback
eqv net/minecraft/client/Minecraft
	A wireframe
	B sectionPath
	C sectionVisibility
	D smartCull
	E instance
	F LOGGER
	G MAX_TICKS_PER_UPDATE
	H REGIONAL_COMPLIANCIES
	I RESOURCE_RELOAD_INITIAL_TASK
	J SOCIAL_INTERACTIONS_NOT_AVAILABLE
	K resourcePackDirectory
	L profileFuture
	M textureManager
	N fixerUpper
	O virtualScreen
	P window
	Q timer
	R renderBuffers
	S entityRenderDispatcher
	T itemRenderer
	U searchRegistry
	V user
	W progressListener
	X hotbarManager
	Y lastInputType
	Z launchedVersion
	a ON_OSX
	aA blockRenderer
	aB paintingTextures
	aC mobEffectTextures
	aD guiSprites
	aE toast
	aF tutorial
	aG playerSocialManager
	aH entityModels
	aI blockEntityRenderDispatcher
	aJ telemetryManager
	aK profileKeyPairManager
	aL realmsDataFetcher
	aM quickPlayLog
	aN singleplayerServer
	aO pendingConnection
	aP isLocalServer
	aQ rightClickDelay
	aR pause
	aS pausePartialTick
	aT lastNanoTime
	aU lastTime
	aV frames
	aW overlay
	aX gameThread
	aY running
	aZ delayedCrash
	aa versionType
	ab proxy
	ac levelSource
	ad is64bit
	ae demo
	af allowsMultiplayer
	ag allowsChat
	ah resourceManager
	ai vanillaPackResources
	aj downloadedPackSource
	ak resourcePackRepository
	al languageManager
	am blockColors
	an itemColors
	ao mainRenderTarget
	ap soundManager
	aq musicManager
	ar fontManager
	as splashManager
	at gpuWarnlistManager
	au regionalCompliancies
	av authenticationService
	aw minecraftSessionService
	ax userApiService
	ay skinManager
	az modelManager
	b DEFAULT_FONT
	ba fps
	bb frameTimeNs
	bc windowActive
	bd progressTasks
	be pendingReload
	bf socialInteractionsToast
	bg profiler
	bh fpsPieRenderTicks
	bi fpsPieProfiler
	bj fpsPieResults
	bk metricsRecorder
	bl reloadStateTracker
	bm savedCpuDuration
	bn gpuUtilization
	bo currentFrameProfile
	bp realms32BitWarningStatus
	bq narrator
	br chatListener
	bs reportingContext
	bt commandHistory
	bu directoryValidator
	bv gameLoadFinished
	bw debugPath
	c UNIFORM_FONT
	d ALT_FONT
	e UPDATE_DRIVERS_ADVICE
	f levelRenderer
	g particleEngine
	h font
	i fontFilterFishy
	j gameRenderer
	k debugRenderer
	l gui
	m options
	n mouseHandler
	o keyboardHandler
	p gameDirectory
	q gameMode
	r level
	s player
	t cameraEntity
	u crosshairPickEntity
	v hitResult
	w missTime
	x noRender
	y screen
	z fpsString
	A ()Z telemetryOptInExtra
	B ()Z extraTelemetryAvailable
	C ()Z allowsTelemetry
	D ()Z allowsMultiplayer
	E ()Z allowsRealms
	F ()Lcom/mojang/authlib/minecraft/BanDetails; multiplayerBan
	G ()Z isNameBanned
	H ()Leqv$a; getChatStatus
	I ()Z isDemo
	J ()Lfiy; getConnection
	K ()Z renderNames
	L ()Z useFancyGraphics
	M ()Z useShaderTransparency
	N ()Z useAmbientOcclusion
	O ()Leqv; getInstance
	P ()Ljava/util/concurrent/CompletableFuture; delayTextureReload
	Q ()Lfjh; getCurrentServer
	R ()Z isLocalServer
	S ()Z hasSingleplayerServer
	T ()Lgdd; getSingleplayerServer
	U ()Z isSingleplayer
	V ()Lerk; getUser
	W ()Lcom/mojang/authlib/GameProfile; getGameProfile
	X ()Ljava/net/Proxy; getProxy
	Y ()Lfzf; getTextureManager
	Z ()Lnet/minecraft/server/packs/resources/IResourceManager; getResourceManager
	a ()V resizeDisplay
	a (I)V debugFpsMeterKeyPress
	a (IJ)V onFullscreenError
	a (Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Lfdw;)Lcom/mojang/authlib/minecraft/UserApiService; createUserApiService
	a (Leqs;)V setLastInputType
	a (Leqv$b;)V onResourceLoadFinished
	a (Leqv;Lgam;Ljava/lang/String;Leqz;Lnet/minecraft/CrashReport;)V fillReport
	a (Lesf;Lnet/minecraft/util/profiling/MethodProfilerResults;)V renderFpsMeter
	a (Leye;)V setOverlay
	a (Leyk;)V setScreen
	a (Lfix;)V setLevel
	a (Lfjw;)V updateReportEnvironment
	a (Lgcy$a;)Lgcz; getSearchTree
	a (Lgcy$a;Ljava/util/List;)V populateSearchTree
	a (Ljava/io/File;II)Lnet/minecraft/network/chat/IChatBaseComponent; grabPanoramixScreenshot
	a (Ljava/io/File;IIII)Lnet/minecraft/network/chat/IChatBaseComponent; grabHugeScreenshot
	a (Ljava/lang/String;)V openChatScreen
	a (Ljava/lang/String;Lnet/minecraft/world/level/storage/Convertable$ConversionSession;Lnet/minecraft/server/packs/repository/ResourcePackRepository;Lnet/minecraft/server/WorldStem;Z)V doWorldLoad
	a (Ljava/lang/Throwable;Leqv$b;)V rollbackResourcePacks
	a (Ljava/lang/Throwable;Lnet/minecraft/network/chat/IChatBaseComponent;Leqv$b;)V clearResourcePacksOnError
	a (Ljava/util/List;)V addInitialScreens
	a (Ljava/util/UUID;)Z isBlocked
	a (Ljava/util/function/Consumer;)Z debugClientMetricsStart
	a (Lnet/minecraft/CrashReport;)V delayCrash
	a (Lnet/minecraft/SystemReport;Leqv;Lgam;Ljava/lang/String;Leqz;)Lnet/minecraft/SystemReport; fillSystemReport
	a (Lnet/minecraft/SystemReport;Ljava/util/List;)Ljava/nio/file/Path; archiveProfilingReport
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V addResourcePackLoadFailToast
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/function/Function; getTextureAtlas
	a (Lnet/minecraft/world/entity/Entity;)V setCameraEntity
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/TileEntity;)V addCustomNbtData
	a (Z)V setWindowActive
	a (ZLeqv$b;)Ljava/util/concurrent/CompletableFuture; reloadResourcePacks
	a (ZLnet/minecraft/util/profiling/GameProfilerTick;)Lnet/minecraft/util/profiling/GameProfilerFiller; constructProfiler
	aA ()Z isWindowActive
	aB ()Leqr; getHotbarManager
	aC ()Lgbl; getModelManager
	aD ()Lgad; getPaintingTextures
	aE ()Lgac; getMobEffectTextures
	aF ()Lesg; getGuiSprites
	aG ()Lnet/minecraft/util/profiling/GameProfilerFiller; getProfiler
	aH ()Lald; getProgressListener
	aI ()Lgag; getSplashManager
	aJ ()Leye; getOverlay
	aK ()Lfcq; getPlayerSocialManager
	aL ()Z renderOnThread
	aM ()Lekt; getWindow
	aN ()Lesy; getDebugOverlay
	aO ()Lfok; renderBuffers
	aP ()Lfhy; getEntityModels
	aQ ()Z isTextFilteringEnabled
	aR ()V prepareForMultiplayer
	aS ()Lerd; getRealms32BitWarningStatus
	aT ()Lnet/minecraft/util/SignatureValidator; getProfileKeySignatureValidator
	aU ()Leqs; getLastInputType
	aV ()Leqn; getNarrator
	aW ()Lfjk; getChatListener
	aX ()Lfjz; getReportingContext
	aY ()Lenv; realmsDataFetcher
	aZ ()Lfno; quickPlayLog
	aa ()Lnet/minecraft/server/packs/repository/ResourcePackRepository; getResourcePackRepository
	ab ()Lnet/minecraft/server/packs/ResourcePackVanilla; getVanillaPackResources
	ac ()Lfzx; getDownloadedPackSource
	ad ()Ljava/nio/file/Path; getResourcePackDirectory
	ae ()Lgam; getLanguageManager
	af ()Z is64Bit
	ag ()Z isPaused
	ah ()Lfny; getGpuWarnlistManager
	ai ()Lgdq; getSoundManager
	aj ()Lnet/minecraft/sounds/Music; getSituationalMusic
	ak ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
	al ()Lgaf; getSkinManager
	am ()Lnet/minecraft/world/entity/Entity; getCameraEntity
	an ()Lfoy; getBlockRenderer
	ao ()Lftf; getEntityRenderDispatcher
	ap ()Lfqd; getBlockEntityRenderDispatcher
	aq ()Lfuf; getItemRenderer
	ar ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
	as ()F getFrameTime
	au ()Ljava/lang/Thread; getRunningThread
	av ()F getDeltaFrameTime
	aw ()Lerw; getBlockColors
	ax ()Z showOnlyReducedInfo
	ay ()Leuy; getToasts
	az ()Lget; getTutorial
	b ()V cursorEntered
	b (I)V updateMaxMipLevel
	b (Leqv$b;)V onGameLoadFinished
	b (Leyk;)V disconnect
	b (Lfix;)V updateLevelInEngines
	b (Ljava/lang/Object;)Z countryEqualsISO3
	b (Ljava/util/UUID;)Z isLocalPlayer
	b (Lnet/minecraft/CrashReport;)V delayCrashRaw
	b (Lnet/minecraft/world/entity/Entity;)Z shouldEntityAppearGlowing
	b (Z)V selectMainFont
	b (ZLnet/minecraft/util/profiling/GameProfilerTick;)V finishProfilers
	ba ()Leqk; commandHistory
	bb ()Lnet/minecraft/world/level/validation/DirectoryValidator; directoryValidator
	bc ()Ljava/lang/String; createTitle
	bd ()V abortResourcePackRecovery
	be ()V createSearchTrees
	bf ()Z checkIs64Bit
	bg ()V selfTest
	bh ()I getFramerateLimit
	bi ()V debugClientMetricsStop
	bj ()V debugClientMetricsCancel
	bs ()Z startAttack
	bt ()V startUseItem
	bu ()Z isMultiplayerServer
	bv ()V handleKeybinds
	bw ()V pickBlock
	c ()Z isGameLoadFinished
	c (Leqv$b;)Ljava/lang/Runnable; buildInitialScreens
	c (Leyk;)V clearClientLevel
	c (Lnet/minecraft/CrashReport;)V crash
	c (Z)V pauseGame
	d ()V updateTitle
	d (Leyk;)V forceSetScreen
	d (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; fillReport
	d (Z)V runTick
	e ()Lnet/minecraft/util/ModCheck; checkModStatus
	e (Leyk;)V updateScreenAndTick
	e (Ljava/lang/Runnable;)Z shouldRun
	e (Z)V continueAttack
	f ()V run
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	g ()Lekb; getMainRenderTarget
	h ()Ljava/lang/String; getLaunchedVersion
	i ()Ljava/lang/String; getVersionType
	j ()Z isEnforceUnicode
	k ()Ljava/util/concurrent/CompletableFuture; reloadResourcePacks
	l ()Lnet/minecraft/world/level/storage/Convertable; getLevelSource
	m ()V destroy
	n ()I getFps
	o ()J getFrameTimeNs
	p ()V emergencySave
	q ()V stop
	r ()Z isRunning
	s ()Lgdl; getMusicManager
	t ()V tick
	u ()Lgdu; getTelemetryManager
	v ()D getGpuUtilization
	w ()Lfjg; getProfileKeyPairManager
	y ()Lfdi; createWorldOpenFlows
	z ()V disconnect
eqv$a net/minecraft/client/Minecraft$ChatStatus
	a ENABLED
	b DISABLED_BY_OPTIONS
	c DISABLED_BY_LAUNCHER
	d DISABLED_BY_PROFILE
	e INFO_DISABLED_BY_PROFILE
	f message
	g $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getMessage
	a (Z)Z isChatAllowed
	b ()[Leqv$a; $values
eqv$b net/minecraft/client/Minecraft$GameLoadCookie
	a realmsClient
	b quickPlayData
	a ()Lemf; realmsClient
	b ()Lfdw$c; quickPlayData
eqw net/minecraft/client/MouseHandler
	a minecraft
	b isLeftPressed
	c isMiddlePressed
	d isRightPressed
	e xpos
	f ypos
	g fakeRightMouse
	h activeButton
	i ignoreFirstMove
	j clickDepth
	k mousePressedTime
	l smoothTurnX
	m smoothTurnY
	n accumulatedDX
	o accumulatedDY
	p accumulatedScrollX
	q accumulatedScrollY
	r lastMouseEventTime
	s mouseGrabbed
	a ()V turnPlayer
	a (J)V setup
	a (JDD)V onScroll
	a (JIII)V onPress
	a (JLjava/util/List;)V onDrop
	b ()Z isLeftPressed
	b (JDD)V onMove
	c ()Z isMiddlePressed
	d ()Z isRightPressed
	e ()D xpos
	f ()D ypos
	g ()V setIgnoreFirstMove
	h ()Z isMouseGrabbed
	i ()V grabMouse
	j ()V releaseMouse
	k ()V cursorEntered
eqx net/minecraft/client/NarratorStatus
	a OFF
	b ALL
	c CHAT
	d SYSTEM
	e BY_ID
	f id
	g name
	h $VALUES
	a ()I getId
	a (I)Leqx; byId
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	c ()Z shouldNarrateChat
	d ()Z shouldNarrateSystem
	e ()[Leqx; $values
eqy net/minecraft/client/OptionInstance
	a BOOLEAN_VALUES
	b BOOLEAN_TO_STRING
	c LOGGER
	d tooltip
	e toString
	f values
	g codec
	h initialValue
	i onValueUpdate
	j caption
	k value
	a ()Leqy$l; noTooltip
	a (Leqz;III)Leso; createButton
	a (Leqz;IIILjava/util/function/Consumer;)Leso; createButton
	a (Ljava/lang/Object;)V set
	a (Ljava/lang/String;Leqy$l;Leqy$b;ZLjava/util/function/Consumer;)Leqy; createBoolean
	a (Ljava/lang/String;Leqy$l;Z)Leqy; createBoolean
	a (Ljava/lang/String;Leqy$l;ZLjava/util/function/Consumer;)Leqy; createBoolean
	a (Ljava/lang/String;Z)Leqy; createBoolean
	a (Ljava/lang/String;ZLjava/util/function/Consumer;)Leqy; createBoolean
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Leqy$l; cachedConstantTooltip
	b ()Leqy$b; forOptionEnum
	c ()Ljava/lang/Object; get
	d ()Lcom/mojang/serialization/Codec; codec
	e ()Leqy$n; values
eqy$a net/minecraft/client/OptionInstance$AltEnum
	a values
	b altValues
	c altCondition
	d valueSetter
	e codec
	a ()Lesx$c; valueListSupplier
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	b ()Ljava/util/List; values
	c ()Ljava/util/List; altValues
	d ()Ljava/util/function/BooleanSupplier; altCondition
	e ()Leqy$d$a; valueSetter
	f ()Lcom/mojang/serialization/Codec; codec
eqy$b net/minecraft/client/OptionInstance$CaptionBasedToString
eqy$c net/minecraft/client/OptionInstance$ClampingLazyMaxIntRange
	a minInclusive
	b maxSupplier
	c encodableMaxInclusive
	a ()Lesx$c; valueListSupplier
	a (Ljava/lang/Integer;)Ljava/util/Optional; validateValue
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	b ()I maxInclusive
	c ()Z createCycleButton
	d ()I minInclusive
	f ()Lcom/mojang/serialization/Codec; codec
	g ()Ljava/util/function/IntSupplier; maxSupplier
	h ()I encodableMaxInclusive
eqy$d net/minecraft/client/OptionInstance$CycleableValueSet
	a ()Lesx$c; valueListSupplier
	a (Leqy$l;Leqz;IIILjava/util/function/Consumer;)Ljava/util/function/Function; createButton
	e ()Leqy$d$a; valueSetter
eqy$d$a net/minecraft/client/OptionInstance$CycleableValueSet$ValueSetter
eqy$e net/minecraft/client/OptionInstance$Enum
	a values
	b codec
	a ()Lesx$c; valueListSupplier
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	b ()Ljava/util/List; values
	f ()Lcom/mojang/serialization/Codec; codec
eqy$f net/minecraft/client/OptionInstance$IntRange
	a minInclusive
	b maxInclusive
	a (Ljava/lang/Integer;)Ljava/util/Optional; validateValue
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	b ()I maxInclusive
	d ()I minInclusive
	f ()Lcom/mojang/serialization/Codec; codec
eqy$g net/minecraft/client/OptionInstance$IntRangeBase
	a (D)Ljava/lang/Integer; fromSliderValue
	a (Ljava/util/function/IntFunction;Ljava/util/function/ToIntFunction;)Leqy$k; xmap
	b ()I maxInclusive
	b (D)Ljava/lang/Object; fromSliderValue
	b (Ljava/lang/Integer;)D toSliderValue
	b (Ljava/lang/Object;)D toSliderValue
	d ()I minInclusive
eqy$h net/minecraft/client/OptionInstance$LazyEnum
	a values
	b validateValue
	c codec
	a ()Lesx$c; valueListSupplier
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	b ()Ljava/util/function/Supplier; values
	c ()Ljava/util/function/Function; validateValue
	f ()Lcom/mojang/serialization/Codec; codec
eqy$i net/minecraft/client/OptionInstance$OptionInstanceSliderButton
	d instance
	e values
	l tooltipSupplier
	m onValueChanged
	a ()V applyValue
	b ()V updateMessage
eqy$j net/minecraft/client/OptionInstance$SliderableOrCyclableValueSet
	a (Leqy$l;Leqz;IIILjava/util/function/Consumer;)Ljava/util/function/Function; createButton
	c ()Z createCycleButton
eqy$k net/minecraft/client/OptionInstance$SliderableValueSet
	a (Leqy$l;Leqz;IIILjava/util/function/Consumer;)Ljava/util/function/Function; createButton
	b (D)Ljava/lang/Object; fromSliderValue
	b (Ljava/lang/Object;)D toSliderValue
eqy$l net/minecraft/client/OptionInstance$TooltipSupplier
eqy$m net/minecraft/client/OptionInstance$UnitDouble
	a INSTANCE
	b $VALUES
	a ()[Leqy$m; $values
	a (D)Ljava/lang/Double; fromSliderValue
	a (Ljava/lang/Double;)Ljava/util/Optional; validateValue
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	a (Ljava/util/function/DoubleFunction;Ljava/util/function/ToDoubleFunction;)Leqy$k; xmap
	b (D)Ljava/lang/Object; fromSliderValue
	b (Ljava/lang/Double;)D toSliderValue
	b (Ljava/lang/Object;)D toSliderValue
	f ()Lcom/mojang/serialization/Codec; codec
eqy$n net/minecraft/client/OptionInstance$ValueSet
	a (Leqy$l;Leqz;IIILjava/util/function/Consumer;)Ljava/util/function/Function; createButton
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	f ()Lcom/mojang/serialization/Codec; codec
eqz net/minecraft/client/Options
	A keyRight
	B keyJump
	C keyShift
	D keySprint
	E keyInventory
	F keySwapOffhand
	G keyDrop
	H keyUse
	I keyAttack
	J keyPickItem
	K keyChat
	L keyPlayerList
	M keyCommand
	N keySocialInteractions
	O keyScreenshot
	P keyTogglePerspective
	Q keySmoothCamera
	R keyFullscreen
	S keySpectatorOutlines
	T keyAdvancements
	U keyHotbarSlots
	V keySaveHotbarActivator
	W keyLoadHotbarActivator
	X keyMappings
	Y minecraft
	Z hideGui
	a RENDER_DISTANCE_TINY
	aA ambientOcclusion
	aB PRIORITIZE_CHUNK_TOOLTIP_NONE
	aC PRIORITIZE_CHUNK_TOOLTIP_PLAYER_AFFECTED
	aD PRIORITIZE_CHUNK_TOOLTIP_NEARBY
	aE prioritizeChunkUpdates
	aF chatVisibility
	aG chatOpacity
	aH chatLineSpacing
	aI textBackgroundOpacity
	aJ panoramaSpeed
	aK ACCESSIBILITY_TOOLTIP_CONTRAST_MODE
	aL highContrast
	aM narratorHotkey
	aN modelParts
	aO mainHand
	aP chatScale
	aQ chatWidth
	aR chatHeightUnfocused
	aS chatHeightFocused
	aT chatDelay
	aU ACCESSIBILITY_TOOLTIP_NOTIFICATION_DISPLAY_TIME
	aV notificationDisplayTime
	aW mipmapLevels
	aX attackIndicator
	aY biomeBlendRadius
	aZ mouseWheelSensitivity
	aa lastMpIp
	ab smoothCamera
	ac AUTO_GUI_SCALE
	ad languageCode
	ae onboardAccessibility
	af syncWrites
	ag LOGGER
	ah GSON
	ai LIST_OF_STRINGS_TYPE
	aj OPTION_SPLITTER
	ak DEFAULT_VOLUME
	al ACCESSIBILITY_TOOLTIP_DARK_MOJANG_BACKGROUND
	am darkMojangStudiosBackground
	an ACCESSIBILITY_TOOLTIP_HIDE_LIGHTNING_FLASHES
	ao hideLightningFlash
	ap sensitivity
	aq renderDistance
	ar simulationDistance
	as serverRenderDistance
	at entityDistanceScaling
	au framerateLimit
	av cloudStatus
	aw GRAPHICS_TOOLTIP_FAST
	ax GRAPHICS_TOOLTIP_FABULOUS
	ay GRAPHICS_TOOLTIP_FANCY
	az graphicsMode
	b RENDER_DISTANCE_SHORT
	bA MOVEMENT_HOLD
	bB toggleCrouch
	bC toggleSprint
	bD CHAT_TOOLTIP_HIDE_MATCHED_NAMES
	bE hideMatchedNames
	bF showAutosaveIndicator
	bG CHAT_TOOLTIP_ONLY_SHOW_SECURE
	bH onlyShowSecureChat
	bI optionsFile
	bJ cameraType
	bK fov
	bL TELEMETRY_TOOLTIP
	bM telemetryOptInExtra
	bN ACCESSIBILITY_TOOLTIP_SCREEN_EFFECT
	bO screenEffectScale
	bP ACCESSIBILITY_TOOLTIP_FOV_EFFECT
	bQ fovEffectScale
	bR ACCESSIBILITY_TOOLTIP_DARKNESS_EFFECT
	bS darknessEffectScale
	bT ACCESSIBILITY_TOOLTIP_GLINT_SPEED
	bU glintSpeed
	bV ACCESSIBILITY_TOOLTIP_GLINT_STRENGTH
	bW glintStrength
	bX ACCESSIBILITY_TOOLTIP_DAMAGE_TILT_STRENGTH
	bY damageTiltStrength
	bZ gamma
	ba rawMouseInput
	bb autoJump
	bc operatorItemsTab
	bd autoSuggestions
	be chatColors
	bf chatLinks
	bg chatLinksPrompt
	bh enableVsync
	bi entityShadows
	bj forceUnicodeFont
	bk invertYMouse
	bl discreteMouseScroll
	bm realmsNotifications
	bn ALLOW_SERVER_LISTING_TOOLTIP
	bo allowServerListing
	bp reducedDebugInfo
	bq soundSourceVolumes
	br showSubtitles
	bs DIRECTIONAL_AUDIO_TOOLTIP_ON
	bt DIRECTIONAL_AUDIO_TOOLTIP_OFF
	bu directionalAudio
	bv backgroundForChatOnly
	bw touchscreen
	bx fullscreen
	by bobView
	bz MOVEMENT_TOGGLE
	c RENDER_DISTANCE_NORMAL
	ca MAX_GUI_SCALE_INCLUSIVE
	cb guiScale
	cc particles
	cd narrator
	ce soundDevice
	d RENDER_DISTANCE_FAR
	e RENDER_DISTANCE_REALLY_FAR
	f RENDER_DISTANCE_EXTREME
	g DEFAULT_SOUND_DEVICE
	h UNLIMITED_FRAMERATE_CUTOFF
	i resourcePacks
	j incompatibleResourcePacks
	k fullscreenVideoModeString
	l hideServerAddress
	m advancedItemTooltips
	n pauseOnLostFocus
	o overrideWidth
	p overrideHeight
	q useNativeTransport
	r tutorialStep
	s joinedFirstServer
	t hideBundleTutorial
	u glDebugVerbosity
	v skipMultiplayerWarning
	w skipRealms32bitWarning
	x keyUp
	y keyLeft
	z keyDown
	A ()Leqy; attackIndicator
	B ()Leqy; biomeBlendRadius
	C ()Leqy; mouseWheelSensitivity
	D ()Leqy; rawMouseInput
	E ()Leqy; autoJump
	F ()Leqy; operatorItemsTab
	G ()Leqy; autoSuggestions
	H ()Leqy; chatColors
	I ()Leqy; chatLinks
	J ()Leqy; chatLinksPrompt
	K ()Leqy; enableVsync
	L ()Leqy; entityShadows
	M ()Leqy; forceUnicodeFont
	N ()Leqy; invertYMouse
	O ()Leqy; discreteMouseScroll
	P ()Leqy; realmsNotifications
	Q ()Leqy; allowServerListing
	R ()Leqy; reducedDebugInfo
	S ()Leqy; showSubtitles
	T ()Leqy; directionalAudio
	U ()Leqy; backgroundForChatOnly
	V ()Leqy; touchscreen
	W ()Leqy; fullscreen
	X ()Leqy; bobView
	Y ()Leqy; toggleCrouch
	Z ()Leqy; toggleSprint
	a ()Leqy; darkMojangStudiosBackground
	a (D)I unlogMouse
	a (F)F getBackgroundOpacity
	a (I)I getBackgroundColor
	a (Leqh;)V setCameraType
	a (Leqt;Lekk$a;)V setKey
	a (Leqz$a;)V processOptions
	a (Ljava/lang/String;)Z isTrue
	a (Ljava/lang/String;Lnet/minecraft/sounds/SoundCategory;)Leqy; createSoundSliderOptionInstance
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; dataFix
	a (Lnet/minecraft/network/chat/IChatBaseComponent;D)Lnet/minecraft/network/chat/IChatBaseComponent; percentValueLabel
	a (Lnet/minecraft/network/chat/IChatBaseComponent;I)Lnet/minecraft/network/chat/IChatBaseComponent; genericValueLabel
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; genericValueLabel
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;)V updateResourcePacks
	a (Lnet/minecraft/sounds/SoundCategory;)F getSoundSourceVolume
	a (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z isModelPartEnabled
	a (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V toggleModelPart
	aa ()Leqy; hideMatchedNames
	ab ()Leqy; showAutosaveIndicator
	ac ()Leqy; onlyShowSecureChat
	ad ()Leqy; fov
	ae ()Leqy; telemetryOptInExtra
	af ()Leqy; screenEffectScale
	ag ()Leqy; fovEffectScale
	ah ()Leqy; darknessEffectScale
	ai ()Leqy; glintSpeed
	aj ()Leqy; glintStrength
	ak ()Leqy; damageTiltStrength
	al ()Leqy; gamma
	am ()Leqy; guiScale
	an ()Leqy; particles
	ao ()Leqy; narrator
	ap ()Leqy; soundDevice
	aq ()V load
	ar ()V save
	as ()Lnet/minecraft/server/level/ClientInformation; buildPlayerInformation
	at ()V broadcastOptions
	au ()Leqj; getCloudsType
	av ()Z useNativeTransport
	aw ()Leqh; getCameraType
	ax ()Ljava/io/File; getFile
	ay ()Ljava/lang/String; dumpOptionsForReport
	az ()I getEffectiveRenderDistance
	b ()Leqy; hideLightningFlash
	b (F)I getBackgroundColor
	b (I)V setServerRenderDistance
	b (Ljava/lang/String;)Z isFalse
	b (Lnet/minecraft/network/chat/IChatBaseComponent;I)Lnet/minecraft/network/chat/IChatBaseComponent; pixelValueLabel
	b (Lnet/minecraft/server/packs/repository/ResourcePackRepository;)V loadSelectedResourcePacks
	b (Lnet/minecraft/sounds/SoundCategory;)Leqy; getSoundSourceOptionInstance
	b (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V setModelPart
	c ()Leqy; sensitivity
	c (I)D logMouse
	c (Ljava/lang/String;)Ljava/util/List; readListOfStrings
	d ()Leqy; renderDistance
	e ()Leqy; simulationDistance
	f ()Leqy; entityDistanceScaling
	g ()Leqy; framerateLimit
	h ()Leqy; cloudStatus
	i ()Leqy; graphicsMode
	j ()Leqy; ambientOcclusion
	k ()Leqy; prioritizeChunkUpdates
	l ()Leqy; chatVisibility
	m ()Leqy; chatOpacity
	n ()Leqy; chatLineSpacing
	o ()Leqy; textBackgroundOpacity
	p ()Leqy; panoramaSpeed
	q ()Leqy; highContrast
	r ()Leqy; narratorHotkey
	s ()Leqy; mainHand
	t ()Leqy; chatScale
	u ()Leqy; chatWidth
	v ()Leqy; chatHeightUnfocused
	w ()Leqy; chatHeightFocused
	x ()Leqy; chatDelay
	y ()Leqy; notificationDisplayTime
	z ()Leqy; mipmapLevels
eqz$a net/minecraft/client/Options$FieldAccess
	a (Ljava/lang/String;F)F process
	a (Ljava/lang/String;I)I process
	a (Ljava/lang/String;Leqy;)V process
	a (Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object; process
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; process
	a (Ljava/lang/String;Z)Z process
er$a net/minecraft/commands/arguments/ResourceKeyArgument$Info
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	a (Ler$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Ler$a$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ResourceKeyArgument;)Ler$a$a; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)Ler$a$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
er$a$a net/minecraft/commands/arguments/ResourceKeyArgument$Info$Template
	b registryKey
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceKeyArgument; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
era net/minecraft/client/ParticleStatus
	a ALL
	b DECREASED
	c MINIMAL
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Lera; byId
	b ()Ljava/lang/String; getKey
	c ()[Lera; $values
erb net/minecraft/client/PeriodicNotificationManager
	a CODEC
	b LOGGER
	c notifications
	d selector
	e timer
	f notificationTask
	a ()V stopTimer
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/util/List;)J calculateInitialDelay
	a (Ljava/util/List;J)J calculateOptimalPeriod
	a (Ljava/util/Map;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/util/Map; prepare
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
erb$a net/minecraft/client/PeriodicNotificationManager$Notification
	a delay
	b period
	c title
	d message
	a ()J delay
	b ()J period
	c ()Ljava/lang/String; title
	d ()Ljava/lang/String; message
erb$b net/minecraft/client/PeriodicNotificationManager$NotificationTask
	a minecraft
	b notifications
	c period
	d elapsed
	a (Ljava/util/List;J)Lerb$b; reset
erc net/minecraft/client/PrioritizeChunkUpdates
	a NONE
	b PLAYER_AFFECTED
	c NEARBY
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Lerc; byId
	b ()Ljava/lang/String; getKey
	c ()[Lerc; $values
erd net/minecraft/client/Realms32BitWarningStatus
	a LOGGER
	b minecraft
	c subscriptionCheck
	d warningScreenShown
	a ()Ljava/lang/Boolean; checkForRealmsSubscription
	a (Leyk;)V showRealms32BitWarningIfNeeded
	b ()Z hasRealmsSubscription
ere net/minecraft/client/RecipeBookCategories
	a CRAFTING_SEARCH
	b CRAFTING_BUILDING_BLOCKS
	c CRAFTING_REDSTONE
	d CRAFTING_EQUIPMENT
	e CRAFTING_MISC
	f FURNACE_SEARCH
	g FURNACE_FOOD
	h FURNACE_BLOCKS
	i FURNACE_MISC
	j BLAST_FURNACE_SEARCH
	k BLAST_FURNACE_BLOCKS
	l BLAST_FURNACE_MISC
	m SMOKER_SEARCH
	n SMOKER_FOOD
	o STONECUTTER
	p SMITHING
	q CAMPFIRE
	r UNKNOWN
	s SMOKER_CATEGORIES
	t BLAST_FURNACE_CATEGORIES
	u FURNACE_CATEGORIES
	v CRAFTING_CATEGORIES
	w AGGREGATE_CATEGORIES
	x itemIcons
	y $VALUES
	a ()Ljava/util/List; getIconItems
	a (Lnet/minecraft/world/inventory/RecipeBookType;)Ljava/util/List; getCategories
	b ()[Lere; $values
erf net/minecraft/client/ResourceLoadStateTracker
	a LOGGER
	b reloadState
	c reloadCount
	a ()V finishReload
	a (Lerf$b;Ljava/util/List;)V startReload
	a (Ljava/lang/Throwable;)V startRecovery
	a (Lnet/minecraft/CrashReport;)V fillCrashReport
erf$a net/minecraft/client/ResourceLoadStateTracker$RecoveryInfo
	a error
	a (Lnet/minecraft/CrashReportSystemDetails;)V fillCrashInfo
erf$b net/minecraft/client/ResourceLoadStateTracker$ReloadReason
	a INITIAL
	b MANUAL
	c UNKNOWN
	d name
	e $VALUES
	a ()[Lerf$b; $values
erf$c net/minecraft/client/ResourceLoadStateTracker$ReloadState
	a reloadReason
	b packs
	c recoveryReloadInfo
	d finished
	a (Lnet/minecraft/CrashReportSystemDetails;)V fillCrashInfo
erg net/minecraft/client/Screenshot
	a SCREENSHOT_DIR
	b LOGGER
	c rowHeight
	d outputStream
	e bytes
	f width
	g height
	h file
	a ()V saveRow
	a (Lekb;)Lekq; takeScreenshot
	a (Ljava/io/File;)Ljava/io/File; getFile
	a (Ljava/io/File;Lekb;Ljava/util/function/Consumer;)V grab
	a (Ljava/io/File;Ljava/lang/String;Lekb;Ljava/util/function/Consumer;)V grab
	a (Ljava/nio/ByteBuffer;IIII)V addRegion
	b ()Ljava/io/File; close
	b (Ljava/io/File;Ljava/lang/String;Lekb;Ljava/util/function/Consumer;)V _grab
erh net/minecraft/client/StringSplitter
	a widthProvider
	a (Ljava/lang/String;)F stringWidth
	a (Ljava/lang/String;IIZ)I getWordPosition
	a (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;)I plainIndexAtWidth
	a (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;ZLerh$d;)V splitLines
	a (Lnet/minecraft/network/chat/IChatFormatted;)F stringWidth
	a (Lnet/minecraft/network/chat/IChatFormatted;I)Lnet/minecraft/network/chat/ChatModifier; componentStyleAtWidth
	a (Lnet/minecraft/network/chat/IChatFormatted;ILnet/minecraft/network/chat/ChatModifier;)Lnet/minecraft/network/chat/IChatFormatted; headByWidth
	a (Lnet/minecraft/network/chat/IChatFormatted;ILnet/minecraft/network/chat/ChatModifier;Ljava/util/function/BiConsumer;)V splitLines
	a (Lnet/minecraft/network/chat/IChatFormatted;ILnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/network/chat/IChatFormatted;)Ljava/util/List; splitLines
	a (Lnet/minecraft/util/FormattedString;)F stringWidth
	a (Lnet/minecraft/util/FormattedString;I)Lnet/minecraft/network/chat/ChatModifier; componentStyleAtWidth
	b (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;)Ljava/lang/String; plainHeadByWidth
	b (Lnet/minecraft/network/chat/IChatFormatted;ILnet/minecraft/network/chat/ChatModifier;)Ljava/util/List; splitLines
	c (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;)Ljava/lang/String; plainTailByWidth
	d (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;)I formattedIndexByWidth
	e (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;)Ljava/lang/String; formattedHeadByWidth
	f (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;)I findLineBreak
	g (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;)Ljava/util/List; splitLines
erh$a net/minecraft/client/StringSplitter$FlatComponents
	a parts
	b flatParts
	a ()Lnet/minecraft/network/chat/IChatFormatted; getRemainder
	a (I)C charAt
	a (IILnet/minecraft/network/chat/ChatModifier;)Lnet/minecraft/network/chat/IChatFormatted; splitAt
erh$b net/minecraft/client/StringSplitter$LineBreakFinder
	b maxWidth
	c lineBreak
	d lineBreakStyle
	e hadNonZeroWidthChar
	f width
	g lastSpace
	h lastSpaceStyle
	i nextChar
	j offset
	a ()I getSplitPosition
	a (I)V addToOffset
	a (ILnet/minecraft/network/chat/ChatModifier;)Z finishIteration
	b ()Lnet/minecraft/network/chat/ChatModifier; getSplitStyle
	c ()Z lineBreakFound
erh$c net/minecraft/client/StringSplitter$LineComponent
	c contents
	d style
	a (Ltp$a;)Ljava/util/Optional; visit
	a (Ltp$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
erh$d net/minecraft/client/StringSplitter$LinePosConsumer
erh$e net/minecraft/client/StringSplitter$WidthLimitedCharSink
	b maxWidth
	c position
	a ()I getPosition
	b ()V resetPosition
erh$f net/minecraft/client/StringSplitter$WidthProvider
eri net/minecraft/client/Timer
	a partialTick
	b tickDelta
	c lastMs
	d msPerTick
	a (J)I advanceTime
erj net/minecraft/client/ToggleKeyMapping
	h needsToggle
	a (Z)V setDown
	n ()V reset
erk net/minecraft/client/User
	a name
	b uuid
	c accessToken
	d xuid
	e clientId
	f type
	a ()Ljava/lang/String; getSessionId
	b ()Ljava/util/UUID; getProfileId
	c ()Ljava/lang/String; getName
	d ()Ljava/lang/String; getAccessToken
	e ()Ljava/util/Optional; getClientId
	f ()Ljava/util/Optional; getXuid
	g ()Lerk$a; getType
erk$a net/minecraft/client/User$Type
	a LEGACY
	b MOJANG
	c MSA
	d BY_NAME
	e name
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lerk$a; byName
	b ()[Lerk$a; $values
erl net/minecraft/client/animation/AnimationChannel
	a target
	b keyframes
	a ()Lerl$c; target
	b ()[Lern; keyframes
erl$a net/minecraft/client/animation/AnimationChannel$Interpolation
erl$b net/minecraft/client/animation/AnimationChannel$Interpolations
	a LINEAR
	b CATMULLROM
erl$c net/minecraft/client/animation/AnimationChannel$Target
erl$d net/minecraft/client/animation/AnimationChannel$Targets
	a POSITION
	b ROTATION
	c SCALE
erm net/minecraft/client/animation/AnimationDefinition
	a lengthInSeconds
	b looping
	c boneAnimations
	a ()F lengthInSeconds
	b ()Z looping
	c ()Ljava/util/Map; boneAnimations
erm$a net/minecraft/client/animation/AnimationDefinition$Builder
	a length
	b animationByBone
	c looping
	a ()Lerm$a; looping
	a (F)Lerm$a; withLength
	a (Ljava/lang/String;Lerl;)Lerm$a; addAnimation
	b ()Lerm; build
ern net/minecraft/client/animation/Keyframe
	a timestamp
	b target
	c interpolation
	a ()F timestamp
	b ()Lorg/joml/Vector3f; target
	c ()Lerl$a; interpolation
ero net/minecraft/client/animation/KeyframeAnimations
	a (DDD)Lorg/joml/Vector3f; scaleVec
	a (FFF)Lorg/joml/Vector3f; posVec
	a (Lerm;J)F getElapsedSeconds
	a (Lffm;Lerm;JFLorg/joml/Vector3f;)V animate
	b (FFF)Lorg/joml/Vector3f; degreeVec
erp net/minecraft/client/animation/definitions/CamelAnimation
	a CAMEL_WALK
	b CAMEL_SIT
	c CAMEL_SIT_POSE
	d CAMEL_STANDUP
	e CAMEL_DASH
	f CAMEL_IDLE
erq net/minecraft/client/animation/definitions/FrogAnimation
	a FROG_CROAK
	b FROG_WALK
	c FROG_JUMP
	d FROG_TONGUE
	e FROG_SWIM
	f FROG_IDLE_WATER
err net/minecraft/client/animation/definitions/SnifferAnimation
	a BABY_TRANSFORM
	b SNIFFER_SNIFFSNIFF
	c SNIFFER_LONGSNIFF
	d SNIFFER_WALK
	e SNIFFER_SNIFF_SEARCH
	f SNIFFER_DIG
	g SNIFFER_STAND_UP
	h SNIFFER_BABY_FALL
	i SNIFFER_HAPPY
ers net/minecraft/client/animation/definitions/WardenAnimation
	a WARDEN_EMERGE
	b WARDEN_DIG
	c WARDEN_ROAR
	d WARDEN_SNIFF
	e WARDEN_ATTACK
	f WARDEN_SONIC_BOOM
erv net/minecraft/client/color/block/BlockColor
erw net/minecraft/client/color/block/BlockColors
	a DEFAULT
	b blockColors
	c coloringStates
	a ()Lerw; createDefault
	a (Lerv;[Lnet/minecraft/world/level/block/Block;)V register
	a (Ljava/util/Set;[Lnet/minecraft/world/level/block/Block;)V addColoringStates
	a (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; getColoringProperties
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;I)I getColor
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getColor
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;[Lnet/minecraft/world/level/block/Block;)V addColoringState
erx net/minecraft/client/color/block/BlockTintCache
	a MAX_CACHE_ENTRIES
	b latestChunkOnThread
	c cache
	d lock
	e source
	a ()V invalidateAll
	a (II)V invalidateForChunk
	a (Lnet/minecraft/core/BlockPosition;)I getColor
	b (II)Lerx$a; findOrCreateChunkCache
erx$a net/minecraft/client/color/block/BlockTintCache$CacheData
	a cache
	b lock
	c BLOCKS_PER_LAYER
	d invalidated
	a ()Z isInvalidated
	a (I)[I getLayer
	b ()V invalidate
	c ()[I allocateLayer
erx$b net/minecraft/client/color/block/BlockTintCache$LatestCacheInfo
	a x
	b z
	c cache
erz net/minecraft/client/color/item/ItemColor
esa net/minecraft/client/color/item/ItemColors
	a DEFAULT
	b itemColors
	a (Lerw;)Lesa; createDefault
	a (Lerz;[Lnet/minecraft/world/level/IMaterial;)V register
	a (Lnet/minecraft/world/item/ItemStack;I)I getColor
esc net/minecraft/client/gui/ComponentPath
	a ()Leuk; component
	a (Leuj;Lesc;)Lesc; path
	a (Leuk;)Lesc; leaf
	a (Leuk;[Leuj;)Lesc; path
	a (Z)V applyFocus
esc$a net/minecraft/client/gui/ComponentPath$Leaf
	a component
	a ()Leuk; component
	a (Z)V applyFocus
esc$b net/minecraft/client/gui/ComponentPath$Path
	a component
	b childPath
	a ()Leuk; component
	a (Z)V applyFocus
	b ()Leuj; component
	c ()Lesc; childPath
esd net/minecraft/client/gui/Font
	a ALPHA_CUTOFF
	b lineHeight
	c random
	d EFFECT_DEPTH
	e SHADOW_OFFSET
	f fonts
	g filterFishyGlyphs
	h splitter
	a ()Z isBidirectional
	a (I)I adjustColor
	a (Levi;ZZFFFLorg/joml/Matrix4f;Lelt;FFFFI)V renderChar
	a (Ljava/lang/String;)Ljava/lang/String; bidirectionalShaping
	a (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lfoe;Lesd$a;II)I drawInBatch
	a (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lfoe;Lesd$a;IIZ)I drawInBatch
	a (Ljava/lang/String;I)Ljava/lang/String; plainSubstrByWidth
	a (Ljava/lang/String;IZ)Ljava/lang/String; plainSubstrByWidth
	a (Lnet/minecraft/network/chat/IChatBaseComponent;FFIZLorg/joml/Matrix4f;Lfoe;Lesd$a;II)I drawInBatch
	a (Lnet/minecraft/network/chat/IChatFormatted;)I width
	a (Lnet/minecraft/network/chat/IChatFormatted;I)Lnet/minecraft/network/chat/IChatFormatted; substrByWidth
	a (Lnet/minecraft/resources/MinecraftKey;)Leve; getFontSet
	a (Lnet/minecraft/util/FormattedString;)I width
	a (Lnet/minecraft/util/FormattedString;FFIILorg/joml/Matrix4f;Lfoe;I)V drawInBatch8xOutline
	a (Lnet/minecraft/util/FormattedString;FFIZLorg/joml/Matrix4f;Lfoe;Lesd$a;II)I drawInBatch
	b ()Lerh; getSplitter
	b (Ljava/lang/String;)I width
	b (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lfoe;Lesd$a;II)F renderText
	b (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lfoe;Lesd$a;IIZ)I drawInternal
	b (Ljava/lang/String;I)I wordWrapHeight
	b (Lnet/minecraft/network/chat/IChatFormatted;I)I wordWrapHeight
	b (Lnet/minecraft/util/FormattedString;FFIZLorg/joml/Matrix4f;Lfoe;Lesd$a;II)I drawInternal
	c (Lnet/minecraft/network/chat/IChatFormatted;I)Ljava/util/List; split
	c (Lnet/minecraft/util/FormattedString;FFIZLorg/joml/Matrix4f;Lfoe;Lesd$a;II)F renderText
esd$a net/minecraft/client/gui/Font$DisplayMode
	a NORMAL
	b SEE_THROUGH
	c POLYGON_OFFSET
	d $VALUES
	a ()[Lesd$a; $values
esd$b net/minecraft/client/gui/Font$StringRenderOutput
	a bufferSource
	c dropShadow
	d dimFactor
	e r
	f g
	g b
	h a
	i pose
	j mode
	k packedLightCoords
	l x
	m y
	n effects
	a (IF)F finish
	a (Levi$a;)V addEffect
ese net/minecraft/client/gui/Gui
	A FOOD_FULL_SPRITE
	B AIR_SPRITE
	C AIR_BURSTING_SPRITE
	D HEART_VEHICLE_CONTAINER_SPRITE
	E HEART_VEHICLE_FULL_SPRITE
	F HEART_VEHICLE_HALF_SPRITE
	G VIGNETTE_LOCATION
	H PUMPKIN_BLUR_LOCATION
	I SPYGLASS_SCOPE_LOCATION
	J POWDER_SNOW_OUTLINE_LOCATION
	K DEMO_EXPIRED_TEXT
	L SAVING_TEXT
	M COLOR_WHITE
	N MIN_CROSSHAIR_ATTACK_SPEED
	O NUM_HEARTS_PER_ROW
	P LINE_HEIGHT
	Q SPACER
	R PORTAL_OVERLAY_ALPHA_MIN
	S HEART_SIZE
	T HEART_SEPARATION
	U AUTOSAVE_FADE_SPEED_FACTOR
	V random
	W minecraft
	X itemRenderer
	Y chat
	Z tickCount
	a vignetteBrightness
	aa overlayMessageString
	ab overlayMessageTime
	ac animateOverlayMessageColor
	ad chatDisabledByPlayerShown
	ae toolHighlightTimer
	af lastToolHighlight
	ag debugOverlay
	ah subtitleOverlay
	ai spectatorGui
	aj tabList
	ak bossOverlay
	al titleTime
	am title
	an subtitle
	ao titleFadeInTime
	ap titleStayTime
	aq titleFadeOutTime
	ar lastHealth
	as displayHealth
	at lastHealthTime
	au healthBlinkTime
	av screenWidth
	aw screenHeight
	ax autosaveIndicatorValue
	ay lastAutosaveIndicatorValue
	az scopeScale
	b CROSSHAIR_SPRITE
	c CROSSHAIR_ATTACK_INDICATOR_FULL_SPRITE
	d CROSSHAIR_ATTACK_INDICATOR_BACKGROUND_SPRITE
	e CROSSHAIR_ATTACK_INDICATOR_PROGRESS_SPRITE
	f EFFECT_BACKGROUND_AMBIENT_SPRITE
	g EFFECT_BACKGROUND_SPRITE
	h HOTBAR_SPRITE
	i HOTBAR_SELECTION_SPRITE
	j HOTBAR_OFFHAND_LEFT_SPRITE
	k HOTBAR_OFFHAND_RIGHT_SPRITE
	l HOTBAR_ATTACK_INDICATOR_BACKGROUND_SPRITE
	m HOTBAR_ATTACK_INDICATOR_PROGRESS_SPRITE
	n JUMP_BAR_BACKGROUND_SPRITE
	o JUMP_BAR_COOLDOWN_SPRITE
	p JUMP_BAR_PROGRESS_SPRITE
	q EXPERIENCE_BAR_BACKGROUND_SPRITE
	r EXPERIENCE_BAR_PROGRESS_SPRITE
	s ARMOR_EMPTY_SPRITE
	t ARMOR_HALF_SPRITE
	u ARMOR_FULL_SPRITE
	v FOOD_EMPTY_HUNGER_SPRITE
	w FOOD_HALF_HUNGER_SPRITE
	x FOOD_FULL_HUNGER_SPRITE
	y FOOD_EMPTY_SPRITE
	z FOOD_HALF_SPRITE
	a ()V resetTitleTimes
	a (FLesf;)V renderHotbar
	a (I)I getVisibleVehicleHeartRows
	a (III)V setTimes
	a (Lesf;)V renderEffects
	a (Lesf;F)V render
	a (Lesf;I)V renderExperienceBar
	a (Lesf;IIFLnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;I)V renderSlot
	a (Lesf;Lesd;III)V drawBackdrop
	a (Lesf;Lese$a;IIZZZ)V renderHeart
	a (Lesf;Lnet/minecraft/resources/MinecraftKey;F)V renderTextureOverlay
	a (Lesf;Lnet/minecraft/world/entity/Entity;)V renderVignette
	a (Lesf;Lnet/minecraft/world/entity/player/EntityHuman;IIIIFIIIZ)V renderHearts
	a (Lesf;Lnet/minecraft/world/scores/ScoreboardObjective;)V displayScoreboardSidebar
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setNowPlaying
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V setOverlayMessage
	a (Lnet/minecraft/world/entity/Entity;)V updateVignetteBrightness
	a (Lnet/minecraft/world/entity/EntityLiving;)I getVehicleMaxHearts
	a (Lnet/minecraft/world/entity/IJumpable;Lesf;I)V renderJumpMeter
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)Z canRenderCrosshairForSpectator
	a (Z)V tick
	b ()Z isShowingChatDisabledByPlayer
	b (Lesf;)V renderSelectedItemName
	b (Lesf;F)V renderSpyglassOverlay
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setSubtitle
	b (Z)V setChatDisabledByPlayerShown
	c ()V clear
	c (Lesf;)V renderDemoOverlay
	c (Lesf;F)V renderPortalOverlay
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V setTitle
	d ()Lesr; getChat
	d (Lesf;)V renderCrosshair
	e ()I getGuiTicks
	e (Lesf;)V renderPlayerHealth
	f ()Lesd; getFont
	f (Lesf;)V renderVehicleHealth
	g ()Leun; getSpectatorGui
	g (Lesf;)V renderSavingIndicator
	h ()Letr; getTabList
	i ()V onDisconnected
	j ()Lesp; getBossOverlay
	k ()Lesy; getDebugOverlay
	l ()V clearCache
	m ()Lnet/minecraft/world/entity/player/EntityHuman; getCameraPlayer
	n ()Lnet/minecraft/world/entity/EntityLiving; getPlayerVehicleWithHealth
	o ()V tick
	p ()V tickAutosaveIndicator
ese$a net/minecraft/client/gui/Gui$HeartType
	a CONTAINER
	b NORMAL
	c POISIONED
	d WITHERED
	e ABSORBING
	f FROZEN
	g full
	h fullBlinking
	i half
	j halfBlinking
	k hardcoreFull
	l hardcoreFullBlinking
	m hardcoreHalf
	n hardcoreHalfBlinking
	o $VALUES
	a ()[Lese$a; $values
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lese$a; forPlayer
	a (ZZZ)Lnet/minecraft/resources/MinecraftKey; getSprite
esf net/minecraft/client/gui/GuiGraphics
	a MAX_GUI_Z
	b MIN_GUI_Z
	c EXTRA_SPACE_AFTER_FIRST_TOOLTIP_LINE
	d minecraft
	e pose
	f bufferSource
	g scissorStack
	h sprites
	i managed
	a ()I guiWidth
	a (FFFF)V setColor
	a (IIII)V hLine
	a (IIIII)V fill
	a (IIIIII)V fill
	a (IIIIIII)V fillGradient
	a (IIIIILfze;)V blit
	a (IIIIILfze;FFFF)V blit
	a (Lelt;IIIIIII)V fillGradient
	a (Lesd;Ljava/lang/String;III)V drawCenteredString
	a (Lesd;Ljava/lang/String;IIIZ)I drawString
	a (Lesd;Ljava/util/List;II)V renderComponentTooltip
	a (Lesd;Ljava/util/List;IILfbb;)V renderTooltipInternal
	a (Lesd;Ljava/util/List;Lfbb;II)V renderTooltip
	a (Lesd;Ljava/util/List;Ljava/util/Optional;II)V renderTooltip
	a (Lesd;Lnet/minecraft/network/chat/ChatModifier;II)V renderComponentHoverEffect
	a (Lesd;Lnet/minecraft/network/chat/IChatBaseComponent;II)V renderTooltip
	a (Lesd;Lnet/minecraft/network/chat/IChatBaseComponent;III)V drawCenteredString
	a (Lesd;Lnet/minecraft/network/chat/IChatBaseComponent;IIIZ)I drawString
	a (Lesd;Lnet/minecraft/network/chat/IChatFormatted;IIII)V drawWordWrap
	a (Lesd;Lnet/minecraft/util/FormattedString;III)V drawCenteredString
	a (Lesd;Lnet/minecraft/util/FormattedString;IIIZ)I drawString
	a (Lesd;Lnet/minecraft/world/item/ItemStack;II)V renderItemDecorations
	a (Lesd;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V renderItemDecorations
	a (Lews;)V applyScissor
	a (Lfom;IIII)V hLine
	a (Lfom;IIIII)V fill
	a (Lfom;IIIIII)V fill
	a (Lfom;IIIIIII)V fillGradient
	a (Lfze;IIIII)V blitSprite
	a (Lfze;IIIIIIIII)V blitSprite
	a (Lfze;IIIIIIIIIII)V blitTiledSprite
	a (Lfze;Lgaw$a;IIIII)V blitNineSlicedSprite
	a (Ljava/lang/Runnable;)V drawManaged
	a (Lnet/minecraft/resources/MinecraftKey;IIFFIIII)V blit
	a (Lnet/minecraft/resources/MinecraftKey;IIIFFIIII)V blit
	a (Lnet/minecraft/resources/MinecraftKey;IIII)V blitSprite
	a (Lnet/minecraft/resources/MinecraftKey;IIIIFFIIII)V blit
	a (Lnet/minecraft/resources/MinecraftKey;IIIII)V blitSprite
	a (Lnet/minecraft/resources/MinecraftKey;IIIIIFFFF)V innerBlit
	a (Lnet/minecraft/resources/MinecraftKey;IIIIIFFFFFFFF)V innerBlit
	a (Lnet/minecraft/resources/MinecraftKey;IIIIII)V blit
	a (Lnet/minecraft/resources/MinecraftKey;IIIIIIIFFII)V blit
	a (Lnet/minecraft/resources/MinecraftKey;IIIIIIII)V blitSprite
	a (Lnet/minecraft/resources/MinecraftKey;IIIIIIIII)V blitSprite
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;III)V renderItem
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;III)V renderItem
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;IIII)V renderItem
	a (Lnet/minecraft/world/item/ItemStack;II)V renderItem
	a (Lnet/minecraft/world/item/ItemStack;III)V renderItem
	a (Lnet/minecraft/world/item/ItemStack;IIII)V renderItem
	b ()I guiHeight
	b (IIII)V vLine
	b (IIIII)V renderOutline
	b (IIIIII)V fillGradient
	b (Lesd;Ljava/lang/String;III)I drawString
	b (Lesd;Ljava/util/List;II)V renderTooltip
	b (Lesd;Lnet/minecraft/network/chat/IChatBaseComponent;III)I drawString
	b (Lesd;Lnet/minecraft/util/FormattedString;III)I drawString
	b (Lesd;Lnet/minecraft/world/item/ItemStack;II)V renderTooltip
	b (Lfom;IIII)V vLine
	b (Lnet/minecraft/world/item/ItemStack;II)V renderFakeItem
	c ()Lelp; pose
	c (IIII)V enableScissor
	d ()Lfoe$a; bufferSource
	e ()V flush
	f ()V disableScissor
	g ()V flushIfUnmanaged
	h ()V flushIfManaged
esf$a net/minecraft/client/gui/GuiGraphics$ScissorStack
	a stack
	a ()Lews; pop
	a (Lews;)Lews; push
esg net/minecraft/client/gui/GuiSpriteManager
	a METADATA_SECTIONS
	a (Lfze;)Lgaw; getSpriteScaling
	a (Lnet/minecraft/resources/MinecraftKey;)Lfze; getSprite
	b (Lfze;)Lgav; getMetadata
esh net/minecraft/client/gui/MapRenderer
	a MAP_ICONS_LOCATION
	b MAP_ICONS
	c WIDTH
	d HEIGHT
	e textureManager
	f maps
	a ()V resetData
	a (ILnet/minecraft/world/level/saveddata/maps/WorldMap;)V update
	a (Lelp;Lfoe;ILnet/minecraft/world/level/saveddata/maps/WorldMap;ZI)V render
	b (ILnet/minecraft/world/level/saveddata/maps/WorldMap;)Lesh$a; getOrCreateMapInstance
esh$a net/minecraft/client/gui/MapRenderer$MapInstance
	b data
	c texture
	d renderType
	e requiresUpload
	a ()V forceUpload
	a (Lelp;Lfoe;ZI)V draw
	a (Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V replaceMapData
	b ()V updateTexture
esi net/minecraft/client/gui/components/AbstractButton
	a SPRITES
	e TEXT_MARGIN
	a (DD)V onClick
	a (III)Z keyPressed
	a (Lesf;Lesd;I)V renderString
	b (Lesf;IIF)V renderWidget
	c ()V onPress
esj net/minecraft/client/gui/components/AbstractOptionSliderButton
	a options
esk net/minecraft/client/gui/components/AbstractScrollWidget
	a BACKGROUND_SPRITES
	b SCROLLER_SPRITE
	c INNER_PADDING
	d SCROLL_BAR_WIDTH
	e scrollAmount
	l scrolling
	a ()I innerPadding
	a (D)V setScrollAmount
	a (DDDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (II)Z withinContentAreaTopBottom
	a (III)Z keyPressed
	a (Lesf;)V renderDecorations
	a (Lesf;IIII)V renderBorder
	b ()I totalInnerPadding
	b (DDI)Z mouseReleased
	b (Lesf;)V renderBackground
	b (Lesf;IIF)V renderWidget
	c ()D scrollAmount
	c (DD)Z withinContentAreaPoint
	c (Lesf;)V renderScrollBar
	c (Lesf;IIF)V renderContents
	d ()I getMaxScrollAmount
	e ()Z scrollbarVisible
	f ()I scrollbarWidth
	g ()I getInnerHeight
	h ()D scrollRate
	w ()I getScrollBarHeight
	x ()I getContentHeight
esl net/minecraft/client/gui/components/AbstractSelectionList
	a SCROLLER_SPRITE
	b SCROLLBAR_WIDTH
	c minecraft
	d itemHeight
	e width
	f height
	g y0
	h y1
	i x1
	j x0
	k centerListVertically
	l headerHeight
	m children
	n scrollAmount
	o renderHeader
	p scrolling
	q selected
	s renderBackground
	t hovered
	a ()I getMaxPosition
	a (D)V setScrollAmount
	a (DD)Lesl$a; getEntryAtPosition
	a (DDDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (I)V scroll
	a (II)V clickedHeader
	a (IIII)V updateSize
	a (Lesf;)V enableScissor
	a (Lesf;II)V renderHeader
	a (Lesf;IIF)V render
	a (Lesf;IIFIIIII)V renderItem
	a (Lesf;IIIII)V renderSelection
	a (Lesl$a;)V setSelected
	a (Leuk;)V setFocused
	a (Lewi;Lesl$a;)V narrateListElementPosition
	a (Lewq;)Lesl$a; nextEntry
	a (Lewq;Ljava/util/function/Predicate;)Lesl$a; nextEntry
	a (Lewq;Ljava/util/function/Predicate;Lesl$a;)Lesl$a; nextEntry
	a (Ljava/util/Collection;)V replaceEntries
	a (Z)V setRenderBackground
	a (ZI)V setRenderHeader
	a_ (DD)Z isMouseOver
	b ()I getRowWidth
	b (DDI)Z mouseReleased
	b (Lesf;II)V renderDecorations
	b (Lesf;IIF)V renderList
	b (Lesl$a;)I addEntry
	c ()I getScrollbarPosition
	c (DDI)V updateScrollingState
	c (Lesl$a;)V addEntryToTop
	d (I)Lesl$a; getEntry
	d (Lesl$a;)Z removeEntryFromTop
	e (I)Z isSelectedItem
	e (Lesl$a;)V centerScrollOn
	f ()Lesl$a; getSelected
	f (I)V setLeftPos
	f (Lesl$a;)V ensureVisible
	g ()Lesl$a; getFirstElement
	g (I)Z isValidMouseClick
	g (Lesl$a;)Z removeEntry
	h ()Lesl$a; getFocused
	h (I)I getRowTop
	h (Lesl$a;)V bindEntryToSelf
	i ()Ljava/util/List; children
	i (I)I getRowBottom
	j ()V clearEntries
	j (I)Lesl$a; remove
	k ()I getItemCount
	l ()D getScrollAmount
	m ()I getMaxScroll
	n ()I getScrollBottom
	o ()I getRowLeft
	p ()I getRowRight
	q ()Lewg$a; narrationPriority
	r ()Lesl$a; getHovered
	s ()Lews; getRectangle
	t ()Leuk; getFocused
esl$a net/minecraft/client/gui/components/AbstractSelectionList$Entry
	a list
	a (Lesf;IIIIIIIZF)V render
	aC_ ()Z isFocused
	a_ (DD)Z isMouseOver
	b (Lesf;IIIIIIIZF)V renderBack
	b_ (Z)V setFocused
esl$b net/minecraft/client/gui/components/AbstractSelectionList$TrackedList
	b delegate
	a (I)Lesl$a; get
	a (ILesl$a;)Lesl$a; set
	b (I)Lesl$a; remove
	b (ILesl$a;)V add
esm net/minecraft/client/gui/components/AbstractSliderButton
	a SLIDER_SPRITE
	b TEXT_MARGIN
	c value
	d HIGHLIGHTED_SPRITE
	e SLIDER_HANDLE_SPRITE
	l SLIDER_HANDLE_HIGHLIGHTED_SPRITE
	m HANDLE_WIDTH
	n HANDLE_HALF_WIDTH
	o canChangeValue
	a ()V applyValue
	a (D)V setValueFromMouse
	a (DD)V onClick
	a (III)Z keyPressed
	a (Lewi;)V updateWidgetNarration
	a (Lgdq;)V playDownSound
	aE_ ()Lnet/minecraft/network/chat/IChatMutableComponent; createNarrationMessage
	b ()V updateMessage
	b (D)V setValue
	b (DD)V onRelease
	b (DDDD)V onDrag
	b (Lesf;IIF)V renderWidget
	b_ (Z)V setFocused
	e ()Lnet/minecraft/resources/MinecraftKey; getSprite
	f ()Lnet/minecraft/resources/MinecraftKey; getHandleSprite
esn net/minecraft/client/gui/components/AbstractStringWidget
	a font
	b color
	a ()Lesd; getFont
	a (I)Lesn; setColor
	a (Lewi;)V updateWidgetNarration
	b ()I getColor
eso net/minecraft/client/gui/components/AbstractWidget
	a PERIOD_PER_SCROLLED_PIXEL
	b MIN_SCROLL_PERIOD
	c x
	d y
	e message
	f width
	g height
	h isHovered
	i active
	j visible
	k alpha
	l tabOrderGroup
	m focused
	n tooltip
	o tooltipMsDelay
	p hoverOrFocusedStartTime
	q wasHoveredOrFocused
	a ()V updateTooltip
	a (DD)V onClick
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (F)V setAlpha
	a (Lesf;IIF)V render
	a (Lesf;Lesd;II)V renderScrollingString
	a (Lesf;Lesd;Lnet/minecraft/network/chat/IChatBaseComponent;IIIII)V renderScrollingString
	a (Lesf;Lesd;Lnet/minecraft/network/chat/IChatBaseComponent;IIIIII)V renderScrollingString
	a (Leua;)V setTooltip
	a (Lewi;)V updateWidgetNarration
	a (Lewo;)Lesc; nextFocusPath
	a (Lgdq;)V playDownSound
	a (Ljava/util/function/Consumer;)V visitWidgets
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; wrapDefaultNarrationMessage
	aC_ ()Z isFocused
	aD_ ()Z isActive
	aE_ ()Lnet/minecraft/network/chat/IChatMutableComponent; createNarrationMessage
	a_ (DD)Z isMouseOver
	b (DD)V onRelease
	b (DDDD)V onDrag
	b (DDI)Z mouseReleased
	b (I)V setTooltipDelay
	b (Lesf;IIF)V renderWidget
	b (Lewi;)V updateNarration
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setMessage
	b_ (Z)V setFocused
	c (I)Z isValidClickButton
	c (Lewi;)V defaultButtonNarrationText
	d (DD)Z clicked
	d (I)V setWidth
	e (I)V setHeight
	f (I)V setX
	g (I)V setY
	h (I)V setTabOrderGroup
	i ()I getHeight
	j ()Lfbb; createTooltipPositioner
	k ()Leua; getTooltip
	l ()I getWidth
	m ()Lnet/minecraft/network/chat/IChatBaseComponent; getMessage
	n ()Z isHovered
	o ()Z isHoveredOrFocused
	q ()Lewg$a; narrationPriority
	r ()I getX
	s ()Lews; getRectangle
	t ()I getY
	u ()I getTabOrderGroup
esp net/minecraft/client/gui/components/BossHealthOverlay
	a BAR_WIDTH
	b BAR_HEIGHT
	c BAR_BACKGROUND_SPRITES
	d BAR_PROGRESS_SPRITES
	e OVERLAY_BACKGROUND_SPRITES
	f OVERLAY_PROGRESS_SPRITES
	g minecraft
	h events
	a ()V reset
	a (Lesf;)V render
	a (Lesf;IILnet/minecraft/world/BossBattle;)V drawBar
	a (Lesf;IILnet/minecraft/world/BossBattle;I[Lnet/minecraft/resources/MinecraftKey;[Lnet/minecraft/resources/MinecraftKey;)V drawBar
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBoss;)V update
	b ()Z shouldPlayMusic
	c ()Z shouldDarkenScreen
	d ()Z shouldCreateWorldFog
esq net/minecraft/client/gui/components/Button
	l SMALL_WIDTH
	m DEFAULT_WIDTH
	n DEFAULT_HEIGHT
	o DEFAULT_NARRATION
	p onPress
	q createNarration
	a (Lewi;)V updateWidgetNarration
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lesq$c;)Lesq$a; builder
	aE_ ()Lnet/minecraft/network/chat/IChatMutableComponent; createNarrationMessage
	c ()V onPress
esq$a net/minecraft/client/gui/components/Button$Builder
	a message
	b onPress
	c tooltip
	d x
	e y
	f width
	g height
	h createNarration
	a ()Lesq; build
	a (I)Lesq$a; width
	a (II)Lesq$a; pos
	a (IIII)Lesq$a; bounds
	a (Lesq$b;)Lesq$a; createNarration
	a (Leua;)Lesq$a; tooltip
	b (II)Lesq$a; size
esq$b net/minecraft/client/gui/components/Button$CreateNarration
esq$c net/minecraft/client/gui/components/Button$OnPress
esr net/minecraft/client/gui/components/ChatComponent
	a LOGGER
	b MAX_CHAT_HISTORY
	c MESSAGE_NOT_FOUND
	d MESSAGE_INDENT
	e MESSAGE_TAG_MARGIN_LEFT
	f BOTTOM_MARGIN
	g TIME_BEFORE_MESSAGE_DELETION
	h DELETED_CHAT_MESSAGE
	i minecraft
	j recentChat
	k allMessages
	l trimmedMessages
	m chatScrollbarPos
	n newMessageSinceScroll
	o messageDeletionQueue
	a ()V tick
	a (D)I getWidth
	a (DD)Z handleChatQueueClicked
	a (DLeqp$a;Leqq;)Z hasSelectedMessageTag
	a (I)V scrollChat
	a (Leqp$a;)I getTagIconLeft
	a (Leqp;)Leqp; createDeletedMarker
	a (Lesf;III)V render
	a (Lesf;IILeqq$a;)V drawTagIcon
	a (Ljava/lang/String;)V addRecentChat
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V addMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Leqq;)V logChatMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/MessageSignature;ILeqq;Z)V addMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/MessageSignature;Leqq;)V addMessage
	a (Lnet/minecraft/network/chat/MessageSignature;)V deleteMessage
	a (Z)V clearMessages
	b ()V rescaleChat
	b (D)I getHeight
	b (DD)Lnet/minecraft/network/chat/ChatModifier; getClickedComponentStyleAt
	b (I)D getTimeFactor
	b (Lnet/minecraft/network/chat/MessageSignature;)Lesr$a; deleteMessageOrDelay
	c ()Laqo; getRecentChat
	c (D)D screenToChatX
	c (DD)Leqq; getMessageTagAt
	d ()V resetChatScroll
	d (D)D screenToChatY
	d (DD)I getMessageEndIndexAt
	e ()I getWidth
	e (DD)I getMessageLineIndexAt
	f ()I getHeight
	g ()D getScale
	h ()D defaultUnfocusedPct
	i ()I getLinesPerPage
	j ()Z isChatHidden
	k ()V processMessageDeletionQueue
	l ()V refreshTrimmedMessage
	m ()Z isChatFocused
	n ()I getLineHeight
esr$a net/minecraft/client/gui/components/ChatComponent$DelayedMessageDeletion
	a signature
	b deletableAfter
	a ()Lnet/minecraft/network/chat/MessageSignature; signature
	b ()I deletableAfter
ess net/minecraft/client/gui/components/Checkbox
	a CHECKBOX_SELECTED_HIGHLIGHTED_SPRITE
	b CHECKBOX_SELECTED_SPRITE
	c CHECKBOX_HIGHLIGHTED_SPRITE
	d CHECKBOX_SPRITE
	l TEXT_COLOR
	m selected
	n showLabel
	a ()Z selected
	a (Lewi;)V updateWidgetNarration
	b (Lesf;IIF)V renderWidget
	c ()V onPress
est net/minecraft/client/gui/components/CommandSuggestions
	a WHITESPACE_PATTERN
	b UNPARSED_STYLE
	c LITERAL_STYLE
	d ARGUMENT_STYLES
	e minecraft
	f screen
	g input
	h font
	i commandsOnly
	j onlyShowIfCursorPastError
	k lineStartOffset
	l suggestionLineLimit
	m anchorToBottom
	n fillColor
	o commandUsage
	p commandUsagePosition
	q commandUsageWidth
	r currentParse
	s pendingSuggestions
	t suggestions
	u allowSuggestions
	v keepSuggestions
	w allowHiding
	a ()Z isVisible
	a (D)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Lnet/minecraft/util/FormattedString; formatText
	a (Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Lnet/minecraft/util/FormattedString; getExceptionMessage
	a (Lcom/mojang/brigadier/suggestion/Suggestions;)Ljava/util/List; sortSuggestions
	a (Lesf;)V renderUsage
	a (Lesf;II)V render
	a (Ljava/lang/String;)I getLastWordIndex
	a (Ljava/lang/String;I)Lnet/minecraft/util/FormattedString; formatChat
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; calculateSuggestionSuffix
	a (Lnet/minecraft/EnumChatFormat;)Z fillNodeUsage
	a (Z)V setAllowSuggestions
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getUsageNarration
	b (Lesf;II)Z renderSuggestions
	b (Z)V setAllowHiding
	c ()V hide
	c (Z)V showSuggestions
	d ()V updateCommandInfo
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	f ()V updateUsageInfo
est$a net/minecraft/client/gui/components/CommandSuggestions$SuggestionsList
	b rect
	c originalContents
	d suggestionList
	e offset
	f current
	g lastMouse
	h tabCycles
	i lastNarratedEntry
	a ()V useSuggestion
	a (D)Z mouseScrolled
	a (I)V cycle
	a (III)Z mouseClicked
	a (Lesf;II)V render
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	b (I)V select
	b (III)Z keyPressed
esu net/minecraft/client/gui/components/CommonButtons
	a (ILesq$c;Z)Letu; language
	b (ILesq$c;Z)Letu; accessibility
esv net/minecraft/client/gui/components/ComponentRenderUtils
	a INDENT
	a (Ljava/lang/String;)Ljava/lang/String; stripColor
	a (Lnet/minecraft/network/chat/IChatFormatted;ILesd;)Ljava/util/List; wrapComponents
esw net/minecraft/client/gui/components/ContainerObjectSelectionList
	a (Leuk;)V setFocused
	a (Lewo;)Lesc; nextFocusPath
	b (Lewi;)V updateNarration
	e (I)Z isSelectedItem
	q ()Lewg$a; narrationPriority
esw$a net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry
	a focused
	b lastNarratable
	c dragging
	a (DDI)Z mouseClicked
	a (Leuk;)V setFocused
	a (Lewi;)V updateNarration
	a (Lewo;)Lesc; nextFocusPath
	a (Lewo;I)Lesc; focusPathAtIndex
	aB_ ()Z isDragging
	aC_ ()Z isFocused
	a_ (DD)Z isMouseOver
	b ()Ljava/util/List; narratables
	b (Lesf;IIIIIIIZF)V renderBack
	b (Z)V setDragging
	b_ (Z)V setFocused
	t ()Leuk; getFocused
esx net/minecraft/client/gui/components/CycleButton
	a DEFAULT_ALT_LIST_SELECTOR
	b BOOLEAN_OPTIONS
	c name
	d index
	l value
	m values
	n valueStringifier
	o narrationProvider
	p onValueChange
	q displayOnlyValue
	s tooltipSupplier
	a ()Ljava/lang/Object; getValue
	a (DDDD)Z mouseScrolled
	a (I)V cycleValue
	a (Lewi;)V updateWidgetNarration
	a (Ljava/lang/Object;)V setValue
	a (Ljava/util/function/Function;)Lesx$a; builder
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Lesx$a; booleanBuilder
	aE_ ()Lnet/minecraft/network/chat/IChatMutableComponent; createNarrationMessage
	b ()Lnet/minecraft/network/chat/IChatMutableComponent; createDefaultNarrationMessage
	b (Ljava/lang/Object;)V updateValue
	b (Z)Lesx$a; onOffBuilder
	c ()V onPress
	c (Ljava/lang/Object;)Lnet/minecraft/network/chat/IChatBaseComponent; createLabelForValue
	d (Ljava/lang/Object;)Lnet/minecraft/network/chat/IChatMutableComponent; createFullName
	e ()Lesx$a; onOffBuilder
	f ()V updateTooltip
	i (I)Ljava/lang/Object; getCycledValue
esx$a net/minecraft/client/gui/components/CycleButton$Builder
	a initialIndex
	b initialValue
	c valueStringifier
	d tooltipSupplier
	e narrationProvider
	f values
	g displayOnlyValue
	a ()Lesx$a; displayOnlyValue
	a (IIIILnet/minecraft/network/chat/IChatBaseComponent;)Lesx; create
	a (IIIILnet/minecraft/network/chat/IChatBaseComponent;Lesx$b;)Lesx; create
	a (Leqy$l;)Lesx$a; withTooltip
	a (Lesx$c;)Lesx$a; withValues
	a (Ljava/lang/Object;)Lesx$a; withInitialValue
	a (Ljava/util/Collection;)Lesx$a; withValues
	a (Ljava/util/List;Ljava/util/List;)Lesx$a; withValues
	a (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Lesx$a; withValues
	a (Ljava/util/function/Function;)Lesx$a; withCustomNarration
	a ([Ljava/lang/Object;)Lesx$a; withValues
esx$b net/minecraft/client/gui/components/CycleButton$OnValueChange
esx$c net/minecraft/client/gui/components/CycleButton$ValueListSupplier
	a ()Ljava/util/List; getSelectedList
	a (Ljava/util/Collection;)Lesx$c; create
	a (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Lesx$c; create
	b ()Ljava/util/List; getDefaultList
esy net/minecraft/client/gui/components/DebugScreenOverlay
	a COLOR_GREY
	b MARGIN_RIGHT
	c MARGIN_LEFT
	d MARGIN_TOP
	e HEIGHTMAP_NAMES
	f minecraft
	g allocationRateCalculator
	h font
	i block
	j liquid
	k lastPos
	l clientChunk
	m serverChunk
	n renderDebug
	o renderProfilerChart
	p renderFpsCharts
	q renderNetworkCharts
	r frameTimeLogger
	s tickTimeLogger
	t pingLogger
	u bandwidthLogger
	v fpsChart
	w tpsChart
	x pingChart
	y bandwidthChart
	a ()V clearChunkCache
	a (J)V logFrameDuration
	a (Lesf;)V render
	a (Lesf;Ljava/util/List;Z)V renderLines
	a (Ljava/util/Map$Entry;)Ljava/lang/String; getPropertyValueString
	a (Lnet/minecraft/core/Holder;)Ljava/lang/String; printBiome
	b ()Ljava/util/List; getGameInformation
	b (J)V logTickDuration
	b (Lesf;)V drawGameInformation
	c ()Ljava/util/List; getSystemInformation
	c (J)J bytesToMegabytes
	c (Lesf;)V drawSystemInformation
	d ()Z showDebugScreen
	e ()Z showProfilerChart
	f ()Z showNetworkCharts
	g ()V toggleOverlay
	h ()V toggleNetworkCharts
	i ()V toggleFpsCharts
	j ()V toggleProfilerChart
	k ()Lnet/minecraft/util/SampleLogger; getPingLogger
	l ()Lnet/minecraft/util/SampleLogger; getBandwidthLogger
	m ()V reset
	n ()Lnet/minecraft/server/level/WorldServer; getServerLevel
	o ()Ljava/lang/String; getServerChunkStats
	p ()Lnet/minecraft/world/level/World; getLevel
	q ()Lnet/minecraft/world/level/chunk/Chunk; getServerChunk
	r ()Lnet/minecraft/world/level/chunk/Chunk; getClientChunk
esy$a net/minecraft/client/gui/components/DebugScreenOverlay$AllocationRateCalculator
	a UPDATE_INTERVAL_MS
	b GC_MBEANS
	c lastTime
	d lastHeapUsage
	e lastGcCounts
	f lastRate
	a ()J gcCounts
	a (J)J bytesAllocatedPerSecond
esz net/minecraft/client/gui/components/EditBox
	A suggestion
	B responder
	C filter
	D formatter
	E hint
	F focusedTime
	a BACKWARDS
	b FORWARDS
	c DEFAULT_TEXT_COLOR
	d SPRITES
	e CURSOR_INSERT_WIDTH
	l CURSOR_INSERT_COLOR
	m CURSOR_APPEND_CHARACTER
	n CURSOR_BLINK_INTERVAL_MS
	o font
	p value
	q maxLength
	s bordered
	t canLoseFocus
	u isEditable
	v displayPos
	w cursorPos
	x highlightPos
	y textColor
	z textColorUneditable
	a ()Ljava/lang/String; getValue
	a (CI)Z charTyped
	a (DD)V onClick
	a (I)V deleteWords
	a (II)I getWordPosition
	a (III)Z keyPressed
	a (IIZ)I getWordPosition
	a (IZ)V moveCursor
	a (Lesf;IIII)V renderHighlight
	a (Lewi;)V updateWidgetNarration
	a (Lewo;)Lesc; nextFocusPath
	a (Lgdq;)V playDownSound
	a (Ljava/lang/String;)V setValue
	a (Ljava/util/function/BiFunction;)V setFormatter
	a (Ljava/util/function/Predicate;)V setFilter
	aE_ ()Lnet/minecraft/network/chat/IChatMutableComponent; createNarrationMessage
	a_ (DD)Z isMouseOver
	b ()Ljava/lang/String; getHighlighted
	b (IZ)V moveCursorTo
	b (Lesf;IIF)V renderWidget
	b (Ljava/lang/String;)V insertText
	b (Ljava/util/function/Consumer;)V setResponder
	b (Z)V moveCursorToStart
	b_ (Z)V setFocused
	c (Ljava/lang/String;)V setSuggestion
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V setHint
	c (Z)V moveCursorToEnd
	d (Ljava/lang/String;)V onValueChange
	d (Z)V setBordered
	e ()Z canConsumeInput
	e (Z)V setEditable
	f ()I getCursorPosition
	f (Z)V setCanLoseFocus
	g ()Z isBordered
	g (Z)V setVisible
	h ()I getInnerWidth
	i (I)V deleteChars
	j (I)I getWordPosition
	k (I)V setCursorPosition
	l (I)V setMaxLength
	m (I)V setTextColor
	n (I)V setTextColorUneditable
	o (I)V setHighlightPos
	p (I)I getScreenX
	q (I)V deleteText
	r (I)I getCursorPos
	s (I)V scrollTo
	v ()Z isVisible
	w ()I getMaxLength
	x ()Z isEditable
et$a net/minecraft/commands/arguments/ResourceOrTagArgument$Info
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	a (Let$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Let$a$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ResourceOrTagArgument;)Let$a$a; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)Let$a$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
et$a$a net/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template
	b registryKey
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
et$b net/minecraft/commands/arguments/ResourceOrTagArgument$ResourceResult
	a value
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lnet/minecraft/core/Holder;)Z test
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
	b ()Ljava/lang/String; asPrintable
	c ()Lhe$c; value
et$c net/minecraft/commands/arguments/ResourceOrTagArgument$Result
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
	b ()Ljava/lang/String; asPrintable
et$d net/minecraft/commands/arguments/ResourceOrTagArgument$TagResult
	a tag
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lnet/minecraft/core/Holder;)Z test
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
	b ()Ljava/lang/String; asPrintable
	c ()Lnet/minecraft/core/HolderSet$Named; tag
eta net/minecraft/client/gui/components/FittingMultiLineTextWidget
	a font
	b multilineWidget
	a (I)Leta; setColor
	a (Lewi;)V updateWidgetNarration
	b (Lesf;)V renderBackground
	b (Lesf;IIF)V renderWidget
	c (Lesf;IIF)V renderContents
	d (I)V setWidth
	g ()I getInnerHeight
	h ()D scrollRate
	v ()Z showingScrollBar
etb net/minecraft/client/gui/components/FocusableTextWidget
	a BACKGROUND_COLOR
	b PADDING
	c alwaysShowBorder
	a (Lewi;)V updateWidgetNarration
	a (Lgdq;)V playDownSound
	b (Lesf;IIF)V renderWidget
etc net/minecraft/client/gui/components/ImageButton
	a sprites
	b (Lesf;IIF)V renderWidget
etd net/minecraft/client/gui/components/ImageWidget
	a (IILnet/minecraft/resources/MinecraftKey;)Letd; sprite
	a (IILnet/minecraft/resources/MinecraftKey;II)Letd; texture
	a (Lewi;)V updateWidgetNarration
	a (Lewo;)Lesc; nextFocusPath
	a (Lgdq;)V playDownSound
	aD_ ()Z isActive
etd$a net/minecraft/client/gui/components/ImageWidget$Sprite
	a sprite
	b (Lesf;IIF)V renderWidget
etd$b net/minecraft/client/gui/components/ImageWidget$Texture
	a texture
	b textureWidth
	c textureHeight
	b (Lesf;IIF)V renderWidget
ete net/minecraft/client/gui/components/LerpingBossEvent
	h targetPercent
	i setTime
	j LERP_MILLISECONDS
	a (F)V setProgress
	k ()F getProgress
etf net/minecraft/client/gui/components/LoadingDotsWidget
	a font
	a (Lewi;)V updateWidgetNarration
	b (Lesf;IIF)V renderWidget
etg net/minecraft/client/gui/components/LockIconButton
	a locked
	a ()Z isLocked
	aE_ ()Lnet/minecraft/network/chat/IChatMutableComponent; createNarrationMessage
	b (Lesf;IIF)V renderWidget
	b (Z)V setLocked
etg$a net/minecraft/client/gui/components/LockIconButton$Icon
	a LOCKED
	b LOCKED_HOVER
	c LOCKED_DISABLED
	d UNLOCKED
	e UNLOCKED_HOVER
	f UNLOCKED_DISABLED
	g sprite
	h $VALUES
	a ()[Letg$a; $values
eth net/minecraft/client/gui/components/LogoRenderer
	a MINECRAFT_LOGO
	b EASTER_EGG_LOGO
	c MINECRAFT_EDITION
	d LOGO_WIDTH
	e LOGO_HEIGHT
	f DEFAULT_HEIGHT_OFFSET
	g LOGO_TEXTURE_WIDTH
	h LOGO_TEXTURE_HEIGHT
	i EDITION_WIDTH
	j EDITION_HEIGHT
	k EDITION_TEXTURE_WIDTH
	l EDITION_TEXTURE_HEIGHT
	m EDITION_LOGO_OVERLAP
	n showEasterEgg
	o keepLogoThroughFade
	a (Lesf;IF)V renderLogo
	a (Lesf;IFI)V renderLogo
eti net/minecraft/client/gui/components/MultiLineEditBox
	a CURSOR_INSERT_WIDTH
	b CURSOR_INSERT_COLOR
	c CURSOR_APPEND_CHARACTER
	d TEXT_COLOR
	e PLACEHOLDER_TEXT_COLOR
	l CURSOR_BLINK_INTERVAL_MS
	m font
	n placeholder
	o textField
	p focusedTime
	a (CI)Z charTyped
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (I)V setCharacterLimit
	a (III)Z keyPressed
	a (Lesf;)V renderDecorations
	a (Lewi;)V updateWidgetNarration
	a (Ljava/lang/String;)V setValue
	b (Lesf;IIII)V renderHighlight
	b (Ljava/util/function/Consumer;)V setValueListener
	b_ (Z)V setFocused
	c (Lesf;IIF)V renderContents
	e ()Z scrollbarVisible
	f (DD)V seekCursorScreen
	g ()I getInnerHeight
	h ()D scrollRate
	v ()Ljava/lang/String; getValue
	w ()V scrollToCursor
	x ()D getDisplayableLineCount
etj net/minecraft/client/gui/components/MultiLineLabel
	a EMPTY
	a ()I getLineCount
	a (Lesd;Ljava/util/List;)Letj; create
	a (Lesd;Lnet/minecraft/network/chat/IChatFormatted;I)Letj; create
	a (Lesd;Lnet/minecraft/network/chat/IChatFormatted;II)Letj; create
	a (Lesd;[Lnet/minecraft/network/chat/IChatBaseComponent;)Letj; create
	a (Lesf;II)I renderCentered
	a (Lesf;IIII)I renderCentered
	a (Lesf;IIIII)V renderBackgroundCentered
	b ()I getWidth
	b (Lesd;Ljava/util/List;)Letj; createFixed
	b (Lesf;IIII)I renderLeftAligned
	c (Lesf;IIII)I renderLeftAlignedNoShadow
etj$a net/minecraft/client/gui/components/MultiLineLabel$TextWithWidth
	a text
	b width
etk net/minecraft/client/gui/components/MultiLineTextWidget
	a maxWidth
	b maxRows
	c cache
	d centered
	a (I)Lesn; setColor
	b (Lesf;IIF)V renderWidget
	b (Z)Letk; setCentered
	e ()Letk$a; getFreshCacheKey
	i ()I getHeight
	i (I)Letk; setColor
	j (I)Letk; setMaxWidth
	k (I)Letk; setMaxRows
	l ()I getWidth
etk$a net/minecraft/client/gui/components/MultiLineTextWidget$CacheKey
	a message
	b maxWidth
	c maxRows
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; message
	b ()I maxWidth
	c ()Ljava/util/OptionalInt; maxRows
etl net/minecraft/client/gui/components/MultilineTextField
	a NO_CHARACTER_LIMIT
	b LINE_SEEK_PIXEL_BIAS
	c font
	d displayLines
	e value
	f cursor
	g selectCursor
	h selecting
	i characterLimit
	j width
	k valueListener
	l cursorListener
	a ()I characterLimit
	a (DD)V seekCursorToPoint
	a (I)V setCharacterLimit
	a (Leub;I)V seekCursor
	a (Ljava/lang/Runnable;)V setCursorListener
	a (Ljava/lang/String;)V setValue
	a (Ljava/util/function/Consumer;)V setValueListener
	a (Z)V setSelecting
	b ()Z hasCharacterLimit
	b (I)V deleteText
	b (Ljava/lang/String;)V insertText
	c ()Ljava/lang/String; value
	c (I)Letl$a; getLineView
	c (Ljava/lang/String;)Ljava/lang/String; truncateFullText
	d ()I cursor
	d (I)V seekCursorLine
	d (Ljava/lang/String;)Ljava/lang/String; truncateInsertionText
	e ()Letl$a; getSelected
	e (I)Z keyPressed
	f ()I getLineCount
	f (I)Letl$a; getCursorLineView
	g ()I getLineAtCursor
	g (I)I getWordEndPosition
	h ()Ljava/lang/Iterable; iterateLines
	i ()Z hasSelection
	j ()Ljava/lang/String; getSelectedText
	k ()Letl$a; getPreviousWord
	l ()Letl$a; getNextWord
	m ()Letl$a; getCursorLineView
	n ()V onValueChange
	o ()V reflowDisplayLines
etl$a net/minecraft/client/gui/components/MultilineTextField$StringView
	a beginIndex
	b endIndex
	c EMPTY
	a ()I beginIndex
	b ()I endIndex
etm net/minecraft/client/gui/components/ObjectSelectionList
	a USAGE_NARRATION
	a (Lewo;)Lesc; nextFocusPath
	b (Lewi;)V updateNarration
etm$a net/minecraft/client/gui/components/ObjectSelectionList$Entry
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	aC_ ()Z isFocused
	a_ (DD)Z isMouseOver
	b (Lesf;IIIIIIIZF)V renderBack
	b (Lewi;)V updateNarration
	b_ (Z)V setFocused
etn net/minecraft/client/gui/components/OptionsList
	a (Leqy;)I addBig
	a (Leqy;Leqy;)V addSmall
	a ([Leqy;)V addSmall
	b ()I getRowWidth
	b (Leqy;)Leso; findOption
	c ()I getScrollbarPosition
	c (DD)Ljava/util/Optional; getMouseOver
etn$a net/minecraft/client/gui/components/OptionsList$Entry
	a options
	b children
	a (Leqz;ILeqy;)Letn$a; big
	a (Leqz;ILeqy;Leqy;)Letn$a; small
	a (Lesf;IIIIIIIZF)V render
	b ()Ljava/util/List; narratables
	i ()Ljava/util/List; children
eto net/minecraft/client/gui/components/PlainTextButton
	a font
	b message
	c underlinedMessage
	b (Lesf;IIF)V renderWidget
etp net/minecraft/client/gui/components/PlayerFaceRenderer
	a SKIN_HEAD_U
	b SKIN_HEAD_V
	c SKIN_HEAD_WIDTH
	d SKIN_HEAD_HEIGHT
	e SKIN_HAT_U
	f SKIN_HAT_V
	g SKIN_HAT_WIDTH
	h SKIN_HAT_HEIGHT
	i SKIN_TEX_WIDTH
	j SKIN_TEX_HEIGHT
	a (Lesf;Lgae;III)V draw
	a (Lesf;Lnet/minecraft/resources/MinecraftKey;III)V draw
	a (Lesf;Lnet/minecraft/resources/MinecraftKey;IIIZ)V drawHat
	a (Lesf;Lnet/minecraft/resources/MinecraftKey;IIIZZ)V draw
etq net/minecraft/client/gui/components/PlayerSkinWidget
	a MODEL_OFFSET
	b MODEL_HEIGHT
	c Z_OFFSET
	d ROTATION_SENSITIVITY
	e DEFAULT_ROTATION_X
	l DEFAULT_ROTATION_Y
	m ROTATION_X_LIMIT
	n model
	o skin
	p rotationX
	q rotationY
	a (Lewi;)V updateWidgetNarration
	a (Lewo;)Lesc; nextFocusPath
	a (Lgdq;)V playDownSound
	aD_ ()Z isActive
	b (DDDD)V onDrag
	b (Lesf;IIF)V renderWidget
etq$a net/minecraft/client/gui/components/PlayerSkinWidget$Model
	a wideModel
	b slimModel
	a ()Lfgi; wideModel
	a (Lesf;Lgae;)V render
	a (Lfhy;)Letq$a; bake
	b ()Lfgi; slimModel
etr net/minecraft/client/gui/components/PlayerTabOverlay
	a MAX_ROWS_PER_COL
	b PING_UNKNOWN_SPRITE
	c PING_1_SPRITE
	d PING_2_SPRITE
	e PING_3_SPRITE
	f PING_4_SPRITE
	g PING_5_SPRITE
	h HEART_CONTAINER_BLINKING_SPRITE
	i HEART_CONTAINER_SPRITE
	j HEART_FULL_BLINKING_SPRITE
	k HEART_HALF_BLINKING_SPRITE
	l HEART_ABSORBING_FULL_BLINKING_SPRITE
	m HEART_FULL_SPRITE
	n HEART_ABSORBING_HALF_BLINKING_SPRITE
	o HEART_HALF_SPRITE
	p PLAYER_COMPARATOR
	q minecraft
	r gui
	s footer
	t header
	u visible
	v healthStates
	a ()V reset
	a (IIILjava/util/UUID;Lesf;I)V renderTablistHearts
	a (Lesf;IIILfjf;)V renderPingIcon
	a (Lesf;ILnet/minecraft/world/scores/Scoreboard;Lnet/minecraft/world/scores/ScoreboardObjective;)V render
	a (Lfjf;)Lnet/minecraft/network/chat/IChatBaseComponent; getNameForDisplay
	a (Lfjf;Lnet/minecraft/network/chat/IChatMutableComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; decorateName
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setFooter
	a (Lnet/minecraft/world/scores/ScoreboardObjective;ILjava/lang/String;IILjava/util/UUID;Lesf;)V renderTablistScore
	a (Z)V setVisible
	b ()Ljava/util/List; getPlayerInfos
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setHeader
etr$a net/minecraft/client/gui/components/PlayerTabOverlay$HealthState
	a DISPLAY_UPDATE_DELAY
	b DECREASE_BLINK_DURATION
	c INCREASE_BLINK_DURATION
	d lastValue
	e displayedValue
	f lastUpdateTick
	g blinkUntilTick
	a ()I displayedValue
	a (IJ)V update
	a (J)Z isBlinking
ets net/minecraft/client/gui/components/Renderable
	a (Lesf;IIF)V render
ett net/minecraft/client/gui/components/SplashRenderer
	a CHRISTMAS
	b NEW_YEAR
	c HALLOWEEN
	d WIDTH_OFFSET
	e HEIGH_OFFSET
	f splash
	a (Lesf;ILesd;I)V render
etu net/minecraft/client/gui/components/SpriteIconButton
	a sprite
	b spriteWidth
	c spriteHeight
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lesq$c;Z)Letu$a; builder
etu$a net/minecraft/client/gui/components/SpriteIconButton$Builder
	a message
	b onPress
	c iconOnly
	d width
	e height
	f sprite
	g spriteWidth
	h spriteHeight
	a ()Letu; build
	a (I)Letu$a; width
	a (II)Letu$a; size
	a (Lnet/minecraft/resources/MinecraftKey;II)Letu$a; sprite
etu$b net/minecraft/client/gui/components/SpriteIconButton$CenteredIcon
	a (Lesf;Lesd;I)V renderString
	b (Lesf;IIF)V renderWidget
etu$c net/minecraft/client/gui/components/SpriteIconButton$TextAndIcon
	a (Lesf;Lesd;I)V renderString
	b (Lesf;IIF)V renderWidget
etv net/minecraft/client/gui/components/StateSwitchingButton
	a sprites
	b isStateTriggered
	a ()Z isStateTriggered
	a (Leuc;)V initTextureValues
	a (Lewi;)V updateWidgetNarration
	b (Lesf;IIF)V renderWidget
	b (Z)V setStateTriggered
etw net/minecraft/client/gui/components/StringWidget
	a alignX
	a (I)Lesn; setColor
	a (Lnet/minecraft/network/chat/IChatBaseComponent;I)Lnet/minecraft/util/FormattedString; clipText
	b (F)Letw; horizontalAlignment
	b (Lesf;IIF)V renderWidget
	e ()Letw; alignLeft
	f ()Letw; alignCenter
	g ()Letw; alignRight
	i (I)Letw; setColor
etx net/minecraft/client/gui/components/SubtitleOverlay
	a DISPLAY_TIME
	b minecraft
	c subtitles
	d isListening
	a (Lesf;)V render
	a (Lgcm;Lgdr;)V onPlaySound
etx$a net/minecraft/client/gui/components/SubtitleOverlay$Subtitle
	a text
	b time
	c location
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getText
	a (Lnet/minecraft/world/phys/Vec3D;)V refresh
	b ()J getTime
	c ()Lnet/minecraft/world/phys/Vec3D; getLocation
ety net/minecraft/client/gui/components/TabButton
	a SPRITES
	b SELECTED_OFFSET
	c TEXT_MARGIN
	d UNDERLINE_HEIGHT
	e UNDERLINE_MARGIN_X
	l UNDERLINE_MARGIN_BOTTOM
	m tabManager
	n tab
	a ()Leuq; tab
	a (Lesf;Lesd;I)V renderString
	a (Lewi;)V updateWidgetNarration
	a (Lgdq;)V playDownSound
	b ()Z isSelected
	b (Lesf;IIF)V renderWidget
	b (Lesf;Lesd;I)V renderFocusUnderline
etz net/minecraft/client/gui/components/TabOrderedElement
	u ()I getTabOrderGroup
eu$a net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	a (Leu$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Leu$a$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument;)Leu$a$a; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)Leu$a$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
eu$a$a net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template
	b registryKey
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
eu$b net/minecraft/commands/arguments/ResourceOrTagKeyArgument$ResourceResult
	a key
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lnet/minecraft/core/Holder;)Z test
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
	b ()Ljava/lang/String; asPrintable
	c ()Lnet/minecraft/resources/ResourceKey; key
eu$c net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
	b ()Ljava/lang/String; asPrintable
eu$d net/minecraft/commands/arguments/ResourceOrTagKeyArgument$TagResult
	a key
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lnet/minecraft/core/Holder;)Z test
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
	b ()Ljava/lang/String; asPrintable
	c ()Lnet/minecraft/tags/TagKey; key
eua net/minecraft/client/gui/components/Tooltip
	a MAX_WIDTH
	b message
	c cachedTooltip
	d narration
	a (Leqv;)Ljava/util/List; toCharSequence
	a (Leqv;Lnet/minecraft/network/chat/IChatBaseComponent;)Ljava/util/List; splitTooltip
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Leua; create
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Leua; create
	b (Lewi;)V updateNarration
eub net/minecraft/client/gui/components/Whence
	a ABSOLUTE
	b RELATIVE
	c END
	d $VALUES
	a ()[Leub; $values
euc net/minecraft/client/gui/components/WidgetSprites
	a enabled
	b disabled
	c enabledFocused
	d disabledFocused
	a ()Lnet/minecraft/resources/MinecraftKey; enabled
	a (ZZ)Lnet/minecraft/resources/MinecraftKey; get
	b ()Lnet/minecraft/resources/MinecraftKey; disabled
	c ()Lnet/minecraft/resources/MinecraftKey; enabledFocused
	d ()Lnet/minecraft/resources/MinecraftKey; disabledFocused
eud net/minecraft/client/gui/components/debugchart/AbstractDebugChart
	a COLOR_GREY
	b CHART_HEIGHT
	c LINE_WIDTH
	d font
	e logger
	a (D)Ljava/lang/String; toDisplayString
	a (DDIDIDI)I getSampleColor
	a (I)I getWidth
	a (J)I getSampleColor
	a (Lesf;II)V drawChart
	a (Lesf;III)V renderAdditionalLinesAndLabels
	a (Lesf;Ljava/lang/String;II)V drawStringWithShade
	b (D)I getSampleHeight
eue net/minecraft/client/gui/components/debugchart/BandwidthDebugChart
	f MIN_COLOR
	g MID_COLOR
	h MAX_COLOR
	i KILOBYTE
	j MEGABYTE
	k CHART_TOP_VALUE
	a (D)Ljava/lang/String; toDisplayString
	a (J)I getSampleColor
	a (Lesf;III)V renderAdditionalLinesAndLabels
	a (Lesf;IIII)V drawLabeledLineAtValue
	a (Lesf;IIILjava/lang/String;)V drawLineWithLabel
	b (D)I getSampleHeight
	c (D)Ljava/lang/String; toDisplayStringInternal
	d (D)I getSampleHeightInternal
	e (D)D toBytesPerSecond
euf net/minecraft/client/gui/components/debugchart/FpsDebugChart
	f RED
	g YELLOW
	h GREEN
	i CHART_TOP_FPS
	j CHART_TOP_VALUE
	a (D)Ljava/lang/String; toDisplayString
	a (J)I getSampleColor
	a (Lesf;III)V renderAdditionalLinesAndLabels
	b (D)I getSampleHeight
	c (D)D toMilliseconds
eug net/minecraft/client/gui/components/debugchart/PingDebugChart
	f RED
	g YELLOW
	h GREEN
	i CHART_TOP_VALUE
	a (D)Ljava/lang/String; toDisplayString
	a (J)I getSampleColor
	a (Lesf;III)V renderAdditionalLinesAndLabels
	b (D)I getSampleHeight
euh net/minecraft/client/gui/components/debugchart/TpsDebugChart
	f RED
	g YELLOW
	h GREEN
	i CHART_TOP_VALUE
	a (D)Ljava/lang/String; toDisplayString
	a (J)I getSampleColor
	a (Lesf;III)V renderAdditionalLinesAndLabels
	b (D)I getSampleHeight
	c (D)D toMilliseconds
eui net/minecraft/client/gui/components/events/AbstractContainerEventHandler
	a focused
	b isDragging
	a (Leuk;)V setFocused
	aB_ ()Z isDragging
	b (Z)V setDragging
	t ()Leuk; getFocused
euj net/minecraft/client/gui/components/events/ContainerEventHandler
	a (CI)Z charTyped
	a (DDDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (III)Z keyPressed
	a (Leuk;)V setFocused
	a (Lewo$a;)Lesc; handleArrowNavigation
	a (Lewo$c;)Lesc; handleTabNavigation
	a (Lewo;)Lesc; nextFocusPath
	a (Lews;Lewq;Leuk;Lewo;)Lesc; nextFocusPathInDirection
	aB_ ()Z isDragging
	aC_ ()Z isFocused
	aF_ ()Lesc; getCurrentFocusPath
	b (DDI)Z mouseReleased
	b (III)Z keyReleased
	b (Leuk;)V magicalSpecialHackyFocus
	b (Lews;Lewq;Leuk;Lewo;)Lesc; nextFocusPathVaguelyInDirection
	b (Z)V setDragging
	b_ (Z)V setFocused
	d (DD)Ljava/util/Optional; getChildAt
	i ()Ljava/util/List; children
	t ()Leuk; getFocused
euk net/minecraft/client/gui/components/events/GuiEventListener
	r DOUBLE_CLICK_THRESHOLD_MS
	a (CI)Z charTyped
	a (DDDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (III)Z keyPressed
	a (Lewo;)Lesc; nextFocusPath
	aC_ ()Z isFocused
	aF_ ()Lesc; getCurrentFocusPath
	a_ (DD)Z isMouseOver
	b (DDI)Z mouseReleased
	b (III)Z keyReleased
	b_ (Z)V setFocused
	e (DD)V mouseMoved
	s ()Lews; getRectangle
eun net/minecraft/client/gui/components/spectator/SpectatorGui
	a HOTBAR_SPRITE
	b HOTBAR_SELECTION_SPRITE
	c FADE_OUT_DELAY
	d FADE_OUT_TIME
	e minecraft
	f lastSelectionTime
	g menu
	a ()Z isMenuActive
	a (I)V onHotbarSelected
	a (Lesf;)V renderHotbar
	a (Lesf;FIILfdr;)V renderPage
	a (Lesf;IIFFLfdp;)V renderSlot
	a (Lfdn;)V onSpectatorMenuClosed
	b ()V onMouseMiddleClick
	b (I)V onMouseScrolled
	b (Lesf;)V renderTooltip
	c ()F getHotbarAlpha
eup net/minecraft/client/gui/components/tabs/GridLayoutTab
	a layout
	b title
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTabTitle
	a (Lews;)V doLayout
	a (Ljava/util/function/Consumer;)V visitChildren
euq net/minecraft/client/gui/components/tabs/Tab
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTabTitle
	a (Lews;)V doLayout
	a (Ljava/util/function/Consumer;)V visitChildren
eur net/minecraft/client/gui/components/tabs/TabManager
	a addWidget
	b removeWidget
	c currentTab
	d tabArea
	a ()Leuq; getCurrentTab
	a (Leuq;Z)V setCurrentTab
	a (Lews;)V setTabArea
eus net/minecraft/client/gui/components/tabs/TabNavigationBar
	a NO_TAB
	b MAX_WIDTH
	c HEIGHT
	d MARGIN
	e USAGE_NARRATION
	f layout
	g width
	h tabManager
	i tabs
	j tabButtons
	a (I)V setWidth
	a (IZ)V selectTab
	a (Lesf;IIF)V render
	a (Leuk;)V setFocused
	a (Leur;I)Leus$a; builder
	a (Lewi;Lety;)V narrateListElementPosition
	a (Lewo;)Lesc; nextFocusPath
	b ()V arrangeElements
	b (I)Z keyPressed
	b (Lewi;)V updateNarration
	b_ (Z)V setFocused
	c (I)I getNextTabIndex
	d ()I currentTabIndex
	e ()Lety; currentTabButton
	i ()Ljava/util/List; children
	q ()Lewg$a; narrationPriority
	s ()Lews; getRectangle
eus$a net/minecraft/client/gui/components/tabs/TabNavigationBar$Builder
	a width
	b tabManager
	c tabs
	a ()Leus; build
	a ([Leuq;)Leus$a; addTabs
euu net/minecraft/client/gui/components/toasts/AdvancementToast
	a DISPLAY_TIME
	d BACKGROUND_SPRITE
	e advancement
	f playedSound
	a (Lesf;Leuy;J)Leux$a; render
euv net/minecraft/client/gui/components/toasts/RecipeToast
	a BACKGROUND_SPRITE
	d DISPLAY_TIME
	e TITLE_TEXT
	f DESCRIPTION_TEXT
	g recipes
	h lastChanged
	i changed
	a (Lesf;Leuy;J)Leux$a; render
	a (Leuy;Lnet/minecraft/world/item/crafting/RecipeHolder;)V addOrUpdate
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)V addItem
euw net/minecraft/client/gui/components/toasts/SystemToast
	a BACKGROUND_SPRITE
	d MAX_LINE_SIZE
	e LINE_SPACING
	f MARGIN
	g id
	h title
	i messageLines
	j lastChanged
	k changed
	l width
	a ()I width
	a (Leqv;Leuw$a;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Leuw; multiline
	a (Leqv;Ljava/lang/String;)V onWorldAccessFailure
	a (Lesf;IIII)V renderBackgroundRow
	a (Lesf;Leuy;J)Leux$a; render
	a (Leuy;Leuw$a;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)V add
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lcom/google/common/collect/ImmutableList; nullToEmpty
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)V reset
	b ()I height
	b (Leqv;Ljava/lang/String;)V onWorldDeleteFailure
	b (Leuy;Leuw$a;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)V addOrUpdate
	c ()Leuw$a; getToken
	c (Leqv;Ljava/lang/String;)V onPackCopyFailure
	d ()Ljava/lang/Object; getToken
euw$a net/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds
	a TUTORIAL_HINT
	b NARRATOR_TOGGLE
	c WORLD_BACKUP
	d PACK_LOAD_FAILURE
	e WORLD_ACCESS_FAILURE
	f PACK_COPY_FAILURE
	g PERIODIC_NOTIFICATION
	h UNSECURE_SERVER_WARNING
	i displayTime
	j $VALUES
	a ()[Leuw$a; $values
eux net/minecraft/client/gui/components/toasts/Toast
	b NO_TOKEN
	c SLOT_HEIGHT
	a ()I width
	a (Lesf;Leuy;J)Leux$a; render
	b ()I height
	d ()Ljava/lang/Object; getToken
	e ()I slotCount
eux$a net/minecraft/client/gui/components/toasts/Toast$Visibility
	a SHOW
	b HIDE
	c soundEvent
	d $VALUES
	a ()[Leux$a; $values
	a (Lgdq;)V playSound
euy net/minecraft/client/gui/components/toasts/ToastComponent
	a SLOT_COUNT
	b NO_SPACE
	c minecraft
	d visible
	e occupiedSlots
	f queued
	a ()V clear
	a (I)I findFreeIndex
	a (Lesf;)V render
	a (Leux;)V addToast
	a (Ljava/lang/Class;Ljava/lang/Object;)Leux; getToast
	b ()Leqv; getMinecraft
	c ()D getNotificationDisplayTimeMultiplier
	d ()I freeSlots
euy$a net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance
	b ANIMATION_TIME
	c toast
	d index
	e slotCount
	f animationTime
	g visibleTime
	h visibility
	a ()Leux; getToast
	a (ILesf;)Z render
	a (J)F getVisibility
euz net/minecraft/client/gui/components/toasts/TutorialToast
	a PROGRESS_BAR_WIDTH
	d PROGRESS_BAR_HEIGHT
	e PROGRESS_BAR_X
	f PROGRESS_BAR_Y
	g BACKGROUND_SPRITE
	h icon
	i title
	j message
	k visibility
	l lastProgressTime
	m lastProgress
	n progress
	o progressable
	a (F)V updateProgress
	a (Lesf;Leuy;J)Leux$a; render
	c ()V hide
euz$a net/minecraft/client/gui/components/toasts/TutorialToast$Icons
	a MOVEMENT_KEYS
	b MOUSE
	c TREE
	d RECIPE_BOOK
	e WOODEN_PLANKS
	f SOCIAL_INTERACTIONS
	g RIGHT_CLICK
	h sprite
	i $VALUES
	a ()[Leuz$a; $values
	a (Lesf;II)V render
ev$a net/minecraft/commands/arguments/ScoreHolderArgument$Info
	a FLAG_MULTIPLE
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	a (Lev$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lev$a$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ArgumentScoreholder;)Lev$a$a; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)Lev$a$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
ev$a$a net/minecraft/commands/arguments/ScoreHolderArgument$Info$Template
	b multiple
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ArgumentScoreholder; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
ev$b net/minecraft/commands/arguments/ScoreHolderArgument$Result
ev$c net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult
	a selector
evb net/minecraft/client/gui/font/AllMissingGlyphProvider
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lejr; getGlyph
evc net/minecraft/client/gui/font/CodepointMap
	a BLOCK_BITS
	b BLOCK_SIZE
	c IN_BLOCK_MASK
	d MAX_BLOCK
	e BLOCK_COUNT
	f empty
	g blockMap
	h blockConstructor
	a ()V clear
	a (I)Ljava/lang/Object; get
	a (ILjava/lang/Object;)Ljava/lang/Object; put
	a (ILjava/util/function/IntFunction;)Ljava/lang/Object; computeIfAbsent
	a (Levc$a;)V forEach
	b ()Lit/unimi/dsi/fastutil/ints/IntSet; keySet
	b (I)Ljava/lang/Object; remove
evc$a net/minecraft/client/gui/font/CodepointMap$Output
evd net/minecraft/client/gui/font/FontManager
	a MISSING_FONT
	b LOGGER
	c FONTS_PATH
	d FONT_DEFINITIONS
	e GSON
	f missingFontSet
	g providersToClose
	h fontSets
	i textureManager
	j renames
	a ()Lesd; createFont
	a (Lann$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Levd$a;Levo$a;Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; safeLoad
	a (Levd$d;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/util/List;)Ljava/util/Map; resolveProviders
	a (Ljava/util/List;Lejs;)V finalizeProviderLoading
	a (Ljava/util/List;Lnet/minecraft/resources/MinecraftKey;)Ljava/util/List; loadResourceStack
	a (Ljava/util/Map;)V setRenames
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/MinecraftKey; getActualId
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; prepare
	b ()Lesd; createFontFilterFishy
evd$a net/minecraft/client/gui/font/FontManager$BuilderId
	a fontId
	b pack
	c index
	a ()Lnet/minecraft/resources/MinecraftKey; fontId
	b ()Ljava/lang/String; pack
	c ()I index
evd$b net/minecraft/client/gui/font/FontManager$BuilderResult
	a id
	b result
	a ()Levd$a; id
	a (Ljava/util/function/Function;)Ljava/util/Optional; resolve
	b ()Lcom/mojang/datafixers/util/Either; result
evd$c net/minecraft/client/gui/font/FontManager$FontDefinitionFile
	a CODEC
	b providers
	a ()Ljava/util/List; providers
evd$d net/minecraft/client/gui/font/FontManager$Preparation
	a providers
	b allProviders
	a ()Ljava/util/Map; providers
	b ()Ljava/util/List; allProviders
evd$e net/minecraft/client/gui/font/FontManager$UnresolvedBuilderBundle
	a fontId
	b builders
	c dependencies
	a ()Lnet/minecraft/resources/MinecraftKey; fontId
	a (Levd$a;Levo$b;)V add
	a (Levd$a;Ljava/util/concurrent/CompletableFuture;)V add
	a (Ljava/util/function/Consumer;)V visitRequiredDependencies
	a (Ljava/util/function/Function;)Ljava/util/Optional; resolve
	b ()Ljava/util/List; builders
	b (Ljava/util/function/Consumer;)V visitOptionalDependencies
	c ()Ljava/util/Set; dependencies
	d ()Ljava/util/stream/Stream; listBuilders
eve net/minecraft/client/gui/font/FontSet
	a RANDOM
	b LARGE_FORWARD_ADVANCE
	c textureManager
	d name
	e missingGlyph
	f whiteGlyph
	g providers
	h glyphs
	i glyphInfos
	j glyphsByWidth
	k textures
	a ()Levi; whiteGlyph
	a (I)Levi; getGlyph
	a (IZ)Lejr; getGlyphInfo
	a (Lejr;)Levi; getRandomGlyph
	a (Lejt;)Levi; stitch
	a (Ljava/util/List;)V reload
	b ()V closeProviders
	b (I)Leve$a; computeGlyphInfo
	b (Lejr;)Z hasFishyAdvance
	c ()V closeTextures
	c (I)Levi; computeBakedGlyph
eve$a net/minecraft/client/gui/font/FontSet$GlyphInfoFilter
	a glyphInfo
	b glyphInfoNotFishy
	c MISSING
	a ()Lejr; glyphInfo
	a (Z)Lejr; select
	b ()Lejr; glyphInfoNotFishy
evf net/minecraft/client/gui/font/FontTexture
	e SIZE
	f renderTypes
	g colored
	h root
	a (Lejt;)Levi; add
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/nio/file/Path;)V dumpContents
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V load
evf$a net/minecraft/client/gui/font/FontTexture$Node
	a x
	b y
	c width
	d height
	e left
	f right
	g occupied
	a (Lejt;)Levf$a; insert
evg net/minecraft/client/gui/font/GlyphRenderTypes
	a normal
	b seeThrough
	c polygonOffset
	a ()Lfom; normal
	a (Lesd$a;)Lfom; select
	a (Lnet/minecraft/resources/MinecraftKey;)Levg; createForIntensityTexture
	b ()Lfom; seeThrough
	b (Lnet/minecraft/resources/MinecraftKey;)Levg; createForColorTexture
	c ()Lfom; polygonOffset
evh net/minecraft/client/gui/font/TextFieldHelper
	a getMessageFn
	b setMessageFn
	c getClipboardFn
	d setClipboardFn
	e stringValidator
	f cursorPos
	g selectionPos
	a ()V cut
	a (C)Z charTyped
	a (I)Z keyPressed
	a (II)V setSelectionRange
	a (ILevh$a;)V removeFromCursor
	a (IZ)V moveByChars
	a (IZLevh$a;)V moveBy
	a (Leqv;)Ljava/util/function/Supplier; createClipboardGetter
	a (Leqv;Ljava/lang/String;)V setClipboardContents
	a (Ljava/lang/String;)V insertText
	a (Ljava/lang/String;Ljava/lang/String;)V insertText
	a (Z)V setCursorToStart
	b ()V paste
	b (I)V moveByChars
	b (IZ)V moveByWords
	b (Leqv;)Ljava/lang/String; getClipboardContents
	b (Ljava/lang/String;)Ljava/lang/String; getSelected
	b (Z)V setCursorToEnd
	c ()V copy
	c (I)V moveByWords
	c (IZ)V setCursorPos
	c (Leqv;)Ljava/util/function/Consumer; createClipboardSetter
	c (Ljava/lang/String;)Ljava/lang/String; deleteSelection
	c (Z)V resetSelectionIfNeeded
	d ()V selectAll
	d (I)V removeWordsFromCursor
	e ()V setCursorToStart
	e (I)V removeCharsFromCursor
	f ()V setCursorToEnd
	f (I)V setCursorPos
	g ()I getCursorPos
	g (I)V setSelectionPos
	h ()I getSelectionPos
	h (I)I clampToMsgLength
	i ()Z isSelecting
evh$a net/minecraft/client/gui/font/TextFieldHelper$CursorStep
	a CHARACTER
	b WORD
	c $VALUES
	a ()[Levh$a; $values
evi net/minecraft/client/gui/font/glyphs/BakedGlyph
	a renderTypes
	b u0
	c u1
	d v0
	e v1
	f left
	g right
	h up
	i down
	a (Lesd$a;)Lfom; renderType
	a (Levi$a;Lorg/joml/Matrix4f;Lelt;I)V renderEffect
	a (ZFFLorg/joml/Matrix4f;Lelt;FFFFI)V render
evi$a net/minecraft/client/gui/font/glyphs/BakedGlyph$Effect
	a x0
	b y0
	c x1
	d y1
	e depth
	f r
	h b
	i a
evj net/minecraft/client/gui/font/glyphs/EmptyGlyph
	a INSTANCE
	a (ZFFLorg/joml/Matrix4f;Lelt;FFFFI)V render
evk net/minecraft/client/gui/font/glyphs/SpecialGlyphs
	a WHITE
	b MISSING
	c image
	d $VALUES
	a (IILevk$a;)Lekq; generate
	e ()[Levk; $values
evk$a net/minecraft/client/gui/font/glyphs/SpecialGlyphs$PixelProvider
evn net/minecraft/client/gui/font/providers/BitmapProvider
	a LOGGER
	b image
	c glyphs
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lejr; getGlyph
evn$a net/minecraft/client/gui/font/providers/BitmapProvider$Definition
	a CODEC
	c file
	d height
	e ascent
	f codepointGrid
	g CODEPOINT_GRID_CODEC
	a ()Levp; type
	a (Lekq;IIII)I getActualGlyphWidth
	a (Levn$a;)Lcom/mojang/serialization/DataResult; validate
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)Lejs; load
	a ([[I)Lcom/mojang/serialization/DataResult; validateDimensions
	b ()Lcom/mojang/datafixers/util/Either; unpack
	c ()Lnet/minecraft/resources/MinecraftKey; file
	d ()I height
	e ()I ascent
	f ()[[I codepointGrid
evn$b net/minecraft/client/gui/font/providers/BitmapProvider$Glyph
	a scale
	b image
	c offsetX
	d offsetY
	e width
	f height
	g advance
	h ascent
	c ()F scale
	d ()Lekq; image
	e ()I offsetX
	f ()I offsetY
	g ()I width
	h ()I height
	i ()I advance
	j ()I ascent
evo net/minecraft/client/gui/font/providers/GlyphProviderDefinition
	b CODEC
	a ()Levp; type
	b ()Lcom/mojang/datafixers/util/Either; unpack
evo$a net/minecraft/client/gui/font/providers/GlyphProviderDefinition$Loader
evo$b net/minecraft/client/gui/font/providers/GlyphProviderDefinition$Reference
	a id
	a ()Lnet/minecraft/resources/MinecraftKey; id
evp net/minecraft/client/gui/font/providers/GlyphProviderType
	a BITMAP
	b TTF
	c SPACE
	d UNIHEX
	e REFERENCE
	f CODEC
	g name
	h codec
	i $VALUES
	a ()Lcom/mojang/serialization/MapCodec; mapCodec
	b ()[Levp; $values
	c ()Ljava/lang/String; getSerializedName
evq net/minecraft/client/gui/font/providers/ProviderReferenceDefinition
	a CODEC
	c id
	a ()Levp; type
	b ()Lcom/mojang/datafixers/util/Either; unpack
	c ()Lnet/minecraft/resources/MinecraftKey; id
evr net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderDefinition
	a CODEC
	c location
	d size
	e oversample
	f shift
	g skip
	h SKIP_LIST_CODEC
	a ()Levp; type
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)Lejs; load
	b ()Lcom/mojang/datafixers/util/Either; unpack
	c ()Lnet/minecraft/resources/MinecraftKey; location
	d ()F size
	e ()F oversample
	f ()Levr$a; shift
	g ()Ljava/lang/String; skip
evr$a net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderDefinition$Shift
	a NONE
	b CODEC
	c x
	d y
	a ()F x
	b ()F y
evs net/minecraft/client/gui/font/providers/UnihexProvider
	a LOGGER
	b GLYPH_HEIGHT
	c DIGITS_PER_BYTE
	d DIGITS_FOR_WIDTH_8
	e DIGITS_FOR_WIDTH_16
	f DIGITS_FOR_WIDTH_24
	g DIGITS_FOR_WIDTH_32
	h glyphs
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lejr; getGlyph
	a (IB)I decodeHex
	a (ILit/unimi/dsi/fastutil/bytes/ByteList;I)I decodeHex
	a (Ljava/io/InputStream;Levs$h;)V readFromStream
	a (Ljava/io/InputStream;Lit/unimi/dsi/fastutil/bytes/ByteList;I)Z copyUntil
	a (Ljava/nio/IntBuffer;III)V unpackBitsToBytes
	a (Ljava/nio/IntBuffer;Levs$f;II)V unpackBitsToBytes
evs$a net/minecraft/client/gui/font/providers/UnihexProvider$ByteContents
	a contents
	a ()I bitWidth
	a (I)I line
	a (ILit/unimi/dsi/fastutil/bytes/ByteList;)Levs$f; read
	b ()[B contents
evs$b net/minecraft/client/gui/font/providers/UnihexProvider$Definition
	a CODEC
	c hexFile
	d sizeOverrides
	a ()Levp; type
	a (Ljava/io/InputStream;)Levs; loadData
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)Lejs; load
	b ()Lcom/mojang/datafixers/util/Either; unpack
evs$c net/minecraft/client/gui/font/providers/UnihexProvider$Dimensions
	a MAP_CODEC
	b CODEC
	c left
	d right
	a ()I pack
	a (I)I left
	a (II)I pack
	b ()I left
	b (I)I right
	c ()I right
evs$d net/minecraft/client/gui/font/providers/UnihexProvider$Glyph
	a contents
	b left
	c right
	a ()F getBoldOffset
	b ()F getShadowOffset
	c ()I width
	d ()Levs$f; contents
	e ()I left
	f ()I right
evs$e net/minecraft/client/gui/font/providers/UnihexProvider$IntContents
	a contents
	b bitWidth
	c SIZE_24
	a ()I bitWidth
	a (I)I line
	a (ILit/unimi/dsi/fastutil/bytes/ByteList;)Levs$f; read32
	b ()[I contents
	b (ILit/unimi/dsi/fastutil/bytes/ByteList;)Levs$f; read24
evs$f net/minecraft/client/gui/font/providers/UnihexProvider$LineData
	a ()I bitWidth
	a (I)I line
	c ()I mask
	d ()I calculateWidth
evs$g net/minecraft/client/gui/font/providers/UnihexProvider$OverrideRange
	a CODEC
	b from
	c to
	d dimensions
	e RAW_CODEC
	a ()I from
	b ()I to
	c ()Levs$c; dimensions
evs$h net/minecraft/client/gui/font/providers/UnihexProvider$ReaderOutput
evs$i net/minecraft/client/gui/font/providers/UnihexProvider$ShortContents
	a contents
	a ()I bitWidth
	a (I)I line
	a (ILit/unimi/dsi/fastutil/bytes/ByteList;)Levs$f; read
	b ()[S contents
evu net/minecraft/client/gui/layouts/AbstractLayout
	a width
	b height
	c x
	d y
	f (I)V setX
	g (I)V setY
	i ()I getHeight
	l ()I getWidth
	r ()I getX
	t ()I getY
evu$a net/minecraft/client/gui/layouts/AbstractLayout$AbstractChildWrapper
	a child
	b layoutSettings
	a ()I getHeight
	a (II)V setX
	b ()I getWidth
	b (II)V setY
evv net/minecraft/client/gui/layouts/CommonLayouts
	a LABEL_SPACING
	a (Lesd;Lewb;Lnet/minecraft/network/chat/IChatBaseComponent;)Lewa; labeledElement
	a (Lesd;Lewb;Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/function/Consumer;)Lewa; labeledElement
evw net/minecraft/client/gui/layouts/EqualSpacingLayout
	c orientation
	d children
	e defaultChildLayoutSettings
	a ()V arrangeElements
	a (Lewb;)Lewb; addChild
	a (Lewb;Lewc;)Lewb; addChild
	a (Lewb;Ljava/util/function/Consumer;)Lewb; addChild
	b ()Lewc; newChildLayoutSettings
	b (Ljava/util/function/Consumer;)V visitChildren
	c ()Lewc; defaultChildLayoutSetting
evw$a net/minecraft/client/gui/layouts/EqualSpacingLayout$ChildContainer
evw$b net/minecraft/client/gui/layouts/EqualSpacingLayout$Orientation
	a HORIZONTAL
	b VERTICAL
	c $VALUES
	a ()[Levw$b; $values
	a (Levw$a;)I getPrimaryLength
	a (Levw$a;I)V setPrimaryPosition
	a (Levw$a;II)V setSecondaryPosition
	a (Lewb;)I getPrimaryLength
	b (Levw$a;)I getSecondaryLength
	b (Lewb;)I getSecondaryLength
	c (Lewb;)I getPrimaryPosition
	d (Lewb;)I getSecondaryPosition
evx net/minecraft/client/gui/layouts/FrameLayout
	c children
	d minWidth
	e minHeight
	f defaultChildLayoutSettings
	a ()V arrangeElements
	a (I)Levx; setMinHeight
	a (II)Levx; setMinDimensions
	a (IIILjava/util/function/Consumer;F)V alignInDimension
	a (Lewb;)Lewb; addChild
	a (Lewb;IIII)V centerInRectangle
	a (Lewb;IIIIFF)V alignInRectangle
	a (Lewb;Lewc;)Lewb; addChild
	a (Lewb;Lews;)V centerInRectangle
	a (Lewb;Lews;FF)V alignInRectangle
	a (Lewb;Ljava/util/function/Consumer;)Lewb; addChild
	b ()Lewc; newChildLayoutSettings
	b (I)Levx; setMinWidth
	b (Ljava/util/function/Consumer;)V visitChildren
	c ()Lewc; defaultChildLayoutSetting
evx$a net/minecraft/client/gui/layouts/FrameLayout$ChildContainer
evy net/minecraft/client/gui/layouts/GridLayout
	c children
	d cellInhabitants
	e defaultCellSettings
	f rowSpacing
	g columnSpacing
	a ()V arrangeElements
	a (I)Levy; columnSpacing
	a (Lewb;II)Lewb; addChild
	a (Lewb;IIII)Lewb; addChild
	a (Lewb;IIIILewc;)Lewb; addChild
	a (Lewb;IIIILjava/util/function/Consumer;)Lewb; addChild
	a (Lewb;IILewc;)Lewb; addChild
	a (Lewb;IILjava/util/function/Consumer;)Lewb; addChild
	b ()Lewc; newCellSettings
	b (I)Levy; rowSpacing
	b (Ljava/util/function/Consumer;)V visitChildren
	c ()Lewc; defaultCellSetting
	c (I)Levy; spacing
	d (I)Levy$b; createRowHelper
evy$a net/minecraft/client/gui/layouts/GridLayout$CellInhabitant
	c row
	d column
	e occupiedRows
	f occupiedColumns
	c ()I getLastOccupiedRow
	d ()I getLastOccupiedColumn
evy$b net/minecraft/client/gui/layouts/GridLayout$RowHelper
	b columns
	c index
	a ()Levy; getGrid
	a (Lewb;)Lewb; addChild
	a (Lewb;I)Lewb; addChild
	a (Lewb;ILewc;)Lewb; addChild
	a (Lewb;Lewc;)Lewb; addChild
	b ()Lewc; newCellSettings
	c ()Lewc; defaultCellSetting
evz net/minecraft/client/gui/layouts/HeaderAndFooterLayout
	a DEFAULT_HEADER_AND_FOOTER_HEIGHT
	b CONTENT_MARGIN_TOP
	c headerFrame
	d footerFrame
	e contentsFrame
	f screen
	g headerHeight
	h footerHeight
	a ()V arrangeElements
	a (I)V setFooterHeight
	a (Lewb;)Lewb; addToHeader
	a (Lewb;Ljava/util/function/Consumer;)Lewb; addToHeader
	b ()I getFooterHeight
	b (I)V setHeaderHeight
	b (Lewb;)Lewb; addToFooter
	b (Lewb;Ljava/util/function/Consumer;)Lewb; addToFooter
	b (Ljava/util/function/Consumer;)V visitChildren
	c ()I getHeaderHeight
	c (Lewb;)Lewb; addToContents
	c (Lewb;Ljava/util/function/Consumer;)Lewb; addToContents
	f (I)V setX
	g (I)V setY
	i ()I getHeight
	l ()I getWidth
	r ()I getX
	t ()I getY
ewa net/minecraft/client/gui/layouts/Layout
	a ()V arrangeElements
	a (Ljava/util/function/Consumer;)V visitWidgets
	b (Ljava/util/function/Consumer;)V visitChildren
ewb net/minecraft/client/gui/layouts/LayoutElement
	a (Ljava/util/function/Consumer;)V visitWidgets
	b (II)V setPosition
	f (I)V setX
	g (I)V setY
	i ()I getHeight
	l ()I getWidth
	r ()I getX
	s ()Lews; getRectangle
	t ()I getY
ewc net/minecraft/client/gui/layouts/LayoutSettings
	a ()Lewc; alignHorizontallyLeft
	a (F)Lewc; alignHorizontally
	a (FF)Lewc; align
	a (I)Lewc; padding
	a (II)Lewc; padding
	a (IIII)Lewc; padding
	b ()Lewc; alignHorizontallyCenter
	b (F)Lewc; alignVertically
	b (I)Lewc; paddingLeft
	c ()Lewc; alignHorizontallyRight
	c (I)Lewc; paddingTop
	d ()Lewc; alignVerticallyTop
	d (I)Lewc; paddingRight
	e ()Lewc; alignVerticallyMiddle
	e (I)Lewc; paddingBottom
	f ()Lewc; alignVerticallyBottom
	f (I)Lewc; paddingHorizontal
	g ()Lewc; copy
	g (I)Lewc; paddingVertical
	h ()Lewc$a; getExposed
	i ()Lewc; defaults
ewc$a net/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl
	a paddingLeft
	b paddingTop
	c paddingRight
	d paddingBottom
	e xAlignment
	f yAlignment
	a (F)Lewc; alignHorizontally
	a (FF)Lewc; align
	a (I)Lewc; padding
	a (II)Lewc; padding
	a (IIII)Lewc; padding
	b (F)Lewc; alignVertically
	b (FF)Lewc$a; align
	b (I)Lewc; paddingLeft
	b (II)Lewc$a; padding
	b (IIII)Lewc$a; padding
	c (F)Lewc$a; alignHorizontally
	c (I)Lewc; paddingTop
	d (F)Lewc$a; alignVertically
	d (I)Lewc; paddingRight
	e (I)Lewc; paddingBottom
	f (I)Lewc; paddingHorizontal
	g ()Lewc; copy
	g (I)Lewc; paddingVertical
	h ()Lewc$a; getExposed
	h (I)Lewc$a; padding
	i (I)Lewc$a; paddingLeft
	j ()Lewc$a; copy
	j (I)Lewc$a; paddingTop
	k (I)Lewc$a; paddingRight
	l (I)Lewc$a; paddingBottom
	m (I)Lewc$a; paddingHorizontal
	n (I)Lewc$a; paddingVertical
ewd net/minecraft/client/gui/layouts/LinearLayout
	a wrapped
	b orientation
	c nextChildIndex
	a ()V arrangeElements
	a (I)Lewd; spacing
	a (Lewb;)Lewb; addChild
	a (Lewb;Lewc;)Lewb; addChild
	a (Lewb;Ljava/util/function/Consumer;)Lewb; addChild
	b ()Lewc; newCellSettings
	b (Ljava/util/function/Consumer;)V visitChildren
	c ()Lewc; defaultCellSetting
	d ()Lewd; vertical
	e ()Lewd; horizontal
	f (I)V setX
	g (I)V setY
	i ()I getHeight
	l ()I getWidth
	r ()I getX
	t ()I getY
ewd$a net/minecraft/client/gui/layouts/LinearLayout$Orientation
	a HORIZONTAL
	b VERTICAL
	c $VALUES
	a ()[Lewd$a; $values
	a (Levy;I)V setSpacing
	a (Levy;Lewb;ILewc;)Lewb; addChild
ewe net/minecraft/client/gui/layouts/SpacerElement
	a x
	b y
	c width
	d height
	a (I)Lewe; width
	a (Ljava/util/function/Consumer;)V visitWidgets
	b (I)Lewe; height
	f (I)V setX
	g (I)V setY
	i ()I getHeight
	l ()I getWidth
	r ()I getX
	t ()I getY
ewg net/minecraft/client/gui/narration/NarratableEntry
	aD_ ()Z isActive
	q ()Lewg$a; narrationPriority
ewg$a net/minecraft/client/gui/narration/NarratableEntry$NarrationPriority
	a NONE
	b HOVERED
	c FOCUSED
	d $VALUES
	a ()Z isTerminal
	b ()[Lewg$a; $values
ewh net/minecraft/client/gui/narration/NarratedElementType
	a TITLE
	b POSITION
	c HINT
	d USAGE
	e $VALUES
	a ()[Lewh; $values
ewi net/minecraft/client/gui/narration/NarrationElementOutput
	a ()Lewi; nest
	a (Lewh;Lewk;)V add
	a (Lewh;Ljava/lang/String;)V add
	a (Lewh;Lnet/minecraft/network/chat/IChatBaseComponent;)V add
	a (Lewh;[Lnet/minecraft/network/chat/IChatBaseComponent;)V add
ewj net/minecraft/client/gui/narration/NarrationSupplier
	b (Lewi;)V updateNarration
ewk net/minecraft/client/gui/narration/NarrationThunk
	a EMPTY
	b contents
	c converter
	a (Ljava/lang/String;)Lewk; from
	a (Ljava/util/List;)Lewk; from
	a (Ljava/util/function/Consumer;)V getText
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lewk; from
ewl net/minecraft/client/gui/narration/ScreenNarrationCollector
	a generation
	b entries
	a (Ljava/util/function/Consumer;)V update
	a (Z)Ljava/lang/String; collectNarrationText
ewl$a net/minecraft/client/gui/narration/ScreenNarrationCollector$EntryKey
	a type
	b depth
ewl$b net/minecraft/client/gui/narration/ScreenNarrationCollector$NarrationEntry
	a contents
	b generation
	c alreadyNarrated
	a (ILewk;)Lewl$b; update
ewl$c net/minecraft/client/gui/narration/ScreenNarrationCollector$Output
	b depth
	a ()Lewi; nest
	a (Lewh;Lewk;)V add
ewn net/minecraft/client/gui/navigation/CommonInputs
	a (I)Z selected
ewo net/minecraft/client/gui/navigation/FocusNavigationEvent
	a ()Lewq; getVerticalDirectionForInitialFocus
ewo$a net/minecraft/client/gui/navigation/FocusNavigationEvent$ArrowNavigation
	a direction
	a ()Lewq; getVerticalDirectionForInitialFocus
	b ()Lewq; direction
ewo$b net/minecraft/client/gui/navigation/FocusNavigationEvent$InitialFocus
	a ()Lewq; getVerticalDirectionForInitialFocus
ewo$c net/minecraft/client/gui/navigation/FocusNavigationEvent$TabNavigation
	a forward
	a ()Lewq; getVerticalDirectionForInitialFocus
	b ()Z forward
ewp net/minecraft/client/gui/navigation/ScreenAxis
	a HORIZONTAL
	b VERTICAL
	c $VALUES
	a ()Lewp; orthogonal
	a (Z)Lewq; getDirection
	b ()Lewq; getPositive
	c ()Lewq; getNegative
	d ()[Lewp; $values
ewq net/minecraft/client/gui/navigation/ScreenDirection
	a UP
	b DOWN
	c LEFT
	d RIGHT
	e coordinateValueComparator
	f $VALUES
	a ()Lewp; getAxis
	a (II)Z isAfter
	b ()Lewq; getOpposite
	b (II)Z isBefore
	c ()Z isPositive
	d ()Lit/unimi/dsi/fastutil/ints/IntComparator; coordinateValueComparator
	e ()[Lewq; $values
ewr net/minecraft/client/gui/navigation/ScreenPosition
	a x
	b y
	a ()I x
	a (Lewp;)I getCoordinate
	a (Lewp;II)Lewr; of
	a (Lewq;)Lewr; step
	b ()I y
ews net/minecraft/client/gui/navigation/ScreenRectangle
	a position
	b width
	c height
	d EMPTY
	a ()Lews; empty
	a (Lewp;)I getLength
	a (Lewp;IIII)Lews; of
	a (Lewq;)Lews; step
	a (Lews;)Z overlaps
	a (Lews;Lewp;)Z overlapsInAxis
	b ()I top
	b (Lewp;)I getCenterInAxis
	b (Lewq;)I getBoundInDirection
	b (Lews;)Lews; intersection
	c ()I bottom
	c (Lewq;)Lews; getBorder
	d ()I left
	e ()I right
	f ()Lewr; position
	g ()I width
	h ()I height
ewv net/minecraft/client/gui/screens/AccessibilityOnboardingScreen
	a ONBOARDING_NARRATOR_MESSAGE
	b PADDING
	c TITLE_PADDING
	k panorama
	l logoRenderer
	m options
	n narratorAvailable
	o hasNarrated
	p timer
	q onClose
	s textWidget
	D ()V handleInitialNarrationDelay
	a (Lesf;IIF)V render
	a (Leyk;)V closeAndSetScreen
	a (Ljava/lang/Runnable;)V close
	aH_ ()V init
	az_ ()V onClose
	b (Lesf;IIF)V renderBackground
	l ()I initTitleYPos
eww net/minecraft/client/gui/screens/AccessibilityOptionsScreen
	a (Leqz;)[Leqy; options
	aH_ ()V init
	f ()V createFooter
ewx net/minecraft/client/gui/screens/AlertScreen
	a LABEL_Y
	b messageText
	c message
	k callback
	l okButton
	m shouldCloseOnEsc
	a (Lesf;IIF)V render
	aH_ ()V init
	ay_ ()Z shouldCloseOnEsc
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
ewy net/minecraft/client/gui/screens/BackupConfirmScreen
	a listener
	b id
	c lastScreen
	k description
	l promptForCacheErase
	m message
	n eraseCache
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	aH_ ()V init
	ay_ ()Z shouldCloseOnEsc
ewy$a net/minecraft/client/gui/screens/BackupConfirmScreen$Listener
ewz net/minecraft/client/gui/screens/BanNoticeScreens
	a NAME_BAN_TITLE
	b TEMPORARY_BAN_TITLE
	c PERMANENT_BAN_TITLE
	d SKIN_BAN_TITLE
	e SKIN_BAN_DESCRIPTION
	a (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/IChatBaseComponent; getBannedTitle
	a (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/authlib/minecraft/BanDetails;)Lexc; create
	a (Ljava/lang/Runnable;)Lexc; createSkinBan
	a (Ljava/lang/String;Ljava/lang/Runnable;)Lexc; createNameBan
	b (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/IChatBaseComponent; getBannedScreenText
	c (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/IChatBaseComponent; getBanReasonText
	d (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/IChatBaseComponent; getBanStatusText
	e (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/IChatBaseComponent; getBanDurationText
	f (Lcom/mojang/authlib/minecraft/BanDetails;)Z isTemporaryBan
exa net/minecraft/client/gui/screens/ChatOptionsScreen
exb net/minecraft/client/gui/screens/ChatScreen
	a MOUSE_SCROLL_SPEED
	b input
	c USAGE_TEXT
	k TOOLTIP_MAX_WIDTH
	l historyBuffer
	m historyPos
	n initial
	o commandSuggestions
	a (DD)Lnet/minecraft/network/chat/ChatModifier; getComponentStyleAt
	a (DDDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (I)V moveInHistory
	a (III)Z keyPressed
	a (Leqv;II)V resize
	a (Lesf;IIF)V render
	a (Lewi;)V updateNarrationState
	a (Ljava/lang/String;)Ljava/lang/String; normalizeChatMessage
	a (Ljava/lang/String;Z)V insertText
	aH_ ()V init
	b (Lesf;IIF)V renderBackground
	b (Ljava/lang/String;)V onEdited
	b (Ljava/lang/String;Z)Z handleChatInput
	c (Ljava/lang/String;)V setChatLine
	h ()V removed
	j ()Z isPauseScreen
exc net/minecraft/client/gui/screens/ConfirmLinkScreen
	k COPY_BUTTON_TEXT
	l WARNING_TEXT
	m url
	n showWarning
	a (I)V addButtons
	a (Lesf;IIF)V render
	a (Ljava/lang/String;Leyk;Z)V confirmLinkNow
	a (ZLjava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; confirmMessage
	b (Ljava/lang/String;Leyk;Z)Lesq$c; confirmLink
	c (Z)Lnet/minecraft/network/chat/IChatMutableComponent; confirmMessage
	k ()V copyToClipboard
exd net/minecraft/client/gui/screens/ConfirmScreen
	a yesButton
	b noButton
	c callback
	k MARGIN
	l message
	m multilineMessage
	n delayTicker
	o exitButtons
	D ()I messageTop
	E ()I messageHeight
	a (I)V addButtons
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	a (Lesq;)V addExitButton
	aH_ ()V init
	ay_ ()Z shouldCloseOnEsc
	b (I)V setDelay
	c ()V tick
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	l ()I titleTop
exe net/minecraft/client/gui/screens/ConnectScreen
	a ABORT_CONNECTION
	b UNKNOWN_HOST_MESSAGE
	c UNIQUE_THREAD_ID
	k LOGGER
	l NARRATION_DELAY_MS
	m connection
	n channelFuture
	o aborted
	p parent
	q status
	s lastNarration
	t connectFailedTitle
	a (Leqv;Lfki;Lfjh;)V connect
	a (Lesf;IIF)V render
	a (Leyk;Leqv;Lfki;Lfjh;Z)V startConnecting
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V updateStatus
	aH_ ()V init
	ay_ ()Z shouldCloseOnEsc
	c ()V tick
exf net/minecraft/client/gui/screens/CreateBuffetWorldScreen
	a BIOME_SELECT_INFO
	b parent
	c applySettings
	k biomes
	l list
	m biome
	n doneButton
	a (Lesf;IIF)V render
	aH_ ()V init
	az_ ()V onClose
	b (Lesf;IIF)V renderBackground
	l ()V updateButtonValidity
exf$a net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList
	a (Lesl$a;)V setSelected
	a (Lexf$a$a;)V setSelected
exf$a$a net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry
	b biome
	c name
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lesf;IIIIIIIZF)V render
exg net/minecraft/client/gui/screens/CreateFlatWorldScreen
	a parent
	b SLOT_SPRITE
	c SLOT_BG_SIZE
	k SLOT_STAT_HEIGHT
	l SLOT_BG_X
	m SLOT_BG_Y
	n SLOT_FG_X
	o SLOT_FG_Y
	p applySettings
	q generator
	s columnType
	t columnHeight
	u list
	v deleteLayerButton
	D ()Z hasValidSelection
	a (Lesf;IIF)V render
	a (Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat;)V setConfig
	aH_ ()V init
	az_ ()V onClose
	k ()Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat; settings
	l ()V updateButtonValidity
exg$a net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList
	m STATS_ICON_LOCATION
	a (Lesl$a;)V setSelected
	a (Lexg$a$a;)V setSelected
	c ()I getScrollbarPosition
	d ()V resetRows
exg$a$a net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lesf;II)V blitSlotBg
	a (Lesf;IIIIIIIZF)V render
	a (Lesf;IILnet/minecraft/world/item/ItemStack;)V blitSlot
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getDisplayItem
exh net/minecraft/client/gui/screens/CreditsAndAttributionScreen
	a BUTTON_SPACING
	b BUTTON_WIDTH
	c TITLE
	k CREDITS_BUTTON
	l ATTRIBUTION_BUTTON
	m LICENSES_BUTTON
	n lastScreen
	o layout
	aH_ ()V init
	az_ ()V onClose
	b ()V repositionElements
	l ()V openCreditsScreen
exi net/minecraft/client/gui/screens/DatapackLoadFailureScreen
	a message
	b callback
	a (Lesf;IIF)V render
	aH_ ()V init
	ay_ ()Z shouldCloseOnEsc
exj net/minecraft/client/gui/screens/DeathScreen
	a DRAFT_REPORT_SPRITE
	b delayTicker
	c causeOfDeath
	k hardcore
	l deathScore
	m exitButtons
	n exitToTitleButton
	D ()V exitToTitleScreen
	a (DDI)Z mouseClicked
	a (I)Lnet/minecraft/network/chat/ChatModifier; getClickedComponentStyleAt
	a (Lesf;IIF)V render
	aH_ ()V init
	ay_ ()Z shouldCloseOnEsc
	b (Lesf;IIF)V renderBackground
	c ()V tick
	c (Z)V setButtonsActive
	j ()Z isPauseScreen
	l ()V handleExitToTitleScreen
exj$a net/minecraft/client/gui/screens/DeathScreen$TitleConfirmScreen
exk net/minecraft/client/gui/screens/DemoIntroScreen
	a DEMO_BACKGROUND_LOCATION
	b movementMessage
	c durationMessage
	a (Lesf;IIF)V render
	aH_ ()V init
	b (Lesf;IIF)V renderBackground
exl net/minecraft/client/gui/screens/DirectJoinServerScreen
	a ENTER_IP_LABEL
	b selectButton
	c serverData
	k ipEdit
	l callback
	m lastScreen
	D ()V updateSelectButtonStatus
	a (III)Z keyPressed
	a (Leqv;II)V resize
	a (Lesf;IIF)V render
	aH_ ()V init
	az_ ()V onClose
	h ()V removed
	l ()V onSelect
exm net/minecraft/client/gui/screens/DisconnectedScreen
	a TO_SERVER_LIST
	b TO_TITLE
	c parent
	k reason
	l buttonText
	m layout
	aH_ ()V init
	ay_ ()Z shouldCloseOnEsc
	b ()V repositionElements
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
exn net/minecraft/client/gui/screens/EditServerScreen
	a NAME_LABEL
	b IP_LABEL
	c addButton
	k callback
	l serverData
	m ipEdit
	n nameEdit
	o lastScreen
	D ()V updateAddButtonStatus
	a (Leqv;II)V resize
	a (Lesf;IIF)V render
	aH_ ()V init
	az_ ()V onClose
	l ()V onAdd
exo net/minecraft/client/gui/screens/ErrorScreen
	a message
	a (Lesf;IIF)V render
	aH_ ()V init
	ay_ ()Z shouldCloseOnEsc
	b (Lesf;IIF)V renderBackground
exp net/minecraft/client/gui/screens/FaviconTexture
	a MISSING_LOCATION
	b WIDTH
	c HEIGHT
	d textureManager
	e textureLocation
	f texture
	g closed
	a ()V clear
	a (Lekq;)V upload
	a (Lfzf;Ljava/lang/String;)Lexp; forWorld
	b ()Lnet/minecraft/resources/MinecraftKey; textureLocation
	b (Lfzf;Ljava/lang/String;)Lexp; forServer
	c ()V checkOpen
exq net/minecraft/client/gui/screens/GenericDirtMessageScreen
	a (Lesf;IIF)V render
	ay_ ()Z shouldCloseOnEsc
	b (Lesf;IIF)V renderBackground
exr net/minecraft/client/gui/screens/GenericWaitingScreen
	a TITLE_Y
	b MESSAGE_Y
	c MESSAGE_MAX_WIDTH
	k messageText
	l buttonLabel
	m buttonCallback
	n message
	o button
	p disableButtonTicks
	a (Lesf;IIF)V render
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/lang/Runnable;)Lexr; createWaiting
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/lang/Runnable;)Lexr; createCompleted
	aH_ ()V init
	ay_ ()Z shouldCloseOnEsc
	az_ ()V onClose
	c ()V tick
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
exs net/minecraft/client/gui/screens/InBedChatScreen
	c leaveBedButton
	a (CI)Z charTyped
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	aH_ ()V init
	az_ ()V onClose
	b (Lesf;IIF)V renderBackground
	k ()V onPlayerWokeUp
	l ()V sendWakeUp
ext net/minecraft/client/gui/screens/LanguageSelectScreen
	c WARNING_LABEL
	k packSelectionList
	l languageManager
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	aH_ ()V init
	b (Lesf;IIF)V renderBackground
	l ()V onDone
ext$a net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList
	b ()I getRowWidth
	c ()I getScrollbarPosition
ext$a$a net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry
	b code
	c language
	d lastClickTime
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lesf;IIIIIIIZF)V render
	b ()V select
exu net/minecraft/client/gui/screens/LevelLoadingScreen
	a NARRATION_DELAY_MS
	b progressListener
	c lastNarration
	k done
	l COLORS
	a (Lesf;IIF)V render
	a (Lesf;Lald;IIII)V renderChunks
	aG_ ()Z shouldNarrateNavigation
	ay_ ()Z shouldCloseOnEsc
	b (Lewi;)V updateNarratedWidget
	h ()V removed
	l ()Lnet/minecraft/network/chat/IChatBaseComponent; getFormattedProgress
exv net/minecraft/client/gui/screens/LoadingDotsText
	a FRAMES
	b INTERVAL_MS
	a (J)Ljava/lang/String; get
exw net/minecraft/client/gui/screens/LoadingOverlay
	a FADE_OUT_TIME
	b FADE_IN_TIME
	c MOJANG_STUDIOS_LOGO_LOCATION
	d LOGO_BACKGROUND_COLOR
	e LOGO_BACKGROUND_COLOR_DARK
	f BRAND_BACKGROUND
	g LOGO_SCALE
	h LOGO_QUARTER_FLOAT
	i LOGO_QUARTER
	j LOGO_HALF
	k LOGO_OVERLAP
	l SMOOTHING
	m minecraft
	n reload
	o onFinish
	p fadeIn
	q currentProgress
	r fadeOutStart
	s fadeInStart
	a ()Z isPauseScreen
	a (II)I replaceAlpha
	a (Leqv;)V registerTextures
	a (Lesf;IIF)V render
	a (Lesf;IIIIF)V drawProgressBar
exw$a net/minecraft/client/gui/screens/LoadingOverlay$LogoTexture
	b (Lnet/minecraft/server/packs/resources/IResourceManager;)Lfyx$a; getTextureImage
exx net/minecraft/client/gui/screens/MenuScreens
	a LOGGER
	b SCREENS
	a ()Z selfTest
	a (Lnet/minecraft/world/inventory/Containers;)Lexx$a; getConstructor
	a (Lnet/minecraft/world/inventory/Containers;Leqv;ILnet/minecraft/network/chat/IChatBaseComponent;)V create
	a (Lnet/minecraft/world/inventory/Containers;Lexx$a;)V register
exx$a net/minecraft/client/gui/screens/MenuScreens$ScreenConstructor
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/world/inventory/Containers;Leqv;I)V fromPacket
exy net/minecraft/client/gui/screens/MouseSettingsScreen
	c list
	a (Leqz;)[Leqy; options
	a (Lesf;IIF)V render
	aH_ ()V init
	b (Lesf;IIF)V renderBackground
exz net/minecraft/client/gui/screens/NoticeWithLinkScreen
	a SYMLINK_WORLD_TITLE
	b SYMLINK_WORLD_MESSAGE_TEXT
	c SYMLINK_PACK_TITLE
	k SYMLINK_PACK_MESSAGE_TEXT
	l message
	m url
	n callbackScreen
	o layout
	a (Leyk;)Leyk; createWorldSymlinkWarningScreen
	aH_ ()V init
	az_ ()V onClose
	b ()V repositionElements
	b (Leyk;)Leyk; createPackSymlinkWarningScreen
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
eya net/minecraft/client/gui/screens/OnlineOptionsScreen
	l difficultyDisplay
	a (Leqv;Leyk;Leqz;)Leya; createOnlineOptionsScreen
	aH_ ()V init
eyb net/minecraft/client/gui/screens/OptionsScreen
	a SKIN_CUSTOMIZATION
	b SOUNDS
	c VIDEO
	k CONTROLS
	l LANGUAGE
	m CHAT
	n RESOURCEPACK
	o ACCESSIBILITY
	p TELEMETRY
	q CREDITS_AND_ATTRIBUTION
	s COLUMNS
	t lastScreen
	u options
	v difficultyButton
	w lockButton
	a (IILjava/lang/String;Leqv;)Lesx; createDifficultyButton
	a (Lesf;IIF)V render
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/function/Supplier;)Lesq; openScreenButton
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;)V applyPacks
	aH_ ()V init
	c (Z)V lockCallback
	h ()V removed
	l ()Lewb; createOnlineButton
eyc net/minecraft/client/gui/screens/OptionsSubScreen
	a lastScreen
	b options
	a (Lesf;Letn;IIF)V basicListRender
	az_ ()V onClose
	h ()V removed
eyd net/minecraft/client/gui/screens/OutOfMemoryScreen
	a message
	a (Lesf;IIF)V render
	aH_ ()V init
	ay_ ()Z shouldCloseOnEsc
eye net/minecraft/client/gui/screens/Overlay
	a ()Z isPauseScreen
eyf net/minecraft/client/gui/screens/PauseScreen
	A showPauseMenu
	B disconnectButton
	a DRAFT_REPORT_SPRITE
	b COLUMNS
	c MENU_PADDING_TOP
	k BUTTON_PADDING
	l BUTTON_WIDTH_FULL
	m BUTTON_WIDTH_HALF
	n RETURN_TO_GAME
	o ADVANCEMENTS
	p STATS
	q SEND_FEEDBACK
	s REPORT_BUGS
	t OPTIONS
	u SHARE_TO_LAN
	v PLAYER_REPORTING
	w RETURN_TO_MENU
	x SAVING_LEVEL
	y GAME
	z PAUSED
	D ()V createPauseMenu
	E ()V onDisconnect
	a (Lesf;IIF)V render
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/lang/String;)Lesq; openLinkButton
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/function/Supplier;)Lesq; openScreenButton
	aH_ ()V init
	b (Lesf;IIF)V renderBackground
	c ()V tick
	l ()Z showsPauseMenu
eyg net/minecraft/client/gui/screens/PopupScreen
	a BUTTON_PADDING
	b BUTTON_MARGIN
	c BUTTON_HEIGHT
	k narrationMessage
	l message
	m buttonOptions
	n messageLines
	o contentTop
	p buttonWidth
	a (Lesf;IIF)V render
	aH_ ()V init
	ay_ ()Z shouldCloseOnEsc
	b (Lesf;IIF)V renderBackground
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
eyg$a net/minecraft/client/gui/screens/PopupScreen$ButtonOption
	a message
	b onPress
eyh net/minecraft/client/gui/screens/PresetFlatWorldScreen
	a UNKNOWN_PRESET
	b SLOT_SPRITE
	c LOGGER
	k SLOT_BG_SIZE
	l SLOT_STAT_HEIGHT
	m SLOT_BG_X
	n SLOT_BG_Y
	o SLOT_FG_X
	p SLOT_FG_Y
	q DEFAULT_BIOME
	s parent
	t shareText
	u listText
	v list
	w selectButton
	x export
	y settings
	a (DDDD)Z mouseScrolled
	a (Leqv;II)V resize
	a (Lesf;IIF)V render
	a (Lnet/minecraft/core/HolderGetter;Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
	a (Lnet/minecraft/core/HolderGetter;Ljava/lang/String;I)Lnet/minecraft/world/level/levelgen/flat/WorldGenFlatLayerInfo; getLayerInfoFromString
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Ljava/lang/String;Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat;)Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat; fromString
	a (Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat;)Ljava/lang/String; save
	aH_ ()V init
	az_ ()V onClose
	c (Z)V updateButtonValidity
eyh$a net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList
	a (III)Z keyPressed
	a (Lesl$a;)V setSelected
	a (Leyh$a$a;)V setSelected
eyh$a$a net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry
	b STATS_ICON_LOCATION
	c preset
	d name
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lesf;II)V blitSlotBg
	a (Lesf;IIIIIIIZF)V render
	a (Lesf;IILnet/minecraft/world/item/Item;)V blitSlot
	b ()V select
eyi net/minecraft/client/gui/screens/ProgressScreen
	a header
	b stage
	c progress
	k stop
	l clearScreenAfterStop
	a ()V stop
	a (I)V progressStagePercentage
	a (Lesf;IIF)V render
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V progressStartNoAbort
	aG_ ()Z shouldNarrateNavigation
	ay_ ()Z shouldCloseOnEsc
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V progressStart
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V progressStage
eyj net/minecraft/client/gui/screens/ReceivingLevelScreen
	a DOWNLOADING_TERRAIN_TEXT
	b CHUNK_LOADING_START_WAIT_LIMIT_MS
	c loadingPacketsReceived
	k oneTickSkipped
	l createdAt
	a (Lesf;IIF)V render
	aG_ ()Z shouldNarrateNavigation
	ay_ ()Z shouldCloseOnEsc
	az_ ()V onClose
	b (Lesf;IIF)V renderBackground
	c ()V tick
	j ()Z isPauseScreen
	l ()V loadingPacketsReceived
eyk net/minecraft/client/gui/screens/Screen
	a LOGGER
	b ALLOWED_PROTOCOLS
	c USAGE_NARRATION
	d BACKGROUND_LOCATION
	e title
	f minecraft
	g width
	h height
	i font
	j screenExecutor
	k children
	l narratables
	m initialized
	n renderables
	o clickedLink
	p NARRATE_SUPPRESS_AFTER_INIT_TIME
	q NARRATE_DELAY_NARRATOR_ENABLED
	s NARRATE_DELAY_MOUSE_MOVE
	t NARRATE_DELAY_MOUSE_ACTION
	u NARRATE_DELAY_KEYBOARD_ACTION
	v narrationState
	w narrationSuppressTime
	x nextNarrationTime
	y lastNarratable
	z deferredTooltipRendering
	A ()Lnet/minecraft/network/chat/IChatBaseComponent; getUsageNarration
	B ()V narrationEnabled
	C ()Lnet/minecraft/sounds/Music; getBackgroundMusic
	D ()V clearFocus
	H ()Z shouldRunNarration
	a (III)Z keyPressed
	a (J)V suppressNarration
	a (JZ)V scheduleNarration
	a (Leqv;II)V resize
	a (Leqv;Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; getTooltipFromItem
	a (Lesc;)V changeFocus
	a (Lesf;)V renderTransparentBackground
	a (Lesf;IIF)V render
	a (Lets;)Lets; addRenderableOnly
	a (Leua;Lfbb;Z)V setTooltipForNextRenderPass
	a (Lewi;)V updateNarrationState
	a (Lewq;)Lewo$a; createArrowEvent
	a (Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V wrapScreenError
	a (Ljava/lang/String;CI)Z isValidCharacterForName
	a (Ljava/lang/String;Z)V insertText
	a (Ljava/net/URI;)V openLink
	a (Ljava/util/List;)V onFilesDrop
	a (Ljava/util/List;Lewg;)Leyk$b; findNarratableWidget
	a (Ljava/util/List;Lfbb;Z)V setTooltipForNextRenderPass
	a (Lnet/minecraft/network/chat/ChatModifier;)Z handleComponentClicked
	a ([Leso;)V hideWidgets
	aA_ ()V added
	aG_ ()Z shouldNarrateNavigation
	aH_ ()V init
	a_ (DD)Z isMouseOver
	ay_ ()Z shouldCloseOnEsc
	az_ ()V onClose
	b ()V repositionElements
	b (Leqv;II)V init
	b (Lesf;)V renderDirtBackground
	b (Lesf;IIF)V renderBackground
	b (Lewi;)V updateNarratedWidget
	b (Ljava/util/List;)V setTooltipForNextRenderPass
	c ()V tick
	c (Lesf;IIF)V renderWithTooltip
	c (Leuk;)V setInitialFocus
	c (Z)V confirmLink
	d (I)Z isCut
	d (Leuk;)Leuk; addRenderableWidget
	d (Lnet/minecraft/network/chat/IChatBaseComponent;)V setTooltipForNextRenderPass
	d (Z)V triggerImmediateNarration
	e (I)Z isPaste
	e (Leuk;)Leuk; addWidget
	e (Z)V runNarration
	f (I)Z isCopy
	f (Leuk;)V removeWidget
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	g (I)Z isSelectAll
	h ()V removed
	i ()Ljava/util/List; children
	j ()Z isPauseScreen
	l ()Lewo$c; createTabEvent
	m ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	n ()V clearWidgets
	o ()V rebuildWidgets
	p ()Z hasControlDown
	q ()Z hasShiftDown
	r ()Z hasAltDown
	s ()Lews; getRectangle
	w ()V afterMouseMove
	x ()V afterMouseAction
	y ()V afterKeyboardAction
	z ()V handleDelayedNarration
eyk$a net/minecraft/client/gui/screens/Screen$DeferredTooltipRendering
	a tooltip
	b positioner
	a ()Ljava/util/List; tooltip
	b ()Lfbb; positioner
eyk$b net/minecraft/client/gui/screens/Screen$NarratableSearchResult
	a entry
	b index
	c priority
eyl net/minecraft/client/gui/screens/ShareToLanScreen
	a PORT_LOWER_BOUND
	b PORT_HIGHER_BOUND
	c ALLOW_COMMANDS_LABEL
	k GAME_MODE_LABEL
	l INFO_TEXT
	m PORT_INFO_TEXT
	n PORT_UNAVAILABLE
	o INVALID_PORT
	p INVALID_PORT_COLOR
	q lastScreen
	s gameMode
	t commands
	u port
	v portEdit
	a (Lesf;IIF)V render
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; tryParsePort
	aH_ ()V init
eym net/minecraft/client/gui/screens/SimpleOptionsSubScreen
	c smallOptions
	k list
	l narratorButton
	a (Lesf;IIF)V render
	aH_ ()V init
	b (Lesf;IIF)V renderBackground
	f ()V createFooter
	l ()V updateNarratorButton
eyn net/minecraft/client/gui/screens/SkinCustomizationScreen
	a (Lesf;IIF)V render
	aH_ ()V init
eyo net/minecraft/client/gui/screens/SoundOptionsScreen
	c list
	a (Leqz;)[Leqy; buttonOptions
	a (Lesf;IIF)V render
	aH_ ()V init
	b (Lesf;IIF)V renderBackground
	l ()[Leqy; getAllSoundOptionsExceptMaster
eyp net/minecraft/client/gui/screens/TitleScreen
	a COPYRIGHT_TEXT
	b CUBE_MAP
	c LOGGER
	k DEMO_LEVEL_ID
	l PANORAMA_OVERLAY
	m splash
	n resetDemoButton
	o realmsNotificationsScreen
	p panorama
	q fading
	s fadeInStart
	t warningLabel
	u logoRenderer
	D ()Lnet/minecraft/network/chat/IChatBaseComponent; getMultiplayerDisabledReason
	E ()Z checkDemoWorldPresence
	F ()V realmsButtonClicked
	a (DDI)Z mouseClicked
	a (II)V createNormalMenuOptions
	a (Lesf;IIF)V render
	a (Lfzf;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preloadResources
	aA_ ()V added
	aH_ ()V init
	ay_ ()Z shouldCloseOnEsc
	b (II)V createDemoMenuOptions
	b (Lesf;IIF)V renderBackground
	c ()V tick
	c (Z)V confirmDemo
	h ()V removed
	j ()Z isPauseScreen
	l ()Z realmsNotificationsEnabled
eyp$a net/minecraft/client/gui/screens/TitleScreen$WarningLabel
	a font
	b label
	c x
	d y
	a ()Lesd; font
	a (Lesf;I)V render
	b ()Letj; label
	c ()I x
	d ()I y
eyq net/minecraft/client/gui/screens/VideoSettingsScreen
	c FABULOUS
	k WARNING_MESSAGE
	l WARNING_TITLE
	m BUTTON_ACCEPT
	n BUTTON_CANCEL
	o list
	p gpuWarnlistManager
	q oldMipmaps
	a (DDDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (Leqz;)[Leqy; options
	a (Lesf;IIF)V render
	aH_ ()V init
	b (Lesf;IIF)V renderBackground
	h ()V removed
eyr net/minecraft/client/gui/screens/WinScreen
	A logoRenderer
	a LOGGER
	b VIGNETTE_LOCATION
	c SECTION_HEADING
	k NAME_PREFIX
	l OBFUSCATE_TOKEN
	m SPEEDUP_FACTOR
	n SPEEDUP_FACTOR_FAST
	o poem
	p onFinished
	q scroll
	s lines
	t centeredLines
	u totalScrollLength
	v speedupActive
	w speedupModifiers
	x scrollSpeed
	y unmodifiedScrollSpeed
	z direction
	C ()Lnet/minecraft/sounds/Music; getBackgroundMusic
	D ()V respawn
	E ()V addEmptyLine
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	a (Ljava/io/Reader;)V addPoemFile
	a (Ljava/lang/String;)V addPoemLines
	a (Ljava/lang/String;Leyr$a;)V wrapCreditsIO
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V addCreditsLine
	aH_ ()V init
	az_ ()V onClose
	b (III)Z keyReleased
	b (Lesf;IIF)V renderBackground
	b (Ljava/io/Reader;)V addCreditsFile
	c ()V tick
	h ()V removed
	l ()F calculateScrollSpeed
eyr$a net/minecraft/client/gui/screens/WinScreen$CreditsReader
eys net/minecraft/client/gui/screens/achievement/StatsScreen
	A SLOT_FG_X
	B SLOT_FG_Y
	C SLOT_LEFT_INSERT
	D SLOT_TEXT_OFFSET
	E SORT_NONE
	F SORT_DOWN
	G SORT_UP
	a lastScreen
	c SLOT_SPRITE
	k HEADER_SPRITE
	l SORT_UP_SPRITE
	m SORT_DOWN_SPRITE
	n PENDING_TEXT
	o NO_VALUE_DISPLAY
	p statsList
	q itemStatsList
	s mobsStatsList
	t stats
	u activeList
	v isLoading
	w SLOT_BG_SIZE
	x SLOT_STAT_HEIGHT
	y SLOT_BG_X
	z SLOT_BG_Y
	D ()V initButtons
	E ()V onStatsUpdated
	F ()Letm; getActiveList
	a (I)I getColumnX
	a (Lesf;IIF)V render
	a (Lesf;IILnet/minecraft/resources/MinecraftKey;)V blitSlotIcon
	a (Lesf;IILnet/minecraft/world/item/Item;)V blitSlot
	a (Letm;)V setActiveList
	a (Lnet/minecraft/stats/Statistic;)Ljava/lang/String; getTranslationKey
	aH_ ()V init
	b (Lesf;IIF)V renderBackground
	j ()Z isPauseScreen
	l ()V initLists
eys$a net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList
eys$a$a net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList$Entry
	b stat
	c statDisplay
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lesf;IIIIIIIZF)V render
	b ()Ljava/lang/String; getValueText
eys$b net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList
	a blockColumns
	m itemColumns
	n headerPressed
	o itemStatSorter
	p sortColumn
	q sortOrder
	t iconSprites
	a (I)Lnet/minecraft/stats/StatisticWrapper; getColumn
	a (II)V clickedHeader
	a (Lesf;II)V renderHeader
	a (Lnet/minecraft/stats/StatisticWrapper;)V sortByColumn
	a (Lnet/minecraft/world/item/Item;)Lnet/minecraft/network/chat/IChatBaseComponent; getString
	b ()I getRowWidth
	b (Lesf;II)V renderDecorations
	b (Lnet/minecraft/stats/StatisticWrapper;)I getColumnIndex
	c ()I getScrollbarPosition
eys$b$a net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow
	b item
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lesf;IIIIIIIZF)V render
	a (Lesf;Lnet/minecraft/stats/Statistic;IIZ)V renderStat
	b ()Lnet/minecraft/world/item/Item; getItem
eys$b$b net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRowComparator
	a (Leys$b$a;Leys$b$a;)I compare
eys$c net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList
eys$c$a net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList$MobRow
	b mobName
	c kills
	d hasKills
	e killedBy
	f wasKilledBy
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lesf;IIIIIIIZF)V render
eyt net/minecraft/client/gui/screens/achievement/StatsUpdateListener
	b LOADING_SYMBOLS
	E ()V onStatsUpdated
eyv net/minecraft/client/gui/screens/advancements/AdvancementTab
	a minecraft
	b screen
	c type
	d index
	e rootNode
	f display
	g icon
	h title
	i root
	j widgets
	k scrollX
	l scrollY
	m minX
	n minY
	o maxX
	p maxY
	q fade
	r centered
	a ()Leyw; getType
	a (DD)V scroll
	a (IIDD)Z isMouseOver
	a (Leqv;Leyz;ILnet/minecraft/advancements/AdvancementNode;)Leyv; create
	a (Lesf;II)V drawIcon
	a (Lesf;IIII)V drawTooltips
	a (Lesf;IIZ)V drawTab
	a (Leyx;Lnet/minecraft/advancements/AdvancementHolder;)V addWidget
	a (Lnet/minecraft/advancements/AdvancementHolder;)Leyx; getWidget
	a (Lnet/minecraft/advancements/AdvancementNode;)V addAdvancement
	b ()I getIndex
	b (Lesf;II)V drawContents
	c ()Lnet/minecraft/advancements/AdvancementNode; getRootNode
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	e ()Lnet/minecraft/advancements/AdvancementDisplay; getDisplay
	f ()Leyz; getScreen
eyw net/minecraft/client/gui/screens/advancements/AdvancementTabType
	a ABOVE
	b BELOW
	c LEFT
	d RIGHT
	e selectedSprites
	f unselectedSprites
	g width
	h height
	i max
	j $VALUES
	a ()I getMax
	a (I)I getX
	a (IIIDD)Z isMouseOver
	a (Lesf;IIILnet/minecraft/world/item/ItemStack;)V drawIcon
	a (Lesf;IIZI)V draw
	b ()[Leyw; $values
	b (I)I getY
eyw$a net/minecraft/client/gui/screens/advancements/AdvancementTabType$Sprites
	a first
	b middle
	c last
	a ()Lnet/minecraft/resources/MinecraftKey; first
	b ()Lnet/minecraft/resources/MinecraftKey; middle
	c ()Lnet/minecraft/resources/MinecraftKey; last
eyx net/minecraft/client/gui/screens/advancements/AdvancementWidget
	a TITLE_BOX_SPRITE
	b HEIGHT
	c BOX_X
	d BOX_WIDTH
	e FRAME_WIDTH
	f ICON_X
	g ICON_Y
	h ICON_WIDTH
	i TITLE_PADDING_LEFT
	j TITLE_PADDING_RIGHT
	k TITLE_X
	l TITLE_Y
	m TITLE_MAX_WIDTH
	n TEST_SPLIT_OFFSETS
	o tab
	p advancementNode
	q display
	r title
	s width
	t description
	u minecraft
	v parent
	w children
	x progress
	y x
	z y
	a ()I getWidth
	a (IIII)Z isMouseOver
	a (Lerh;Ljava/util/List;)F getMaxWidth
	a (Lesf;II)V draw
	a (Lesf;IIFII)V drawHover
	a (Lesf;IIZ)V drawConnectivity
	a (Leyx;)V addChild
	a (Lnet/minecraft/advancements/AdvancementNode;)Leyx; getFirstVisibleParent
	a (Lnet/minecraft/advancements/AdvancementProgress;)V setProgress
	a (Lnet/minecraft/network/chat/IChatBaseComponent;I)Ljava/util/List; findOptimalLines
	b ()V attachToParent
	c ()I getY
	d ()I getX
eyy net/minecraft/client/gui/screens/advancements/AdvancementWidgetType
	a OBTAINED
	b UNOBTAINED
	c boxSprite
	d taskFrameSprite
	e challengeFrameSprite
	f goalFrameSprite
	g $VALUES
	a ()Lnet/minecraft/resources/MinecraftKey; boxSprite
	a (Lnet/minecraft/advancements/AdvancementFrameType;)Lnet/minecraft/resources/MinecraftKey; frameSprite
	b ()[Leyy; $values
eyz net/minecraft/client/gui/screens/advancements/AdvancementsScreen
	A tabs
	B selectedTab
	C isScrolling
	a WINDOW_WIDTH
	b WINDOW_HEIGHT
	c WINDOW_INSIDE_WIDTH
	k WINDOW_INSIDE_HEIGHT
	l BACKGROUND_TILE_WIDTH
	m BACKGROUND_TILE_HEIGHT
	n BACKGROUND_TILE_COUNT_X
	o BACKGROUND_TILE_COUNT_Y
	p WINDOW_LOCATION
	q WINDOW_INSIDE_X
	s WINDOW_INSIDE_Y
	t WINDOW_TITLE_X
	u WINDOW_TITLE_Y
	v SCROLL_SPEED
	w VERY_SAD_LABEL
	x NO_ADVANCEMENTS_LABEL
	y TITLE
	z advancements
	a ()V onAdvancementsCleared
	a (DDDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (III)Z keyPressed
	a (Lesf;II)V renderWindow
	a (Lesf;IIF)V render
	a (Lesf;IIII)V renderInside
	a (Lnet/minecraft/advancements/AdvancementHolder;)V onSelectedTabChanged
	a (Lnet/minecraft/advancements/AdvancementNode;)V onAddAdvancementRoot
	a (Lnet/minecraft/advancements/AdvancementNode;Lnet/minecraft/advancements/AdvancementProgress;)V onUpdateAdvancementProgress
	aH_ ()V init
	b (Lesf;IIII)V renderTooltips
	b (Lnet/minecraft/advancements/AdvancementNode;)V onRemoveAdvancementRoot
	c (Lnet/minecraft/advancements/AdvancementNode;)V onAddAdvancementTask
	d (Lnet/minecraft/advancements/AdvancementNode;)V onRemoveAdvancementTask
	e (Lnet/minecraft/advancements/AdvancementNode;)Leyx; getAdvancementWidget
	f (Lnet/minecraft/advancements/AdvancementNode;)Leyv; getTab
	h ()V removed
ezb net/minecraft/client/gui/screens/controls/ControlsScreen
	c ROW_SPACING
	a (Lesf;IIF)V render
	aH_ ()V init
ezc net/minecraft/client/gui/screens/controls/KeyBindsList
	a keyBindsScreen
	m maxNameWidth
	b ()I getRowWidth
	c ()I getScrollbarPosition
	d ()V resetMappingAndUpdateButtons
	e ()V refreshEntries
ezc$a net/minecraft/client/gui/screens/controls/KeyBindsList$CategoryEntry
	b name
	c width
	a (Lesf;IIIIIIIZF)V render
	a (Lewo;)Lesc; nextFocusPath
	b ()Ljava/util/List; narratables
	d ()V refreshEntry
	i ()Ljava/util/List; children
ezc$b net/minecraft/client/gui/screens/controls/KeyBindsList$Entry
	d ()V refreshEntry
ezc$c net/minecraft/client/gui/screens/controls/KeyBindsList$KeyEntry
	b key
	c name
	d changeButton
	e resetButton
	f hasCollision
	a (Lesf;IIIIIIIZF)V render
	b ()Ljava/util/List; narratables
	d ()V refreshEntry
	i ()Ljava/util/List; children
ezd net/minecraft/client/gui/screens/controls/KeyBindsScreen
	c selectedKey
	k lastKeySelection
	l keyBindsList
	m resetButton
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	aH_ ()V init
	b (Lesf;IIF)V renderBackground
ezf net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen
	a SLOT_SPRITE
	b SELECTION_SPRITE
	c GAMEMODE_SWITCHER_LOCATION
	k SPRITE_SHEET_WIDTH
	l SPRITE_SHEET_HEIGHT
	m SLOT_AREA
	n SLOT_PADDING
	o SLOT_AREA_PADDED
	p HELP_TIPS_OFFSET_Y
	q ALL_SLOTS_WIDTH
	s SELECT_KEY
	t previousHovered
	u currentlyHovered
	v firstMouseX
	w firstMouseY
	x setFirstMousePos
	y slots
	D ()V switchToHoveredGameMode
	E ()Z checkToClose
	a (III)Z keyPressed
	a (Leqv;Lezf$a;)V switchToHoveredGameMode
	a (Lesf;IIF)V render
	aH_ ()V init
	b (Lesf;IIF)V renderBackground
	j ()Z isPauseScreen
	l ()Lnet/minecraft/world/level/EnumGamemode; getDefaultSelected
ezf$a net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon
	a CREATIVE
	b SURVIVAL
	c ADVENTURE
	d SPECTATOR
	e VALUES
	f ICON_TOP_LEFT
	g name
	h command
	i renderStack
	j ICON_AREA
	k $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	a (Lesf;II)V drawIcon
	a (Lnet/minecraft/world/level/EnumGamemode;)Lezf$a; getFromGameType
	b ()Ljava/lang/String; getCommand
	c ()Lezf$a; getNext
	d ()[Lezf$a; $values
ezf$b net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeSlot
	b icon
	c isSelected
	a (Lesf;)V drawSlot
	a (Lewi;)V updateWidgetNarration
	b (Lesf;)V drawSelection
	b (Lesf;IIF)V renderWidget
	b (Z)V setSelected
	o ()Z isHoveredOrFocused
ezh net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen
	a commandEdit
	b previousEdit
	c doneButton
	k cancelButton
	l outputButton
	m SET_COMMAND_LABEL
	n COMMAND_LABEL
	o PREVIOUS_OUTPUT_LABEL
	p commandSuggestions
	A ()Lnet/minecraft/network/chat/IChatBaseComponent; getUsageNarration
	D ()I getPreviousY
	E ()V onDone
	a (DDDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Leqv;II)V resize
	a (Lesf;IIF)V render
	a (Ljava/lang/String;)V onEdited
	a (Lnet/minecraft/world/level/CommandBlockListenerAbstract;)V populateAndSendPacket
	aH_ ()V init
	c ()V tick
	c (Z)V updatePreviousOutput
	l ()Lnet/minecraft/world/level/CommandBlockListenerAbstract; getCommandBlock
ezi net/minecraft/client/gui/screens/inventory/AbstractContainerScreen
	A clickedSlot
	B snapbackEnd
	C quickdropSlot
	D lastClickSlot
	E isSplittingStack
	F draggingItem
	G snapbackStartX
	H snapbackStartY
	I snapbackTime
	J snapbackItem
	K quickdropTime
	L quickCraftingType
	M quickCraftingButton
	N skipNextRelease
	O quickCraftingRemainder
	P lastClickTime
	Q lastClickButton
	R doubleclick
	S lastQuickMoved
	a INVENTORY_LOCATION
	b SLOT_ITEM_BLIT_OFFSET
	c imageWidth
	k imageHeight
	l titleLabelX
	m titleLabelY
	n inventoryLabelX
	o inventoryLabelY
	p menu
	q playerInventoryTitle
	s hoveredSlot
	t leftPos
	u topPos
	v quickCraftSlots
	w isQuickCrafting
	x SNAPBACK_SPEED
	y QUICKDROP_DELAY
	z HOVER_ITEM_BLIT_OFFSET
	D ()V containerTick
	E ()Lnet/minecraft/world/inventory/Container; getMenu
	H ()V recalculateQuickCraftRemaining
	a (DD)Lnet/minecraft/world/inventory/Slot; findSlot
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (DDIII)Z hasClickedOutside
	a (I)V checkHotbarMouseClicked
	a (II)Z checkHotbarKeyPressed
	a (III)Z keyPressed
	a (IIIIDD)Z isHovering
	a (Lesf;FII)V renderBg
	a (Lesf;II)V renderTooltip
	a (Lesf;IIF)V render
	a (Lesf;III)V renderSlotHighlight
	a (Lesf;Lnet/minecraft/world/inventory/Slot;)V renderSlot
	a (Lesf;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V renderFloatingItem
	a (Lnet/minecraft/world/inventory/Slot;DD)Z isHovering
	a (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/InventoryClickType;)V slotClicked
	a (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; getTooltipFromContainerItem
	aH_ ()V init
	az_ ()V onClose
	b (DDI)Z mouseReleased
	b (Lesf;II)V renderLabels
	b (Lesf;IIF)V renderBackground
	c ()V tick
	h ()V removed
	j ()Z isPauseScreen
	l ()V clearDraggingState
ezj net/minecraft/client/gui/screens/inventory/AbstractFurnaceScreen
	A litProgressSprite
	B burnProgressSprite
	x recipeBookComponent
	y widthTooNarrow
	z texture
	D ()V containerTick
	F ()V recipesUpdated
	G ()Lfbw; getRecipeBookComponent
	a (CI)Z charTyped
	a (DDI)Z mouseClicked
	a (DDIII)Z hasClickedOutside
	a (III)Z keyPressed
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
	a (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/InventoryClickType;)V slotClicked
	aH_ ()V init
ezk net/minecraft/client/gui/screens/inventory/AbstractSignEditScreen
	a woodType
	b sign
	c text
	k messages
	l isFrontText
	m frame
	n line
	o signField
	D ()Z isValid
	E ()V onDone
	a (CI)Z charTyped
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	a (Lesf;Lnet/minecraft/world/level/block/state/IBlockData;)V renderSignBackground
	a (Ljava/lang/String;)V setMessage
	aH_ ()V init
	az_ ()V onClose
	b (Lesf;Lnet/minecraft/world/level/block/state/IBlockData;)V offsetSign
	c ()V tick
	c (Lesf;)V renderSign
	d (Lesf;)V renderSignText
	h ()V removed
	j ()Z isPauseScreen
	l ()Lorg/joml/Vector3f; getSignTextScale
ezl net/minecraft/client/gui/screens/inventory/AnvilScreen
	A ANVIL_LOCATION
	B TOO_EXPENSIVE_TEXT
	C name
	D player
	x TEXT_FIELD_SPRITE
	y TEXT_FIELD_DISABLED_SPRITE
	z ERROR_SPRITE
	F ()V subInit
	a (III)Z keyPressed
	a (Leqv;II)V resize
	a (Lesf;FII)V renderBg
	a (Ljava/lang/String;)V onNameChanged
	a (Lnet/minecraft/world/inventory/Container;ILnet/minecraft/world/item/ItemStack;)V slotChanged
	b (Lesf;II)V renderLabels
	c (Lesf;II)V renderErrorIcon
	d (Lesf;IIF)V renderFg
ezm net/minecraft/client/gui/screens/inventory/BeaconScreen
	A BUTTON_HIGHLIGHTED_SPRITE
	B BUTTON_SPRITE
	C CONFIRM_SPRITE
	D CANCEL_SPRITE
	E PRIMARY_EFFECT_LABEL
	F SECONDARY_EFFECT_LABEL
	G beaconButtons
	H primary
	I secondary
	x BEACON_LOCATION
	y BUTTON_DISABLED_SPRITE
	z BUTTON_SELECTED_SPRITE
	D ()V containerTick
	F ()V updateButtons
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
	a (Leso;)V addBeaconButton
	aH_ ()V init
	b (Lesf;II)V renderLabels
ezm$a net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconButton
	a (I)V updateStatus
ezm$b net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconCancelButton
	a (I)V updateStatus
	c ()V onPress
ezm$c net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconConfirmButton
	a (I)V updateStatus
	c ()V onPress
ezm$d net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton
	a tier
	c isPrimary
	d effect
	l sprite
	a (I)V updateStatus
	a (Lesf;)V renderIcon
	a (Lnet/minecraft/world/effect/MobEffectList;)V setEffect
	aE_ ()Lnet/minecraft/network/chat/IChatMutableComponent; createNarrationMessage
	b (Lnet/minecraft/world/effect/MobEffectList;)Lnet/minecraft/network/chat/IChatMutableComponent; createEffectDescription
	c ()V onPress
ezm$e net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton
	a selected
	a ()Z isSelected
	a (Lesf;)V renderIcon
	a (Lewi;)V updateWidgetNarration
	b (Lesf;IIF)V renderWidget
	b (Z)V setSelected
ezm$f net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconSpriteScreenButton
	a sprite
	a (Lesf;)V renderIcon
ezm$g net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconUpgradePowerButton
	a (I)V updateStatus
	b (Lnet/minecraft/world/effect/MobEffectList;)Lnet/minecraft/network/chat/IChatMutableComponent; createEffectDescription
ezn net/minecraft/client/gui/screens/inventory/BlastFurnaceScreen
	A TEXTURE
	y LIT_PROGRESS_SPRITE
	z BURN_PROGRESS_SPRITE
ezo net/minecraft/client/gui/screens/inventory/BookEditScreen
	A lastClickTime
	B lastIndex
	C forwardButton
	D backButton
	E doneButton
	F signButton
	G finalizeButton
	H cancelButton
	I hand
	J displayCache
	K pageMsg
	L ownerText
	a TEXT_WIDTH
	b TEXT_HEIGHT
	c IMAGE_WIDTH
	k IMAGE_HEIGHT
	l EDIT_TITLE_LABEL
	m FINALIZE_WARNING_LABEL
	n BLACK_CURSOR
	o GRAY_CURSOR
	p owner
	q book
	s isModified
	t isSigning
	u frameTick
	v currentPage
	w pages
	x title
	y pageEdit
	z titleEdit
	D ()I getNumPages
	E ()V pageBack
	F ()V pageForward
	G ()V updateButtonVisibility
	H ()V eraseEmptyTrailingPages
	I ()V appendPageToBook
	J ()V keyUp
	K ()V keyDown
	L ()V keyHome
	M ()V keyEnd
	N ()Ljava/lang/String; getCurrentPageText
	O ()Lezo$a; getDisplayCache
	P ()V clearDisplayCache
	Q ()V clearDisplayCacheAfterPageChange
	R ()Lezo$a; rebuildDisplayCache
	a (CI)Z charTyped
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (I)V changeLine
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	a (Lesf;Lezo$c;Z)V renderCursor
	a (Lesf;[Lfoj;)V renderHighlight
	a (Lezo$c;)Lezo$c; convertScreenToLocal
	a (Lezo$c;Lezo$c;)Lfoj; createSelection
	a (Ljava/lang/String;)V setClipboard
	a (Ljava/lang/String;Lerh;IIII)Lfoj; createPartialLineSelection
	a ([II)I findLineFromPos
	aH_ ()V init
	b (I)V selectWord
	b (Lesf;IIF)V renderBackground
	b (Lezo$c;)Lezo$c; convertLocalToScreen
	b (Ljava/lang/String;)V setCurrentPageText
	c ()V tick
	c (III)Z bookKeyPressed
	c (Z)V saveChanges
	d (III)Z titleKeyPressed
	e (Z)V updateLocalCopy
	l ()Ljava/lang/String; getClipboard
ezo$a net/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache
	a EMPTY
	b fullText
	c cursor
	d cursorAtEnd
	e lineStarts
	f lines
	g selection
	a (I)I findLineStart
	a (II)I changeLine
	a (Lesd;Lezo$c;)I getIndexAtPosition
	b (I)I findLineEnd
ezo$b net/minecraft/client/gui/screens/inventory/BookEditScreen$LineInfo
	a style
	b contents
	c asComponent
	d x
	e y
ezo$c net/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i
	a x
	b y
ezp net/minecraft/client/gui/screens/inventory/BookViewScreen
	a PAGE_INDICATOR_TEXT_Y_OFFSET
	b PAGE_TEXT_X_OFFSET
	c PAGE_TEXT_Y_OFFSET
	k EMPTY_ACCESS
	l BOOK_LOCATION
	m TEXT_WIDTH
	n TEXT_HEIGHT
	o IMAGE_WIDTH
	p IMAGE_HEIGHT
	q bookAccess
	s currentPage
	t cachedPageComponents
	u cachedPage
	v pageMsg
	w forwardButton
	x backButton
	y playTurnSound
	D ()V createPageControlButtons
	E ()I getNumPages
	F ()V pageBack
	G ()V pageForward
	H ()V closeScreen
	I ()V updateButtonVisibility
	a (DD)Lnet/minecraft/network/chat/ChatModifier; getClickedComponentStyleAt
	a (DDI)Z mouseClicked
	a (I)Z setPage
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	a (Lezp$a;)V setBookAccess
	a (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/List; loadPages
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/function/Consumer;)V loadPages
	a (Lnet/minecraft/network/chat/ChatModifier;)Z handleComponentClicked
	aH_ ()V init
	b (I)Z forcePage
	b (Lesf;IIF)V renderBackground
	l ()V createMenuControls
ezp$a net/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess
	a ()I getPageCount
	a (I)Lnet/minecraft/network/chat/IChatFormatted; getPageRaw
	a (Lnet/minecraft/world/item/ItemStack;)Lezp$a; fromItem
	b (I)Lnet/minecraft/network/chat/IChatFormatted; getPage
ezp$b net/minecraft/client/gui/screens/inventory/BookViewScreen$WritableBookAccess
	a pages
	a ()I getPageCount
	a (I)Lnet/minecraft/network/chat/IChatFormatted; getPageRaw
	b (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; readPages
ezp$c net/minecraft/client/gui/screens/inventory/BookViewScreen$WrittenBookAccess
	a pages
	a ()I getPageCount
	a (I)Lnet/minecraft/network/chat/IChatFormatted; getPageRaw
	b (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; readPages
ezq net/minecraft/client/gui/screens/inventory/BrewingStandScreen
	A BREWING_STAND_LOCATION
	B BUBBLELENGTHS
	x FUEL_LENGTH_SPRITE
	y BREW_PROGRESS_SPRITE
	z BUBBLES_SPRITE
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
	aH_ ()V init
ezr net/minecraft/client/gui/screens/inventory/CartographyTableScreen
	A MAP_SPRITE
	B LOCKED_SPRITE
	C BG_LOCATION
	x ERROR_SPRITE
	y SCALED_MAP_SPRITE
	z DUPLICATED_MAP_SPRITE
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
	a (Lesf;Ljava/lang/Integer;Lnet/minecraft/world/level/saveddata/maps/WorldMap;IIF)V renderMap
	a (Lesf;Ljava/lang/Integer;Lnet/minecraft/world/level/saveddata/maps/WorldMap;ZZZZ)V renderResultingMap
ezs net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen
	m autoCommandBlock
	n modeButton
	o conditionalButton
	p autoexecButton
	q mode
	s conditional
	t autoexec
	D ()I getPreviousY
	F ()V updateGui
	a (Leqv;II)V resize
	a (Lnet/minecraft/world/level/CommandBlockListenerAbstract;)V populateAndSendPacket
	aH_ ()V init
	e (Z)V enableControls
	l ()Lnet/minecraft/world/level/CommandBlockListenerAbstract; getCommandBlock
ezt net/minecraft/client/gui/screens/inventory/ContainerScreen
	x CONTAINER_BACKGROUND
	y containerRows
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
ezu net/minecraft/client/gui/screens/inventory/CraftingScreen
	x CRAFTING_TABLE_LOCATION
	y recipeBookComponent
	z widthTooNarrow
	D ()V containerTick
	F ()V recipesUpdated
	G ()Lfbw; getRecipeBookComponent
	a (DDI)Z mouseClicked
	a (DDIII)Z hasClickedOutside
	a (IIIIDD)Z isHovering
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
	a (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/InventoryClickType;)V slotClicked
	aH_ ()V init
ezv net/minecraft/client/gui/screens/inventory/CreativeInventoryListener
	a minecraft
	a (Lnet/minecraft/world/inventory/Container;II)V dataChanged
	a (Lnet/minecraft/world/inventory/Container;ILnet/minecraft/world/item/ItemStack;)V slotChanged
ezw net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen
	A SELECTED_TOP_TABS
	B UNSELECTED_BOTTOM_TABS
	C SELECTED_BOTTOM_TABS
	D GUI_CREATIVE_TAB_PREFIX
	E CUSTOM_SLOT_LOCK
	F NUM_ROWS
	G NUM_COLS
	H TAB_WIDTH
	I TAB_HEIGHT
	J SCROLLER_WIDTH
	K SCROLLER_HEIGHT
	L CONTAINER
	M TRASH_SLOT_TOOLTIP
	N TEXT_COLOR
	O selectedTab
	P scrollOffs
	Q scrolling
	R searchBox
	S originalSlots
	T destroyItemSlot
	U listener
	V ignoreTextInput
	W hasClickedOutside
	X visibleTags
	Y displayOperatorCreativeTab
	x SCROLLER_SPRITE
	y SCROLLER_DISABLED_SPRITE
	z UNSELECTED_TOP_TABS
	D ()V containerTick
	F ()Z isInventoryOpen
	G ()V refreshSearchResults
	I ()Z canScroll
	a (CI)Z charTyped
	a (DD)Z insideScrollbar
	a (DDDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (DDIII)Z hasClickedOutside
	a (III)Z keyPressed
	a (Leqv;II)V resize
	a (Leqv;IZZ)V handleHotbarLoadOrSave
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
	a (Lesf;Lnet/minecraft/world/item/CreativeModeTab;)V renderTabButton
	a (Lesf;Lnet/minecraft/world/item/CreativeModeTab;II)Z checkTabHovering
	a (Ljava/lang/String;)V updateVisibleTags
	a (Ljava/util/Collection;)V refreshCurrentTabContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z hasPermissions
	a (Lnet/minecraft/world/flag/FeatureFlagSet;ZLhg$b;)V tryRefreshInvalidatedTabs
	a (Lnet/minecraft/world/inventory/Slot;)Z isCreativeSlot
	a (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/InventoryClickType;)V slotClicked
	a (Lnet/minecraft/world/item/CreativeModeTab;)V selectTab
	a (Lnet/minecraft/world/item/CreativeModeTab;DD)Z checkTabClicked
	a (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; getTooltipFromContainerItem
	aH_ ()V init
	b (DDI)Z mouseReleased
	b (III)Z keyReleased
	b (Lesf;II)V renderLabels
	b (Lnet/minecraft/world/item/CreativeModeTab;)I getTabX
	c (Lnet/minecraft/world/item/CreativeModeTab;)I getTabY
	h ()V removed
ezw$a net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$CustomCreativeSlot
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z mayPickup
ezw$b net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$ItemPickerMenu
	k items
	l inventoryMenu
	a (F)I getRowIndexForScroll
	a (FD)F subtractInputFromScroll
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	b (F)V scrollTo
	b (Lnet/minecraft/world/inventory/Slot;)Z canDragTo
	b (Lnet/minecraft/world/item/ItemStack;)V setCarried
	e (I)F getScrollForRowIndex
	g ()Lnet/minecraft/world/item/ItemStack; getCarried
	l ()I calculateRowCount
	m ()Z canScroll
ezw$c net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$SlotWrapper
	a target
	a ()I getMaxStackSize
	a (I)Lnet/minecraft/world/item/ItemStack; remove
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z mayPickup
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V setByPlayer
	a_ (Lnet/minecraft/world/item/ItemStack;)I getMaxStackSize
	b ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
	c ()Z isActive
	d ()V setChanged
	e ()Lnet/minecraft/world/item/ItemStack; getItem
	e (Lnet/minecraft/world/item/ItemStack;)V set
	f ()Z hasItem
ezx net/minecraft/client/gui/screens/inventory/CyclingSlotBackground
	a ICON_CHANGE_TICK_RATE
	b ICON_SIZE
	c ICON_TRANSITION_TICK_DURATION
	d slotIndex
	e icons
	f tick
	g iconIndex
	a (F)F getIconTransitionTransparency
	a (Ljava/util/List;)V tick
	a (Lnet/minecraft/world/inventory/Container;Lesf;FII)V render
	a (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/resources/MinecraftKey;FLesf;II)V renderIcon
ezy net/minecraft/client/gui/screens/inventory/DispenserScreen
	x CONTAINER_LOCATION
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
	aH_ ()V init
ezz net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen
	x EFFECT_BACKGROUND_LARGE_SPRITE
	y EFFECT_BACKGROUND_SMALL_SPRITE
	H ()Z canSeeEffects
	a (Lesf;IIF)V render
	a (Lesf;IILjava/lang/Iterable;)V renderLabels
	a (Lesf;IILjava/lang/Iterable;Z)V renderBackgrounds
	a (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/network/chat/IChatBaseComponent; getEffectName
	b (Lesf;IILjava/lang/Iterable;Z)V renderIcons
	c (Lesf;II)V renderEffects
faa net/minecraft/client/gui/screens/inventory/EnchantmentNames
	a ALT_FONT
	b ROOT_STYLE
	c INSTANCE
	d random
	e words
	a ()Lfaa; getInstance
	a (J)V initSeed
	a (Lesd;I)Lnet/minecraft/network/chat/IChatFormatted; getRandomName
fab net/minecraft/client/gui/screens/inventory/EnchantmentScreen
	A flipT
	B flipA
	C open
	D oOpen
	E ENABLED_LEVEL_SPRITES
	F DISABLED_LEVEL_SPRITES
	G ENCHANTMENT_SLOT_DISABLED_SPRITE
	H ENCHANTMENT_SLOT_HIGHLIGHTED_SPRITE
	I ENCHANTMENT_SLOT_SPRITE
	J ENCHANTING_TABLE_LOCATION
	K ENCHANTING_BOOK_LOCATION
	L random
	M bookModel
	N last
	x time
	y flip
	z oFlip
	D ()V containerTick
	F ()V tickBook
	a (DDI)Z mouseClicked
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
	aH_ ()V init
	d (Lesf;IIF)V renderBook
fac net/minecraft/client/gui/screens/inventory/FurnaceScreen
	A TEXTURE
	y LIT_PROGRESS_SPRITE
	z BURN_PROGRESS_SPRITE
fad net/minecraft/client/gui/screens/inventory/GrindstoneScreen
	x ERROR_SPRITE
	y GRINDSTONE_LOCATION
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
fae net/minecraft/client/gui/screens/inventory/HangingSignEditScreen
	b MAGIC_BACKGROUND_SCALE
	c TEXT_SCALE
	k TEXTURE_WIDTH
	l TEXTURE_HEIGHT
	m texture
	a (Lesf;Lnet/minecraft/world/level/block/state/IBlockData;)V renderSignBackground
	b (Lesf;Lnet/minecraft/world/level/block/state/IBlockData;)V offsetSign
	l ()Lorg/joml/Vector3f; getSignTextScale
faf net/minecraft/client/gui/screens/inventory/HopperScreen
	x HOPPER_LOCATION
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
fag net/minecraft/client/gui/screens/inventory/HorseInventoryScreen
	A ARMOR_SLOT_SPRITE
	B HORSE_INVENTORY_LOCATION
	C horse
	D xMouse
	E yMouse
	x CHEST_SLOTS_SPRITE
	y SADDLE_SLOT_SPRITE
	z LLAMA_ARMOR_SLOT_SPRITE
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
fah net/minecraft/client/gui/screens/inventory/InventoryScreen
	A widthTooNarrow
	B buttonClicked
	x xMouse
	y yMouse
	z recipeBookComponent
	D ()V containerTick
	F ()V recipesUpdated
	G ()Lfbw; getRecipeBookComponent
	a (DDI)Z mouseClicked
	a (DDIII)Z hasClickedOutside
	a (IIIIDD)Z isHovering
	a (Lesf;FFILorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;Lnet/minecraft/world/entity/EntityLiving;)V renderEntityInInventory
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
	a (Lesf;IIIIIFFFLnet/minecraft/world/entity/EntityLiving;)V renderEntityInInventoryFollowsMouse
	a (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/InventoryClickType;)V slotClicked
	aH_ ()V init
	b (DDI)Z mouseReleased
	b (Lesf;II)V renderLabels
fai net/minecraft/client/gui/screens/inventory/ItemCombinerScreen
	x menuResource
	F ()V subInit
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
	a (Lnet/minecraft/world/inventory/Container;II)V dataChanged
	a (Lnet/minecraft/world/inventory/Container;ILnet/minecraft/world/item/ItemStack;)V slotChanged
	aH_ ()V init
	c (Lesf;II)V renderErrorIcon
	d (Lesf;IIF)V renderFg
	h ()V removed
faj net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen
	a MAX_LEVELS
	b JOINT_LABEL
	c POOL_LABEL
	k NAME_LABEL
	l TARGET_LABEL
	m FINAL_STATE_LABEL
	n jigsawEntity
	o nameEdit
	p targetEdit
	q poolEdit
	s finalStateEdit
	t levels
	u keepJigsaws
	v jointButton
	w doneButton
	x generateButton
	y joint
	D ()V onCancel
	E ()V sendToServer
	F ()V sendGenerate
	G ()V updateValidity
	a (III)Z keyPressed
	a (Leqv;II)V resize
	a (Lesf;IIF)V render
	aH_ ()V init
	az_ ()V onClose
	l ()V onDone
fak net/minecraft/client/gui/screens/inventory/LecternScreen
	q menu
	s listener
	E ()Lnet/minecraft/world/inventory/Container; getMenu
	F ()V pageBack
	G ()V pageForward
	H ()V closeScreen
	I ()Lnet/minecraft/world/inventory/ContainerLectern; getMenu
	J ()V bookChanged
	K ()V pageChanged
	aH_ ()V init
	az_ ()V onClose
	b (I)Z forcePage
	c (I)V sendButtonClick
	h ()V removed
	j ()Z isPauseScreen
	l ()V createMenuControls
fal net/minecraft/client/gui/screens/inventory/LoomScreen
	A SCROLLER_SPRITE
	B SCROLLER_DISABLED_SPRITE
	C PATTERN_SELECTED_SPRITE
	D PATTERN_HIGHLIGHTED_SPRITE
	E PATTERN_SPRITE
	F ERROR_SPRITE
	G BG_LOCATION
	H PATTERN_COLUMNS
	I PATTERN_ROWS
	J SCROLLER_WIDTH
	K SCROLLER_HEIGHT
	L PATTERN_IMAGE_SIZE
	M SCROLLER_FULL_HEIGHT
	N PATTERNS_X
	O PATTERNS_Y
	P flag
	Q resultBannerPatterns
	R bannerStack
	S dyeStack
	T patternStack
	U displayPatterns
	V hasMaxPatterns
	W scrollOffs
	X scrolling
	Y startRow
	x BANNER_SLOT_SPRITE
	y DYE_SLOT_SPRITE
	z PATTERN_SLOT_SPRITE
	F ()I totalRowCount
	G ()V containerChanged
	a (DDDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (DDIII)Z hasClickedOutside
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
	a (Lesf;Lnet/minecraft/core/Holder;II)V renderPattern
	aH_ ()V init
fam net/minecraft/client/gui/screens/inventory/MenuAccess
	E ()Lnet/minecraft/world/inventory/Container; getMenu
fan net/minecraft/client/gui/screens/inventory/MerchantScreen
	A EXPERIENCE_BAR_RESULT_SPRITE
	B SCROLLER_SPRITE
	C SCROLLER_DISABLED_SPRITE
	D TRADE_ARROW_OUT_OF_STOCK_SPRITE
	E TRADE_ARROW_SPRITE
	F DISCOUNT_STRIKETHRUOGH_SPRITE
	G VILLAGER_LOCATION
	H TEXTURE_WIDTH
	I TEXTURE_HEIGHT
	J MERCHANT_MENU_PART_X
	K PROGRESS_BAR_X
	L PROGRESS_BAR_Y
	M SELL_ITEM_1_X
	N SELL_ITEM_2_X
	O BUY_ITEM_X
	P LABEL_Y
	Q NUMBER_OF_OFFER_BUTTONS
	R TRADE_BUTTON_X
	S TRADE_BUTTON_HEIGHT
	T TRADE_BUTTON_WIDTH
	U SCROLLER_HEIGHT
	V SCROLLER_WIDTH
	W SCROLL_BAR_HEIGHT
	X SCROLL_BAR_TOP_POS_Y
	Y SCROLL_BAR_START_X
	Z TRADES_LABEL
	aa DEPRECATED_TOOLTIP
	ab shopItem
	ac tradeOfferButtons
	ad scrollOff
	ae isDragging
	x OUT_OF_STOCK_SPRITE
	y EXPERIENCE_BAR_BACKGROUND_SPRITE
	z EXPERIENCE_BAR_CURRENT_SPRITE
	F ()V postButtonClick
	a (DDDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (I)Z canScroll
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
	a (Lesf;IILnet/minecraft/world/item/trading/MerchantRecipe;)V renderProgressBar
	a (Lesf;IILnet/minecraft/world/item/trading/MerchantRecipeList;)V renderScroller
	a (Lesf;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;II)V renderAndDecorateCostA
	a (Lesf;Lnet/minecraft/world/item/trading/MerchantRecipe;II)V renderButtonArrows
	aH_ ()V init
	b (Lesf;II)V renderLabels
fan$a net/minecraft/client/gui/screens/inventory/MerchantScreen$TradeOfferButton
	a index
	a ()I getIndex
	a (Lesf;II)V renderToolTip
fao net/minecraft/client/gui/screens/inventory/MinecartCommandBlockEditScreen
	m commandBlock
	D ()I getPreviousY
	a (Lnet/minecraft/world/level/CommandBlockListenerAbstract;)V populateAndSendPacket
	aH_ ()V init
	l ()Lnet/minecraft/world/level/CommandBlockListenerAbstract; getCommandBlock
fap net/minecraft/client/gui/screens/inventory/PageButton
	a PAGE_FORWARD_HIGHLIGHTED_SPRITE
	b PAGE_FORWARD_SPRITE
	c PAGE_BACKWARD_HIGHLIGHTED_SPRITE
	d PAGE_BACKWARD_SPRITE
	s isForward
	t playTurnSound
	a (Lgdq;)V playDownSound
	b (Lesf;IIF)V renderWidget
faq net/minecraft/client/gui/screens/inventory/ShulkerBoxScreen
	x CONTAINER_TEXTURE
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
far net/minecraft/client/gui/screens/inventory/SignEditScreen
	b MAGIC_SCALE_NUMBER
	c MAGIC_TEXT_SCALE
	k TEXT_SCALE
	l signModel
	a (Lesf;Lnet/minecraft/world/level/block/state/IBlockData;)V renderSignBackground
	aH_ ()V init
	b (Lesf;Lnet/minecraft/world/level/block/state/IBlockData;)V offsetSign
	l ()Lorg/joml/Vector3f; getSignTextScale
fas net/minecraft/client/gui/screens/inventory/SmithingScreen
	A MISSING_TEMPLATE_TOOLTIP
	B ERROR_TOOLTIP
	C EMPTY_SLOT_SMITHING_TEMPLATES
	D TITLE_LABEL_X
	E TITLE_LABEL_Y
	F ERROR_ICON_WIDTH
	G ERROR_ICON_HEIGHT
	H ERROR_ICON_X
	I ERROR_ICON_Y
	J TOOLTIP_WIDTH
	K ARMOR_STAND_Y_ROT
	L ARMOR_STAND_X_ROT
	M ARMOR_STAND_TRANSLATION
	N ARMOR_STAND_ANGLE
	O ARMOR_STAND_SCALE
	P ARMOR_STAND_OFFSET_Y
	Q ARMOR_STAND_OFFSET_X
	R templateIcon
	S baseIcon
	T additionalIcon
	U armorStandPreview
	x ERROR_SPRITE
	y EMPTY_SLOT_SMITHING_TEMPLATE_ARMOR_TRIM
	z EMPTY_SLOT_SMITHING_TEMPLATE_NETHERITE_UPGRADE
	D ()V containerTick
	F ()V subInit
	G ()Ljava/util/Optional; getTemplateItem
	H ()Z hasRecipeError
	a (Lesf;FII)V renderBg
	a (Lesf;IIF)V render
	a (Lnet/minecraft/world/inventory/Container;ILnet/minecraft/world/item/ItemStack;)V slotChanged
	b (Lnet/minecraft/world/item/ItemStack;)V updateArmorStandPreview
	c (Lesf;II)V renderErrorIcon
	d (Lesf;II)V renderOnboardingTooltips
fat net/minecraft/client/gui/screens/inventory/SmokerScreen
	A TEXTURE
	y LIT_PROGRESS_SPRITE
	z BURN_PROGRESS_SPRITE
fau net/minecraft/client/gui/screens/inventory/StonecutterScreen
	A RECIPE_HIGHLIGHTED_SPRITE
	B RECIPE_SPRITE
	C BG_LOCATION
	D SCROLLER_WIDTH
	E SCROLLER_HEIGHT
	F RECIPES_COLUMNS
	G RECIPES_ROWS
	H RECIPES_IMAGE_SIZE_WIDTH
	I RECIPES_IMAGE_SIZE_HEIGHT
	J SCROLLER_FULL_HEIGHT
	K RECIPES_X
	L RECIPES_Y
	M scrollOffs
	N scrolling
	O startIndex
	P displayRecipes
	x SCROLLER_SPRITE
	y SCROLLER_DISABLED_SPRITE
	z RECIPE_SELECTED_SPRITE
	F ()I getOffscreenRows
	G ()Z isScrollBarActive
	H ()V containerChanged
	a (DDDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (Lesf;FII)V renderBg
	a (Lesf;II)V renderTooltip
	a (Lesf;IIF)V render
	a (Lesf;IIIII)V renderButtons
	b (Lesf;III)V renderRecipes
fav net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen
	A nameEdit
	B posXEdit
	C posYEdit
	D posZEdit
	E sizeXEdit
	F sizeYEdit
	G sizeZEdit
	H integrityEdit
	I seedEdit
	J dataEdit
	K saveButton
	L loadButton
	M rot0Button
	N rot90Button
	O rot180Button
	P rot270Button
	Q detectButton
	R includeEntitiesButton
	S mirrorButton
	T toggleAirButton
	U toggleBoundingBox
	V decimalFormat
	a NAME_LABEL
	b POSITION_LABEL
	c SIZE_LABEL
	k INTEGRITY_LABEL
	l CUSTOM_DATA_LABEL
	m INCLUDE_ENTITIES_LABEL
	n DETECT_SIZE_LABEL
	o SHOW_AIR_LABEL
	p SHOW_BOUNDING_BOX_LABEL
	q ALL_MODES
	s DEFAULT_MODES
	t structure
	u initialMirror
	v initialRotation
	w initialMode
	x initialEntityIgnoring
	y initialShowAir
	z initialShowBoundingBox
	D ()V onCancel
	E ()V updateDirectionButtons
	a (III)Z keyPressed
	a (Leqv;II)V resize
	a (Lesf;IIF)V render
	a (Ljava/lang/String;)J parseSeed
	a (Lnet/minecraft/world/level/block/entity/TileEntityStructure$UpdateType;)Z sendToServer
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyStructureMode;)V updateMode
	aH_ ()V init
	az_ ()V onClose
	b (Ljava/lang/String;)F parseIntegrity
	c (Ljava/lang/String;)I parseCoordinate
	j ()Z isPauseScreen
	l ()V onDone
fax net/minecraft/client/gui/screens/inventory/tooltip/BelowOrAboveWidgetTooltipPositioner
	a widget
	a (IIIIII)Lorg/joml/Vector2ic; positionTooltip
fay net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip
	a BACKGROUND_SPRITE
	b MARGIN_Y
	c BORDER_WIDTH
	d SLOT_SIZE_X
	e SLOT_SIZE_Y
	f items
	g weight
	a ()I getHeight
	a (IIIZLesf;Lesd;)V renderSlot
	a (Lesd;)I getWidth
	a (Lesd;IILesf;)V renderImage
	a (Lesf;IILfay$a;)V blit
	b ()I backgroundWidth
	c ()I backgroundHeight
	d ()I gridSizeX
	e ()I gridSizeY
fay$a net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture
	a BLOCKED_SLOT
	b SLOT
	c sprite
	d w
	e h
	f $VALUES
	a ()[Lfay$a; $values
faz net/minecraft/client/gui/screens/inventory/tooltip/ClientTextTooltip
	a text
	a ()I getHeight
	a (Lesd;)I getWidth
	a (Lesd;IILorg/joml/Matrix4f;Lfoe$a;)V renderText
fba net/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent
	a ()I getHeight
	a (Lesd;)I getWidth
	a (Lesd;IILesf;)V renderImage
	a (Lesd;IILorg/joml/Matrix4f;Lfoe$a;)V renderText
	a (Lnet/minecraft/util/FormattedString;)Lfba; create
	a (Lnet/minecraft/world/inventory/tooltip/TooltipComponent;)Lfba; create
fbb net/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner
	a (IIIIII)Lorg/joml/Vector2ic; positionTooltip
fbc net/minecraft/client/gui/screens/inventory/tooltip/DefaultTooltipPositioner
	a INSTANCE
	a (IIIIII)Lorg/joml/Vector2ic; positionTooltip
	a (IILorg/joml/Vector2i;II)V positionTooltip
fbd net/minecraft/client/gui/screens/inventory/tooltip/MenuTooltipPositioner
	a MAX_OVERLAP_WITH_WIDGET
	b MAX_DISTANCE_TO_WIDGET
	c MARGIN
	d MOUSE_OFFSET_X
	e widget
	a (III)I getOffset
	a (IIIIII)Lorg/joml/Vector2ic; positionTooltip
fbe net/minecraft/client/gui/screens/inventory/tooltip/TooltipRenderUtil
	a MOUSE_OFFSET
	b PADDING_LEFT
	c PADDING_RIGHT
	d PADDING_TOP
	e PADDING_BOTTOM
	f PADDING
	g BACKGROUND_COLOR
	h BORDER_COLOR_TOP
	i BORDER_COLOR_BOTTOM
	a (Lesf;IIIII)V renderTooltipBackground
	a (Lesf;IIIIII)V renderVerticalLineGradient
	a (Lesf;IIIIIII)V renderFrameGradient
	b (Lesf;IIIII)V renderVerticalLine
	b (Lesf;IIIIII)V renderRectangle
	c (Lesf;IIIII)V renderHorizontalLine
fbg net/minecraft/client/gui/screens/multiplayer/JoinMultiplayerScreen
	a BUTTON_ROW_WIDTH
	b TOP_ROW_BUTTON_WIDTH
	c LOWER_ROW_BUTTON_WIDTH
	k FOOTER_HEIGHT
	l serverSelectionList
	m LOGGER
	n pinger
	o lastScreen
	p servers
	q editButton
	s selectButton
	t deleteButton
	u toolTip
	v editingServer
	w lanServerList
	x lanServerDetector
	y initedOnce
	D ()V onSelectedChange
	E ()Lfjj; getPinger
	F ()Lfji; getServers
	G ()V refreshServerList
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	a (Lfbk$a;)V setSelected
	a (Lfjh;)V join
	aH_ ()V init
	c ()V tick
	c (Ljava/util/List;)V setToolTip
	c (Z)V deleteCallback
	e (Z)V editServerCallback
	f (Z)V addServerCallback
	g (Z)V directJoinCallback
	h ()V removed
	l ()V joinSelectedServer
fbh net/minecraft/client/gui/screens/multiplayer/Realms32bitWarningScreen
	b TITLE
	c CONTENT
	k CHECK
	l NARRATION
	m previous
	a (I)V initButtons
fbi net/minecraft/client/gui/screens/multiplayer/SafetyScreen
	b TITLE
	c CONTENT
	k CHECK
	l NARRATION
	m previous
	a (I)V initButtons
fbj net/minecraft/client/gui/screens/multiplayer/ServerReconfigScreen
	a DISCONNECT_TIME
	b connection
	c disconnectButton
	k delayTicker
	l layout
	aH_ ()V init
	ay_ ()Z shouldCloseOnEsc
	b ()V repositionElements
	c ()V tick
fbk net/minecraft/client/gui/screens/multiplayer/ServerSelectionList
	A MOVE_UP_HIGHLIGHTED_SPRITE
	B MOVE_UP_SPRITE
	C MOVE_DOWN_HIGHLIGHTED_SPRITE
	D MOVE_DOWN_SPRITE
	E LOGGER
	F THREAD_POOL
	G ICON_MISSING
	H SCANNING_LABEL
	I CANT_RESOLVE_TEXT
	J CANT_CONNECT_TEXT
	K INCOMPATIBLE_STATUS
	L NO_CONNECTION_STATUS
	M PINGING_STATUS
	N ONLINE_STATUS
	O screen
	P onlineServers
	Q lanHeader
	R networkServers
	a INCOMPATIBLE_SPRITE
	m UNREACHABLE_SPRITE
	n PING_1_SPRITE
	o PING_2_SPRITE
	p PING_3_SPRITE
	q PING_4_SPRITE
	s PING_5_SPRITE
	t PINGING_1_SPRITE
	u PINGING_2_SPRITE
	v PINGING_3_SPRITE
	w PINGING_4_SPRITE
	x PINGING_5_SPRITE
	y JOIN_HIGHLIGHTED_SPRITE
	z JOIN_SPRITE
	a (III)Z keyPressed
	a (Lesl$a;)V setSelected
	a (Lfbk$a;)V setSelected
	a (Lfji;)V updateOnlineServers
	a (Ljava/util/List;)V updateNetworkServers
	b ()I getRowWidth
	c ()I getScrollbarPosition
	d ()V removed
	e ()V refreshEntries
fbk$a net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry
fbk$b net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$LANHeader
	a minecraft
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lesf;IIIIIIIZF)V render
fbk$c net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$NetworkServerEntry
	a minecraft
	b serverData
	c ICON_WIDTH
	d LAN_SERVER_HEADER
	e HIDDEN_ADDRESS_TEXT
	f screen
	g lastClickTime
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lesf;IIIIIIIZF)V render
	b ()Lgde; getServerData
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getServerNarration
fbk$d net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry
	b ICON_WIDTH
	c ICON_HEIGHT
	d ICON_OVERLAY_X_MOVE_LEFT
	e screen
	f minecraft
	g serverData
	h icon
	i lastIconBytes
	j lastClickTime
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (II)V swap
	a (III)Z keyPressed
	a (Lesf;IIIIIIIZF)V render
	a (Lesf;IILnet/minecraft/resources/MinecraftKey;)V drawIcon
	a ([B)Z uploadServerIcon
	b ()V updateServerList
	d ()Lfjh; getServerData
	e ()Z pingCompleted
	f ()Z isCompatible
	g ()Z canJoin
fbl net/minecraft/client/gui/screens/multiplayer/WarningScreen
	a stopShowing
	b content
	c check
	k narration
	l message
	a (I)V initButtons
	a (Lesf;IIF)V render
	aH_ ()V init
	c (Lesf;)V renderTitle
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	l ()I getLineHeight
fbo net/minecraft/client/gui/screens/packs/PackSelectionModel
	a repository
	b selected
	c unselected
	d iconGetter
	e onListChanged
	f output
	a ()Ljava/util/stream/Stream; getUnselected
	b ()Ljava/util/stream/Stream; getSelected
	c ()V commit
	d ()V findNewPacks
	e ()V updateRepoSelectedList
fbo$a net/minecraft/client/gui/screens/packs/PackSelectionModel$Entry
	a ()Lnet/minecraft/resources/MinecraftKey; getIconTexture
	b ()Lnet/minecraft/server/packs/repository/EnumResourcePackVersion; getCompatibility
	c ()Ljava/lang/String; getId
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	f ()Lnet/minecraft/server/packs/repository/PackSource; getPackSource
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getExtendedDescription
	h ()Z isFixedPosition
	i ()Z isRequired
	j ()V select
	k ()V unselect
	l ()V moveUp
	m ()V moveDown
	n ()Z isSelected
	o ()Z canSelect
	p ()Z canUnselect
	q ()Z canMoveUp
	r ()Z canMoveDown
fbo$b net/minecraft/client/gui/screens/packs/PackSelectionModel$EntryBase
	b pack
	a ()Lnet/minecraft/resources/MinecraftKey; getIconTexture
	a (I)V move
	b ()Lnet/minecraft/server/packs/repository/EnumResourcePackVersion; getCompatibility
	c ()Ljava/lang/String; getId
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	f ()Lnet/minecraft/server/packs/repository/PackSource; getPackSource
	h ()Z isFixedPosition
	i ()Z isRequired
	l ()V moveUp
	m ()V moveDown
	q ()Z canMoveUp
	r ()Z canMoveDown
	s ()Ljava/util/List; getSelfList
	t ()Ljava/util/List; getOtherList
	u ()V toggleSelection
	v ()V updateHighContrastOptionInstance
fbo$c net/minecraft/client/gui/screens/packs/PackSelectionModel$SelectedPackEntry
	j ()V select
	k ()V unselect
	n ()Z isSelected
	s ()Ljava/util/List; getSelfList
	t ()Ljava/util/List; getOtherList
fbo$d net/minecraft/client/gui/screens/packs/PackSelectionModel$UnselectedPackEntry
	j ()V select
	k ()V unselect
	n ()Z isSelected
	s ()Ljava/util/List; getSelfList
	t ()Ljava/util/List; getOtherList
fbp net/minecraft/client/gui/screens/packs/PackSelectionScreen
	a LOGGER
	b LIST_WIDTH
	c DRAG_AND_DROP
	k DIRECTORY_BUTTON_TOOLTIP
	l RELOAD_COOLDOWN
	m DEFAULT_ICON
	n model
	o watcher
	p ticksToReload
	q availablePackList
	s selectedPackList
	t packDir
	u doneButton
	v packIcons
	D ()V closeWatcher
	E ()V populateLists
	F ()V reload
	a (Leqv;Ljava/util/List;Ljava/nio/file/Path;)V copyPacks
	a (Lesf;IIF)V render
	a (Lfbq;)V updateFocus
	a (Lfbq;Ljava/util/stream/Stream;)V updateList
	a (Lfzf;Lnet/minecraft/server/packs/repository/ResourcePackLoader;)Lnet/minecraft/resources/MinecraftKey; loadPackIcon
	a (Ljava/util/Collection;)Ljava/util/stream/Stream; extractPackNames
	a (Ljava/util/List;)V onFilesDrop
	a (Lnet/minecraft/server/packs/repository/ResourcePackLoader;)Lnet/minecraft/resources/MinecraftKey; getPackIcon
	aH_ ()V init
	az_ ()V onClose
	b (Lesf;IIF)V renderBackground
	c ()V tick
	l ()V clearSelected
fbp$a net/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher
	a watcher
	b packPath
	a ()Z pollForChanges
	a (Ljava/nio/file/Path;)Lfbp$a; create
	b (Ljava/nio/file/Path;)V watchDir
fbq net/minecraft/client/gui/screens/packs/TransferableSelectionList
	a SELECT_HIGHLIGHTED_SPRITE
	m SELECT_SPRITE
	n UNSELECT_HIGHLIGHTED_SPRITE
	o UNSELECT_SPRITE
	p MOVE_UP_HIGHLIGHTED_SPRITE
	q MOVE_UP_SPRITE
	s MOVE_DOWN_HIGHLIGHTED_SPRITE
	t MOVE_DOWN_SPRITE
	u INCOMPATIBLE_TITLE
	v INCOMPATIBLE_CONFIRM_TITLE
	w title
	x screen
	a (III)Z keyPressed
	a (Lesf;II)V renderHeader
	b ()I getRowWidth
	c ()I getScrollbarPosition
fbq$a net/minecraft/client/gui/screens/packs/TransferableSelectionList$PackEntry
	a minecraft
	b MAX_DESCRIPTION_WIDTH_PIXELS
	c MAX_NAME_WIDTH_PIXELS
	d TOO_LONG_NAME_SUFFIX
	e parent
	f pack
	g nameDisplayCache
	h descriptionDisplayCache
	i incompatibleNameDisplayCache
	j incompatibleDescriptionDisplayCache
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Leqv;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/util/FormattedString; cacheName
	a (Lesf;IIIIIIIZF)V render
	b ()Ljava/lang/String; getPackId
	b (Leqv;Lnet/minecraft/network/chat/IChatBaseComponent;)Letj; cacheDescription
	d ()V keyboardSelection
	e ()Z showHoverOverlay
	f ()V keyboardMoveUp
	g ()V keyboardMoveDown
	h ()Z handlePackSelection
fbs net/minecraft/client/gui/screens/recipebook/AbstractFurnaceRecipeBookComponent
	i FILTER_SPRITES
	j fuels
	a ()V initFilterButtonTextures
	a (Lnet/minecraft/world/inventory/Slot;)V slotClicked
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;Ljava/util/List;)V setupGhostRecipe
	b ()Ljava/util/Set; getFuelItems
fbt net/minecraft/client/gui/screens/recipebook/BlastingRecipeBookComponent
	i FILTER_NAME
	b ()Ljava/util/Set; getFuelItems
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getRecipeFilterName
fbu net/minecraft/client/gui/screens/recipebook/GhostRecipe
	a recipe
	b ingredients
	c time
	a ()V clear
	a (I)Lfbu$a; get
	a (Lesf;Leqv;IIZF)V render
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)V setRecipe
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;II)V addIngredient
	b ()I size
	c ()Lnet/minecraft/world/item/crafting/RecipeHolder; getRecipe
fbu$a net/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient
	b ingredient
	c x
	d y
	a ()I getX
	b ()I getY
	c ()Lnet/minecraft/world/item/ItemStack; getItem
fbv net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent
	a BUTTON_SIZE
	b OVERLAY_RECIPE_SPRITE
	c FURNACE_OVERLAY_HIGHLIGHTED_SPRITE
	d FURNACE_OVERLAY_SPRITE
	e CRAFTING_OVERLAY_HIGHLIGHTED_SPRITE
	f CRAFTING_OVERLAY_SPRITE
	g FURNACE_OVERLAY_DISABLED_HIGHLIGHTED_SPRITE
	h FURNACE_OVERLAY_DISABLED_SPRITE
	i CRAFTING_OVERLAY_DISABLED_HIGHLIGHTED_SPRITE
	j CRAFTING_OVERLAY_DISABLED_SPRITE
	k MAX_ROW
	l MAX_ROW_LARGE
	m ITEM_RENDER_SCALE
	n recipeButtons
	o isVisible
	p x
	q y
	s minecraft
	t collection
	u lastRecipeClicked
	v time
	w isFurnaceMenu
	a ()Lfca; getRecipeCollection
	a (DDI)Z mouseClicked
	a (Leqv;Lfca;IIIIF)V init
	a (Lesf;IIF)V render
	aC_ ()Z isFocused
	a_ (DD)Z isMouseOver
	b ()Lnet/minecraft/world/item/crafting/RecipeHolder; getLastRecipeClicked
	b (Z)V setVisible
	b_ (Z)V setFocused
	d ()Z isVisible
fbv$a net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton
	a ingredientPos
	c recipe
	d isCraftable
	a (Lewi;)V updateWidgetNarration
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)V calculateIngredientsPositions
	b (Lesf;IIF)V renderWidget
fbv$a$a net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton$Pos
	a ingredients
	b x
	c y
fbv$b net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlaySmeltingRecipeButton
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)V calculateIngredientsPositions
fbw net/minecraft/client/gui/screens/recipebook/RecipeBookComponent
	A visible
	B widthTooNarrow
	a RECIPE_BUTTON_SPRITES
	b RECIPE_BOOK_LOCATION
	c IMAGE_WIDTH
	d IMAGE_HEIGHT
	e ghostRecipe
	f filterButton
	g menu
	h minecraft
	i FILTER_BUTTON_SPRITES
	j SEARCH_HINT
	k OFFSET_X_POSITION
	l ONLY_CRAFTABLES_TOOLTIP
	m ALL_RECIPES_TOOLTIP
	n xOffset
	o width
	p height
	q tabButtons
	s selectedTab
	t searchBox
	u lastSearch
	v book
	w recipeBookPage
	x stackedContents
	y timesInventoryChanged
	z ignoreTextInput
	a ()V initFilterButtonTextures
	a (CI)Z charTyped
	a (DDI)Z mouseClicked
	a (DDIIIII)Z hasClickedOutside
	a (II)I updateScreenPosition
	a (III)Z keyPressed
	a (IILeqv;ZLnet/minecraft/world/inventory/ContainerRecipeBook;)V init
	a (Lesf;IIF)V render
	a (Lesf;IIII)V renderTooltip
	a (Lesf;IIZF)V renderGhostRecipe
	a (Ljava/lang/String;)V pirateSpeechForThePeople
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Ljava/util/List;)V recipesShown
	a (Lnet/minecraft/world/inventory/Slot;)V slotClicked
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;Ljava/util/List;)V setupGhostRecipe
	aC_ ()Z isFocused
	a_ (DD)Z isMouseOver
	b ()V updateFilterButtonTooltip
	b (III)Z keyReleased
	b (Lesf;IIII)V renderGhostRecipeTooltip
	b (Lewi;)V updateNarration
	b (Z)V setVisible
	b_ (Z)V setFocused
	c (Z)V updateCollections
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getRecipeFilterName
	e ()V initVisuals
	f ()V toggleVisibility
	g ()Z isVisible
	h ()V tick
	i ()V recipesUpdated
	j ()V sendUpdateSettings
	k ()Z isVisibleAccordingToBookData
	l ()V updateTabs
	m ()V updateStackedContents
	n ()Z toggleFiltering
	o ()V checkSearchStringUpdate
	q ()Lewg$a; narrationPriority
	r ()Z isOffsetNextToMainGUI
fbx net/minecraft/client/gui/screens/recipebook/RecipeBookPage
	a ITEMS_PER_PAGE
	b PAGE_FORWARD_SPRITES
	c PAGE_BACKWARD_SPRITES
	d buttons
	e hoveredButton
	f overlay
	g minecraft
	h showListeners
	i recipeCollections
	j forwardButton
	k backButton
	l totalPages
	m currentPage
	n recipeBook
	o lastClickedRecipe
	p lastClickedRecipeCollection
	a ()Lnet/minecraft/world/item/crafting/RecipeHolder; getLastClickedRecipe
	a (DDIIIII)Z mouseClicked
	a (Leqv;II)V init
	a (Lesf;II)V renderTooltip
	a (Lesf;IIIIF)V render
	a (Lfbw;)V addListener
	a (Ljava/util/List;)V recipesShown
	a (Ljava/util/List;Z)V updateCollections
	a (Ljava/util/function/Consumer;)V listButtons
	b ()Lfca; getLastClickedRecipeCollection
	c ()V setInvisible
	d ()Leqv; getMinecraft
	e ()Lnet/minecraft/stats/RecipeBook; getRecipeBook
	f ()V updateButtonsForPage
	g ()V updateArrowButtons
fby net/minecraft/client/gui/screens/recipebook/RecipeBookTabButton
	c SPRITES
	d category
	e ANIMATION_TIME
	l animationTime
	a (Leqi;)Z updateVisibility
	a (Leqv;)V startAnimation
	a (Lesf;Lfuf;)V renderIcon
	b ()Lere; getCategory
	b (Lesf;IIF)V renderWidget
fbz net/minecraft/client/gui/screens/recipebook/RecipeButton
	a TICKS_TO_SWAP
	b SLOT_MANY_CRAFTABLE_SPRITE
	c SLOT_CRAFTABLE_SPRITE
	d SLOT_MANY_UNCRAFTABLE_SPRITE
	e SLOT_UNCRAFTABLE_SPRITE
	l ANIMATION_TIME
	m BACKGROUND_SIZE
	n MORE_RECIPES_TOOLTIP
	o menu
	p book
	q collection
	s time
	t animationTime
	u currentIndex
	a ()Lfca; getCollection
	a (Lewi;)V updateWidgetNarration
	a (Lfca;Lfbx;)V init
	b ()Z isOnlyOption
	b (Lesf;IIF)V renderWidget
	c (I)Z isValidClickButton
	e ()Lnet/minecraft/world/item/crafting/RecipeHolder; getRecipe
	f ()Ljava/util/List; getTooltipText
	g ()Ljava/util/List; getOrderedRecipes
	l ()I getWidth
fca net/minecraft/client/gui/screens/recipebook/RecipeCollection
	a registryAccess
	b recipes
	c singleResultItem
	d craftable
	e fitsDimensions
	f known
	a ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	a (Lnet/minecraft/core/IRegistryCustom;Ljava/util/List;)Z allRecipesHaveSameResult
	a (Lnet/minecraft/stats/RecipeBook;)V updateKnownRecipes
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;IILnet/minecraft/stats/RecipeBook;)V canCraft
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z isCraftable
	a (Z)Ljava/util/List; getRecipes
	b ()Z hasKnownRecipes
	b (Z)Ljava/util/List; getDisplayRecipes
	c ()Z hasCraftable
	d ()Z hasFitting
	e ()Ljava/util/List; getRecipes
	f ()Z hasSingleResultItem
fcb net/minecraft/client/gui/screens/recipebook/RecipeShownListener
	a (Ljava/util/List;)V recipesShown
fcc net/minecraft/client/gui/screens/recipebook/RecipeUpdateListener
	F ()V recipesUpdated
	G ()Lfbw; getRecipeBookComponent
fcd net/minecraft/client/gui/screens/recipebook/SmeltingRecipeBookComponent
	i FILTER_NAME
	b ()Ljava/util/Set; getFuelItems
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getRecipeFilterName
fce net/minecraft/client/gui/screens/recipebook/SmokingRecipeBookComponent
	i FILTER_NAME
	b ()Ljava/util/Set; getFuelItems
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getRecipeFilterName
fcg net/minecraft/client/gui/screens/reporting/AbstractReportScreen
	a SEND_REPORT
	b OBSERVED_WHAT_LABEL
	c SELECT_REASON
	k MORE_COMMENTS_LABEL
	l MARGIN
	m SCREEN_WIDTH
	n SPACING
	o lastScreen
	p reportingContext
	q reportBuilder
	s REPORT_SENT_MESSAGE
	t REPORT_SENDING_TITLE
	u REPORT_SENT_TITLE
	v REPORT_ERROR_TITLE
	w REPORT_SEND_GENERIC_ERROR
	x DESCRIBE_PLACEHOLDER
	y MORE_COMMENTS_NARRATION
	z LOGGER
	D ()V onReportSendSuccess
	E ()V saveDraft
	F ()V clearDraft
	a (IILjava/util/function/Consumer;)Leti; createCommentBox
	a (Ljava/lang/Throwable;)V onReportSendError
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V displayReportSendError
	az_ ()V onClose
	h ()V removed
	l ()V sendReport
fcg$a net/minecraft/client/gui/screens/reporting/AbstractReportScreen$DiscardReportWarningScreen
	c BUTTON_MARGIN
	k TITLE
	l MESSAGE
	m RETURN
	n DRAFT
	o DISCARD
	a (I)V initButtons
	ay_ ()Z shouldCloseOnEsc
	az_ ()V onClose
	c (Lesf;)V renderTitle
fch net/minecraft/client/gui/screens/reporting/ChatReportScreen
	s BUTTON_WIDTH
	t TITLE
	u SELECT_CHAT_MESSAGE
	v layout
	w commentBox
	x sendButton
	y selectMessagesButton
	z selectReasonButton
	D ()V onReportChanged
	aH_ ()V init
	b ()V repositionElements
	b (DDI)Z mouseReleased
fci net/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller
	a log
	b contextBuilder
	c canReport
	d previousLink
	e eventId
	f missedCount
	g lastMessage
	a (ILfci$a;)V fillNextPage
	a (Lfci$a;Lfjo$a;)Z acceptMessage
fci$a net/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller$Output
	a (ILfjo$a;)V acceptMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V acceptDivider
fcj net/minecraft/client/gui/screens/reporting/ChatSelectionScreen
	a CHECKMARK_SPRITE
	b TITLE
	c CONTEXT_INFO
	k lastScreen
	l reportingContext
	m confirmSelectedButton
	n contextInfoLabel
	o chatSelectionList
	p report
	q onSelected
	s chatLogFiller
	D ()V onReachedScrollTop
	E ()V updateConfirmSelectedButton
	a (Lesf;IIF)V render
	a (Lfjo;)Z canReport
	aH_ ()V init
	az_ ()V onClose
	b (Lesf;IIF)V renderBackground
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	l ()V extendLog
fcj$a net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList
	m previousHeading
	a (D)V setScrollAmount
	a (III)Z keyPressed
	a (ILfjo$a;)V acceptMessage
	a (Lesf;IIFIIIII)V renderItem
	a (Lesl$a;)V setSelected
	a (Lewq;)Lesl$a; nextEntry
	a (Lfcj$a$b;)V setSelected
	a (Lfjo$a;Z)V updateHeading
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V acceptDivider
	b ()I getRowWidth
	b (Lewq;)Lfcj$a$b; nextEntry
	b (Lfcj$a$b;)Z shouldHighlightEntry
	c ()I getScrollbarPosition
	d ()I getMaxVisibleEntries
	e ()I getFooterTop
fcj$a$a net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$DividerEntry
	c COLOR
	d text
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lesf;IIIIIIIZF)V render
fcj$a$b net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	b ()Z isSelected
	d ()Z canSelect
	e ()Z canReport
fcj$a$c net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Heading
	a sender
	b entry
	a ()Ljava/util/UUID; sender
	a (Lfcj$a$c;)Z canCombine
	b ()Lfcj$a$b; entry
fcj$a$d net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$MessageEntry
	c CHECKMARK_WIDTH
	d CHECKMARK_HEIGHT
	e INDENT_AMOUNT
	f TAG_MARGIN_LEFT
	g chatId
	h text
	i narration
	j hoverText
	k tagIcon
	l tagHoverText
	m canReport
	n playerMessage
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lesf;III)V renderSelectedCheckmark
	a (Lesf;IIIII)V renderTag
	a (Lesf;IIIIIIIZF)V render
	b ()Z isSelected
	d ()Z canSelect
	e ()Z canReport
	f ()I getMaximumTextWidth
	g ()I getTextIndent
	h ()Z toggleReport
fcj$a$e net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$MessageHeadingEntry
	c FACE_SIZE
	d heading
	e skin
	f canReport
	a (Lesf;IIIIIIIZF)V render
fcj$a$f net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$PaddingEntry
	a (Lesf;IIIIIIIZF)V render
fck net/minecraft/client/gui/screens/reporting/NameReportScreen
	s BUTTON_WIDTH
	t TITLE
	u layout
	v commentBox
	w sendButton
	D ()V onReportChanged
	aH_ ()V init
	b ()V repositionElements
	b (DDI)Z mouseReleased
fcl net/minecraft/client/gui/screens/reporting/ReportPlayerScreen
	a TITLE
	b MESSAGE
	c REPORT_CHAT
	k REPORT_SKIN
	l REPORT_NAME
	m SPACING
	n lastScreen
	o context
	p player
	q layout
	aH_ ()V init
	az_ ()V onClose
	b ()V repositionElements
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
fcm net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen
	a REASON_TITLE
	b REASON_DESCRIPTION
	c READ_INFO_LABEL
	k FOOTER_HEIGHT
	l BUTTON_WIDTH
	m BUTTON_HEIGHT
	n CONTENT_WIDTH
	o PADDING
	p lastScreen
	q reasonSelectionList
	s currentlySelectedReason
	t onSelectedReason
	D ()I contentLeft
	E ()I contentRight
	F ()I descriptionTop
	G ()I descriptionBottom
	a (Lesf;IIF)V render
	aH_ ()V init
	az_ ()V onClose
	b (Lesf;IIF)V renderBackground
	l ()I buttonTop
fcm$a net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList
	a (Lesl$a;)V setSelected
	a (Lfcm$a$a;)V setSelected
	a (Lfjx;)Lfcm$a$a; findEntry
	b ()I getRowWidth
	c ()I getScrollbarPosition
fcm$a$a net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList$Entry
	b reason
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lesf;IIIIIIIZF)V render
	b ()Lfjx; getReason
fcn net/minecraft/client/gui/screens/reporting/SkinReportScreen
	s BUTTON_WIDTH
	t SKIN_WIDTH
	u FORM_WIDTH
	v TITLE
	w layout
	x commentBox
	y sendButton
	z selectReasonButton
	D ()V onReportChanged
	aH_ ()V init
	b ()V repositionElements
	b (DDI)Z mouseReleased
fcp net/minecraft/client/gui/screens/social/PlayerEntry
	A BLOCKED
	B OFFLINE
	C HIDDEN_OFFLINE
	D BLOCKED_OFFLINE
	E REPORT_DISABLED_TOOLTIP
	F HIDE_TEXT_TOOLTIP
	G SHOW_TEXT_TOOLTIP
	H REPORT_PLAYER_TOOLTIP
	I SKIN_SIZE
	J PADDING
	K CHAT_TOGGLE_ICON_SIZE
	a SKIN_SHADE
	b BG_FILL
	c BG_FILL_REMOVED
	d PLAYERNAME_COLOR
	e PLAYER_STATUS_COLOR
	f DRAFT_REPORT_SPRITE
	g TOOLTIP_DELAY
	h REPORT_BUTTON_SPRITES
	i MUTE_BUTTON_SPRITES
	j UNMUTE_BUTTON_SPRITES
	k minecraft
	l children
	m id
	n playerName
	o skinGetter
	p isRemoved
	q hasRecentMessages
	s reportingEnabled
	t hasDraftReport
	u chatReportable
	v hideButton
	w showButton
	x reportButton
	y tooltipHoverTime
	z HIDDEN
	a (Lesf;IIIIIIIZF)V render
	a (Lnet/minecraft/network/chat/IChatMutableComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; getEntryNarationMessage
	a (ZLnet/minecraft/network/chat/IChatBaseComponent;)V onHiddenOrShown
	b ()Ljava/util/List; narratables
	c (Z)V setRemoved
	d ()Ljava/lang/String; getPlayerName
	d (Z)V setHasRecentMessages
	e ()Ljava/util/UUID; getPlayerId
	e (Z)V updateHideAndShowButton
	f ()Ljava/util/function/Supplier; getSkinGetter
	g ()Z isRemoved
	h ()Z hasRecentMessages
	i ()Ljava/util/List; children
	j ()Z isChatReportable
	k ()Leua; createReportButtonTooltip
	l ()Lnet/minecraft/network/chat/IChatBaseComponent; getStatusComponent
fcq net/minecraft/client/gui/screens/social/PlayerSocialManager
	a minecraft
	b hiddenPlayers
	c service
	d discoveredNamesToUUID
	e onlineMode
	f pendingBlockListRefresh
	a ()V startOnlineMode
	a (Lfjf;)V addPlayer
	a (Ljava/lang/String;)Ljava/util/UUID; getDiscoveredUUID
	a (Ljava/util/UUID;)V hidePlayer
	b ()V stopOnlineMode
	b (Ljava/util/UUID;)V showPlayer
	c ()Ljava/util/Set; getHiddenPlayers
	c (Ljava/util/UUID;)Z shouldHideMessageFrom
	d (Ljava/util/UUID;)Z isHidden
	e (Ljava/util/UUID;)Z isBlocked
	f (Ljava/util/UUID;)V removePlayer
fcr net/minecraft/client/gui/screens/social/SocialInteractionsPlayerList
	a socialInteractionsScreen
	m players
	n filter
	a (Lesf;)V enableScissor
	a (Lfjf;Lfcs$a;)V addPlayer
	a (Lfjl;)Ljava/util/Collection; collectProfilesFromChatLog
	a (Ljava/lang/String;)V setFilter
	a (Ljava/util/Collection;D)V updateFiltersAndScroll
	a (Ljava/util/Collection;DZ)V updatePlayerList
	a (Ljava/util/Collection;Ljava/util/Map;)V addOnlinePlayers
	a (Ljava/util/Map;Z)V updatePlayersFromChatLog
	a (Ljava/util/UUID;)V removePlayer
	d ()Z isEmpty
	e ()V sortPlayerEntries
	w ()V updateFilteredPlayers
fcs net/minecraft/client/gui/screens/social/SocialInteractionsScreen
	A MARGIN_Y
	B IMAGE_WIDTH
	C BUTTON_HEIGHT
	D ITEM_HEIGHT
	E socialInteractionsPlayerList
	F searchBox
	G lastSearch
	H page
	I allButton
	J hiddenButton
	K blockedButton
	L blockingHintButton
	M serverLabel
	N playerCount
	O initialized
	a SEARCH_START
	b LIST_START
	c BACKGROUND_SPRITE
	k SEARCH_SPRITE
	l TAB_ALL
	m TAB_HIDDEN
	n TAB_BLOCKED
	o TAB_ALL_SELECTED
	p TAB_HIDDEN_SELECTED
	q TAB_BLOCKED_SELECTED
	s SEARCH_HINT
	t EMPTY_SEARCH
	u EMPTY_HIDDEN
	v EMPTY_BLOCKED
	w BLOCKING_HINT
	x BG_BORDER_SIZE
	y BG_WIDTH
	z SEARCH_HEIGHT
	D ()I listEnd
	E ()I marginX
	a (III)Z keyPressed
	a (Leqv;)V updateServerLabel
	a (Lesf;IIF)V render
	a (Lfcs$a;)V showPage
	a (Lfjf;)V onAddPlayer
	a (Ljava/lang/String;)V checkSearchStringUpdate
	a (Ljava/util/UUID;)V onRemovePlayer
	aH_ ()V init
	b (Lesf;IIF)V renderBackground
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	j ()Z isPauseScreen
	l ()I windowHeight
fcs$a net/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page
	a ALL
	b HIDDEN
	c BLOCKED
	d $VALUES
	a ()[Lfcs$a; $values
fcu net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget
	a HEADER_HORIZONTAL_PADDING
	b TELEMETRY_REQUIRED_TRANSLATION_KEY
	c TELEMETRY_OPTIONAL_TRANSLATION_KEY
	d PROPERTY_TITLE
	e font
	l content
	m onScrolledListener
	a (D)V setScrollAmount
	a (Lewi;)V updateWidgetNarration
	a (Lfcu$b;Lgdz;)V addEventType
	a (Lgdz;Lfcu$b;)V addEventTypeProperties
	a (Ljava/util/function/DoubleConsumer;)V setOnScrolledListener
	b (Z)V onOptInChanged
	c (Lesf;IIF)V renderContents
	c (Z)Lfcu$a; buildContent
	g ()I getInnerHeight
	h ()D scrollRate
	w ()I containerWidth
fcu$a net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$Content
	a container
	b narration
	a ()Lewa; container
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; narration
fcu$b net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$ContentBuilder
	a width
	b layout
	c narration
	a ()Lfcu$a; build
	a (I)V addSpacer
	a (Lesd;Lnet/minecraft/network/chat/IChatBaseComponent;)V addLine
	a (Lesd;Lnet/minecraft/network/chat/IChatBaseComponent;I)V addLine
	b (Lesd;Lnet/minecraft/network/chat/IChatBaseComponent;)V addHeader
fcv net/minecraft/client/gui/screens/telemetry/TelemetryInfoScreen
	a PADDING
	b TITLE
	c DESCRIPTION
	k BUTTON_PRIVACY_STATEMENT
	l BUTTON_GIVE_FEEDBACK
	m BUTTON_SHOW_DATA
	n lastScreen
	o options
	p telemetryEventWidget
	q savedScroll
	a (Leso;Leso;)Levy; twoButtonContainer
	a (Lesq;)V openLastScreen
	aH_ ()V init
	az_ ()V onClose
	b (Lesf;IIF)V renderBackground
	b (Lesq;)V openPrivacyStatementLink
	c (Lesq;)V openFeedbackLink
	d (Lesq;)V openDataFolder
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	l ()Leso; createTelemetryButton
fcx net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen
	a TITLE
	b MESSAGE
	c DETAILS_BUTTON
	k COLUMN_SPACING
	l DETAILS_BUTTON_WIDTH
	m callback
	n enabledPacks
	o layout
	aH_ ()V init
	az_ ()V onClose
	b ()V repositionElements
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
fcx$a net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen
	b packList
	a (Lesf;IIF)V render
	aH_ ()V init
	az_ ()V onClose
fcx$a$a net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen$PackList
	b ()I getRowWidth
fcx$a$b net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen$PackListEntry
	b packId
	c message
	d splitMessage
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lesf;IIIIIIIZF)V render
fcy net/minecraft/client/gui/screens/worldselection/CreateWorldScreen
	A packValidator
	B lastScreen
	C tempDataPackDir
	D tempDataPackRepository
	E bottomButtons
	F tabNavigationBar
	a HEADER_SEPERATOR
	b FOOTER_SEPERATOR
	c LIGHT_DIRT_BACKGROUND
	k GROUP_BOTTOM
	l TAB_COLUMN_WIDTH
	m FOOTER_HEIGHT
	n LOGGER
	o TEMP_WORLD_PREFIX
	p GAME_MODEL_LABEL
	q NAME_LABEL
	s EXPERIMENTS_LABEL
	t ALLOW_CHEATS_INFO
	u PREPARING_WORLD_DATA
	v HORIZONTAL_BUTTON_SPACING
	w VERTICAL_BUTTON_SPACING
	x uiState
	y tabManager
	z recreated
	D ()V popScreen
	E ()V onCreate
	F ()Ljava/nio/file/Path; getTempDataPackDir
	G ()V removeTempDataPackDir
	H ()Ljava/util/Optional; createNewWorldDirectory
	a (III)Z keyPressed
	a (Leck$a;Lnet/minecraft/core/LayeredRegistryAccess;Lcom/mojang/serialization/Lifecycle;)V createNewWorld
	a (Leqv;Leyk;)V openFresh
	a (Leqv;Leyk;Lnet/minecraft/world/level/WorldSettings;Lfdg;Ljava/nio/file/Path;)Lfcy; createFromExisting
	a (Leqv;Lnet/minecraft/network/chat/IChatBaseComponent;)V queueLoadScreen
	a (Lesf;IIF)V render
	a (Ljava/nio/file/Path;Leqv;)Ljava/nio/file/Path; createTempDataPackDirFromExistingWorld
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V copyBetweenDirs
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;Lnet/minecraft/world/level/WorldDataConfiguration;)Lafq$c; createDefaultLoadConfig
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;Lnet/minecraft/world/level/WorldDataConfiguration;Ljava/util/function/Consumer;)V applyNewPackConfig
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;ZLjava/util/function/Consumer;)V tryApplyNewDataPacks
	a (Lnet/minecraft/world/level/WorldDataConfiguration;)V openExperimentsScreen
	aH_ ()V init
	az_ ()V onClose
	b ()V repositionElements
	b (Lesf;)V renderDirtBackground
	b (Lnet/minecraft/world/level/WorldDataConfiguration;)V openDataPackSelectionScreen
	c (Lnet/minecraft/world/level/WorldDataConfiguration;)Lcom/mojang/datafixers/util/Pair; getDataPackSelectionSettings
	c (Z)Lnet/minecraft/world/level/WorldSettings; createLevelSettings
	d (Leuk;)Leuk; addRenderableWidget
	e (Leuk;)Leuk; addWidget
	l ()Lfdh; getUiState
fcy$a net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$DataPackReloadCookie
	a worldGenSettings
	b dataConfiguration
	a ()Lnet/minecraft/world/level/levelgen/GeneratorSettings; worldGenSettings
	b ()Lnet/minecraft/world/level/WorldDataConfiguration; dataConfiguration
fcy$b net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$GameTab
	c TITLE
	d ALLOW_CHEATS
	e nameEdit
fcy$c net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$MoreTab
	c TITLE
	d GAME_RULES_LABEL
	e DATA_PACKS_LABEL
	b ()V openGameRulesScreen
fcy$d net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$WorldTab
	c TITLE
	d AMPLIFIED_HELP_TEXT
	e GENERATE_STRUCTURES
	f GENERATE_STRUCTURES_INFO
	g BONUS_CHEST
	h SEED_LABEL
	i SEED_EMPTY_HINT
	j WORLD_TAB_WIDTH
	k seedEdit
	l customizeTypeButton
	a (Lesx;)Lnet/minecraft/network/chat/IChatMutableComponent; createTypeButtonNarration
	b ()V openPresetEditor
	c ()Lesx$c; createWorldTypeValueSupplier
fcz net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen
	a exitCallback
	b rules
	c invalidEntries
	k doneButton
	l tooltip
	m gameRules
	a (Lesf;IIF)V render
	a (Lfcz$f;)V markInvalid
	aH_ ()V init
	az_ ()V onClose
	b (Lfcz$f;)V clearInvalid
	l ()V updateDoneButton
fcz$a net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$BooleanRuleEntry
	d checkbox
	a (Lesf;IIIIIIIZF)V render
fcz$b net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$CategoryRuleEntry
	b label
	a (Lesf;IIIIIIIZF)V render
	b ()Ljava/util/List; narratables
	i ()Ljava/util/List; children
fcz$c net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$EntryFactory
fcz$d net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$GameRuleEntry
	a label
	b children
	a (Lesf;II)V renderLabel
	b ()Ljava/util/List; narratables
	i ()Ljava/util/List; children
fcz$e net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$IntegerRuleEntry
	d input
	a (Lesf;IIIIIIIZF)V render
fcz$f net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry
	a tooltip
fcz$g net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList
	a (Lesf;IIF)V render
fd$a net/minecraft/commands/arguments/TimeArgument$Info
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	a (Lfd$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lfd$a$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ArgumentTime;)Lfd$a$a; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)Lfd$a$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
fd$a$a net/minecraft/commands/arguments/TimeArgument$Info$Template
	b min
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ArgumentTime; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
fda net/minecraft/client/gui/screens/worldselection/EditWorldScreen
	a LOGGER
	b NAME_LABEL
	c renameButton
	k callback
	l nameEdit
	m levelAccess
	a (Leqv;II)V resize
	a (Lesf;IIF)V render
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;)Z makeBackupAndShowToast
	a (Lnet/minecraft/world/level/storage/Convertable;Ljava/lang/String;)V makeBackupAndShowToast
	aH_ ()V init
	az_ ()V onClose
	l ()V onRename
fdb net/minecraft/client/gui/screens/worldselection/ExperimentsScreen
	a MAIN_CONTENT_WIDTH
	b layout
	c parent
	k packRepository
	l output
	m packs
	a (Lnet/minecraft/server/packs/repository/ResourcePackLoader;)Lnet/minecraft/network/chat/IChatBaseComponent; getHumanReadableTitle
	aH_ ()V init
	az_ ()V onClose
	b ()V repositionElements
	b (Lesf;IIF)V renderBackground
	l ()V onDone
fdc net/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen
	a LOGGER
	b DIMENSION_COLORS
	c callback
	k upgrader
	a (Leqv;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/world/level/storage/Convertable$ConversionSession;Z)Lfdc; create
	a (Lesf;IIF)V render
	aH_ ()V init
	az_ ()V onClose
	c ()V tick
	h ()V removed
fdd net/minecraft/client/gui/screens/worldselection/PresetEditor
	a EDITORS
	a (Lnet/minecraft/core/Holder;)Lfdg$a; fixedBiomeConfigurator
	a (Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat;)Lfdg$a; flatWorldConfigurator
fde net/minecraft/client/gui/screens/worldselection/SelectWorldScreen
	a TEST_OPTIONS
	b lastScreen
	c searchBox
	k LOGGER
	l deleteButton
	m selectButton
	n renameButton
	o copyButton
	p list
	a (CI)Z charTyped
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	a (ZZ)V updateButtonStatus
	aH_ ()V init
	az_ ()V onClose
	h ()V removed
fdf net/minecraft/client/gui/screens/worldselection/SwitchGrid
	a DEFAULT_SWITCH_BUTTON_WIDTH
	b switches
	a ()V refreshStates
	a (I)Lfdf$a; builder
fdf$a net/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder
	a width
	b switchBuilders
	c paddingLeft
	d rowSpacing
	e rowCount
	f infoUnderneath
	a ()V increaseRow
	a (I)Lfdf$a; withPaddingLeft
	a (IZ)Lfdf$a; withInfoUnderneath
	a (Ljava/util/function/Consumer;)Lfdf; build
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/function/BooleanSupplier;Ljava/util/function/Consumer;)Lfdf$d; addSwitch
	b (I)Lfdf$a; withRowSpacing
fdf$b net/minecraft/client/gui/screens/worldselection/SwitchGrid$InfoUnderneathSettings
	a maxInfoRows
	b alwaysMaxHeight
	a ()I maxInfoRows
	b ()Z alwaysMaxHeight
fdf$c net/minecraft/client/gui/screens/worldselection/SwitchGrid$LabeledSwitch
	a button
	b stateSupplier
	c isActiveCondition
	a ()V refreshState
	b ()Lesx; button
	c ()Ljava/util/function/BooleanSupplier; stateSupplier
	d ()Ljava/util/function/BooleanSupplier; isActiveCondition
fdf$d net/minecraft/client/gui/screens/worldselection/SwitchGrid$SwitchBuilder
	a label
	b stateSupplier
	c onClicked
	d info
	e isActiveCondition
	f buttonWidth
	a (Lfdf$a;Levy;I)Lfdf$c; build
	a (Ljava/util/function/BooleanSupplier;)Lfdf$d; withIsActiveCondition
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lfdf$d; withInfo
fdg net/minecraft/client/gui/screens/worldselection/WorldCreationContext
	a options
	b datapackDimensions
	c selectedDimensions
	d worldgenRegistries
	e dataPackResources
	f dataConfiguration
	a ()Lnet/minecraft/core/IRegistryCustom$Dimension; worldgenLoadContext
	a (Lfdg$a;)Lfdg; withDimensions
	a (Lfdg$b;)Lfdg; withOptions
	a (Lnet/minecraft/world/level/levelgen/WorldOptions;Lnet/minecraft/world/level/levelgen/WorldDimensions;)Lfdg; withSettings
	b ()Lnet/minecraft/world/level/levelgen/WorldOptions; options
	c ()Lnet/minecraft/core/IRegistry; datapackDimensions
	d ()Lnet/minecraft/world/level/levelgen/WorldDimensions; selectedDimensions
	e ()Lnet/minecraft/core/LayeredRegistryAccess; worldgenRegistries
	f ()Lnet/minecraft/server/DataPackResources; dataPackResources
	g ()Lnet/minecraft/world/level/WorldDataConfiguration; dataConfiguration
fdg$a net/minecraft/client/gui/screens/worldselection/WorldCreationContext$DimensionsUpdater
fdg$b net/minecraft/client/gui/screens/worldselection/WorldCreationContext$OptionsModifier
fdh net/minecraft/client/gui/screens/worldselection/WorldCreationUiState
	a DEFAULT_WORLD_NAME
	b listeners
	c name
	d gameMode
	e difficulty
	f allowCheats
	g seed
	h generateStructures
	i bonusChest
	j savesFolder
	k targetFolder
	l settings
	m worldType
	n normalPresetList
	o altPresetList
	p gameRules
	a ()V onChanged
	a (Lfdg$a;)V updateDimensions
	a (Lfdg;)V setSettings
	a (Lfdg;Ljava/util/Optional;)Ljava/util/Optional; findPreset
	a (Lfdh$a;)V setGameMode
	a (Lfdh$b;)V setWorldType
	a (Ljava/lang/String;)V setName
	a (Ljava/util/function/Consumer;)V addListener
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; getNonEmptyList
	a (Lnet/minecraft/world/EnumDifficulty;)V setDifficulty
	a (Lnet/minecraft/world/level/GameRules;)V setGameRules
	a (Lnet/minecraft/world/level/WorldDataConfiguration;)Z tryUpdateDataConfiguration
	a (Z)V setAllowCheats
	b ()Ljava/lang/String; getName
	b (Ljava/lang/String;)V setSeed
	b (Z)V setGenerateStructures
	c ()Ljava/lang/String; getTargetFolder
	c (Ljava/lang/String;)Ljava/lang/String; findResultFolder
	c (Z)V setBonusChest
	d ()Lfdh$a; getGameMode
	e ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	f ()Z isHardcore
	g ()Z isAllowCheats
	h ()Ljava/lang/String; getSeed
	i ()Z isGenerateStructures
	j ()Z isBonusChest
	k ()Lfdg; getSettings
	l ()Z isDebug
	m ()Lfdh$b; getWorldType
	n ()Lfdd; getPresetEditor
	o ()Ljava/util/List; getNormalPresetList
	p ()Ljava/util/List; getAltPresetList
	q ()Lnet/minecraft/world/level/GameRules; getGameRules
	r ()V updatePresetLists
fdh$a net/minecraft/client/gui/screens/worldselection/WorldCreationUiState$SelectedGameMode
	a SURVIVAL
	b HARDCORE
	c CREATIVE
	d DEBUG
	e gameType
	f displayName
	g info
	h $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getInfo
	b ()[Lfdh$a; $values
fdh$b net/minecraft/client/gui/screens/worldselection/WorldCreationUiState$WorldTypeEntry
	a preset
	b CUSTOM_WORLD_DESCRIPTION
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; describePreset
	b ()Z isAmplified
	c ()Lnet/minecraft/core/Holder; preset
fdi net/minecraft/client/gui/screens/worldselection/WorldOpenFlows
	a LOGGER
	b minecraft
	c levelSource
	a ()Ljava/util/concurrent/CompletableFuture; promptBundledPackLoadFailure
	a (Lafq$d;Lafq$f;Lafq$e;)Ljava/lang/Object; loadWorldDataBlocking
	a (Leqv;Lfcy;Lcom/mojang/serialization/Lifecycle;Ljava/lang/Runnable;Z)V confirmWorldCreation
	a (Leyk;Ljava/lang/String;)V loadLevel
	a (Leyk;Ljava/lang/String;ZLjava/lang/Runnable;)V askForBackup
	a (Leyk;Ljava/lang/String;ZZ)V doLoadLevel
	a (Ljava/lang/String;)Lnet/minecraft/world/level/storage/Convertable$ConversionSession; createWorldAccess
	a (Ljava/lang/String;Lnet/minecraft/world/level/WorldSettings;Lnet/minecraft/world/level/levelgen/WorldOptions;Ljava/util/function/Function;)V createFreshLevel
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;)Lcom/mojang/datafixers/util/Pair; recreateWorldData
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;Ljava/lang/String;)V safeCloseAccess
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;Lnet/minecraft/server/DataPackResources;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/world/level/storage/SaveData;)V createLevelFromExistingSettings
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;Z)Lnet/minecraft/server/WorldStem; loadWorldStem
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;ZLnet/minecraft/server/packs/repository/ResourcePackRepository;)Lnet/minecraft/server/WorldStem; loadWorldStem
	b (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;ZLnet/minecraft/server/packs/repository/ResourcePackRepository;)Lafq$d; getPackConfigFromLevelData
fdj net/minecraft/client/gui/screens/worldselection/WorldSelectionList
	A SNAPSHOT_TOOLTIP_2
	B WORLD_LOCKED_TOOLTIP
	C WORLD_REQUIRES_CONVERSION
	D WORLD_EXPERIMENTAL
	E screen
	F pendingLevels
	G currentlyDisplayedLevels
	H filter
	I loadingHeader
	a ERROR_HIGHLIGHTED_SPRITE
	m ERROR_SPRITE
	n MARKED_JOIN_HIGHLIGHTED_SPRITE
	o MARKED_JOIN_SPRITE
	p WARNING_HIGHLIGHTED_SPRITE
	q WARNING_SPRITE
	s JOIN_HIGHLIGHTED_SPRITE
	t JOIN_SPRITE
	u LOGGER
	v DATE_FORMAT
	w ICON_MISSING
	x FROM_NEWER_TOOLTIP_1
	y FROM_NEWER_TOOLTIP_2
	z SNAPSHOT_TOOLTIP_1
	A ()V notifyListUpdated
	a (III)Z keyPressed
	a (Lesf;IIF)V render
	a (Lesl$a;)V setSelected
	a (Lfdj$a;)V setSelected
	a (Ljava/lang/String;)V updateFilter
	a (Ljava/lang/String;Ljava/util/List;)V fillLevels
	a (Ljava/lang/String;Lnet/minecraft/world/level/storage/WorldInfo;)Z filterAccepts
	a (Ljava/util/List;)V handleNewLevels
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V handleLevelLoadFailure
	b ()I getRowWidth
	b (Lewi;)V updateNarration
	c ()I getScrollbarPosition
	d ()Ljava/util/Optional; getSelectedOpt
	e ()Lfde; getScreen
	j ()V clearEntries
	w ()Ljava/util/List; pollLevelsIgnoreErrors
	x ()V reloadWorldList
	y ()Ljava/util/concurrent/CompletableFuture; loadLevels
	z ()V fillLoadingLevels
fdj$a net/minecraft/client/gui/screens/worldselection/WorldSelectionList$Entry
	b ()Z isSelectable
fdj$b net/minecraft/client/gui/screens/worldselection/WorldSelectionList$LoadingHeader
	a LOADING_LABEL
	b minecraft
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lesf;IIIIIIIZF)V render
	b ()Z isSelectable
fdj$c net/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry
	b ICON_WIDTH
	c ICON_HEIGHT
	d minecraft
	e screen
	f summary
	g icon
	h iconFile
	i lastClickTime
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lesf;IIIIIIIZF)V render
	b ()Z isSelectable
	d ()V joinWorld
	e ()V deleteWorld
	f ()V doDeleteWorld
	g ()V editWorld
	h ()V recreateWorld
	i ()Ljava/lang/String; getLevelName
	j ()V validateIconFile
	k ()V loadWorld
	l ()V queueLoadScreen
	m ()V loadIcon
fdl net/minecraft/client/gui/spectator/PlayerMenuItem
	a profile
	b skin
	c name
	a (Lesf;FI)V renderIcon
	a (Lfdn;)V selectItem
	aI_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aJ_ ()Z isEnabled
fdm net/minecraft/client/gui/spectator/RootSpectatorMenuCategory
	a PROMPT_TEXT
	b items
	a ()Ljava/util/List; getItems
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getPrompt
fdn net/minecraft/client/gui/spectator/SpectatorMenu
	a EMPTY_SLOT
	b CLOSE_SPRITE
	c SCROLL_LEFT_SPRITE
	d SCROLL_RIGHT_SPRITE
	e CLOSE_ITEM
	f SCROLL_LEFT
	g SCROLL_RIGHT_ENABLED
	h SCROLL_RIGHT_DISABLED
	i MAX_PER_PAGE
	j CLOSE_MENU_TEXT
	k PREVIOUS_PAGE_TEXT
	l NEXT_PAGE_TEXT
	m listener
	n category
	o selectedSlot
	p page
	a ()Ljava/util/List; getItems
	a (I)Lfdp; getItem
	a (Lfdo;)V selectCategory
	b ()Lfdp; getSelectedItem
	b (I)V selectSlot
	c ()Lfdo; getSelectedCategory
	d ()V exit
	e ()I getSelectedSlot
	f ()Lfdr; getCurrentPage
fdn$a net/minecraft/client/gui/spectator/SpectatorMenu$CloseSpectatorItem
	a (Lesf;FI)V renderIcon
	a (Lfdn;)V selectItem
	aI_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aJ_ ()Z isEnabled
fdn$b net/minecraft/client/gui/spectator/SpectatorMenu$ScrollMenuItem
	a direction
	b enabled
	a (Lesf;FI)V renderIcon
	a (Lfdn;)V selectItem
	aI_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aJ_ ()Z isEnabled
fdo net/minecraft/client/gui/spectator/SpectatorMenuCategory
	a ()Ljava/util/List; getItems
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getPrompt
fdp net/minecraft/client/gui/spectator/SpectatorMenuItem
	a (Lesf;FI)V renderIcon
	a (Lfdn;)V selectItem
	aI_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aJ_ ()Z isEnabled
fdq net/minecraft/client/gui/spectator/SpectatorMenuListener
	a (Lfdn;)V onSpectatorMenuClosed
fdr net/minecraft/client/gui/spectator/categories/SpectatorPage
	a NO_SELECTION
	b items
	c selection
	a ()I getSelectedSlot
	a (I)Lfdp; getItem
fds net/minecraft/client/gui/spectator/categories/TeleportToPlayerMenuCategory
	a TELEPORT_TO_PLAYER_SPRITE
	b PROFILE_ORDER
	c TELEPORT_TEXT
	d TELEPORT_PROMPT
	e items
	a ()Ljava/util/List; getItems
	a (Lesf;FI)V renderIcon
	a (Lfdn;)V selectItem
	aI_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aJ_ ()Z isEnabled
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getPrompt
fdt net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory
	a TELEPORT_TO_TEAM_SPRITE
	b TELEPORT_TEXT
	c TELEPORT_PROMPT
	d items
	a ()Ljava/util/List; getItems
	a (Leqv;Lnet/minecraft/world/scores/Scoreboard;)Ljava/util/List; createTeamEntries
	a (Lesf;FI)V renderIcon
	a (Lfdn;)V selectItem
	aI_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aJ_ ()Z isEnabled
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getPrompt
fdt$a net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory$TeamSelectionItem
	a team
	b iconSkin
	c players
	a (Leqv;Lnet/minecraft/world/scores/ScoreboardTeam;)Ljava/util/Optional; create
	a (Lesf;FI)V renderIcon
	a (Lfdn;)V selectItem
	aI_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aJ_ ()Z isEnabled
fdw net/minecraft/client/main/GameConfig
	a user
	b display
	c location
	d game
	e quickPlay
fdw$a net/minecraft/client/main/GameConfig$FolderData
	a gameDirectory
	b resourcePackDirectory
	c assetDirectory
	d assetIndex
	a ()Ljava/nio/file/Path; getExternalAssetSource
fdw$b net/minecraft/client/main/GameConfig$GameData
	a demo
	b launchVersion
	c versionType
	d disableMultiplayer
	e disableChat
fdw$c net/minecraft/client/main/GameConfig$QuickPlayData
	a path
	b singleplayer
	c multiplayer
	d realms
	a ()Z isEnabled
	b ()Ljava/lang/String; path
	c ()Ljava/lang/String; singleplayer
	d ()Ljava/lang/String; multiplayer
	e ()Ljava/lang/String; realms
fdw$d net/minecraft/client/main/GameConfig$UserData
	a user
	b userProperties
	c profileProperties
	d proxy
fdx net/minecraft/client/main/SilentInitException
fdz net/minecraft/client/model/AbstractZombieModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityMonster;)Z isAggressive
	a (Lnet/minecraft/world/entity/monster/EntityMonster;FFFFF)V setupAnim
fea net/minecraft/client/model/AgeableHierarchicalModel
	a youngScaleFactor
	b bodyYOffset
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
feb net/minecraft/client/model/AgeableListModel
	a scaleHead
	b babyYHeadOffset
	f babyZHeadOffset
	g babyHeadScale
	h babyBodyScale
	i bodyYOffset
	a ()Ljava/lang/Iterable; headParts
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
	b ()Ljava/lang/Iterable; bodyParts
fec net/minecraft/client/model/AllayModel
	a root
	b head
	f body
	g right_arm
	h left_arm
	i right_wing
	j left_wing
	k FLYING_ANIMATION_X_ROT
	l MAX_HAND_HOLDING_ITEM_X_ROT_RAD
	m MIN_HAND_HOLDING_ITEM_X_ROT_RAD
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EnumMainHand;Lelp;)V translateToHand
	a (Lnet/minecraft/world/entity/animal/allay/Allay;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fed net/minecraft/client/model/AnimationUtils
	a (Lfic;FF)V bobModelPart
	a (Lfic;Lfic;F)V bobArms
	a (Lfic;Lfic;Lfic;Z)V animateCrossbowHold
	a (Lfic;Lfic;Lnet/minecraft/world/entity/EntityInsentient;FF)V swingWeaponDown
	a (Lfic;Lfic;Lnet/minecraft/world/entity/EntityLiving;Z)V animateCrossbowCharge
	a (Lfic;Lfic;ZFF)V animateZombieArms
fee net/minecraft/client/model/ArmedModel
	a (Lnet/minecraft/world/entity/EnumMainHand;Lelp;)V translateToHand
fef net/minecraft/client/model/ArmorStandArmorModel
	a (Lfig;)Lfii; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/decoration/EntityArmorStand;FFFFF)V setupAnim
feg net/minecraft/client/model/ArmorStandModel
	A shoulderStick
	B basePlate
	a RIGHT_BODY_STICK
	b LEFT_BODY_STICK
	w SHOULDER_STICK
	x BASE_PLATE
	y rightBodyStick
	z leftBodyStick
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EnumMainHand;Lelp;)V translateToHand
	a (Lnet/minecraft/world/entity/decoration/EntityArmorStand;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/decoration/EntityArmorStand;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfii; createBodyLayer
feh net/minecraft/client/model/AxolotlModel
	a SWIMMING_LEG_XROT
	b tail
	f leftHindLeg
	g rightHindLeg
	h leftFrontLeg
	i rightFrontLeg
	j body
	k head
	l topGills
	m leftGills
	n rightGills
	a ()Ljava/lang/Iterable; headParts
	a (F)V setupWaterHoveringAnimation
	a (FF)F lerpTo
	a (FFF)F lerpTo
	a (Lfic;)Lorg/joml/Vector3f; getRotationVector
	a (Lfic;FFF)V lerpPart
	a (Lfic;Lorg/joml/Vector3f;)V setRotationFromVector
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V saveAnimationValues
	a (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;FF)V setupInitialAnimationValues
	a (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	b (F)V setupPlayDeadAnimation
	b (FF)V setupLayStillOnGroundAnimation
	c ()Lfii; createBodyLayer
	c (FF)V setupGroundCrawlingAnimation
	d ()V applyMirrorLegRotations
	d (FF)V setupSwimmingAnimation
fei net/minecraft/client/model/BatModel
	a root
	b head
	f body
	g rightWing
	h leftWing
	i rightWingTip
	j leftWingTip
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/ambient/EntityBat;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fej net/minecraft/client/model/BeeModel
	a BEE_Y_BASE
	b BONE
	f STINGER
	g LEFT_ANTENNA
	h RIGHT_ANTENNA
	i FRONT_LEGS
	j MIDDLE_LEGS
	k BACK_LEGS
	l bone
	m rightWing
	n leftWing
	o frontLeg
	p midLeg
	q backLeg
	r stinger
	s leftAntenna
	t rightAntenna
	u rollAmount
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityBee;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityBee;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfii; createBodyLayer
fek net/minecraft/client/model/BlazeModel
	a root
	b upperBodyParts
	f head
	a ()Lfic; root
	a (I)Ljava/lang/String; getPartName
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fel net/minecraft/client/model/BoatModel
	a LEFT_PADDLE
	b RIGHT_PADDLE
	f WATER_PATCH
	g BOTTOM
	h BACK
	i FRONT
	j RIGHT
	k LEFT
	l leftPaddle
	m rightPaddle
	n waterPatch
	o parts
	a ()Lfii; createBodyModel
	a (Lfic;)Lcom/google/common/collect/ImmutableList$Builder; createPartsBuilder
	a (Lfil;)V createChildren
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat;ILfic;F)V animatePaddle
	b ()Lcom/google/common/collect/ImmutableList; parts
	c ()Lfic; waterPatch
	d ()Ljava/lang/Iterable; parts
fem net/minecraft/client/model/BookModel
	a LEFT_PAGES
	b RIGHT_PAGES
	c FLIP_PAGE_1
	d FLIP_PAGE_2
	e root
	f leftLid
	g rightLid
	h leftPages
	i rightPages
	j flipPage1
	k flipPage2
	a ()Lfii; createBodyLayer
	a (FFFF)V setupAnim
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
	b (Lelp;Lelt;IIFFFF)V render
fen net/minecraft/client/model/CamelModel
	a MAX_WALK_ANIMATION_SPEED
	b WALK_ANIMATION_SCALE_FACTOR
	f BABY_SCALE
	g BABY_Y_OFFSET
	h SADDLE
	i BRIDLE
	j REINS
	k root
	l head
	m saddleParts
	n ridingParts
	a ()Lfic; root
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/camel/Camel;)V toggleInvisibleParts
	a (Lnet/minecraft/world/entity/animal/camel/Camel;FFF)V applyHeadRotation
	a (Lnet/minecraft/world/entity/animal/camel/Camel;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
feo net/minecraft/client/model/CatModel
	q lieDownAmount
	r lieDownAmountTail
	s relaxStateOneAmount
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityCat;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityCat;FFFFF)V setupAnim
fep net/minecraft/client/model/ChestBoatModel
	a CHEST_BOTTOM
	b CHEST_LID
	f CHEST_LOCK
	a (Lfic;)Lcom/google/common/collect/ImmutableList$Builder; createPartsBuilder
	e ()Lfii; createBodyModel
feq net/minecraft/client/model/ChestRaftModel
	a CHEST_BOTTOM
	b CHEST_LID
	f CHEST_LOCK
	a ()Lfii; createBodyModel
	a (Lfic;)Lcom/google/common/collect/ImmutableList$Builder; createPartsBuilder
fer net/minecraft/client/model/ChestedHorseModel
	g leftChest
	h rightChest
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseChestedAbstract;FFFFF)V setupAnim
	c ()Lfii; createBodyLayer
fes net/minecraft/client/model/ChickenModel
	a RED_THING
	b head
	f body
	g rightLeg
	h leftLeg
	i rightWing
	j leftWing
	k beak
	l redThing
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfii; createBodyLayer
fet net/minecraft/client/model/CodModel
	a root
	b tailFin
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
feu net/minecraft/client/model/ColorableAgeableListModel
	a r
	b g
	f b
	a (FFF)V setColor
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
fev net/minecraft/client/model/ColorableHierarchicalModel
	a r
	b g
	f b
	a (FFF)V setColor
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
few net/minecraft/client/model/CowModel
	c ()Lfii; createBodyLayer
	d ()Lfic; getHead
fex net/minecraft/client/model/CreeperModel
	a root
	b head
	f rightHindLeg
	g leftHindLeg
	h rightFrontLeg
	i leftFrontLeg
	j Y_OFFSET
	a ()Lfic; root
	a (Lfig;)Lfii; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
fey net/minecraft/client/model/DolphinModel
	a root
	b body
	f tail
	g tailFin
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fez net/minecraft/client/model/DrownedModel
	a (Lfig;)Lfii; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityMonster;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityZombie;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/monster/EntityZombie;FFFFF)V setupAnim
ffa net/minecraft/client/model/ElytraModel
	a rightWing
	b leftWing
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfii; createLayer
ffb net/minecraft/client/model/EndermanModel
	a carrying
	b creepy
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	c ()Lfii; createBodyLayer
ffc net/minecraft/client/model/EndermiteModel
	a BODY_COUNT
	b BODY_SIZES
	f BODY_TEXS
	g root
	h bodyParts
	a ()Lfic; root
	a (I)Ljava/lang/String; createSegmentName
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
ffd net/minecraft/client/model/EntityModel
	c attackTime
	d riding
	e young
	a (Lffd;)V copyPropertiesTo
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
ffe net/minecraft/client/model/EvokerFangsModel
	a BASE
	b UPPER_JAW
	f LOWER_JAW
	g root
	h base
	i upperJaw
	j lowerJaw
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fff net/minecraft/client/model/FoxModel
	a head
	b body
	f rightHindLeg
	g leftHindLeg
	h rightFrontLeg
	i leftFrontLeg
	j tail
	k LEG_SIZE
	l HEAD_HEIGHT
	m LEG_POS
	n legMotionPos
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityFox;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityFox;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfii; createBodyLayer
ffg net/minecraft/client/model/FrogModel
	a MAX_WALK_ANIMATION_SPEED
	b MAX_SWIM_ANIMATION_SPEED
	f WALK_ANIMATION_SCALE_FACTOR
	g root
	h body
	i head
	j eyes
	k tongue
	l leftArm
	m rightArm
	n leftLeg
	o rightLeg
	p croakingBody
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/frog/Frog;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
ffh net/minecraft/client/model/GhastModel
	a root
	b tentacles
	a ()Lfic; root
	a (I)Ljava/lang/String; createTentacleName
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
ffi net/minecraft/client/model/GiantZombieModel
	a (Lnet/minecraft/world/entity/monster/EntityGiantZombie;)Z isAggressive
	a (Lnet/minecraft/world/entity/monster/EntityMonster;)Z isAggressive
ffj net/minecraft/client/model/GoatModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/goat/Goat;FFFFF)V setupAnim
	c ()Lfii; createBodyLayer
ffk net/minecraft/client/model/GuardianModel
	a SPIKE_X_ROT
	b SPIKE_Y_ROT
	f SPIKE_Z_ROT
	g SPIKE_X
	h SPIKE_Y
	i SPIKE_Z
	j EYE
	k TAIL_0
	l TAIL_1
	m TAIL_2
	n root
	o head
	p eye
	q spikeParts
	r tailParts
	a ()Lfic; root
	a (FF)V setupSpikes
	a (I)Ljava/lang/String; createSpikeName
	a (IFF)F getSpikeOffset
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityGuardian;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
	b (IFF)F getSpikeX
	c (IFF)F getSpikeY
	d (IFF)F getSpikeZ
ffl net/minecraft/client/model/HeadedModel
	d ()Lfic; getHead
ffm net/minecraft/client/model/HierarchicalModel
	a ANIMATION_VECTOR_CACHE
	a ()Lfic; root
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
	a (Lerm;)V applyStatic
	a (Lerm;FFFF)V animateWalk
	a (Ljava/lang/String;)Ljava/util/Optional; getAnyDescendantWithName
	a (Lnet/minecraft/world/entity/AnimationState;Lerm;F)V animate
	a (Lnet/minecraft/world/entity/AnimationState;Lerm;FF)V animate
ffn net/minecraft/client/model/HoglinModel
	a DEFAULT_HEAD_X_ROT
	b ATTACK_HEAD_X_ROT_END
	f head
	g rightEar
	h leftEar
	i body
	j rightFrontLeg
	k leftFrontLeg
	l rightHindLeg
	m leftHindLeg
	n mane
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityInsentient;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfii; createBodyLayer
ffo net/minecraft/client/model/HorseModel
	A leftFrontLeg
	B rightHindBabyLeg
	C leftHindBabyLeg
	D rightFrontBabyLeg
	E leftFrontBabyLeg
	F tail
	G saddleParts
	H ridingParts
	a HEAD_PARTS
	b body
	f headParts
	g DEG_125
	h DEG_60
	i DEG_45
	j DEG_30
	k DEG_15
	l LEFT_HIND_BABY_LEG
	m RIGHT_HIND_BABY_LEG
	n LEFT_FRONT_BABY_LEG
	o RIGHT_FRONT_BABY_LEG
	p SADDLE
	q LEFT_SADDLE_MOUTH
	r LEFT_SADDLE_LINE
	s RIGHT_SADDLE_MOUTH
	t RIGHT_SADDLE_LINE
	u HEAD_SADDLE
	w MOUTH_SADDLE_WRAP
	x rightHindLeg
	y leftHindLeg
	z rightFrontLeg
	a ()Ljava/lang/Iterable; headParts
	a (Lfig;)Lfik; createBodyMesh
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
ffp net/minecraft/client/model/HumanoidArmorModel
	a (Lfig;)Lfik; createBodyLayer
ffq net/minecraft/client/model/HumanoidModel
	a DUCK_WALK_ROTATION
	b SPYGLASS_ARM_ROT_Y
	f OVERLAY_SCALE
	g HAT_OVERLAY_SCALE
	h LEGGINGS_OVERLAY_SCALE
	i TOOT_HORN_XROT_BASE
	j TOOT_HORN_YROT_BASE
	k head
	l hat
	m body
	n rightArm
	o leftArm
	p rightLeg
	q leftLeg
	r leftArmPose
	s rightArmPose
	t crouching
	u swimAmount
	w SPYGLASS_ARM_ROT_X
	x SPYGLASS_ARM_CROUCH_ROT_X
	a ()Ljava/lang/Iterable; headParts
	a (F)F quadraticArmUpdate
	a (FFF)F rotlerpRad
	a (Lffq;)V copyPropertiesTo
	a (Lfig;F)Lfik; createMesh
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;)V poseRightArm
	a (Lnet/minecraft/world/entity/EntityLiving;F)V setupAttackAnimation
	a (Lnet/minecraft/world/entity/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EnumMainHand;)Lfic; getArm
	a (Lnet/minecraft/world/entity/EnumMainHand;Lelp;)V translateToHand
	b ()Ljava/lang/Iterable; bodyParts
	b (Lnet/minecraft/world/entity/EntityLiving;)V poseLeftArm
	c (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/EnumMainHand; getAttackArm
	c_ (Z)V setAllVisible
	d ()Lfic; getHead
ffq$a net/minecraft/client/model/HumanoidModel$ArmPose
	a EMPTY
	b ITEM
	c BLOCK
	d BOW_AND_ARROW
	e THROW_SPEAR
	f CROSSBOW_CHARGE
	g CROSSBOW_HOLD
	h SPYGLASS
	i TOOT_HORN
	j BRUSH
	k twoHanded
	l $VALUES
	a ()Z isTwoHanded
	b ()[Lffq$a; $values
ffr net/minecraft/client/model/IllagerModel
	a root
	b head
	f hat
	g arms
	h leftLeg
	i rightLeg
	j rightArm
	k leftArm
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EnumMainHand;)Lfic; getArm
	a (Lnet/minecraft/world/entity/EnumMainHand;Lelp;)V translateToHand
	a (Lnet/minecraft/world/entity/monster/EntityIllagerAbstract;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
	c ()Lfic; getHat
	d ()Lfic; getHead
ffs net/minecraft/client/model/IronGolemModel
	a root
	b head
	f rightArm
	g leftArm
	h rightLeg
	i leftLeg
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityIronGolem;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityIronGolem;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
	c ()Lfic; getFlowerHoldingArm
fft net/minecraft/client/model/LavaSlimeModel
	a SEGMENT_COUNT
	b root
	f bodyCubes
	a ()Lfic; root
	a (I)Ljava/lang/String; getSegmentName
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntitySlime;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/monster/EntitySlime;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
ffu net/minecraft/client/model/LeashKnotModel
	a KNOT
	b root
	f knot
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
ffv net/minecraft/client/model/ListModel
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
	d ()Ljava/lang/Iterable; parts
ffw net/minecraft/client/model/LlamaModel
	a head
	b body
	f rightHindLeg
	g leftHindLeg
	h rightFrontLeg
	i leftFrontLeg
	j rightChest
	k leftChest
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
	a (Lfig;)Lfii; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseChestedAbstract;FFFFF)V setupAnim
ffx net/minecraft/client/model/LlamaSpitModel
	a MAIN
	b root
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
ffy net/minecraft/client/model/MinecartModel
	a root
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
ffz net/minecraft/client/model/Model
	v renderType
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/resources/MinecraftKey;)Lfom; renderType
fg$a net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate
	a state
	b properties
	c nbt
	a ()Z requiresNbt
	a (Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;)Z test
fg$b net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result
	a ()Z requiresNbt
fg$c net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate
	a tag
	b nbt
	c vagueProperties
	a ()Z requiresNbt
	a (Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;)Z test
fga net/minecraft/client/model/ModelUtils
	a (FFF)F rotlerpRad
fgb net/minecraft/client/model/OcelotModel
	A BODY_WALK_Z
	B TAIL_1_WALK_Y
	C TAIL_1_WALK_Z
	D TAIL_2_WALK_Y
	E TAIL_2_WALK_Z
	F FRONT_LEG_Z
	G TAIL_1
	H TAIL_2
	a SITTING_STATE
	b BACK_LEG_Y
	f BACK_LEG_Z
	g FRONT_LEG_Y
	h leftHindLeg
	i rightHindLeg
	j leftFrontLeg
	k rightFrontLeg
	l tail1
	m tail2
	n head
	o body
	p state
	q CROUCH_STATE
	r WALK_STATE
	s SPRINT_STATE
	t XO
	u YO
	w ZO
	x HEAD_WALK_Y
	y HEAD_WALK_Z
	z BODY_WALK_Y
	a ()Ljava/lang/Iterable; headParts
	a (Lfig;)Lfik; createBodyMesh
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
fgc net/minecraft/client/model/PandaModel
	j sitAmount
	k lieOnBackAmount
	l rollAmount
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityPanda;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityPanda;FFFFF)V setupAnim
	c ()Lfii; createBodyLayer
fgd net/minecraft/client/model/ParrotModel
	a FEATHER
	b root
	f body
	g tail
	h leftWing
	i rightWing
	j head
	k feather
	l leftLeg
	m rightLeg
	a ()Lfic; root
	a (Lelp;Lelt;IIFFFFI)V renderOnShoulder
	a (Lfgd$a;)V prepare
	a (Lfgd$a;IFFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityParrot;)Lfgd$a; getState
	a (Lnet/minecraft/world/entity/animal/EntityParrot;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityParrot;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fgd$a net/minecraft/client/model/ParrotModel$State
	a FLYING
	b STANDING
	c SITTING
	d PARTY
	e ON_SHOULDER
	f $VALUES
	a ()[Lfgd$a; $values
fge net/minecraft/client/model/PhantomModel
	a TAIL_BASE
	b TAIL_TIP
	f root
	g leftWingBase
	h leftWingTip
	i rightWingBase
	j rightWingTip
	k tailBase
	l tailTip
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityPhantom;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fgf net/minecraft/client/model/PigModel
	a (Lfig;)Lfii; createBodyLayer
fgg net/minecraft/client/model/PiglinHeadModel
	a head
	b leftEar
	c rightEar
	a ()Lfik; createHeadModel
	a (FFF)V setupAnim
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
fgh net/minecraft/client/model/PiglinModel
	A leftEar
	B bodyDefault
	C headDefault
	D leftArmDefault
	E rightArmDefault
	a rightEar
	a (Lfig;)Lfik; createMesh
	a (Lfig;Lfik;)V addHead
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityInsentient;)V holdWeaponHigh
	a (Lnet/minecraft/world/entity/EntityInsentient;F)V setupAttackAnimation
	a (Lnet/minecraft/world/entity/EntityInsentient;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;F)V setupAttackAnimation
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
fgi net/minecraft/client/model/PlayerModel
	A CLOAK
	B LEFT_SLEEVE
	C RIGHT_SLEEVE
	D LEFT_PANTS
	E RIGHT_PANTS
	F parts
	G cloak
	H ear
	I slim
	a EAR
	b leftSleeve
	w rightSleeve
	x leftPants
	y rightPants
	z jacket
	a (Lelp;Lelt;II)V renderEars
	a (Lfig;Z)Lfik; createMesh
	a (Lnet/minecraft/util/RandomSource;)Lfic; getRandomModelPart
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EnumMainHand;Lelp;)V translateToHand
	b ()Ljava/lang/Iterable; bodyParts
	b (Lelp;Lelt;II)V renderCloak
	c_ (Z)V setAllVisible
fgj net/minecraft/client/model/PolarBearModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityPolarBear;FFFFF)V setupAnim
	c ()Lfii; createBodyLayer
fgk net/minecraft/client/model/PufferfishBigModel
	a root
	b leftBlueFin
	f rightBlueFin
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fgl net/minecraft/client/model/PufferfishMidModel
	a root
	b leftBlueFin
	f rightBlueFin
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fgm net/minecraft/client/model/PufferfishSmallModel
	a root
	b leftFin
	f rightFin
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fgn net/minecraft/client/model/QuadrupedModel
	a head
	b body
	f rightHindLeg
	g leftHindLeg
	h rightFrontLeg
	i leftFrontLeg
	a ()Ljava/lang/Iterable; headParts
	a (ILfig;)Lfik; createBodyMesh
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
fgo net/minecraft/client/model/RabbitModel
	a REAR_JUMP_ANGLE
	b FRONT_JUMP_ANGLE
	f LEFT_HAUNCH
	g RIGHT_HAUNCH
	h leftRearFoot
	i rightRearFoot
	j leftHaunch
	k rightHaunch
	l body
	m leftFrontLeg
	n rightFrontLeg
	o head
	p rightEar
	q leftEar
	r tail
	s nose
	t jumpRotation
	u NEW_SCALE
	a ()Lfii; createBodyLayer
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityRabbit;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityRabbit;FFFFF)V setupAnim
fgp net/minecraft/client/model/RaftModel
	a LEFT_PADDLE
	b RIGHT_PADDLE
	f BOTTOM
	g leftPaddle
	h rightPaddle
	i parts
	a (Lfic;)Lcom/google/common/collect/ImmutableList$Builder; createPartsBuilder
	a (Lfil;)V createChildren
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat;ILfic;F)V animatePaddle
	b ()Lfii; createBodyModel
	c ()Lcom/google/common/collect/ImmutableList; parts
	d ()Ljava/lang/Iterable; parts
fgq net/minecraft/client/model/RavagerModel
	a root
	b head
	f mouth
	g rightHindLeg
	h leftHindLeg
	i rightFrontLeg
	j leftFrontLeg
	k neck
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityRavager;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/monster/EntityRavager;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fgr net/minecraft/client/model/SalmonModel
	a BODY_FRONT
	b BODY_BACK
	f root
	g bodyBack
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fgs net/minecraft/client/model/SheepFurModel
	j headXRot
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntitySheep;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntitySheep;FFFFF)V setupAnim
	c ()Lfii; createFurLayer
fgt net/minecraft/client/model/SheepModel
	j headXRot
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntitySheep;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntitySheep;FFFFF)V setupAnim
	c ()Lfii; createBodyLayer
fgu net/minecraft/client/model/ShieldModel
	a PLATE
	b HANDLE
	c SHIELD_WIDTH
	d SHIELD_HEIGHT
	e root
	f plate
	g handle
	a ()Lfii; createLayer
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
	b ()Lfic; plate
	c ()Lfic; handle
fgv net/minecraft/client/model/ShulkerBulletModel
	a MAIN
	b root
	f main
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fgw net/minecraft/client/model/ShulkerModel
	a LID
	b BASE
	f base
	g lid
	h head
	a ()Lfii; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityShulker;FFFFF)V setupAnim
	b ()Lfic; getLid
	c ()Lfic; getHead
	d ()Ljava/lang/Iterable; parts
fgx net/minecraft/client/model/SilverfishModel
	a BODY_COUNT
	b root
	f bodyParts
	g bodyLayers
	h BODY_SIZES
	i BODY_TEXS
	a ()Lfic; root
	a (I)Ljava/lang/String; getLayerName
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
	b (I)Ljava/lang/String; getSegmentName
fgy net/minecraft/client/model/SkeletonModel
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityInsentient;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/EntityInsentient;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EnumMainHand;Lelp;)V translateToHand
	c ()Lfii; createBodyLayer
fgz net/minecraft/client/model/SkullModel
	a head
	b root
	a ()Lfik; createHeadModel
	a (FFF)V setupAnim
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
	b ()Lfii; createHumanoidHeadLayer
	c ()Lfii; createMobHeadLayer
fha net/minecraft/client/model/SkullModelBase
	a (FFF)V setupAnim
fhb net/minecraft/client/model/SlimeModel
	a root
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createOuterBodyLayer
	c ()Lfii; createInnerBodyLayer
fhc net/minecraft/client/model/SnifferModel
	a WALK_ANIMATION_SPEED_MAX
	b WALK_ANIMATION_SCALE_FACTOR
	f root
	g head
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fhd net/minecraft/client/model/SnowGolemModel
	a UPPER_BODY
	b root
	f upperBody
	g head
	h leftArm
	i rightArm
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
	c ()Lfic; getHead
fhe net/minecraft/client/model/SpiderModel
	a BODY_0
	b BODY_1
	f RIGHT_MIDDLE_FRONT_LEG
	g LEFT_MIDDLE_FRONT_LEG
	h RIGHT_MIDDLE_HIND_LEG
	i LEFT_MIDDLE_HIND_LEG
	j root
	k head
	l rightHindLeg
	m leftHindLeg
	n rightMiddleHindLeg
	o leftMiddleHindLeg
	p rightMiddleFrontLeg
	q leftMiddleFrontLeg
	r rightFrontLeg
	s leftFrontLeg
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createSpiderBodyLayer
fhf net/minecraft/client/model/SquidModel
	a tentacles
	b root
	a ()Lfic; root
	a (I)Ljava/lang/String; createTentacleName
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fhg net/minecraft/client/model/StriderModel
	a RIGHT_BOTTOM_BRISTLE
	b RIGHT_MIDDLE_BRISTLE
	f RIGHT_TOP_BRISTLE
	g LEFT_TOP_BRISTLE
	h LEFT_MIDDLE_BRISTLE
	i LEFT_BOTTOM_BRISTLE
	j root
	k rightLeg
	l leftLeg
	m body
	n rightBottomBristle
	o rightMiddleBristle
	p rightTopBristle
	q leftTopBristle
	r leftMiddleBristle
	s leftBottomBristle
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityStrider;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
fhh net/minecraft/client/model/TadpoleModel
	a root
	b tail
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/frog/Tadpole;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfii; createBodyLayer
fhi net/minecraft/client/model/TridentModel
	a TEXTURE
	b root
	a ()Lfii; createLayer
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
fhj net/minecraft/client/model/TropicalFishModelA
	a root
	b tail
	a ()Lfic; root
	a (Lfig;)Lfii; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
fhk net/minecraft/client/model/TropicalFishModelB
	a root
	b tail
	a ()Lfic; root
	a (Lfig;)Lfii; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
fhl net/minecraft/client/model/TurtleModel
	j EGG_BELLY
	k eggBelly
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityTurtle;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfii; createBodyLayer
fhm net/minecraft/client/model/VexModel
	a root
	b body
	f rightArm
	g leftArm
	h rightWing
	i leftWing
	j head
	a ()Lfic; root
	a (Lelp;Z)V offsetStackPosition
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EnumMainHand;Lelp;)V translateToHand
	a (Lnet/minecraft/world/entity/monster/EntityVex;FFFFF)V setupAnim
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;F)V setArmsCharging
	b ()Lfii; createBodyLayer
fhn net/minecraft/client/model/VillagerHeadModel
	a (Z)V hatVisible
fho net/minecraft/client/model/VillagerModel
	a nose
	b root
	f head
	g hat
	h hatRim
	i rightLeg
	j leftLeg
	a ()Lfic; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Z)V hatVisible
	b ()Lfik; createBodyModel
	d ()Lfic; getHead
fhp net/minecraft/client/model/WardenModel
	a bone
	b body
	f head
	g rightTendril
	h leftTendril
	i leftLeg
	j leftArm
	k leftRibcage
	l rightArm
	m rightLeg
	n rightRibcage
	o DEFAULT_ARM_X_Y
	p DEFAULT_ARM_Z
	q root
	r tendrilsLayerModelParts
	s heartLayerModelParts
	t bioluminescentLayerModelParts
	u pulsatingSpotsLayerModelParts
	a ()Lfic; root
	a (F)V animateIdlePose
	a (FF)V animateHeadLookTarget
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/warden/Warden;FF)V animateTendrils
	a (Lnet/minecraft/world/entity/monster/warden/Warden;FFFFF)V setupAnim
	b ()Lfii; createBodyLayer
	b (FF)V animateWalk
	c ()Ljava/util/List; getTendrilsLayerModelParts
	d ()Ljava/util/List; getHeartLayerModelParts
	e ()Ljava/util/List; getBioluminescentLayerModelParts
	f ()Ljava/util/List; getPulsatingSpotsLayerModelParts
	g ()V resetArmPoses
fhq net/minecraft/client/model/WaterPatchModel
	c ()Lfic; waterPatch
fhr net/minecraft/client/model/WitchModel
	b holdingItem
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b (Z)V setHoldingItem
	c ()Lfii; createBodyLayer
	e ()Lfic; getNose
fhs net/minecraft/client/model/WitherBossModel
	a RIBCAGE
	b CENTER_HEAD
	f RIGHT_HEAD
	g LEFT_HEAD
	h RIBCAGE_X_ROT_OFFSET
	i TAIL_X_ROT_OFFSET
	j root
	k centerHead
	l rightHead
	m leftHead
	n ribcage
	o tail
	a ()Lfic; root
	a (Lfig;)Lfii; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/boss/wither/EntityWither;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/boss/wither/EntityWither;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/boss/wither/EntityWither;Lfic;I)V setupHeadRotation
fht net/minecraft/client/model/WolfModel
	a REAL_HEAD
	b UPPER_BODY
	f REAL_TAIL
	g head
	h realHead
	i body
	j rightHindLeg
	k leftHindLeg
	l rightFrontLeg
	m leftFrontLeg
	n tail
	o realTail
	p upperBody
	q LEG_SIZE
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityWolf;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityWolf;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfii; createBodyLayer
fhu net/minecraft/client/model/ZombieModel
	a (Lnet/minecraft/world/entity/monster/EntityMonster;)Z isAggressive
	a (Lnet/minecraft/world/entity/monster/EntityZombie;)Z isAggressive
fhv net/minecraft/client/model/ZombieVillagerModel
	a hatRim
	a (Lfig;)Lfii; createArmorLayer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityZombie;FFFFF)V setupAnim
	a (Z)V hatVisible
	c ()Lfii; createBodyLayer
fhw net/minecraft/client/model/dragon/DragonHeadModel
	a head
	b jaw
	a ()Lfii; createHeadLayer
	a (FFF)V setupAnim
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
fhy net/minecraft/client/model/geom/EntityModelSet
	a roots
	a (Lfia;)Lfic; bakeLayer
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
fhz net/minecraft/client/model/geom/LayerDefinitions
	a FISH_PATTERN_DEFORMATION
	b OUTER_ARMOR_DEFORMATION
	c INNER_ARMOR_DEFORMATION
	a ()Ljava/util/Map; createRoots
fi$a net/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult
	a blockState
	b properties
	c nbt
	a ()Lnet/minecraft/world/level/block/state/IBlockData; blockState
	b ()Ljava/util/Map; properties
	c ()Lnet/minecraft/nbt/NBTTagCompound; nbt
fi$b net/minecraft/commands/arguments/blocks/BlockStateParser$TagResult
	a tag
	b vagueProperties
	c nbt
	a ()Lnet/minecraft/core/HolderSet; tag
	b ()Ljava/util/Map; vagueProperties
	c ()Lnet/minecraft/nbt/NBTTagCompound; nbt
fia net/minecraft/client/model/geom/ModelLayerLocation
	a model
	b layer
	a ()Lnet/minecraft/resources/MinecraftKey; getModel
	b ()Ljava/lang/String; getLayer
fib net/minecraft/client/model/geom/ModelLayers
	A COW
	B CREEPER
	C CREEPER_ARMOR
	D CREEPER_HEAD
	E DECORATED_POT_BASE
	F DECORATED_POT_SIDES
	G DOLPHIN
	H DONKEY
	I DOUBLE_CHEST_LEFT
	J DOUBLE_CHEST_RIGHT
	K DRAGON_SKULL
	L DROWNED
	M DROWNED_INNER_ARMOR
	N DROWNED_OUTER_ARMOR
	O DROWNED_OUTER_LAYER
	P ELDER_GUARDIAN
	Q ELYTRA
	R ENDERMAN
	S ENDERMITE
	T ENDER_DRAGON
	U END_CRYSTAL
	V EVOKER
	W EVOKER_FANGS
	X FOX
	Y FROG
	Z FURNACE_MINECART
	a ALLAY
	aA PARROT
	aB PHANTOM
	aC PIG
	aD PIGLIN
	aE PIGLIN_BRUTE
	aF PIGLIN_BRUTE_INNER_ARMOR
	aG PIGLIN_BRUTE_OUTER_ARMOR
	aH PIGLIN_HEAD
	aI PIGLIN_INNER_ARMOR
	aJ PIGLIN_OUTER_ARMOR
	aK PIG_SADDLE
	aL PILLAGER
	aM PLAYER
	aN PLAYER_HEAD
	aO PLAYER_INNER_ARMOR
	aP PLAYER_OUTER_ARMOR
	aQ PLAYER_SLIM
	aR PLAYER_SLIM_INNER_ARMOR
	aS PLAYER_SLIM_OUTER_ARMOR
	aT PLAYER_SPIN_ATTACK
	aU POLAR_BEAR
	aV PUFFERFISH_BIG
	aW PUFFERFISH_MEDIUM
	aX PUFFERFISH_SMALL
	aY RABBIT
	aZ RAVAGER
	aa GHAST
	ab GIANT
	ac GIANT_INNER_ARMOR
	ad GIANT_OUTER_ARMOR
	ae GLOW_SQUID
	af GOAT
	ag GUARDIAN
	ah HOGLIN
	ai HOPPER_MINECART
	aj HORSE
	ak HORSE_ARMOR
	al HUSK
	am HUSK_INNER_ARMOR
	an HUSK_OUTER_ARMOR
	ao ILLUSIONER
	ap IRON_GOLEM
	aq LEASH_KNOT
	ar LLAMA
	as LLAMA_DECOR
	at LLAMA_SPIT
	au MAGMA_CUBE
	av MINECART
	aw MOOSHROOM
	ax MULE
	ay OCELOT
	az PANDA
	b ARMOR_STAND
	bA TNT_MINECART
	bB TRADER_LLAMA
	bC TRIDENT
	bD TROPICAL_FISH_LARGE
	bE TROPICAL_FISH_LARGE_PATTERN
	bF TROPICAL_FISH_SMALL
	bG TROPICAL_FISH_SMALL_PATTERN
	bH TURTLE
	bI VEX
	bJ VILLAGER
	bK VINDICATOR
	bL WARDEN
	bM WANDERING_TRADER
	bN WITCH
	bO WITHER
	bP WITHER_ARMOR
	bQ WITHER_SKELETON
	bR WITHER_SKELETON_INNER_ARMOR
	bS WITHER_SKELETON_OUTER_ARMOR
	bT WITHER_SKELETON_SKULL
	bU WITHER_SKULL
	bV WOLF
	bW ZOGLIN
	bX ZOMBIE
	bY ZOMBIE_HEAD
	bZ ZOMBIE_HORSE
	ba SALMON
	bb SHEEP
	bc SHEEP_FUR
	bd SHIELD
	be SHULKER
	bf SHULKER_BULLET
	bg SILVERFISH
	bh SKELETON
	bi SKELETON_HORSE
	bj SKELETON_INNER_ARMOR
	bk SKELETON_OUTER_ARMOR
	bl SKELETON_SKULL
	bm SLIME
	bn SLIME_OUTER
	bo SNIFFER
	bp SNOW_GOLEM
	bq SPAWNER_MINECART
	br SPIDER
	bs SQUID
	bt STRAY
	bu STRAY_INNER_ARMOR
	bv STRAY_OUTER_ARMOR
	bw STRAY_OUTER_LAYER
	bx STRIDER
	by STRIDER_SADDLE
	bz TADPOLE
	c ARMOR_STAND_INNER_ARMOR
	ca ZOMBIE_INNER_ARMOR
	cb ZOMBIE_OUTER_ARMOR
	cc ZOMBIE_VILLAGER
	cd ZOMBIE_VILLAGER_INNER_ARMOR
	ce ZOMBIE_VILLAGER_OUTER_ARMOR
	cf ZOMBIFIED_PIGLIN
	cg ZOMBIFIED_PIGLIN_INNER_ARMOR
	ch ZOMBIFIED_PIGLIN_OUTER_ARMOR
	ci DEFAULT_LAYER
	cj ALL_MODELS
	d ARMOR_STAND_OUTER_ARMOR
	e AXOLOTL
	f BANNER
	g BAT
	h BED_FOOT
	i BED_HEAD
	j BEE
	k BELL
	l BLAZE
	m BOOK
	n CAT
	o CAT_COLLAR
	p CAMEL
	q CAVE_SPIDER
	r CHEST
	s CHEST_MINECART
	t CHICKEN
	u COD
	v COMMAND_BLOCK_MINECART
	w CONDUIT_CAGE
	x CONDUIT_EYE
	y CONDUIT_SHELL
	z CONDUIT_WIND
	a ()Ljava/util/stream/Stream; getKnownLocations
	a (Ljava/lang/String;)Lfia; register
	a (Ljava/lang/String;Ljava/lang/String;)Lfia; register
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType;)Lfia; createRaftModelName
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lfia; createSignModelName
	b (Ljava/lang/String;)Lfia; registerInnerArmor
	b (Ljava/lang/String;Ljava/lang/String;)Lfia; createLocation
	b (Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType;)Lfia; createChestRaftModelName
	b (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lfia; createHangingSignModelName
	c (Ljava/lang/String;)Lfia; registerOuterArmor
	c (Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType;)Lfia; createBoatModelName
	d (Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType;)Lfia; createChestBoatModelName
fic net/minecraft/client/model/geom/ModelPart
	a DEFAULT_SCALE
	b x
	c y
	d z
	e xRot
	f yRot
	g zRot
	h xScale
	i yScale
	j zScale
	k visible
	l skipDraw
	m cubes
	n children
	o initialPose
	a ()Lfie; storePose
	a (FFF)V setPos
	a (Lelp$a;Lelt;IIFFFF)V compile
	a (Lelp;)V translateAndRotate
	a (Lelp;Lelt;II)V render
	a (Lelp;Lelt;IIFFFF)V render
	a (Lelp;Lfic$d;)V visit
	a (Lelp;Lfic$d;Ljava/lang/String;)V visit
	a (Lfic;)V copyFrom
	a (Lfie;)V setInitialPose
	a (Ljava/lang/String;)Z hasChild
	a (Lnet/minecraft/util/RandomSource;)Lfic$a; getRandomCube
	a (Lorg/joml/Vector3f;)V offsetPos
	b ()Lfie; getInitialPose
	b (FFF)V setRotation
	b (Lfie;)V loadPose
	b (Ljava/lang/String;)Lfic; getChild
	b (Lorg/joml/Vector3f;)V offsetRotation
	c ()V resetPose
	c (Lorg/joml/Vector3f;)V offsetScale
	d ()Z isEmpty
	e ()Ljava/util/stream/Stream; getAllParts
fic$a net/minecraft/client/model/geom/ModelPart$Cube
	a minX
	b minY
	c minZ
	d maxX
	e maxY
	f maxZ
	g polygons
	a (Lelp$a;Lelt;IIFFFF)V compile
fic$b net/minecraft/client/model/geom/ModelPart$Polygon
	a vertices
	b normal
fic$c net/minecraft/client/model/geom/ModelPart$Vertex
	a pos
	b u
	c v
	a (FF)Lfic$c; remap
fic$d net/minecraft/client/model/geom/ModelPart$Visitor
fid net/minecraft/client/model/geom/PartNames
	A RIGHT_HIND_FOOT
	B LEFT_FRONT_FOOT
	C RIGHT_FRONT_FOOT
	D LEFT_HIND_LEG_TIP
	E RIGHT_HIND_LEG_TIP
	F LEFT_FRONT_LEG_TIP
	G RIGHT_FRONT_LEG_TIP
	H LEFT_LID
	I RIGHT_LID
	J LEFT_CHEST
	K RIGHT_CHEST
	L LEFT_HORN
	M RIGHT_HORN
	N LEFT_EYE
	O RIGHT_EYE
	P JAW
	Q NOSE
	R ARMS
	S TAIL
	T CUBE
	U BEAK
	V BACK_FIN
	W MANE
	X NECK
	Y MOUTH
	Z HEAD
	a LEFT_FIN
	aa HAT
	ab BODY
	ac HAT_RIM
	ad JACKET
	ae TOP_GILLS
	af LEFT_GILLS
	ag RIGHT_GILLS
	ah ROOT
	ai CROAKING_BODY
	aj TONGUE
	ak TONGUE_R1
	al LEFT_HAND
	am RIGHT_HAND
	an LEFT_FOOT
	ao RIGHT_FOOT
	ap EYES
	aq RIGHT_TENDRIL
	ar LEFT_TENDRIL
	as RIGHT_RIBCAGE
	at LEFT_RIBCAGE
	au BONE
	b RIGHT_FIN
	c TOP_FIN
	d BOTTOM_FIN
	e TAIL_FIN
	f LEFT_BLUE_FIN
	g RIGHT_BLUE_FIN
	h LEFT_ARM
	i RIGHT_ARM
	j LEFT_WING
	k RIGHT_WING
	l LEFT_WING_BASE
	m RIGHT_WING_BASE
	n LEFT_WING_TIP
	o RIGHT_WING_TIP
	p LEFT_EAR
	q RIGHT_EAR
	r LEFT_LEG
	s RIGHT_LEG
	t LEFT_HIND_LEG
	u RIGHT_HIND_LEG
	v LEFT_MID_LEG
	w RIGHT_MID_LEG
	x LEFT_FRONT_LEG
	y RIGHT_FRONT_LEG
	z LEFT_HIND_FOOT
fie net/minecraft/client/model/geom/PartPose
	a ZERO
	b x
	c y
	d z
	e xRot
	f yRot
	g zRot
	a (FFF)Lfie; offset
	a (FFFFFF)Lfie; offsetAndRotation
	b (FFF)Lfie; rotation
fif net/minecraft/client/model/geom/builders/CubeDefinition
	a comment
	b origin
	c dimensions
	d grow
	e mirror
	f texCoord
	g texScale
	h visibleFaces
	a (II)Lfic$a; bake
fig net/minecraft/client/model/geom/builders/CubeDeformation
	a NONE
	b growX
	c growY
	d growZ
	a (F)Lfig; extend
	a (FFF)Lfig; extend
fih net/minecraft/client/model/geom/builders/CubeListBuilder
	a ALL_VISIBLE
	b cubes
	c xTexOffs
	d yTexOffs
	e mirror
	a ()Lfih; mirror
	a (FFFFFF)Lfih; addBox
	a (FFFFFFLfig;)Lfih; addBox
	a (FFFFFFLfig;FF)Lfih; addBox
	a (FFFFFFLjava/util/Set;)Lfih; addBox
	a (FFFFFFZ)Lfih; addBox
	a (II)Lfih; texOffs
	a (Ljava/lang/String;FFFFFF)Lfih; addBox
	a (Ljava/lang/String;FFFFFFLfig;)Lfih; addBox
	a (Ljava/lang/String;FFFIIIII)Lfih; addBox
	a (Ljava/lang/String;FFFIIILfig;II)Lfih; addBox
	a (Z)Lfih; mirror
	b ()Ljava/util/List; getCubes
	c ()Lfih; create
fii net/minecraft/client/model/geom/builders/LayerDefinition
	a mesh
	b material
	a ()Lfic; bakeRoot
	a (Lfik;II)Lfii; create
fij net/minecraft/client/model/geom/builders/MaterialDefinition
	a xTexSize
	b yTexSize
fik net/minecraft/client/model/geom/builders/MeshDefinition
	a root
	a ()Lfil; getRoot
fil net/minecraft/client/model/geom/builders/PartDefinition
	a cubes
	b partPose
	c children
	a (II)Lfic; bake
	a (Ljava/lang/String;)Lfil; getChild
	a (Ljava/lang/String;Lfih;Lfie;)Lfil; addOrReplaceChild
fim net/minecraft/client/model/geom/builders/UVPair
	a u
	b v
	a ()F u
	b ()F v
fiq net/minecraft/client/multiplayer/AccountProfileKeyPairManager
	b LOGGER
	c MINIMUM_PROFILE_KEY_REFRESH_INTERVAL
	d PROFILE_KEY_PAIR_DIR
	e userApiService
	f profileKeyPairPath
	g keyPair
	h nextProfileKeyRefreshTime
	a ()Ljava/util/concurrent/CompletableFuture; prepareKeyPair
	a (Lcbw;)V writeProfileKeyPair
	a (Lcom/mojang/authlib/minecraft/UserApiService;)Lcbw; fetchProfileKeyPair
	a (Lcom/mojang/authlib/yggdrasil/response/KeyPairResponse;)Lcbx$a; parsePublicKey
	a (Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture; readOrFetchProfileKeyPair
	b ()Z shouldRefreshKeyPair
	c ()Ljava/util/Optional; readProfileKeyPair
fir net/minecraft/client/multiplayer/ChunkBatchSizeCalculator
	a MAX_OLD_SAMPLES_WEIGHT
	b CLAMP_COEFFICIENT
	c aggregatedNanosPerChunk
	d oldSamplesWeight
	e chunkBatchStartTime
	a ()V onBatchStart
	a (I)V onBatchFinished
	b ()F getDesiredChunksPerTick
fis net/minecraft/client/multiplayer/ClientAdvancements
	a LOGGER
	b minecraft
	c telemetryManager
	d tree
	e progress
	f listener
	g selectedTab
	a ()Lnet/minecraft/advancements/AdvancementTree; getTree
	a (Lfis$a;)V setListener
	a (Lnet/minecraft/advancements/AdvancementHolder;Z)V setSelectedTab
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAdvancements;)V update
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/advancements/AdvancementHolder; get
fis$a net/minecraft/client/multiplayer/ClientAdvancements$Listener
	a (Lnet/minecraft/advancements/AdvancementHolder;)V onSelectedTabChanged
	a (Lnet/minecraft/advancements/AdvancementNode;Lnet/minecraft/advancements/AdvancementProgress;)V onUpdateAdvancementProgress
fit net/minecraft/client/multiplayer/ClientChunkCache
	a LOGGER
	b emptyChunk
	c lightEngine
	d storage
	e level
	a (I)V updateViewRadius
	a (IILnet/minecraft/network/PacketDataSerializer;)V replaceBiomes
	a (IILnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/chunk/Chunk; replaceWithPacketData
	a (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (Ljava/util/function/BooleanSupplier;Z)V tick
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V drop
	a (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/SectionPosition;)V onLightUpdate
	a (Lnet/minecraft/world/level/chunk/Chunk;II)Z isValidChunk
	b (I)I calculateStorageRange
	b (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/Chunk; getChunk
	d (II)V updateViewCenter
	e ()Ljava/lang/String; gatherStats
	j ()I getLoadedChunksCount
	p ()Lnet/minecraft/world/level/lighting/LevelLightEngine; getLightEngine
	q ()Lnet/minecraft/world/level/IBlockAccess; getLevel
fit$a net/minecraft/client/multiplayer/ClientChunkCache$Storage
	b chunks
	c chunkRadius
	d viewRange
	e viewCenterX
	f viewCenterZ
	g chunkCount
	a (I)Lnet/minecraft/world/level/chunk/Chunk; getChunk
	a (II)I getIndex
	a (ILnet/minecraft/world/level/chunk/Chunk;)V replace
	a (ILnet/minecraft/world/level/chunk/Chunk;Lnet/minecraft/world/level/chunk/Chunk;)Lnet/minecraft/world/level/chunk/Chunk; replace
	a (Ljava/lang/String;)V dumpChunks
	b (II)Z inRange
fiu net/minecraft/client/multiplayer/ClientCommonPacketListenerImpl
	a minecraft
	b connection
	c serverData
	d serverBrand
	e telemetryManager
	f postDisconnectScreen
	g GENERIC_DISCONNECT_MESSAGE
	h LOGGER
	i deferredPackets
	a (Ljava/lang/String;)Ljava/net/URL; parseResourcePackUrl
	a (Ljava/net/URL;Ljava/lang/String;ZLnet/minecraft/network/chat/IChatBaseComponent;)V showServerPackPrompt
	a (Ljava/util/concurrent/CompletableFuture;)V packApplicationCallback
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; preparePackPrompt
	a (Lnet/minecraft/network/protocol/Packet;Ljava/util/function/BooleanSupplier;Ljava/time/Duration;)V sendWhen
	a (Lnet/minecraft/network/protocol/common/ClientboundCustomPayloadPacket;)V handleCustomPayload
	a (Lnet/minecraft/network/protocol/common/ClientboundDisconnectPacket;)V handleDisconnect
	a (Lnet/minecraft/network/protocol/common/ClientboundKeepAlivePacket;)V handleKeepAlive
	a (Lnet/minecraft/network/protocol/common/ClientboundPingPacket;)V handlePing
	a (Lnet/minecraft/network/protocol/common/ClientboundResourcePackPacket;)V handleResourcePack
	a (Lnet/minecraft/network/protocol/common/ClientboundUpdateTagsPacket;)V handleUpdateTags
	a (Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;)V handleCustomPayload
	a (Lnet/minecraft/resources/ResourceKey;Laqk$a;)V updateTagsForRegistry
	a (Lvs$a;)V send
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)Leyk; createDisconnectScreen
	b (Lnet/minecraft/network/protocol/Packet;)V send
	f ()Lnet/minecraft/core/IRegistryCustom$Dimension; registryAccess
	g ()V sendDeferredPackets
	h ()Ljava/lang/String; serverBrand
fiu$a net/minecraft/client/multiplayer/ClientCommonPacketListenerImpl$DeferredPacket
	a packet
	b sendCondition
	c expirationTime
	a ()Lnet/minecraft/network/protocol/Packet; packet
	b ()Ljava/util/function/BooleanSupplier; sendCondition
	c ()J expirationTime
fiv net/minecraft/client/multiplayer/ClientConfigurationPacketListenerImpl
	g LOGGER
	h localGameProfile
	i receivedRegistries
	j enabledFeatures
	a (Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;)V handleCustomPayload
	a (Lnet/minecraft/network/protocol/configuration/ClientboundFinishConfigurationPacket;)V handleConfigurationFinished
	a (Lnet/minecraft/network/protocol/configuration/ClientboundRegistryDataPacket;)V handleRegistryData
	a (Lnet/minecraft/network/protocol/configuration/ClientboundUpdateEnabledFeaturesPacket;)V handleEnabledFeatures
	b (Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;)V handleUnknownCustomPayload
	c ()Z isAcceptingMessages
	e ()V tick
	f ()Lnet/minecraft/core/IRegistryCustom$Dimension; registryAccess
fiw net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl
	a LOGGER
	b minecraft
	c serverData
	d parent
	e updateStatus
	f connection
	g newWorld
	h worldLoadDuration
	i minigameName
	j state
	a (Lfiw$a;)V switchState
	a (Ljava/lang/String;)V setMinigameName
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutCustomPayload;)V handleCustomQuery
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutDisconnect;)V handleDisconnect
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutEncryptionBegin;)V handleHello
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutSetCompression;)V handleCompression
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutSuccess;)V handleGameProfile
	b (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; authenticateServer
	c ()Z isAcceptingMessages
	e ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
fiw$a net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl$State
	a CONNECTING
	b AUTHORIZING
	c ENCRYPTING
	d JOINING
	e message
	f fromStates
	g $VALUES
	a ()[Lfiw$a; $values
fix net/minecraft/client/multiplayer/ClientLevel
	D connection
	E levelRenderer
	F clientLevelData
	G effects
	H minecraft
	I players
	J scoreboard
	K mapData
	L CLOUD_COLOR
	M skyFlashTime
	N tintCaches
	O chunkSource
	P lightUpdateQueue
	Q serverSimulationDistance
	R blockStatePredictionHandler
	S MARKER_PARTICLE_ITEMS
	a LOGGER
	b FLUID_PARTICLE_SPAWN_OFFSET
	c NORMAL_LIGHT_UPDATES_PER_FRAME
	d LIGHT_UPDATE_QUEUE_SIZE_THRESHOLD
	e tickingEntities
	f entityStorage
	E ()Lnet/minecraft/world/level/entity/LevelEntityGetter; getEntities
	F ()Ljava/lang/String; gatherChunkSourceStats
	G ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	I ()Lnet/minecraft/world/scores/Scoreboard; getScoreboard
	J ()Lnet/minecraft/world/level/chunk/IChunkProvider; getChunkSource
	K ()Lnet/minecraft/world/ticks/LevelTickAccess; getFluidTicks
	L ()Lnet/minecraft/world/ticks/LevelTickAccess; getBlockTicks
	U ()V disconnect
	a ()Lfkd; getBlockStatePredictionHandler
	a (DDDDDDLnet/minecraft/nbt/NBTTagCompound;)V createFireworks
	a (DDDDDLnet/minecraft/core/particles/ParticleParam;)V spawnFluidParticle
	a (DDDLnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FFZ)V playLocalSound
	a (DDDLnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FFZJ)V playSound
	a (I)Lnet/minecraft/world/entity/Entity; getEntity
	a (III)Lnet/minecraft/core/Holder; getUncachedNoiseBiome
	a (IIIILnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)V doAnimateTick
	a (ILnet/minecraft/core/BlockPosition;I)V destroyBlockProgress
	a (ILnet/minecraft/world/entity/Entity$RemovalReason;)V removeEntity
	a (Ljava/lang/Runnable;)V queueLightUpdate
	a (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; getMapData
	a (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V setMapData
	a (Ljava/util/Map;)V addMapData
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportSystemDetails; fillReportDetails
	a (Lnet/minecraft/core/BlockPosition;F)V setDefaultSpawnPos
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/particles/ParticleParam;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V spawnParticle
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V addDestroyBlockEffect
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)Z setBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/particles/ParticleParam;Z)V trySpawnDripParticles
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;I)V sendBlockUpdated
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/Vec3D;)V syncBlockState
	a (Lnet/minecraft/core/EnumDirection;Z)F getShade
	a (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/core/particles/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/network/protocol/Packet;)V sendPacketToServer
	a (Lnet/minecraft/world/entity/Entity;)V tickNonPassenger
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V tickPassenger
	a (Lnet/minecraft/world/entity/player/EntityHuman;DDDLnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundCategory;FFJ)V playSeededSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;ILnet/minecraft/core/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundCategory;FFJ)V playSeededSound
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V onChunkLoaded
	a (Lnet/minecraft/world/level/chunk/Chunk;)V unload
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;Ldjt$a;)V gameEvent
	a (Lnet/minecraft/world/phys/Vec3D;F)Lnet/minecraft/world/phys/Vec3D; getSkyColor
	a (Lnet/minecraft/world/scores/Scoreboard;)V setScoreboard
	b ()V pollLightUpdates
	b (I)V handleBlockChangedAck
	b (II)Z hasChunk
	b (III)V animateTick
	b (ILnet/minecraft/core/BlockPosition;I)V globalLevelEvent
	b (J)V setGameTime
	b (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V overrideMapData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I calculateBlockTint
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;I)V setServerVerifiedBlockState
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlocksDirty
	b (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)V addAlwaysVisibleParticle
	b (Lnet/minecraft/core/particles/ParticleParam;ZDDDDDD)V addAlwaysVisibleParticle
	c ()Z isLightUpdateQueueEmpty
	c (I)V setSkyFlashTime
	c (III)V setSectionDirtyWithNeighbors
	c (J)V setDayTime
	c (Lnet/minecraft/world/entity/Entity;)V addEntity
	d ()Lfnt; effects
	e ()Ljava/lang/Iterable; entitiesForRendering
	f ()V tickEntities
	g ()V clearTintCaches
	g (F)F getSkyDarken
	h ()I getEntityCount
	h (F)Lnet/minecraft/world/phys/Vec3D; getCloudColor
	h (I)V setServerSimulationDistance
	h (Lnet/minecraft/world/entity/Entity;)Z shouldTickDeath
	i ()Lfit; getChunkSource
	i (F)F getStarBrightness
	j ()I getSkyFlashTime
	k ()Lfix$a; getLevelData
	l ()Ljava/util/Map; getAllMapData
	m ()I getServerSimulationDistance
	o ()V tickTime
	p ()Lnet/minecraft/world/level/block/Block; getMarkerParticleTarget
	q ()Lnet/minecraft/world/item/crafting/CraftingManager; getRecipeManager
	t ()I getFreeMapId
	v ()Ljava/util/List; players
	z_ ()Lnet/minecraft/world/level/storage/WorldData; getLevelData
fix$a net/minecraft/client/multiplayer/ClientLevel$ClientLevelData
	a hardcore
	b gameRules
	c isFlat
	d xSpawn
	e ySpawn
	f zSpawn
	g spawnAngle
	h gameTime
	i dayTime
	j raining
	k difficulty
	l difficultyLocked
	a ()I getXSpawn
	a (F)V setSpawnAngle
	a (J)V setGameTime
	a (Lnet/minecraft/CrashReportSystemDetails;Lnet/minecraft/world/level/LevelHeightAccessor;)V fillCrashReportCategory
	a (Lnet/minecraft/core/BlockPosition;F)V setSpawn
	a (Lnet/minecraft/world/EnumDifficulty;)V setDifficulty
	a (Lnet/minecraft/world/level/LevelHeightAccessor;)D getHorizonHeight
	a (Z)V setDifficultyLocked
	b ()I getYSpawn
	b (I)V setXSpawn
	b (J)V setDayTime
	b (Z)V setRaining
	c ()I getZSpawn
	c (I)V setYSpawn
	d ()F getSpawnAngle
	d (I)V setZSpawn
	e ()J getGameTime
	f ()J getDayTime
	g ()F getClearColorScale
	i ()Z isThundering
	k ()Z isRaining
	n ()Z isHardcore
	q ()Lnet/minecraft/world/level/GameRules; getGameRules
	s ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	t ()Z isDifficultyLocked
fix$b net/minecraft/client/multiplayer/ClientLevel$EntityCallbacks
	a (Ljava/lang/Object;)V onSectionChange
	a (Lnet/minecraft/world/entity/Entity;)V onCreated
	b (Ljava/lang/Object;)V onTrackingEnd
	b (Lnet/minecraft/world/entity/Entity;)V onDestroyed
	c (Ljava/lang/Object;)V onTrackingStart
	c (Lnet/minecraft/world/entity/Entity;)V onTickingStart
	d (Ljava/lang/Object;)V onTickingEnd
	d (Lnet/minecraft/world/entity/Entity;)V onTickingEnd
	e (Ljava/lang/Object;)V onTickingStart
	e (Lnet/minecraft/world/entity/Entity;)V onTrackingStart
	f (Ljava/lang/Object;)V onDestroyed
	f (Lnet/minecraft/world/entity/Entity;)V onTrackingEnd
	g (Ljava/lang/Object;)V onCreated
	g (Lnet/minecraft/world/entity/Entity;)V onSectionChange
fiy net/minecraft/client/multiplayer/ClientPacketListener
	A id
	B levels
	C registryAccess
	D enabledFeatures
	E chatSession
	F signedMessageEncoder
	G lastSeenMessages
	H messageSignatureCache
	I chunkBatchSizeCalculator
	J pingDebugMonitor
	K seenInsecureChatWarning
	L closed
	g LOGGER
	h UNSECURE_SERVER_TOAST_TITLE
	i UNSERURE_SERVER_TOAST
	j INVALID_PACKET
	k CHAT_VALIDATION_FAILED_ERROR
	l RECONFIGURE_SCREEN_MESSAGE
	m PENDING_OFFSET_THRESHOLD
	n localGameProfile
	o level
	p levelData
	q playerInfoMap
	r listedPlayers
	s advancements
	t suggestionsProvider
	u debugQueryHandler
	v serverChunkRadius
	w serverSimulationDistance
	x random
	y commands
	z recipeManager
	A ()V sendChatAcknowledgement
	a (IILnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData;)V updateLevelChunk
	a (IILnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData;)V applyLightData
	a (IILnet/minecraft/world/level/lighting/LevelLightEngine;Lnet/minecraft/world/level/EnumSkyBlock;Ljava/util/BitSet;Ljava/util/BitSet;Ljava/util/Iterator;)V readSectionList
	a (Lcbw;)V setKeyPair
	a (Ljava/lang/String;)Lfjf; getPlayerInfo
	a (Ljava/util/UUID;)Lfjf; getPlayerInfo
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Z)V markMessageAsProcessed
	a (Lnet/minecraft/network/protocol/common/ClientboundUpdateTagsPacket;)V handleUpdateTags
	a (Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;)V handleCustomPayload
	a (Lnet/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket;)V handleBlockChangedAck
	a (Lnet/minecraft/network/protocol/game/ClientboundBundlePacket;)V handleBundlePacket
	a (Lnet/minecraft/network/protocol/game/ClientboundChunkBatchFinishedPacket;)V handleChunkBatchFinished
	a (Lnet/minecraft/network/protocol/game/ClientboundChunkBatchStartPacket;)V handleChunkBatchStart
	a (Lnet/minecraft/network/protocol/game/ClientboundChunksBiomesPacket;)V handleChunksBiomes
	a (Lnet/minecraft/network/protocol/game/ClientboundClearTitlesPacket;)V handleTitlesClear
	a (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket;)V handleCustomChatCompletions
	a (Lnet/minecraft/network/protocol/game/ClientboundDamageEventPacket;)V handleDamageEvent
	a (Lnet/minecraft/network/protocol/game/ClientboundDeleteChatPacket;)V handleDeleteChat
	a (Lnet/minecraft/network/protocol/game/ClientboundDisguisedChatPacket;)V handleDisguisedChat
	a (Lnet/minecraft/network/protocol/game/ClientboundHurtAnimationPacket;)V handleHurtAnimation
	a (Lnet/minecraft/network/protocol/game/ClientboundInitializeBorderPacket;)V handleInitializeBorder
	a (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket;)V handleLevelChunkWithLight
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerChatPacket;)V handlePlayerChat
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket;)V handlePlayerCombatEnd
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket;)V handlePlayerCombatEnter
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket;)V handlePlayerCombatKill
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket;)V handlePlayerInfoRemove
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket;)V handlePlayerInfoUpdate
	a (Lnet/minecraft/network/protocol/game/ClientboundServerDataPacket;)V handleServerData
	a (Lnet/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket;)V setActionBarText
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket;)V handleSetBorderCenter
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket;)V handleSetBorderLerpSize
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderSizePacket;)V handleSetBorderSize
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket;)V handleSetBorderWarningDelay
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket;)V handleSetBorderWarningDistance
	a (Lnet/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket;)V handleSetSimulationDistance
	a (Lnet/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket;)V setSubtitleText
	a (Lnet/minecraft/network/protocol/game/ClientboundSetTitleTextPacket;)V setTitleText
	a (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket;)V setTitlesAnimation
	a (Lnet/minecraft/network/protocol/game/ClientboundStartConfigurationPacket;)V handleConfigurationStart
	a (Lnet/minecraft/network/protocol/game/ClientboundSystemChatPacket;)V handleSystemChat
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAdvancements;)V handleUpdateAdvancementsPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAnimation;)V handleAnimate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAttachEntity;)V handleEntityLinkPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBlockAction;)V handleBlockEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBlockBreakAnimation;)V handleBlockDestruction
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBlockChange;)V handleBlockUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBoss;)V handleBossUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCamera;)V handleSetCamera
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCollect;)V handleTakeItemEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCommands;)V handleCommands
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntity;)V handleMoveEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityDestroy;)V handleRemoveEntities
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityEffect;)V handleUpdateMobEffect
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityEquipment;)V handleSetEquipment
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityHeadRotation;)V handleRotateMob
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityMetadata;)V handleSetEntityData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntitySound;)V handleSoundEntityEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityStatus;)V handleEntityEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityTeleport;)V handleTeleportEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityVelocity;)V handleSetEntityMotion
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutExperience;)V handleSetExperience
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutExplosion;)V handleExplosion
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutGameStateChange;)V handleGameEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutLightUpdate;)V handleLightUpdatePacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutLogin;)V handleLogin
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutLookAt;)V handleLookAt
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutMap;)V handleMapItemData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutMount;)V handleSetEntityPassengersPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutMultiBlockChange;)V handleChunkBlocksUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutNBTQuery;)V handleTagQueryPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutNamedSoundEffect;)V handleSoundEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenBook;)V handleOpenBook
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenSignEditor;)V handleOpenSignEditor
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenWindow;)V handleOpenScreen
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenWindowHorse;)V handleHorseScreenOpen
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenWindowMerchant;)V handleMerchantOffers
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutPlayerListHeaderFooter;)V handleTabListCustomisation
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutPosition;)V handleMovePlayer
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRecipeUpdate;)V handleUpdateRecipes
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRecipes;)V handleAddOrRemoveRecipes
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRemoveEntityEffect;)V handleRemoveMobEffect
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRespawn;)V handleRespawn
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardDisplayObjective;)V handleSetDisplayObjective
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardObjective;)V handleAddObjective
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardScore;)V handleSetScore
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam;)V handleSetPlayerTeamPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSelectAdvancementTab;)V handleSelectAdvancementsTab
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutServerDifficulty;)V handleChangeDifficulty
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSetCooldown;)V handleItemCooldown
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSetSlot;)V handleContainerSetSlot
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V handleAddEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntityExperienceOrb;)V handleAddExperienceOrb
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnPosition;)V handleSetSpawn
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutStatistic;)V handleAwardStats
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutStopSound;)V handleStopSoundEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutTabComplete;)V handleCommandSuggestions
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData;)V handleBlockEntityData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUnloadChunk;)V handleForgetLevelChunk
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUpdateAttributes;)V handleUpdateAttributes
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUpdateHealth;)V handleSetHealth
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUpdateTime;)V handleSetTime
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutViewCentre;)V handleSetChunkCacheCenter
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutViewDistance;)V handleSetChunkCacheRadius
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWindowData;)V handleContainerSetData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWindowItems;)V handleContainerContent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWorldEvent;)V handleLevelEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWorldParticles;)V handleParticleEvent
	a (Lnet/minecraft/network/protocol/status/PacketStatusOutPong;)V handlePongResponse
	a (Lnet/minecraft/world/entity/Entity;)V postAddEntitySoundInstance
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/item/ItemStack; findTotem
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Z isFeatureEnabled
	a (Lnet/minecraft/world/level/chunk/Chunk;II)V enableChunkLight
	a (Lza$a;Lza$b;Lfjf;)V applyPlayerInfoUpdate
	a (Lza$b;Lfjf;)V initializeChatSession
	b (Ljava/lang/String;)V sendChat
	b (Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;)V handleUnknownCustomPayload
	b (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)Lnet/minecraft/world/entity/Entity; createEntityFromPacket
	b (Lnet/minecraft/network/protocol/game/PacketPlayOutUnloadChunk;)V queueLightRemoval
	c ()Z isAcceptingMessages
	c (Ljava/lang/String;)V sendCommand
	d (Ljava/lang/String;)Z sendUnsignedCommand
	e ()V tick
	e (Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults; parseCommand
	f ()Lnet/minecraft/core/IRegistryCustom$Dimension; registryAccess
	i ()Lfja; getSuggestionsProvider
	j ()V close
	k ()Lnet/minecraft/world/item/crafting/CraftingManager; getRecipeManager
	l ()Lnet/minecraft/network/NetworkManager; getConnection
	m ()Ljava/util/Collection; getListedOnlinePlayers
	n ()Ljava/util/Collection; getOnlinePlayers
	o ()Ljava/util/Collection; getOnlinePlayerIds
	p ()Lcom/mojang/authlib/GameProfile; getLocalGameProfile
	q ()Lfis; getAdvancements
	r ()Lcom/mojang/brigadier/CommandDispatcher; getCommands
	s ()Lfix; getLevel
	t ()Leqm; getDebugQueryHandler
	u ()Ljava/util/UUID; getId
	v ()Ljava/util/Set; levels
	w ()Lfjh; getServerData
	x ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	y ()V refreshTagDependentData
	z ()Z enforcesSecureChat
fiz net/minecraft/client/multiplayer/ClientRegistryLayer
	a STATIC
	b REMOTE
	c VALUES
	d STATIC_ACCESS
	e $VALUES
	a ()Lnet/minecraft/core/LayeredRegistryAccess; createRegistryAccess
	b ()[Lfiz; $values
fja net/minecraft/client/multiplayer/ClientSuggestionProvider
	a connection
	b minecraft
	c pendingSuggestionsId
	d pendingSuggestionsFuture
	e customCompletionSuggestions
	A ()Ljava/util/Collection; getAbsoluteCoordinates
	a (D)Ljava/lang/String; prettyPrint
	a (I)Ljava/lang/String; prettyPrint
	a (ILcom/mojang/brigadier/suggestion/Suggestions;)V completeCustomSuggestions
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action;Ljava/util/List;)V modifyCustomCompletions
	a (Lnet/minecraft/resources/ResourceKey;Ldw$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; suggestRegistryElements
	c (I)Z hasPermission
	q ()Ljava/util/Collection; getOnlinePlayerNames
	r ()Ljava/util/Collection; getAllTeams
	s ()Ljava/util/stream/Stream; getAvailableSounds
	t ()Ljava/util/stream/Stream; getRecipeNames
	u ()Ljava/util/Set; levels
	v ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	w ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	x ()Ljava/util/Collection; getCustomTabSugggestions
	y ()Ljava/util/Collection; getSelectedEntities
	z ()Ljava/util/Collection; getRelevantCoordinates
fjb net/minecraft/client/multiplayer/CommonListenerCookie
	a localGameProfile
	b telemetryManager
	c receivedRegistries
	d enabledFeatures
	e serverBrand
	f serverData
	g postDisconnectScreen
	a ()Lcom/mojang/authlib/GameProfile; localGameProfile
	b ()Lged; telemetryManager
	c ()Lnet/minecraft/core/IRegistryCustom$Dimension; receivedRegistries
	d ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	e ()Ljava/lang/String; serverBrand
	f ()Lfjh; serverData
	g ()Leyk; postDisconnectScreen
fjc net/minecraft/client/multiplayer/LegacyServerPinger
	a SPLITTER
	b address
	c output
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V channelRead0
fjc$a net/minecraft/client/multiplayer/LegacyServerPinger$Output
fjd net/minecraft/client/multiplayer/MultiPlayerGameMode
	a LOGGER
	b minecraft
	c connection
	d destroyBlockPos
	e destroyingItem
	f destroyProgress
	g destroyTicks
	h destroyDelay
	i isDestroying
	j localPlayerMode
	k previousLocalPlayerMode
	l carriedIndex
	a ()Z canHurtPlayer
	a (I)V handlePickItem
	a (II)V handleInventoryButtonClick
	a (IIILnet/minecraft/world/inventory/InventoryClickType;Lnet/minecraft/world/entity/player/EntityHuman;)V handleInventoryMouseClick
	a (ILnet/minecraft/world/item/crafting/RecipeHolder;Z)V handlePlaceRecipe
	a (Lfix;Lfke;)V startPrediction
	a (Lfix;Lnet/minecraft/stats/StatisticManager;Leqi;)Lfng; createPlayer
	a (Lfix;Lnet/minecraft/stats/StatisticManager;Leqi;ZZ)Lfng; createPlayer
	a (Lfng;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; useItemOn
	a (Lnet/minecraft/core/BlockPosition;)Z destroyBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z startDestroyBlock
	a (Lnet/minecraft/world/entity/player/EntityHuman;)V adjustPlayer
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; useItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;)V attack
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/MovingObjectPositionEntity;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactAt
	a (Lnet/minecraft/world/item/ItemStack;)V handleCreativeModeItemDrop
	a (Lnet/minecraft/world/item/ItemStack;I)V handleCreativeModeItemAdd
	a (Lnet/minecraft/world/level/EnumGamemode;)V setLocalMode
	a (Lnet/minecraft/world/level/EnumGamemode;Lnet/minecraft/world/level/EnumGamemode;)V setLocalMode
	b ()V stopDestroyBlock
	b (Lfng;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; performUseItemOn
	b (Lnet/minecraft/core/BlockPosition;)Z sameDestroyTarget
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z continueDestroyBlock
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V releaseUsingItem
	c ()F getPickRange
	d ()V tick
	e ()Z hasExperience
	f ()Z hasMissTime
	g ()Z hasInfiniteItems
	h ()Z hasFarPickRange
	i ()Z isServerControlledInventory
	j ()Z isAlwaysFlying
	k ()Lnet/minecraft/world/level/EnumGamemode; getPreviousPlayerMode
	l ()Lnet/minecraft/world/level/EnumGamemode; getPlayerMode
	m ()Z isDestroying
	n ()I getDestroyStage
	o ()V ensureHasSentCarriedItem
fje net/minecraft/client/multiplayer/PingDebugMonitor
	a connection
	b delayTimer
	a ()V tick
	a (Lnet/minecraft/network/protocol/status/PacketStatusOutPong;)V onPongReceived
fjf net/minecraft/client/multiplayer/PlayerInfo
	a profile
	b skinLookup
	c gameMode
	d latency
	e tabListDisplayName
	f chatSession
	g messageValidator
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	a (I)V setLatency
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/function/Supplier; createSkinLookup
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setTabListDisplayName
	a (Lnet/minecraft/network/chat/RemoteChatSession;)V setChatSession
	a (Lnet/minecraft/world/level/EnumGamemode;)V setGameMode
	a (Z)V clearChatSession
	b ()Lnet/minecraft/network/chat/RemoteChatSession; getChatSession
	b (Z)Lnet/minecraft/network/chat/SignedMessageValidator; fallbackMessageValidator
	c ()Lnet/minecraft/network/chat/SignedMessageValidator; getMessageValidator
	d ()Z hasVerifiableChat
	e ()Lnet/minecraft/world/level/EnumGamemode; getGameMode
	f ()I getLatency
	g ()Lgae; getSkin
	h ()Lnet/minecraft/world/scores/ScoreboardTeam; getTeam
	i ()Lnet/minecraft/network/chat/IChatBaseComponent; getTabListDisplayName
fjg net/minecraft/client/multiplayer/ProfileKeyPairManager
	a EMPTY_KEY_MANAGER
	a ()Ljava/util/concurrent/CompletableFuture; prepareKeyPair
	a (Lcom/mojang/authlib/minecraft/UserApiService;Lerk;Ljava/nio/file/Path;)Lfjg; create
	b ()Z shouldRefreshKeyPair
fjh net/minecraft/client/multiplayer/ServerData
	a name
	b ip
	c status
	d motd
	e players
	f ping
	g protocol
	h version
	i pinged
	j playerList
	k LOGGER
	l MAX_ICON_SIZE
	m packStatus
	n iconBytes
	o type
	p enforcesSecureChat
	a ()Lnet/minecraft/nbt/NBTTagCompound; write
	a (Lfjh$a;)V setResourcePackStatus
	a (Lfjh;)V copyNameIconFrom
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lfjh; read
	a (Z)V setEnforcesSecureChat
	a ([B)V setIconBytes
	b ()Lfjh$a; getResourcePackStatus
	b (Lfjh;)V copyFrom
	b ([B)[B validateIcon
	c ()[B getIconBytes
	d ()Z isLan
	e ()Z isRealm
	f ()Z enforcesSecureChat
fjh$a net/minecraft/client/multiplayer/ServerData$ServerPackStatus
	a ENABLED
	b DISABLED
	c PROMPT
	d name
	e $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	b ()[Lfjh$a; $values
fjh$b net/minecraft/client/multiplayer/ServerData$Type
	a LAN
	b REALM
	c OTHER
	d $VALUES
	a ()[Lfjh$b; $values
fji net/minecraft/client/multiplayer/ServerList
	a LOGGER
	b IO_MAILBOX
	c MAX_HIDDEN_SERVERS
	d minecraft
	e serverList
	f hiddenServerList
	a ()V load
	a (I)Lfjh; get
	a (II)V swap
	a (ILfjh;)V replace
	a (Lfjh;)V remove
	a (Lfjh;Ljava/util/List;)Z set
	a (Lfjh;Z)V add
	a (Ljava/lang/String;)Lfjh; get
	b ()V save
	b (Lfjh;)V saveSingleServer
	b (Ljava/lang/String;)Lfjh; unhide
	c ()I size
fjj net/minecraft/client/multiplayer/ServerStatusPinger
	a LOGGER
	b CANT_CONNECT_MESSAGE
	c connections
	a ()V tick
	a (II)Lnet/minecraft/network/chat/IChatBaseComponent; formatPlayerCount
	a (Lfjh;Ljava/lang/Runnable;)V pingServer
	a (Ljava/net/InetSocketAddress;Lfki;Lfjh;)V pingLegacyServer
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lfjh;)V onPingFailed
	b ()V removeAll
fjk net/minecraft/client/multiplayer/chat/ChatListener
	a CHAT_VALIDATION_ERROR
	b minecraft
	c delayedMessageQueue
	d messageDelay
	e previousMessageTime
	a ()V tick
	a (D)V setMessageDelay
	a (Ljava/util/UUID;)Z isSenderLocalPlayer
	a (Ljava/util/UUID;Lth$a;)V handleChatMessageError
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Ljava/util/UUID; guessChatUUID
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/time/Instant;)V logSystemMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lth$a;)V handleDisguisedChatMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V handleSystemMessage
	a (Lnet/minecraft/network/chat/MessageSignature;)Z removeFromDelayedMessageQueue
	a (Lnet/minecraft/network/chat/MessageSignature;Ljava/util/function/BooleanSupplier;)V handleMessage
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Lcom/mojang/authlib/GameProfile;Lth$a;)V handlePlayerChatMessage
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/time/Instant;)Lfjm; evaluateTrustLevel
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Lth$a;Lcom/mojang/authlib/GameProfile;Lfjm;)V logPlayerMessage
	a (Lth$a;Lnet/minecraft/network/chat/IChatBaseComponent;)V narrateChatMessage
	a (Lth$a;Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/IChatBaseComponent;Lcom/mojang/authlib/GameProfile;ZLjava/time/Instant;)Z showMessageToPlayer
	b ()V acceptNextDelayedMessage
	c ()J queueSize
	d ()V clearQueue
	e ()Z willDelayMessages
fjk$a net/minecraft/client/multiplayer/chat/ChatListener$Message
	a signature
	b handler
	a ()Z accept
	b ()Lnet/minecraft/network/chat/MessageSignature; signature
	c ()Ljava/util/function/BooleanSupplier; handler
fjl net/minecraft/client/multiplayer/chat/ChatLog
	a buffer
	b nextId
	a ()I start
	a (I)Lcom/mojang/serialization/Codec; codec
	a (Lfjn;)V push
	b ()I end
	b (I)Lfjn; lookup
	c ()Ljava/util/List; loggedChatEvents
	c (I)I index
	d ()I size
fjm net/minecraft/client/multiplayer/chat/ChatTrustLevel
	a SECURE
	b MODIFIED
	c NOT_SECURE
	d CODEC
	e serializedName
	f $VALUES
	a ()Z isNotSecure
	a (Lnet/minecraft/network/chat/ChatModifier;)Z isModifiedStyle
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Z containsModifiedStyle
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)Leqq; createTag
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/IChatBaseComponent;)Z isModified
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/time/Instant;)Lfjm; evaluate
	b ()[Lfjm; $values
	c ()Ljava/lang/String; getSerializedName
fjn net/minecraft/client/multiplayer/chat/LoggedChatEvent
	a CODEC
	a ()Lfjn$a; type
fjn$a net/minecraft/client/multiplayer/chat/LoggedChatEvent$Type
	a PLAYER
	b SYSTEM
	c serializedName
	d codec
	e $VALUES
	a ()Lcom/mojang/serialization/Codec; codec
	c ()Ljava/lang/String; getSerializedName
	e ()[Lfjn$a; $values
fjo net/minecraft/client/multiplayer/chat/LoggedChatMessage
	a (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/network/chat/PlayerChatMessage;Lfjm;)Lfjo$a; player
	a (Ljava/util/UUID;)Z canReport
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/time/Instant;)Lfjo$b; system
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; toContentComponent
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; toNarrationComponent
fjo$a net/minecraft/client/multiplayer/chat/LoggedChatMessage$Player
	b CODEC
	c profile
	d message
	e trustLevel
	f TIME_FORMATTER
	a ()Lfjn$a; type
	a (Ljava/util/UUID;)Z canReport
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; toContentComponent
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; toNarrationComponent
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; toHeadingComponent
	e ()Ljava/util/UUID; profileId
	f ()Lcom/mojang/authlib/GameProfile; profile
	g ()Lnet/minecraft/network/chat/PlayerChatMessage; message
	h ()Lfjm; trustLevel
	i ()Lnet/minecraft/network/chat/IChatBaseComponent; getTimeComponent
fjo$b net/minecraft/client/multiplayer/chat/LoggedChatMessage$System
	b CODEC
	c message
	d timeStamp
	a ()Lfjn$a; type
	a (Ljava/util/UUID;)Z canReport
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; toContentComponent
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; message
	e ()Ljava/time/Instant; timeStamp
fjq net/minecraft/client/multiplayer/chat/report/AbuseReportSender
	a ()Z isEnabled
	a (Lfjw;Lcom/mojang/authlib/minecraft/UserApiService;)Lfjq; create
	a (Ljava/util/UUID;Lfjy;Lcom/mojang/authlib/minecraft/report/AbuseReport;)Ljava/util/concurrent/CompletableFuture; send
	b ()Lcom/mojang/authlib/minecraft/report/AbuseReportLimits; reportLimits
fjq$a net/minecraft/client/multiplayer/chat/report/AbuseReportSender$SendException
fjq$b net/minecraft/client/multiplayer/chat/report/AbuseReportSender$Services
	a environment
	b userApiService
	c SERVICE_UNAVAILABLE_TEXT
	d HTTP_ERROR_TEXT
	e JSON_ERROR_TEXT
	a ()Z isEnabled
	a (Lcom/mojang/authlib/exceptions/MinecraftClientException;)Lnet/minecraft/network/chat/IChatBaseComponent; getErrorDescription
	a (Lcom/mojang/authlib/exceptions/MinecraftClientHttpException;)Lnet/minecraft/network/chat/IChatBaseComponent; getHttpErrorDescription
	a (Ljava/util/UUID;Lfjy;Lcom/mojang/authlib/minecraft/report/AbuseReport;)Ljava/util/concurrent/CompletableFuture; send
	b ()Lcom/mojang/authlib/minecraft/report/AbuseReportLimits; reportLimits
	c ()Lfjw; environment
	d ()Lcom/mojang/authlib/minecraft/UserApiService; userApiService
fjr net/minecraft/client/multiplayer/chat/report/BanReason
	a GENERIC_VIOLATION
	b FALSE_REPORTING
	c HATE_SPEECH
	d HATE_TERRORISM_NOTORIOUS_FIGURE
	e HARASSMENT_OR_BULLYING
	f DEFAMATION_IMPERSONATION_FALSE_INFORMATION
	g DRUGS
	h FRAUD
	i SPAM_OR_ADVERTISING
	j NUDITY_OR_PORNOGRAPHY
	k SEXUALLY_INAPPROPRIATE
	l EXTREME_VIOLENCE_OR_GORE
	m IMMINENT_HARM_TO_PERSON_OR_PROPERTY
	n title
	o $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; title
	a (I)Lfjr; byId
	b ()[Lfjr; $values
fjs net/minecraft/client/multiplayer/chat/report/ChatReport
	f reportedMessages
	a ()Lfjs; copy
	a (ILcom/mojang/authlib/minecraft/report/AbuseReportLimits;)V toggleReported
	a (Leyk;Lfjz;)Leyk; createScreen
	b ()Lfjv; copy
fjs$a net/minecraft/client/multiplayer/chat/report/ChatReport$Builder
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; reportedMessages
	a (I)V toggleReported
	a (Lfjo$a;Z)Lcom/mojang/authlib/minecraft/report/ReportChatMessage; buildReportedChatMessage
	a (Lfjz;)Lcom/mojang/datafixers/util/Either; build
	b ()Z hasContent
	b (I)Z isReported
	b (Lfjz;)Lcom/mojang/authlib/minecraft/report/ReportEvidence; buildEvidence
	c ()Lfjv$b; checkBuildable
	d ()Lfjs$a; copy
fjt net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder
	a leadingCount
	b activeCollectors
	a ()Z isActive
	a (Lfjl;Lit/unimi/dsi/fastutil/ints/IntCollection;Lfjt$b;)V collectAllContext
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)V trackContext
	b (Lnet/minecraft/network/chat/PlayerChatMessage;)Z acceptContext
fjt$a net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder$Collector
	b lastSeenSignatures
	c lastChainMessage
	d collectingChain
	e count
	a ()Z isComplete
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)Z accept
fjt$b net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder$Handler
fju net/minecraft/client/multiplayer/chat/report/NameReport
	f reportedName
	a ()Ljava/lang/String; getReportedName
	a (Leyk;Lfjz;)Leyk; createScreen
	b ()Lfjv; copy
	c ()Lfju; copy
fju$a net/minecraft/client/multiplayer/chat/report/NameReport$Builder
	a (Lfjz;)Lcom/mojang/datafixers/util/Either; build
	b ()Z hasContent
	c ()Lfjv$b; checkBuildable
fjv net/minecraft/client/multiplayer/chat/report/Report
	a reportId
	b createdAt
	c reportedProfileId
	d comments
	e reason
	a (Leyk;Lfjz;)Leyk; createScreen
	a (Ljava/util/UUID;)Z isReportedPlayer
	b ()Lfjv; copy
fjv$a net/minecraft/client/multiplayer/chat/report/Report$Builder
	a report
	b limits
	a (Lfjx;)V setReason
	a (Lfjz;)Lcom/mojang/datafixers/util/Either; build
	a (Ljava/lang/String;)V setComments
	b ()Z hasContent
	c ()Lfjv$b; checkBuildable
	e ()Lfjv; report
	f ()Ljava/util/UUID; reportedProfileId
	g ()Ljava/lang/String; comments
	h ()Lfjx; reason
fjv$b net/minecraft/client/multiplayer/chat/report/Report$CannotBuildReason
	a NO_REASON
	b NO_REPORTED_MESSAGES
	c TOO_MANY_MESSAGES
	d COMMENT_TOO_LONG
	e message
	a ()Leua; tooltip
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; message
fjv$c net/minecraft/client/multiplayer/chat/report/Report$Result
	a id
	b reportType
	c report
	a ()Ljava/util/UUID; id
	b ()Lfjy; reportType
	c ()Lcom/mojang/authlib/minecraft/report/AbuseReport; report
fjw net/minecraft/client/multiplayer/chat/report/ReportEnvironment
	a clientVersion
	b server
	a ()Lfjw; local
	a (Lemw;)Lfjw; realm
	a (Lfjw$a;)Lfjw; create
	a (Ljava/lang/String;)Lfjw; thirdParty
	b ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$ClientInfo; clientInfo
	c ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$ThirdPartyServerInfo; thirdPartyServerInfo
	d ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$RealmInfo; realmInfo
	e ()Ljava/lang/String; clientVersion
	f ()Lfjw$a; server
	g ()Ljava/lang/String; getClientVersion
fjw$a net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server
fjw$a$a net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server$Realm
	a realmId
	b slotId
	a ()J realmId
	b ()I slotId
fjw$a$b net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server$ThirdParty
	a ip
	a ()Ljava/lang/String; ip
fjx net/minecraft/client/multiplayer/chat/report/ReportReason
	a GENERIC
	b HATE_SPEECH
	c HARASSMENT_OR_BULLYING
	d SELF_HARM_OR_SUICIDE
	e IMMINENT_HARM
	f DEFAMATION_IMPERSONATION_FALSE_INFORMATION
	g ALCOHOL_TOBACCO_DRUGS
	h CHILD_SEXUAL_EXPLOITATION_OR_ABUSE
	i TERRORISM_OR_VIOLENT_EXTREMISM
	j NON_CONSENSUAL_INTIMATE_IMAGERY
	k backendName
	l title
	m description
	n $VALUES
	a ()Ljava/lang/String; backendName
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; title
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; description
	d ()[Lfjx; $values
fjy net/minecraft/client/multiplayer/chat/report/ReportType
	a CHAT
	b SKIN
	c USERNAME
	d backendName
	e $VALUES
	a ()Ljava/lang/String; backendName
	b ()[Lfjy; $values
fjz net/minecraft/client/multiplayer/chat/report/ReportingContext
	a LOG_CAPACITY
	b sender
	c environment
	d chatLog
	e draftReport
	a ()Lfjq; sender
	a (Leqv;Leyk;Ljava/lang/Runnable;Z)V draftReportHandled
	a (Lfjv;)V setReportDraft
	a (Lfjw;)Z matches
	a (Lfjw;Lcom/mojang/authlib/minecraft/UserApiService;)Lfjz; create
	a (Ljava/util/UUID;)Z hasDraftReportFor
	b ()Lfjl; chatLog
	c ()Z hasDraftReport
fka net/minecraft/client/multiplayer/chat/report/SkinReport
	f skinGetter
	a ()Ljava/util/function/Supplier; getSkinGetter
	a (Leyk;Lfjz;)Leyk; createScreen
	b ()Lfjv; copy
	c ()Lfka; copy
fka$a net/minecraft/client/multiplayer/chat/report/SkinReport$Builder
	a (Lfjz;)Lcom/mojang/datafixers/util/Either; build
	b ()Z hasContent
	c ()Lfjv$b; checkBuildable
fkd net/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler
	a serverVerifiedStates
	b currentSequenceNr
	c isPredicting
	a ()Lfkd; startPredicting
	a (ILfix;)V endPredictionsUpTo
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z updateKnownServerState
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lfng;)V retainKnownServerState
	b ()I currentSequence
	c ()Z isPredicting
fkd$a net/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler$ServerVerifiedState
	a playerPos
	b sequence
	c blockState
	a (I)Lfkd$a; setSequence
	a (Lnet/minecraft/world/level/block/state/IBlockData;)V setBlockState
fke net/minecraft/client/multiplayer/prediction/PredictiveAction
fkg net/minecraft/client/multiplayer/resolver/AddressCheck
	a ()Lfkg; createFromService
	a (Lfkh;)Z isAllowed
	a (Lfki;)Z isAllowed
fkh net/minecraft/client/multiplayer/resolver/ResolvedServerAddress
	a ()Ljava/lang/String; getHostName
	a (Ljava/net/InetSocketAddress;)Lfkh; from
	b ()Ljava/lang/String; getHostIp
	c ()I getPort
	d ()Ljava/net/InetSocketAddress; asInetSocketAddress
fki net/minecraft/client/multiplayer/resolver/ServerAddress
	a LOGGER
	b hostAndPort
	c INVALID
	a ()Ljava/lang/String; getHost
	a (Ljava/lang/String;)Lfki; parseString
	b ()I getPort
	b (Ljava/lang/String;)Z isValidAddress
	c (Ljava/lang/String;)I parsePort
fkj net/minecraft/client/multiplayer/resolver/ServerAddressResolver
	a LOGGER
	b SYSTEM
fkk net/minecraft/client/multiplayer/resolver/ServerNameResolver
	a DEFAULT
	b resolver
	c redirectHandler
	d addressCheck
	a (Lfki;)Ljava/util/Optional; resolveAddress
fkl net/minecraft/client/multiplayer/resolver/ServerRedirectHandler
	a LOGGER
	b EMPTY
fko net/minecraft/client/particle/AshParticle
fko$a net/minecraft/client/particle/AshParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fkp net/minecraft/client/particle/AttackSweepParticle
	a sprites
	a ()V tick
	a (F)I getLightColor
	b ()Lfly; getRenderType
fkp$a net/minecraft/client/particle/AttackSweepParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fkq net/minecraft/client/particle/BaseAshSmokeParticle
	a sprites
	a ()V tick
	b ()Lfly; getRenderType
	b (F)F getQuadSize
fkr net/minecraft/client/particle/BlockMarker
	b ()Lfly; getRenderType
	b (F)F getQuadSize
fkr$a net/minecraft/client/particle/BlockMarker$Provider
	a (Lnet/minecraft/core/particles/ParticleParamBlock;Lfix;DDDDDD)Lflu; createParticle
fks net/minecraft/client/particle/BreakingItemParticle
	a uo
	b vo
	b ()Lfly; getRenderType
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
fks$a net/minecraft/client/particle/BreakingItemParticle$Provider
	a (Lnet/minecraft/core/particles/ParticleParamItem;Lfix;DDDDDD)Lflu; createParticle
fks$b net/minecraft/client/particle/BreakingItemParticle$SlimeProvider
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fks$c net/minecraft/client/particle/BreakingItemParticle$SnowballProvider
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fkt net/minecraft/client/particle/BubbleColumnUpParticle
	a ()V tick
	b ()Lfly; getRenderType
fkt$a net/minecraft/client/particle/BubbleColumnUpParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fku net/minecraft/client/particle/BubbleParticle
	a ()V tick
	b ()Lfly; getRenderType
fku$a net/minecraft/client/particle/BubbleParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fkv net/minecraft/client/particle/BubblePopParticle
	a sprites
	a ()V tick
	b ()Lfly; getRenderType
fkv$a net/minecraft/client/particle/BubblePopParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fkw net/minecraft/client/particle/CampfireSmokeParticle
	a ()V tick
	b ()Lfly; getRenderType
fkw$a net/minecraft/client/particle/CampfireSmokeParticle$CosyProvider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fkw$b net/minecraft/client/particle/CampfireSmokeParticle$SignalProvider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fkx net/minecraft/client/particle/CherryParticle
	F CURVE_ENDPOINT_TIME
	G FALL_ACC
	H WIND_BIG
	I rotSpeed
	J particleRandom
	K spinAcceleration
	a ACCELERATION_SCALE
	b INITIAL_LIFETIME
	a ()V tick
	b ()Lfly; getRenderType
fky net/minecraft/client/particle/CritParticle
	a ()V tick
	b ()Lfly; getRenderType
	b (F)F getQuadSize
fky$a net/minecraft/client/particle/CritParticle$DamageIndicatorProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fky$b net/minecraft/client/particle/CritParticle$MagicProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fky$c net/minecraft/client/particle/CritParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fkz net/minecraft/client/particle/DragonBreathParticle
	F COLOR_MIN_RED
	G COLOR_MIN_GREEN
	H COLOR_MIN_BLUE
	I COLOR_MAX_RED
	J COLOR_MAX_GREEN
	K COLOR_MAX_BLUE
	L hasHitGround
	M sprites
	a COLOR_MIN
	b COLOR_MAX
	a ()V tick
	b ()Lfly; getRenderType
	b (F)F getQuadSize
fkz$a net/minecraft/client/particle/DragonBreathParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fla net/minecraft/client/particle/DripParticle
	a isGlowing
	b type
	a ()V tick
	a (F)I getLightColor
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createWaterHangParticle
	b ()Lfly; getRenderType
	b (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createWaterFallParticle
	c (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createLavaHangParticle
	d (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createLavaFallParticle
	e (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createLavaLandParticle
	f (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createHoneyHangParticle
	g ()Lnet/minecraft/world/level/material/FluidType; getType
	g (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createHoneyFallParticle
	h ()V preMoveUpdate
	h (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createHoneyLandParticle
	i ()V postMoveUpdate
	i (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createDripstoneWaterHangParticle
	j (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createDripstoneWaterFallParticle
	k (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createDripstoneLavaHangParticle
	l (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createDripstoneLavaFallParticle
	m (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createNectarFallParticle
	n (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createSporeBlossomFallParticle
	o (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createObsidianTearHangParticle
	p (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createObsidianTearFallParticle
	q (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lfmu; createObsidianTearLandParticle
fla$a net/minecraft/client/particle/DripParticle$CoolingDripHangParticle
	h ()V preMoveUpdate
fla$b net/minecraft/client/particle/DripParticle$DripHangParticle
	b fallingParticle
	h ()V preMoveUpdate
	i ()V postMoveUpdate
fla$c net/minecraft/client/particle/DripParticle$DripLandParticle
fla$d net/minecraft/client/particle/DripParticle$DripstoneFallAndLandParticle
	i ()V postMoveUpdate
fla$e net/minecraft/client/particle/DripParticle$FallAndLandParticle
	b landParticle
	i ()V postMoveUpdate
fla$f net/minecraft/client/particle/DripParticle$FallingParticle
	i ()V postMoveUpdate
fla$g net/minecraft/client/particle/DripParticle$HoneyFallAndLandParticle
	i ()V postMoveUpdate
flb net/minecraft/client/particle/DustColorTransitionParticle
	a fromColor
	b toColor
	a (Lelt;Leqg;F)V render
	a (Lorg/joml/Vector3f;F)Lorg/joml/Vector3f; randomizeColor
	f (F)V lerpColors
flb$a net/minecraft/client/particle/DustColorTransitionParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/DustColorTransitionOptions;Lfix;DDDDDD)Lflu; createParticle
flc net/minecraft/client/particle/DustParticle
flc$a net/minecraft/client/particle/DustParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleParamRedstone;Lfix;DDDDDD)Lflu; createParticle
fld net/minecraft/client/particle/DustParticleBase
	a sprites
	a ()V tick
	a (FF)F randomizeColor
	b ()Lfly; getRenderType
	b (F)F getQuadSize
fle net/minecraft/client/particle/EnchantmentTableParticle
	F zStart
	a xStart
	b yStart
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	b ()Lfly; getRenderType
fle$a net/minecraft/client/particle/EnchantmentTableParticle$NautilusProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fle$b net/minecraft/client/particle/EnchantmentTableParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flf net/minecraft/client/particle/EndRodParticle
	a (DDD)V move
flf$a net/minecraft/client/particle/EndRodParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flg net/minecraft/client/particle/ExplodeParticle
	a sprites
	a ()V tick
	b ()Lfly; getRenderType
flg$a net/minecraft/client/particle/ExplodeParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flh net/minecraft/client/particle/FallingDustParticle
	a rotSpeed
	b sprites
	a ()V tick
	b ()Lfly; getRenderType
	b (F)F getQuadSize
flh$a net/minecraft/client/particle/FallingDustParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleParamBlock;Lfix;DDDDDD)Lflu; createParticle
fli net/minecraft/client/particle/FireworkParticles
fli$a net/minecraft/client/particle/FireworkParticles$FlashProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fli$b net/minecraft/client/particle/FireworkParticles$OverlayParticle
	a (Lelt;Leqg;F)V render
	b ()Lfly; getRenderType
	b (F)F getQuadSize
fli$c net/minecraft/client/particle/FireworkParticles$SparkParticle
	F flicker
	G engine
	H fadeR
	I fadeG
	J fadeB
	K hasFade
	b trail
	a ()V tick
	a (Lelt;Leqg;F)V render
	a (Z)V setTrail
	b (Z)V setFlicker
fli$d net/minecraft/client/particle/FireworkParticles$SparkProvider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fli$e net/minecraft/client/particle/FireworkParticles$Starter
	D explosions
	E twinkleDelay
	a life
	b engine
	a ()V tick
	a (DDDDDD[I[IZZ)V createParticle
	a (DI[I[IZZ)V createParticleBall
	a (D[[D[I[IZZZ)V createParticleShape
	a ([I[IZZ)V createParticleBurst
	c ()Z isFarAwayFromCamera
flj net/minecraft/client/particle/FlameParticle
	a (DDD)V move
	a (F)I getLightColor
	b ()Lfly; getRenderType
	b (F)F getQuadSize
flj$a net/minecraft/client/particle/FlameParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flj$b net/minecraft/client/particle/FlameParticle$SmallFlameProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flk net/minecraft/client/particle/GlowParticle
	a RANDOM
	b sprites
	a ()V tick
	a (F)I getLightColor
	b ()Lfly; getRenderType
flk$a net/minecraft/client/particle/GlowParticle$ElectricSparkProvider
	a SPEED_FACTOR
	b sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flk$b net/minecraft/client/particle/GlowParticle$GlowSquidProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flk$c net/minecraft/client/particle/GlowParticle$ScrapeProvider
	a SPEED_FACTOR
	b sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flk$d net/minecraft/client/particle/GlowParticle$WaxOffProvider
	a SPEED_FACTOR
	b sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flk$e net/minecraft/client/particle/GlowParticle$WaxOnProvider
	a SPEED_FACTOR
	b sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fll net/minecraft/client/particle/HeartParticle
	b ()Lfly; getRenderType
	b (F)F getQuadSize
fll$a net/minecraft/client/particle/HeartParticle$AngryVillagerProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fll$b net/minecraft/client/particle/HeartParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flm net/minecraft/client/particle/HugeExplosionParticle
	a sprites
	a ()V tick
	a (F)I getLightColor
	b ()Lfly; getRenderType
flm$a net/minecraft/client/particle/HugeExplosionParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fln net/minecraft/client/particle/HugeExplosionSeedParticle
	a life
	b lifeTime
	a ()V tick
fln$a net/minecraft/client/particle/HugeExplosionSeedParticle$Provider
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flo net/minecraft/client/particle/ItemPickupParticle
	D itemEntity
	E target
	F life
	G entityRenderDispatcher
	a LIFE_TIME
	b renderBuffers
	a ()V tick
	a (Lelt;Leqg;F)V render
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; getSafeCopy
	b ()Lfly; getRenderType
flp net/minecraft/client/particle/LargeSmokeParticle
flp$a net/minecraft/client/particle/LargeSmokeParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flq net/minecraft/client/particle/LavaParticle
	a ()V tick
	a (F)I getLightColor
	b ()Lfly; getRenderType
	b (F)F getQuadSize
flq$a net/minecraft/client/particle/LavaParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flr net/minecraft/client/particle/MobAppearanceParticle
	a model
	b renderType
	a (Lelt;Leqg;F)V render
	b ()Lfly; getRenderType
flr$a net/minecraft/client/particle/MobAppearanceParticle$Provider
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fls net/minecraft/client/particle/NoRenderParticle
	a (Lelt;Leqg;F)V render
	b ()Lfly; getRenderType
flt net/minecraft/client/particle/NoteParticle
	b ()Lfly; getRenderType
	b (F)F getQuadSize
flt$a net/minecraft/client/particle/NoteParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flu net/minecraft/client/particle/Particle
	A oRoll
	B friction
	C speedUpWhenYMotionIsBlocked
	D bb
	E stoppedByCollision
	a INITIAL_AABB
	b MAXIMUM_COLLISION_VELOCITY_SQUARED
	c level
	d xo
	e yo
	f zo
	g x
	h y
	i z
	j xd
	k yd
	l zd
	m onGround
	n hasPhysics
	o removed
	p bbWidth
	q bbHeight
	r random
	s age
	t lifetime
	u gravity
	v rCol
	w gCol
	x bCol
	y alpha
	z roll
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	a (FFF)V setColor
	a (I)V setLifetime
	a (Lelt;Leqg;F)V render
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)V setBoundingBox
	b ()Lfly; getRenderType
	b (DDD)V setParticleSpeed
	b (FF)V setSize
	c (DDD)V setPos
	c (F)Lflu; setPower
	d (F)Lflu; scale
	e (F)V setAlpha
	j ()I getLifetime
	k ()V remove
	l ()V setLocationFromBoundingbox
	m ()Z isAlive
	n ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBox
	o ()Ljava/util/Optional; getParticleGroup
flv net/minecraft/client/particle/ParticleDescription
	a textures
	a ()Ljava/util/List; getTextures
	a (Lcom/google/gson/JsonObject;)Lflv; fromJson
flw net/minecraft/client/particle/ParticleEngine
	a level
	b LOGGER
	c PARTICLE_LISTER
	d PARTICLES_ATLAS_INFO
	e MAX_PARTICLES_PER_LAYER
	f RENDER_ORDER
	g particles
	h trackingEmitters
	i textureManager
	j random
	k providers
	l particlesToAdd
	m spriteSets
	n textureAtlas
	o trackedParticleCounts
	a ()V close
	a (Lann$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lelp;Lfoe$a;Lfod;Leqg;F)V render
	a (Lfix;)V setLevel
	a (Lflu;)V add
	a (Lis;)Z hasSpaceInParticleLimit
	a (Lis;I)V updateCount
	a (Ljava/util/Collection;)V tickParticleList
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)V crack
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V destroy
	a (Lnet/minecraft/core/particles/Particle;Lflw$c;)V register
	a (Lnet/minecraft/core/particles/Particle;Lflx$a;)V register
	a (Lnet/minecraft/core/particles/Particle;Lflx;)V register
	a (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)Lflu; createParticle
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/server/packs/resources/IResource;)Ljava/util/Optional; loadParticleDescription
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleParam;)V createTrackingEmitter
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleParam;I)V createTrackingEmitter
	b ()V tick
	b (Lflu;)V tickParticle
	b (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)Lflu; makeParticle
	d ()Ljava/lang/String; countParticles
	e ()V registerProviders
	f ()V clearParticles
flw$b net/minecraft/client/particle/ParticleEngine$MutableSpriteSet
	a sprites
	a (II)Lfze; get
	a (Ljava/util/List;)V rebind
	a (Lnet/minecraft/util/RandomSource;)Lfze; get
flw$c net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration
flx net/minecraft/client/particle/ParticleProvider
flx$a net/minecraft/client/particle/ParticleProvider$Sprite
fly net/minecraft/client/particle/ParticleRenderType
	a TERRAIN_SHEET
	b PARTICLE_SHEET_OPAQUE
	c PARTICLE_SHEET_TRANSLUCENT
	d PARTICLE_SHEET_LIT
	e CUSTOM
	f NO_RENDER
	a (Lelk;Lfzf;)V begin
	a (Lelr;)V end
flz net/minecraft/client/particle/PlayerCloudParticle
	a sprites
	a ()V tick
	b ()Lfly; getRenderType
	b (F)F getQuadSize
flz$a net/minecraft/client/particle/PlayerCloudParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
flz$b net/minecraft/client/particle/PlayerCloudParticle$SneezeProvider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fma net/minecraft/client/particle/PortalParticle
	F zStart
	a xStart
	b yStart
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	b ()Lfly; getRenderType
	b (F)F getQuadSize
fma$a net/minecraft/client/particle/PortalParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmb net/minecraft/client/particle/ReversePortalParticle
	a ()V tick
	b (F)F getQuadSize
fmb$a net/minecraft/client/particle/ReversePortalParticle$ReversePortalProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmc net/minecraft/client/particle/RisingParticle
fmd net/minecraft/client/particle/SculkChargeParticle
	a sprites
	a ()V tick
	a (F)I getLightColor
	b ()Lfly; getRenderType
fmd$a net/minecraft/client/particle/SculkChargeParticle$Provider
	a sprite
	a ()Lfmp; sprite
	a (Lnet/minecraft/core/particles/SculkChargeParticleOptions;Lfix;DDDDDD)Lflu; createParticle
fme net/minecraft/client/particle/SculkChargePopParticle
	a sprites
	a ()V tick
	a (F)I getLightColor
	b ()Lfly; getRenderType
fme$a net/minecraft/client/particle/SculkChargePopParticle$Provider
	a sprite
	a ()Lfmp; sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmf net/minecraft/client/particle/ShriekParticle
	F MAGICAL_X_ROT
	G delay
	a ROTATION_VECTOR
	b TRANSFORM_VECTOR
	a ()V tick
	a (F)I getLightColor
	a (Lelt;Leqg;F)V render
	a (Lelt;Leqg;FLjava/util/function/Consumer;)V renderRotatedParticle
	a (Lelt;Lorg/joml/Vector3f;FFI)V makeCornerVertex
	b ()Lfly; getRenderType
	b (F)F getQuadSize
fmf$a net/minecraft/client/particle/ShriekParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ShriekParticleOption;Lfix;DDDDDD)Lflu; createParticle
fmg net/minecraft/client/particle/SimpleAnimatedParticle
	F fadeG
	G fadeB
	H hasFade
	a sprites
	b fadeR
	a ()V tick
	a (F)I getLightColor
	b ()Lfly; getRenderType
	b (I)V setColor
	c (I)V setFadeColor
fmh net/minecraft/client/particle/SingleQuadParticle
	D quadSize
	a (Lelt;Leqg;F)V render
	b (F)F getQuadSize
	c ()F getU0
	d ()F getU1
	d (F)Lflu; scale
	e ()F getV0
	f ()F getV1
fmi net/minecraft/client/particle/SmokeParticle
fmi$a net/minecraft/client/particle/SmokeParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmj net/minecraft/client/particle/SnowflakeParticle
	a sprites
	a ()V tick
	b ()Lfly; getRenderType
fmj$a net/minecraft/client/particle/SnowflakeParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmk net/minecraft/client/particle/SonicBoomParticle
fmk$a net/minecraft/client/particle/SonicBoomParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fml net/minecraft/client/particle/SoulParticle
	a isGlowing
	b sprites
	a ()V tick
	a (F)I getLightColor
	b ()Lfly; getRenderType
fml$a net/minecraft/client/particle/SoulParticle$EmissiveProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fml$b net/minecraft/client/particle/SoulParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmm net/minecraft/client/particle/SpellParticle
	a RANDOM
	b sprites
	a ()V tick
	b ()Lfly; getRenderType
	g ()Z isCloseToScopingPlayer
fmm$a net/minecraft/client/particle/SpellParticle$AmbientMobProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmm$b net/minecraft/client/particle/SpellParticle$InstantProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmm$c net/minecraft/client/particle/SpellParticle$MobProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmm$d net/minecraft/client/particle/SpellParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmm$e net/minecraft/client/particle/SpellParticle$WitchProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmn net/minecraft/client/particle/SpitParticle
fmn$a net/minecraft/client/particle/SpitParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmo net/minecraft/client/particle/SplashParticle
fmo$a net/minecraft/client/particle/SplashParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmp net/minecraft/client/particle/SpriteSet
	a (II)Lfze; get
	a (Lnet/minecraft/util/RandomSource;)Lfze; get
fmq net/minecraft/client/particle/SquidInkParticle
	a ()V tick
fmq$a net/minecraft/client/particle/SquidInkParticle$GlowInkProvider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmq$b net/minecraft/client/particle/SquidInkParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmr net/minecraft/client/particle/SuspendedParticle
	b ()Lfly; getRenderType
fmr$a net/minecraft/client/particle/SuspendedParticle$CrimsonSporeProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmr$b net/minecraft/client/particle/SuspendedParticle$SporeBlossomAirProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmr$c net/minecraft/client/particle/SuspendedParticle$UnderwaterProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmr$d net/minecraft/client/particle/SuspendedParticle$WarpedSporeProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fms net/minecraft/client/particle/SuspendedTownParticle
	a ()V tick
	a (DDD)V move
	b ()Lfly; getRenderType
fms$a net/minecraft/client/particle/SuspendedTownParticle$ComposterFillProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fms$b net/minecraft/client/particle/SuspendedTownParticle$DolphinSpeedProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fms$c net/minecraft/client/particle/SuspendedTownParticle$EggCrackProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fms$d net/minecraft/client/particle/SuspendedTownParticle$HappyVillagerProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fms$e net/minecraft/client/particle/SuspendedTownParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmt net/minecraft/client/particle/TerrainParticle
	F vo
	a pos
	b uo
	a (F)I getLightColor
	b ()Lfly; getRenderType
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
fmt$a net/minecraft/client/particle/TerrainParticle$Provider
	a (Lnet/minecraft/core/particles/ParticleParamBlock;Lfix;DDDDDD)Lflu; createParticle
fmu net/minecraft/client/particle/TextureSheetParticle
	E sprite
	a (Lfmp;)V pickSprite
	a (Lfze;)V setSprite
	b (Lfmp;)V setSpriteFromAge
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
fmv net/minecraft/client/particle/TotemParticle
fmv$a net/minecraft/client/particle/TotemParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmw net/minecraft/client/particle/TrackingEmitter
	D lifeTime
	E particleType
	a entity
	b life
	a ()V tick
fmx net/minecraft/client/particle/VibrationSignalParticle
	F rotO
	G pitch
	H pitchO
	a target
	b rot
	a ()V tick
	a (F)I getLightColor
	a (Lelt;Leqg;F)V render
	a (Lelt;Leqg;FLjava/util/function/Consumer;)V renderSignal
	b ()Lfly; getRenderType
fmx$a net/minecraft/client/particle/VibrationSignalParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/VibrationParticleOption;Lfix;DDDDDD)Lflu; createParticle
fmy net/minecraft/client/particle/WakeParticle
	a sprites
	a ()V tick
	b ()Lfly; getRenderType
fmy$a net/minecraft/client/particle/WakeParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fmz net/minecraft/client/particle/WaterCurrentDownParticle
	a angle
	a ()V tick
	b ()Lfly; getRenderType
fmz$a net/minecraft/client/particle/WaterCurrentDownParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fna net/minecraft/client/particle/WaterDropParticle
	a ()V tick
	b ()Lfly; getRenderType
fna$a net/minecraft/client/particle/WaterDropParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fnb net/minecraft/client/particle/WhiteAshParticle
	a COLOR_RGB24
fnb$a net/minecraft/client/particle/WhiteAshParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfix;DDDDDD)Lflu; createParticle
fnd net/minecraft/client/player/AbstractClientPlayer
	b deltaMovementOnPreviousTick
	c elytraRotX
	cm playerInfo
	d elytraRotY
	e elytraRotZ
	f clientLevel
	C (F)Lnet/minecraft/world/phys/Vec3D; getDeltaMovementLerped
	M_ ()Z isSpectator
	a ()Lfjf; getPlayerInfo
	b ()Lgae; getSkin
	c ()F getFieldOfViewModifier
	f ()Z isCreative
	l ()V tick
fne net/minecraft/client/player/Input
	a leftImpulse
	b forwardImpulse
	c up
	d down
	e left
	f right
	g jumping
	h shiftKeyDown
	a ()Lnet/minecraft/world/phys/Vec2F; getMoveVector
	a (ZF)V tick
	b ()Z hasForwardImpulse
fnf net/minecraft/client/player/KeyboardInput
	i options
	a (ZF)V tick
	a (ZZ)F calculateImpulse
fng net/minecraft/client/player/LocalPlayer
	cA WATER_VISION_QUICK_PERCENT
	cB SUFFOCATING_COLLISION_CHECK_SCALE
	cC MINOR_COLLISION_ANGLE_THRESHOLD_RADIAN
	cD DEFAULT_SNEAKING_MOVEMENT_FACTOR
	cE stats
	cF recipeBook
	cG ambientSoundHandlers
	cH permissionLevel
	cI xLast
	cJ yLast1
	cK zLast
	cL yRotLast
	cM xRotLast
	cN lastOnGround
	cO crouching
	cP wasShiftKeyDown
	cQ wasSprinting
	cR positionReminder
	cS flashOnSetHealth
	cT jumpRidingTicks
	cU jumpRidingScale
	cV startedUsingItem
	cW usingItemHand
	cX handsBusy
	cY autoJumpEnabled
	cZ autoJumpTime
	cm LOGGER
	cn connection
	co input
	cp minecraft
	cq sprintTriggerTime
	cr yBob
	cs xBob
	ct yBobO
	cu xBobO
	cv spinningEffectIntensity
	cw oSpinningEffectIntensity
	cx POSITION_REMINDER_INTERVAL
	cy WATER_VISION_MAX_TIME
	cz WATER_VISION_QUICK_TIME
	da wasFallFlying
	db waterVisionTime
	dc showDeathScreen
	dd doLimitedCrafting
	A ()F getWaterVision
	B ()V sendPosition
	C ()V sendIsSprintingIfNeeded
	D ()I getPermissionLevel
	D (F)V hurtTo
	E ()V handleNetherPortalClient
	F ()Z canAutoJump
	G ()Z isMoving
	I ()Z canStartSprinting
	K ()Z hasEnoughImpulseToStartSprinting
	L ()Z hasEnoughFoodToStartSprinting
	W ()Z isTextFilteringEnabled
	a (FII)V setExperienceValues
	a (I)V setPermissionLevel
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/sounds/SoundEffect;FF)V playSound
	a (Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/world/EnumHand;)V swing
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;)V crit
	a (Lnet/minecraft/world/entity/Entity;Z)Z startRiding
	a (Lnet/minecraft/world/entity/EnumMoveType;Lnet/minecraft/world/phys/Vec3D;)V move
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;)V openItemGui
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V updateTutorialInventoryAction
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)V removeRecipeHighlight
	a (Lnet/minecraft/world/level/CommandBlockListenerAbstract;)V openMinecartCommandBlock
	a (Lnet/minecraft/world/level/EnumGamemode;)V onGameModeChanged
	a (Lnet/minecraft/world/level/block/entity/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntityJigsaw;)V openJigsawBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;Z)V openTextEdit
	a (Lnet/minecraft/world/level/block/entity/TileEntityStructure;)V openStructureBlock
	a (Z)Z drop
	b (B)V handleEntityEvent
	b (F)V heal
	b (Lnet/minecraft/world/entity/Entity;)V magicCrit
	b (Lnet/minecraft/world/phys/Vec3D;)Z isHorizontalCollisionMinor
	b (Z)V setShowDeathScreen
	bB ()V removeVehicle
	bR ()Z isShiftKeyDown
	bW ()Z isCrouching
	b_ ()V aiStep
	bc ()Z isUnderWater
	bj ()Z canSpawnSprintParticle
	by ()V rideTick
	c (DD)V moveTowardsClosestSpace
	c (Lnet/minecraft/world/EnumHand;)V startUsingItem
	c (Lnet/minecraft/world/effect/MobEffectList;)Lnet/minecraft/world/effect/MobEffect; removeEffectNoUpdate
	c (Lnet/minecraft/world/entity/Entity;)Z vehicleCanSprint
	cX ()Z isEffectiveAi
	d ()F getCurrentMood
	dC ()F getVisualRotationYInDegrees
	dR ()Z canSpawnSoulSpeedParticle
	e ()V clientSideCloseContainer
	ea ()V tickDeath
	f (FF)V updateAutoJump
	f (Lnet/minecraft/world/damagesource/DamageSource;F)V actuallyHurt
	fK ()Z updateIsUnderwater
	fP ()V respawn
	fg ()V serverAiStep
	fm ()Z isUsingItem
	fn ()Lnet/minecraft/world/EnumHand; getUsedItemHand
	fs ()V stopUsingItem
	fu ()Z isSuppressingSlidingDownLadder
	g ()Z isLocalPlayer
	g (F)F getViewXRot
	h ()V sendRidingJump
	h (F)F getViewYRot
	i ()V sendOpenInventory
	i (Lnet/minecraft/core/BlockPosition;)Z suffocatesAt
	j ()Lnet/minecraft/stats/StatisticManager; getStats
	l ()V tick
	m ()Leqi; getRecipeBook
	o ()Z shouldShowDeathScreen
	p ()Z getDoLimitedCrafting
	q ()V closeContainer
	q (F)Lnet/minecraft/world/phys/Vec3D; getRopeHoldPosition
	s ()Lnet/minecraft/world/entity/IJumpable; jumpableVehicle
	t ()F getJumpRidingScale
	u ()Z isMovingSlowly
	v ()Z isControlledCamera
	v (Z)V setDoLimitedCrafting
	w ()V onUpdateAbilities
	x ()V resetPos
	y ()Z isHandsBusy
	z ()Z isAutoJumpEnabled
fnh net/minecraft/client/player/RemotePlayer
	cm lerpDeltaMovement
	cn lerpDeltaMovementSteps
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	b_ ()V aiStep
	fL ()V updatePlayerPose
	l ()V tick
	l (DDD)V lerpMotion
fni net/minecraft/client/player/inventory/Hotbar
	a items
	a ()Lnet/minecraft/nbt/NBTTagList; createTag
	a (Lnet/minecraft/nbt/NBTTagList;)V fromTag
fnl net/minecraft/client/profiling/ClientMetricsSamplersProvider
	a levelRenderer
	b samplers
	c samplerFactory
	a ()V registerStaticSamplers
	a (Ljava/util/function/Supplier;)Ljava/util/Set; samplers
fnn net/minecraft/client/quickplay/QuickPlay
	a ERROR_TITLE
	b INVALID_IDENTIFIER
	c REALM_CONNECT
	d REALM_PERMISSION
	e TO_TITLE
	f TO_WORLD_LIST
	g TO_REALMS_LIST
	a (Leqv;Lemf;Ljava/lang/String;)V joinRealmsWorld
	a (Leqv;Lfdw$c;Lemf;)V connect
	a (Leqv;Ljava/lang/String;)V joinSingleplayerWorld
	b (Leqv;Ljava/lang/String;)V joinMultiplayerWorld
fno net/minecraft/client/quickplay/QuickPlayLog
	a INACTIVE
	b LOGGER
	c GSON
	d path
	e worldData
	a (Leqv;)V log
	a (Lfno$c;Ljava/lang/String;Ljava/lang/String;)V setWorldData
	a (Ljava/lang/String;)Lfno; of
fno$a net/minecraft/client/quickplay/QuickPlayLog$QuickPlayEntry
	a CODEC
	b quickPlayWorld
	c lastPlayedTime
	d gamemode
	a ()Lfno$b; quickPlayWorld
	b ()Ljava/time/Instant; lastPlayedTime
	c ()Lnet/minecraft/world/level/EnumGamemode; gamemode
fno$b net/minecraft/client/quickplay/QuickPlayLog$QuickPlayWorld
	a MAP_CODEC
	b type
	c id
	d name
	a ()Lfno$c; type
	b ()Ljava/lang/String; id
	c ()Ljava/lang/String; name
fno$c net/minecraft/client/quickplay/QuickPlayLog$Type
	a SINGLEPLAYER
	b MULTIPLAYER
	c REALMS
	d CODEC
	e name
	f $VALUES
	a ()[Lfno$c; $values
	c ()Ljava/lang/String; getSerializedName
fnq net/minecraft/client/renderer/BiomeColors
	a GRASS_COLOR_RESOLVER
	b FOLIAGE_COLOR_RESOLVER
	c WATER_COLOR_RESOLVER
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)I getAverageGrassColor
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getAverageColor
	b (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)I getAverageFoliageColor
	c (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)I getAverageWaterColor
fnr net/minecraft/client/renderer/BlockEntityWithoutLevelRenderer
	a SHULKER_BOXES
	b DEFAULT_SHULKER_BOX
	c chest
	d trappedChest
	e enderChest
	f banner
	g bed
	h conduit
	i decoratedPot
	j shieldModel
	k tridentModel
	l skullModels
	m blockEntityRenderDispatcher
	n entityModelSet
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lelp;Lfoe;II)V renderByItem
fns net/minecraft/client/renderer/CubeMap
	a SIDES
	b images
	a (Leqv;FFF)V render
	a (Lfzf;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preload
fnt net/minecraft/client/renderer/DimensionSpecialEffects
	a EFFECTS
	b sunriseCol
	c cloudLevel
	d hasGround
	e skyType
	f forceBrightLightmap
	g constantAmbientLight
	a ()F getCloudHeight
	a (FF)[F getSunriseColor
	a (II)Z isFoggyAt
	a (Lnet/minecraft/world/level/dimension/DimensionManager;)Lfnt; forType
	a (Lnet/minecraft/world/phys/Vec3D;F)Lnet/minecraft/world/phys/Vec3D; getBrightnessDependentFogColor
	b ()Z hasGround
	c ()Lfnt$d; skyType
	d ()Z forceBrightLightmap
	e ()Z constantAmbientLight
fnt$a net/minecraft/client/renderer/DimensionSpecialEffects$EndEffects
	a (FF)[F getSunriseColor
	a (II)Z isFoggyAt
	a (Lnet/minecraft/world/phys/Vec3D;F)Lnet/minecraft/world/phys/Vec3D; getBrightnessDependentFogColor
fnt$b net/minecraft/client/renderer/DimensionSpecialEffects$NetherEffects
	a (II)Z isFoggyAt
	a (Lnet/minecraft/world/phys/Vec3D;F)Lnet/minecraft/world/phys/Vec3D; getBrightnessDependentFogColor
fnt$c net/minecraft/client/renderer/DimensionSpecialEffects$OverworldEffects
	a CLOUD_LEVEL
	a (II)Z isFoggyAt
	a (Lnet/minecraft/world/phys/Vec3D;F)Lnet/minecraft/world/phys/Vec3D; getBrightnessDependentFogColor
fnt$d net/minecraft/client/renderer/DimensionSpecialEffects$SkyType
	a NONE
	b NORMAL
	c END
	d $VALUES
	a ()[Lfnt$d; $values
fnu net/minecraft/client/renderer/EffectInstance
	a EFFECT_SHADER_PATH
	b LOGGER
	c DUMMY_UNIFORM
	d ALWAYS_REAPPLY
	e lastAppliedEffect
	f lastProgramId
	g samplerMap
	h samplerNames
	i samplerLocations
	j uniforms
	k uniformLocations
	l uniformMap
	m programId
	n name
	o dirty
	p blend
	q attributes
	r attributeNames
	s vertexProgram
	t fragmentProgram
	a ()I getId
	a (Lcom/google/gson/JsonElement;)V parseSamplerNode
	a (Lcom/google/gson/JsonObject;)Lekz; parseBlendNode
	a (Ljava/lang/String;)Lelg; getUniform
	a (Ljava/lang/String;Ljava/util/function/IntSupplier;)V setSampler
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Leld$a;Ljava/lang/String;)Lelb; getOrCreate
	b ()V markDirty
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	b (Ljava/lang/String;)Leky; safeGetUniform
	c ()Leld; getVertexProgram
	d ()Leld; getFragmentProgram
	e ()V attachToProgram
	f ()V clear
	g ()V apply
	h ()Ljava/lang/String; getName
	i ()V updateLocations
fnv net/minecraft/client/renderer/FaceInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g BY_FACING
	h infos
	i $VALUES
	a ()[Lfnv; $values
	a (I)Lfnv$b; getVertexInfo
	a (Lnet/minecraft/core/EnumDirection;)Lfnv; fromFacing
fnv$a net/minecraft/client/renderer/FaceInfo$Constants
	a MAX_Z
	b MAX_Y
	c MAX_X
	d MIN_Z
	e MIN_Y
	f MIN_X
fnv$b net/minecraft/client/renderer/FaceInfo$VertexInfo
	a xFace
	b yFace
	c zFace
fnw net/minecraft/client/renderer/FogRenderer
	a BIOME_FOG_TRANSITION_TIME
	b WATER_FOG_DISTANCE
	c MOB_EFFECT_FOG
	d fogRed
	e fogGreen
	f fogBlue
	g targetBiomeFog
	h previousBiomeFog
	i biomeChangedTime
	a ()V setupNoFog
	a (Leqg;FLfix;IF)V setupColor
	a (Leqg;Lfnw$d;FZF)V setupFog
	a (Lnet/minecraft/world/entity/Entity;F)Lfnw$e; getPriorityFogFunction
	b ()V levelFogColor
fnw$a net/minecraft/client/renderer/FogRenderer$BlindnessFogFunction
	a ()Lnet/minecraft/world/effect/MobEffectList; getMobEffect
	a (Lfnw$c;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/effect/MobEffect;FF)V setupFog
fnw$b net/minecraft/client/renderer/FogRenderer$DarknessFogFunction
	a ()Lnet/minecraft/world/effect/MobEffectList; getMobEffect
	a (Lfnw$c;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/effect/MobEffect;FF)V setupFog
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/effect/MobEffect;FF)F getModifiedVoidDarkness
fnw$c net/minecraft/client/renderer/FogRenderer$FogData
	a mode
	b start
	c end
	d shape
fnw$d net/minecraft/client/renderer/FogRenderer$FogMode
	a FOG_SKY
	b FOG_TERRAIN
	c $VALUES
	a ()[Lfnw$d; $values
fnw$e net/minecraft/client/renderer/FogRenderer$MobEffectFogFunction
	a ()Lnet/minecraft/world/effect/MobEffectList; getMobEffect
	a (Lfnw$c;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/effect/MobEffect;FF)V setupFog
	a (Lnet/minecraft/world/entity/EntityLiving;F)Z isEnabled
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/effect/MobEffect;FF)F getModifiedVoidDarkness
fnx net/minecraft/client/renderer/GameRenderer
	A overlayTexture
	B panoramicMode
	C zoom
	D zoomX
	E zoomY
	F itemActivationItem
	G itemActivationTicks
	H itemActivationOffX
	I itemActivationOffY
	J postEffect
	K EFFECTS
	L effectIndex
	M effectActive
	N mainCamera
	O shaders
	P positionShader
	Q positionColorShader
	R positionColorTexShader
	S positionTexShader
	T positionTexColorShader
	U particleShader
	V positionColorLightmapShader
	W positionColorTexLightmapShader
	X positionTexColorNormalShader
	Y positionTexLightmapColorShader
	Z rendertypeSolidShader
	a PROJECTION_Z_NEAR
	aA rendertypeArmorEntityGlintShader
	aB rendertypeGlintTranslucentShader
	aC rendertypeGlintShader
	aD rendertypeGlintDirectShader
	aE rendertypeEntityGlintShader
	aF rendertypeEntityGlintDirectShader
	aG rendertypeTextShader
	aH rendertypeTextBackgroundShader
	aI rendertypeTextIntensityShader
	aJ rendertypeTextSeeThroughShader
	aK rendertypeTextBackgroundSeeThroughShader
	aL rendertypeTextIntensitySeeThroughShader
	aM rendertypeLightningShader
	aN rendertypeTripwireShader
	aO rendertypeEndPortalShader
	aP rendertypeEndGatewayShader
	aQ rendertypeLinesShader
	aR rendertypeCrumblingShader
	aS rendertypeGuiShader
	aT rendertypeGuiOverlayShader
	aU rendertypeGuiTextHighlightShader
	aV rendertypeGuiGhostRecipeOverlayShader
	aa rendertypeCutoutMippedShader
	ab rendertypeCutoutShader
	ac rendertypeTranslucentShader
	ad rendertypeTranslucentMovingBlockShader
	ae rendertypeTranslucentNoCrumblingShader
	af rendertypeArmorCutoutNoCullShader
	ag rendertypeEntitySolidShader
	ah rendertypeEntityCutoutShader
	ai rendertypeEntityCutoutNoCullShader
	aj rendertypeEntityCutoutNoCullZOffsetShader
	ak rendertypeItemEntityTranslucentCullShader
	al rendertypeEntityTranslucentCullShader
	am rendertypeEntityTranslucentShader
	an rendertypeEntityTranslucentEmissiveShader
	ao rendertypeEntitySmoothCutoutShader
	ap rendertypeBeaconBeamShader
	aq rendertypeEntityDecalShader
	ar rendertypeEntityNoOutlineShader
	as rendertypeEntityShadowShader
	at rendertypeEntityAlphaShader
	au rendertypeEyesShader
	av rendertypeEnergySwirlShader
	aw rendertypeLeashShader
	ax rendertypeWaterMaskShader
	ay rendertypeOutlineShader
	az rendertypeArmorGlintShader
	b itemInHandRenderer
	c ITEM_ACTIVATION_ANIMATION_LENGTH
	d EFFECT_NONE
	e blitShader
	f NAUSEA_LOCATION
	g LOGGER
	h DEPTH_BUFFER_DEBUG
	i GUI_Z_NEAR
	j minecraft
	k resourceManager
	l random
	m renderDistance
	n mapRenderer
	o renderBuffers
	p tick
	q fov
	r oldFov
	s darkenWorldAmount
	t darkenWorldAmountO
	u renderHand
	v renderBlockOutline
	w lastScreenshotAttempt
	x hasWorldScreenshot
	y lastActiveTime
	z lightTexture
	A ()Lfos; getRendertypeCutoutMippedShader
	B ()Lfos; getRendertypeCutoutShader
	C ()Lfos; getRendertypeTranslucentShader
	D ()Lfos; getRendertypeTranslucentMovingBlockShader
	E ()Lfos; getRendertypeTranslucentNoCrumblingShader
	F ()Lfos; getRendertypeArmorCutoutNoCullShader
	G ()Lfos; getRendertypeEntitySolidShader
	H ()Lfos; getRendertypeEntityCutoutShader
	I ()Lfos; getRendertypeEntityCutoutNoCullShader
	J ()Lfos; getRendertypeEntityCutoutNoCullZOffsetShader
	K ()Lfos; getRendertypeItemEntityTranslucentCullShader
	L ()Lfos; getRendertypeEntityTranslucentCullShader
	M ()Lfos; getRendertypeEntityTranslucentShader
	N ()Lfos; getRendertypeEntityTranslucentEmissiveShader
	O ()Lfos; getRendertypeEntitySmoothCutoutShader
	P ()Lfos; getRendertypeBeaconBeamShader
	Q ()Lfos; getRendertypeEntityDecalShader
	R ()Lfos; getRendertypeEntityNoOutlineShader
	S ()Lfos; getRendertypeEntityShadowShader
	T ()Lfos; getRendertypeEntityAlphaShader
	U ()Lfos; getRendertypeEyesShader
	V ()Lfos; getRendertypeEnergySwirlShader
	W ()Lfos; getRendertypeLeashShader
	X ()Lfos; getRendertypeWaterMaskShader
	Y ()Lfos; getRendertypeOutlineShader
	Z ()Lfos; getRendertypeArmorGlintShader
	a ()Z isPanoramicMode
	a (D)Lorg/joml/Matrix4f; getProjectionMatrix
	a (F)V pick
	a (FFF)V renderZoomed
	a (FJLelp;)V renderLevel
	a (FJZ)V render
	a (II)V resize
	a (IIF)V renderItemActivationAnimation
	a (Lelp;F)V bobHurt
	a (Lelp;Leqg;F)V renderItemInHand
	a (Leqg;FZ)D getFov
	a (Lesf;F)V renderConfusionOverlay
	a (Ljava/lang/String;)Lfos; getShader
	a (Ljava/nio/file/Path;)V takeAutoScreenshot
	a (Lnet/minecraft/resources/MinecraftKey;)V loadEffect
	a (Lnet/minecraft/server/packs/resources/ResourceProvider;)V preloadUiShader
	a (Lnet/minecraft/server/packs/resources/ResourceProvider;Ljava/lang/String;Lelu;)Lfos; preloadShader
	a (Lnet/minecraft/world/entity/Entity;)V checkEntityPostEffect
	a (Lnet/minecraft/world/entity/EntityLiving;F)F getNightVisionScale
	a (Lnet/minecraft/world/item/ItemStack;)V displayItemActivation
	a (Lorg/joml/Matrix4f;)V resetProjectionMatrix
	a (Z)V setRenderHand
	aa ()Lfos; getRendertypeArmorEntityGlintShader
	ab ()Lfos; getRendertypeGlintTranslucentShader
	ac ()Lfos; getRendertypeGlintShader
	ad ()Lfos; getRendertypeGlintDirectShader
	ae ()Lfos; getRendertypeEntityGlintShader
	af ()Lfos; getRendertypeEntityGlintDirectShader
	ag ()Lfos; getRendertypeTextShader
	ah ()Lfos; getRendertypeTextBackgroundShader
	ai ()Lfos; getRendertypeTextIntensityShader
	aj ()Lfos; getRendertypeTextSeeThroughShader
	ak ()Lfos; getRendertypeTextBackgroundSeeThroughShader
	al ()Lfos; getRendertypeTextIntensitySeeThroughShader
	am ()Lfos; getRendertypeLightningShader
	an ()Lfos; getRendertypeTripwireShader
	ao ()Lfos; getRendertypeEndPortalShader
	ap ()Lfos; getRendertypeEndGatewayShader
	aq ()Lfos; getRendertypeLinesShader
	ar ()Lfos; getRendertypeCrumblingShader
	as ()Lfos; getRendertypeGuiShader
	at ()Lfos; getRendertypeGuiOverlayShader
	au ()Lfos; getRendertypeGuiTextHighlightShader
	av ()Lfos; getRendertypeGuiGhostRecipeOverlayShader
	aw ()V shutdownShaders
	ax ()V tickFov
	ay ()V tryTakeScreenshotIfNeeded
	az ()Z shouldRenderBlockOutline
	b ()V shutdownEffect
	b (F)F getDarkenWorldAmount
	b (Lelp;F)V bobView
	b (Lnet/minecraft/server/packs/resources/ResourceProvider;)V reloadShaders
	b (Z)V setRenderBlockOutline
	c ()V togglePostEffect
	c (Z)V setPanoramicMode
	d ()V cycleEffect
	e ()Lnet/minecraft/server/packs/resources/IReloadListener; createReloadListener
	f ()V tick
	g ()Lfoh; currentEffect
	h ()F getDepthFar
	i ()V resetData
	j ()Lesh; getMapRenderer
	k ()Leqv; getMinecraft
	l ()F getRenderDistance
	m ()Leqg; getMainCamera
	n ()Lfod; lightTexture
	o ()Lfyv; overlayTexture
	p ()Lfos; getPositionShader
	q ()Lfos; getPositionColorShader
	r ()Lfos; getPositionColorTexShader
	s ()Lfos; getPositionTexShader
	t ()Lfos; getPositionTexColorShader
	u ()Lfos; getParticleShader
	v ()Lfos; getPositionColorLightmapShader
	w ()Lfos; getPositionColorTexLightmapShader
	x ()Lfos; getPositionTexColorNormalShader
	y ()Lfos; getPositionTexLightmapColorShader
	z ()Lfos; getRendertypeSolidShader
fnx$a net/minecraft/client/renderer/GameRenderer$ResourceCache
	a original
	b cache
	a ()Lnet/minecraft/server/packs/resources/ResourceProvider; original
	b ()Ljava/util/Map; cache
fny net/minecraft/client/renderer/GpuWarnlistManager
	a LOGGER
	b GPU_WARNLIST_LOCATION
	c warnings
	d showWarning
	e warningDismissed
	f skipFabulous
	a ()Z hasWarnings
	a (Lcom/google/gson/JsonArray;Ljava/util/List;)V compilePatterns
	a (Lfny$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Lfny$a; prepare
	b ()Z willShowWarning
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
	c (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Lcom/google/gson/JsonObject; parseJson
	d ()V showWarning
	e ()V dismissWarning
	f ()V dismissWarningAndSkipFabulous
	g ()Z isShowingWarning
	h ()Z isSkippingFabulous
	i ()V resetWarnings
	j ()Ljava/lang/String; getRendererWarnings
	k ()Ljava/lang/String; getVersionWarnings
	l ()Ljava/lang/String; getVendorWarnings
	m ()Ljava/lang/String; getAllWarnings
fny$a net/minecraft/client/renderer/GpuWarnlistManager$Preparations
	a rendererPatterns
	b versionPatterns
	c vendorPatterns
	a ()Lcom/google/common/collect/ImmutableMap; apply
	a (Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; matchAny
fnz net/minecraft/client/renderer/ItemBlockRenderTypes
	a TYPE_BY_BLOCK
	b TYPE_BY_FLUID
	c renderCutout
	a (Lnet/minecraft/world/item/ItemStack;Z)Lfom; getRenderType
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lfom; getChunkRenderType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Z)Lfom; getRenderType
	a (Lnet/minecraft/world/level/material/Fluid;)Lfom; getRenderLayer
	a (Z)V setFancy
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Lfom; getMovingBlockRenderType
foa net/minecraft/client/renderer/ItemInHandRenderer
	A ARM_SWING_Z_ROT_AMOUNT
	B ARM_HEIGHT_SCALE
	C ARM_POS_SCALE
	D ARM_POS_X
	E ARM_POS_Y
	F ARM_POS_Z
	G ARM_PRESWING_ROT_Y
	H ARM_PREROTATION_X_OFFSET
	I ARM_PREROTATION_Y_OFFSET
	J ARM_PREROTATION_Z_OFFSET
	K ARM_POSTROTATION_X_OFFSET
	L ARM_ROT_X
	M ARM_ROT_Y
	N ARM_ROT_Z
	O MAP_SWING_X_POS_SCALE
	P MAP_SWING_Z_POS_SCALE
	Q MAP_HANDS_POS_X
	R MAP_HANDS_POS_Y
	S MAP_HANDS_POS_Z
	T MAP_HANDS_HEIGHT_SCALE
	U MAP_HANDS_TILT_SCALE
	V MAP_PLAYER_PITCH_SCALE
	W MAP_HANDS_Z_ROT_AMOUNT
	X MAPHAND_X_ROT_AMOUNT
	Y MAPHAND_Y_ROT_AMOUNT
	Z MAPHAND_Z_ROT_AMOUNT
	a MAP_BACKGROUND
	aA oOffHandHeight
	aB entityRenderDispatcher
	aC itemRenderer
	aa MAP_HAND_X_POS
	ab MAP_HAND_Y_POS
	ac MAP_HAND_Z_POS
	ad MAP_SWING_X_ROT_AMOUNT
	ae MAP_PRE_ROT_SCALE
	af MAP_GLOBAL_X_POS
	ag MAP_GLOBAL_Y_POS
	ah MAP_GLOBAL_Z_POS
	ai MAP_FINAL_SCALE
	aj MAP_BORDER
	ak MAP_HEIGHT
	al MAP_WIDTH
	am BOW_CHARGE_X_POS_SCALE
	an BOW_CHARGE_Y_POS_SCALE
	ao BOW_CHARGE_Z_POS_SCALE
	ap BOW_CHARGE_SHAKE_X_SCALE
	aq BOW_CHARGE_SHAKE_Y_SCALE
	ar BOW_CHARGE_SHAKE_Z_SCALE
	as BOW_CHARGE_Z_SCALE
	at BOW_MIN_SHAKE_CHARGE
	au minecraft
	av mainHandItem
	aw offHandItem
	ax mainHandHeight
	ay oMainHandHeight
	az offHandHeight
	b MAP_BACKGROUND_CHECKERBOARD
	c ITEM_SWING_X_POS_SCALE
	d ITEM_SWING_Y_POS_SCALE
	e ITEM_SWING_Z_POS_SCALE
	f ITEM_HEIGHT_SCALE
	g ITEM_POS_X
	h ITEM_POS_Y
	i ITEM_POS_Z
	j ITEM_PRESWING_ROT_Y
	k ITEM_SWING_X_ROT_AMOUNT
	l ITEM_SWING_Y_ROT_AMOUNT
	m ITEM_SWING_Z_ROT_AMOUNT
	n EAT_JIGGLE_X_ROT_AMOUNT
	o EAT_JIGGLE_Y_ROT_AMOUNT
	p EAT_JIGGLE_Z_ROT_AMOUNT
	q EAT_JIGGLE_X_POS_SCALE
	r EAT_JIGGLE_Y_POS_SCALE
	s EAT_JIGGLE_Z_POS_SCALE
	t EAT_JIGGLE_EXPONENT
	u EAT_EXTRA_JIGGLE_CUTOFF
	v EAT_EXTRA_JIGGLE_SCALE
	w ARM_SWING_X_POS_SCALE
	x ARM_SWING_Y_POS_SCALE
	y ARM_SWING_Z_POS_SCALE
	z ARM_SWING_Y_ROT_AMOUNT
	a ()V tick
	a (F)F calculateMapTilt
	a (FLelp;Lfoe$a;Lfng;I)V renderHandsWithItems
	a (Lelp;FLnet/minecraft/world/entity/EnumMainHand;Lnet/minecraft/world/item/ItemStack;)V applyEatTransform
	a (Lelp;FLnet/minecraft/world/entity/EnumMainHand;Lnet/minecraft/world/item/ItemStack;F)V applyBrushTransform
	a (Lelp;Lfoe;IFFF)V renderTwoHandedMap
	a (Lelp;Lfoe;IFFLnet/minecraft/world/entity/EnumMainHand;)V renderPlayerArm
	a (Lelp;Lfoe;IFLnet/minecraft/world/entity/EnumMainHand;FLnet/minecraft/world/item/ItemStack;)V renderOneHandedMap
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/EnumMainHand;)V renderMapHand
	a (Lelp;Lfoe;ILnet/minecraft/world/item/ItemStack;)V renderMap
	a (Lelp;Lnet/minecraft/world/entity/EnumMainHand;F)V applyItemArmAttackTransform
	a (Lfnd;FFLnet/minecraft/world/EnumHand;FLnet/minecraft/world/item/ItemStack;FLelp;Lfoe;I)V renderArmWithItem
	a (Lfng;)Lfoa$a; evaluateWhichHandsToRender
	a (Lnet/minecraft/world/EnumHand;)V itemUsed
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLelp;Lfoe;I)V renderItem
	a (Lnet/minecraft/world/item/ItemStack;)Z isChargedCrossbow
	b (Lelp;Lnet/minecraft/world/entity/EnumMainHand;F)V applyItemArmTransform
	b (Lfng;)Lfoa$a; selectionUsingItemWhileHoldingBowLike
foa$a net/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection
	a RENDER_BOTH_HANDS
	b RENDER_MAIN_HAND_ONLY
	c RENDER_OFF_HAND_ONLY
	d renderMainHand
	e renderOffHand
	f $VALUES
	a ()[Lfoa$a; $values
	a (Lnet/minecraft/world/EnumHand;)Lfoa$a; onlyForHand
fob net/minecraft/client/renderer/ItemModelShaper
	a shapes
	b shapesCache
	c modelManager
	a ()Lgbl; getModelManager
	a (Lnet/minecraft/world/item/Item;)Lgbf; getItemModel
	a (Lnet/minecraft/world/item/Item;Lgbm;)V register
	a (Lnet/minecraft/world/item/ItemStack;)Lgbf; getItemModel
	b ()V rebuildCache
	b (Lnet/minecraft/world/item/Item;)I getIndex
foc net/minecraft/client/renderer/LevelRenderer
	A skyBuffer
	B darkBuffer
	C generateClouds
	D cloudBuffer
	E frameTimes
	F ticks
	G destroyingBlocks
	H destructionProgress
	I playingRecords
	J entityTarget
	K entityEffect
	L translucentTarget
	M itemEntityTarget
	N particlesTarget
	O weatherTarget
	P cloudsTarget
	Q transparencyChain
	R lastCameraSectionX
	S lastCameraSectionY
	T lastCameraSectionZ
	U prevCamX
	V prevCamY
	W prevCamZ
	X prevCamRotX
	Y prevCamRotY
	Z prevCloudX
	a SECTION_SIZE
	aa prevCloudY
	ab prevCloudZ
	ac prevCloudColor
	ad prevCloudsType
	ae sectionRenderDispatcher
	af lastViewDistance
	ag renderedEntities
	ah culledEntities
	ai cullingFrustum
	aj captureFrustum
	ak capturedFrustum
	al frustumPoints
	am frustumPos
	an xTransparentOld
	ao yTransparentOld
	ap zTransparentOld
	aq rainSoundTime
	ar rainSizeX
	as rainSizeZ
	b HALF_SECTION_SIZE
	c DIRECTIONS
	d LOGGER
	e SKY_DISC_RADIUS
	f MIN_FOG_DISTANCE
	g RAIN_RADIUS
	h RAIN_DIAMETER
	i TRANSPARENT_SORT_COUNT
	j MOON_LOCATION
	k SUN_LOCATION
	l CLOUDS_LOCATION
	m END_SKY_LOCATION
	n FORCEFIELD_LOCATION
	o RAIN_LOCATION
	p SNOW_LOCATION
	q minecraft
	r entityRenderDispatcher
	s blockEntityRenderDispatcher
	t renderBuffers
	u level
	v sectionOcclusionGraph
	w visibleSections
	x globalBlockEntities
	y viewArea
	z starBuffer
	A ()V createDarkSky
	B ()V createLightSky
	C ()V createStars
	a ()V initOutline
	a (F)Lnet/minecraft/world/phys/Vec3D; mixColor
	a (FFFF)Lnet/minecraft/world/phys/Vec3D; shiftHue
	a (II)V resize
	a (III)V setSectionDirtyWithNeighbors
	a (IIIIII)V setBlocksDirty
	a (IIIZ)V setSectionDirty
	a (ILnet/minecraft/core/BlockPosition;I)V globalLevelEvent
	a (Lajx;)V removeProgress
	a (Lelk;)Lelk$b; drawStars
	a (Lelk;DDDLnet/minecraft/world/phys/Vec3D;)Lelk$b; buildClouds
	a (Lelk;F)Lelk$b; buildSkyDisc
	a (Lelp;)V checkPoseStack
	a (Lelp;FJZLeqg;Lfnx;Lfod;Lorg/joml/Matrix4f;)V renderLevel
	a (Lelp;Lelt;DDDDDDFFFF)V renderLineBox
	a (Lelp;Lelt;DDDDDDFFFFFFF)V renderLineBox
	a (Lelp;Lelt;FFFFFFFFFF)V addChainedFilledBoxVertices
	a (Lelp;Lelt;Lnet/minecraft/world/entity/Entity;DDDLnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V renderHitOutline
	a (Lelp;Lelt;Lnet/minecraft/world/phys/AxisAlignedBB;FFFF)V renderLineBox
	a (Lelp;Lelt;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V renderShape
	a (Lelp;Lelt;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFFZ)V renderVoxelShape
	a (Lelp;Lfoe;Leqg;)V renderDebug
	a (Lelp;Lnet/minecraft/world/phys/Vec3D;Lorg/joml/Matrix4f;)V prepareCullFrustum
	a (Lelp;Lorg/joml/Matrix4f;FDDD)V renderClouds
	a (Lelp;Lorg/joml/Matrix4f;FLeqg;ZLjava/lang/Runnable;)V renderSky
	a (Lelt;DDDDDDFFFF)V renderLineBox
	a (Lelt;Lorg/joml/Matrix4f;I)V addFrustumVertex
	a (Lelt;Lorg/joml/Matrix4f;IIIIIII)V addFrustumQuad
	a (Leqg;)V tickRain
	a (Leqg;Lfrg;ZZ)V setupRender
	a (Lfix;)V setLevel
	a (Lfod;FDDD)V renderSnowAndRain
	a (Lfom;Lelp;DDDLorg/joml/Matrix4f;)V renderSectionLayer
	a (Lfrc$b;)V addRecentlyCompiledSection
	a (Lfrg;)Lfrg; offsetFrustum
	a (Ljava/util/Collection;Ljava/util/Collection;)V updateGlobalBlockEntities
	a (Lnet/minecraft/core/BlockPosition;)Z isSectionCompiled
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlockDirty
	a (Lnet/minecraft/core/BlockPosition;Z)V setBlockDirty
	a (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/core/particles/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/core/particles/ParticleParam;ZZDDDDDD)V addParticle
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/core/BlockPosition;)V playStreamingMusic
	a (Lnet/minecraft/world/entity/Entity;DDDFLelp;Lfoe;)V renderEntity
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V onChunkLoaded
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;I)V blockChanged
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)I getLightColor
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)I getLightColor
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)V notifyNearbyEntities
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;DDDLfrg;)V captureFrustum
	a (Z)Lera; calculateParticleLevel
	b ()V doEntityOutline
	b (III)V setSectionDirty
	b (ILnet/minecraft/core/BlockPosition;I)V levelEvent
	b (Lelp;)V renderEndSky
	b (Lelp;Lelt;DDDDDDFFFF)V addChainedFilledBoxVertices
	b (Leqg;)Z doesMobEffectBlockSky
	b (Lfrg;)V applyFrustum
	b (Lnet/minecraft/core/particles/ParticleParam;ZDDDDDD)Lflu; addParticleInternal
	b (Lnet/minecraft/core/particles/ParticleParam;ZZDDDDDD)Lflu; addParticleInternal
	c (ILnet/minecraft/core/BlockPosition;I)V destroyBlockProgress
	c (Leqg;)V compileSections
	d ()Z shouldShowEntityOutlines
	d (Leqg;)V renderWorldBorder
	e ()V graphicsChanged
	f ()V allChanged
	g ()Ljava/lang/String; getSectionStatistics
	h ()Lfrc; getSectionRenderDispatcher
	i ()D getTotalSections
	j ()D getLastViewDistance
	k ()I countRenderedSections
	l ()Ljava/lang/String; getEntityStatistics
	m ()V captureFrustum
	n ()V killFrustum
	o ()V tick
	p ()V clear
	q ()Z hasRenderedAllSections
	r ()V needsUpdate
	s ()Lekb; entityTarget
	t ()Lekb; getTranslucentTarget
	u ()Lekb; getItemEntityTarget
	v ()Lekb; getParticlesTarget
	w ()Lekb; getWeatherTarget
	x ()Lekb; getCloudsTarget
	y ()V initTransparency
	z ()V deinitTransparency
foc$a net/minecraft/client/renderer/LevelRenderer$TransparencyShaderException
fod net/minecraft/client/renderer/LightTexture
	a FULL_BRIGHT
	b FULL_SKY
	c FULL_BLOCK
	d lightTexture
	e lightPixels
	f lightTextureLocation
	g updateLightTexture
	h blockLightRedFlicker
	i renderer
	j minecraft
	a ()V tick
	a (F)V updateLightTexture
	a (I)I block
	a (II)I pack
	a (Lnet/minecraft/world/entity/EntityLiving;FF)F calculateDarknessScale
	a (Lnet/minecraft/world/level/dimension/DimensionManager;I)F getBrightness
	a (Lorg/joml/Vector3f;)V clampColor
	b ()V turnOffLightLayer
	b (F)F getDarknessGamma
	b (I)I sky
	c ()V turnOnLightLayer
	c (F)F notGamma
foe net/minecraft/client/renderer/MultiBufferSource
	a (Lelk;)Lfoe$a; immediate
	a (Ljava/util/Map;Lelk;)Lfoe$a; immediateWithBuffers
foe$a net/minecraft/client/renderer/MultiBufferSource$BufferSource
	a builder
	b fixedBuffers
	c lastState
	d startedBuffers
	a ()V endLastBatch
	a (Lfom;)V endBatch
	b ()V endBatch
	b (Lfom;)Lelk; getBuilderRaw
fof net/minecraft/client/renderer/OutlineBufferSource
	a bufferSource
	b outlineBufferSource
	c teamR
	d teamG
	e teamB
	f teamA
	a ()V endOutlineBatch
	a (IIII)V setColor
fof$a net/minecraft/client/renderer/OutlineBufferSource$EntityOutlineGenerator
	f delegate
	g x
	h y
	i z
	j u
	k v
	a (DDD)Lelt; vertex
	a (FF)Lelt; uv
	a (FFF)Lelt; normal
	a (FFFFFFFFFIIFFF)V vertex
	a (II)Lelt; overlayCoords
	a (IIII)Lelt; color
	b (II)Lelt; uv2
	b (IIII)V defaultColor
	e ()V endVertex
	k ()V unsetDefaultColor
fog net/minecraft/client/renderer/PanoramaRenderer
	a minecraft
	b cubeMap
	c spin
	d bob
	a (FF)V render
	b (FF)F wrap
foh net/minecraft/client/renderer/PostChain
	a MAIN_RENDER_TARGET
	b screenTarget
	c resourceManager
	d name
	e passes
	f customRenderTargets
	g fullSizedTargets
	h shaderOrthoMatrix
	i screenWidth
	j screenHeight
	k time
	l lastStamp
	a ()Ljava/lang/String; getName
	a (F)V process
	a (II)V resize
	a (Lcom/google/gson/JsonElement;)V parseTargetNode
	a (Lfzf;Lcom/google/gson/JsonElement;)V parsePassNode
	a (Lfzf;Lnet/minecraft/resources/MinecraftKey;)V load
	a (Ljava/lang/String;)Lekb; getTempTarget
	a (Ljava/lang/String;II)V addTempTarget
	a (Ljava/lang/String;Lekb;Lekb;)Lfoi; addPass
	b ()V updateOrthoMatrix
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	b (Ljava/lang/String;)Lekb; getRenderTarget
foi net/minecraft/client/renderer/PostPass
	a inTarget
	b outTarget
	c effect
	d auxAssets
	e auxNames
	f auxWidths
	g auxHeights
	h shaderOrthoMatrix
	a ()Ljava/lang/String; getName
	a (F)V process
	a (Ljava/lang/String;Ljava/util/function/IntSupplier;II)V addAuxAsset
	a (Lorg/joml/Matrix4f;)V setOrthoMatrix
	b ()Lfnu; getEffect
foj net/minecraft/client/renderer/Rect2i
	a xPos
	b yPos
	c width
	d height
	a ()I getX
	a (I)V setX
	a (II)V setPosition
	a (Lfoj;)Lfoj; intersect
	b ()I getY
	b (I)V setY
	b (II)Z contains
	c ()I getWidth
	c (I)V setWidth
	d ()I getHeight
	d (I)V setHeight
fok net/minecraft/client/renderer/RenderBuffers
	a fixedBufferPack
	b fixedBuffers
	c bufferSource
	d crumblingBufferSource
	e outlineBufferSource
	a ()Lfop; fixedBufferPack
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Lfom;)V put
	b ()Lfoe$a; bufferSource
	c ()Lfoe$a; crumblingBufferSource
	d ()Lfof; outlineBufferSource
fol net/minecraft/client/renderer/RenderStateShard
	A RENDERTYPE_ITEM_ENTITY_TRANSLUCENT_CULL_SHADER
	B RENDERTYPE_ENTITY_TRANSLUCENT_CULL_SHADER
	C RENDERTYPE_ENTITY_TRANSLUCENT_SHADER
	D RENDERTYPE_ENTITY_TRANSLUCENT_EMISSIVE_SHADER
	E RENDERTYPE_ENTITY_SMOOTH_CUTOUT_SHADER
	F RENDERTYPE_BEACON_BEAM_SHADER
	G RENDERTYPE_ENTITY_DECAL_SHADER
	H RENDERTYPE_ENTITY_NO_OUTLINE_SHADER
	I RENDERTYPE_ENTITY_SHADOW_SHADER
	J RENDERTYPE_ENTITY_ALPHA_SHADER
	K RENDERTYPE_EYES_SHADER
	L RENDERTYPE_ENERGY_SWIRL_SHADER
	M RENDERTYPE_LEASH_SHADER
	N RENDERTYPE_WATER_MASK_SHADER
	O RENDERTYPE_OUTLINE_SHADER
	P RENDERTYPE_ARMOR_GLINT_SHADER
	Q RENDERTYPE_ARMOR_ENTITY_GLINT_SHADER
	R RENDERTYPE_GLINT_TRANSLUCENT_SHADER
	S RENDERTYPE_GLINT_SHADER
	T RENDERTYPE_GLINT_DIRECT_SHADER
	U RENDERTYPE_ENTITY_GLINT_SHADER
	V RENDERTYPE_ENTITY_GLINT_DIRECT_SHADER
	W RENDERTYPE_CRUMBLING_SHADER
	X RENDERTYPE_TEXT_SHADER
	Y RENDERTYPE_TEXT_BACKGROUND_SHADER
	Z RENDERTYPE_TEXT_INTENSITY_SHADER
	a MAX_ENCHANTMENT_GLINT_SPEED_MILLIS
	aA LEQUAL_DEPTH_TEST
	aB GREATER_DEPTH_TEST
	aC COLOR_DEPTH_WRITE
	aD COLOR_WRITE
	aE DEPTH_WRITE
	aF NO_LAYERING
	aG POLYGON_OFFSET_LAYERING
	aH VIEW_OFFSET_Z_LAYERING
	aI MAIN_TARGET
	aJ OUTLINE_TARGET
	aK TRANSLUCENT_TARGET
	aL PARTICLES_TARGET
	aM WEATHER_TARGET
	aN CLOUDS_TARGET
	aO ITEM_ENTITY_TARGET
	aP DEFAULT_LINE
	aQ NO_COLOR_LOGIC
	aR OR_REVERSE_COLOR_LOGIC
	aS VIEW_SCALE_Z_EPSILON
	aT setupState
	aU clearState
	aa RENDERTYPE_TEXT_SEE_THROUGH_SHADER
	ab RENDERTYPE_TEXT_BACKGROUND_SEE_THROUGH_SHADER
	ac RENDERTYPE_TEXT_INTENSITY_SEE_THROUGH_SHADER
	ad RENDERTYPE_LIGHTNING_SHADER
	ae RENDERTYPE_TRIPWIRE_SHADER
	af RENDERTYPE_END_PORTAL_SHADER
	ag RENDERTYPE_END_GATEWAY_SHADER
	ah RENDERTYPE_LINES_SHADER
	ai RENDERTYPE_GUI_SHADER
	aj RENDERTYPE_GUI_OVERLAY_SHADER
	ak RENDERTYPE_GUI_TEXT_HIGHLIGHT_SHADER
	al RENDERTYPE_GUI_GHOST_RECIPE_OVERLAY_SHADER
	am BLOCK_SHEET_MIPPED
	an BLOCK_SHEET
	ao NO_TEXTURE
	ap DEFAULT_TEXTURING
	aq GLINT_TEXTURING
	ar ENTITY_GLINT_TEXTURING
	as LIGHTMAP
	at NO_LIGHTMAP
	au OVERLAY
	av NO_OVERLAY
	aw CULL
	ax NO_CULL
	ay NO_DEPTH_TEST
	az EQUAL_DEPTH_TEST
	b name
	c NO_TRANSPARENCY
	d ADDITIVE_TRANSPARENCY
	e LIGHTNING_TRANSPARENCY
	f GLINT_TRANSPARENCY
	g CRUMBLING_TRANSPARENCY
	h TRANSLUCENT_TRANSPARENCY
	i NO_SHADER
	j POSITION_COLOR_LIGHTMAP_SHADER
	k POSITION_SHADER
	l POSITION_COLOR_TEX_SHADER
	m POSITION_TEX_SHADER
	n POSITION_COLOR_TEX_LIGHTMAP_SHADER
	o POSITION_COLOR_SHADER
	p RENDERTYPE_SOLID_SHADER
	q RENDERTYPE_CUTOUT_MIPPED_SHADER
	r RENDERTYPE_CUTOUT_SHADER
	s RENDERTYPE_TRANSLUCENT_SHADER
	t RENDERTYPE_TRANSLUCENT_MOVING_BLOCK_SHADER
	u RENDERTYPE_TRANSLUCENT_NO_CRUMBLING_SHADER
	v RENDERTYPE_ARMOR_CUTOUT_NO_CULL_SHADER
	w RENDERTYPE_ENTITY_SOLID_SHADER
	x RENDERTYPE_ENTITY_CUTOUT_SHADER
	y RENDERTYPE_ENTITY_CUTOUT_NO_CULL_SHADER
	z RENDERTYPE_ENTITY_CUTOUT_NO_CULL_Z_OFFSET_SHADER
	a ()V setupRenderState
	a (F)V setupGlintTexturing
	b ()V clearRenderState
fol$a net/minecraft/client/renderer/RenderStateShard$BooleanStateShard
	aS enabled
fol$b net/minecraft/client/renderer/RenderStateShard$ColorLogicStateShard
fol$c net/minecraft/client/renderer/RenderStateShard$CullStateShard
fol$d net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard
	aS functionName
fol$e net/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard
	c ()Ljava/util/Optional; cutoutTexture
fol$f net/minecraft/client/renderer/RenderStateShard$LayeringStateShard
fol$g net/minecraft/client/renderer/RenderStateShard$LightmapStateShard
fol$h net/minecraft/client/renderer/RenderStateShard$LineStateShard
	aS width
fol$i net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard
	aS cutoutTexture
	c ()Ljava/util/Optional; cutoutTexture
	d ()Lfol$i$a; builder
fol$i$a net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder
	a builder
	a ()Lfol$i; build
	a (Lnet/minecraft/resources/MinecraftKey;ZZ)Lfol$i$a; add
fol$j net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard
fol$k net/minecraft/client/renderer/RenderStateShard$OutputStateShard
fol$l net/minecraft/client/renderer/RenderStateShard$OverlayStateShard
fol$m net/minecraft/client/renderer/RenderStateShard$ShaderStateShard
	aS shader
fol$n net/minecraft/client/renderer/RenderStateShard$TextureStateShard
	aS texture
	aT blur
	aU mipmap
	c ()Ljava/util/Optional; cutoutTexture
fol$o net/minecraft/client/renderer/RenderStateShard$TexturingStateShard
fol$p net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard
fol$q net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard
	aS writeColor
	aT writeDepth
fom net/minecraft/client/renderer/RenderType
	aS BIG_BUFFER_SIZE
	aT MEDIUM_BUFFER_SIZE
	aU SMALL_BUFFER_SIZE
	aV TRANSIENT_BUFFER_SIZE
	aW LINES
	aX LINE_STRIP
	aY BYTES_IN_INT
	aZ MEGABYTE
	bA GLINT_TRANSLUCENT
	bB GLINT
	bC GLINT_DIRECT
	bD ENTITY_GLINT
	bE ENTITY_GLINT_DIRECT
	bF CRUMBLING
	bG TEXT
	bH TEXT_BACKGROUND
	bI TEXT_INTENSITY
	bJ TEXT_POLYGON_OFFSET
	bK TEXT_INTENSITY_POLYGON_OFFSET
	bL TEXT_SEE_THROUGH
	bM TEXT_BACKGROUND_SEE_THROUGH
	bN TEXT_INTENSITY_SEE_THROUGH
	bO LIGHTNING
	bP TRIPWIRE
	bQ END_PORTAL
	bR END_GATEWAY
	bS DEBUG_LINE_STRIP
	bT DEBUG_FILLED_BOX
	bU DEBUG_QUADS
	bV DEBUG_SECTION_QUADS
	bW GUI
	bX GUI_OVERLAY
	bY GUI_TEXT_HIGHLIGHT
	bZ GUI_GHOST_RECIPE_OVERLAY
	ba SOLID
	bb CUTOUT_MIPPED
	bc CUTOUT
	bd TRANSLUCENT
	be TRANSLUCENT_MOVING_BLOCK
	bf TRANSLUCENT_NO_CRUMBLING
	bg ARMOR_CUTOUT_NO_CULL
	bh ENTITY_SOLID
	bi ENTITY_CUTOUT
	bj ENTITY_CUTOUT_NO_CULL
	bk ENTITY_CUTOUT_NO_CULL_Z_OFFSET
	bl ITEM_ENTITY_TRANSLUCENT_CULL
	bm ENTITY_TRANSLUCENT_CULL
	bn ENTITY_TRANSLUCENT
	bo ENTITY_TRANSLUCENT_EMISSIVE
	bp ENTITY_SMOOTH_CUTOUT
	bq BEACON_BEAM
	br ENTITY_DECAL
	bs ENTITY_NO_OUTLINE
	bt ENTITY_SHADOW
	bu DRAGON_EXPLOSION_ALPHA
	bv EYES
	bw LEASH
	bx WATER_MASK
	by ARMOR_GLINT
	bz ARMOR_ENTITY_GLINT
	ca CHUNK_BUFFER_LAYERS
	cb format
	cc mode
	cd bufferSize
	ce affectsCrumbling
	cf sortOnUpload
	cg asOptional
	A ()Lfom; debugQuads
	B ()Lfom; debugSectionQuads
	C ()Lfom; gui
	D ()Lfom; guiOverlay
	E ()Lfom; guiTextHighlight
	F ()Lfom; guiGhostRecipeOverlay
	G ()Ljava/util/List; chunkBufferLayers
	H ()I bufferSize
	I ()Lelu; format
	J ()Lelu$b; mode
	K ()Ljava/util/Optional; outline
	L ()Z isOutline
	M ()Z affectsCrumbling
	N ()Z canConsolidateConsecutiveGeometry
	O ()Ljava/util/Optional; asOptional
	P ()Lfom$b; translucentMovingBlockState
	Q ()Lfom$b; tripwireState
	a (D)Lfom; debugLineStrip
	a (Lelk;Lelx;)V end
	a (Lfol$m;)Lfom$b; translucentState
	a (Ljava/lang/String;Lelu;Lelu$b;ILfom$b;)Lfom$a; create
	a (Ljava/lang/String;Lelu;Lelu$b;IZZLfom$b;)Lfom$a; create
	a (Ljava/lang/String;Lnet/minecraft/resources/MinecraftKey;Z)Lfom$a; createArmorCutoutNoCull
	a (Lnet/minecraft/resources/MinecraftKey;)Lfom; armorCutoutNoCull
	a (Lnet/minecraft/resources/MinecraftKey;FF)Lfom; energySwirl
	a (Lnet/minecraft/resources/MinecraftKey;Z)Lfom; entityCutoutNoCull
	b (Lnet/minecraft/resources/MinecraftKey;)Lfom; createArmorDecalCutoutNoCull
	b (Lnet/minecraft/resources/MinecraftKey;Z)Lfom; entityCutoutNoCullZOffset
	c ()Lfom; solid
	c (Lnet/minecraft/resources/MinecraftKey;)Lfom; entitySolid
	c (Lnet/minecraft/resources/MinecraftKey;Z)Lfom; entityTranslucent
	d ()Lfom; cutoutMipped
	d (Lnet/minecraft/resources/MinecraftKey;)Lfom; entityCutout
	d (Lnet/minecraft/resources/MinecraftKey;Z)Lfom; entityTranslucentEmissive
	e ()Lfom; cutout
	e (Lnet/minecraft/resources/MinecraftKey;)Lfom; entityCutoutNoCull
	e (Lnet/minecraft/resources/MinecraftKey;Z)Lfom; beaconBeam
	f ()Lfom; translucent
	f (Lnet/minecraft/resources/MinecraftKey;)Lfom; entityCutoutNoCullZOffset
	g ()Lfom; translucentMovingBlock
	g (Lnet/minecraft/resources/MinecraftKey;)Lfom; itemEntityTranslucentCull
	h ()Lfom; translucentNoCrumbling
	h (Lnet/minecraft/resources/MinecraftKey;)Lfom; entityTranslucentCull
	i ()Lfom; leash
	i (Lnet/minecraft/resources/MinecraftKey;)Lfom; entityTranslucent
	j ()Lfom; waterMask
	j (Lnet/minecraft/resources/MinecraftKey;)Lfom; entityTranslucentEmissive
	k ()Lfom; armorGlint
	k (Lnet/minecraft/resources/MinecraftKey;)Lfom; entitySmoothCutout
	l ()Lfom; armorEntityGlint
	l (Lnet/minecraft/resources/MinecraftKey;)Lfom; entityDecal
	m ()Lfom; glintTranslucent
	m (Lnet/minecraft/resources/MinecraftKey;)Lfom; entityNoOutline
	n ()Lfom; glint
	n (Lnet/minecraft/resources/MinecraftKey;)Lfom; entityShadow
	o ()Lfom; glintDirect
	o (Lnet/minecraft/resources/MinecraftKey;)Lfom; dragonExplosionAlpha
	p ()Lfom; entityGlint
	p (Lnet/minecraft/resources/MinecraftKey;)Lfom; eyes
	q ()Lfom; entityGlintDirect
	q (Lnet/minecraft/resources/MinecraftKey;)Lfom; outline
	r ()Lfom; textBackground
	r (Lnet/minecraft/resources/MinecraftKey;)Lfom; crumbling
	s ()Lfom; textBackgroundSeeThrough
	s (Lnet/minecraft/resources/MinecraftKey;)Lfom; text
	t ()Lfom; lightning
	t (Lnet/minecraft/resources/MinecraftKey;)Lfom; textIntensity
	u ()Lfom; tripwire
	u (Lnet/minecraft/resources/MinecraftKey;)Lfom; textPolygonOffset
	v ()Lfom; endPortal
	v (Lnet/minecraft/resources/MinecraftKey;)Lfom; textIntensityPolygonOffset
	w ()Lfom; endGateway
	w (Lnet/minecraft/resources/MinecraftKey;)Lfom; textSeeThrough
	x ()Lfom; lines
	x (Lnet/minecraft/resources/MinecraftKey;)Lfom; textIntensitySeeThrough
	y ()Lfom; lineStrip
	z ()Lfom; debugFilledBox
fom$a net/minecraft/client/renderer/RenderType$CompositeRenderType
	aY OUTLINE
	aZ state
	ba outline
	bb isOutline
	K ()Ljava/util/Optional; outline
	L ()Z isOutline
	P ()Lfom$b; state
fom$b net/minecraft/client/renderer/RenderType$CompositeState
	a textureState
	b shaderState
	c transparencyState
	d depthTestState
	e cullState
	f lightmapState
	g overlayState
	h layeringState
	i outputState
	j texturingState
	k writeMaskState
	l lineState
	m colorLogicState
	n outlineProperty
	o states
	a ()Lfom$b$a; builder
fom$b$a net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder
	a textureState
	b shaderState
	c transparencyState
	d depthTestState
	e cullState
	f lightmapState
	g overlayState
	h layeringState
	i outputState
	j texturingState
	k writeMaskState
	l lineState
	m colorLogicState
	a (Lfol$b;)Lfom$b$a; setColorLogicState
	a (Lfol$c;)Lfom$b$a; setCullState
	a (Lfol$d;)Lfom$b$a; setDepthTestState
	a (Lfol$e;)Lfom$b$a; setTextureState
	a (Lfol$f;)Lfom$b$a; setLayeringState
	a (Lfol$g;)Lfom$b$a; setLightmapState
	a (Lfol$h;)Lfom$b$a; setLineState
	a (Lfol$k;)Lfom$b$a; setOutputState
	a (Lfol$l;)Lfom$b$a; setOverlayState
	a (Lfol$m;)Lfom$b$a; setShaderState
	a (Lfol$o;)Lfom$b$a; setTexturingState
	a (Lfol$p;)Lfom$b$a; setTransparencyState
	a (Lfol$q;)Lfom$b$a; setWriteMaskState
	a (Lfom$c;)Lfom$b; createCompositeState
	a (Z)Lfom$b; createCompositeState
fom$c net/minecraft/client/renderer/RenderType$OutlineProperty
	a NONE
	b IS_OUTLINE
	c AFFECTS_OUTLINE
	d name
	e $VALUES
	a ()[Lfom$c; $values
fon net/minecraft/client/renderer/RunningTrimmedMean
	a values
	b count
	c cursor
	a (J)J registerValueAndGetMean
foo net/minecraft/client/renderer/ScreenEffectRenderer
	a UNDERWATER_LOCATION
	a (Leqv;Lelp;)V renderScreenEffect
	a (Lfze;Lelp;)V renderTex
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/level/block/state/IBlockData; getViewBlockingState
	b (Leqv;Lelp;)V renderWater
	c (Leqv;Lelp;)V renderFire
fop net/minecraft/client/renderer/SectionBufferBuilderPack
	a builders
	a ()V clearAll
	a (Lfom;)Lelk; builder
	b ()V discardAll
foq net/minecraft/client/renderer/SectionOcclusionGraph
	a LOGGER
	b DIRECTIONS
	c MINIMUM_ADVANCED_CULLING_DISTANCE
	d CEILED_SECTION_DIAGONAL
	e needsFullUpdate
	f fullUpdateTask
	g viewArea
	h currentGraph
	i nextGraphEvents
	j needsFrustumUpdate
	a ()V invalidate
	a (Leqg;Ljava/util/Queue;)V initializeQueueForFullUpdate
	a (Lfoq$a;Lnet/minecraft/world/level/ChunkCoordIntPair;)V addNeighbors
	a (Lfoq$b;)V queueSectionsWithNewNeighbors
	a (Lfoq$c;Lnet/minecraft/world/phys/Vec3D;Ljava/util/Queue;ZLjava/util/function/Consumer;)V runUpdates
	a (Lfov;)V waitAndReset
	a (Lfrc$b;)V onSectionCompiled
	a (Lfrg;Ljava/util/List;)V addSectionsInFrustum
	a (Lnet/minecraft/core/BlockPosition;Lfrc$b;Lnet/minecraft/core/EnumDirection;)Lfrc$b; getRelativeFrom
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Z isInViewDistance
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V onChunkLoaded
	a (ZLeqg;Lfrg;Ljava/util/List;)V update
	a (ZLeqg;Lnet/minecraft/world/phys/Vec3D;)V scheduleFullUpdate
	a (ZLfrg;Ljava/util/List;Lnet/minecraft/world/phys/Vec3D;)V runPartialUpdate
	b ()Z consumeFrustumUpdate
	b (Lfrc$b;)Lfoq$d; getNode
foq$a net/minecraft/client/renderer/SectionOcclusionGraph$GraphEvents
	a chunksWhichReceivedNeighbors
	b sectionsToPropagateFrom
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; chunksWhichReceivedNeighbors
	b ()Ljava/util/concurrent/BlockingQueue; sectionsToPropagateFrom
foq$b net/minecraft/client/renderer/SectionOcclusionGraph$GraphState
	a storage
	b events
	a ()Lfoq$c; storage
	b ()Lfoq$a; events
foq$c net/minecraft/client/renderer/SectionOcclusionGraph$GraphStorage
	a sectionToNodeMap
	b renderSections
	c chunksWaitingForNeighbors
foq$d net/minecraft/client/renderer/SectionOcclusionGraph$Node
	a section
	b step
	c sourceDirections
	d directions
	a ()Z hasSourceDirections
	a (BLnet/minecraft/core/EnumDirection;)V setDirections
	a (I)Z hasSourceDirection
	a (Lnet/minecraft/core/EnumDirection;)Z hasDirection
	b (Lnet/minecraft/core/EnumDirection;)V addSourceDirection
foq$e net/minecraft/client/renderer/SectionOcclusionGraph$SectionToNodeMap
	a nodes
	a (Lfrc$b;)Lfoq$d; get
	a (Lfrc$b;Lfoq$d;)V put
fos net/minecraft/client/renderer/ShaderInstance
	A samplerLocations
	B uniforms
	C uniformLocations
	D uniformMap
	E programId
	F name
	G dirty
	H blend
	I attributes
	J attributeNames
	K vertexProgram
	L fragmentProgram
	M vertexFormat
	a SHADER_PATH
	b MODEL_VIEW_MATRIX
	c PROJECTION_MATRIX
	d INVERSE_VIEW_ROTATION_MATRIX
	e TEXTURE_MATRIX
	f SCREEN_SIZE
	g COLOR_MODULATOR
	h LIGHT0_DIRECTION
	i LIGHT1_DIRECTION
	j GLINT_ALPHA
	k FOG_START
	l FOG_END
	m FOG_COLOR
	n FOG_SHAPE
	o LINE_WIDTH
	p GAME_TIME
	q CHUNK_OFFSET
	r SHADER_CORE_PATH
	s SHADER_INCLUDE_PATH
	t LOGGER
	u DUMMY_UNIFORM
	v ALWAYS_REAPPLY
	w lastAppliedShader
	x lastProgramId
	y samplerMap
	z samplerNames
	a ()I getId
	a (Lcom/google/gson/JsonElement;)V parseSamplerNode
	a (Lcom/google/gson/JsonObject;)Lekz; parseBlendNode
	a (Ljava/lang/String;)Lelg; getUniform
	a (Ljava/lang/String;Ljava/lang/Object;)V setSampler
	a (Lnet/minecraft/server/packs/resources/ResourceProvider;Leld$a;Ljava/lang/String;)Leld; getOrCreate
	b ()V markDirty
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	b (Ljava/lang/String;)Leky; safeGetUniform
	c ()Leld; getVertexProgram
	d ()Leld; getFragmentProgram
	e ()V attachToProgram
	f ()V clear
	g ()V apply
	h ()Lelu; getVertexFormat
	i ()Ljava/lang/String; getName
	j ()V updateLocations
fot net/minecraft/client/renderer/Sheets
	A SHULKER_BOX_SHEET_TYPE
	B BED_SHEET_TYPE
	C BANNER_SHEET_TYPE
	D SHIELD_SHEET_TYPE
	E SIGN_SHEET_TYPE
	F CHEST_SHEET_TYPE
	G ARMOR_TRIMS_SHEET_TYPE
	H ARMOR_TRIMS_DECAL_SHEET_TYPE
	I SOLID_BLOCK_SHEET
	J CUTOUT_BLOCK_SHEET
	K TRANSLUCENT_ITEM_CULL_BLOCK_SHEET
	L TRANSLUCENT_CULL_BLOCK_SHEET
	a SHULKER_SHEET
	b BED_SHEET
	c BANNER_SHEET
	d SHIELD_SHEET
	e SIGN_SHEET
	f CHEST_SHEET
	g ARMOR_TRIMS_SHEET
	h DECORATED_POT_SHEET
	i DEFAULT_SHULKER_TEXTURE_LOCATION
	j SHULKER_TEXTURE_LOCATION
	k SIGN_MATERIALS
	l HANGING_SIGN_MATERIALS
	m BANNER_MATERIALS
	n SHIELD_MATERIALS
	o DECORATED_POT_MATERIALS
	p BED_TEXTURES
	q CHEST_TRAP_LOCATION
	r CHEST_TRAP_LOCATION_LEFT
	s CHEST_TRAP_LOCATION_RIGHT
	t CHEST_XMAS_LOCATION
	u CHEST_XMAS_LOCATION_LEFT
	v CHEST_XMAS_LOCATION_RIGHT
	w CHEST_LOCATION
	x CHEST_LOCATION_LEFT
	y CHEST_LOCATION_RIGHT
	z ENDER_CHEST_LOCATION
	a ()Lfom; bannerSheet
	a (Ljava/lang/String;)Lgbi; chestMaterial
	a (Ljava/util/function/Consumer;)V getAllMaterials
	a (Lnet/minecraft/resources/ResourceKey;)Lgbi; getBannerMaterial
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/level/block/state/properties/BlockPropertyChestType;Z)Lgbi; chooseMaterial
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyChestType;Lgbi;Lgbi;Lgbi;)Lgbi; chooseMaterial
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lgbi; getSignMaterial
	a (Z)Lfom; armorTrimsSheet
	b ()Lfom; shieldSheet
	b (Lnet/minecraft/resources/ResourceKey;)Lgbi; getShieldMaterial
	b (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lgbi; getHangingSignMaterial
	c ()Lfom; bedSheet
	c (Lnet/minecraft/resources/ResourceKey;)Lgbi; getDecoratedPotMaterial
	c (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lgbi; createSignMaterial
	d ()Lfom; shulkerBoxSheet
	d (Lnet/minecraft/resources/ResourceKey;)Lgbi; createBannerMaterial
	d (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lgbi; createHangingSignMaterial
	e ()Lfom; signSheet
	e (Lnet/minecraft/resources/ResourceKey;)Lgbi; createShieldMaterial
	f ()Lfom; hangingSignSheet
	f (Lnet/minecraft/resources/ResourceKey;)Lgbi; createDecoratedPotMaterial
	g ()Lfom; chestSheet
	h ()Lfom; solidBlockSheet
	i ()Lfom; cutoutBlockSheet
	j ()Lfom; translucentItemSheet
	k ()Lfom; translucentCullBlockSheet
fou net/minecraft/client/renderer/SpriteCoordinateExpander
	a delegate
	b sprite
	a (DDD)Lelt; vertex
	a (FF)Lelt; uv
	a (FFF)Lelt; normal
	a (FFFFFFFFFIIFFF)V vertex
	a (II)Lelt; overlayCoords
	a (IIII)Lelt; color
	b (II)Lelt; uv2
	b (IIII)V defaultColor
	e ()V endVertex
	k ()V unsetDefaultColor
fov net/minecraft/client/renderer/ViewArea
	a levelRenderer
	b level
	c sectionGridSizeY
	d sectionGridSizeX
	e sectionGridSizeZ
	f sections
	g viewDistance
	a ()V releaseAllBuffers
	a (DD)V repositionCamera
	a (I)V setViewDistance
	a (III)I getSectionIndex
	a (IIIZ)V setDirty
	a (Lfrc;)V createSections
	a (Lnet/minecraft/core/BlockPosition;)Lfrc$b; getRenderSectionAt
	b ()I getViewDistance
	c ()Lnet/minecraft/world/level/LevelHeightAccessor; getLevelHeightAccessor
fow net/minecraft/client/renderer/VirtualScreen
	a minecraft
	b screenManager
	a (Lekg;Ljava/lang/String;Ljava/lang/String;)Lekt; newWindow
fox net/minecraft/client/renderer/block/BlockModelShaper
	a modelByStateCache
	b modelManager
	a ()Lgbl; getModelManager
	a (Ljava/util/Map;)V replaceCache
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/level/block/state/IBlockData;)Lgbm; stateToModelLocation
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lfze; getParticleIcon
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getValue
	b (Ljava/util/Map;)Ljava/lang/String; statePropertiesToString
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Lgbf; getBlockModel
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Lgbm; stateToModelLocation
foy net/minecraft/client/renderer/block/BlockRenderDispatcher
	a blockModelShaper
	b modelRenderer
	c blockEntityRenderer
	d liquidBlockRenderer
	e random
	f blockColors
	a ()Lfox; getBlockModelShaper
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IBlockLightAccess;Lelt;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)V renderLiquid
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lgbf; getBlockModel
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lelp;Lfoe;II)V renderSingleBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IBlockLightAccess;Lelp;Lelt;)V renderBreakingTexture
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IBlockLightAccess;Lelp;Lelt;ZLnet/minecraft/util/RandomSource;)V renderBatched
	b ()Lfpa; getModelRenderer
foz net/minecraft/client/renderer/block/LiquidBlockRenderer
	a MAX_FLUID_HEIGHT
	b lavaIcons
	c waterIcons
	d waterOverlay
	a ()V setupSprites
	a (Lelt;DDDFFFFFI)V vertex
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;FLnet/minecraft/world/level/block/state/IBlockData;)Z isFaceOccludedByNeighbor
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z isFaceOccludedBySelf
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/EnumDirection;FLnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isFaceOccludedByState
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)I getLightColor
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;Lelt;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)V tesselate
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/material/Fluid;)Z shouldRenderFace
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/material/FluidType;FFFLnet/minecraft/core/BlockPosition;)F calculateAverageHeight
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/BlockPosition;)F getHeight
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)F getHeight
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/material/Fluid;)Z isNeighborSameFluid
	a ([FF)V addWeightedHeight
fpa net/minecraft/client/renderer/block/ModelBlockRenderer
	a FACE_CUBIC
	b FACE_PARTIAL
	c DIRECTIONS
	d blockColors
	e CACHE_SIZE
	f CACHE
	a ()V enableCaching
	a (Lelp$a;Lelt;FFFLjava/util/List;II)V renderQuadList
	a (Lelp$a;Lelt;Lnet/minecraft/world/level/block/state/IBlockData;Lgbf;FFFII)V renderModel
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lgbf;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lelp;Lelt;ZLnet/minecraft/util/RandomSource;JI)V tesselateBlock
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;IIZLelp;Lelt;Ljava/util/List;Ljava/util/BitSet;)V renderModelFaceFlat
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lelp;Lelt;Ljava/util/List;[FLjava/util/BitSet;Lfpa$b;I)V renderModelFaceAO
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lelt;Lelp$a;Lfpb;FFFFIIIII)V putQuadData
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;[ILnet/minecraft/core/EnumDirection;[FLjava/util/BitSet;)V calculateShape
	b ()V clearCache
	b (Lnet/minecraft/world/level/IBlockLightAccess;Lgbf;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lelp;Lelt;ZLnet/minecraft/util/RandomSource;JI)V tesselateWithAO
	c (Lnet/minecraft/world/level/IBlockLightAccess;Lgbf;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lelp;Lelt;ZLnet/minecraft/util/RandomSource;JI)V tesselateWithoutAO
fpa$a net/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g corners
	h doNonCubicWeight
	i vert0Weights
	j vert1Weights
	k vert2Weights
	l vert3Weights
	m BY_FACING
	n $VALUES
	a ()[Lfpa$a; $values
	a (Lnet/minecraft/core/EnumDirection;)Lfpa$a; fromFacing
fpa$b net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace
	a brightness
	b lightmap
	a (IIII)I blend
	a (IIIIFFFF)I blend
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;[FLjava/util/BitSet;Z)V calculate
fpa$c net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g vert0
	h vert1
	i vert2
	j vert3
	k BY_FACING
	l $VALUES
	a ()[Lfpa$c; $values
	a (Lnet/minecraft/core/EnumDirection;)Lfpa$c; fromFacing
fpa$d net/minecraft/client/renderer/block/ModelBlockRenderer$Cache
	a enabled
	b colorCache
	c brightnessCache
	a ()V enable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)I getLightColor
	b ()V disable
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
fpa$e net/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g FLIP_DOWN
	h FLIP_UP
	i FLIP_NORTH
	j FLIP_SOUTH
	k FLIP_WEST
	l FLIP_EAST
	m shape
	n $VALUES
	a ()[Lfpa$e; $values
fpb net/minecraft/client/renderer/block/model/BakedQuad
	a vertices
	b tintIndex
	c direction
	d sprite
	e shade
	a ()Lfze; getSprite
	b ()[I getVertices
	c ()Z isTinted
	d ()I getTintIndex
	e ()Lnet/minecraft/core/EnumDirection; getDirection
	f ()Z isShade
fpc net/minecraft/client/renderer/block/model/BlockElement
	a from
	b to
	c faces
	d rotation
	e shade
	f DEFAULT_RESCALE
	g MIN_EXTENT
	h MAX_EXTENT
	a ()V fillUvs
	a (Lnet/minecraft/core/EnumDirection;)[F uvsByFace
fpc$a net/minecraft/client/renderer/block/model/BlockElement$Deserializer
	a DEFAULT_SHADE
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; getFaces
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfpc; deserialize
	a (Lcom/google/gson/JsonObject;)Lfpe; getRotation
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lorg/joml/Vector3f; getVector3f
	a (Ljava/lang/String;)Lnet/minecraft/core/EnumDirection; getFacing
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; filterNullFromFaces
	b (Lcom/google/gson/JsonObject;)F getAngle
	c (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/EnumDirection$EnumAxis; getAxis
	d (Lcom/google/gson/JsonObject;)Lorg/joml/Vector3f; getTo
	e (Lcom/google/gson/JsonObject;)Lorg/joml/Vector3f; getFrom
fpd net/minecraft/client/renderer/block/model/BlockElementFace
	a NO_TINT
	b cullForDirection
	c tintIndex
	d texture
	e uv
fpd$a net/minecraft/client/renderer/block/model/BlockElementFace$Deserializer
	a DEFAULT_TINT_INDEX
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfpd; deserialize
	a (Lcom/google/gson/JsonObject;)I getTintIndex
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; getTexture
	c (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/EnumDirection; getCullFacing
fpe net/minecraft/client/renderer/block/model/BlockElementRotation
	a origin
	b axis
	c angle
	d rescale
	a ()Lorg/joml/Vector3f; origin
	b ()Lnet/minecraft/core/EnumDirection$EnumAxis; axis
	c ()F angle
	d ()Z rescale
fpf net/minecraft/client/renderer/block/model/BlockFaceUV
	a uvs
	b rotation
	a (I)F getU
	a ([F)V setMissingUv
	b (I)F getV
	c (I)I getReverseIndex
	d (I)I getShiftedIndex
fpf$a net/minecraft/client/renderer/block/model/BlockFaceUV$Deserializer
	a DEFAULT_ROTATION
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfpf; deserialize
	a (Lcom/google/gson/JsonObject;)I getRotation
	b (Lcom/google/gson/JsonObject;)[F getUVs
fpg net/minecraft/client/renderer/block/model/BlockModel
	a GSON
	b PARTICLE_TEXTURE_REFERENCE
	c name
	d textureMap
	e parent
	f parentLocation
	g LOGGER
	h FACE_BAKERY
	i REFERENCE_CHAR
	j DEFAULT_AMBIENT_OCCLUSION
	k elements
	l guiLight
	m hasAmbientOcclusion
	n transforms
	o overrides
	a ()Ljava/util/List; getElements
	a (Lfpc;Lfpd;Lfze;Lnet/minecraft/core/EnumDirection;Lgbn;Lnet/minecraft/resources/MinecraftKey;)Lfpb; bakeFace
	a (Lgbj;Lfpg;)Lfpl; getItemOverrides
	a (Lgbj;Lfpg;Ljava/util/function/Function;Lgbn;Lnet/minecraft/resources/MinecraftKey;Z)Lgbf; bake
	a (Lgbj;Ljava/util/function/Function;Lgbn;Lnet/minecraft/resources/MinecraftKey;)Lgbf; bake
	a (Ljava/io/Reader;)Lfpg; fromStream
	a (Ljava/lang/String;)Lfpg; fromString
	a (Ljava/util/function/Function;)V resolveParents
	a (Lnet/minecraft/world/item/ItemDisplayContext;)Lfpm; getTransform
	b ()Z hasAmbientOcclusion
	b (Ljava/lang/String;)Z hasTexture
	c ()Lfpg$b; getGuiLight
	c (Ljava/lang/String;)Lgbi; getMaterial
	d ()Z isResolved
	d (Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; findTextureEntry
	e ()Ljava/util/List; getOverrides
	e (Ljava/lang/String;)Z isTextureReference
	f ()Ljava/util/Collection; getDependencies
	g ()Lfpg; getRootModel
	h ()Lfpn; getTransforms
fpg$a net/minecraft/client/renderer/block/model/BlockModel$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; getOverrides
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfpg; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Boolean; getAmbientOcclusion
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; parseTextureLocationOrReference
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; getElements
	b (Lcom/google/gson/JsonObject;)Ljava/util/Map; getTextureMap
	c (Lcom/google/gson/JsonObject;)Ljava/lang/String; getParentName
fpg$b net/minecraft/client/renderer/block/model/BlockModel$GuiLight
	a FRONT
	b SIDE
	c name
	d $VALUES
	a ()Z lightLikeBlock
	a (Ljava/lang/String;)Lfpg$b; getByName
	b ()[Lfpg$b; $values
fpg$c net/minecraft/client/renderer/block/model/BlockModel$LoopException
fph net/minecraft/client/renderer/block/model/BlockModelDefinition
	a variants
	b multiPart
	a ()Ljava/util/Map; getVariants
	a (Lfph$a;Lcom/google/gson/JsonElement;)Lfph; fromJsonElement
	a (Lfph$a;Ljava/io/Reader;)Lfph; fromStream
	a (Ljava/lang/String;)Z hasVariant
	b ()Ljava/util/Set; getMultiVariants
	b (Ljava/lang/String;)Lfpo; getVariant
	c ()Z isMultiPart
	d ()Lfpt; getMultiPart
fph$a net/minecraft/client/renderer/block/model/BlockModelDefinition$Context
	a gson
	b definition
	a ()Lnet/minecraft/world/level/block/state/BlockStateList; getDefinition
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)V setDefinition
fph$b net/minecraft/client/renderer/block/model/BlockModelDefinition$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; getVariants
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfph; deserialize
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Lfpt; getMultiPart
fph$c net/minecraft/client/renderer/block/model/BlockModelDefinition$MissingVariantException
fpi net/minecraft/client/renderer/block/model/FaceBakery
	a VERTEX_INT_SIZE
	b VERTEX_COUNT
	c UV_INDEX
	d RESCALE_22_5
	e RESCALE_45
	f COLOR_INDEX
	a (Lfpf;Lfze;Lnet/minecraft/core/EnumDirection;[FLcom/mojang/math/Transformation;Lfpe;Z)[I makeVertices
	a (Lfpf;Lnet/minecraft/core/EnumDirection;Lcom/mojang/math/Transformation;Lnet/minecraft/resources/MinecraftKey;)Lfpf; recomputeUVs
	a (Lorg/joml/Vector3f;Lcom/mojang/math/Transformation;)V applyModelRotation
	a (Lorg/joml/Vector3f;Lfpe;)V applyElementRotation
	a (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)[F setupShape
	a (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lfpd;Lfze;Lnet/minecraft/core/EnumDirection;Lgbn;Lfpe;ZLnet/minecraft/resources/MinecraftKey;)Lfpb; bakeQuad
	a (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lorg/joml/Matrix4f;Lorg/joml/Vector3f;)V rotateVertexBy
	a ([I)Lnet/minecraft/core/EnumDirection; calculateFacing
	a ([IILnet/minecraft/core/EnumDirection;Lfpf;[FLfze;Lcom/mojang/math/Transformation;Lfpe;Z)V bakeVertex
	a ([IILorg/joml/Vector3f;Lfze;Lfpf;)V fillVertex
	a ([ILnet/minecraft/core/EnumDirection;)V recalculateWinding
fpj net/minecraft/client/renderer/block/model/ItemModelGenerator
	a LAYERS
	b MIN_Z
	c MAX_Z
	a (ILjava/lang/String;Lfyy;)Ljava/util/List; processFrames
	a (Lfpj$b;Ljava/util/List;Lfyy;IIIIIZ)V checkTransition
	a (Lfyy;)Ljava/util/List; getSpans
	a (Lfyy;IIIII)Z isTransparent
	a (Lfyy;Ljava/lang/String;I)Ljava/util/List; createSideElements
	a (Ljava/util/List;Lfpj$b;II)V createOrExpandSpan
	a (Ljava/util/function/Function;Lfpg;)Lfpg; generateBlockModel
fpj$a net/minecraft/client/renderer/block/model/ItemModelGenerator$Span
	a facing
	b min
	c max
	d anchor
	a ()Lfpj$b; getFacing
	a (I)V expand
	b ()I getMin
	c ()I getMax
	d ()I getAnchor
fpj$b net/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing
	a UP
	b DOWN
	c LEFT
	d RIGHT
	e direction
	f xOffset
	g yOffset
	h $VALUES
	a ()Lnet/minecraft/core/EnumDirection; getDirection
	b ()I getXOffset
	c ()I getYOffset
	d ()Z isHorizontal
	e ()[Lfpj$b; $values
fpk net/minecraft/client/renderer/block/model/ItemOverride
	a model
	b predicates
	a ()Lnet/minecraft/resources/MinecraftKey; getModel
	b ()Ljava/util/stream/Stream; getPredicates
fpk$a net/minecraft/client/renderer/block/model/ItemOverride$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfpk; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/util/List; getPredicates
fpk$b net/minecraft/client/renderer/block/model/ItemOverride$Predicate
	a property
	b value
	a ()Lnet/minecraft/resources/MinecraftKey; getProperty
	b ()F getValue
fpl net/minecraft/client/renderer/block/model/ItemOverrides
	a EMPTY
	b NO_OVERRIDE
	c overrides
	d properties
	a (Lgbf;Lnet/minecraft/world/item/ItemStack;Lfix;Lnet/minecraft/world/entity/EntityLiving;I)Lgbf; resolve
	a (Lgbj;Lfpg;Lfpk;)Lgbf; bakeModel
fpl$a net/minecraft/client/renderer/block/model/ItemOverrides$BakedOverride
	a matchers
	b model
	a ([F)Z test
fpl$b net/minecraft/client/renderer/block/model/ItemOverrides$PropertyMatcher
	a index
	b value
fpm net/minecraft/client/renderer/block/model/ItemTransform
	a NO_TRANSFORM
	b rotation
	c translation
	d scale
	a (ZLelp;)V apply
fpm$a net/minecraft/client/renderer/block/model/ItemTransform$Deserializer
	a MAX_TRANSLATION
	b MAX_SCALE
	c DEFAULT_ROTATION
	d DEFAULT_TRANSLATION
	e DEFAULT_SCALE
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfpm; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lorg/joml/Vector3f;)Lorg/joml/Vector3f; getVector3f
fpn net/minecraft/client/renderer/block/model/ItemTransforms
	a NO_TRANSFORMS
	b thirdPersonLeftHand
	c thirdPersonRightHand
	d firstPersonLeftHand
	e firstPersonRightHand
	f head
	g gui
	h ground
	i fixed
	a (Lnet/minecraft/world/item/ItemDisplayContext;)Lfpm; getTransform
	b (Lnet/minecraft/world/item/ItemDisplayContext;)Z hasTransform
fpn$a net/minecraft/client/renderer/block/model/ItemTransforms$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Lnet/minecraft/world/item/ItemDisplayContext;)Lfpm; getTransform
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfpn; deserialize
fpo net/minecraft/client/renderer/block/model/MultiVariant
	a variants
	a ()Ljava/util/List; getVariants
	a (Lgbj;Ljava/util/function/Function;Lgbn;Lnet/minecraft/resources/MinecraftKey;)Lgbf; bake
	a (Ljava/util/function/Function;)V resolveParents
	f ()Ljava/util/Collection; getDependencies
fpo$a net/minecraft/client/renderer/block/model/MultiVariant$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfpo; deserialize
fpp net/minecraft/client/renderer/block/model/Variant
	a modelLocation
	b rotation
	c uvLock
	d weight
	a ()Lnet/minecraft/resources/MinecraftKey; getModelLocation
	b ()Lcom/mojang/math/Transformation; getRotation
	c ()Z isUvLocked
	d ()I getWeight
fpp$a net/minecraft/client/renderer/block/model/Variant$Deserializer
	a DEFAULT_UVLOCK
	b DEFAULT_WEIGHT
	c DEFAULT_X_ROTATION
	d DEFAULT_Y_ROTATION
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfpp; deserialize
	a (Lcom/google/gson/JsonObject;)Lgbg; getBlockRotation
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/MinecraftKey; getModel
	c (Lcom/google/gson/JsonObject;)I getWeight
	d (Lcom/google/gson/JsonObject;)Z getUvLock
fpq net/minecraft/client/renderer/block/model/multipart/AndCondition
	a TOKEN
	d conditions
fpr net/minecraft/client/renderer/block/model/multipart/Condition
	b TRUE
	c FALSE
fps net/minecraft/client/renderer/block/model/multipart/KeyValueCondition
	a PIPE_SPLITTER
	d key
	e value
	a (Lnet/minecraft/world/level/block/state/BlockStateList;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/String;)Ljava/util/function/Predicate; getBlockStatePredicate
fpt net/minecraft/client/renderer/block/model/multipart/MultiPart
	a definition
	b selectors
	a ()Ljava/util/List; getSelectors
	a (Lgbj;Ljava/util/function/Function;Lgbn;Lnet/minecraft/resources/MinecraftKey;)Lgbf; bake
	a (Ljava/util/function/Function;)V resolveParents
	b ()Ljava/util/Set; getMultiVariants
	f ()Ljava/util/Collection; getDependencies
fpt$a net/minecraft/client/renderer/block/model/multipart/MultiPart$Deserializer
	a context
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List; getSelectors
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfpt; deserialize
fpu net/minecraft/client/renderer/block/model/multipart/OrCondition
	a TOKEN
	d conditions
fpv net/minecraft/client/renderer/block/model/multipart/Selector
	a condition
	b variant
	a ()Lfpo; getVariant
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)Ljava/util/function/Predicate; getPredicate
fpv$a net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfpv; deserialize
	a (Lcom/google/gson/JsonObject;)Lfpr; getCondition
	a (Ljava/util/Map$Entry;)Lfpr; getKeyValueCondition
	b (Lcom/google/gson/JsonObject;)Lfpr; getSelector
fpz net/minecraft/client/renderer/blockentity/BannerRenderer
	a FLAG
	b BANNER_WIDTH
	c BANNER_HEIGHT
	d MAX_PATTERNS
	e POLE
	f BAR
	g flag
	h pole
	i bar
	a ()Lfii; createBodyLayer
	a (Lelp;Lfoe;IILfic;Lgbi;ZLjava/util/List;)V renderPatterns
	a (Lelp;Lfoe;IILfic;Lgbi;ZLjava/util/List;Z)V renderPatterns
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityBanner;FLelp;Lfoe;II)V render
fqa net/minecraft/client/renderer/blockentity/BeaconRenderer
	a BEAM_LOCATION
	b MAX_RENDER_Y
	a (Lelp;Lelt;FFFFIIFFFFFFFFFFFF)V renderPart
	a (Lelp;Lfoe;FJII[F)V renderBeaconBeam
	a (Lelp;Lfoe;Lnet/minecraft/resources/MinecraftKey;FFJII[FFF)V renderBeaconBeam
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/phys/Vec3D;)Z shouldRender
	a (Lnet/minecraft/world/level/block/entity/TileEntityBeacon;)Z shouldRenderOffScreen
	a (Lnet/minecraft/world/level/block/entity/TileEntityBeacon;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityBeacon;Lnet/minecraft/world/phys/Vec3D;)Z shouldRender
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lelt;FFFFIFFFF)V addVertex
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lelt;FFFFIIFFFFFFFF)V renderQuad
	aK_ ()I getViewDistance
fqb net/minecraft/client/renderer/blockentity/BedRenderer
	a headRoot
	b footRoot
	a (Lelp;Lfoe;Lfic;Lnet/minecraft/core/EnumDirection;Lgbi;IIZ)V renderPiece
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityBed;FLelp;Lfoe;II)V render
	b ()Lfii; createHeadLayer
	c ()Lfii; createFootLayer
fqc net/minecraft/client/renderer/blockentity/BellRenderer
	a BELL_RESOURCE_LOCATION
	b BELL_BODY
	c bellBody
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityBell;FLelp;Lfoe;II)V render
	b ()Lfii; createBodyLayer
fqd net/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher
	a level
	b camera
	c cameraHitResult
	d renderers
	e font
	f entityModelSet
	g blockRenderDispatcher
	h itemRenderer
	i entityRenderer
	a (Lfqe;Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;)V setupAndRender
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/world/level/World;)V setLevel
	a (Lnet/minecraft/world/level/World;Leqg;Lnet/minecraft/world/phys/MovingObjectPosition;)V prepare
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)Lfqe; getRenderer
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lelp;Lfoe;II)Z renderItem
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Ljava/lang/Runnable;)V tryRender
fqe net/minecraft/client/renderer/blockentity/BlockEntityRenderer
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/phys/Vec3D;)Z shouldRender
	aK_ ()I getViewDistance
fqf net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider
fqf$a net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider$Context
	a blockEntityRenderDispatcher
	b blockRenderDispatcher
	c itemRenderer
	d entityRenderer
	e modelSet
	f font
	a ()Lfqd; getBlockEntityRenderDispatcher
	a (Lfia;)Lfic; bakeLayer
	b ()Lfoy; getBlockRenderDispatcher
	c ()Lftf; getEntityRenderer
	d ()Lfuf; getItemRenderer
	e ()Lfhy; getModelSet
	f ()Lesd; getFont
fqg net/minecraft/client/renderer/blockentity/BlockEntityRenderers
	a PROVIDERS
	a (Lfqf$a;)Ljava/util/Map; createEntityRenderers
	a (Lnet/minecraft/world/level/block/entity/TileEntityTypes;Lfqf;)V register
fqh net/minecraft/client/renderer/blockentity/BrightnessCombiner
	a ()Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptNone
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptSingle
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/level/block/entity/TileEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptDouble
	b ()Ljava/lang/Object; acceptNone
fqi net/minecraft/client/renderer/blockentity/BrushableBlockRenderer
	a itemRenderer
	a (Lnet/minecraft/core/EnumDirection;I)[F translations
	a (Lnet/minecraft/world/level/block/entity/BrushableBlockEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
fqj net/minecraft/client/renderer/blockentity/CampfireRenderer
	a SIZE
	b itemRenderer
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityCampfire;FLelp;Lfoe;II)V render
fqk net/minecraft/client/renderer/blockentity/ChestRenderer
	a BOTTOM
	b LID
	c LOCK
	d lid
	e bottom
	f lock
	g doubleLeftLid
	h doubleLeftBottom
	i doubleLeftLock
	j doubleRightLid
	k doubleRightBottom
	l doubleRightLock
	m xmasTextures
	a (Lelp;Lelt;Lfic;Lfic;Lfic;FII)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	b ()Lfii; createSingleBodyLayer
	c ()Lfii; createDoubleBodyRightLayer
	d ()Lfii; createDoubleBodyLeftLayer
fql net/minecraft/client/renderer/blockentity/ConduitRenderer
	a SHELL_TEXTURE
	b ACTIVE_SHELL_TEXTURE
	c WIND_TEXTURE
	d VERTICAL_WIND_TEXTURE
	e OPEN_EYE_TEXTURE
	f CLOSED_EYE_TEXTURE
	g eye
	h wind
	i shell
	j cage
	k renderer
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityConduit;FLelp;Lfoe;II)V render
	b ()Lfii; createEyeLayer
	c ()Lfii; createWindLayer
	d ()Lfii; createShellLayer
	e ()Lfii; createCageLayer
fqm net/minecraft/client/renderer/blockentity/DecoratedPotRenderer
	a NECK
	b FRONT
	c BACK
	d LEFT
	e RIGHT
	f TOP
	g BOTTOM
	h neck
	i frontSide
	j backSide
	k leftSide
	l rightSide
	m top
	n bottom
	o baseMaterial
	a (Lfic;Lelp;Lfoe;IILgbi;)V renderSide
	a (Lnet/minecraft/world/item/Item;)Lgbi; getMaterial
	a (Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	b ()Lfii; createBaseLayer
	c ()Lfii; createSidesLayer
fqn net/minecraft/client/renderer/blockentity/EnchantTableRenderer
	a BOOK_LOCATION
	b bookModel
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityEnchantTable;FLelp;Lfoe;II)V render
fqo net/minecraft/client/renderer/blockentity/HangingSignRenderer
	a PLANK
	b V_CHAINS
	c NORMAL_CHAINS
	d CHAIN_L_1
	e CHAIN_L_2
	f CHAIN_R_1
	g CHAIN_R_2
	h BOARD
	i MODEL_RENDER_SCALE
	j TEXT_RENDER_SCALE
	k TEXT_OFFSET
	l hangingSignModels
	a (Lelp;FLnet/minecraft/world/level/block/state/IBlockData;)V translateSign
	a (Lelp;IILffz;Lelt;)V renderSignModel
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lgbi; getSignMaterial
	b ()F getSignModelRenderScale
	c ()F getSignTextRenderScale
	d ()Lnet/minecraft/world/phys/Vec3D; getTextOffset
	e ()Lfii; createHangingSignLayer
fqo$a net/minecraft/client/renderer/blockentity/HangingSignRenderer$HangingSignModel
	a root
	b plank
	c vChains
	d normalChains
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/world/level/block/state/IBlockData;)V evaluateVisibleParts
fqp net/minecraft/client/renderer/blockentity/LecternRenderer
	a bookModel
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityLectern;FLelp;Lfoe;II)V render
fqq net/minecraft/client/renderer/blockentity/PistonHeadRenderer
	a blockRenderer
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lelp;Lfoe;Lnet/minecraft/world/level/World;ZI)V renderBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/piston/TileEntityPiston;FLelp;Lfoe;II)V render
	aK_ ()I getViewDistance
fqr net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer
	a model
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityShulkerBox;FLelp;Lfoe;II)V render
fqs net/minecraft/client/renderer/blockentity/SignRenderer
	a STICK
	b BLACK_TEXT_OUTLINE_COLOR
	c OUTLINE_RENDER_DISTANCE
	d RENDER_SCALE
	e TEXT_OFFSET
	f signModels
	g font
	a (Lelp;FLnet/minecraft/world/level/block/state/IBlockData;)V translateSign
	a (Lelp;IILffz;Lelt;)V renderSignModel
	a (Lelp;Lfoe;IILnet/minecraft/world/level/block/state/properties/BlockPropertyWood;Lffz;)V renderSign
	a (Lelp;ZLnet/minecraft/world/phys/Vec3D;)V translateSignText
	a (Lfhy;Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lfqs$a; createSignModel
	a (Lnet/minecraft/core/BlockPosition;I)Z isOutlineVisible
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/SignText;Lelp;Lfoe;IIIZ)V renderSignText
	a (Lnet/minecraft/world/level/block/entity/SignText;)I getDarkColor
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;Lelp;Lfoe;IILnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/BlockSign;Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;Lffz;)V renderSignWithText
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lgbi; getSignMaterial
	b ()F getSignModelRenderScale
	c ()F getSignTextRenderScale
	d ()Lnet/minecraft/world/phys/Vec3D; getTextOffset
	f ()Lfii; createSignLayer
fqs$a net/minecraft/client/renderer/blockentity/SignRenderer$SignModel
	a root
	b stick
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
fqt net/minecraft/client/renderer/blockentity/SkullBlockRenderer
	a modelByType
	b SKIN_BY_TYPE
	a (Lczx$a;Lcom/mojang/authlib/GameProfile;)Lfom; getRenderType
	a (Lfhy;)Ljava/util/Map; createSkullRenderers
	a (Lnet/minecraft/core/EnumDirection;FFLelp;Lfoe;ILfha;Lfom;)V renderSkull
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntitySkull;FLelp;Lfoe;II)V render
fqu net/minecraft/client/renderer/blockentity/SpawnerRenderer
	a entityRenderer
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityMobSpawner;FLelp;Lfoe;II)V render
fqv net/minecraft/client/renderer/blockentity/StructureBlockRenderer
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityStructure;)Z shouldRenderOffScreen
	a (Lnet/minecraft/world/level/block/entity/TileEntityStructure;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityStructure;Lelt;Lnet/minecraft/core/BlockPosition;Lelp;)V renderInvisibleBlocks
	aK_ ()I getViewDistance
fqw net/minecraft/client/renderer/blockentity/TheEndGatewayRenderer
	c BEAM_LOCATION
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityEndGateway;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityEnderPortal;FLelp;Lfoe;II)V render
	aK_ ()I getViewDistance
	b ()F getOffsetUp
	c ()F getOffsetDown
	d ()Lfom; renderType
fqx net/minecraft/client/renderer/blockentity/TheEndPortalRenderer
	a END_SKY_LOCATION
	b END_PORTAL_LOCATION
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityEnderPortal;FLelp;Lfoe;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityEnderPortal;Lorg/joml/Matrix4f;Lelt;)V renderCube
	a (Lnet/minecraft/world/level/block/entity/TileEntityEnderPortal;Lorg/joml/Matrix4f;Lelt;FFFFFFFFLnet/minecraft/core/EnumDirection;)V renderFace
	b ()F getOffsetUp
	c ()F getOffsetDown
	d ()Lfom; renderType
fqz net/minecraft/client/renderer/chunk/RenderChunk
	a blockEntities
	b sections
	c debug
	d wrapped
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	b (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
fra net/minecraft/client/renderer/chunk/RenderChunkRegion
	a chunks
	b level
	c centerX
	d centerZ
	H_ ()I getMinBuildHeight
	I_ ()I getHeight
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/core/EnumDirection;Z)F getShade
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	x_ ()Lnet/minecraft/world/level/lighting/LevelLightEngine; getLightEngine
frb net/minecraft/client/renderer/chunk/RenderRegionCache
	a chunkInfoCache
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;II[[Lfrb$a;)Z isAllEmpty
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;I)Lfra; createRegion
frb$a net/minecraft/client/renderer/chunk/RenderRegionCache$ChunkInfo
	a chunk
	b renderChunk
	a ()Lnet/minecraft/world/level/chunk/Chunk; chunk
	b ()Lfqz; renderChunk
frc net/minecraft/client/renderer/chunk/SectionRenderDispatcher
	a LOGGER
	b MAX_WORKERS_32_BIT
	c MAX_HIGH_PRIORITY_QUOTA
	d toBatchHighPriority
	e toBatchLowPriority
	f highPriorityQuota
	g freeBuffers
	h toUpload
	i toBatchCount
	j freeBufferCount
	k fixedBuffers
	l mailbox
	m executor
	n level
	o renderer
	p camera
	a ()Ljava/lang/String; getStats
	a (Lelk$b;Lels;)Ljava/util/concurrent/CompletableFuture; uploadSectionLayer
	a (Lfix;)V setLevel
	a (Lfrc$b$a;)V schedule
	a (Lfrc$b;Lfrb;)V rebuildSectionSync
	a (Lnet/minecraft/world/phys/Vec3D;)V setCamera
	b ()I getToBatchCount
	c ()I getToUpload
	d ()I getFreeBufferCount
	e ()Lnet/minecraft/world/phys/Vec3D; getCameraPosition
	f ()V uploadAllPendingUploads
	g ()V blockUntilClear
	h ()Z isQueueEmpty
	i ()V dispose
	j ()V runTask
	k ()Lfrc$b$a; pollTask
	l ()V clearBatchQueue
frc$a net/minecraft/client/renderer/chunk/SectionRenderDispatcher$CompiledSection
	a UNCOMPILED
	b hasBlocks
	c renderableBlockEntities
	d visibilitySet
	e transparencyState
	a ()Z hasNoRenderableLayers
	a (Lfom;)Z isEmpty
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)Z facesCanSeeEachother
	b ()Ljava/util/List; getRenderableBlockEntities
frc$b net/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection
	a SIZE
	b index
	c compiled
	e initialCompilationCancelCount
	f lastRebuildTask
	g lastResortTransparencyTask
	h globalBlockEntities
	i buffers
	j bb
	k dirty
	l origin
	m relativeOrigins
	n playerChanged
	a ()Z hasAllNeighbors
	a (III)V setOrigin
	a (Lelk;)V beginLayer
	a (Lfom;)Lels; getBuffer
	a (Lfom;Lfrc;)Z resortTransparency
	a (Lfrb;)Lfrc$b$a; createCompileTask
	a (Lfrc;Lfrb;)V rebuildSectionAsync
	a (Ljava/util/Collection;)V updateGlobalBlockEntities
	a (Lnet/minecraft/core/BlockPosition;)Z doesChunkExistAt
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BlockPosition; getRelativeOrigin
	a (Z)V setDirty
	b ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBox
	b (III)Z isAxisAlignedWith
	b (Lfrb;)V compileSync
	c ()D getDistToPlayerSqr
	d ()Lfrc$a; getCompiled
	e ()V releaseBuffers
	f ()Lnet/minecraft/core/BlockPosition; getOrigin
	g ()V setNotDirty
	h ()Z isDirty
	i ()Z isDirtyFromPlayer
	j ()Z cancelTasks
	k ()V reset
frc$b$a net/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection$CompileTask
	a distAtCreation
	b isCancelled
	c isHighPriority
	a ()V cancel
	a (Lfop;)Ljava/util/concurrent/CompletableFuture; doTask
	a (Lfrc$b$a;)I compareTo
	b ()Ljava/lang/String; name
frc$b$b net/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection$RebuildTask
	e region
	a ()V cancel
	a (FFFLfop;)Lfrc$b$b$a; compile
	a (Lfop;)Ljava/util/concurrent/CompletableFuture; doTask
	a (Lfrc$b$b$a;Lnet/minecraft/world/level/block/entity/TileEntity;)V handleBlockEntity
	b ()Ljava/lang/String; name
frc$b$b$a net/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection$RebuildTask$CompileResults
	a globalBlockEntities
	b blockEntities
	c renderedLayers
	d visibilitySet
	e transparencyState
frc$b$c net/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection$ResortTransparencyTask
	f compiledSection
	a ()V cancel
	a (Lfop;)Ljava/util/concurrent/CompletableFuture; doTask
	b ()Ljava/lang/String; name
frc$c net/minecraft/client/renderer/chunk/SectionRenderDispatcher$SectionTaskResult
	a SUCCESSFUL
	b CANCELLED
	c $VALUES
	a ()[Lfrc$c; $values
frd net/minecraft/client/renderer/chunk/VisGraph
	a SIZE_IN_BITS
	b LEN
	c MASK
	d SIZE
	e X_SHIFT
	f Z_SHIFT
	g Y_SHIFT
	h DX
	i DZ
	j DY
	k INVALID_INDEX
	l DIRECTIONS
	m bitSet
	n INDEX_OF_EDGES
	o empty
	a ()Lfre; resolve
	a (I)Ljava/util/Set; floodFill
	a (III)I getIndex
	a (ILjava/util/Set;)V addEdges
	a (ILnet/minecraft/core/EnumDirection;)I getNeighborIndexAtFace
	a (Lnet/minecraft/core/BlockPosition;)V setOpaque
	b (Lnet/minecraft/core/BlockPosition;)I getIndex
fre net/minecraft/client/renderer/chunk/VisibilitySet
	a FACINGS
	b data
	a (Ljava/util/Set;)V add
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)Z visibilityBetween
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;Z)V set
	a (Z)V setAll
frg net/minecraft/client/renderer/culling/Frustum
	a OFFSET_STEP
	b intersection
	c matrix
	d viewVector
	e camX
	f camY
	g camZ
	a (DDD)V prepare
	a (DDDDDD)Z cubeInFrustum
	a (I)Lfrg; offsetToFullyIncludeCameraCube
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)Z isVisible
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;)V calculateFrustum
fri net/minecraft/client/renderer/debug/BeeDebugRenderer
	A minecraft
	B hives
	C beeInfosPerEntity
	D lastLookedAtUuid
	a SHOW_GOAL_FOR_ALL_BEES
	b SHOW_NAME_FOR_ALL_BEES
	c SHOW_HIVE_FOR_ALL_BEES
	d SHOW_FLOWER_POS_FOR_ALL_BEES
	e SHOW_TRAVEL_TICKS_FOR_ALL_BEES
	f SHOW_PATH_FOR_ALL_BEES
	g SHOW_GOAL_FOR_SELECTED_BEE
	h SHOW_NAME_FOR_SELECTED_BEE
	i SHOW_HIVE_FOR_SELECTED_BEE
	j SHOW_FLOWER_POS_FOR_SELECTED_BEE
	k SHOW_TRAVEL_TICKS_FOR_SELECTED_BEE
	l SHOW_PATH_FOR_SELECTED_BEE
	m SHOW_HIVE_MEMBERS
	n SHOW_BLACKLISTS
	o MAX_RENDER_DIST_FOR_HIVE_OVERLAY
	p MAX_RENDER_DIST_FOR_BEE_OVERLAY
	q MAX_TARGETING_DIST
	r HIVE_TIMEOUT
	s TEXT_SCALE
	t WHITE
	u YELLOW
	v ORANGE
	w GREEN
	x GRAY
	y PINK
	z RED
	a ()V clear
	a (I)V removeBeeInfo
	a (Lelp;Lfoe;)V doRender
	a (Lelp;Lfoe;DDD)V render
	a (Lelp;Lfoe;Ljava/lang/String;Lnet/minecraft/core/BlockPosition;II)V renderTextOverPos
	a (Lelp;Lfoe;Ljava/lang/String;Lwd$a;II)V renderTextOverHive
	a (Lelp;Lfoe;Lnet/minecraft/core/BlockPosition;)V highlightHive
	a (Lelp;Lfoe;Lnet/minecraft/core/BlockPosition;Ljava/util/List;)V renderGhostHive
	a (Lelp;Lfoe;Lnet/minecraft/core/IPosition;ILjava/lang/String;IF)V renderTextOverMob
	a (Lelp;Lfoe;Lvt$a;)V renderPath
	a (Lelp;Lfoe;Lwd$a;Ljava/util/Collection;)V renderHiveInfo
	a (Ljava/util/Collection;)Ljava/lang/String; getBeeUuidsAsString
	a (Lnet/minecraft/core/BlockPosition;)Ljava/util/Collection; getHiveMembers
	a (Lvt$a;)V addOrUpdateBeeInfo
	a (Lvt$a;Lnet/minecraft/core/BlockPosition;)Ljava/lang/String; getPosDescription
	a (Lwd$a;)Ljava/util/Set; getHiveMemberNames
	a (Lwd$a;J)V addOrUpdateHiveInfo
	b ()V clearRemovedBees
	b (Lelp;Lfoe;)V renderFlowerInfos
	b (Lelp;Lfoe;Lvt$a;)V renderBeeInfo
	b (Lvt$a;)Z isBeeSelected
	c ()V clearRemovedHives
	c (Lvt$a;)Z isPlayerCloseEnoughToMob
	d ()Ljava/util/Map; createHiveBlacklistMap
	e ()Leqg; getCamera
	f ()Ljava/util/Map; getGhostHives
	g ()V updateLastLookedAtUuid
fri$a net/minecraft/client/renderer/debug/BeeDebugRenderer$HiveDebugInfo
	a info
	b lastSeen
	a ()Lwd$a; info
	b ()J lastSeen
frj net/minecraft/client/renderer/debug/BrainDebugRenderer
	A TEXT_SCALE
	B WHITE
	C YELLOW
	D CYAN
	E GREEN
	F GRAY
	G PINK
	H RED
	I ORANGE
	J minecraft
	K pois
	L brainDumpsPerEntity
	M lastLookedAtUuid
	a LOGGER
	b SHOW_NAME_FOR_ALL
	c SHOW_PROFESSION_FOR_ALL
	d SHOW_BEHAVIORS_FOR_ALL
	e SHOW_ACTIVITIES_FOR_ALL
	f SHOW_INVENTORY_FOR_ALL
	g SHOW_GOSSIPS_FOR_ALL
	h SHOW_PATH_FOR_ALL
	i SHOW_HEALTH_FOR_ALL
	j SHOW_WANTS_GOLEM_FOR_ALL
	k SHOW_ANGER_LEVEL_FOR_ALL
	l SHOW_NAME_FOR_SELECTED
	m SHOW_PROFESSION_FOR_SELECTED
	n SHOW_BEHAVIORS_FOR_SELECTED
	o SHOW_ACTIVITIES_FOR_SELECTED
	p SHOW_MEMORIES_FOR_SELECTED
	q SHOW_INVENTORY_FOR_SELECTED
	r SHOW_GOSSIPS_FOR_SELECTED
	s SHOW_PATH_FOR_SELECTED
	t SHOW_HEALTH_FOR_SELECTED
	u SHOW_WANTS_GOLEM_FOR_SELECTED
	v SHOW_ANGER_LEVEL_FOR_SELECTED
	w SHOW_POI_INFO
	x MAX_RENDER_DIST_FOR_BRAIN_INFO
	y MAX_RENDER_DIST_FOR_POI_INFO
	z MAX_TARGETING_DIST
	a ()V clear
	a (I)V removeBrainDump
	a (Lelp;Lfoe;DDD)V render
	a (Lelp;Lfoe;Lfrj$a;)V renderPoiInfo
	a (Lelp;Lfoe;Ljava/lang/String;Lfrj$a;II)V renderTextOverPoi
	a (Lelp;Lfoe;Ljava/lang/String;Lnet/minecraft/core/BlockPosition;II)V renderTextOverPos
	a (Lelp;Lfoe;Lnet/minecraft/core/BlockPosition;)V highlightPoi
	a (Lelp;Lfoe;Lnet/minecraft/core/BlockPosition;Ljava/util/List;)V renderGhostPoi
	a (Lelp;Lfoe;Lnet/minecraft/core/IPosition;ILjava/lang/String;IF)V renderTextOverMob
	a (Lelp;Lfoe;Lvu$a;DDD)V renderPath
	a (Lfrj$a;)V addPoi
	a (Lnet/minecraft/core/BlockPosition;)V removePoi
	a (Lnet/minecraft/core/BlockPosition;I)V setFreeTicketCount
	a (Lvu$a;)V addOrUpdateBrainDump
	b ()V clearRemovedEntities
	b (Lelp;Lfoe;DDD)V doRender
	b (Lelp;Lfoe;Lvu$a;DDD)V renderBrainInfo
	b (Lfrj$a;)Ljava/util/Set; getTicketHolderNames
	b (Lnet/minecraft/core/BlockPosition;)Ljava/util/Collection; getTicketHolders
	b (Lvu$a;)Z isMobSelected
	c ()Ljava/util/Map; getGhostPois
	c (Lfrj$a;)Ljava/util/Set; getPotentialTicketHolderNames
	c (Lnet/minecraft/core/BlockPosition;)Ljava/util/Collection; getPotentialTicketHolders
	c (Lvu$a;)Z isPlayerCloseEnoughToMob
	d ()V updateLastLookedAtUuid
frj$a net/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo
	a pos
	b type
	c freeTicketCount
frk net/minecraft/client/renderer/debug/ChunkBorderRenderer
	a minecraft
	b CELL_BORDER
	c YELLOW
	a (Lelp;Lfoe;DDD)V render
frl net/minecraft/client/renderer/debug/ChunkDebugRenderer
	a minecraft
	b lastUpdateTime
	c radius
	d data
	a (Lelp;Lfoe;DDD)V render
frl$a net/minecraft/client/renderer/debug/ChunkDebugRenderer$ChunkData
	b clientData
	c serverData
frm net/minecraft/client/renderer/debug/CollisionBoxRenderer
	a minecraft
	b lastUpdateTime
	c shapes
	a (Lelp;Lfoe;DDD)V render
frn net/minecraft/client/renderer/debug/DebugRenderer
	a pathfindingRenderer
	b waterDebugRenderer
	c chunkBorderRenderer
	d heightMapRenderer
	e collisionBoxRenderer
	f supportBlockRenderer
	g neighborsUpdateRenderer
	h structureRenderer
	i lightDebugRenderer
	j worldGenAttemptRenderer
	k solidFaceRenderer
	l chunkRenderer
	m brainDebugRenderer
	n villageSectionsDebugRenderer
	o beeDebugRenderer
	p raidDebugRenderer
	q goalSelectorRenderer
	r gameTestDebugRenderer
	s gameEventListenerRenderer
	t skyLightSectionDebugRenderer
	u renderChunkborder
	a ()V clear
	a (Lelp;Lfoe$a;DDD)V render
	a (Lelp;Lfoe;DDDDDDFFFF)V renderFilledBox
	a (Lelp;Lfoe;Ljava/lang/String;DDDI)V renderFloatingText
	a (Lelp;Lfoe;Ljava/lang/String;DDDIF)V renderFloatingText
	a (Lelp;Lfoe;Ljava/lang/String;DDDIFZFZ)V renderFloatingText
	a (Lelp;Lfoe;Ljava/lang/String;IIII)V renderFloatingText
	a (Lelp;Lfoe;Lnet/minecraft/core/BlockPosition;FFFFF)V renderFilledBox
	a (Lelp;Lfoe;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;FFFF)V renderFilledBox
	a (Lelp;Lfoe;Lnet/minecraft/world/phys/AxisAlignedBB;FFFF)V renderFilledBox
	a (Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; getTargetedEntity
	b ()Z switchRenderChunkborder
frn$a net/minecraft/client/renderer/debug/DebugRenderer$SimpleDebugRenderer
	a ()V clear
	a (Lelp;Lfoe;DDD)V render
fro net/minecraft/client/renderer/debug/GameEventListenerRenderer
	a minecraft
	b LISTENER_RENDER_DIST
	c BOX_HEIGHT
	d trackedGameEvents
	e trackedListeners
	a (Lelp;Lfoe;DDD)V render
	a (Lelp;Lfoe;Lnet/minecraft/world/phys/AxisAlignedBB;FFFF)V renderFilledBox
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/phys/Vec3D;)V trackGameEvent
	a (Lnet/minecraft/world/level/gameevent/PositionSource;I)V trackListener
fro$a net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedGameEvent
	a timeStamp
	b gameEvent
	c position
	a ()Z isExpired
	b ()J timeStamp
	c ()Lnet/minecraft/resources/ResourceKey; gameEvent
	d ()Lnet/minecraft/world/phys/Vec3D; position
fro$b net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedListener
	a listenerSource
	b listenerRange
	a ()Lnet/minecraft/world/level/gameevent/PositionSource; getListenerSource
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEvent;Ldjt$a;Lnet/minecraft/world/phys/Vec3D;)Z handleGameEvent
	a (Lnet/minecraft/world/level/World;)Ljava/util/Optional; getPosition
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/phys/Vec3D;)Z isExpired
	b ()I getListenerRadius
frp net/minecraft/client/renderer/debug/GameTestDebugRenderer
	a PADDING
	b markers
	a ()V clear
	a (Lelp;Lfoe;DDD)V render
	a (Lelp;Lfoe;Lnet/minecraft/core/BlockPosition;Lfrp$a;)V renderMarker
	a (Lnet/minecraft/core/BlockPosition;ILjava/lang/String;I)V addMarker
frp$a net/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker
	a color
	b text
	c removeAtTime
	a ()F getR
	b ()F getG
	c ()F getB
	d ()F getA
frq net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer
	a MAX_RENDER_DIST
	b minecraft
	c goalSelectors
	a ()V clear
	a (I)V removeGoalSelector
	a (ILnet/minecraft/core/BlockPosition;Ljava/util/List;)V addGoalSelector
	a (Lelp;Lfoe;DDD)V render
frq$a net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer$EntityGoalInfo
	a entityPos
	b goals
	a ()Lnet/minecraft/core/BlockPosition; entityPos
	b ()Ljava/util/List; goals
frr net/minecraft/client/renderer/debug/HeightMapRenderer
	a minecraft
	b CHUNK_DIST
	c BOX_HEIGHT
	a (Lelp;Lfoe;DDD)V render
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;)Lorg/joml/Vector3f; getColor
frs net/minecraft/client/renderer/debug/LightDebugRenderer
	a minecraft
	b MAX_RENDER_DIST
	a (Lelp;Lfoe;DDD)V render
frt net/minecraft/client/renderer/debug/LightSectionDebugRenderer
	a REFRESH_INTERVAL
	b RADIUS
	c LIGHT_AND_BLOCKS_COLOR
	d LIGHT_ONLY_COLOR
	e minecraft
	f lightLayer
	g lastUpdateTime
	h data
	a (Lelp;Lelt;DDDIIIIIILorg/joml/Vector4f;)V renderEdge
	a (Lelp;Lelt;Lnet/minecraft/core/EnumDirection;DDDIIILorg/joml/Vector4f;)V renderFace
	a (Lelp;Lfoe;DDD)V render
	a (Lelp;Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;Lnet/minecraft/core/SectionPosition;Lelt;DDDLorg/joml/Vector4f;)V renderFaces
	a (Lelp;Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;Lnet/minecraft/core/SectionPosition;Lfoe;DDDLorg/joml/Vector4f;)V renderEdges
frt$a net/minecraft/client/renderer/debug/LightSectionDebugRenderer$SectionData
	a lightAndBlocksShape
	b lightShape
	c minPos
fru net/minecraft/client/renderer/debug/NeighborsUpdateRenderer
	a minecraft
	b lastUpdate
	a (JLnet/minecraft/core/BlockPosition;)V addUpdate
	a (Lelp;Lfoe;DDD)V render
frv net/minecraft/client/renderer/debug/PathfindingRenderer
	a pathMap
	b pathMaxDist
	c creationMap
	d TIMEOUT
	e MAX_RENDER_DIST
	f SHOW_OPEN_CLOSED
	g SHOW_OPEN_CLOSED_COST_MALUS
	h SHOW_OPEN_CLOSED_NODE_TYPE_WITH_TEXT
	i SHOW_OPEN_CLOSED_NODE_TYPE_WITH_BOX
	j SHOW_GROUND_LABELS
	k TEXT_SCALE
	a (ILnet/minecraft/world/level/pathfinder/PathEntity;F)V addPath
	a (Lelp;Lelt;Lnet/minecraft/world/level/pathfinder/PathEntity;DDD)V renderPathLine
	a (Lelp;Lfoe;DDD)V render
	a (Lelp;Lfoe;Lnet/minecraft/world/level/pathfinder/PathEntity;FZZDDD)V renderPath
	a (Lnet/minecraft/core/BlockPosition;DDD)F distanceToCamera
frw net/minecraft/client/renderer/debug/RaidDebugRenderer
	a MAX_RENDER_DIST
	b TEXT_SCALE
	c minecraft
	d raidCenters
	a (Lelp;Lfoe;DDD)V render
	a (Lelp;Lfoe;Ljava/lang/String;Lnet/minecraft/core/BlockPosition;I)V renderTextOverBlock
	a (Lelp;Lfoe;Lnet/minecraft/core/BlockPosition;)V highlightRaidCenter
	a (Ljava/util/Collection;)V setRaidCenters
	b ()Leqg; getCamera
frx net/minecraft/client/renderer/debug/SolidFaceRenderer
	a minecraft
	a (Lelp;Lfoe;DDD)V render
fry net/minecraft/client/renderer/debug/StructureRenderer
	a minecraft
	b postMainBoxes
	c postPieces
	d MAX_RENDER_DIST
	a ()V clear
	a (Lelp;Lfoe;DDD)V render
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Ljava/util/List;Lnet/minecraft/resources/ResourceKey;)V addBoundingBox
frz net/minecraft/client/renderer/debug/SupportBlockRenderer
	a minecraft
	b lastUpdateTime
	c surroundEntities
	a (Lelp;Lfoe;DDD)V render
	a (Lelp;Lfoe;DDDLnet/minecraft/world/entity/Entity;Ljava/util/function/DoubleSupplier;FFF)V drawHighlights
	a (Lnet/minecraft/core/BlockPosition;Lelp;DDDLfoe;DFFF)V highlightPosition
	a (Lnet/minecraft/world/entity/Entity;)D getBias
fsa net/minecraft/client/renderer/debug/VillageSectionsDebugRenderer
	a MAX_RENDER_DIST_FOR_VILLAGE_SECTIONS
	b villageSections
	a ()V clear
	a (Lelp;Lfoe;DDD)V render
	a (Lelp;Lfoe;Lnet/minecraft/core/SectionPosition;)V highlightVillageSection
	a (Lnet/minecraft/core/SectionPosition;)V setVillageSection
	b (Lnet/minecraft/core/SectionPosition;)V setNotVillageSection
fsb net/minecraft/client/renderer/debug/WaterDebugRenderer
	a minecraft
	a (Lelp;Lfoe;DDD)V render
fsc net/minecraft/client/renderer/debug/WorldGenAttemptRenderer
	a toRender
	b scales
	c alphas
	d reds
	e greens
	f blues
	a (Lelp;Lfoe;DDD)V render
	a (Lnet/minecraft/core/BlockPosition;FFFFF)V addPos
fse net/minecraft/client/renderer/entity/AbstractHorseRenderer
	a scale
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;Lelp;F)V scale
fsf net/minecraft/client/renderer/entity/AbstractZombieRenderer
	a ZOMBIE_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isShaking
	a (Lnet/minecraft/world/entity/monster/EntityZombie;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/world/entity/monster/EntityZombie;)Z isShaking
fsg net/minecraft/client/renderer/entity/AllayRenderer
	a ALLAY_TEXTURE
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/animal/allay/Allay;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/allay/Allay;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fsh net/minecraft/client/renderer/entity/ArmorStandRenderer
	a DEFAULT_SKIN_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/EntityLiving;ZZZ)Lfom; getRenderType
	a (Lnet/minecraft/world/entity/decoration/EntityArmorStand;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/decoration/EntityArmorStand;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/decoration/EntityArmorStand;ZZZ)Lfom; getRenderType
	b (Lnet/minecraft/world/entity/Entity;)Z shouldShowName
	b (Lnet/minecraft/world/entity/EntityLiving;)Z shouldShowName
	b (Lnet/minecraft/world/entity/decoration/EntityArmorStand;)Z shouldShowName
fsi net/minecraft/client/renderer/entity/ArrowRenderer
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityArrow;FFLelp;Lfoe;I)V render
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lelt;IIIFFIIII)V vertex
fsj net/minecraft/client/renderer/entity/AxolotlRenderer
	a TEXTURE_BY_TYPE
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fsk net/minecraft/client/renderer/entity/BatRenderer
	a BAT_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/ambient/EntityBat;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/ambient/EntityBat;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/ambient/EntityBat;Lelp;FFF)V setupRotations
fsl net/minecraft/client/renderer/entity/BeeRenderer
	a ANGRY_BEE_TEXTURE
	i ANGRY_NECTAR_BEE_TEXTURE
	j BEE_TEXTURE
	k NECTAR_BEE_TEXTURE
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityBee;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fsm net/minecraft/client/renderer/entity/BlazeRenderer
	a BLAZE_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/monster/EntityBlaze;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityBlaze;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fsn net/minecraft/client/renderer/entity/BoatRenderer
	a boatResources
	a (Lfth$a;Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType;Z)Lffv; createBoatModel
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType;Z)Ljava/lang/String; getTextureLocation
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat;FFLelp;Lfoe;I)V render
fso net/minecraft/client/renderer/entity/CamelRenderer
	a CAMEL_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/camel/Camel;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fsp net/minecraft/client/renderer/entity/CatRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntityCat;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityCat;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/animal/EntityCat;Lelp;FFF)V setupRotations
fsq net/minecraft/client/renderer/entity/CaveSpiderRenderer
	a CAVE_SPIDER_LOCATION
	i SCALE
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityCaveSpider;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityCaveSpider;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntitySpider;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fsr net/minecraft/client/renderer/entity/ChestedHorseRenderer
	a MAP
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseChestedAbstract;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fss net/minecraft/client/renderer/entity/ChickenRenderer
	a CHICKEN_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;F)F getBob
	a (Lnet/minecraft/world/entity/animal/EntityChicken;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityChicken;F)F getBob
fst net/minecraft/client/renderer/entity/CodRenderer
	a COD_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntityCod;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityCod;Lelp;FFF)V setupRotations
fsu net/minecraft/client/renderer/entity/CowRenderer
	a COW_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityCow;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fsv net/minecraft/client/renderer/entity/CreeperRenderer
	a CREEPER_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityCreeper;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityCreeper;F)F getWhiteOverlayProgress
	a (Lnet/minecraft/world/entity/monster/EntityCreeper;Lelp;F)V scale
	b (Lnet/minecraft/world/entity/EntityLiving;F)F getWhiteOverlayProgress
fsw net/minecraft/client/renderer/entity/DisplayRenderer
	a entityRenderDispatcher
	a (Lbip$k;Lnet/minecraft/world/entity/Display;FLorg/joml/Quaternionf;)Lorg/joml/Quaternionf; calculateOrientation
	a (Leqg;)F cameraYrot
	a (Lnet/minecraft/world/entity/Display;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Display;F)F entityYRot
	a (Lnet/minecraft/world/entity/Display;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/Display;Ljava/lang/Object;Lelp;Lfoe;IF)V renderInner
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	b (Leqg;)F cameraXRot
	b (Lnet/minecraft/world/entity/Display;)Ljava/lang/Object; getSubState
	b (Lnet/minecraft/world/entity/Display;F)F entityXRot
fsw$a net/minecraft/client/renderer/entity/DisplayRenderer$BlockDisplayRenderer
	a blockRenderer
	a (Lnet/minecraft/world/entity/Display$BlockDisplay;)Lbip$b$a; getSubState
	a (Lnet/minecraft/world/entity/Display$BlockDisplay;Lbip$b$a;Lelp;Lfoe;IF)V renderInner
	a (Lnet/minecraft/world/entity/Display;Ljava/lang/Object;Lelp;Lfoe;IF)V renderInner
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	b (Lnet/minecraft/world/entity/Display;)Ljava/lang/Object; getSubState
fsw$b net/minecraft/client/renderer/entity/DisplayRenderer$ItemDisplayRenderer
	a itemRenderer
	a (Lnet/minecraft/world/entity/Display$ItemDisplay;)Lbip$g$a; getSubState
	a (Lnet/minecraft/world/entity/Display$ItemDisplay;Lbip$g$a;Lelp;Lfoe;IF)V renderInner
	a (Lnet/minecraft/world/entity/Display;Ljava/lang/Object;Lelp;Lfoe;IF)V renderInner
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	b (Lnet/minecraft/world/entity/Display;)Ljava/lang/Object; getSubState
fsw$c net/minecraft/client/renderer/entity/DisplayRenderer$TextDisplayRenderer
	a font
	a (Lnet/minecraft/network/chat/IChatBaseComponent;I)Lnet/minecraft/world/entity/Display$TextDisplay$CachedInfo; splitLines
	a (Lnet/minecraft/world/entity/Display$TextDisplay;)Lbip$l$e; getSubState
	a (Lnet/minecraft/world/entity/Display$TextDisplay;Lbip$l$e;Lelp;Lfoe;IF)V renderInner
	a (Lnet/minecraft/world/entity/Display;Ljava/lang/Object;Lelp;Lfoe;IF)V renderInner
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	b (Lnet/minecraft/world/entity/Display;)Ljava/lang/Object; getSubState
fsx net/minecraft/client/renderer/entity/DolphinRenderer
	a DOLPHIN_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityDolphin;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fsy net/minecraft/client/renderer/entity/DragonFireballRenderer
	a TEXTURE_LOCATION
	f RENDER_TYPE
	a (Lelt;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;IFIII)V vertex
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/projectile/EntityDragonFireball;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityDragonFireball;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityDragonFireball;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fsz net/minecraft/client/renderer/entity/DrownedRenderer
	a DROWNED_LOCATION
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/monster/EntityDrowned;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/monster/EntityZombie;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fta net/minecraft/client/renderer/entity/ElderGuardianRenderer
	a GUARDIAN_ELDER_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityGuardian;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityGuardian;Lelp;F)V scale
ftb net/minecraft/client/renderer/entity/EndCrystalRenderer
	a END_CRYSTAL_LOCATION
	f RENDER_TYPE
	g SIN_45
	h GLASS
	i BASE
	j cube
	k glass
	l base
	a ()Lfii; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lfrg;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;F)F getY
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;Lfrg;DDD)Z shouldRender
ftc net/minecraft/client/renderer/entity/EnderDragonRenderer
	a CRYSTAL_BEAM_LOCATION
	f DRAGON_EXPLODING_LOCATION
	g DRAGON_LOCATION
	h DRAGON_EYES_LOCATION
	i RENDER_TYPE
	j DECAL
	k EYES
	l BEAM
	m HALF_SQRT_3
	n model
	a ()Lfii; createBodyLayer
	a (FFFFILelp;Lfoe;I)V renderCrystalBeams
	a (Lelt;Lorg/joml/Matrix4f;FF)V vertex2
	a (Lelt;Lorg/joml/Matrix4f;I)V vertex01
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon;FFLelp;Lfoe;I)V render
	b (Lelt;Lorg/joml/Matrix4f;FF)V vertex3
	c (Lelt;Lorg/joml/Matrix4f;FF)V vertex4
ftc$a net/minecraft/client/renderer/entity/EnderDragonRenderer$DragonModel
	a head
	b neck
	f jaw
	g body
	h leftWing
	i leftWingTip
	j leftFrontLeg
	k leftFrontLegTip
	l leftFrontFoot
	m leftRearLeg
	n leftRearLegTip
	o leftRearFoot
	p rightWing
	q rightWingTip
	r rightFrontLeg
	s rightFrontLegTip
	t rightFrontFoot
	u rightRearLeg
	w rightRearLegTip
	x rightRearFoot
	y entity
	z a
	a (Lelp;Lelt;IIFFFF)V renderToBuffer
	a (Lelp;Lelt;IIFLfic;Lfic;Lfic;Lfic;Lfic;Lfic;Lfic;F)V renderSide
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon;FFFFF)V setupAnim
ftd net/minecraft/client/renderer/entity/EndermanRenderer
	a ENDERMAN_LOCATION
	i random
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/monster/EntityEnderman;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityEnderman;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/monster/EntityEnderman;FFLelp;Lfoe;I)V render
fte net/minecraft/client/renderer/entity/EndermiteRenderer
	a ENDERMITE_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityEndermite;)F getFlipDegrees
	b (Lnet/minecraft/world/entity/monster/EntityEndermite;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	c (Lnet/minecraft/world/entity/EntityLiving;)F getFlipDegrees
ftf net/minecraft/client/renderer/entity/EntityRenderDispatcher
	a textureManager
	b camera
	c crosshairPickEntity
	d options
	e SHADOW_RENDER_TYPE
	f MAX_SHADOW_RADIUS
	g SHADOW_POWER_FALLOFF_Y
	h renderers
	i playerRenderers
	j level
	k cameraOrientation
	l itemRenderer
	m blockRenderDispatcher
	n itemInHandRenderer
	o font
	p entityModels
	q shouldRenderShadow
	r renderHitBoxes
	a ()Z shouldRenderHitBoxes
	a (DDD)D distanceToSqr
	a (Lelp$a;Lelt;FFFFF)V fireVertex
	a (Lelp$a;Lelt;FFFFFF)V shadowVertex
	a (Lelp$a;Lelt;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;DDDFF)V renderBlockShadow
	a (Lelp;Lelt;Lnet/minecraft/world/entity/Entity;F)V renderHitbox
	a (Lelp;Lfoe;Lnet/minecraft/world/entity/Entity;)V renderFlame
	a (Lelp;Lfoe;Lnet/minecraft/world/entity/Entity;FFLnet/minecraft/world/level/IWorldReader;F)V renderShadow
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/world/entity/Entity;)Lftg; getRenderer
	a (Lnet/minecraft/world/entity/Entity;DDDFFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/Entity;F)I getPackedLightCoords
	a (Lnet/minecraft/world/entity/Entity;Lfrg;DDD)Z shouldRender
	a (Lnet/minecraft/world/level/World;)V setLevel
	a (Lnet/minecraft/world/level/World;Leqg;Lnet/minecraft/world/entity/Entity;)V prepare
	a (Lorg/joml/Quaternionf;)V overrideCameraOrientation
	a (Z)V setRenderShadow
	b ()Lorg/joml/Quaternionf; cameraOrientation
	b (Lnet/minecraft/world/entity/Entity;)D distanceToSqr
	b (Z)V setRenderHitBoxes
	d ()Lfoa; getItemInHandRenderer
ftg net/minecraft/client/renderer/entity/EntityRenderer
	a font
	b NAMETAG_SCALE
	c entityRenderDispatcher
	d shadowRadius
	e shadowStrength
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lfrg;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/IChatBaseComponent;Lelp;Lfoe;I)V renderNameTag
	b ()Lesd; getFont
	b (Lnet/minecraft/world/entity/Entity;)Z shouldShowName
	b (Lnet/minecraft/world/entity/Entity;F)I getPackedLightCoords
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getSkyLightLevel
fth net/minecraft/client/renderer/entity/EntityRendererProvider
fth$a net/minecraft/client/renderer/entity/EntityRendererProvider$Context
	a entityRenderDispatcher
	b itemRenderer
	c blockRenderDispatcher
	d itemInHandRenderer
	e resourceManager
	f modelSet
	g font
	a ()Lftf; getEntityRenderDispatcher
	a (Lfia;)Lfic; bakeLayer
	b ()Lfuf; getItemRenderer
	c ()Lfoy; getBlockRenderDispatcher
	d ()Lfoa; getItemInHandRenderer
	e ()Lnet/minecraft/server/packs/resources/IResourceManager; getResourceManager
	f ()Lfhy; getModelSet
	g ()Lgbl; getModelManager
	h ()Lesd; getFont
fti net/minecraft/client/renderer/entity/EntityRenderers
	a LOGGER
	b PROVIDERS
	c PLAYER_PROVIDERS
	a ()Z validateRegistrations
	a (Lfth$a;)Ljava/util/Map; createEntityRenderers
	a (Lnet/minecraft/world/entity/EntityTypes;Lfth;)V register
	b (Lfth$a;)Ljava/util/Map; createPlayerRenderers
ftj net/minecraft/client/renderer/entity/EvokerFangsRenderer
	a TEXTURE_LOCATION
	f model
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityEvokerFangs;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityEvokerFangs;FFLelp;Lfoe;I)V render
ftk net/minecraft/client/renderer/entity/EvokerRenderer
	a EVOKER_ILLAGER
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityIllagerWizard;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
ftl net/minecraft/client/renderer/entity/ExperienceOrbRenderer
	a EXPERIENCE_ORB_LOCATION
	f RENDER_TYPE
	a (Lelt;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FFIIIFFI)V vertex
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/EntityExperienceOrb;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityExperienceOrb;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityExperienceOrb;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
ftm net/minecraft/client/renderer/entity/FallingBlockRenderer
	a dispatcher
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/item/EntityFallingBlock;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/item/EntityFallingBlock;FFLelp;Lfoe;I)V render
ftn net/minecraft/client/renderer/entity/FireworkEntityRenderer
	a itemRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityFireworks;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityFireworks;FFLelp;Lfoe;I)V render
fto net/minecraft/client/renderer/entity/FishingHookRenderer
	a TEXTURE_LOCATION
	f RENDER_TYPE
	g VIEW_BOBBING_SCALE
	a (FFFLelt;Lelp$a;FF)V stringVertex
	a (II)F fraction
	a (Lelt;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;IFIII)V vertex
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityFishingHook;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityFishingHook;FFLelp;Lfoe;I)V render
ftp net/minecraft/client/renderer/entity/FoxRenderer
	a RED_FOX_TEXTURE
	i RED_FOX_SLEEP_TEXTURE
	j SNOW_FOX_TEXTURE
	k SNOW_FOX_SLEEP_TEXTURE
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntityFox;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityFox;Lelp;FFF)V setupRotations
ftq net/minecraft/client/renderer/entity/FrogRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/frog/Frog;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
ftr net/minecraft/client/renderer/entity/GhastRenderer
	a GHAST_LOCATION
	i GHAST_SHOOTING_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityGhast;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityGhast;Lelp;F)V scale
fts net/minecraft/client/renderer/entity/GiantMobRenderer
	a ZOMBIE_LOCATION
	i scale
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityGiantZombie;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityGiantZombie;Lelp;F)V scale
ftt net/minecraft/client/renderer/entity/GlowSquidRenderer
	a GLOW_SQUID_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/GlowSquid;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/GlowSquid;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/animal/EntitySquid;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
ftu net/minecraft/client/renderer/entity/GoatRenderer
	a GOAT_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/goat/Goat;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
ftv net/minecraft/client/renderer/entity/GuardianRenderer
	a GUARDIAN_LOCATION
	i GUARDIAN_BEAM_LOCATION
	j BEAM_RENDER_TYPE
	a (Lelt;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FFFIIIFF)V vertex
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lfrg;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;Lfrg;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/EntityLiving;DF)Lnet/minecraft/world/phys/Vec3D; getPosition
	a (Lnet/minecraft/world/entity/EntityLiving;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/monster/EntityGuardian;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityGuardian;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/monster/EntityGuardian;Lfrg;DDD)Z shouldRender
ftw net/minecraft/client/renderer/entity/HoglinRenderer
	a HOGLIN_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isShaking
	a (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Z isShaking
ftx net/minecraft/client/renderer/entity/HorseRenderer
	a LOCATION_BY_VARIANT
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorse;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fty net/minecraft/client/renderer/entity/HumanoidMobRenderer
ftz net/minecraft/client/renderer/entity/HuskRenderer
	a HUSK_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityZombie;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityZombie;Lelp;F)V scale
fua net/minecraft/client/renderer/entity/IllagerRenderer
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityIllagerAbstract;Lelp;F)V scale
fub net/minecraft/client/renderer/entity/IllusionerRenderer
	a ILLUSIONER
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/monster/EntityIllagerIllusioner;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityIllagerIllusioner;FFLelp;Lfoe;I)V render
	b (Lnet/minecraft/world/entity/monster/EntityIllagerIllusioner;)Z isBodyVisible
	d (Lnet/minecraft/world/entity/EntityLiving;)Z isBodyVisible
fuc net/minecraft/client/renderer/entity/IronGolemRenderer
	a GOLEM_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntityIronGolem;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityIronGolem;Lelp;FFF)V setupRotations
fud net/minecraft/client/renderer/entity/ItemEntityRenderer
	a ITEM_BUNDLE_OFFSET_SCALE
	f ITEM_COUNT_FOR_5_BUNDLE
	g ITEM_COUNT_FOR_4_BUNDLE
	h ITEM_COUNT_FOR_3_BUNDLE
	i ITEM_COUNT_FOR_2_BUNDLE
	j FLAT_ITEM_BUNDLE_OFFSET_X
	k FLAT_ITEM_BUNDLE_OFFSET_Y
	l FLAT_ITEM_BUNDLE_OFFSET_Z
	m itemRenderer
	n random
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/item/EntityItem;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/item/EntityItem;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/item/ItemStack;)I getRenderAmount
fue net/minecraft/client/renderer/entity/ItemFrameRenderer
	a GLOW_FRAME_BRIGHTNESS
	f BRIGHT_MAP_LIGHT_ADJUSTMENT
	g FRAME_LOCATION
	h MAP_FRAME_LOCATION
	i GLOW_FRAME_LOCATION
	j GLOW_MAP_FRAME_LOCATION
	k itemRenderer
	l blockRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/IChatBaseComponent;Lelp;Lfoe;I)V renderNameTag
	a (Lnet/minecraft/world/entity/decoration/EntityItemFrame;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/decoration/EntityItemFrame;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/decoration/EntityItemFrame;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/decoration/EntityItemFrame;II)I getLightVal
	a (Lnet/minecraft/world/entity/decoration/EntityItemFrame;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/decoration/EntityItemFrame;Lnet/minecraft/network/chat/IChatBaseComponent;Lelp;Lfoe;I)V renderNameTag
	a (Lnet/minecraft/world/entity/decoration/EntityItemFrame;Lnet/minecraft/world/item/ItemStack;)Lgbm; getFrameModelResourceLoc
	b (Lnet/minecraft/world/entity/Entity;)Z shouldShowName
	b (Lnet/minecraft/world/entity/decoration/EntityItemFrame;)Z shouldShowName
fuf net/minecraft/client/renderer/entity/ItemRenderer
	a ENCHANTED_GLINT_ENTITY
	b ENCHANTED_GLINT_ITEM
	c GUI_SLOT_CENTER_X
	d GUI_SLOT_CENTER_Y
	e ITEM_COUNT_BLIT_OFFSET
	f COMPASS_FOIL_UI_SCALE
	g COMPASS_FOIL_FIRST_PERSON_SCALE
	h COMPASS_FOIL_TEXTURE_SCALE
	i TRIDENT_IN_HAND_MODEL
	j SPYGLASS_IN_HAND_MODEL
	k IGNORED
	l TRIDENT_MODEL
	m SPYGLASS_MODEL
	n minecraft
	o itemModelShaper
	p textureManager
	q itemColors
	r blockEntityRenderer
	a ()Lfob; getItemModelShaper
	a (Lelp;Lelt;Ljava/util/List;Lnet/minecraft/world/item/ItemStack;II)V renderQuadList
	a (Lfoe;Lfom;Lelp$a;)Lelt; getCompassFoilBuffer
	a (Lfoe;Lfom;ZZ)Lelt; getArmorFoilBuffer
	a (Lgbf;Lnet/minecraft/world/item/ItemStack;IILelp;Lelt;)V renderModelLists
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLelp;Lfoe;Lnet/minecraft/world/level/World;III)V renderStatic
	a (Lnet/minecraft/world/item/ItemStack;)Z hasAnimatedTexture
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;IILelp;Lfoe;Lnet/minecraft/world/level/World;I)V renderStatic
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLelp;Lfoe;IILgbf;)V render
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)Lgbf; getModel
	b (Lfoe;Lfom;Lelp$a;)Lelt; getCompassFoilBufferDirect
	b (Lfoe;Lfom;ZZ)Lelt; getFoilBuffer
	c (Lfoe;Lfom;ZZ)Lelt; getFoilBufferDirect
fug net/minecraft/client/renderer/entity/LeashKnotRenderer
	a KNOT_LOCATION
	f model
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/decoration/EntityLeash;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/decoration/EntityLeash;FFLelp;Lfoe;I)V render
fuh net/minecraft/client/renderer/entity/LightningBoltRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLightning;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLightning;FFLelp;Lfoe;I)V render
	a (Lorg/joml/Matrix4f;Lelt;FFIFFFFFFFZZZZ)V quad
fui net/minecraft/client/renderer/entity/LivingEntityRenderer
	a LOGGER
	f model
	g layers
	h EYE_BED_OFFSET
	a ()Lffd; getModel
	a (Lfxp;)Z addLayer
	a (Lnet/minecraft/core/EnumDirection;)F sleepDirectionToRotation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isShaking
	a (Lnet/minecraft/world/entity/EntityLiving;F)F getBob
	a (Lnet/minecraft/world/entity/EntityLiving;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/EntityLiving;ZZZ)Lfom; getRenderType
	b (Lnet/minecraft/world/entity/Entity;)Z shouldShowName
	b (Lnet/minecraft/world/entity/EntityLiving;)Z shouldShowName
	b (Lnet/minecraft/world/entity/EntityLiving;F)F getWhiteOverlayProgress
	c (Lnet/minecraft/world/entity/EntityLiving;)F getFlipDegrees
	c (Lnet/minecraft/world/entity/EntityLiving;F)I getOverlayCoords
	d (Lnet/minecraft/world/entity/EntityLiving;)Z isBodyVisible
	d (Lnet/minecraft/world/entity/EntityLiving;F)F getAttackAnim
	e (Lnet/minecraft/world/entity/EntityLiving;)Z isEntityUpsideDown
fuj net/minecraft/client/renderer/entity/LlamaRenderer
	a CREAMY
	i WHITE
	j BROWN
	k GRAY
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/horse/EntityLlama;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fuk net/minecraft/client/renderer/entity/LlamaSpitRenderer
	a LLAMA_SPIT_LOCATION
	f model
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityLlamaSpit;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityLlamaSpit;FFLelp;Lfoe;I)V render
ful net/minecraft/client/renderer/entity/MagmaCubeRenderer
	a MAGMACUBE_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityMagmaCube;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityMagmaCube;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/monster/EntityMagmaCube;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityMagmaCube;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fum net/minecraft/client/renderer/entity/MinecartRenderer
	a model
	f MINECART_LOCATION
	g blockRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract;FLnet/minecraft/world/level/block/state/IBlockData;Lelp;Lfoe;I)V renderMinecartContents
fun net/minecraft/client/renderer/entity/MobRenderer
	h LEASH_RENDER_STEPS
	a (Lelt;Lorg/joml/Matrix4f;FFFIIIIFFFFIZ)V addVertexPair
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lfrg;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/EntityInsentient;)Z shouldShowName
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FLelp;Lfoe;Lnet/minecraft/world/entity/Entity;)V renderLeash
	a (Lnet/minecraft/world/entity/EntityInsentient;Lfrg;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/EntityLiving;FFLelp;Lfoe;I)V render
	b (Lnet/minecraft/world/entity/Entity;)Z shouldShowName
	b (Lnet/minecraft/world/entity/EntityLiving;)Z shouldShowName
fuo net/minecraft/client/renderer/entity/MushroomCowRenderer
	a TEXTURES
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityMushroomCow;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fup net/minecraft/client/renderer/entity/NoopRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fuq net/minecraft/client/renderer/entity/OcelotRenderer
	a CAT_OCELOT_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityOcelot;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fur net/minecraft/client/renderer/entity/PaintingRenderer
	a (Lelp;Lelt;Lnet/minecraft/world/entity/decoration/EntityPainting;IILfze;Lfze;)V renderPainting
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/decoration/EntityPainting;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/decoration/EntityPainting;FFLelp;Lfoe;I)V render
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lelt;FFFFFIIII)V vertex
fus net/minecraft/client/renderer/entity/PandaRenderer
	a TEXTURES
	a (FFIFF)F getAngle
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntityPanda;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityPanda;Lelp;FFF)V setupRotations
fut net/minecraft/client/renderer/entity/ParrotRenderer
	a RED_BLUE
	i BLUE
	j GREEN
	k YELLOW_BLUE
	l GREY
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;F)F getBob
	a (Lnet/minecraft/world/entity/animal/EntityParrot$Variant;)Lnet/minecraft/resources/MinecraftKey; getVariantTexture
	a (Lnet/minecraft/world/entity/animal/EntityParrot;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityParrot;F)F getBob
fuu net/minecraft/client/renderer/entity/PhantomRenderer
	a PHANTOM_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/monster/EntityPhantom;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityPhantom;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityPhantom;Lelp;FFF)V setupRotations
fuv net/minecraft/client/renderer/entity/PigRenderer
	a PIG_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityPig;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fuw net/minecraft/client/renderer/entity/PiglinRenderer
	a TEXTURES
	i PIGLIN_CUSTOM_HEAD_SCALE
	a (Lfhy;Lfia;Z)Lfgh; createModel
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isShaking
	b (Lnet/minecraft/world/entity/EntityInsentient;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	c (Lnet/minecraft/world/entity/EntityInsentient;)Z isShaking
fux net/minecraft/client/renderer/entity/PillagerRenderer
	a PILLAGER
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityPillager;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fuy net/minecraft/client/renderer/entity/PolarBearRenderer
	a BEAR_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/animal/EntityPolarBear;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityPolarBear;Lelp;F)V scale
fuz net/minecraft/client/renderer/entity/PufferfishRenderer
	a PUFFER_LOCATION
	i puffStateO
	j small
	k mid
	l big
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntityPufferFish;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityPufferFish;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/animal/EntityPufferFish;Lelp;FFF)V setupRotations
fv$a net/minecraft/commands/arguments/item/FunctionArgument$Result
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; unwrap
fva net/minecraft/client/renderer/entity/RabbitRenderer
	a RABBIT_BROWN_LOCATION
	i RABBIT_WHITE_LOCATION
	j RABBIT_BLACK_LOCATION
	k RABBIT_GOLD_LOCATION
	l RABBIT_SALT_LOCATION
	m RABBIT_WHITE_SPLOTCHED_LOCATION
	n RABBIT_TOAST_LOCATION
	o RABBIT_EVIL_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityRabbit;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fvb net/minecraft/client/renderer/entity/RavagerRenderer
	a TEXTURE_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityRavager;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fvc net/minecraft/client/renderer/entity/RenderLayerParent
	a ()Lffd; getModel
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fvd net/minecraft/client/renderer/entity/SalmonRenderer
	a SALMON_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntitySalmon;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntitySalmon;Lelp;FFF)V setupRotations
fve net/minecraft/client/renderer/entity/SheepRenderer
	a SHEEP_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntitySheep;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fvf net/minecraft/client/renderer/entity/ShulkerBulletRenderer
	a TEXTURE_LOCATION
	f RENDER_TYPE
	g model
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/projectile/EntityShulkerBullet;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityShulkerBullet;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityShulkerBullet;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fvg net/minecraft/client/renderer/entity/ShulkerRenderer
	a DEFAULT_TEXTURE_LOCATION
	i TEXTURE_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/Entity;Lfrg;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/EntityInsentient;Lfrg;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/monster/EntityShulker;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityShulker;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/monster/EntityShulker;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/monster/EntityShulker;Lfrg;DDD)Z shouldRender
	a (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fvh net/minecraft/client/renderer/entity/SilverfishRenderer
	a SILVERFISH_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntitySilverfish;)F getFlipDegrees
	b (Lnet/minecraft/world/entity/monster/EntitySilverfish;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	c (Lnet/minecraft/world/entity/EntityLiving;)F getFlipDegrees
fvi net/minecraft/client/renderer/entity/SkeletonRenderer
	a SKELETON_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isShaking
	a (Lnet/minecraft/world/entity/monster/EntitySkeletonAbstract;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/world/entity/monster/EntitySkeletonAbstract;)Z isShaking
fvj net/minecraft/client/renderer/entity/SlimeRenderer
	a SLIME_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntitySlime;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntitySlime;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/monster/EntitySlime;Lelp;F)V scale
fvk net/minecraft/client/renderer/entity/SnifferRenderer
	a SNIFFER_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fvl net/minecraft/client/renderer/entity/SnowGolemRenderer
	a SNOW_GOLEM_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntitySnowman;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fvm net/minecraft/client/renderer/entity/SpectralArrowRenderer
	a SPECTRAL_ARROW_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntitySpectralArrow;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fvn net/minecraft/client/renderer/entity/SpiderRenderer
	a SPIDER_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntitySpider;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/world/entity/monster/EntitySpider;)F getFlipDegrees
	c (Lnet/minecraft/world/entity/EntityLiving;)F getFlipDegrees
fvo net/minecraft/client/renderer/entity/SquidRenderer
	a SQUID_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;F)F getBob
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntitySquid;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntitySquid;F)F getBob
	a (Lnet/minecraft/world/entity/animal/EntitySquid;Lelp;FFF)V setupRotations
fvp net/minecraft/client/renderer/entity/StrayRenderer
	a STRAY_SKELETON_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntitySkeletonAbstract;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fvq net/minecraft/client/renderer/entity/StriderRenderer
	a STRIDER_LOCATION
	i COLD_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isShaking
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityStrider;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityStrider;Lelp;F)V scale
	b (Lnet/minecraft/world/entity/monster/EntityStrider;)Z isShaking
fvr net/minecraft/client/renderer/entity/TadpoleRenderer
	a TADPOLE_TEXTURE
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/frog/Tadpole;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fvs net/minecraft/client/renderer/entity/ThrownItemRenderer
	a MIN_CAMERA_DISTANCE_SQUARED
	f itemRenderer
	g scale
	h fullBright
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fvt net/minecraft/client/renderer/entity/ThrownTridentRenderer
	a TRIDENT_LOCATION
	f model
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityThrownTrident;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityThrownTrident;FFLelp;Lfoe;I)V render
fvu net/minecraft/client/renderer/entity/TippableArrowRenderer
	a NORMAL_ARROW_LOCATION
	f TIPPED_ARROW_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityTippedArrow;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fvv net/minecraft/client/renderer/entity/TntMinecartRenderer
	f blockRenderer
	a (Lfoy;Lnet/minecraft/world/level/block/state/IBlockData;Lelp;Lfoe;IZ)V renderWhiteSolidBlock
	a (Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract;FLnet/minecraft/world/level/block/state/IBlockData;Lelp;Lfoe;I)V renderMinecartContents
	a (Lnet/minecraft/world/entity/vehicle/EntityMinecartTNT;FLnet/minecraft/world/level/block/state/IBlockData;Lelp;Lfoe;I)V renderMinecartContents
fvw net/minecraft/client/renderer/entity/TntRenderer
	a blockRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/item/EntityTNTPrimed;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/item/EntityTNTPrimed;FFLelp;Lfoe;I)V render
fvx net/minecraft/client/renderer/entity/TropicalFishRenderer
	a modelA
	i modelB
	j MODEL_A_TEXTURE
	k MODEL_B_TEXTURE
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntityTropicalFish;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityTropicalFish;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/animal/EntityTropicalFish;Lelp;FFF)V setupRotations
fvy net/minecraft/client/renderer/entity/TurtleRenderer
	a TURTLE_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/animal/EntityTurtle;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityTurtle;FFLelp;Lfoe;I)V render
fvz net/minecraft/client/renderer/entity/UndeadHorseRenderer
	a MAP
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fwa net/minecraft/client/renderer/entity/VexRenderer
	a VEX_LOCATION
	i VEX_CHARGING_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/monster/EntityVex;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityVex;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fwb net/minecraft/client/renderer/entity/VillagerRenderer
	a VILLAGER_BASE_SKIN
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Lelp;F)V scale
fwc net/minecraft/client/renderer/entity/VindicatorRenderer
	a VINDICATOR
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityVindicator;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fwd net/minecraft/client/renderer/entity/WanderingTraderRenderer
	a VILLAGER_BASE_SKIN
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/npc/EntityVillagerTrader;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/npc/EntityVillagerTrader;Lelp;F)V scale
fwe net/minecraft/client/renderer/entity/WardenRenderer
	a TEXTURE
	i BIOLUMINESCENT_LAYER_TEXTURE
	j HEART_TEXTURE
	k PULSATING_SPOTS_TEXTURE_1
	l PULSATING_SPOTS_TEXTURE_2
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/warden/Warden;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fwf net/minecraft/client/renderer/entity/WitchRenderer
	a WITCH_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityWitch;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityWitch;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/monster/EntityWitch;Lelp;F)V scale
fwg net/minecraft/client/renderer/entity/WitherBossRenderer
	a WITHER_INVULNERABLE_LOCATION
	i WITHER_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/boss/wither/EntityWither;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/boss/wither/EntityWither;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/boss/wither/EntityWither;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fwh net/minecraft/client/renderer/entity/WitherSkeletonRenderer
	a WITHER_SKELETON_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntitySkeletonAbstract;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntitySkeletonAbstract;Lelp;F)V scale
fwi net/minecraft/client/renderer/entity/WitherSkullRenderer
	a WITHER_INVULNERABLE_LOCATION
	f WITHER_LOCATION
	g model
	a ()Lfii; createSkullLayer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/projectile/EntityWitherSkull;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityWitherSkull;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityWitherSkull;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fwj net/minecraft/client/renderer/entity/WolfRenderer
	a WOLF_LOCATION
	i WOLF_TAME_LOCATION
	j WOLF_ANGRY_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;F)F getBob
	a (Lnet/minecraft/world/entity/EntityLiving;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/animal/EntityWolf;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityWolf;F)F getBob
	a (Lnet/minecraft/world/entity/animal/EntityWolf;FFLelp;Lfoe;I)V render
fwk net/minecraft/client/renderer/entity/ZoglinRenderer
	a ZOGLIN_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityZoglin;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fwl net/minecraft/client/renderer/entity/ZombieRenderer
fwm net/minecraft/client/renderer/entity/ZombieVillagerRenderer
	a ZOMBIE_VILLAGER_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isShaking
	a (Lnet/minecraft/world/entity/monster/EntityZombieVillager;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/world/entity/monster/EntityZombieVillager;)Z isShaking
fwn net/minecraft/client/renderer/entity/layers/ArrowLayer
	a dispatcher
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFF)V renderStuckItem
	a (Lnet/minecraft/world/entity/EntityLiving;)I numStuck
fwo net/minecraft/client/renderer/entity/layers/BeeStingerLayer
	a BEE_STINGER_LOCATION
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFF)V renderStuckItem
	a (Lelt;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FIFFI)V vertex
	a (Lnet/minecraft/world/entity/EntityLiving;)I numStuck
fwp net/minecraft/client/renderer/entity/layers/CapeLayer
	a (Lelp;Lfoe;ILfnd;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
fwq net/minecraft/client/renderer/entity/layers/CarriedBlockLayer
	a blockRenderer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/monster/EntityEnderman;FFFFFF)V render
fwr net/minecraft/client/renderer/entity/layers/CatCollarLayer
	a CAT_COLLAR_LOCATION
	b catModel
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/animal/EntityCat;FFFFFF)V render
fws net/minecraft/client/renderer/entity/layers/CreeperPowerLayer
	a POWER_LOCATION
	b model
	a ()Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (F)F xOffset
	b ()Lffd; model
fwt net/minecraft/client/renderer/entity/layers/CrossedArmsItemLayer
	a itemInHandRenderer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
fwu net/minecraft/client/renderer/entity/layers/CustomHeadLayer
	a scaleX
	b scaleY
	c scaleZ
	d skullModels
	e itemInHandRenderer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
	a (Lelp;Z)V translateToHead
fwv net/minecraft/client/renderer/entity/layers/Deadmau5EarsLayer
	a (Lelp;Lfoe;ILfnd;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
fww net/minecraft/client/renderer/entity/layers/DolphinCarryingItemLayer
	a itemInHandRenderer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/animal/EntityDolphin;FFFFFF)V render
fwx net/minecraft/client/renderer/entity/layers/DrownedOuterLayer
	a DROWNED_OUTER_LAYER_LOCATION
	b model
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/monster/EntityDrowned;FFFFFF)V render
fwy net/minecraft/client/renderer/entity/layers/ElytraLayer
	a WINGS_LOCATION
	b elytraModel
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
fwz net/minecraft/client/renderer/entity/layers/EnderEyesLayer
	a ENDERMAN_EYES
	a ()Lfom; renderType
fxa net/minecraft/client/renderer/entity/layers/EnergySwirlLayer
	a ()Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (F)F xOffset
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	b ()Lffd; model
fxb net/minecraft/client/renderer/entity/layers/EyesLayer
	a ()Lfom; renderType
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
fxc net/minecraft/client/renderer/entity/layers/FoxHeldItemLayer
	a itemInHandRenderer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/animal/EntityFox;FFFFFF)V render
fxd net/minecraft/client/renderer/entity/layers/HorseArmorLayer
	a model
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/animal/horse/EntityHorse;FFFFFF)V render
fxe net/minecraft/client/renderer/entity/layers/HorseMarkingLayer
	a LOCATION_BY_MARKINGS
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/animal/horse/EntityHorse;FFFFFF)V render
fxf net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer
	a ARMOR_LOCATION_CACHE
	b innerModel
	c outerModel
	d armorTrimAtlas
	a (Lelp;Lfoe;ILffq;)V renderGlint
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/item/ItemArmor;Lffq;ZFFFLjava/lang/String;)V renderModel
	a (Lelp;Lfoe;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EnumItemSlot;ILffq;)V renderArmorPiece
	a (Lffq;Lnet/minecraft/world/entity/EnumItemSlot;)V setPartVisibility
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Lffq; getArmorModel
	a (Lnet/minecraft/world/item/ArmorMaterial;Lelp;Lfoe;ILnet/minecraft/world/item/armortrim/ArmorTrim;Lffq;Z)V renderTrim
	a (Lnet/minecraft/world/item/ItemArmor;ZLjava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getArmorLocation
	b (Lnet/minecraft/world/entity/EnumItemSlot;)Z usesInnerModel
fxg net/minecraft/client/renderer/entity/layers/IronGolemCrackinessLayer
	a resourceLocations
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/animal/EntityIronGolem;FFFFFF)V render
fxh net/minecraft/client/renderer/entity/layers/IronGolemFlowerLayer
	a blockRenderer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/animal/EntityIronGolem;FFFFFF)V render
fxi net/minecraft/client/renderer/entity/layers/ItemInHandLayer
	a itemInHandRenderer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lnet/minecraft/world/entity/EnumMainHand;Lelp;Lfoe;I)V renderArmWithItem
fxj net/minecraft/client/renderer/entity/layers/LlamaDecorLayer
	a TEXTURE_LOCATION
	b TRADER_LLAMA
	c model
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/animal/horse/EntityLlama;FFFFFF)V render
fxk net/minecraft/client/renderer/entity/layers/MushroomCowMushroomLayer
	a blockRenderer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/animal/EntityMushroomCow;FFFFFF)V render
	a (Lelp;Lfoe;IZLnet/minecraft/world/level/block/state/IBlockData;ILgbf;)V renderMushroomBlock
fxl net/minecraft/client/renderer/entity/layers/PandaHoldsItemLayer
	a itemInHandRenderer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/animal/EntityPanda;FFFFFF)V render
fxm net/minecraft/client/renderer/entity/layers/ParrotOnShoulderLayer
	a model
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/player/EntityHuman;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/player/EntityHuman;FFFFZ)V render
fxn net/minecraft/client/renderer/entity/layers/PhantomEyesLayer
	a PHANTOM_EYES
	a ()Lfom; renderType
fxo net/minecraft/client/renderer/entity/layers/PlayerItemInHandLayer
	a itemInHandRenderer
	b X_ROT_MIN
	c X_ROT_MAX
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EnumMainHand;Lelp;Lfoe;I)V renderArmWithSpyglass
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lnet/minecraft/world/entity/EnumMainHand;Lelp;Lfoe;I)V renderArmWithItem
fxp net/minecraft/client/renderer/entity/layers/RenderLayer
	a renderer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lffd;Lffd;Lnet/minecraft/resources/MinecraftKey;Lelp;Lfoe;ILnet/minecraft/world/entity/EntityLiving;FFFFFFFFF)V coloredCutoutModelCopyLayerRender
	a (Lffd;Lnet/minecraft/resources/MinecraftKey;Lelp;Lfoe;ILnet/minecraft/world/entity/EntityLiving;FFF)V renderColoredCutoutModel
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	c ()Lffd; getParentModel
fxq net/minecraft/client/renderer/entity/layers/SaddleLayer
	a textureLocation
	b model
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
fxr net/minecraft/client/renderer/entity/layers/SheepFurLayer
	a SHEEP_FUR_LOCATION
	b model
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/animal/EntitySheep;FFFFFF)V render
fxs net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/monster/EntityShulker;FFFFFF)V render
fxt net/minecraft/client/renderer/entity/layers/SlimeOuterLayer
	a model
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
fxu net/minecraft/client/renderer/entity/layers/SnowGolemHeadLayer
	a blockRenderer
	b itemRenderer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/animal/EntitySnowman;FFFFFF)V render
fxv net/minecraft/client/renderer/entity/layers/SpiderEyesLayer
	a SPIDER_EYES
	a ()Lfom; renderType
fxw net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer
	a TEXTURE
	b BOX
	c box
	a ()Lfii; createLayer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
fxx net/minecraft/client/renderer/entity/layers/StrayClothingLayer
	a STRAY_CLOTHES_LOCATION
	b layerModel
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/EntityInsentient;FFFFFF)V render
fxy net/minecraft/client/renderer/entity/layers/StuckInBodyLayer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFF)V renderStuckItem
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
	a (Lnet/minecraft/world/entity/EntityLiving;)I numStuck
fxz net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer
	a KOB_TEXTURE
	b SUNSTREAK_TEXTURE
	c SNOOPER_TEXTURE
	d DASHER_TEXTURE
	e BRINELY_TEXTURE
	f SPOTTY_TEXTURE
	g FLOPPER_TEXTURE
	h STRIPEY_TEXTURE
	i GLITTER_TEXTURE
	j BLOCKFISH_TEXTURE
	k BETTY_TEXTURE
	l CLAYFISH_TEXTURE
	m modelA
	n modelB
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/animal/EntityTropicalFish;FFFFFF)V render
fy$a net/minecraft/commands/arguments/item/ItemParser$ItemResult
	a item
	b nbt
	a ()Lnet/minecraft/core/Holder; item
	b ()Lnet/minecraft/nbt/NBTTagCompound; nbt
fy$b net/minecraft/commands/arguments/item/ItemParser$TagResult
	a tag
	b nbt
	a ()Lnet/minecraft/core/HolderSet; tag
	b ()Lnet/minecraft/nbt/NBTTagCompound; nbt
fya net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer
	a LEVEL_LOCATIONS
	b typeHatCache
	c professionHatCache
	d resourceManager
	e path
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lnet/minecraft/core/RegistryBlocks;Ljava/lang/Object;)Lgas$a; getHatData
	a (Ljava/lang/String;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/MinecraftKey; getResourceLocation
fyb net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer
	a texture
	b alphaFunction
	c drawSelector
	a ()V onlyDrawSelectedParts
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/monster/warden/Warden;FFFFFF)V render
	b ()V resetDrawForAllParts
fyb$a net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer$AlphaFunction
fyb$b net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer$DrawSelector
fyc net/minecraft/client/renderer/entity/layers/WitchItemLayer
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
fyd net/minecraft/client/renderer/entity/layers/WitherArmorLayer
	a WITHER_ARMOR_LOCATION
	b model
	a ()Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (F)F xOffset
	b ()Lffd; model
fye net/minecraft/client/renderer/entity/layers/WolfCollarLayer
	a WOLF_COLLAR_LOCATION
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lelp;Lfoe;ILnet/minecraft/world/entity/animal/EntityWolf;FFFFFF)V render
fyh net/minecraft/client/renderer/entity/player/PlayerRenderer
	a (Lelp;Lfoe;ILfnd;)V renderRightHand
	a (Lelp;Lfoe;ILfnd;Lfic;Lfic;)V renderHand
	a (Lfnd;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lfnd;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lfnd;FFLelp;Lfoe;I)V render
	a (Lfnd;Lelp;F)V scale
	a (Lfnd;Lelp;FFF)V setupRotations
	a (Lfnd;Lnet/minecraft/network/chat/IChatBaseComponent;Lelp;Lfoe;I)V renderNameTag
	a (Lfnd;Lnet/minecraft/world/EnumHand;)Lffq$a; getArmPose
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/Entity;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/IChatBaseComponent;Lelp;Lfoe;I)V renderNameTag
	a (Lnet/minecraft/world/entity/EntityLiving;FFLelp;Lfoe;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;F)V scale
	a (Lnet/minecraft/world/entity/EntityLiving;Lelp;FFF)V setupRotations
	b (Lelp;Lfoe;ILfnd;)V renderLeftHand
	b (Lfnd;)V setModelProperties
fyj net/minecraft/client/renderer/item/ClampedItemPropertyFunction
fyk net/minecraft/client/renderer/item/CompassItemPropertyFunction
	a DEFAULT_ROTATION
	b compassTarget
	c wobble
	d wobbleRandom
	a (I)I hash
	a (IJ)F getRandomlySpinningRotation
	a (Lnet/minecraft/world/entity/Entity;)D getWrappedVisualRotationY
	a (Lnet/minecraft/world/entity/Entity;JLnet/minecraft/core/BlockPosition;)F getRotationTowardsCompassTarget
	a (Lnet/minecraft/world/entity/Entity;Lfix;)Lfix; tryFetchLevelIfMissing
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)D getAngleFromEntityToPos
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/GlobalPos;)Z isValidCompassTargetPos
	a (Lnet/minecraft/world/item/ItemStack;Lfix;ILnet/minecraft/world/entity/Entity;)F getCompassRotation
fyk$a net/minecraft/client/renderer/item/CompassItemPropertyFunction$CompassTarget
fyk$b net/minecraft/client/renderer/item/CompassItemPropertyFunction$CompassWobble
	a rotation
	b deltaRotation
	c lastUpdateTick
	a (J)Z shouldUpdate
	a (JD)V update
fyl net/minecraft/client/renderer/item/ItemProperties
	a GENERIC_PROPERTIES
	b TAG_CUSTOM_MODEL_DATA
	c DAMAGED
	d DAMAGE
	e PROPERTY_DAMAGED
	f PROPERTY_DAMAGE
	g PROPERTIES
	a (Lfym;)V registerCustomModelData
	a (Lnet/minecraft/resources/MinecraftKey;Lfyj;)Lfyj; registerGeneric
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/MinecraftKey;)Lfym; getProperty
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/MinecraftKey;Lfyj;)V register
fym net/minecraft/client/renderer/item/ItemPropertyFunction
fyp net/minecraft/client/renderer/texture/AbstractTexture
	a NOT_ASSIGNED
	b id
	c blur
	d mipmap
	a ()I getId
	a (Lfzf;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;Ljava/util/concurrent/Executor;)V reset
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V load
	a (ZZ)V setFilter
	b ()V releaseId
	c ()V bind
fyq net/minecraft/client/renderer/texture/Dumpable
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/nio/file/Path;)V dumpContents
fyr net/minecraft/client/renderer/texture/DynamicTexture
	e LOGGER
	f pixels
	a (Lekq;)V setPixels
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/nio/file/Path;)V dumpContents
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V load
	d ()V upload
	e ()Lekq; getPixels
fys net/minecraft/client/renderer/texture/HttpTexture
	f LOGGER
	g SKIN_WIDTH
	h SKIN_HEIGHT
	i LEGACY_SKIN_HEIGHT
	j file
	k urlString
	l processLegacySkin
	m onDownloaded
	n future
	o uploaded
	a (Lekq;)V loadCallback
	a (Lekq;IIII)V doNotchTransparencyHack
	a (Ljava/io/InputStream;)Lekq; load
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V load
	b (Lekq;)V upload
	b (Lekq;IIII)V setNoAlpha
	c (Lekq;)Lekq; processLegacySkin
fyt net/minecraft/client/renderer/texture/MipmapGenerator
	a ALPHA_CUTOUT_CUTOFF
	b POW22
	a (I)F getPow22
	a (IIIII)I gammaBlend
	a (IIIIZ)I alphaBlend
	a (Lekq;)Z hasTransparentPixel
	a ([Lekq;I)[Lekq; generateMipLevels
fyu net/minecraft/client/renderer/texture/MissingTextureAtlasSprite
	a MISSING_IMAGE_WIDTH
	b MISSING_IMAGE_HEIGHT
	c MISSING_TEXTURE_NAME
	d MISSING_TEXTURE_LOCATION
	e SPRITE_METADATA
	f missingTexture
	a ()Lfyy; create
	a (II)Lekq; generateMissingImage
	b ()Lnet/minecraft/resources/MinecraftKey; getLocation
	c ()Lfyr; getTexture
fyv net/minecraft/client/renderer/texture/OverlayTexture
	a NO_WHITE_U
	b RED_OVERLAY_V
	c WHITE_OVERLAY_V
	d NO_OVERLAY
	e SIZE
	f texture
	a ()V setupOverlayColor
	a (F)I u
	a (FZ)I pack
	a (II)I pack
	a (Z)I v
	b ()V teardownOverlayColor
fyw net/minecraft/client/renderer/texture/PreloadedTexture
	f future
	a (Lfzf;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;Ljava/util/concurrent/Executor;)V reset
	a (Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor; executor
	b (Lnet/minecraft/server/packs/resources/IResourceManager;)Lfyx$a; getTextureImage
	d ()Ljava/util/concurrent/CompletableFuture; getFuture
fyx net/minecraft/client/renderer/texture/SimpleTexture
	e location
	f LOGGER
	a (Lekq;ZZ)V doLoad
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V load
	b (Lnet/minecraft/server/packs/resources/IResourceManager;)Lfyx$a; getTextureImage
fyx$a net/minecraft/client/renderer/texture/SimpleTexture$TextureImage
	a metadata
	b image
	c exception
	a ()Lgbb; getTextureMetadata
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;)Lfyx$a; load
	b ()Lekq; getImage
	c ()V throwIfError
fyy net/minecraft/client/renderer/texture/SpriteContents
	a LOGGER
	b name
	c width
	d height
	e originalImage
	f byMipLevel
	g animatedTexture
	h metadata
	a ()I width
	a (I)V increaseMipLevel
	a (II)V uploadFirstFrame
	a (III)Z isTransparent
	a (IIII[Lekq;)V upload
	a (Lgar;IILgap;)Lfyy$a; createAnimatedTexture
	b ()I height
	c ()Lnet/minecraft/resources/MinecraftKey; name
	d ()Ljava/util/stream/IntStream; getUniqueFrames
	e ()Lfza; createTicker
	f ()Lnet/minecraft/server/packs/resources/ResourceMetadata; metadata
	g ()I getFrameCount
fyy$a net/minecraft/client/renderer/texture/SpriteContents$AnimatedTexture
	b frames
	c frameRowSize
	d interpolateFrames
	a ()Lfza; createTicker
	a (I)I getFrameX
	a (II)V uploadFirstFrame
	a (III)V uploadFrame
	b ()Ljava/util/stream/IntStream; getUniqueFrames
	b (I)I getFrameY
fyy$b net/minecraft/client/renderer/texture/SpriteContents$FrameInfo
	a index
	b time
fyy$c net/minecraft/client/renderer/texture/SpriteContents$InterpolationData
	b activeFrame
	a (DII)I mix
	a (IILfyy$d;)V uploadInterpolatedFrame
	a (Lfyy$a;IIII)I getPixel
fyy$d net/minecraft/client/renderer/texture/SpriteContents$Ticker
	b frame
	c subFrame
	d animationInfo
	e interpolationData
	a (II)V tickAndUpload
fyz net/minecraft/client/renderer/texture/SpriteLoader
	a DEFAULT_METADATA_SECTIONS
	b LOGGER
	c location
	d maxSupportedTextureSize
	e minWidth
	f minHeight
	a (Lfzb;II)Ljava/util/Map; getStitchedSprites
	a (Lfzd;)Lfyz; create
	a (Lfzh;Ljava/util/List;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; runSpriteSuppliers
	a (Ljava/util/List;ILjava/util/concurrent/Executor;)Lfyz$a; stitch
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;ILjava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; loadAndStitch
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;ILjava/util/concurrent/Executor;Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; loadAndStitch
fyz$a net/minecraft/client/renderer/texture/SpriteLoader$Preparations
	a width
	b height
	c mipLevel
	d missing
	e regions
	f readyForUpload
	a ()Ljava/util/concurrent/CompletableFuture; waitForUpload
	b ()I width
	c ()I height
	d ()I mipLevel
	e ()Lfze; missing
	f ()Ljava/util/Map; regions
	g ()Ljava/util/concurrent/CompletableFuture; readyForUpload
fz$a net/minecraft/commands/arguments/item/ItemPredicateArgument$Result
fza net/minecraft/client/renderer/texture/SpriteTicker
	a (II)V tickAndUpload
fzb net/minecraft/client/renderer/texture/Stitcher
	a HOLDER_COMPARATOR
	b mipLevel
	c texturesToBeStitched
	d storage
	e storageX
	f storageY
	g maxWidth
	h maxHeight
	a ()I getWidth
	a (II)I smallestFittingMinTexel
	a (Lfzb$a;)V registerSprite
	a (Lfzb$b;)Z addToStorage
	a (Lfzb$d;)V gatherSprites
	b ()I getHeight
	b (Lfzb$b;)Z expand
	c ()V stitch
fzb$a net/minecraft/client/renderer/texture/Stitcher$Entry
	a ()I width
	b ()I height
	c ()Lnet/minecraft/resources/MinecraftKey; name
fzb$b net/minecraft/client/renderer/texture/Stitcher$Holder
	a entry
	b width
	c height
	a ()Lfzb$a; entry
	b ()I width
	c ()I height
fzb$c net/minecraft/client/renderer/texture/Stitcher$Region
	a originX
	b originY
	c width
	d height
	e subSlots
	f holder
	a ()I getX
	a (Lfzb$b;)Z add
	a (Lfzb$d;)V walk
	b ()I getY
fzb$d net/minecraft/client/renderer/texture/Stitcher$SpriteLoader
fzc net/minecraft/client/renderer/texture/StitcherException
	a allSprites
	a ()Ljava/util/Collection; getAllSprites
fzd net/minecraft/client/renderer/texture/TextureAtlas
	e LOCATION_BLOCKS
	f LOCATION_PARTICLES
	g LOGGER
	h sprites
	i animatedTextures
	j texturesByName
	k missingSprite
	l location
	m maxSupportedTextureSize
	n width
	o height
	p mipLevel
	a (Lfyz$a;)V upload
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/Map;)V dumpSpriteNames
	a (Lnet/minecraft/resources/MinecraftKey;)Lfze; getSprite
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/nio/file/Path;)V dumpContents
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V load
	b (Lfyz$a;)V updateFilter
	d ()V cycleAnimationFrames
	e ()V tick
	f ()V clearTextureData
	g ()Lnet/minecraft/resources/MinecraftKey; location
	h ()I maxSupportedTextureSize
	i ()I getWidth
	j ()I getHeight
fze net/minecraft/client/renderer/texture/TextureAtlasSprite
	a atlasLocation
	b contents
	c x
	d y
	e u0
	f u1
	g v0
	h v1
	a ()I getX
	a (F)F getU
	a (Lelt;)Lelt; wrap
	b ()I getY
	b (F)F getUOffset
	c ()F getU0
	c (F)F getV
	d ()F getU1
	d (F)F getVOffset
	e ()Lfyy; contents
	f ()Lfze$a; createTicker
	g ()F getV0
	h ()F getV1
	i ()Lnet/minecraft/resources/MinecraftKey; atlasLocation
	j ()V uploadFirstFrame
	k ()F uvShrinkRatio
	l ()F atlasSize
fze$a net/minecraft/client/renderer/texture/TextureAtlasSprite$Ticker
	a ()V tickAndUpload
fzf net/minecraft/client/renderer/texture/TextureManager
	a INTENTIONAL_MISSING_TEXTURE
	b LOGGER
	c byPath
	d tickableTextures
	e prefixRegister
	f resourceManager
	a (Lann$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/lang/Runnable;)V execute
	a (Ljava/lang/String;Lfyr;)Lnet/minecraft/resources/MinecraftKey; register
	a (Ljava/nio/file/Path;)V dumpAllSheets
	a (Lnet/minecraft/resources/MinecraftKey;)V bindForSetup
	a (Lnet/minecraft/resources/MinecraftKey;Lfyp;)V register
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preload
	b (Ljava/nio/file/Path;)V _dumpAllSheets
	b (Lnet/minecraft/resources/MinecraftKey;)Lfyp; getTexture
	b (Lnet/minecraft/resources/MinecraftKey;Lfyp;)Lfyp; getTexture
	c (Lnet/minecraft/resources/MinecraftKey;)V release
	c (Lnet/minecraft/resources/MinecraftKey;Lfyp;)V safeClose
	d (Lnet/minecraft/resources/MinecraftKey;)V _bind
	d (Lnet/minecraft/resources/MinecraftKey;Lfyp;)Lfyp; loadTexture
	e ()V tick
fzg net/minecraft/client/renderer/texture/Tickable
	e ()V tick
fzh net/minecraft/client/renderer/texture/atlas/SpriteResourceLoader
	a LOGGER
fzi net/minecraft/client/renderer/texture/atlas/SpriteSource
	a TEXTURE_ID_CONVERTER
	a ()Lfzk; type
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lfzi$a;)V run
fzi$a net/minecraft/client/renderer/texture/atlas/SpriteSource$Output
	a (Ljava/util/function/Predicate;)V removeAll
	a (Lnet/minecraft/resources/MinecraftKey;Lfzi$b;)V add
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/server/packs/resources/IResource;)V add
fzi$b net/minecraft/client/renderer/texture/atlas/SpriteSource$SpriteSupplier
	a ()V discard
fzj net/minecraft/client/renderer/texture/atlas/SpriteSourceList
	a LOGGER
	b ATLAS_INFO_CONVERTER
	c sources
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)Ljava/util/List; list
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;)Lfzj; load
fzk net/minecraft/client/renderer/texture/atlas/SpriteSourceType
	a codec
	a ()Lcom/mojang/serialization/Codec; codec
fzl net/minecraft/client/renderer/texture/atlas/SpriteSources
	a SINGLE_FILE
	b DIRECTORY
	c FILTER
	d UNSTITCHER
	e PALETTED_PERMUTATIONS
	f TYPE_CODEC
	g CODEC
	h FILE_CODEC
	i TYPES
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lfzk; register
fzn net/minecraft/client/renderer/texture/atlas/sources/DirectoryLister
	b CODEC
	c sourcePath
	d idPrefix
	a ()Lfzk; type
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lfzi$a;)V run
fzo net/minecraft/client/renderer/texture/atlas/sources/LazyLoadedImage
	a id
	b resource
	c image
	d referenceCount
	a ()Lekq; get
	b ()V release
fzp net/minecraft/client/renderer/texture/atlas/sources/PalettedPermutations
	b CODEC
	c LOGGER
	d textures
	e permutations
	f paletteKey
	a ()Lfzk; type
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lfzi$a;)V run
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;)[I loadPaletteEntryFromImage
	a ([I[I)Ljava/util/function/IntUnaryOperator; createPaletteMapping
fzp$a net/minecraft/client/renderer/texture/atlas/sources/PalettedPermutations$PalettedSpriteSupplier
	a baseImage
	b palette
	c permutationLocation
	a ()V discard
	a (Lfzh;)Lfyy; apply
	b ()Lfzo; baseImage
	c ()Ljava/util/function/Supplier; palette
	d ()Lnet/minecraft/resources/MinecraftKey; permutationLocation
fzq net/minecraft/client/renderer/texture/atlas/sources/SingleFile
	b CODEC
	c LOGGER
	d resourceId
	e spriteId
	a ()Lfzk; type
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lfzi$a;)V run
fzr net/minecraft/client/renderer/texture/atlas/sources/SourceFilter
	b CODEC
	c filter
	a ()Lfzk; type
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lfzi$a;)V run
fzs net/minecraft/client/renderer/texture/atlas/sources/Unstitcher
	b CODEC
	c LOGGER
	d resource
	e regions
	f xDivisor
	g yDivisor
	a ()Lfzk; type
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lfzi$a;)V run
fzs$a net/minecraft/client/renderer/texture/atlas/sources/Unstitcher$Region
	a CODEC
	b sprite
	c x
	d y
	e width
	f height
	a ()Lnet/minecraft/resources/MinecraftKey; sprite
	b ()D x
	c ()D y
	d ()D width
	e ()D height
fzs$b net/minecraft/client/renderer/texture/atlas/sources/Unstitcher$RegionInstance
	a image
	b region
	c xDivisor
	d yDivisor
	a ()V discard
	a (Lfzh;)Lfyy; apply
fzv net/minecraft/client/resources/ClientPackSource
	b HIGH_CONTRAST_PACK
	c VERSION_METADATA_SECTION
	d BUILT_IN_METADATA
	e VANILLA_NAME
	f SPECIAL_PACK_NAMES
	g PACKS_DIR
	h externalAssetDir
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; getPackTitle
	a (Ljava/lang/String;Lanb$c;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; createBuiltinPack
	a (Ljava/nio/file/Path;)Ljava/nio/file/Path; findExplodedAssetPacks
	a (Ljava/util/function/BiConsumer;)V populatePackList
	a (Lnet/minecraft/server/packs/IResourcePack;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; createVanillaPack
	b (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/ResourcePackVanilla; createVanillaPackSource
fzw net/minecraft/client/resources/DefaultPlayerSkin
	a DEFAULT_SKINS
	a ()Lnet/minecraft/resources/MinecraftKey; getDefaultTexture
	a (Lcom/mojang/authlib/GameProfile;)Lgae; get
	a (Ljava/lang/String;Lgae$a;)Lgae; create
	a (Ljava/util/UUID;)Lgae; get
fzx net/minecraft/client/resources/DownloadedPackSource
	a LOGGER
	b SHA1
	c MAX_PACK_SIZE_BYTES
	d MAX_KEPT_PACKS
	e SERVER_ID
	f SERVER_NAME
	g APPLYING_PACK_TEXT
	h serverPackDir
	i downloadLock
	j currentDownload
	k serverPack
	a ()Ljava/util/concurrent/CompletableFuture; clearServerPack
	a (Ljava/io/File;)V deleteQuietly
	a (Ljava/io/File;Lnet/minecraft/server/packs/repository/PackSource;)Ljava/util/concurrent/CompletableFuture; setServerPack
	a (Ljava/lang/String;Ljava/io/File;)Z checkHash
	a (Ljava/net/URL;Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture; downloadAndSelectResourcePack
	a (Ljava/util/function/Consumer;)V loadPacks
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;)Ljava/util/concurrent/CompletableFuture; loadBundledResourcePack
	b ()Ljava/util/Map; getDownloadHeaders
	c ()V clearOldDownloads
fzy net/minecraft/client/resources/FoliageColorReloadListener
	a LOCATION
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)[I prepare
	a ([ILnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
fzz net/minecraft/client/resources/GrassColorReloadListener
	a LOCATION
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)[I prepare
	a ([ILnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
g com/mojang/math/MethodsReturnNonnullByDefault
gaa net/minecraft/client/resources/IndexedAssetSource
	a PATH_SPLITTER
	b LOGGER
	a (Ljava/nio/file/Path;Ljava/lang/String;)Ljava/nio/file/Path; createIndexFs
gab net/minecraft/client/resources/LegacyStuffWrapper
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;)[I getPixels
gac net/minecraft/client/resources/MobEffectTextureManager
	a (Lnet/minecraft/world/effect/MobEffectList;)Lfze; get
gad net/minecraft/client/resources/PaintingTextureManager
	a BACK_SPRITE_LOCATION
	a ()Lfze; getBackSprite
	a (Lnet/minecraft/world/entity/decoration/PaintingVariant;)Lfze; get
gae net/minecraft/client/resources/PlayerSkin
	a texture
	b textureUrl
	c capeTexture
	d elytraTexture
	e model
	f secure
	a ()Lnet/minecraft/resources/MinecraftKey; texture
	b ()Ljava/lang/String; textureUrl
	c ()Lnet/minecraft/resources/MinecraftKey; capeTexture
	d ()Lnet/minecraft/resources/MinecraftKey; elytraTexture
	e ()Lgae$a; model
	f ()Z secure
gae$a net/minecraft/client/resources/PlayerSkin$Model
	a SLIM
	b WIDE
	c id
	d $VALUES
	a ()Ljava/lang/String; id
	a (Ljava/lang/String;)Lgae$a; byName
	b ()[Lgae$a; $values
gaf net/minecraft/client/resources/SkinManager
	a PROPERTY_TEXTURES
	b skinCache
	c skinTextures
	d capeTextures
	e elytraTextures
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/function/Supplier; lookupInsecure
	a (Lcom/mojang/authlib/GameProfile;Lgaf$c;)Ljava/util/concurrent/CompletableFuture; registerTextures
	b (Lcom/mojang/authlib/GameProfile;)Lgae; getInsecureSkin
	c (Lcom/mojang/authlib/GameProfile;)Ljava/util/concurrent/CompletableFuture; getOrLoad
	d (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/properties/Property; getTextureProperty
gaf$a net/minecraft/client/resources/SkinManager$CacheKey
	a profile
	a ()Lcom/mojang/authlib/GameProfile; profile
	b ()Ljava/lang/String; texturesData
gaf$b net/minecraft/client/resources/SkinManager$TextureCache
	a textureManager
	b root
	c type
	d textures
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)Ljava/util/concurrent/CompletableFuture; getOrLoad
	a (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	b (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)Ljava/util/concurrent/CompletableFuture; registerTexture
gaf$c net/minecraft/client/resources/SkinManager$TextureInfo
	a EMPTY
	b skin
	c cape
	d elytra
	e secure
	a ()Lcom/mojang/authlib/minecraft/MinecraftProfileTexture; skin
	a (Ljava/util/Map;Z)Lgaf$c; unpack
	b ()Lcom/mojang/authlib/minecraft/MinecraftProfileTexture; cape
	c ()Lcom/mojang/authlib/minecraft/MinecraftProfileTexture; elytra
	d ()Z secure
gag net/minecraft/client/resources/SplashManager
	a SPLASHES_LOCATION
	b RANDOM
	c splashes
	d user
	a ()Lett; getSplash
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/util/List;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/util/List; prepare
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
gah net/minecraft/client/resources/TextureAtlasHolder
	a textureAtlas
	b atlasInfoLocation
	c metadataSections
	a (Lann$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lfyz$a;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/resources/MinecraftKey;)Lfze; getSprite
gai net/minecraft/client/resources/language/ClientLanguage
	b LOGGER
	c storage
	d defaultRightToLeft
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getOrDefault
	a (Ljava/lang/String;Ljava/util/List;Ljava/util/Map;)V appendFrom
	a (Lnet/minecraft/network/chat/IChatFormatted;)Lnet/minecraft/util/FormattedString; getVisualOrder
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/List;Z)Lgai; loadFrom
	b ()Z isDefaultRightToLeft
	b (Ljava/lang/String;)Z has
gaj net/minecraft/client/resources/language/FormattedBidiReorder
	a (Ljava/lang/String;)Ljava/lang/String; shape
	a (Lnet/minecraft/network/chat/IChatFormatted;Z)Lnet/minecraft/util/FormattedString; reorder
gak net/minecraft/client/resources/language/I18n
	a language
	a (Ljava/lang/String;)Z exists
	a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; get
	a (Lnet/minecraft/locale/LocaleLanguage;)V setLanguage
gal net/minecraft/client/resources/language/LanguageInfo
	a CODEC
	b region
	c name
	d bidirectional
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; toComponent
	b ()Ljava/lang/String; region
	c ()Ljava/lang/String; name
	d ()Z bidirectional
gam net/minecraft/client/resources/language/LanguageManager
	a LOGGER
	b DEFAULT_LANGUAGE
	c languages
	d currentCode
	a ()Ljava/lang/String; getSelected
	a (Ljava/lang/String;)V setSelected
	a (Ljava/util/stream/Stream;)Ljava/util/Map; extractLanguages
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	b ()Ljava/util/SortedMap; getLanguages
	b (Ljava/lang/String;)Lgal; getLanguage
gao net/minecraft/client/resources/metadata/animation/AnimationFrame
	a UNKNOWN_FRAME_TIME
	b index
	c time
	a ()I getIndex
	a (I)I getTime
gap net/minecraft/client/resources/metadata/animation/AnimationMetadataSection
	a SERIALIZER
	b SECTION_NAME
	c DEFAULT_FRAME_TIME
	d UNKNOWN_SIZE
	e EMPTY
	f frames
	g frameWidth
	h frameHeight
	i defaultFrameTime
	j interpolatedFrames
	a ()I getDefaultFrameTime
	a (II)Lgar; calculateFrameSize
	a (Lgap$a;)V forEachFrame
	b ()Z isInterpolatedFrames
gap$a net/minecraft/client/resources/metadata/animation/AnimationMetadataSection$FrameOutput
gaq net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (ILcom/google/gson/JsonElement;)Lgao; getFrame
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lgap; fromJson
gar net/minecraft/client/resources/metadata/animation/FrameSize
	a width
	b height
	a ()I width
	b ()I height
gas net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection
	a SERIALIZER
	b SECTION_NAME
	c hat
	a ()Lgas$a; getHat
gas$a net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat
	a NONE
	b PARTIAL
	c FULL
	d BY_NAME
	e name
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lgas$a; getByName
	b ()[Lgas$a; $values
gat net/minecraft/client/resources/metadata/animation/VillagerMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lgas; fromJson
gav net/minecraft/client/resources/metadata/gui/GuiMetadataSection
	a DEFAULT
	b CODEC
	c TYPE
	d scaling
	a ()Lgaw; scaling
gaw net/minecraft/client/resources/metadata/gui/GuiSpriteScaling
	a CODEC
	b DEFAULT
	a ()Lgaw$d; type
gaw$a net/minecraft/client/resources/metadata/gui/GuiSpriteScaling$NineSlice
	c CODEC
	d width
	e height
	f border
	a ()Lgaw$d; type
	a (Lgaw$a;)Lcom/mojang/serialization/DataResult; validate
	b ()I width
	c ()I height
	d ()Lgaw$a$a; border
gaw$a$a net/minecraft/client/resources/metadata/gui/GuiSpriteScaling$NineSlice$Border
	a left
	b top
	c right
	d bottom
	e VALUE_CODEC
	f RECORD_CODEC
	g CODEC
	a ()I left
	b ()I top
	c ()I right
	d ()I bottom
	e ()Ljava/util/OptionalInt; unpackValue
gaw$b net/minecraft/client/resources/metadata/gui/GuiSpriteScaling$Stretch
	c CODEC
	a ()Lgaw$d; type
gaw$c net/minecraft/client/resources/metadata/gui/GuiSpriteScaling$Tile
	c CODEC
	d width
	e height
	a ()Lgaw$d; type
	b ()I width
	c ()I height
gaw$d net/minecraft/client/resources/metadata/gui/GuiSpriteScaling$Type
	a STRETCH
	b TILE
	c NINE_SLICE
	d CODEC
	e key
	f codec
	g $VALUES
	a ()Lcom/mojang/serialization/Codec; codec
	b ()[Lgaw$d; $values
	c ()Ljava/lang/String; getSerializedName
gay net/minecraft/client/resources/metadata/language/LanguageMetadataSection
	a LANGUAGE_CODE_CODEC
	b CODEC
	c TYPE
	d languages
	a ()Ljava/util/Map; languages
gbb net/minecraft/client/resources/metadata/texture/TextureMetadataSection
	a SERIALIZER
	b DEFAULT_BLUR
	c DEFAULT_CLAMP
	d blur
	e clamp
	a ()Z isBlur
	b ()Z isClamp
gbc net/minecraft/client/resources/metadata/texture/TextureMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lgbb; fromJson
gbe net/minecraft/client/resources/model/AtlasSet
	a atlases
	a (Lnet/minecraft/resources/MinecraftKey;)Lfzd; getAtlas
	a (Lnet/minecraft/server/packs/resources/IResourceManager;ILjava/util/concurrent/Executor;)Ljava/util/Map; scheduleLoad
gbe$a net/minecraft/client/resources/model/AtlasSet$AtlasEntry
	a atlas
	b atlasInfoLocation
	a ()Lfzd; atlas
	b ()Lnet/minecraft/resources/MinecraftKey; atlasInfoLocation
gbe$b net/minecraft/client/resources/model/AtlasSet$StitchResult
	a atlas
	b preparations
	a ()Lfze; missing
	a (Lnet/minecraft/resources/MinecraftKey;)Lfze; getSprite
	b ()Ljava/util/concurrent/CompletableFuture; readyForUpload
	c ()V upload
gbf net/minecraft/client/resources/model/BakedModel
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lfze; getParticleIcon
	f ()Lfpn; getTransforms
	g ()Lfpl; getOverrides
gbg net/minecraft/client/resources/model/BlockModelRotation
	a X0_Y0
	b X0_Y90
	c X0_Y180
	d X0_Y270
	e X90_Y0
	f X90_Y90
	g X90_Y180
	h X90_Y270
	i X180_Y0
	j X180_Y90
	k X180_Y180
	l X180_Y270
	m X270_Y0
	n X270_Y90
	o X270_Y180
	p X270_Y270
	q DEGREES
	r BY_INDEX
	s transformation
	t actualRotation
	u index
	v $VALUES
	a ()Lcom/mojang/math/PointGroupO; actualRotation
	a (II)Lgbg; by
	b ()Lcom/mojang/math/Transformation; getRotation
	b (II)I getIndex
	d ()[Lgbg; $values
gbh net/minecraft/client/resources/model/BuiltInModel
	a itemTransforms
	b overrides
	c particleTexture
	d usesBlockLight
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lfze; getParticleIcon
	f ()Lfpn; getTransforms
	g ()Lfpl; getOverrides
gbi net/minecraft/client/resources/model/Material
	a COMPARATOR
	b atlasLocation
	c texture
	d renderType
	a ()Lnet/minecraft/resources/MinecraftKey; atlasLocation
	a (Lfoe;Ljava/util/function/Function;)Lelt; buffer
	a (Lfoe;Ljava/util/function/Function;Z)Lelt; buffer
	a (Ljava/util/function/Function;)Lfom; renderType
	b ()Lnet/minecraft/resources/MinecraftKey; texture
	c ()Lfze; sprite
gbj net/minecraft/client/resources/model/ModelBaker
	a (Lnet/minecraft/resources/MinecraftKey;)Lgbq; getModel
	a (Lnet/minecraft/resources/MinecraftKey;Lgbn;)Lgbf; bake
gbk net/minecraft/client/resources/model/ModelBakery
	A COMMA_SPLITTER
	B EQUAL_SPLITTER
	C ITEM_FRAME_FAKE_DEFINITION
	D ITEM_MODEL_GENERATOR
	E STATIC_DEFINITIONS
	F blockColors
	G modelResources
	H blockStateResources
	I loadingStack
	J context
	K unbakedCache
	L bakedCache
	M topLevelModels
	N bakedTopLevelModels
	O nextModelGroup
	P modelGroups
	a FIRE_0
	b FIRE_1
	c LAVA_FLOW
	d WATER_FLOW
	e WATER_OVERLAY
	f BANNER_BASE
	g SHIELD_BASE
	h NO_PATTERN_SHIELD
	i DESTROY_STAGE_COUNT
	j DESTROY_STAGES
	k BREAKING_LOCATIONS
	l DESTROY_TYPES
	m SINGLETON_MODEL_GROUP
	n MISSING_MODEL_LOCATION
	o BLOCKSTATE_LISTER
	p MODEL_LISTER
	q MISSING_MODEL_MESH
	r GENERATION_MARKER
	s BLOCK_ENTITY_MARKER
	t INVISIBLE_MODEL_GROUP
	u LOGGER
	v BUILTIN_SLASH
	w BUILTIN_SLASH_GENERATED
	x BUILTIN_BLOCK_ENTITY
	y MISSING_MODEL_NAME
	z BUILTIN_MODELS
	a ()Ljava/util/Map; getBakedTopLevelModels
	a (Lgbm;)V loadTopLevel
	a (Ljava/lang/Iterable;)V registerModelGroup
	a (Ljava/util/function/BiFunction;)V bakeModels
	a (Lnet/minecraft/resources/MinecraftKey;)Lgbq; getModel
	a (Lnet/minecraft/resources/MinecraftKey;Lgbq;)V cacheAndQueueDependencies
	a (Lnet/minecraft/world/level/block/state/BlockStateList;Ljava/lang/String;)Ljava/util/function/Predicate; predicate
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/String;)Ljava/lang/Comparable; getValueHelper
	b ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getModelGroups
	b (Lnet/minecraft/resources/MinecraftKey;)V loadModel
	c (Lnet/minecraft/resources/MinecraftKey;)Lfpg; loadBlockModel
gbk$a net/minecraft/client/resources/model/ModelBakery$BakedCacheKey
	a id
	b transformation
	c isUvLocked
	a ()Lnet/minecraft/resources/MinecraftKey; id
	b ()Lcom/mojang/math/Transformation; transformation
	c ()Z isUvLocked
gbk$b net/minecraft/client/resources/model/ModelBakery$BlockStateDefinitionException
gbk$c net/minecraft/client/resources/model/ModelBakery$LoadedJson
	a source
	b data
	a ()Ljava/lang/String; source
	b ()Lcom/google/gson/JsonElement; data
gbk$d net/minecraft/client/resources/model/ModelBakery$ModelBakerImpl
	b modelTextureGetter
	a (Lnet/minecraft/resources/MinecraftKey;)Lgbq; getModel
	a (Lnet/minecraft/resources/MinecraftKey;Lgbn;)Lgbf; bake
gbk$e net/minecraft/client/resources/model/ModelBakery$ModelGroupKey
	a models
	b coloringValues
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lfpt;Ljava/util/Collection;)Lgbk$e; create
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lgbq;Ljava/util/Collection;)Lgbk$e; create
	a (Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/Collection;)Ljava/util/List; getColoringValues
gbl net/minecraft/client/resources/model/ModelManager
	a LOGGER
	b VANILLA_ATLASES
	c bakedRegistry
	d atlases
	e blockModelShaper
	f blockColors
	g maxMipmapLevels
	h missingModel
	i modelGroups
	a ()Lgbf; getMissingModel
	a (I)V updateMaxMipLevel
	a (Lann$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lgbl$a;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lgbm;)Lgbf; getModel
	a (Lnet/minecraft/resources/MinecraftKey;)Lfzd; getAtlas
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; loadBlockModels
	a (Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/Map;Lgbk;)Lgbl$a; loadModels
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Z requiresRender
	b ()Lfox; getBlockModelShaper
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; loadBlockStates
gbl$a net/minecraft/client/resources/model/ModelManager$ReloadState
	a modelBakery
	b missingModel
	c modelCache
	d atlasPreparations
	e readyForUpload
	a ()Lgbk; modelBakery
	b ()Lgbf; missingModel
	c ()Ljava/util/Map; modelCache
	d ()Ljava/util/Map; atlasPreparations
	e ()Ljava/util/concurrent/CompletableFuture; readyForUpload
gbm net/minecraft/client/resources/model/ModelResourceLocation
	e VARIANT_SEPARATOR
	f variant
	c (Ljava/lang/String;Ljava/lang/String;)Lgbm; vanilla
	f ()Ljava/lang/String; getVariant
	j (Ljava/lang/String;)Ljava/lang/String; lowercaseVariant
gbn net/minecraft/client/resources/model/ModelState
	b ()Lcom/mojang/math/Transformation; getRotation
	c ()Z isUvLocked
gbo net/minecraft/client/resources/model/MultiPartBakedModel
	a hasAmbientOcclusion
	b isGui3d
	c usesBlockLight
	d particleIcon
	e transforms
	f overrides
	g selectors
	h selectorCache
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lfze; getParticleIcon
	f ()Lfpn; getTransforms
	g ()Lfpl; getOverrides
gbo$a net/minecraft/client/resources/model/MultiPartBakedModel$Builder
	a selectors
	a ()Lgbf; build
	a (Ljava/util/function/Predicate;Lgbf;)V add
gbp net/minecraft/client/resources/model/SimpleBakedModel
	a unculledFaces
	b culledFaces
	c hasAmbientOcclusion
	d isGui3d
	e usesBlockLight
	f particleIcon
	g transforms
	h overrides
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lfze; getParticleIcon
	f ()Lfpn; getTransforms
	g ()Lfpl; getOverrides
gbp$a net/minecraft/client/resources/model/SimpleBakedModel$Builder
	a unculledFaces
	b culledFaces
	c overrides
	d hasAmbientOcclusion
	e particleIcon
	f usesBlockLight
	g isGui3d
	h transforms
	a ()Lgbp$a; item
	a (Lfpb;)Lgbp$a; addUnculledFace
	a (Lfze;)Lgbp$a; particle
	a (Lnet/minecraft/core/EnumDirection;Lfpb;)Lgbp$a; addCulledFace
	b ()Lgbf; build
gbq net/minecraft/client/resources/model/UnbakedModel
	a (Lgbj;Ljava/util/function/Function;Lgbn;Lnet/minecraft/resources/MinecraftKey;)Lgbf; bake
	a (Ljava/util/function/Function;)V resolveParents
	f ()Ljava/util/Collection; getDependencies
gbr net/minecraft/client/resources/model/WeightedBakedModel
	a totalWeight
	b list
	c wrapped
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lfze; getParticleIcon
	f ()Lfpn; getTransforms
	g ()Lfpl; getOverrides
gbr$a net/minecraft/client/resources/model/WeightedBakedModel$Builder
	a list
	a ()Lgbf; build
	a (Lgbf;I)Lgbr$a; add
gbu net/minecraft/client/resources/sounds/AbstractSoundInstance
	a sound
	b source
	c location
	d volume
	e pitch
	f x
	g y
	h z
	i looping
	j delay
	k attenuation
	l relative
	m random
	a ()Lnet/minecraft/resources/MinecraftKey; getLocation
	a (Lgdq;)Lgdr; resolve
	b ()Lgcj; getSound
	c ()Lnet/minecraft/sounds/SoundCategory; getSource
	d ()Z isLooping
	e ()I getDelay
	f ()F getVolume
	g ()F getPitch
	h ()D getX
	i ()D getY
	j ()D getZ
	k ()Lgcm$a; getAttenuation
	l ()Z isRelative
gbv net/minecraft/client/resources/sounds/AbstractTickableSoundInstance
	n stopped
	m ()Z isStopped
	n ()V stop
gbw net/minecraft/client/resources/sounds/AmbientSoundHandler
	a ()V tick
gbx net/minecraft/client/resources/sounds/BeeAggressiveSoundInstance
	o ()Lgbv; getAlternativeSoundInstance
	p ()Z shouldSwitchSounds
gby net/minecraft/client/resources/sounds/BeeFlyingSoundInstance
	o ()Lgbv; getAlternativeSoundInstance
	p ()Z shouldSwitchSounds
gbz net/minecraft/client/resources/sounds/BeeSoundInstance
	n bee
	o VOLUME_MIN
	p VOLUME_MAX
	q PITCH_MIN
	r hasSwitched
	o ()Lgbv; getAlternativeSoundInstance
	p ()Z shouldSwitchSounds
	q ()V tick
	r ()Z canStartSilent
	s ()Z canPlaySound
	u ()F getMinPitch
	v ()F getMaxPitch
gca net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler
	a LOOP_SOUND_CROSS_FADE_TIME
	b SKY_MOOD_RECOVERY_RATE
	c player
	d soundManager
	e biomeManager
	f random
	g loopSounds
	h moodSettings
	i additionsSettings
	j moodiness
	k previousBiome
	a ()V tick
	b ()F getMoodiness
gca$a net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler$LoopSoundInstance
	n fadeDirection
	o fade
	o ()V fadeOut
	p ()V fadeIn
	q ()V tick
gcb net/minecraft/client/resources/sounds/BubbleColumnAmbientSoundHandler
	a player
	b wasInBubbleColumn
	c firstTick
	a ()V tick
gcc net/minecraft/client/resources/sounds/ElytraOnPlayerSoundInstance
	n DELAY
	o player
	p time
	q ()V tick
gcd net/minecraft/client/resources/sounds/EntityBoundSoundInstance
	n entity
	q ()V tick
	s ()Z canPlaySound
gce net/minecraft/client/resources/sounds/GuardianAttackSoundInstance
	n VOLUME_MIN
	o VOLUME_SCALE
	p PITCH_MIN
	q PITCH_SCALE
	r guardian
	q ()V tick
	s ()Z canPlaySound
gcf net/minecraft/client/resources/sounds/MinecartSoundInstance
	n VOLUME_MIN
	o VOLUME_MAX
	p PITCH_MIN
	q PITCH_MAX
	r PITCH_DELTA
	s minecart
	t pitch
	q ()V tick
	r ()Z canStartSilent
	s ()Z canPlaySound
gcg net/minecraft/client/resources/sounds/RidingMinecartSoundInstance
	n VOLUME_MIN
	o VOLUME_MAX
	p player
	q minecart
	r underwaterSound
	q ()V tick
	r ()Z canStartSilent
	s ()Z canPlaySound
gch net/minecraft/client/resources/sounds/SimpleSoundInstance
	a (Lnet/minecraft/core/Holder;F)Lgch; forUI
	a (Lnet/minecraft/sounds/SoundEffect;)Lgch; forMusic
	a (Lnet/minecraft/sounds/SoundEffect;F)Lgch; forUI
	a (Lnet/minecraft/sounds/SoundEffect;FF)Lgch; forUI
	a (Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/util/RandomSource;DDD)Lgch; forAmbientMood
	a (Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/world/phys/Vec3D;)Lgch; forRecord
	b (Lnet/minecraft/sounds/SoundEffect;)Lgch; forAmbientAddition
	b (Lnet/minecraft/sounds/SoundEffect;FF)Lgch; forLocalAmbience
gci net/minecraft/client/resources/sounds/SnifferSoundInstance
	n VOLUME
	o PITCH
	p sniffer
	q ()V tick
	s ()Z canPlaySound
gcj net/minecraft/client/resources/sounds/Sound
	a SOUND_LISTER
	b location
	c volume
	d pitch
	e weight
	f type
	g stream
	h preload
	i attenuationDistance
	a ()Lnet/minecraft/resources/MinecraftKey; getLocation
	a (Lgdn;)V preloadIfRequired
	a (Lnet/minecraft/util/RandomSource;)Lgcj; getSound
	b ()Lnet/minecraft/resources/MinecraftKey; getPath
	b (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; getSound
	c ()Lnet/minecraft/util/valueproviders/SampledFloat; getVolume
	d ()Lnet/minecraft/util/valueproviders/SampledFloat; getPitch
	e ()I getWeight
	f ()Lgcj$a; getType
	g ()Z shouldStream
	h ()Z shouldPreload
	i ()I getAttenuationDistance
gcj$a net/minecraft/client/resources/sounds/Sound$Type
	a FILE
	b SOUND_EVENT
	c name
	d $VALUES
	a ()[Lgcj$a; $values
	a (Ljava/lang/String;)Lgcj$a; getByName
gck net/minecraft/client/resources/sounds/SoundEventRegistration
	a sounds
	b replace
	c subtitle
	a ()Ljava/util/List; getSounds
	b ()Z isReplace
	c ()Ljava/lang/String; getSubtitle
gcl net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer
	a DEFAULT_FLOAT
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lgck; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/util/List; getSounds
	a (Lcom/google/gson/JsonObject;Lgcj$a;)Lgcj$a; getType
	b (Lcom/google/gson/JsonObject;)Lgcj; getSound
gcm net/minecraft/client/resources/sounds/SoundInstance
	a ()Lnet/minecraft/resources/MinecraftKey; getLocation
	a (Lgdq;)Lgdr; resolve
	b ()Lgcj; getSound
	c ()Lnet/minecraft/sounds/SoundCategory; getSource
	d ()Z isLooping
	e ()I getDelay
	f ()F getVolume
	g ()F getPitch
	h ()D getX
	i ()D getY
	j ()D getZ
	k ()Lgcm$a; getAttenuation
	l ()Z isRelative
	r ()Z canStartSilent
	s ()Z canPlaySound
	t ()Lnet/minecraft/util/RandomSource; createUnseededRandom
gcm$a net/minecraft/client/resources/sounds/SoundInstance$Attenuation
	a NONE
	b LINEAR
	c $VALUES
	a ()[Lgcm$a; $values
gcn net/minecraft/client/resources/sounds/TickableSoundInstance
	m ()Z isStopped
	q ()V tick
gco net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler
	a CHANCE_PER_TICK
	b RARE_CHANCE_PER_TICK
	c ULTRA_RARE_CHANCE_PER_TICK
	d MINIMUM_TICK_DELAY
	e player
	f soundManager
	g tickDelay
	a ()V tick
gcp net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances
gcp$a net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$SubSound
	n player
	q ()V tick
gcp$b net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance
	n FADE_DURATION
	o player
	p fade
	q ()V tick
gcr net/minecraft/client/searchtree/FullTextSearchTree
	c contents
	d filler
	e plainTextSearchTree
	a ()V refresh
	a (Ljava/lang/String;)Ljava/util/List; searchPlainText
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; searchResourceLocation
gcs net/minecraft/client/searchtree/IdSearchTree
	a additionOrder
	b resourceLocationSearchTree
	a (Ljava/lang/String;)Ljava/util/List; searchPlainText
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; searchResourceLocation
gct net/minecraft/client/searchtree/IntersectionIterator
	a firstIterator
	b secondIterator
	c comparator
gcu net/minecraft/client/searchtree/MergingUniqueIterator
	a firstIterator
	b secondIterator
	c comparator
gcv net/minecraft/client/searchtree/PlainTextSearchTree
	a ()Lgcv; empty
	a (Ljava/util/List;Ljava/util/function/Function;)Lgcv; create
gcw net/minecraft/client/searchtree/RefreshableSearchTree
	a ()V refresh
	b ()Lgcw; empty
gcx net/minecraft/client/searchtree/ResourceLocationSearchTree
	a ()Lgcx; empty
	a (Ljava/lang/String;)Ljava/util/List; searchNamespace
	a (Ljava/util/List;Ljava/util/function/Function;)Lgcx; create
	b (Ljava/lang/String;)Ljava/util/List; searchPath
gcy net/minecraft/client/searchtree/SearchRegistry
	a CREATIVE_NAMES
	b CREATIVE_TAGS
	c RECIPE_COLLECTIONS
	d searchTrees
	a (Lgcy$a;)Lgcz; getTree
	a (Lgcy$a;Lgcy$b;)V register
	a (Lgcy$a;Ljava/util/List;)V populate
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	b (Lgcy$a;)Lgcy$c; getSupplier
gcy$a net/minecraft/client/searchtree/SearchRegistry$Key
gcy$b net/minecraft/client/searchtree/SearchRegistry$TreeBuilderSupplier
gcy$c net/minecraft/client/searchtree/SearchRegistry$TreeEntry
	a factory
	b tree
	a ()V refresh
	a (Ljava/util/List;)V populate
gcz net/minecraft/client/searchtree/SearchTree
gda net/minecraft/client/searchtree/SuffixArray
	a list
	b DEBUG_COMPARISONS
	c DEBUG_ARRAY
	d LOGGER
	e END_OF_TEXT_MARKER
	f END_OF_DATA
	g chars
	h wordStarts
	i suffixToT
	j offsets
	k maxStringLength
	a ()V generate
	a (I)Ljava/lang/String; getString
	a (Ljava/lang/Object;Ljava/lang/String;)V add
	a (Ljava/lang/String;)Ljava/util/List; search
	a (Ljava/lang/String;I)I compare
	b ()V print
gdc net/minecraft/client/server/IntegratedPlayerList
	a playerData
	a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/IChatBaseComponent; canPlayerLogin
	b ()Lgdd; getServer
	b (Lnet/minecraft/server/level/EntityPlayer;)V save
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	r ()Lnet/minecraft/nbt/NBTTagCompound; getSingleplayerData
gdd net/minecraft/client/server/IntegratedServer
	n LOGGER
	o MIN_SIM_DISTANCE
	p minecraft
	q paused
	r publishedPort
	s publishedGameType
	t lanPinger
	u uuid
	v previousSimulationDistance
	K ()Lnet/minecraft/util/ModCheck; getModdedStatus
	M ()I getPort
	T_ ()Z shouldInformAdmins
	a ()V tickPaused
	a (J)V logTickTime
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/util/UUID;)V setUUID
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	a (Lnet/minecraft/CrashReport;)V onServerCrash
	a (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; fillServerSystemReport
	a (Lnet/minecraft/world/level/EnumGamemode;)V setDefaultGameType
	a (Lnet/minecraft/world/level/EnumGamemode;ZI)Z publishServer
	a (Z)V halt
	aR ()Z forceSynchronousWrites
	aW ()Lnet/minecraft/world/level/EnumGamemode; getForcedGameType
	b (I)I getScaledTrackingDistance
	e ()Z initServer
	i ()I getOperatorUserPermissionLevel
	j ()I getFunctionCompilationLevel
	k ()Z shouldRconBroadcast
	l ()Z isDedicatedServer
	m ()I getRateLimitPacketsPerSecond
	n ()Z isEpollEnabled
	o ()Z isCommandBlockEnabled
	p ()Z isPublished
	t ()V stopServer
	z ()Ljava/io/File; getServerDirectory
gde net/minecraft/client/server/LanServer
	a motd
	b address
	c pingTime
	a ()Ljava/lang/String; getMotd
	b ()Ljava/lang/String; getAddress
	c ()V updatePingTime
gdf net/minecraft/client/server/LanServerDetection
	a UNIQUE_THREAD_ID
	b LOGGER
gdf$a net/minecraft/client/server/LanServerDetection$LanServerDetector
	a serverList
	b pingGroup
	c socket
gdf$b net/minecraft/client/server/LanServerDetection$LanServerList
	a servers
	b isDirty
	a ()Ljava/util/List; takeDirtyServers
	a (Ljava/lang/String;Ljava/net/InetAddress;)V addServer
gdg net/minecraft/client/server/LanServerPinger
	a MULTICAST_GROUP
	b PING_PORT
	c UNIQUE_THREAD_ID
	d LOGGER
	e PING_INTERVAL
	f motd
	g socket
	h isRunning
	i serverAddress
	a (Ljava/lang/String;)Ljava/lang/String; parseMotd
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; createPingString
	b (Ljava/lang/String;)Ljava/lang/String; parseAddress
gdi net/minecraft/client/sounds/AudioStream
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
gdj net/minecraft/client/sounds/ChannelAccess
	a channels
	b library
	c executor
	a ()V scheduleTick
	a (Lejl$c;)Ljava/util/concurrent/CompletableFuture; createHandle
	a (Ljava/util/function/Consumer;)V executeOnChannels
	b ()V clear
gdj$a net/minecraft/client/sounds/ChannelAccess$ChannelHandle
	b channel
	c stopped
	a ()Z isStopped
	a (Ljava/util/function/Consumer;)V execute
	b ()V release
gdk net/minecraft/client/sounds/LoopingAudioStream
	a provider
	b stream
	c bufferedInputStream
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
gdk$a net/minecraft/client/sounds/LoopingAudioStream$AudioStreamProvider
gdk$b net/minecraft/client/sounds/LoopingAudioStream$NoCloseBuffer
gdl net/minecraft/client/sounds/MusicManager
	a STARTING_DELAY
	b random
	c minecraft
	d currentMusic
	e nextSongDelay
	a ()V tick
	a (Lnet/minecraft/sounds/Music;)V startPlaying
	b ()V stopPlaying
	b (Lnet/minecraft/sounds/Music;)V stopPlaying
	c (Lnet/minecraft/sounds/Music;)Z isPlayingMusic
gdm net/minecraft/client/sounds/SoundBufferLibrary
	a resourceManager
	b cache
	a ()V clear
	a (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; preload
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/concurrent/CompletableFuture; getCompleteBuffer
	a (Lnet/minecraft/resources/MinecraftKey;Z)Ljava/util/concurrent/CompletableFuture; getStream
gdn net/minecraft/client/sounds/SoundEngine
	A queuedSounds
	B soundDeleteTime
	C listeners
	D queuedTickableSounds
	E preloadQueue
	a MISSING_SOUND
	b OPEN_AL_SOFT_PREFIX
	c OPEN_AL_SOFT_PREFIX_LENGTH
	d MARKER
	e LOGGER
	f PITCH_MIN
	g PITCH_MAX
	h VOLUME_MIN
	i VOLUME_MAX
	j MIN_SOURCE_LIFETIME
	k ONLY_WARN_ONCE
	l DEFAULT_DEVICE_CHECK_INTERVAL_MS
	m soundManager
	n options
	o loaded
	p library
	q listener
	r soundBuffers
	s executor
	t channelAccess
	u tickCount
	v lastDeviceCheckTime
	w devicePoolState
	x instanceToChannel
	y instanceBySource
	z tickingSounds
	a ()V reload
	a (FLnet/minecraft/sounds/SoundCategory;)F calculateVolume
	a (Leqg;)V updateSource
	a (Lgcj;)V requestPreload
	a (Lgcm;)V stop
	a (Lgcm;I)V playDelayed
	a (Lgcn;)V queueTickingSound
	a (Lgdp;)V addEventListener
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/sounds/SoundCategory;)V stop
	a (Lnet/minecraft/sounds/SoundCategory;)F getVolume
	a (Lnet/minecraft/sounds/SoundCategory;F)V updateCategoryVolume
	a (Z)V tick
	b ()V destroy
	b (Lgcm;)Z isActive
	b (Lgdp;)V removeEventListener
	c ()V stopAll
	c (Lgcm;)V play
	d ()V pause
	d (Lgcm;)Z requiresManualLooping
	e ()V resume
	e (Lgcm;)Z shouldLoopManually
	f ()Ljava/lang/String; getDebugString
	f (Lgcm;)Z shouldLoopAutomatically
	g ()Ljava/util/List; getAvailableSoundDevices
	g (Lgcm;)F calculatePitch
	h ()V loadLibrary
	h (Lgcm;)F calculateVolume
	i ()Z shouldChangeDevice
	j ()V tickNonPaused
gdn$a net/minecraft/client/sounds/SoundEngine$DeviceCheckState
	a ONGOING
	b CHANGE_DETECTED
	c NO_CHANGE
	d $VALUES
	a ()[Lgdn$a; $values
gdo net/minecraft/client/sounds/SoundEngineExecutor
	a thread
	b shutdown
	a ()V flush
	au ()Ljava/lang/Thread; getRunningThread
	b ()Ljava/lang/Thread; createThread
	bq ()V waitForTasks
	c ()V run
	e (Ljava/lang/Runnable;)Z shouldRun
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
gdp net/minecraft/client/sounds/SoundEventListener
	a (Lgcm;Lgdr;)V onPlaySound
gdq net/minecraft/client/sounds/SoundManager
	a EMPTY_SOUND
	b INTENTIONALLY_EMPTY_SOUND_LOCATION
	c INTENTIONALLY_EMPTY_SOUND_EVENT
	d INTENTIONALLY_EMPTY_SOUND
	e LOGGER
	f SOUNDS_PATH
	g GSON
	h SOUND_EVENT_REGISTRATION_TYPE
	i registry
	j soundEngine
	k soundCache
	a ()Ljava/util/List; getAvailableSoundDevices
	a (Leqg;)V updateSource
	a (Lgcj;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/server/packs/resources/ResourceProvider;)Z validateSoundResource
	a (Lgcm;)V play
	a (Lgcm;I)V playDelayed
	a (Lgcn;)V queueTickingSound
	a (Lgdp;)V addListener
	a (Lgdq$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/resources/MinecraftKey;)Lgdr; getSoundEvent
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/sounds/SoundCategory;)V stop
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Lgdq$a; prepare
	a (Lnet/minecraft/sounds/SoundCategory;F)V updateSourceVolume
	a (Z)V tick
	b ()Ljava/util/Collection; getAvailableSounds
	b (Lgcm;)V stop
	b (Lgdp;)V removeListener
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
	c (Lgcm;)Z isActive
	d ()V pause
	e ()V stop
	f ()V destroy
	g ()V resume
	h ()Ljava/lang/String; getDebugString
	i ()V reload
gdq$a net/minecraft/client/sounds/SoundManager$Preparations
	a registry
	b soundCache
	a (Ljava/util/Map;Ljava/util/Map;Lgdn;)V apply
	a (Lnet/minecraft/resources/MinecraftKey;Lgck;)V handleRegistration
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V listResources
gdr net/minecraft/client/sounds/WeighedSoundEvents
	a list
	b subtitle
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getSubtitle
	a (Lgdn;)V preloadIfRequired
	a (Lgds;)V addSound
	a (Lnet/minecraft/util/RandomSource;)Lgcj; getSound
	b (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; getSound
	e ()I getWeight
gds net/minecraft/client/sounds/Weighted
	a (Lgdn;)V preloadIfRequired
	b (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; getSound
	e ()I getWeight
gdu net/minecraft/client/telemetry/ClientTelemetryManager
	a THREAD_COUNT
	b EXECUTOR
	c userApiService
	d deviceSessionProperties
	e logDirectory
	f logManager
	g outsideSessionSender
	a ()Lgdy; getOutsideSessionSender
	a (ZLjava/time/Duration;Ljava/lang/String;)Lged; createWorldSessionManager
	b ()Ljava/nio/file/Path; getLogDirectory
	c ()Lgdy; createEventSender
gdv net/minecraft/client/telemetry/TelemetryEventInstance
	a CODEC
	b type
	c properties
	a ()Lgdz; type
	a (Lcom/mojang/authlib/minecraft/TelemetrySession;)Lcom/mojang/authlib/minecraft/TelemetryEvent; export
	b ()Lgec; properties
gdw net/minecraft/client/telemetry/TelemetryEventLog
	a LOGGER
	b log
	c mailbox
	a ()Lgdx; logger
gdx net/minecraft/client/telemetry/TelemetryEventLogger
gdy net/minecraft/client/telemetry/TelemetryEventSender
	a DISABLED
gdz net/minecraft/client/telemetry/TelemetryEventType
	a CODEC
	b WORLD_LOADED
	c PERFORMANCE_METRICS
	d WORLD_LOAD_TIMES
	e WORLD_UNLOADED
	f ADVANCEMENT_MADE
	g GAME_LOAD_TIMES
	h REGISTRY
	i GLOBAL_PROPERTIES
	j WORLD_SESSION_PROPERTIES
	k id
	l exportKey
	m properties
	n isOptIn
	o codec
	a ()Ljava/lang/String; id
	a (Lcom/mojang/authlib/minecraft/TelemetrySession;Lgec;)Lcom/mojang/authlib/minecraft/TelemetryEvent; export
	a (Lgeb;)Z contains
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; makeTranslation
	a (Ljava/lang/String;Ljava/lang/String;)Lgdz$a; builder
	b ()Ljava/util/List; properties
	c ()Lcom/mojang/serialization/Codec; codec
	d ()Z isOptIn
	e ()Lnet/minecraft/network/chat/IChatMutableComponent; title
	f ()Lnet/minecraft/network/chat/IChatMutableComponent; description
	g ()Ljava/util/List; values
gdz$a net/minecraft/client/telemetry/TelemetryEventType$Builder
	a id
	b exportKey
	c properties
	d isOptIn
	a ()Lgdz$a; optIn
	a (Lgeb;)Lgdz$a; define
	a (Ljava/util/List;)Lgdz$a; defineAll
	b ()Lgdz; register
ge$a net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier
ge$b net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option
	a modifier
	b canUse
	c description
	a ()Lge$a; modifier
	b ()Ljava/util/function/Predicate; canUse
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; description
gea net/minecraft/client/telemetry/TelemetryLogManager
	a LOGGER
	b RAW_EXTENSION
	c EXPIRY_DAYS
	d directory
	e sessionLog
	a ()Ljava/util/concurrent/CompletableFuture; openLogger
	a (Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; open
geb net/minecraft/client/telemetry/TelemetryProperty
	A LOAD_TIME_PRE_WINDOW_MS
	B LOAD_TIME_BOOTSTRAP_MS
	C LOAD_TIME_LOADING_OVERLAY_MS
	D ADVANCEMENT_ID
	E ADVANCEMENT_GAME_TIME
	F id
	G exportKey
	H codec
	I exporter
	J TIMESTAMP_FORMATTER
	a USER_ID
	b CLIENT_ID
	c MINECRAFT_SESSION_ID
	d GAME_VERSION
	e OPERATING_SYSTEM
	f PLATFORM
	g CLIENT_MODDED
	h LAUNCHER_NAME
	i WORLD_SESSION_ID
	j SERVER_MODDED
	k SERVER_TYPE
	l OPT_IN
	m EVENT_TIMESTAMP_UTC
	n GAME_MODE
	o REALMS_MAP_CONTENT
	p SECONDS_SINCE_LOAD
	q TICKS_SINCE_LOAD
	r FRAME_RATE_SAMPLES
	s RENDER_TIME_SAMPLES
	t USED_MEMORY_SAMPLES
	u NUMBER_OF_SAMPLES
	v RENDER_DISTANCE
	w DEDICATED_MEMORY_KB
	x WORLD_LOAD_TIME_MS
	y NEW_WORLD
	z LOAD_TIME_TOTAL_TIME_MS
	a ()Lnet/minecraft/network/chat/IChatMutableComponent; title
	a (Lgec;Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;)V export
	a (Ljava/lang/String;Ljava/lang/String;)Lgeb; bool
	a (Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Codec;Lgeb$a;)Lgeb; create
	b ()Ljava/lang/String; id
	b (Ljava/lang/String;Ljava/lang/String;)Lgeb; string
	c ()Ljava/lang/String; exportKey
	c (Ljava/lang/String;Ljava/lang/String;)Lgeb; integer
	d ()Lcom/mojang/serialization/Codec; codec
	d (Ljava/lang/String;Ljava/lang/String;)Lgeb; makeLong
	e ()Lgeb$a; exporter
	e (Ljava/lang/String;Ljava/lang/String;)Lgeb; uuid
	f (Ljava/lang/String;Ljava/lang/String;)Lgeb; gameLoadMeasurement
	g (Ljava/lang/String;Ljava/lang/String;)Lgeb; longSamples
geb$a net/minecraft/client/telemetry/TelemetryProperty$Exporter
geb$b net/minecraft/client/telemetry/TelemetryProperty$GameMode
	a SURVIVAL
	b CREATIVE
	c ADVENTURE
	d SPECTATOR
	e HARDCORE
	f CODEC
	g key
	h id
	i $VALUES
	a ()I id
	b ()[Lgeb$b; $values
	c ()Ljava/lang/String; getSerializedName
geb$c net/minecraft/client/telemetry/TelemetryProperty$ServerType
	a REALM
	b LOCAL
	c OTHER
	d CODEC
	e key
	f $VALUES
	a ()[Lgeb$c; $values
	c ()Ljava/lang/String; getSerializedName
gec net/minecraft/client/telemetry/TelemetryPropertyMap
	a entries
	a ()Lgec$a; builder
	a (Lgeb;)Ljava/lang/Object; get
	a (Ljava/util/List;)Lcom/mojang/serialization/Codec; createCodec
	b ()Ljava/util/Set; propertySet
gec$a net/minecraft/client/telemetry/TelemetryPropertyMap$Builder
	a entries
	a ()Lgec; build
	a (Lgeb;Ljava/lang/Object;)Lgec$a; put
	a (Lgec;)Lgec$a; putAll
	b (Lgeb;Ljava/lang/Object;)Lgec$a; putIfNotNull
ged net/minecraft/client/telemetry/WorldSessionTelemetryManager
	a worldSessionId
	b eventSender
	c worldLoadEvent
	d worldUnloadEvent
	e performanceMetricsEvent
	f worldLoadTimesEvent
	a ()V tick
	a (J)V setTime
	a (Ljava/lang/String;)V onServerBrandReceived
	a (Lnet/minecraft/world/level/EnumGamemode;Z)V onPlayerInfoReceived
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/advancements/AdvancementHolder;)V onAdvancementDone
	b ()V worldSessionStart
	c ()V onDisconnect
gee net/minecraft/client/telemetry/events/AggregatedTelemetryEvent
	a SAMPLE_INTERVAL_MS
	b SAMPLES_PER_EVENT
	c sampleCount
	d ticking
	e lastSampleTime
	a ()V start
	a (Lgdy;)V tick
	b ()Z shouldTakeSample
	b (Lgdy;)V sendEvent
	c ()Z shouldSentEvent
	d ()V stop
	e ()I getSampleCount
	f ()V takeSample
gef net/minecraft/client/telemetry/events/GameLoadTimesEvent
	a INSTANCE
	b LOGGER
	c timeSource
	d measurements
	e bootstrapTime
	a (J)V setBootstrapTime
	a (Lgdy;)V send
	a (Lgeb;)V beginStep
	a (Lgeb;Lcom/google/common/base/Stopwatch;)V beginStep
	a (Lgeb;Ljava/util/function/Function;)V beginStep
	b (Lgeb;)V endStep
gef$a net/minecraft/client/telemetry/events/GameLoadTimesEvent$Measurement
	a CODEC
	b millis
	a ()I millis
geg net/minecraft/client/telemetry/events/PerformanceMetricsEvent
	a DEDICATED_MEMORY_KB
	b fpsSamples
	c frameTimeSamples
	d usedMemorySamples
	a (J)J toKilobytes
	a (Lgdy;)V tick
	b (Lgdy;)V sendEvent
	f ()V takeSample
	g ()V resetValues
	h ()V takeUsedMemorySample
geh net/minecraft/client/telemetry/events/WorldLoadEvent
	a eventSent
	b gameMode
	c serverBrand
	d minigameName
	a ()Lgeb$c; getServerType
	a (Lgdy;)Z send
	a (Lgec$a;)V addProperties
	a (Ljava/lang/String;)V setServerBrand
	a (Lnet/minecraft/world/level/EnumGamemode;Z)V setGameMode
gei net/minecraft/client/telemetry/events/WorldLoadTimesEvent
	a newWorld
	b worldLoadDuration
	a (Lgdy;)V send
gej net/minecraft/client/telemetry/events/WorldUnloadEvent
	a NOT_TRACKING_TIME
	b worldLoadedTime
	c totalTicks
	d lastGameTime
	a ()V onPlayerInfoReceived
	a (J)V setTime
	a (Lgdy;)V send
	a (Ljava/time/Instant;)I getTimeInSecondsSinceLoad
gem net/minecraft/client/tutorial/BundleTutorial
	a tutorial
	b options
	c toast
	a ()V showToast
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V onInventoryAction
	b ()V clearToast
gen net/minecraft/client/tutorial/CompletedTutorialStepInstance
geo net/minecraft/client/tutorial/CraftPlanksTutorialStep
	a HINT_DELAY
	b CRAFT_TITLE
	c CRAFT_DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	a ()V tick
	a (Lfng;Lnet/minecraft/tags/TagKey;)Z hasCraftedPlanksPreviously
	a (Lnet/minecraft/world/item/ItemStack;)V onGetItem
	b ()V clear
gep net/minecraft/client/tutorial/FindTreeTutorialStepInstance
	a HINT_DELAY
	b TITLE
	c DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	a ()V tick
	a (Lfix;Lnet/minecraft/world/phys/MovingObjectPosition;)V onLookAt
	a (Lfng;)Z hasPunchedTreesPreviously
	a (Lnet/minecraft/world/item/ItemStack;)V onGetItem
	b ()V clear
	b (Lfng;)Z hasCollectedTreeItems
geq net/minecraft/client/tutorial/MovementTutorialStepInstance
	a MINIMUM_TIME_MOVED
	b MINIMUM_TIME_LOOKED
	c MOVE_HINT_DELAY
	d LOOK_HINT_DELAY
	e INCOMPLETE
	f MOVE_TITLE
	g MOVE_DESCRIPTION
	h LOOK_TITLE
	i LOOK_DESCRIPTION
	j tutorial
	k moveToast
	l lookToast
	m timeWaiting
	n timeMoved
	o timeLooked
	p moved
	q turned
	r moveCompleted
	s lookCompleted
	a ()V tick
	a (DD)V onMouse
	a (Lfne;)V onInput
	b ()V clear
ger net/minecraft/client/tutorial/OpenInventoryTutorialStep
	a HINT_DELAY
	b TITLE
	c DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	a ()V tick
	b ()V clear
	c ()V onOpenInventory
ges net/minecraft/client/tutorial/PunchTreeTutorialStepInstance
	a HINT_DELAY
	b TITLE
	c DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	g resetCount
	a ()V tick
	a (Lfix;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;F)V onDestroyBlock
	a (Lnet/minecraft/world/item/ItemStack;)V onGetItem
	b ()V clear
get net/minecraft/client/tutorial/Tutorial
	a minecraft
	b instance
	c timedToasts
	d bundleTutorial
	a ()V onOpenInventory
	a (DD)V onMouse
	a (Leuz;)V removeTimedToast
	a (Leuz;I)V addTimedToast
	a (Lfix;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;F)V onDestroyBlock
	a (Lfix;Lnet/minecraft/world/phys/MovingObjectPosition;)V onLookAt
	a (Lfne;)V onInput
	a (Lgev;)V setStep
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; key
	a (Lnet/minecraft/world/item/ItemStack;)V onGetItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V onInventoryAction
	b ()V stop
	c ()V start
	d ()V tick
	e ()Leqv; getMinecraft
	f ()Z isSurvival
get$a net/minecraft/client/tutorial/Tutorial$TimedToast
	a toast
	b durationTicks
	c progress
	a ()Z updateProgress
geu net/minecraft/client/tutorial/TutorialStepInstance
	a ()V tick
	a (DD)V onMouse
	a (Lfix;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;F)V onDestroyBlock
	a (Lfix;Lnet/minecraft/world/phys/MovingObjectPosition;)V onLookAt
	a (Lfne;)V onInput
	a (Lnet/minecraft/world/item/ItemStack;)V onGetItem
	b ()V clear
	c ()V onOpenInventory
gev net/minecraft/client/tutorial/TutorialSteps
	a MOVEMENT
	b FIND_TREE
	c PUNCH_TREE
	d OPEN_INVENTORY
	e CRAFT_PLANKS
	f NONE
	g name
	h constructor
	i $VALUES
	a ()Ljava/lang/String; getName
	a (Lget;)Lgeu; create
	a (Ljava/lang/String;)Lgev; getByName
	b ()[Lgev; $values
gex net/minecraft/realms/DisconnectedRealmsScreen
	a reason
	b message
	c parent
	y textHeight
	a (Lesf;IIF)V render
	aH_ ()V init
	az_ ()V onClose
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
gey net/minecraft/realms/RealmsConnect
	a LOGGER
	b onlineScreen
	c aborted
	d connection
	a ()V abort
	a (Lemw;Lfki;)V connect
	b ()V tick
gez net/minecraft/realms/RealmsLabel
	a text
	b x
	c y
	d color
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getText
	a (Lesf;IIF)V render
gfa net/minecraft/realms/RealmsObjectSelectionList
	a ()I getMaxPosition
	a (I)V selectItem
	a (Letm$a;)I addEntry
	a (Ljava/util/Collection;)V replaceEntries
	b ()I getRowWidth
	b (Lesl$a;)I addEntry
	c ()I getScrollbarPosition
	h (I)I getRowTop
	k ()I getItemCount
	k (I)V setSelectedItem
	o ()I getRowLeft
	w ()V clear
gfb net/minecraft/realms/RealmsScreen
	a labels
	k TITLE_HEIGHT
	l EXPIRATION_NOTIFICATION_DAYS
	m SIZE_LIMIT
	n COLOR_DARK_GRAY
	o COLOR_MEDIUM_GRAY
	p COLOR_GREEN
	q COLOR_RED_FADE
	s COLOR_YELLOW
	t COLOR_BRIGHT_YELLOW
	u COLOR_LINK
	v COLOR_LINK_HOVER
	w COLOR_INFO
	x SKIN_FACE_SIZE
	a (Lgez;)Lgez; addLabel
	h (I)I row
	l ()Lnet/minecraft/network/chat/IChatBaseComponent; createLabelNarration
gfc net/minecraft/realms/RepeatedNarrator
	a permitsPerSecond
	b params
	a (Leqn;Lnet/minecraft/network/chat/IChatBaseComponent;)V narrate
gfc$a net/minecraft/realms/RepeatedNarrator$Params
	a narration
	b rateLimiter
gi$a net/minecraft/commands/synchronization/ArgumentTypeInfo$Template
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gl$a net/minecraft/commands/synchronization/SingletonArgumentInfo$Template
	b constructor
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gm$a net/minecraft/commands/synchronization/SuggestionProviders$Wrapper
	a delegate
	b name
gn$a net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template
	b min
	c max
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/DoubleArgumentType; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
go$a net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template
	b min
	c max
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/FloatArgumentType; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gp$a net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template
	b min
	c max
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/IntegerArgumentType; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gq$a net/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template
	b min
	c max
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/LongArgumentType; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gr$a net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template
	b type
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/StringArgumentType; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gv net/minecraft/core/BlockMath
	a VANILLA_UV_TRANSFORM_LOCAL_TO_GLOBAL
	b VANILLA_UV_TRANSFORM_GLOBAL_TO_LOCAL
	c LOGGER
	a (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; blockCenterToCorner
	a (Lcom/mojang/math/Transformation;Lnet/minecraft/core/EnumDirection;Ljava/util/function/Supplier;)Lcom/mojang/math/Transformation; getUVLockTransform
	b (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; blockCornerToCenter
he$a net/minecraft/core/Holder$Direct
	a value
	a ()Ljava/lang/Object; value
	a (Ljava/util/function/Predicate;)Z is
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
	a (Lnet/minecraft/resources/MinecraftKey;)Z is
	a (Lnet/minecraft/resources/ResourceKey;)Z is
	a (Lnet/minecraft/tags/TagKey;)Z is
	b ()Z isBound
	c ()Ljava/util/stream/Stream; tags
	d ()Lcom/mojang/datafixers/util/Either; unwrap
	e ()Ljava/util/Optional; unwrapKey
	f ()Lhe$b; kind
he$b net/minecraft/core/Holder$Kind
	a REFERENCE
	b DIRECT
	c $VALUES
	a ()[Lhe$b; $values
he$c net/minecraft/core/Holder$Reference
	a owner
	b tags
	c type
	d key
	e value
	a ()Ljava/lang/Object; value
	a (Ljava/util/Collection;)V bindTags
	a (Ljava/util/function/Predicate;)Z is
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
	a (Lnet/minecraft/core/HolderOwner;Ljava/lang/Object;)Lhe$c; createIntrusive
	a (Lnet/minecraft/core/HolderOwner;Lnet/minecraft/resources/ResourceKey;)Lhe$c; createStandAlone
	a (Lnet/minecraft/resources/MinecraftKey;)Z is
	a (Lnet/minecraft/resources/ResourceKey;)Z is
	a (Lnet/minecraft/tags/TagKey;)Z is
	b ()Z isBound
	b (Ljava/lang/Object;)V bindValue
	b (Lnet/minecraft/resources/ResourceKey;)V bindKey
	c ()Ljava/util/stream/Stream; tags
	d ()Lcom/mojang/datafixers/util/Either; unwrap
	e ()Ljava/util/Optional; unwrapKey
	f ()Lhe$b; kind
	g ()Lnet/minecraft/resources/ResourceKey; key
he$c$a net/minecraft/core/Holder$Reference$Type
	a STAND_ALONE
	b INTRUSIVE
	c $VALUES
	a ()[Lhe$c$a; $values
hf$a net/minecraft/core/HolderGetter$Provider
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; lookup
	b (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderGetter; lookupOrThrow
hg$a net/minecraft/core/HolderLookup$Delegate
	c parent
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; get
	a (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; get
	b ()Ljava/util/stream/Stream; listElements
	d ()Ljava/util/stream/Stream; listTags
hg$b net/minecraft/core/HolderLookup$Provider
	a ()Lhf$a; asGetterLookup
	a (Ljava/util/stream/Stream;)Lhg$b; create
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; lookup
	b (Lnet/minecraft/resources/ResourceKey;)Lhg$c; lookupOrThrow
hg$c net/minecraft/core/HolderLookup$RegistryLookup
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/core/HolderLookup; filterFeatures
	f ()Lnet/minecraft/resources/ResourceKey; key
	g ()Lcom/mojang/serialization/Lifecycle; registryLifecycle
hg$c$a net/minecraft/core/HolderLookup$RegistryLookup$Delegate
	a ()Lhg$c; parent
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; get
	a (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; get
	b ()Ljava/util/stream/Stream; listElements
	d ()Ljava/util/stream/Stream; listTags
	f ()Lnet/minecraft/resources/ResourceKey; key
	g ()Lcom/mojang/serialization/Lifecycle; registryLifecycle
hi$a net/minecraft/core/HolderSet$Direct
	a contents
	b contentsSet
	a (Lnet/minecraft/core/Holder;)Z contains
	c ()Lcom/mojang/datafixers/util/Either; unwrap
	d ()Ljava/util/Optional; unwrapKey
	e ()Ljava/util/List; contents
hi$b net/minecraft/core/HolderSet$ListBacked
	a ()Ljava/util/stream/Stream; stream
	a (I)Lnet/minecraft/core/Holder; get
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandomElement
	b ()I size
	e ()Ljava/util/List; contents
hr$c net/minecraft/core/RegistryAccess$ImmutableRegistryAccess
	c registries
	b ()Ljava/util/stream/Stream; registries
	c (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; registry
hr$d net/minecraft/core/RegistryAccess$RegistryEntry
	a key
	b value
	a ()Lnet/minecraft/resources/ResourceKey; key
	a (Ljava/util/Map$Entry;)Lhr$d; fromMapEntry
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/IRegistry;)Lhr$d; fromUntyped
	b ()Lnet/minecraft/core/IRegistry; value
	c ()Lhr$d; freeze
hs$a net/minecraft/core/RegistryCodecs$RegistryEntry
	a key
	b id
	c value
	a ()Lnet/minecraft/resources/ResourceKey; key
	b ()I id
	c ()Ljava/lang/Object; value
ht$a net/minecraft/core/RegistrySetBuilder$BuildState
	a owner
	b lookup
	c registries
	d registeredValues
	e errors
	a ()Lnet/minecraft/data/worldgen/BootstapContext; bootstapContext
	a (Lhg$b;)V fillMissingHolders
	a (Lnet/minecraft/core/HolderOwner;)V addOwner
	a (Lnet/minecraft/core/IRegistryCustom;Ljava/util/stream/Stream;)Lht$a; create
	b ()V reportRemainingUnreferencedValues
	c ()V throwOnError
	d ()Ljava/util/stream/Stream; collectReferencedRegistries
	e ()Lht$b; owner
	f ()Lht$h; lookup
	g ()Ljava/util/Map; registries
	h ()Ljava/util/Map; registeredValues
	i ()Ljava/util/List; errors
ht$b net/minecraft/core/RegistrySetBuilder$CompositeOwner
	a owners
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
	b (Lnet/minecraft/core/HolderOwner;)V add
ht$c net/minecraft/core/RegistrySetBuilder$EmptyTagLookup
	b owner
	a (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; get
ht$d net/minecraft/core/RegistrySetBuilder$RegisteredValue
	a value
	b lifecycle
	a ()Ljava/lang/Object; value
	b ()Lcom/mojang/serialization/Lifecycle; lifecycle
ht$e net/minecraft/core/RegistrySetBuilder$RegistryBootstrap
ht$f net/minecraft/core/RegistrySetBuilder$RegistryContents
	a key
	b lifecycle
	c values
	a ()Lhg$c; buildAsLookup
	b ()Lnet/minecraft/resources/ResourceKey; key
	c ()Lcom/mojang/serialization/Lifecycle; lifecycle
	d ()Ljava/util/Map; values
ht$g net/minecraft/core/RegistrySetBuilder$RegistryStub
	a key
	b lifecycle
	c bootstrap
	a ()Lnet/minecraft/resources/ResourceKey; key
	a (Lht$a;)Lht$f; collectChanges
	b ()Lcom/mojang/serialization/Lifecycle; lifecycle
	b (Lht$a;)V apply
	c ()Lht$e; bootstrap
ht$h net/minecraft/core/RegistrySetBuilder$UniversalLookup
	a holders
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; get
	c (Lnet/minecraft/resources/ResourceKey;)Lhe$c; getOrCreate
ht$i net/minecraft/core/RegistrySetBuilder$ValueAndHolder
	a value
	b holder
	a ()Lht$d; value
	b ()Ljava/util/Optional; holder
hu$a net/minecraft/core/RegistrySynchronization$NetworkedRegistryData
	a key
	b networkCodec
	a ()Lnet/minecraft/resources/ResourceKey; key
	b ()Lcom/mojang/serialization/Codec; networkCodec
is net/minecraft/core/particles/ParticleGroup
	a SPORE_BLOSSOM
	b limit
	a ()I getLimit
it$a net/minecraft/core/particles/ParticleOptions$Deserializer
	b (Lnet/minecraft/core/particles/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleParam; fromCommand
	b (Lnet/minecraft/core/particles/Particle;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/core/particles/ParticleParam; fromNetwork
jb$a net/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap
je net/minecraft/data/BlockFamilies
	A EXPOSED_CUT_COPPER
	B WAXED_EXPOSED_COPPER
	C WAXED_EXPOSED_CUT_COPPER
	D WEATHERED_COPPER
	E WEATHERED_CUT_COPPER
	F WAXED_WEATHERED_COPPER
	G WAXED_WEATHERED_CUT_COPPER
	H OXIDIZED_COPPER
	I OXIDIZED_CUT_COPPER
	J WAXED_OXIDIZED_COPPER
	K WAXED_OXIDIZED_CUT_COPPER
	L COBBLESTONE
	M MOSSY_COBBLESTONE
	N DIORITE
	O POLISHED_DIORITE
	P GRANITE
	Q POLISHED_GRANITE
	R NETHER_BRICKS
	S RED_NETHER_BRICKS
	T PRISMARINE
	U PURPUR
	V PRISMARINE_BRICKS
	W DARK_PRISMARINE
	X QUARTZ
	Y SMOOTH_QUARTZ
	Z SANDSTONE
	a ACACIA_PLANKS
	aa CUT_SANDSTONE
	ab SMOOTH_SANDSTONE
	ac RED_SANDSTONE
	ad CUT_RED_SANDSTONE
	ae SMOOTH_RED_SANDSTONE
	af STONE
	ag STONE_BRICK
	ah DEEPSLATE
	ai COBBLED_DEEPSLATE
	aj POLISHED_DEEPSLATE
	ak DEEPSLATE_BRICKS
	al DEEPSLATE_TILES
	am MAP
	an RECIPE_GROUP_PREFIX_WOODEN
	ao RECIPE_UNLOCKED_BY_HAS_PLANKS
	b CHERRY_PLANKS
	c BIRCH_PLANKS
	d CRIMSON_PLANKS
	e JUNGLE_PLANKS
	f OAK_PLANKS
	g DARK_OAK_PLANKS
	h SPRUCE_PLANKS
	i WARPED_PLANKS
	j MANGROVE_PLANKS
	k BAMBOO_PLANKS
	l BAMBOO_MOSAIC
	m MUD_BRICKS
	n ANDESITE
	o POLISHED_ANDESITE
	p BLACKSTONE
	q POLISHED_BLACKSTONE
	r POLISHED_BLACKSTONE_BRICKS
	s BRICKS
	t END_STONE_BRICKS
	u MOSSY_STONE_BRICKS
	v COPPER_BLOCK
	w CUT_COPPER
	x WAXED_COPPER_BLOCK
	y WAXED_CUT_COPPER
	z EXPOSED_COPPER
	a ()Ljava/util/stream/Stream; getAllFamilies
	a (Lnet/minecraft/world/level/block/Block;)Ljf$a; familyBuilder
jf net/minecraft/data/BlockFamily
	a baseBlock
	b variants
	c requiredFeatures
	d generateModel
	e generateRecipe
	f recipeGroupPrefix
	g recipeUnlockedBy
	a ()Lnet/minecraft/world/level/block/Block; getBaseBlock
	a (Ljf$b;)Lnet/minecraft/world/level/block/Block; get
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Z shouldGenerateRecipe
	b ()Ljava/util/Map; getVariants
	c ()Z shouldGenerateModel
	d ()Ljava/util/Optional; getRecipeGroupPrefix
	e ()Ljava/util/Optional; getRecipeUnlockedBy
jf$a net/minecraft/data/BlockFamily$Builder
	a family
	a ()Ljf; getFamily
	a (Ljava/lang/String;)Ljf$a; recipeGroupPrefix
	a (Lnet/minecraft/world/level/block/Block;)Ljf$a; button
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Ljf$a; sign
	a ([Lnet/minecraft/world/flag/FeatureFlag;)Ljf$a; featureLockedBehind
	b ()Ljf$a; dontGenerateModel
	b (Ljava/lang/String;)Ljf$a; recipeUnlockedBy
	b (Lnet/minecraft/world/level/block/Block;)Ljf$a; chiseled
	c ()Ljf$a; dontGenerateRecipe
	c (Lnet/minecraft/world/level/block/Block;)Ljf$a; mosaic
	d (Lnet/minecraft/world/level/block/Block;)Ljf$a; cracked
	e (Lnet/minecraft/world/level/block/Block;)Ljf$a; cut
	f (Lnet/minecraft/world/level/block/Block;)Ljf$a; door
	g (Lnet/minecraft/world/level/block/Block;)Ljf$a; customFence
	h (Lnet/minecraft/world/level/block/Block;)Ljf$a; fence
	i (Lnet/minecraft/world/level/block/Block;)Ljf$a; customFenceGate
	j (Lnet/minecraft/world/level/block/Block;)Ljf$a; fenceGate
	k (Lnet/minecraft/world/level/block/Block;)Ljf$a; slab
	l (Lnet/minecraft/world/level/block/Block;)Ljf$a; stairs
	m (Lnet/minecraft/world/level/block/Block;)Ljf$a; pressurePlate
	n (Lnet/minecraft/world/level/block/Block;)Ljf$a; polished
	o (Lnet/minecraft/world/level/block/Block;)Ljf$a; trapdoor
	p (Lnet/minecraft/world/level/block/Block;)Ljf$a; wall
jf$b net/minecraft/data/BlockFamily$Variant
	a BUTTON
	b CHISELED
	c CRACKED
	d CUT
	e DOOR
	f CUSTOM_FENCE
	g FENCE
	h CUSTOM_FENCE_GATE
	i FENCE_GATE
	j MOSAIC
	k SIGN
	l SLAB
	m STAIRS
	n PRESSURE_PLATE
	o POLISHED
	p TRAPDOOR
	q WALL
	r WALL_SIGN
	s recipeGroup
	t $VALUES
	a ()Ljava/lang/String; getRecipeGroup
	b ()[Ljf$b; $values
jh net/minecraft/data/DataGenerator
	a LOGGER
	b rootOutputFolder
	c vanillaPackOutput
	d allProviderIds
	e providersToRun
	f version
	g alwaysGenerate
	a ()V run
	a (Z)Ljh$a; getVanillaPack
	a (ZLjava/lang/String;)Ljh$a; getBuiltinDatapack
jh$a net/minecraft/data/DataGenerator$PackGenerator
	b toRun
	c providerPrefix
	d output
	a (Lji$a;)Lnet/minecraft/data/DebugReportProvider; addProvider
ji$a net/minecraft/data/DataProvider$Factory
jj net/minecraft/data/HashCache
	a LOGGER
	b HEADER_MARKER
	c rootDir
	d cacheDir
	e versionId
	f caches
	g cachesToWrite
	h cachePaths
	i initialCount
	j writes
	a ()V purgeStaleAndWrite
	a (Ljava/lang/String;)Z shouldRunInThisVersion
	a (Ljava/lang/String;Ljj$d;)Ljava/util/concurrent/CompletableFuture; generateUpdate
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljj$b; readCache
	a (Ljj$e;)V applyUpdate
	b (Ljava/lang/String;)Ljava/nio/file/Path; getProviderCachePath
jj$a net/minecraft/data/HashCache$CacheUpdater
	c provider
	d oldCache
	e newCache
	f writes
	g closed
	a ()Ljj$e; close
	a (Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)Z shouldWrite
jj$b net/minecraft/data/HashCache$ProviderCache
	a version
	b data
	a ()I count
	a (Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode; get
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljj$b; load
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)V save
	b ()Ljava/lang/String; version
	c ()Lcom/google/common/collect/ImmutableMap; data
jj$c net/minecraft/data/HashCache$ProviderCacheBuilder
	a version
	b data
	a ()Ljj$b; build
	a (Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)V put
	b ()Ljava/lang/String; version
	c ()Ljava/util/concurrent/ConcurrentMap; data
jj$d net/minecraft/data/HashCache$UpdateFunction
jj$e net/minecraft/data/HashCache$UpdateResult
	a providerId
	b cache
	c writes
	a ()Ljava/lang/String; providerId
	b ()Ljj$b; cache
	c ()I writes
jk$a net/minecraft/data/PackOutput$PathProvider
	a root
	b kind
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/nio/file/Path; json
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; file
jk$b net/minecraft/data/PackOutput$Target
	a DATA_PACK
	b RESOURCE_PACK
	c REPORTS
	d directory
	e $VALUES
	a ()[Ljk$b; $values
jl net/minecraft/data/advancements/AdvancementProvider
	d pathProvider
	e subProviders
	f registries
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
jm net/minecraft/data/advancements/AdvancementSubProvider
	a (Lhg$b;Ljava/util/function/Consumer;)V generate
jo net/minecraft/data/advancements/packs/VanillaAdvancementProvider
	a (Lnet/minecraft/data/PackOutput;Ljava/util/concurrent/CompletableFuture;)Ljl; create
jp net/minecraft/data/advancements/packs/VanillaAdventureAdvancements
	a DISTANCE_FROM_BOTTOM_TO_TOP
	b Y_COORDINATE_AT_TOP
	c Y_COORDINATE_AT_BOTTOM
	d BEDROCK_THICKNESS
	e MOBS_TO_KILL
	a (Lhg$b;Ljava/util/function/Consumer;)V generate
	a (Ljava/util/function/Consumer;Lnet/minecraft/advancements/AdvancementHolder;Lcrh$a;)V createAdventuringTime
	a (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; smithingWithStyle
	a (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;Ljava/util/List;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addBiomes
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;Ljava/util/Optional;)Lnet/minecraft/advancements/Criterion; fireCountAndBystander
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/item/Item;)Lnet/minecraft/advancements/Criterion; lookAtThroughItem
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/Criterion; placedBlockReadByComparator
	b (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; craftingANewLook
	b (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/Criterion; placedComparatorReadingBlock
	c (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; respectingTheRemnantsCriterions
	d (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addMobsToKill
jq net/minecraft/data/advancements/packs/VanillaHusbandryAdvancements
	a BREEDABLE_ANIMALS
	b INDIRECTLY_BREEDABLE_ANIMALS
	c FISH
	d FISH_BUCKETS
	e EDIBLE_ITEMS
	f WAX_SCRAPING_TOOLS
	a (Lhg$b;Ljava/util/function/Consumer;)V generate
	a (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addLeashedFrogVariants
	a (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addBreedable
	a (Lnet/minecraft/advancements/AdvancementHolder;Ljava/util/function/Consumer;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Lnet/minecraft/advancements/AdvancementHolder; createBreedAllAnimalsAdvancement
	b (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addFood
	c (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addFishBuckets
	d (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addFish
	e (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addCatVariants
jr net/minecraft/data/advancements/packs/VanillaNetherAdvancements
	a DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE
	a (Lhg$b;Ljava/util/function/Consumer;)V generate
js net/minecraft/data/advancements/packs/VanillaStoryAdvancements
	a (Lhg$b;Ljava/util/function/Consumer;)V generate
jt net/minecraft/data/advancements/packs/VanillaTheEndAdvancements
	a (Lhg$b;Ljava/util/function/Consumer;)V generate
jv net/minecraft/data/info/BiomeParametersDumpReport
	d LOGGER
	e topPath
	f registries
	g ENTRY_CODEC
	h CODEC
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Lnet/minecraft/data/CachedOutput;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; dumpValue
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/nio/file/Path; createPath
jw net/minecraft/data/info/BlockListReport
	d output
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
jx net/minecraft/data/info/CommandsReport
	d output
	e registries
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
jy net/minecraft/data/info/RegistryDumpReport
	d output
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/core/IRegistry;)Lcom/google/gson/JsonElement; dumpRegistry
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
ka net/minecraft/data/loot/BlockLootSubProvider
	a HAS_SILK_TOUCH
	b HAS_NO_SILK_TOUCH
	c HAS_SHEARS
	d explosionResistant
	e enabledFeatures
	f map
	g NORMAL_LEAVES_SAPLING_CHANCES
	h HAS_SHEARS_OR_SILK_TOUCH
	i HAS_NO_SHEARS_OR_SILK_TOUCH
	j NORMAL_LEAVES_STICK_CHANCES
	a ()Lecy$a; noDrop
	a (Lnet/minecraft/world/level/IMaterial;)Lecy$a; createSingleItemTable
	a (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; applyExplosionDecay
	a (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; applyExplosionCondition
	a (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lecy$a; createSingleItemTable
	a (Lnet/minecraft/world/level/block/Block;)Lecy$a; createSlabItemTable
	a (Lnet/minecraft/world/level/block/Block;Lecy$a;)V add
	a (Lnet/minecraft/world/level/block/Block;Ledj$a;)Lecy$a; createSilkTouchDispatchTable
	a (Lnet/minecraft/world/level/block/Block;Lefp$a;)Lecy$a; createMultifaceBlockDrops
	a (Lnet/minecraft/world/level/block/Block;Lefp$a;Ledj$a;)Lecy$a; createSelfDropDispatchTable
	a (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V add
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lecy$a; createOreDrop
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lefp$a;)Lecy$a; createCropDrops
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/IMaterial;)Lecy$a; createSingleItemTableWithSilkTouch
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lecy$a; createSingleItemTableWithSilkTouch
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lecy$a; createDoublePlantWithSeedDrops
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lecy$a; createLeavesDrops
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Lecy$a; createSinglePropConditionTable
	b ()V generate
	b (Lnet/minecraft/world/level/IMaterial;)Lecy$a; createShearsOnlyDrop
	b (Lnet/minecraft/world/level/block/Block;)Lecy$a; createNameableBlockEntityTable
	b (Lnet/minecraft/world/level/block/Block;Ledj$a;)Lecy$a; createShearsDispatchTable
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lecy$a; createStemDrops
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/IMaterial;)Lecy$a; createMushroomBlockDrop
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V addNetherVinesDropTable
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lecy$a; createOakLeavesDrops
	c (Lnet/minecraft/world/level/IMaterial;)Lecy$a; createSilkTouchOnlyTable
	c (Lnet/minecraft/world/level/block/Block;)Lecy$a; createShulkerBoxDrop
	c (Lnet/minecraft/world/level/block/Block;Ledj$a;)Lecy$a; createSilkTouchOrShearsDispatchTable
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lecy$a; createAttachedStemDrops
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/IMaterial;)V dropOther
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V otherWhenSilkTouch
	d (Lnet/minecraft/world/level/IMaterial;)Lecy$a; createPotFlowerItemTable
	d (Lnet/minecraft/world/level/block/Block;)Lecy$a; createCopperOreDrops
	e (Lnet/minecraft/world/level/block/Block;)Lecy$a; createLapisOreDrops
	f (Lnet/minecraft/world/level/block/Block;)Lecy$a; createRedstoneOreDrops
	g (Lnet/minecraft/world/level/block/Block;)Lecy$a; createBannerDrop
	h (Lnet/minecraft/world/level/block/Block;)Lecy$a; createBeeNestDrop
	i (Lnet/minecraft/world/level/block/Block;)Lecy$a; createBeeHiveDrop
	j (Lnet/minecraft/world/level/block/Block;)Lecy$a; createCaveVinesDrop
	k (Lnet/minecraft/world/level/block/Block;)Lecy$a; createGrassDrops
	l (Lnet/minecraft/world/level/block/Block;)Lecy$a; createMangroveLeavesDrops
	m (Lnet/minecraft/world/level/block/Block;)Lecy$a; createDoublePlantShearsDrop
	n (Lnet/minecraft/world/level/block/Block;)Lecy$a; createCandleDrops
	o (Lnet/minecraft/world/level/block/Block;)Lecy$a; createPetalsDrops
	p (Lnet/minecraft/world/level/block/Block;)Lecy$a; createCandleCakeDrops
	q (Lnet/minecraft/world/level/block/Block;)Lecy$a; createDoorTable
	r (Lnet/minecraft/world/level/block/Block;)V dropPottedContents
	s (Lnet/minecraft/world/level/block/Block;)V dropWhenSilkTouch
	t (Lnet/minecraft/world/level/block/Block;)V dropSelf
kb net/minecraft/data/loot/EntityLootSubProvider
	a ENTITY_ON_FIRE
	b SPECIAL_LOOT_TABLE_TYPES
	c allowed
	d required
	e map
	a ()V generate
	a (Lnet/minecraft/world/entity/EntityTypes;)Z canHaveLootTable
	a (Lnet/minecraft/world/entity/EntityTypes;Lecy$a;)V add
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/resources/MinecraftKey;Lecy$a;)V add
	a (Lnet/minecraft/world/entity/animal/FrogVariant;)Lefp$a; killedByFrogVariant
	a (Lnet/minecraft/world/level/IMaterial;)Lecy$a; createSheepTable
	b ()Lefp$a; killedByFrog
kc net/minecraft/data/loot/LootTableProvider
	d LOGGER
	e pathProvider
	f requiredTables
	g subProviders
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
kc$a net/minecraft/data/loot/LootTableProvider$SubProviderEntry
	a provider
	b paramSet
	a ()Ljava/util/function/Supplier; provider
	b ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet; paramSet
kd net/minecraft/data/loot/LootTableSubProvider
kf net/minecraft/data/loot/packs/TradeRebalanceChestLoot
	a ()Lecy$a; pillagerOutpostLootTable
	b ()Lecy$a; desertPyramidLootTable
	c ()Lecy$a; ancientCityLootTable
	d ()Lecy$a; jungleTempleLootTable
kg net/minecraft/data/loot/packs/TradeRebalanceLootTableProvider
	a (Lnet/minecraft/data/PackOutput;)Lkc; create
kh net/minecraft/data/loot/packs/VanillaArchaeologyLoot
ki net/minecraft/data/loot/packs/VanillaBlockLoot
	h JUNGLE_LEAVES_SAPLING_CHANGES
	i EXPLOSION_RESISTANT
	b ()V generate
	c ()Lecy$a; createPitcherCropLoot
	u (Lnet/minecraft/world/level/block/Block;)Lecy$a; createDecoratedPotTable
kj net/minecraft/data/loot/packs/VanillaChestLoot
	a ()Lecy$a; shipwreckSupplyLootTable
	b ()Lecy$a; shipwreckMapLootTable
	c ()Lecy$a; bastionHoglinStableLootTable
	d ()Lecy$a; bastionBridgeLootTable
	e ()Lecy$a; endCityTreasureLootTable
	f ()Lecy$a; netherBridgeLootTable
	g ()Lecy$a; bastionTreasureLootTable
	h ()Lecy$a; bastionOtherLootTable
	i ()Lecy$a; woodlandMansionLootTable
	j ()Lecy$a; strongholdLibraryLootTable
	k ()Lecy$a; strongholdCorridorLootTable
	l ()Lecy$a; ancientCityLootTable
	m ()Lecy$a; jungleTempleLootTable
	n ()Lecy$a; shipwreckTreasureLootTable
	o ()Lecy$a; pillagerOutpostLootTable
	p ()Lecy$a; desertPyramidLootTable
kk net/minecraft/data/loot/packs/VanillaEntityLoot
	a ()V generate
	c ()Lecy$a; elderGuardianLootTable
kl net/minecraft/data/loot/packs/VanillaFishingLoot
	a IN_JUNGLE
	b IN_SPARSE_JUNGLE
	c IN_BAMBOO_JUNGLE
	a ()Lecy$a; fishingFishLootTable
km net/minecraft/data/loot/packs/VanillaGiftLoot
kn net/minecraft/data/loot/packs/VanillaLootTableProvider
	a (Lnet/minecraft/data/PackOutput;)Lkc; create
ko net/minecraft/data/loot/packs/VanillaPiglinBarterLoot
kq net/minecraft/data/metadata/PackMetadataGenerator
	d output
	e elements
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/data/PackOutput;Lnet/minecraft/network/chat/IChatBaseComponent;)Lkq; forFeaturePack
	a (Lnet/minecraft/data/PackOutput;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/world/flag/FeatureFlagSet;)Lkq; forFeaturePack
	a (Lnet/minecraft/server/packs/metadata/MetadataSectionType;Ljava/lang/Object;)Lkq; add
ks net/minecraft/data/models/BlockModelGenerators
	a MULTIFACE_GENERATOR
	b blockStateOutput
	c modelOutput
	d skippedAutoModelsOutput
	e nonOrientableTrapdoor
	f fullBlockModelCustomGenerators
	g texturedModels
	h SHAPE_CONSUMERS
	i CHISELED_BOOKSHELF_SLOT_MODEL_CACHE
	A ()V createCauldrons
	A (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; createSideFireModels
	B ()V createChorusFlower
	B (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; createTopFireModels
	C ()V createEndPortalFrame
	C (Lnet/minecraft/world/level/block/Block;)V createLantern
	D ()V createChorusPlant
	D (Lnet/minecraft/world/level/block/Block;)V createNonTemplateHorizontalBlock
	E ()V createComposter
	E (Lnet/minecraft/world/level/block/Block;)V createMultiface
	F ()V createAmethystClusters
	F (Lnet/minecraft/world/level/block/Block;)V createShulkerBox
	G ()V createPointedDripstone
	H ()V createDaylightDetector
	I ()V createLightningRod
	J ()V createFarmland
	K ()V createFire
	L ()V createSoulFire
	M ()V createMuddyMangroveRoots
	N ()V createMangrovePropagule
	O ()V createFrostedIce
	P ()V createGrassBlocks
	Q ()V createCocoa
	R ()V createDirtPath
	S ()V createHopper
	T ()V createIronBars
	U ()V createLever
	V ()V createLilyPad
	W ()V createFrogspawnBlock
	X ()V createNetherPortalBlock
	Y ()V createNetherrack
	Z ()V createObserver
	a ()V run
	a (I)Ljava/util/List; createBambooModels
	a (ILjava/lang/String;Llj;)Lnet/minecraft/resources/MinecraftKey; createTurtleEggModel
	a (Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/resources/MinecraftKey; createTurtleEggModel
	a (Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List; wrapModels
	a (Lkx;Lkw$c;Llc$a;)V addSlotStateAndRotationVariants
	a (Lkx;Lkw$c;Llc$a;Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean;Llh;Z)V addBookSlotModel
	a (Lkz$d;Lnet/minecraft/world/level/block/state/properties/BlockPropertyDoubleBlockHalf;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lkz$d; configureDoorHalf
	a (Lll$a;[Lnet/minecraft/world/level/block/Block;)V createColoredBlockWithRandomRotations
	a (Lnet/minecraft/core/BlockPropertyJigsawOrientation;Llb;)Llb; applyRotation
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)Llb; createPointedDripstoneVariant
	a (Lnet/minecraft/resources/MinecraftKey;)[Llb; createRotatedVariants
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/level/block/Block;)Lks$a; blockEntityModels
	a (Lnet/minecraft/world/item/Item;)V createSimpleFlatItemModel
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/MinecraftKey;)V delegateItemModel
	a (Lnet/minecraft/world/level/block/Block;)V createTrivialCube
	a (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)V createSimpleFlatItemModel
	a (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Llh;Ljava/util/function/Function;)Lnet/minecraft/resources/MinecraftKey; createSuffixedVariant
	a (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V createBeeNest
	a (Lnet/minecraft/world/level/block/Block;Lks$e;)V createCrossBlockWithDefaultItem
	a (Lnet/minecraft/world/level/block/Block;Lks$e;Llj;)V createCrossBlockWithDefaultItem
	a (Lnet/minecraft/world/level/block/Block;Lks$e;Lnet/minecraft/world/level/block/state/properties/IBlockState;[I)V createCrossBlock
	a (Lnet/minecraft/world/level/block/Block;Llj;)V createPumpkinVariant
	a (Lnet/minecraft/world/level/block/Block;Llj;Ljava/util/function/BiConsumer;)Lkv; createPillarBlockUVLocked
	a (Lnet/minecraft/world/level/block/Block;Llj;Llh;)V createTrivialBlock
	a (Lnet/minecraft/world/level/block/Block;Lll$a;)V createAxisAlignedPillarBlock
	a (Lnet/minecraft/world/level/block/Block;Lll$a;Lll$a;)V createRotatedPillarWithHorizontalVariant
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;)V delegateItemModel
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Llb;)V createGrassLikeBlock
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Llj;)V createPistonVariant
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Llj;Ljava/util/function/BiConsumer;)Lkv; createMirroredCubeGenerator
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lky; createRotatedVariant
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lkv; createWall
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lkv; createCustomFence
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lkv; createDoor
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Z)Lkv; createFenceGate
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)V createAirLikeBlock
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createNonTemplateModelBlock
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiFunction;)V createCraftingTableLike
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lks$e;)V createPlant
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createHangingSign
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createCoral
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/IBlockState;[I)V createCropBlock
	a (Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lkz; createBooleanModelDispatch
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lkz; createEmptyOrFullDispatch
	a ([Lnet/minecraft/world/level/block/Block;)V createCampfires
	aA ()V createPetrifiedOakSlab
	aB ()V createLightBlock
	aa ()V createPistons
	ab ()V createPistonHeads
	ac ()V createSculkSensor
	ad ()V createCalibratedSculkSensor
	ae ()V createSculkShrieker
	af ()V createScaffolding
	ag ()V createCaveVines
	ah ()V createRedstoneLamp
	ai ()V createRedstoneTorch
	aj ()V createRepeater
	ak ()V createSeaPickle
	al ()V createSnowBlocks
	am ()V createStonecutter
	an ()V createStructureBlock
	ao ()V createSweetBerryBush
	ap ()V createTripwire
	aq ()V createTripwireHook
	ar ()V createTurtleEgg
	as ()V createSnifferEgg
	at ()V createSculkCatalyst
	au ()V createChiseledBookshelf
	av ()V createMagmaBlock
	aw ()V createInfestedStone
	ax ()V createInfestedDeepslate
	ay ()V createRespawnAnchor
	az ()V createJigsaw
	b ()Lkz; createHorizontalFacingDispatch
	b (Lll$a;[Lnet/minecraft/world/level/block/Block;)V createColoredBlockWithStateRotations
	b (Lnet/minecraft/world/level/block/Block;)V createGenericCube
	b (Lnet/minecraft/world/level/block/Block;Lks$e;)V createCrossBlock
	b (Lnet/minecraft/world/level/block/Block;Lks$e;Llj;)V createCrossBlock
	b (Lnet/minecraft/world/level/block/Block;Lll$a;)V createTrivialBlock
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;)Lky; createRotatedVariant
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Llj;Ljava/util/function/BiConsumer;)Lkv; createNorthWestMirroredCubeGenerator
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lkv; createButton
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lkv; createStairs
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createCoralFans
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lks$e;)V createGrowingPlant
	c ()Lkz; createHorizontalFacingDispatchAlt
	c (Lnet/minecraft/world/level/block/Block;)V skipAutoItemBlock
	c (Lnet/minecraft/world/level/block/Block;Lks$e;)V createDoublePlant
	c (Lnet/minecraft/world/level/block/Block;Lll$a;)V createHorizontallyRotatedBlock
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;)Lky; createSimpleBlock
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Llj;Ljava/util/function/BiConsumer;)Lkv; createMirroredColumnGenerator
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lkv; createFence
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lkv; createOrientableTrapdoor
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createStems
	d ()Lkz; createTorchHorizontalDispatch
	d (Lnet/minecraft/world/level/block/Block;)V createSimpleFlatItemModel
	d (Lnet/minecraft/world/level/block/Block;Lll$a;)V createFurnace
	d (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;)Lkv; createAxisAlignedPillarBlock
	d (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lkv; createRotatedPillarWithHorizontalVariant
	d (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lkv; createTrapdoor
	d (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lks$a; blockEntityModels
	e ()Lkz; createFacingDispatch
	e (Lnet/minecraft/world/level/block/Block;)V createRotatedMirroredVariantBlock
	e (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;)V createAxisAlignedPillarBlockCustomModel
	e (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lkv; createPressurePlate
	e (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lkv; createSlab
	e (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createFullAndCarpetBlocks
	f ()Lkz; createRotatedPillar
	f (Lnet/minecraft/world/level/block/Block;)V createRotatedVariantBlock
	f (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;)V createAirLikeBlock
	f (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)V createDoubleBlock
	f (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createGlassBlocks
	g ()V createBigDripLeafBlock
	g (Lnet/minecraft/world/level/block/Block;)V createBrushableBlock
	g (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createWeightedPressurePlate
	h ()V createPitcherPlant
	h (Lnet/minecraft/world/level/block/Block;)Lks$b; family
	h (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V copyModel
	i ()V createPitcherCrop
	i (Lnet/minecraft/world/level/block/Block;)V createDoor
	i (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createNormalTorch
	j ()V createSunflower
	j (Lnet/minecraft/world/level/block/Block;)V createOrientableTrapdoor
	j (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createBedItem
	k ()V createTallSeagrass
	k (Lnet/minecraft/world/level/block/Block;)V createTrapdoor
	k (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createNetherRoots
	l ()V createSmallDripleaf
	l (Lnet/minecraft/world/level/block/Block;)Lks$f; woodProvider
	l (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createCandleAndCandleCake
	m ()V createBamboo
	m (Lnet/minecraft/world/level/block/Block;)V createNonTemplateModelBlock
	n ()Lkz; createColumnWithFacing
	n (Lnet/minecraft/world/level/block/Block;)V createPassiveRail
	o ()V createBarrel
	o (Lnet/minecraft/world/level/block/Block;)V createActiveRail
	p ()V createBell
	p (Lnet/minecraft/world/level/block/Block;)V createFlowerBed
	q ()V createGrindstone
	q (Lnet/minecraft/world/level/block/Block;)V createCommandBlock
	r ()V createBookshelf
	r (Lnet/minecraft/world/level/block/Block;)V createAnvil
	s ()V createRedstoneWire
	s (Lnet/minecraft/world/level/block/Block;)V createAzalea
	t ()V createComparator
	t (Lnet/minecraft/world/level/block/Block;)V createPottedAzalea
	u ()V createSmoothStoneSlab
	u (Lnet/minecraft/world/level/block/Block;)V createMushroomBlock
	v ()V createBrewingStand
	v (Lnet/minecraft/world/level/block/Block;)V createDispenserBlock
	w ()V createCakeBlock
	w (Lnet/minecraft/world/level/block/Block;)V createAmethystCluster
	x ()V createCartographyTable
	x (Lnet/minecraft/world/level/block/Block;)V createNyliumBlock
	y ()V createSmithingTable
	y (Lnet/minecraft/world/level/block/Block;)V createRotatableColumn
	z ()V createPumpkins
	z (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; createFloorFireModels
ks$a net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator
	b baseModel
	a (Llh;[Lnet/minecraft/world/level/block/Block;)Lks$a; createWithCustomBlockItemModel
	a ([Lnet/minecraft/world/level/block/Block;)Lks$a; create
	b ([Lnet/minecraft/world/level/block/Block;)Lks$a; createWithoutBlockItem
ks$b net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider
	b mapping
	c models
	d family
	e fullBlock
	a (Ljf;)Lks$b; generateFor
	a (Llh;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/MinecraftKey; getOrCreateModel
	a (Lnet/minecraft/world/level/block/Block;)Lks$b; button
	a (Lnet/minecraft/world/level/block/Block;Llh;)Lks$b; fullBlock
	a ([Lnet/minecraft/world/level/block/Block;)Lks$b; fullBlockCopies
	b (Lnet/minecraft/world/level/block/Block;)Lks$b; wall
	c (Lnet/minecraft/world/level/block/Block;)Lks$b; customFence
	d (Lnet/minecraft/world/level/block/Block;)Lks$b; fence
	e (Lnet/minecraft/world/level/block/Block;)Lks$b; customFenceGate
	f (Lnet/minecraft/world/level/block/Block;)Lks$b; fenceGate
	g (Lnet/minecraft/world/level/block/Block;)Lks$b; pressurePlate
	h (Lnet/minecraft/world/level/block/Block;)Lks$b; sign
	i (Lnet/minecraft/world/level/block/Block;)Lks$b; slab
	j (Lnet/minecraft/world/level/block/Block;)Lks$b; stairs
	k (Lnet/minecraft/world/level/block/Block;)Lks$b; fullBlockVariant
	l (Lnet/minecraft/world/level/block/Block;)Lks$b; door
	m (Lnet/minecraft/world/level/block/Block;)V trapdoor
ks$c net/minecraft/data/models/BlockModelGenerators$BlockStateGeneratorSupplier
ks$d net/minecraft/data/models/BlockModelGenerators$BookSlotModelCacheKey
	a template
	b modelSuffix
	a ()Llh; template
	b ()Ljava/lang/String; modelSuffix
ks$e net/minecraft/data/models/BlockModelGenerators$TintState
	a TINTED
	b NOT_TINTED
	c $VALUES
	a ()Llh; getCross
	b ()Llh; getCrossPot
	c ()[Lks$e; $values
ks$f net/minecraft/data/models/BlockModelGenerators$WoodProvider
	b logMapping
	a (Lnet/minecraft/world/level/block/Block;)Lks$f; wood
	b (Lnet/minecraft/world/level/block/Block;)Lks$f; log
	c (Lnet/minecraft/world/level/block/Block;)Lks$f; logWithHorizontal
	d (Lnet/minecraft/world/level/block/Block;)Lks$f; logUVLocked
kt net/minecraft/data/models/ItemModelGenerators
	a TRIM_TYPE_PREDICATE_ID
	b GENERATED_TRIM_MODELS
	c output
	a ()V run
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getItemModelForTrimMaterial
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/util/Map;Lnet/minecraft/world/item/ArmorMaterial;)Lcom/google/gson/JsonObject; generateBaseArmorTrimTemplate
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)V generateLayeredItem
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)V generateLayeredItem
	a (Lnet/minecraft/world/item/Item;)V generateCompassItem
	a (Lnet/minecraft/world/item/Item;Ljava/lang/String;Llh;)V generateFlatItem
	a (Lnet/minecraft/world/item/Item;Llh;)V generateFlatItem
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Llh;)V generateFlatItem
	a (Lnet/minecraft/world/item/ItemArmor;)V generateArmorTrims
	b (Lnet/minecraft/world/item/Item;)V generateClockItem
kt$a net/minecraft/data/models/ItemModelGenerators$TrimModelData
	a name
	b itemModelIndex
	c overrideArmorMaterials
	a ()Ljava/lang/String; name
	a (Lnet/minecraft/world/item/ArmorMaterial;)Ljava/lang/String; name
	b ()F itemModelIndex
	c ()Ljava/util/Map; overrideArmorMaterials
ku net/minecraft/data/models/ModelProvider
	d blockStatePathProvider
	e modelPathProvider
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/data/CachedOutput;Ljava/util/Map;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; saveCollection
kv net/minecraft/data/models/blockstates/BlockStateGenerator
	a ()Lnet/minecraft/world/level/block/Block; getBlock
kw net/minecraft/data/models/blockstates/Condition
	a ()Lkw$c; condition
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)V validate
	a ([Lkw;)Lkw; and
	b ([Lkw;)Lkw; or
kw$a net/minecraft/data/models/blockstates/Condition$CompositeCondition
	a operation
	b subconditions
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)V validate
	b ()Lcom/google/gson/JsonElement; get
kw$b net/minecraft/data/models/blockstates/Condition$Operation
	a AND
	b OR
	c id
	d $VALUES
	a ()[Lkw$b; $values
kw$c net/minecraft/data/models/blockstates/Condition$TerminalCondition
	a terms
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)V validate
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Lkw$c; term
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lkw$c; term
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/String;)V putValue
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/util/stream/Stream;)Ljava/lang/String; joinValues
	b ()Lcom/google/gson/JsonElement; get
	b (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Lkw$c; negatedTerm
	b (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lkw$c; negatedTerm
	c (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String; getTerm
kx net/minecraft/data/models/blockstates/MultiPartGenerator
	a block
	b parts
	a ()Lnet/minecraft/world/level/block/Block; getBlock
	a (Ljava/util/List;)Lkx; with
	a (Lkw;Ljava/util/List;)Lkx; with
	a (Lkw;Llb;)Lkx; with
	a (Lkw;[Llb;)Lkx; with
	a (Llb;)Lkx; with
	a (Lnet/minecraft/world/level/block/Block;)Lkx; multiPart
	b ()Lcom/google/gson/JsonElement; get
kx$a net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry
	a condition
	a (Lcom/google/gson/JsonObject;)V decorate
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)V validate
kx$b net/minecraft/data/models/blockstates/MultiPartGenerator$Entry
	a variants
	a ()Lcom/google/gson/JsonElement; get
	a (Lcom/google/gson/JsonObject;)V decorate
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)V validate
ky net/minecraft/data/models/blockstates/MultiVariantGenerator
	a block
	b baseVariants
	c seenProperties
	d declaredPropertySets
	a ()Lnet/minecraft/world/level/block/Block; getBlock
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/List; mergeVariants
	a (Lkz;)Lky; with
	a (Lnet/minecraft/world/level/block/Block;)Lky; multiVariant
	a (Lnet/minecraft/world/level/block/Block;Llb;)Lky; multiVariant
	a (Lnet/minecraft/world/level/block/Block;[Llb;)Lky; multiVariant
	b ()Lcom/google/gson/JsonElement; get
kz net/minecraft/data/models/blockstates/PropertyDispatch
	a values
	a ()Ljava/util/Map; getEntries
	a (Lla;Ljava/util/List;)V putValue
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;)Lkz$a; property
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Lkz$b; properties
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Lkz$c; properties
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Lkz$d; properties
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Lkz$e; properties
	b ()Ljava/util/List; getDefinedProperties
	c ()V verifyComplete
kz$a net/minecraft/data/models/blockstates/PropertyDispatch$C1
	a property1
	a (Ljava/lang/Comparable;Ljava/util/List;)Lkz$a; select
	a (Ljava/lang/Comparable;Llb;)Lkz$a; select
	a (Ljava/util/function/Function;)Lkz; generate
	b ()Ljava/util/List; getDefinedProperties
	b (Ljava/util/function/Function;)Lkz; generateList
kz$b net/minecraft/data/models/blockstates/PropertyDispatch$C2
	a property1
	b property2
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkz$b; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Llb;)Lkz$b; select
	a (Ljava/util/function/BiFunction;)Lkz; generate
	b ()Ljava/util/List; getDefinedProperties
	b (Ljava/util/function/BiFunction;)Lkz; generateList
kz$c net/minecraft/data/models/blockstates/PropertyDispatch$C3
	a property1
	b property2
	c property3
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkz$c; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llb;)Lkz$c; select
	a (Lkz$h;)Lkz; generate
	b ()Ljava/util/List; getDefinedProperties
	b (Lkz$h;)Lkz; generateList
kz$d net/minecraft/data/models/blockstates/PropertyDispatch$C4
	a property1
	b property2
	c property3
	d property4
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkz$d; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llb;)Lkz$d; select
	a (Lkz$g;)Lkz; generate
	b ()Ljava/util/List; getDefinedProperties
	b (Lkz$g;)Lkz; generateList
kz$e net/minecraft/data/models/blockstates/PropertyDispatch$C5
	a property1
	b property2
	c property3
	d property4
	e property5
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkz$e; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llb;)Lkz$e; select
	a (Lkz$f;)Lkz; generate
	b ()Ljava/util/List; getDefinedProperties
	b (Lkz$f;)Lkz; generateList
kz$f net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction
kz$g net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction
kz$h net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction
la net/minecraft/data/models/blockstates/Selector
	a EMPTY
	b COMPARE_BY_NAME
	c values
	a ()Lla; empty
	a (Ldgm$a;)Lla; extend
	a (Lla;)Lla; extend
	a ([Ldgm$a;)Lla; of
	b ()Ljava/lang/String; getKey
lb net/minecraft/data/models/blockstates/Variant
	a values
	a ()Llb; variant
	a (Ljava/util/List;)Lcom/google/gson/JsonElement; convertList
	a (Llb;Llb;)Llb; merge
	a (Lld;Ljava/lang/Object;)Llb; with
	b ()Lcom/google/gson/JsonElement; get
lc net/minecraft/data/models/blockstates/VariantProperties
	a X_ROT
	b Y_ROT
	c MODEL
	d UV_LOCK
	e WEIGHT
lc$a net/minecraft/data/models/blockstates/VariantProperties$Rotation
	a R0
	b R90
	c R180
	d R270
	e value
	f $VALUES
	a ()[Llc$a; $values
ld net/minecraft/data/models/blockstates/VariantProperty
	a key
	b serializer
	a (Ljava/lang/Object;)Lld$a; withValue
ld$a net/minecraft/data/models/blockstates/VariantProperty$Value
	b value
	a ()Lld; getKey
	a (Lcom/google/gson/JsonObject;)V addToVariant
lf net/minecraft/data/models/model/DelegatedModel
	a parent
	a ()Lcom/google/gson/JsonElement; get
lg net/minecraft/data/models/model/ModelLocationUtils
	a (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; decorateBlockModelLocation
	a (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/MinecraftKey; getModelLocation
	a (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getModelLocation
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/MinecraftKey; getModelLocation
	a (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getModelLocation
	b (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; decorateItemModelLocation
lh net/minecraft/data/models/model/ModelTemplate
	a model
	b requiredSlots
	c suffix
	a (Llj;)Ljava/util/Map; createMap
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/util/Map;)Lcom/google/gson/JsonObject; createBaseTemplate
	a (Lnet/minecraft/resources/MinecraftKey;Llj;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/MinecraftKey; create
	a (Lnet/minecraft/resources/MinecraftKey;Llj;Ljava/util/function/BiConsumer;Llh$a;)Lnet/minecraft/resources/MinecraftKey; create
	a (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Llj;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/MinecraftKey; createWithSuffix
	a (Lnet/minecraft/world/level/block/Block;Llj;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/MinecraftKey; create
	b (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Llj;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/MinecraftKey; createWithOverride
lh$a net/minecraft/data/models/model/ModelTemplate$JsonFactory
li net/minecraft/data/models/model/ModelTemplates
	A DOOR_TOP_RIGHT_OPEN
	B CUSTOM_FENCE_POST
	C CUSTOM_FENCE_SIDE_NORTH
	D CUSTOM_FENCE_SIDE_EAST
	E CUSTOM_FENCE_SIDE_SOUTH
	F CUSTOM_FENCE_SIDE_WEST
	G CUSTOM_FENCE_INVENTORY
	H FENCE_POST
	I FENCE_SIDE
	J FENCE_INVENTORY
	K WALL_POST
	L WALL_LOW_SIDE
	M WALL_TALL_SIDE
	N WALL_INVENTORY
	O CUSTOM_FENCE_GATE_CLOSED
	P CUSTOM_FENCE_GATE_OPEN
	Q CUSTOM_FENCE_GATE_WALL_CLOSED
	R CUSTOM_FENCE_GATE_WALL_OPEN
	S FENCE_GATE_CLOSED
	T FENCE_GATE_OPEN
	U FENCE_GATE_WALL_CLOSED
	V FENCE_GATE_WALL_OPEN
	W PRESSURE_PLATE_UP
	X PRESSURE_PLATE_DOWN
	Y PARTICLE_ONLY
	Z SLAB_BOTTOM
	a CUBE
	aA CORAL_WALL_FAN
	aB GLAZED_TERRACOTTA
	aC CHORUS_FLOWER
	aD DAYLIGHT_DETECTOR
	aE STAINED_GLASS_PANE_NOSIDE
	aF STAINED_GLASS_PANE_NOSIDE_ALT
	aG STAINED_GLASS_PANE_POST
	aH STAINED_GLASS_PANE_SIDE
	aI STAINED_GLASS_PANE_SIDE_ALT
	aJ COMMAND_BLOCK
	aK CHISELED_BOOKSHELF_SLOT_TOP_LEFT
	aL CHISELED_BOOKSHELF_SLOT_TOP_MID
	aM CHISELED_BOOKSHELF_SLOT_TOP_RIGHT
	aN CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT
	aO CHISELED_BOOKSHELF_SLOT_BOTTOM_MID
	aP CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT
	aQ ANVIL
	aR STEMS
	aS ATTACHED_STEM
	aT CROP
	aU FARMLAND
	aV FIRE_FLOOR
	aW FIRE_SIDE
	aX FIRE_SIDE_ALT
	aY FIRE_UP
	aZ FIRE_UP_ALT
	aa SLAB_TOP
	ab LEAVES
	ac STAIRS_STRAIGHT
	ad STAIRS_INNER
	ae STAIRS_OUTER
	af TRAPDOOR_TOP
	ag TRAPDOOR_BOTTOM
	ah TRAPDOOR_OPEN
	ai ORIENTABLE_TRAPDOOR_TOP
	aj ORIENTABLE_TRAPDOOR_BOTTOM
	ak ORIENTABLE_TRAPDOOR_OPEN
	al POINTED_DRIPSTONE
	am CROSS
	an TINTED_CROSS
	ao FLOWER_POT_CROSS
	ap TINTED_FLOWER_POT_CROSS
	aq RAIL_FLAT
	ar RAIL_CURVED
	as RAIL_RAISED_NE
	at RAIL_RAISED_SW
	au CARPET
	av FLOWERBED_1
	aw FLOWERBED_2
	ax FLOWERBED_3
	ay FLOWERBED_4
	az CORAL_FAN
	b CUBE_DIRECTIONAL
	bA THREE_LAYERED_ITEM
	bB SHULKER_BOX_INVENTORY
	bC BED_INVENTORY
	bD BANNER_INVENTORY
	bE SKULL_INVENTORY
	bF CANDLE
	bG TWO_CANDLES
	bH THREE_CANDLES
	bI FOUR_CANDLES
	bJ CANDLE_CAKE
	bK SCULK_SHRIEKER
	ba CAMPFIRE
	bb LANTERN
	bc HANGING_LANTERN
	bd TORCH
	be WALL_TORCH
	bf PISTON
	bg PISTON_HEAD
	bh PISTON_HEAD_SHORT
	bi SEAGRASS
	bj TURTLE_EGG
	bk TWO_TURTLE_EGGS
	bl THREE_TURTLE_EGGS
	bm FOUR_TURTLE_EGGS
	bn SINGLE_FACE
	bo CAULDRON_LEVEL1
	bp CAULDRON_LEVEL2
	bq CAULDRON_FULL
	br AZALEA
	bs POTTED_AZALEA
	bt POTTED_FLOWERING_AZALEA
	bu SNIFFER_EGG
	bv FLAT_ITEM
	bw MUSIC_DISC
	bx FLAT_HANDHELD_ITEM
	by FLAT_HANDHELD_ROD_ITEM
	bz TWO_LAYERED_ITEM
	c CUBE_ALL
	d CUBE_MIRRORED_ALL
	e CUBE_NORTH_WEST_MIRRORED_ALL
	f CUBE_COLUMN_UV_LOCKED_X
	g CUBE_COLUMN_UV_LOCKED_Y
	h CUBE_COLUMN_UV_LOCKED_Z
	i CUBE_COLUMN
	j CUBE_COLUMN_HORIZONTAL
	k CUBE_COLUMN_MIRRORED
	l CUBE_TOP
	m CUBE_BOTTOM_TOP
	n CUBE_ORIENTABLE
	o CUBE_ORIENTABLE_TOP_BOTTOM
	p CUBE_ORIENTABLE_VERTICAL
	q BUTTON
	r BUTTON_PRESSED
	s BUTTON_INVENTORY
	t DOOR_BOTTOM_LEFT
	u DOOR_BOTTOM_LEFT_OPEN
	v DOOR_BOTTOM_RIGHT
	w DOOR_BOTTOM_RIGHT_OPEN
	x DOOR_TOP_LEFT
	y DOOR_TOP_LEFT_OPEN
	z DOOR_TOP_RIGHT
	a (Ljava/lang/String;Ljava/lang/String;[Llk;)Llh; create
	a (Ljava/lang/String;[Llk;)Llh; create
	a ([Llk;)Llh; create
	b (Ljava/lang/String;[Llk;)Llh; createItem
lj net/minecraft/data/models/model/TextureMapping
	a slots
	b forcedSlots
	A (Lnet/minecraft/world/level/block/Block;)Llj; orientableCube
	B (Lnet/minecraft/world/level/block/Block;)Llj; orientableCubeOnlyTop
	C (Lnet/minecraft/world/level/block/Block;)Llj; orientableCubeSameEnds
	D (Lnet/minecraft/world/level/block/Block;)Llj; top
	E (Lnet/minecraft/world/level/block/Block;)Llj; campfire
	F (Lnet/minecraft/world/level/block/Block;)Llj; layer0
	G (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/MinecraftKey; getBlockTexture
	a ()Ljava/util/stream/Stream; getForced
	a (Ljava/lang/String;)Llj; snifferEgg
	a (Llk;)Lnet/minecraft/resources/MinecraftKey; get
	a (Llk;Llk;)Llj; copySlot
	a (Llk;Lnet/minecraft/resources/MinecraftKey;)Llj; put
	a (Lnet/minecraft/resources/MinecraftKey;)Llj; defaultTexture
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llj; column
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llj; layered
	a (Lnet/minecraft/world/item/Item;)Llj; particleFromItem
	a (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getItemTexture
	a (Lnet/minecraft/world/level/block/Block;)Llj; cube
	a (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getBlockTexture
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Llj; attachedStem
	a (Lnet/minecraft/world/level/block/Block;Z)Llj; candleCake
	a (Z)Llj; sculkShrieker
	b (Llk;Llk;)Llj; copyForced
	b (Llk;Lnet/minecraft/resources/MinecraftKey;)Llj; putForced
	b (Lnet/minecraft/resources/MinecraftKey;)Llj; cube
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llj; door
	b (Lnet/minecraft/world/item/Item;)Llj; layer0
	b (Lnet/minecraft/world/level/block/Block;)Llj; defaultTexture
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Llj; pane
	c (Llk;Lnet/minecraft/resources/MinecraftKey;)Llj; copyAndUpdate
	c (Lnet/minecraft/resources/MinecraftKey;)Llj; cross
	c (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llj; layered
	c (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/MinecraftKey; getItemTexture
	c (Lnet/minecraft/world/level/block/Block;)Llj; cross
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Llj; craftingTable
	d (Llk;Lnet/minecraft/resources/MinecraftKey;)Llj; singleSlot
	d (Lnet/minecraft/resources/MinecraftKey;)Llj; plant
	d (Lnet/minecraft/world/level/block/Block;)Llj; plant
	d (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Llj; fletchingTable
	e (Lnet/minecraft/resources/MinecraftKey;)Llj; rail
	e (Lnet/minecraft/world/level/block/Block;)Llj; rail
	f (Lnet/minecraft/resources/MinecraftKey;)Llj; wool
	f (Lnet/minecraft/world/level/block/Block;)Llj; wool
	g (Lnet/minecraft/resources/MinecraftKey;)Llj; crop
	g (Lnet/minecraft/world/level/block/Block;)Llj; flowerbed
	h (Lnet/minecraft/resources/MinecraftKey;)Llj; particle
	h (Lnet/minecraft/world/level/block/Block;)Llj; stem
	i (Lnet/minecraft/resources/MinecraftKey;)Llj; torch
	i (Lnet/minecraft/world/level/block/Block;)Llj; pattern
	j (Lnet/minecraft/resources/MinecraftKey;)Llj; cauldron
	j (Lnet/minecraft/world/level/block/Block;)Llj; fan
	k (Lnet/minecraft/resources/MinecraftKey;)Llj; layer0
	k (Lnet/minecraft/world/level/block/Block;)Llj; column
	l (Lnet/minecraft/world/level/block/Block;)Llj; cubeTop
	m (Lnet/minecraft/world/level/block/Block;)Llj; pottedAzalea
	n (Lnet/minecraft/world/level/block/Block;)Llj; logColumn
	o (Lnet/minecraft/world/level/block/Block;)Llj; fence
	p (Lnet/minecraft/world/level/block/Block;)Llj; customParticle
	q (Lnet/minecraft/world/level/block/Block;)Llj; cubeBottomTop
	r (Lnet/minecraft/world/level/block/Block;)Llj; cubeBottomTopWithWall
	s (Lnet/minecraft/world/level/block/Block;)Llj; columnWithWall
	t (Lnet/minecraft/world/level/block/Block;)Llj; door
	u (Lnet/minecraft/world/level/block/Block;)Llj; particle
	v (Lnet/minecraft/world/level/block/Block;)Llj; fire0
	w (Lnet/minecraft/world/level/block/Block;)Llj; fire1
	x (Lnet/minecraft/world/level/block/Block;)Llj; lantern
	y (Lnet/minecraft/world/level/block/Block;)Llj; torch
	z (Lnet/minecraft/world/level/block/Block;)Llj; commandBlock
lk net/minecraft/data/models/model/TextureSlot
	A CROP
	B DIRT
	C FIRE
	D LANTERN
	E PLATFORM
	F UNSTICKY
	G TORCH
	H LAYER0
	I LAYER1
	J LAYER2
	K LIT_LOG
	L CANDLE
	M INSIDE
	N CONTENT
	O INNER_TOP
	P FLOWERBED
	Q id
	R parent
	a ALL
	b TEXTURE
	c PARTICLE
	d END
	e BOTTOM
	f TOP
	g FRONT
	h BACK
	i SIDE
	j NORTH
	k SOUTH
	l EAST
	m WEST
	n UP
	o DOWN
	p CROSS
	q PLANT
	r WALL
	s RAIL
	t WOOL
	u PATTERN
	v PANE
	w EDGE
	x FAN
	y STEM
	z UPPER_STEM
	a ()Ljava/lang/String; getId
	a (Ljava/lang/String;)Llk; create
	a (Ljava/lang/String;Llk;)Llk; create
	b ()Llk; getParent
ll net/minecraft/data/models/model/TexturedModel
	A template
	a CUBE
	b CUBE_MIRRORED
	c COLUMN
	d COLUMN_HORIZONTAL
	e CUBE_TOP_BOTTOM
	f CUBE_TOP
	g ORIENTABLE_ONLY_TOP
	h ORIENTABLE
	i CARPET
	j FLOWERBED_1
	k FLOWERBED_2
	l FLOWERBED_3
	m FLOWERBED_4
	n GLAZED_TERRACOTTA
	o CORAL_FAN
	p PARTICLE_ONLY
	q ANVIL
	r LEAVES
	s LANTERN
	t HANGING_LANTERN
	u SEAGRASS
	v COLUMN_ALT
	w COLUMN_HORIZONTAL_ALT
	x TOP_BOTTOM_WITH_WALL
	y COLUMN_WITH_WALL
	z mapping
	a ()Llh; getTemplate
	a (Ljava/util/function/Consumer;)Lll; updateTextures
	a (Ljava/util/function/Function;Llh;)Lll$a; createDefault
	a (Lnet/minecraft/resources/MinecraftKey;)Lll; createAllSame
	a (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/MinecraftKey; createWithSuffix
	a (Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/MinecraftKey; create
	b ()Llj; getMapping
ll$a net/minecraft/data/models/model/TexturedModel$Provider
lp net/minecraft/data/recipes/CraftingRecipeBuilder
	a (Lls;)Lnet/minecraft/world/item/crafting/CraftingBookCategory; determineBookCategory
lp$a net/minecraft/data/recipes/CraftingRecipeBuilder$CraftingResult
	a category
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
lq net/minecraft/data/recipes/FinishedRecipe
	a ()Lcom/google/gson/JsonObject; serializeRecipe
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; id
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; type
	d ()Lnet/minecraft/advancements/AdvancementHolder; advancement
lr net/minecraft/data/recipes/RecipeBuilder
	a ROOT_RECIPE_ADVANCEMENT
	a ()Lnet/minecraft/world/item/Item; getResult
	a (Ljava/lang/String;)Llr; group
	a (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Llr; unlockedBy
	a (Llt;)V save
	a (Llt;Ljava/lang/String;)V save
	a (Llt;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/resources/MinecraftKey; getDefaultRecipeId
ls net/minecraft/data/recipes/RecipeCategory
	a BUILDING_BLOCKS
	b DECORATIONS
	c REDSTONE
	d TRANSPORTATION
	e TOOLS
	f COMBAT
	g FOOD
	h BREWING
	i MISC
	j recipeFolderName
	k $VALUES
	a ()Ljava/lang/String; getFolderName
	b ()[Lls; $values
lt net/minecraft/data/recipes/RecipeOutput
	a ()Lnet/minecraft/advancements/Advancement$SerializedAdvancement; advancement
	a (Llq;)V accept
lu net/minecraft/data/recipes/RecipeProvider
	d recipePathProvider
	e advancementPathProvider
	f SHAPE_BUILDERS
	a ()Ljava/lang/String; getName
	a (Ljf;Ljf$b;)Lnet/minecraft/world/level/block/Block; getBaseBlock
	a (Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llr; slabBuilder
	a (Llt;)V buildRecipes
	a (Llt;Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;I)V cookRecipes
	a (Llt;Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;ILnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;F)V simpleCookingRecipe
	a (Llt;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V colorBlockWithDye
	a (Llt;Ljava/util/List;Lls;Lnet/minecraft/world/level/IMaterial;FILjava/lang/String;)V oreSmelting
	a (Llt;Ljf;)V generateRecipes
	a (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lls;Lnet/minecraft/world/level/IMaterial;)V nineBlockStorageRecipes
	a (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lls;Lnet/minecraft/world/level/IMaterial;Ljava/lang/String;Ljava/lang/String;)V nineBlockStorageRecipesWithCustomPacking
	a (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lls;Lnet/minecraft/world/level/IMaterial;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V nineBlockStorageRecipes
	a (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V twoByTwoPacker
	a (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;I)V stonecutterResultFromBase
	a (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;Ljava/lang/String;)V threeByThreePacker
	a (Llt;Lnet/minecraft/world/flag/FeatureFlagSet;)V generateForEnabledBlockFamilies
	a (Llt;Lnet/minecraft/world/item/Item;Lls;Lnet/minecraft/world/item/Item;)V netheriteSmithing
	a (Llt;Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/MinecraftKey;)V trimSmithing
	a (Llt;Lnet/minecraft/world/item/crafting/RecipeSerializer;Ljava/util/List;Lls;Lnet/minecraft/world/level/IMaterial;FILjava/lang/String;Ljava/lang/String;)V oreCooking
	a (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/tags/TagKey;)V copySmithingTemplate
	a (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/tags/TagKey;I)V planksFromLog
	a (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V woodFromLogs
	a (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;Ljava/lang/String;)V oneToOneConversionRecipe
	a (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;Ljava/lang/String;I)V oneToOneConversionRecipe
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/advancements/Criterion; has
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/data/CachedOutput;Lnet/minecraft/advancements/AdvancementHolder;)Ljava/util/concurrent/CompletableFuture; buildAdvancement
	a (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/Criterion; has
	a (Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/advancements/Criterion; has
	a (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llr; doorBuilder
	a (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)Ljava/lang/String; getConversionRecipeName
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/Criterion; insideOf
	a ([Lcb$a;)Lnet/minecraft/advancements/Criterion; inventoryTrigger
	a ([Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Lnet/minecraft/advancements/Criterion; inventoryTrigger
	b (Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llv; chiseledBuilder
	b (Llt;)V waxRecipes
	b (Llt;Ljava/util/List;Lls;Lnet/minecraft/world/level/IMaterial;FILjava/lang/String;)V oreBlasting
	b (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lls;Lnet/minecraft/world/level/IMaterial;Ljava/lang/String;Ljava/lang/String;)V nineBlockStorageRecipesRecipesWithCustomUnpacking
	b (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V threeByThreePacker
	b (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/tags/TagKey;I)V planksFromLogs
	b (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V woodenBoat
	b (Lnet/minecraft/world/level/IMaterial;)Ljava/lang/String; getHasName
	b (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llr; stairBuilder
	c (Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llr; pressurePlateBuilder
	c (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V slab
	c (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V chestBoat
	c (Lnet/minecraft/world/level/IMaterial;)Ljava/lang/String; getItemName
	c (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llr; buttonBuilder
	d (Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llr; wallBuilder
	d (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V wall
	d (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V pressurePlate
	d (Lnet/minecraft/world/level/IMaterial;)Ljava/lang/String; getSimpleRecipeName
	d (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llr; fenceBuilder
	e (Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llr; polishedBuilder
	e (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V polished
	e (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V hangingSign
	e (Lnet/minecraft/world/level/IMaterial;)Ljava/lang/String; getSmeltingRecipeName
	e (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llr; fenceGateBuilder
	f (Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llv; cutBuilder
	f (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V cut
	f (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V carpet
	f (Lnet/minecraft/world/level/IMaterial;)Ljava/lang/String; getBlastingRecipeName
	f (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llr; trapdoorBuilder
	g (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V chiseled
	g (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V bedFromPlanksAndWool
	g (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llr; signBuilder
	h (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V mosaicBuilder
	h (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V banner
	i (Llt;Lls;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V stonecutterResultFromBase
	i (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V stainedGlassFromGlassAndDye
	j (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V stainedGlassPaneFromStainedGlass
	k (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V stainedGlassPaneFromGlassPaneAndDye
	l (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V coloredTerracottaFromTerracottaAndDye
	m (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V concretePowder
	n (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V candle
	o (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V copySmithingTemplate
	p (Llt;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V smeltingResultFromBase
lv net/minecraft/data/recipes/ShapedRecipeBuilder
	b category
	c result
	d count
	e rows
	f key
	g criteria
	h group
	i showNotification
	a ()Lnet/minecraft/world/item/Item; getResult
	a (Ljava/lang/Character;Lnet/minecraft/tags/TagKey;)Llv; define
	a (Ljava/lang/Character;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llv; define
	a (Ljava/lang/Character;Lnet/minecraft/world/level/IMaterial;)Llv; define
	a (Ljava/lang/String;)Llr; group
	a (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Llr; unlockedBy
	a (Lls;Lnet/minecraft/world/level/IMaterial;)Llv; shaped
	a (Lls;Lnet/minecraft/world/level/IMaterial;I)Llv; shaped
	a (Llt;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Lnet/minecraft/resources/MinecraftKey;)V ensureValid
	a (Z)Llv; showNotification
	b (Ljava/lang/String;)Llv; pattern
	b (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Llv; unlockedBy
	c (Ljava/lang/String;)Llv; group
lv$a net/minecraft/data/recipes/ShapedRecipeBuilder$Result
	a id
	b result
	c count
	d group
	e pattern
	f key
	g advancement
	h showNotification
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; id
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; type
	d ()Lnet/minecraft/advancements/AdvancementHolder; advancement
lw net/minecraft/data/recipes/ShapelessRecipeBuilder
	b category
	c result
	d count
	e ingredients
	f criteria
	g group
	a ()Lnet/minecraft/world/item/Item; getResult
	a (Ljava/lang/String;)Llr; group
	a (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Llr; unlockedBy
	a (Lls;Lnet/minecraft/world/level/IMaterial;)Llw; shapeless
	a (Lls;Lnet/minecraft/world/level/IMaterial;I)Llw; shapeless
	a (Llt;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Lnet/minecraft/resources/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/tags/TagKey;)Llw; requires
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;)Llw; requires
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;I)Llw; requires
	a (Lnet/minecraft/world/level/IMaterial;I)Llw; requires
	b (Ljava/lang/String;)Llw; group
	b (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Llw; unlockedBy
	b (Lnet/minecraft/world/level/IMaterial;)Llw; requires
lw$a net/minecraft/data/recipes/ShapelessRecipeBuilder$Result
	a id
	b result
	c count
	d group
	e ingredients
	f advancement
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; id
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; type
	d ()Lnet/minecraft/advancements/AdvancementHolder; advancement
lx net/minecraft/data/recipes/SimpleCookingRecipeBuilder
	b category
	c bookCategory
	d result
	e ingredient
	f experience
	g cookingTime
	h criteria
	i group
	j serializer
	a ()Lnet/minecraft/world/item/Item; getResult
	a (Ljava/lang/String;)Llr; group
	a (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Llr; unlockedBy
	a (Llt;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Lnet/minecraft/resources/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;Lls;Lnet/minecraft/world/level/IMaterial;FI)Llx; campfireCooking
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;Lls;Lnet/minecraft/world/level/IMaterial;FILnet/minecraft/world/item/crafting/RecipeSerializer;)Llx; generic
	a (Lnet/minecraft/world/item/crafting/RecipeSerializer;Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/world/item/crafting/CookingBookCategory; determineRecipeCategory
	b (Ljava/lang/String;)Llx; group
	b (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Llx; unlockedBy
	b (Lnet/minecraft/world/item/crafting/RecipeItemStack;Lls;Lnet/minecraft/world/level/IMaterial;FI)Llx; blasting
	b (Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/world/item/crafting/CookingBookCategory; determineSmeltingRecipeCategory
	c (Lnet/minecraft/world/item/crafting/RecipeItemStack;Lls;Lnet/minecraft/world/level/IMaterial;FI)Llx; smelting
	c (Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/world/item/crafting/CookingBookCategory; determineBlastingRecipeCategory
	d (Lnet/minecraft/world/item/crafting/RecipeItemStack;Lls;Lnet/minecraft/world/level/IMaterial;FI)Llx; smoking
lx$a net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result
	a id
	b group
	c category
	d ingredient
	e result
	f experience
	g cookingTime
	h advancement
	i type
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; id
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; type
	d ()Lnet/minecraft/advancements/AdvancementHolder; advancement
	e ()Ljava/lang/String; group
	f ()Lnet/minecraft/world/item/crafting/CookingBookCategory; category
	g ()Lnet/minecraft/world/item/crafting/RecipeItemStack; ingredient
	h ()Lnet/minecraft/world/item/Item; result
	i ()F experience
	j ()I cookingTime
ly net/minecraft/data/recipes/SingleItemRecipeBuilder
	b category
	c result
	d ingredient
	e count
	f criteria
	g group
	h type
	a ()Lnet/minecraft/world/item/Item; getResult
	a (Ljava/lang/String;)Llr; group
	a (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Llr; unlockedBy
	a (Llt;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Lnet/minecraft/resources/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;Lls;Lnet/minecraft/world/level/IMaterial;)Lly; stonecutting
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;Lls;Lnet/minecraft/world/level/IMaterial;I)Lly; stonecutting
	b (Ljava/lang/String;)Lly; group
	b (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lly; unlockedBy
ly$a net/minecraft/data/recipes/SingleItemRecipeBuilder$Result
	a id
	b type
	c group
	d ingredient
	e result
	f count
	g advancement
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; id
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; type
	d ()Lnet/minecraft/advancements/AdvancementHolder; advancement
	e ()Ljava/lang/String; group
	f ()Lnet/minecraft/world/item/crafting/RecipeItemStack; ingredient
	g ()Lnet/minecraft/world/item/Item; result
	h ()I count
lz net/minecraft/data/recipes/SmithingTransformRecipeBuilder
	a template
	b base
	c addition
	d category
	e result
	f criteria
	g type
	a (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Llz; unlocks
	a (Llt;Ljava/lang/String;)V save
	a (Llt;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Lnet/minecraft/resources/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;Lnet/minecraft/world/item/crafting/RecipeItemStack;Lnet/minecraft/world/item/crafting/RecipeItemStack;Lls;Lnet/minecraft/world/item/Item;)Llz; smithing
lz$a net/minecraft/data/recipes/SmithingTransformRecipeBuilder$Result
	a id
	b type
	c template
	d base
	e addition
	f result
	g advancement
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; id
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; type
	d ()Lnet/minecraft/advancements/AdvancementHolder; advancement
	e ()Lnet/minecraft/world/item/crafting/RecipeItemStack; template
	f ()Lnet/minecraft/world/item/crafting/RecipeItemStack; base
	g ()Lnet/minecraft/world/item/crafting/RecipeItemStack; addition
	h ()Lnet/minecraft/world/item/Item; result
ma net/minecraft/data/recipes/SmithingTrimRecipeBuilder
	a category
	b template
	c base
	d addition
	e criteria
	f type
	a (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lma; unlocks
	a (Llt;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Lnet/minecraft/resources/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;Lnet/minecraft/world/item/crafting/RecipeItemStack;Lnet/minecraft/world/item/crafting/RecipeItemStack;Lls;)Lma; smithingTrim
ma$a net/minecraft/data/recipes/SmithingTrimRecipeBuilder$Result
	a id
	b type
	c template
	d base
	e addition
	f advancement
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; id
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; type
	d ()Lnet/minecraft/advancements/AdvancementHolder; advancement
	e ()Lnet/minecraft/world/item/crafting/RecipeItemStack; template
	f ()Lnet/minecraft/world/item/crafting/RecipeItemStack; base
	g ()Lnet/minecraft/world/item/crafting/RecipeItemStack; addition
mb net/minecraft/data/recipes/SpecialRecipeBuilder
	a serializer
	a (Llt;Ljava/lang/String;)V save
	a (Llt;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Lnet/minecraft/world/item/crafting/RecipeSerializer;)Lmb; special
md net/minecraft/data/recipes/packs/BundleRecipeProvider
	a (Llt;)V buildRecipes
me net/minecraft/data/recipes/packs/VanillaRecipeProvider
	d COAL_SMELTABLES
	e IRON_SMELTABLES
	f COPPER_SMELTABLES
	g GOLD_SMELTABLES
	h DIAMOND_SMELTABLES
	i LAPIS_SMELTABLES
	j REDSTONE_SMELTABLES
	k EMERALD_SMELTABLES
	a (Llt;)V buildRecipes
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	b ()Ljava/util/Map; smithingTrims
mg net/minecraft/data/registries/RegistriesDatapackGenerator
	d LOGGER
	e output
	f registries
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Lnet/minecraft/data/CachedOutput;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; dumpValue
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/data/CachedOutput;Lhg$b;Lcom/mojang/serialization/DynamicOps;Laer$b;)Ljava/util/Optional; dumpRegistryCap
mk net/minecraft/data/structures/SnbtDatafixer
	a (Ljava/lang/String;)V updateInDirectory
	a ([Ljava/lang/String;)V main
ml net/minecraft/data/structures/SnbtToNbt
	d LOGGER
	e output
	f inputFolders
	g filters
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; applyFilters
	a (Ljava/nio/file/Path;Ljava/lang/String;)Lml$c; readStructure
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; getName
	a (Lml$a;)Lml; addFilter
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/data/CachedOutput;Lml$c;Ljava/nio/file/Path;)V storeStructureIfChanged
ml$a net/minecraft/data/structures/SnbtToNbt$Filter
ml$b net/minecraft/data/structures/SnbtToNbt$StructureConversionException
ml$c net/minecraft/data/structures/SnbtToNbt$TaskResult
	a name
	b payload
	c hash
	a ()Ljava/lang/String; name
	b ()[B payload
	c ()Lcom/google/common/hash/HashCode; hash
mm net/minecraft/data/structures/StructureUpdater
	a LOGGER
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; update
mo net/minecraft/data/tags/BannerPatternTagsProvider
	a (Lhg$b;)V addTags
mp net/minecraft/data/tags/BiomeTagsProvider
	a (Lhg$b;)V addTags
mq net/minecraft/data/tags/CatVariantTagsProvider
	a (Lhg$b;)V addTags
mr net/minecraft/data/tags/DamageTypeTagsProvider
	a (Lhg$b;)V addTags
ms net/minecraft/data/tags/EntityTypeTagsProvider
	a (Lhg$b;)V addTags
mt net/minecraft/data/tags/FlatLevelGeneratorPresetTagsProvider
	a (Lhg$b;)V addTags
mu net/minecraft/data/tags/FluidTagsProvider
	a (Lhg$b;)V addTags
mv net/minecraft/data/tags/GameEventTagsProvider
	d VIBRATIONS_EXCEPT_FLAP
	a (Lhg$b;)V addTags
mw net/minecraft/data/tags/InstrumentTagsProvider
	a (Lhg$b;)V addTags
mx net/minecraft/data/tags/IntrinsicHolderTagsProvider
	d keyExtractor
	a (Lnet/minecraft/tags/TagKey;)Lmx$a; tag
	b (Lnet/minecraft/tags/TagKey;)Lnc$b; tag
mx$a net/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender
	a keyExtractor
	a (Ljava/lang/Object;)Lmx$a; add
	a (Lnet/minecraft/tags/TagKey;)Lmx$a; addTag
	a ([Ljava/lang/Object;)Lmx$a; add
	b (Lnet/minecraft/tags/TagKey;)Lnc$b; addTag
my net/minecraft/data/tags/ItemTagsProvider
	d blockTags
	g tagsToCopy
	a (Lnet/minecraft/tags/TagKey;Lnet/minecraft/tags/TagKey;)V copy
	b ()Ljava/util/concurrent/CompletableFuture; createContentsProvider
mz net/minecraft/data/tags/PaintingVariantTagsProvider
	a (Lhg$b;)V addTags
na net/minecraft/data/tags/PoiTypeTagsProvider
	a (Lhg$b;)V addTags
nb net/minecraft/data/tags/StructureTagsProvider
	a (Lhg$b;)V addTags
nc net/minecraft/data/tags/TagsProvider
	d LOGGER
	e pathProvider
	f registryKey
	g lookupProvider
	h contentsDone
	i parentProvider
	j builders
	a ()Ljava/lang/String; getName
	a (Lhg$b;)V addTags
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	b ()Ljava/util/concurrent/CompletableFuture; createContentsProvider
	b (Lnet/minecraft/tags/TagKey;)Lnc$b; tag
	c ()Ljava/util/concurrent/CompletableFuture; contentsGetter
	c (Lnet/minecraft/tags/TagKey;)Laqe; getOrCreateRawBuilder
nc$b net/minecraft/data/tags/TagsProvider$TagAppender
	a builder
	a (Lnet/minecraft/resources/MinecraftKey;)Lnc$b; addOptional
	a (Lnet/minecraft/resources/ResourceKey;)Lnc$b; add
	a ([Lnet/minecraft/resources/ResourceKey;)Lnc$b; add
	b (Lnet/minecraft/resources/MinecraftKey;)Lnc$b; addOptionalTag
	b (Lnet/minecraft/tags/TagKey;)Lnc$b; addTag
nc$c net/minecraft/data/tags/TagsProvider$TagLookup
nd net/minecraft/data/tags/TradeRebalanceStructureTagsProvider
	a (Lhg$b;)V addTags
ne net/minecraft/data/tags/VanillaBlockTagsProvider
	a (Lhg$b;)V addTags
net/minecraft/BlockUtil$Rectangle net/minecraft/BlockUtil$FoundRectangle
	a minCorner
	b axis1Size
	c axis2Size
net/minecraft/CrashReportCallable net/minecraft/CrashReportDetail
net/minecraft/CrashReportSystemDetails net/minecraft/CrashReportCategory
	a title
	b entries
	c stackTrace
	a ()[Ljava/lang/StackTraceElement; getStacktrace
	a (I)I fillInStackTrace
	a (Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z validateStackTrace
	a (Ljava/lang/String;Ljava/lang/Object;)Lnet/minecraft/CrashReportSystemDetails; setDetail
	a (Ljava/lang/String;Ljava/lang/Throwable;)V setDetailError
	a (Ljava/lang/String;Lnet/minecraft/CrashReportCallable;)Lnet/minecraft/CrashReportSystemDetails; setDetail
	a (Ljava/lang/StringBuilder;)V getDetails
	a (Lnet/minecraft/CrashReportSystemDetails;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V populateBlockDetails
	a (Lnet/minecraft/world/level/LevelHeightAccessor;DDD)Ljava/lang/String; formatLocation
	a (Lnet/minecraft/world/level/LevelHeightAccessor;III)Ljava/lang/String; formatLocation
	a (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPosition;)Ljava/lang/String; formatLocation
	b (I)V trimStacktrace
net/minecraft/CrashReportSystemDetails$CrashReportDetail net/minecraft/CrashReportCategory$Entry
	a key
	b value
	a ()Ljava/lang/String; getKey
	b ()Ljava/lang/String; getValue
net/minecraft/EnumChatFormat net/minecraft/ChatFormatting
	A name
	B code
	C isFormat
	D toString
	E id
	F color
	G $VALUES
	a BLACK
	b DARK_BLUE
	c DARK_GREEN
	d DARK_AQUA
	e DARK_RED
	f DARK_PURPLE
	g GOLD
	h GRAY
	i DARK_GRAY
	j BLUE
	k GREEN
	l AQUA
	m RED
	n LIGHT_PURPLE
	o YELLOW
	p WHITE
	q OBFUSCATED
	r BOLD
	s STRIKETHROUGH
	t UNDERLINE
	u ITALIC
	v RESET
	w CODEC
	x PREFIX_CODE
	y FORMATTING_BY_NAME
	z STRIP_FORMATTING_PATTERN
	a ()C getChar
	a (C)Lnet/minecraft/EnumChatFormat; getByCode
	a (I)Lnet/minecraft/EnumChatFormat; getById
	a (Ljava/lang/String;)Ljava/lang/String; stripFormatting
	a (ZZ)Ljava/util/Collection; getNames
	b ()I getId
	b (Ljava/lang/String;)Lnet/minecraft/EnumChatFormat; getByName
	c ()Ljava/lang/String; getSerializedName
	c (Ljava/lang/String;)Ljava/lang/String; cleanName
	d ()Z isFormat
	e ()Z isColor
	f ()Ljava/lang/Integer; getColor
	g ()Ljava/lang/String; getName
	h ()[Lnet/minecraft/EnumChatFormat; $values
net/minecraft/FileUtils net/minecraft/FileUtil
	a COPY_COUNTER_PATTERN
	b MAX_FILE_NAME
	c RESERVED_WINDOWS_FILENAMES
	d STRICT_PATH_SEGMENT_CHECK
	a (Ljava/lang/String;)Ljava/lang/String; getFullResourcePath
	a (Ljava/nio/file/Path;)Z isPathNormalized
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; findAvailableName
	a (Ljava/nio/file/Path;Ljava/util/List;)Ljava/nio/file/Path; resolvePath
	a ([Ljava/lang/String;)V validatePath
	b (Ljava/lang/String;)Ljava/lang/String; normalizeResourcePath
	b (Ljava/nio/file/Path;)Z isPathPortable
	b (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; createPathToResource
	c (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; decomposePath
	c (Ljava/nio/file/Path;)V createDirectoriesSafe
	d (Ljava/lang/String;)Z isValidStrictPathSegment
net/minecraft/MinecraftVersion net/minecraft/DetectedVersion
	a BUILT_IN
	b LOGGER
	c id
	d name
	e stable
	f worldVersion
	g protocolVersion
	h resourcePackVersion
	i dataPackVersion
	j buildTime
	a ()Lnet/minecraft/WorldVersion; tryDetectVersion
	a (Lnet/minecraft/server/packs/EnumResourcePackType;)I getPackVersion
	b ()Ljava/lang/String; getId
	c ()Ljava/lang/String; getName
	d ()Lnet/minecraft/world/level/storage/DataVersion; getDataVersion
	e ()I getProtocolVersion
	f ()Ljava/util/Date; getBuildTime
	g ()Z isStable
net/minecraft/ResourceKeyInvalidException net/minecraft/ResourceLocationException
net/minecraft/SystemUtils net/minecraft/Util
	a NANOS_PER_MILLI
	b timeSource
	c TICKER
	d NIL_UUID
	e ZIP_FILE_SYSTEM_PROVIDER
	f LOGGER
	g DEFAULT_MAX_THREADS
	h MAX_THREADS_SYSTEM_PROPERTY
	i WORKER_COUNT
	j BACKGROUND_EXECUTOR
	k IO_POOL
	l FILENAME_DATE_TIME_FORMATTER
	m thePauser
	a ()Ljava/util/stream/Collector; toMap
	a (I)Z isWhitespace
	a (ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z runWithRetries
	a (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; fetchChoiceType
	a (Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;)Ljava/lang/Object; getOrThrow
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/util/RandomSource;)Ljava/util/List; shuffledCopy
	a (Ljava/io/File;Ljava/io/File;Ljava/io/File;)V safeReplaceFile
	a (Ljava/io/File;Ljava/io/File;Ljava/io/File;Z)V safeReplaceOrMoveFile
	a (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findNextInIterable
	a (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; make
	a (Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable; name
	a (Ljava/lang/String;)V logAndPauseIfInIde
	a (Ljava/lang/String;II)I offsetByCodepoints
	a (Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapThreadWithTaskName
	a (Ljava/lang/String;Ljava/lang/Throwable;)V logAndPauseIfInIde
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; prefix
	a (Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/function/Supplier; wrapThreadWithTaskName
	a (Ljava/lang/String;Lnet/minecraft/CharPredicate;)Ljava/lang/String; sanitizeName
	a (Ljava/lang/String;Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/String; makeDescriptionId
	a (Ljava/lang/Thread;Ljava/lang/Throwable;)V onThreadException
	a (Ljava/lang/Throwable;)V throwAsRuntime
	a (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createDeleter
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createRenamer
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V safeReplaceFile
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V safeReplaceOrMoveFile
	a (Ljava/util/List;)Ljava/lang/Object; lastOf
	a (Ljava/util/List;I)Lcom/mojang/serialization/DataResult; fixedSize
	a (Ljava/util/List;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; fallibleSequence
	a (Ljava/util/List;Ljava/util/function/IntFunction;)Ljava/util/function/ToIntFunction; createIndexLookup
	a (Ljava/util/List;Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; getRandom
	a (Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional; ifElse
	a (Ljava/util/concurrent/ExecutorService;)V shutdownExecutor
	a (Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; memoize
	a (Ljava/util/function/Consumer;)V setPause
	a (Ljava/util/function/Function;)Lnet/minecraft/util/SingleKeyCache; singleKeyCache
	a (Ljava/util/function/Function;Ljava/util/function/Predicate;)Ljava/lang/Object; blockUntilDone
	a (Ljava/util/function/Supplier;)Ljava/lang/Object; make
	a (Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/function/Supplier; name
	a (Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult; fixedSize
	a (Ljava/util/stream/IntStream;Lnet/minecraft/util/RandomSource;)Lit/unimi/dsi/fastutil/ints/IntArrayList; toShuffledList
	a (Ljava/util/stream/LongStream;I)Lcom/mojang/serialization/DataResult; fixedSize
	a (Ljava/util/stream/Stream;Lnet/minecraft/util/RandomSource;)Ljava/util/List; toShuffledList
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Object;)Ljava/lang/String; getPropertyName
	a ([ILnet/minecraft/util/RandomSource;)I getRandom
	a ([Ljava/lang/Object;Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; getRandom
	a ([Ljava/util/function/BooleanSupplier;)Z executeInSequence
	b ()J getMillis
	b (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; doFetchChoiceType
	b (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/util/RandomSource;)V shuffle
	b (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findPreviousInIterable
	b (Ljava/lang/String;)Z isBlank
	b (Ljava/lang/Throwable;)Ljava/lang/Throwable; pauseInIde
	b (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createFileDeletedCheck
	b (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V copyBetweenDirs
	b (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; sequence
	b (Ljava/util/List;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandomSafe
	b (Ljava/util/function/Function;)Ljava/util/function/Function; memoize
	b ([Ljava/lang/Object;Lnet/minecraft/util/RandomSource;)Ljava/util/List; shuffledCopy
	c ()J getNanos
	c (Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; makeExecutor
	c (Ljava/lang/Throwable;)Ljava/lang/String; describeError
	c (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createFileCreatedCheck
	c (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; sequenceFailFast
	c (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; blockUntilDone
	d ()J getEpochMillis
	d (Ljava/lang/String;)V doPause
	d (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; sequenceFailFastAndCancel
	e ()Ljava/lang/String; getFilenameFormattedDateTime
	e (Ljava/util/List;)Ljava/util/function/ToIntFunction; createIndexLookup
	f ()Ljava/util/concurrent/ExecutorService; backgroundExecutor
	g ()Ljava/util/concurrent/ExecutorService; ioPool
	h ()V shutdownExecutors
	i ()Lnet/minecraft/SystemUtils$OS; getPlatform
	j ()Ljava/util/stream/Stream; getVmArguments
	k ()Lit/unimi/dsi/fastutil/Hash$Strategy; identityStrategy
	l ()V startTimerHackThread
	m ()I getMaxThreads
	n ()Ljava/util/concurrent/ExecutorService; makeIoExecutor
net/minecraft/SystemUtils$IdentityHashingStrategy net/minecraft/Util$IdentityStrategy
	a INSTANCE
	b $VALUES
	a ()[Lnet/minecraft/SystemUtils$IdentityHashingStrategy; $values
net/minecraft/SystemUtils$OS net/minecraft/Util$OS
	a LINUX
	b SOLARIS
	c WINDOWS
	d OSX
	e UNKNOWN
	f telemetryName
	g $VALUES
	a ()Ljava/lang/String; telemetryName
	a (Ljava/io/File;)V openFile
	a (Ljava/lang/String;)V openUri
	a (Ljava/net/URI;)V openUri
	a (Ljava/net/URL;)V openUrl
	b ()[Lnet/minecraft/SystemUtils$OS; $values
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
net/minecraft/ThreadNamedUncaughtExceptionHandler net/minecraft/DefaultUncaughtExceptionHandlerWithName
	a logger
net/minecraft/advancements/Advancement$SerializedAdvancement net/minecraft/advancements/Advancement$Builder
	a parent
	b display
	c rewards
	d criteria
	e requirements
	f requirementsStrategy
	g sendsTelemetryEvent
	a ()Lnet/minecraft/advancements/Advancement$SerializedAdvancement; advancement
	a (Lai$a;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; requirements
	a (Laj$a;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; rewards
	a (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addCriterion
	a (Ljava/util/function/Consumer;Ljava/lang/String;)Lnet/minecraft/advancements/AdvancementHolder; save
	a (Lnet/minecraft/advancements/AdvancementDisplay;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; display
	a (Lnet/minecraft/advancements/AdvancementHolder;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; parent
	a (Lnet/minecraft/advancements/AdvancementRequirements;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; requirements
	a (Lnet/minecraft/advancements/AdvancementRewards;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; rewards
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; parent
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/advancements/AdvancementFrameType;ZZZ)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; display
	a (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/advancements/AdvancementFrameType;ZZZ)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; display
	b ()Lnet/minecraft/advancements/Advancement$SerializedAdvancement; recipeAdvancement
	b (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/advancements/AdvancementHolder; build
	c ()Lnet/minecraft/advancements/Advancement$SerializedAdvancement; sendsTelemetryEvent
net/minecraft/advancements/AdvancementDisplay net/minecraft/advancements/DisplayInfo
	a title
	b description
	c icon
	d background
	e frame
	f showToast
	g announceChat
	h hidden
	i x
	j y
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	a (FF)V setLocation
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/AdvancementDisplay; fromJson
	a (Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; getIcon
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/advancements/AdvancementDisplay; fromNetwork
	c ()Lnet/minecraft/world/item/ItemStack; getIcon
	d ()Lnet/minecraft/resources/MinecraftKey; getBackground
	e ()Lnet/minecraft/advancements/AdvancementFrameType; getFrame
	f ()F getX
	g ()F getY
	h ()Z shouldShowToast
	i ()Z shouldAnnounceChat
	j ()Z isHidden
	k ()Lcom/google/gson/JsonElement; serializeToJson
	l ()Lcom/google/gson/JsonObject; serializeIcon
net/minecraft/advancements/AdvancementFrameType net/minecraft/advancements/FrameType
	a TASK
	b CHALLENGE
	c GOAL
	d name
	e chatColor
	f displayName
	g $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/advancements/AdvancementFrameType; byName
	b ()Lnet/minecraft/EnumChatFormat; getChatColor
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	d ()[Lnet/minecraft/advancements/AdvancementFrameType; $values
net/minecraft/advancements/CriterionInstance net/minecraft/advancements/CriterionTriggerInstance
	a ()Lcom/google/gson/JsonObject; serializeToJson
net/minecraft/advancements/CriterionTriggers net/minecraft/advancements/CriteriaTriggers
	A EFFECTS_CHANGED
	B USED_TOTEM
	C NETHER_TRAVEL
	D FISHING_ROD_HOOKED
	E CHANNELED_LIGHTNING
	F SHOT_CROSSBOW
	G KILLED_BY_CROSSBOW
	H RAID_WIN
	I BAD_OMEN
	J HONEY_BLOCK_SLIDE
	K BEE_NEST_DESTROYED
	L TARGET_BLOCK_HIT
	M ITEM_USED_ON_BLOCK
	N GENERATE_LOOT
	O THROWN_ITEM_PICKED_UP_BY_ENTITY
	P THROWN_ITEM_PICKED_UP_BY_PLAYER
	Q PLAYER_INTERACTED_WITH_ENTITY
	R START_RIDING_TRIGGER
	S LIGHTNING_STRIKE
	T USING_ITEM
	U FALL_FROM_HEIGHT
	V RIDE_ENTITY_IN_LAVA_TRIGGER
	W KILL_MOB_NEAR_SCULK_CATALYST
	X ALLAY_DROP_ITEM_ON_BLOCK
	Y AVOID_VIBRATION
	Z RECIPE_CRAFTED
	a IMPOSSIBLE
	aa CRITERIA
	b PLAYER_KILLED_ENTITY
	c ENTITY_KILLED_PLAYER
	d ENTER_BLOCK
	e INVENTORY_CHANGED
	f RECIPE_UNLOCKED
	g PLAYER_HURT_ENTITY
	h ENTITY_HURT_PLAYER
	i ENCHANTED_ITEM
	j FILLED_BUCKET
	k BREWED_POTION
	l CONSTRUCT_BEACON
	m USED_ENDER_EYE
	n SUMMONED_ENTITY
	o BRED_ANIMALS
	p LOCATION
	q SLEPT_IN_BED
	r CURED_ZOMBIE_VILLAGER
	s TRADE
	t ITEM_DURABILITY_CHANGED
	u LEVITATION
	v CHANGED_DIMENSION
	w TICK
	x TAME_ANIMAL
	y PLACED_BLOCK
	z CONSUME_ITEM
	a ()Ljava/lang/Iterable; all
	a (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTrigger;)Lnet/minecraft/advancements/CriterionTrigger; register
	a (Lnet/minecraft/advancements/CriterionTrigger;)Lnet/minecraft/resources/MinecraftKey; getId
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/advancements/CriterionTrigger; getCriterion
net/minecraft/advancements/critereon/CriterionConditionBlock net/minecraft/advancements/critereon/BlockPredicate
	a CODEC
	b tag
	c blocks
	d properties
	e nbt
	f BLOCKS_CODEC
	a ()Ljava/util/Optional; tag
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z matches
	b ()Ljava/util/Optional; blocks
	c ()Ljava/util/Optional; properties
	d ()Ljava/util/Optional; nbt
net/minecraft/advancements/critereon/CriterionConditionDamage net/minecraft/advancements/critereon/DamagePredicate
	a dealtDamage
	b takenDamage
	c sourceEntity
	d blocked
	e type
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Ljava/util/Optional; fromJson
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z matches
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; dealtDamage
	c ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; takenDamage
	d ()Ljava/util/Optional; sourceEntity
	e ()Ljava/util/Optional; blocked
	f ()Ljava/util/Optional; type
net/minecraft/advancements/critereon/CriterionConditionDamageSource net/minecraft/advancements/critereon/DamageSourcePredicate
	a CODEC
	b tags
	c directEntity
	d sourceEntity
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Ljava/util/Optional; fromJson
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/damagesource/DamageSource;)Z matches
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/damagesource/DamageSource;)Z matches
	b ()Ljava/util/List; tags
	c ()Ljava/util/Optional; directEntity
	d ()Ljava/util/Optional; sourceEntity
net/minecraft/advancements/critereon/CriterionConditionDistance net/minecraft/advancements/critereon/DistancePredicate
	a CODEC
	b x
	c y
	d z
	e horizontal
	f absolute
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (DDDDDD)Z matches
	a (Lcom/google/gson/JsonElement;)Ljava/util/Optional; fromJson
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lnet/minecraft/advancements/critereon/CriterionConditionDistance; horizontal
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; x
	b (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lnet/minecraft/advancements/critereon/CriterionConditionDistance; vertical
	c ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; y
	c (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lnet/minecraft/advancements/critereon/CriterionConditionDistance; absolute
	d ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; z
	e ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; horizontal
	f ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; absolute
net/minecraft/advancements/critereon/CriterionConditionEnchantments net/minecraft/advancements/critereon/EnchantmentPredicate
	a CODEC
	b enchantment
	c level
	a ()Ljava/util/Optional; enchantment
	a (Ljava/util/Map;)Z containedIn
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; level
net/minecraft/advancements/critereon/CriterionConditionEntity net/minecraft/advancements/critereon/EntityPredicate
	a CODEC
	b entityType
	c distanceToPlayer
	d location
	e steppingOnLocation
	f effects
	g nbt
	h flags
	i equipment
	j subPredicate
	k vehicle
	l passenger
	m targetedEntity
	n team
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lbq$a;)Lnet/minecraft/advancements/critereon/ContextAwarePredicate; wrap
	a (Lcom/google/gson/JsonElement;)Ljava/util/Optional; fromJson
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ljava/util/Optional; fromJson
	a (Ljava/lang/String;Lnet/minecraft/advancements/critereon/LootDeserializationContext;Lcom/google/gson/JsonElement;)Ljava/util/Optional; fromElement
	a (Ljava/util/Optional;)Ljava/util/Optional; wrap
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lnet/minecraft/advancements/critereon/ContextAwarePredicate; wrap
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity;)Z matches
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/Entity;)Z matches
	a ([Lbq$a;)Ljava/util/List; wrap
	b ()Ljava/util/Optional; entityType
	b (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ljava/util/List; fromJsonArray
	b (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/storage/loot/LootTableInfo; createContext
	c ()Ljava/util/Optional; distanceToPlayer
	d ()Ljava/util/Optional; location
	e ()Ljava/util/Optional; steppingOnLocation
	f ()Ljava/util/Optional; effects
	g ()Ljava/util/Optional; nbt
	h ()Ljava/util/Optional; flags
	i ()Ljava/util/Optional; equipment
	j ()Ljava/util/Optional; subPredicate
	k ()Ljava/util/Optional; vehicle
	l ()Ljava/util/Optional; passenger
	m ()Ljava/util/Optional; targetedEntity
	n ()Ljava/util/Optional; team
net/minecraft/advancements/critereon/CriterionConditionEntityEquipment net/minecraft/advancements/critereon/EntityEquipmentPredicate
	a CODEC
	b CAPTAIN
	c head
	d chest
	e legs
	f feet
	g mainhand
	h offhand
	a ()Ljava/util/Optional; head
	a (Lnet/minecraft/world/entity/Entity;)Z matches
	b ()Ljava/util/Optional; chest
	c ()Ljava/util/Optional; legs
	d ()Ljava/util/Optional; feet
	e ()Ljava/util/Optional; mainhand
	f ()Ljava/util/Optional; offhand
net/minecraft/advancements/critereon/CriterionConditionEntityFlags net/minecraft/advancements/critereon/EntityFlagsPredicate
	a CODEC
	b isOnFire
	c isCrouching
	d isSprinting
	e isSwimming
	f isBaby
	a ()Ljava/util/Optional; isOnFire
	a (Lnet/minecraft/world/entity/Entity;)Z matches
	b ()Ljava/util/Optional; isCrouching
	c ()Ljava/util/Optional; isSprinting
	d ()Ljava/util/Optional; isSwimming
	e ()Ljava/util/Optional; isBaby
net/minecraft/advancements/critereon/CriterionConditionEntityType net/minecraft/advancements/critereon/EntityTypePredicate
	a CODEC
	b types
	a ()Lnet/minecraft/core/HolderSet; types
	a (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/CriterionConditionEntityType; of
	a (Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/advancements/critereon/CriterionConditionEntityType; of
	b (Lnet/minecraft/world/entity/EntityTypes;)Z matches
net/minecraft/advancements/critereon/CriterionConditionFluid net/minecraft/advancements/critereon/FluidPredicate
	a CODEC
	b tag
	c fluid
	d properties
	a ()Ljava/util/Optional; tag
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z matches
	b ()Ljava/util/Optional; fluid
	c ()Ljava/util/Optional; properties
net/minecraft/advancements/critereon/CriterionConditionInOpenWater net/minecraft/advancements/critereon/FishingHookPredicate
	b ANY
	c CODEC
	d inOpenWater
	a ()Lbr$a; type
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Z matches
	a (Z)Lnet/minecraft/advancements/critereon/CriterionConditionInOpenWater; inOpenWater
	b ()Ljava/util/Optional; inOpenWater
net/minecraft/advancements/critereon/CriterionConditionItem net/minecraft/advancements/critereon/ItemPredicate
	a CODEC
	b tag
	c items
	d count
	e durability
	f enchantments
	g storedEnchantments
	h potion
	i nbt
	j ITEMS_CODEC
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Ljava/util/Optional; fromJson
	a (Ljava/util/List;)Lcom/google/gson/JsonElement; serializeToJsonArray
	a (Lnet/minecraft/world/item/ItemStack;)Z matches
	b ()Ljava/util/Optional; tag
	b (Lcom/google/gson/JsonElement;)Ljava/util/List; fromJsonArray
	c ()Ljava/util/Optional; items
	d ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; count
	e ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; durability
	f ()Ljava/util/List; enchantments
	g ()Ljava/util/List; storedEnchantments
	h ()Ljava/util/Optional; potion
	i ()Ljava/util/Optional; nbt
net/minecraft/advancements/critereon/CriterionConditionLight net/minecraft/advancements/critereon/LightPredicate
	a CODEC
	b composite
	a ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; composite
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z matches
net/minecraft/advancements/critereon/CriterionConditionLocation net/minecraft/advancements/critereon/LocationPredicate
	a CODEC
	b position
	c biome
	d structure
	e dimension
	f smokey
	g light
	h block
	i fluid
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Ljava/util/Optional; fromJson
	a (Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Ljava/util/Optional; of
	a (Lnet/minecraft/server/level/WorldServer;DDD)Z matches
	b ()Ljava/util/Optional; position
	c ()Ljava/util/Optional; biome
	d ()Ljava/util/Optional; structure
	e ()Ljava/util/Optional; dimension
	f ()Ljava/util/Optional; smokey
	g ()Ljava/util/Optional; light
	h ()Ljava/util/Optional; block
	i ()Ljava/util/Optional; fluid
net/minecraft/advancements/critereon/CriterionConditionMobEffect net/minecraft/advancements/critereon/MobEffectsPredicate
	a CODEC
	b effectMap
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Ljava/util/Optional; fromJson
	a (Ljava/util/Map;)Z matches
	a (Lnet/minecraft/world/entity/Entity;)Z matches
	a (Lnet/minecraft/world/entity/EntityLiving;)Z matches
	b ()Ljava/util/Map; effectMap
net/minecraft/advancements/critereon/CriterionConditionNBT net/minecraft/advancements/critereon/NbtPredicate
	a CODEC
	b tag
	a ()Lnet/minecraft/nbt/NBTTagCompound; tag
	a (Lnet/minecraft/nbt/NBTBase;)Z matches
	a (Lnet/minecraft/world/entity/Entity;)Z matches
	a (Lnet/minecraft/world/item/ItemStack;)Z matches
	b (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/nbt/NBTTagCompound; getEntityTagToCompare
net/minecraft/advancements/critereon/CriterionConditionPlayer net/minecraft/advancements/critereon/PlayerPredicate
	b LOOKING_AT_RANGE
	c CODEC
	d level
	e gameType
	f stats
	g recipes
	h advancements
	i lookingAt
	a ()Lbr$a; type
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Z matches
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; level
	c ()Ljava/util/Optional; gameType
	d ()Ljava/util/List; stats
	e ()Lit/unimi/dsi/fastutil/objects/Object2BooleanMap; recipes
	f ()Ljava/util/Map; advancements
	g ()Ljava/util/Optional; lookingAt
net/minecraft/advancements/critereon/CriterionConditionRange net/minecraft/advancements/critereon/WrappedMinMaxBounds
	a ANY
	b ERROR_INTS_ONLY
	c min
	d max
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (D)Z matchesSqr
	a (F)Lnet/minecraft/advancements/critereon/CriterionConditionRange; exactly
	a (FF)Lnet/minecraft/advancements/critereon/CriterionConditionRange; between
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/advancements/critereon/CriterionConditionRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lnet/minecraft/advancements/critereon/CriterionConditionRange; fromReader
	a (Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float; optionallyFormat
	b ()Ljava/lang/Float; min
	b (F)Lnet/minecraft/advancements/critereon/CriterionConditionRange; atLeast
	b (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; readNumber
	c ()Ljava/lang/Float; max
	c (F)Lnet/minecraft/advancements/critereon/CriterionConditionRange; atMost
	c (Lcom/mojang/brigadier/StringReader;Z)Z isAllowedNumber
	d (F)Z matches
net/minecraft/advancements/critereon/CriterionConditionValue net/minecraft/advancements/critereon/MinMaxBounds
	a ERROR_EMPTY
	b ERROR_SWAPPED
	a ()Ljava/util/Optional; min
	a (Lcom/mojang/brigadier/StringReader;)Z isAllowedInputChat
	a (Lcom/mojang/brigadier/StringReader;Lcl$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/CriterionConditionValue; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/util/Optional; readNumber
	a (Lcom/mojang/serialization/Codec;Lcl$a;)Lcom/mojang/serialization/Codec; createCodec
	b ()Ljava/util/Optional; max
	c ()Z isAny
	d ()Ljava/util/Optional; unwrapPoint
net/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange net/minecraft/advancements/critereon/MinMaxBounds$Doubles
	c ANY
	d CODEC
	e min
	f max
	g minSq
	h maxSq
	a ()Ljava/util/Optional; min
	a (D)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; exactly
	a (DD)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; between
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; create
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; fromReader
	a (Ljava/util/Optional;)Ljava/util/Optional; squareOpt
	b ()Ljava/util/Optional; max
	b (D)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; atLeast
	c (D)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; atMost
	d (D)Z matches
	e ()Lcom/google/gson/JsonElement; serializeToJson
	e (D)Z matchesSqr
	f ()Ljava/util/Optional; minSq
	g ()Ljava/util/Optional; maxSq
net/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange net/minecraft/advancements/critereon/MinMaxBounds$Ints
	c ANY
	d CODEC
	e min
	f max
	g minSq
	h maxSq
	a ()Ljava/util/Optional; min
	a (I)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; exactly
	a (II)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; between
	a (J)Z matchesSqr
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; create
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; fromReader
	a (Ljava/util/Optional;)Ljava/util/Optional; squareOpt
	b ()Ljava/util/Optional; max
	b (I)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; atLeast
	c (I)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; atMost
	d (I)Z matches
	e ()Lcom/google/gson/JsonElement; serializeToJson
	f ()Ljava/util/Optional; minSq
	g ()Ljava/util/Optional; maxSq
net/minecraft/advancements/critereon/CriterionInstanceAbstract net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance
	a player
	a ()Lcom/google/gson/JsonObject; serializeToJson
	b ()Ljava/util/Optional; playerPredicate
net/minecraft/advancements/critereon/CriterionSlideDownBlock net/minecraft/advancements/critereon/SlideDownBlockTrigger
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcx$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/block/state/IBlockData;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerAbstract net/minecraft/advancements/critereon/SimpleCriterionTrigger
	a players
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lao$a;)V addPlayerListener
	a (Lnet/minecraft/server/level/EntityPlayer;Ljava/util/function/Predicate;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
	b (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lao$a;)V removePlayerListener
net/minecraft/advancements/critereon/CriterionTriggerBeeNestDestroyed net/minecraft/advancements/critereon/BeeNestDestroyedTrigger
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lau$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/ItemStack;I)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerBredAnimals net/minecraft/advancements/critereon/BredAnimalsTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Law$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/animal/EntityAnimal;Lnet/minecraft/world/entity/animal/EntityAnimal;Lnet/minecraft/world/entity/EntityAgeable;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerBrewedPotion net/minecraft/advancements/critereon/BrewedPotionTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lax$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/alchemy/PotionRegistry;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerChangedDimension net/minecraft/advancements/critereon/ChangeDimensionTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lay$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerChanneledLightning net/minecraft/advancements/critereon/ChanneledLightningTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Laz$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Ljava/util/Collection;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerConstructBeacon net/minecraft/advancements/critereon/ConstructBeaconTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lba$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;I)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerConsumeItem net/minecraft/advancements/critereon/ConsumeItemTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbb$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerCuredZombieVillager net/minecraft/advancements/critereon/CuredZombieVillagerTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbd$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/monster/EntityZombie;Lnet/minecraft/world/entity/npc/EntityVillager;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerEffectsChanged net/minecraft/advancements/critereon/EffectsChangedTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbj$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerEnchantedItem net/minecraft/advancements/critereon/EnchantedItemTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbk$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;I)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerEnterBlock net/minecraft/advancements/critereon/EnterBlockTrigger
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbm$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/block/state/IBlockData;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerEntityHurtPlayer net/minecraft/advancements/critereon/EntityHurtPlayerTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbp$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerFilledBucket net/minecraft/advancements/critereon/FilledBucketTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbu$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerFishingRodHooked net/minecraft/advancements/critereon/FishingRodHookedTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbw$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/EntityFishingHook;Ljava/util/Collection;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerImpossible net/minecraft/advancements/critereon/ImpossibleTrigger
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lao$a;)V addPlayerListener
	b (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lby$a; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lao$a;)V removePlayerListener
net/minecraft/advancements/critereon/CriterionTriggerInventoryChanged net/minecraft/advancements/critereon/InventoryChangeTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbz$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/player/PlayerInventory;Lnet/minecraft/world/item/ItemStack;)V trigger
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/player/PlayerInventory;Lnet/minecraft/world/item/ItemStack;III)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerItemDurabilityChanged net/minecraft/advancements/critereon/ItemDurabilityTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lca$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;I)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerKilled net/minecraft/advancements/critereon/KilledTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lce$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerKilledByCrossbow net/minecraft/advancements/critereon/KilledByCrossbowTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcd$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Ljava/util/Collection;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerLevitation net/minecraft/advancements/critereon/LevitationTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcf$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/phys/Vec3D;I)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerPlayerGeneratesContainerLoot net/minecraft/advancements/critereon/LootTableTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lck$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/resources/MinecraftKey;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerPlayerHurtEntity net/minecraft/advancements/critereon/PlayerHurtEntityTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcp$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerPlayerInteractedWithEntity net/minecraft/advancements/critereon/PlayerInteractTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcq$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerProperties net/minecraft/advancements/critereon/StatePropertiesPredicate
	a CODEC
	b properties
	c PROPERTIES_CODEC
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Ljava/util/Optional; fromJson
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)Ljava/util/Optional; checkState
	a (Lnet/minecraft/world/level/block/state/BlockStateList;Ljava/util/function/Consumer;)V checkState
	a (Lnet/minecraft/world/level/block/state/BlockStateList;Lnet/minecraft/world/level/block/state/IBlockDataHolder;)Z matches
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z matches
	a (Lnet/minecraft/world/level/material/Fluid;)Z matches
	b ()Ljava/util/List; properties
net/minecraft/advancements/critereon/CriterionTriggerRecipeUnlocked net/minecraft/advancements/critereon/RecipeUnlockedTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcu$a; createInstance
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/advancements/Criterion; unlocked
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/crafting/RecipeHolder;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerShotCrossbow net/minecraft/advancements/critereon/ShotCrossbowTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcv$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerSummonedEntity net/minecraft/advancements/critereon/SummonedEntityTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ldb$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerTamedAnimal net/minecraft/advancements/critereon/TameAnimalTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ldd$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/animal/EntityAnimal;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerTargetHit net/minecraft/advancements/critereon/TargetBlockTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lde$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3D;I)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerUsedEnderEye net/minecraft/advancements/critereon/UsedEnderEyeTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ldg$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/core/BlockPosition;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerUsedTotem net/minecraft/advancements/critereon/UsedTotemTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ldh$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/CriterionTriggerVillagerTrade net/minecraft/advancements/critereon/TradeTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ldf$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/npc/EntityVillagerAbstract;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/LootDeserializationContext net/minecraft/advancements/critereon/DeserializationContext
	a LOGGER
	b id
	c lootData
	a ()Lnet/minecraft/resources/MinecraftKey; getAdvancementId
	a (Lcom/google/gson/JsonArray;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet;)Ljava/util/List; deserializeConditions
net/minecraft/commands/CommandDispatcher net/minecraft/commands/Commands
	a LEVEL_ALL
	b LEVEL_MODERATORS
	c LEVEL_GAMEMASTERS
	d LEVEL_ADMINS
	e LEVEL_OWNERS
	f LOGGER
	g dispatcher
	a ()Lcom/mojang/brigadier/CommandDispatcher; getDispatcher
	a (Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; getParseException
	a (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)I performCommand
	a (Lcom/mojang/brigadier/ParseResults;Ljava/util/function/UnaryOperator;)Lcom/mojang/brigadier/ParseResults; mapSource
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Map;)V fillUsableCommands
	a (Ldu$b;)Ljava/util/function/Predicate; createValidator
	a (Lhg$b;)Lnet/minecraft/commands/CommandBuildContext; createValidationContext
	a (Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; literal
	a (Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; argument
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I performPrefixedCommand
	a (Lnet/minecraft/server/level/EntityPlayer;)V sendCommands
	b ()V validate
net/minecraft/commands/CommandDispatcher$ServerType net/minecraft/commands/Commands$CommandSelection
	a ALL
	b DEDICATED
	c INTEGRATED
	d includeIntegrated
	e includeDedicated
	f $VALUES
	a ()[Lnet/minecraft/commands/CommandDispatcher$ServerType; $values
net/minecraft/commands/CommandException net/minecraft/commands/CommandRuntimeException
	a message
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getComponent
net/minecraft/commands/CommandExceptionProvider net/minecraft/commands/BrigadierExceptions
	A DISPATCHER_PARSE_EXCEPTION
	a DOUBLE_TOO_SMALL
	b DOUBLE_TOO_BIG
	c FLOAT_TOO_SMALL
	d FLOAT_TOO_BIG
	e INTEGER_TOO_SMALL
	f INTEGER_TOO_BIG
	g LONG_TOO_SMALL
	h LONG_TOO_BIG
	i LITERAL_INCORRECT
	j READER_EXPECTED_START_OF_QUOTE
	k READER_EXPECTED_END_OF_QUOTE
	l READER_INVALID_ESCAPE
	m READER_INVALID_BOOL
	n READER_INVALID_INT
	o READER_EXPECTED_INT
	p READER_INVALID_LONG
	q READER_EXPECTED_LONG
	r READER_INVALID_DOUBLE
	s READER_EXPECTED_DOUBLE
	t READER_INVALID_FLOAT
	u READER_EXPECTED_FLOAT
	v READER_EXPECTED_BOOL
	w READER_EXPECTED_SYMBOL
	x DISPATCHER_UNKNOWN_COMMAND
	y DISPATCHER_UNKNOWN_ARGUMENT
	z DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
net/minecraft/commands/CommandListenerWrapper net/minecraft/commands/CommandSourceStack
	a ERROR_NOT_PLAYER
	b ERROR_NOT_ENTITY
	c source
	d worldPosition
	e level
	f permissionLevel
	g textName
	h displayName
	i server
	j silent
	k entity
	l consumer
	m anchor
	n rotation
	o signingContext
	p chatMessageChainer
	q returnValueConsumer
	a ()Lnet/minecraft/commands/CommandListenerWrapper; withSuppressedOutput
	a (I)Lnet/minecraft/commands/CommandListenerWrapper; withPermission
	a (Lcom/mojang/brigadier/ResultConsumer;)Lnet/minecraft/commands/CommandListenerWrapper; withCallback
	a (Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Lnet/minecraft/commands/CommandListenerWrapper; withCallback
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V onCommandComplete
	a (Ljava/util/function/IntConsumer;)Lnet/minecraft/commands/CommandListenerWrapper; withReturnValueConsumer
	a (Ljava/util/function/Supplier;Z)V sendSuccess
	a (Lnet/minecraft/commands/CommandSigningContext;Lnet/minecraft/util/TaskChainer;)Lnet/minecraft/commands/CommandListenerWrapper; withSigningContext
	a (Lnet/minecraft/commands/ICommandListener;)Lnet/minecraft/commands/CommandListenerWrapper; withSource
	a (Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor;)Lnet/minecraft/commands/CommandListenerWrapper; withAnchor
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	a (Lnet/minecraft/network/chat/OutgoingChatMessage;ZLth$a;)V sendChatMessage
	a (Lnet/minecraft/resources/ResourceKey;Ldw$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; suggestRegistryElements
	a (Lnet/minecraft/server/level/EntityPlayer;)Z shouldFilterMessageTo
	a (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/commands/CommandListenerWrapper; withLevel
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/commands/CommandListenerWrapper; withEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor;)Lnet/minecraft/commands/CommandListenerWrapper; facing
	a (Lnet/minecraft/world/phys/Vec2F;)Lnet/minecraft/commands/CommandListenerWrapper; withRotation
	a (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/commands/CommandListenerWrapper; withPosition
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	b (I)Lnet/minecraft/commands/CommandListenerWrapper; withMaximumPermission
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendFailure
	b (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/commands/CommandListenerWrapper; facing
	c ()Ljava/lang/String; getTextName
	c (I)Z hasPermission
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V broadcastToAdmins
	d ()Lnet/minecraft/world/phys/Vec3D; getPosition
	e ()Lnet/minecraft/server/level/WorldServer; getLevel
	f ()Lnet/minecraft/world/entity/Entity; getEntity
	g ()Lnet/minecraft/world/entity/Entity; getEntityOrException
	h ()Lnet/minecraft/server/level/EntityPlayer; getPlayerOrException
	i ()Lnet/minecraft/server/level/EntityPlayer; getPlayer
	j ()Z isPlayer
	k ()Lnet/minecraft/world/phys/Vec2F; getRotation
	l ()Lnet/minecraft/server/MinecraftServer; getServer
	m ()Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor; getAnchor
	n ()Lnet/minecraft/commands/CommandSigningContext; getSigningContext
	o ()Lnet/minecraft/util/TaskChainer; getChatMessageChainer
	p ()Ljava/util/function/IntConsumer; getReturnValueConsumer
	q ()Ljava/util/Collection; getOnlinePlayerNames
	r ()Ljava/util/Collection; getAllTeams
	s ()Ljava/util/stream/Stream; getAvailableSounds
	t ()Ljava/util/stream/Stream; getRecipeNames
	u ()Ljava/util/Set; levels
	v ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	w ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
net/minecraft/commands/CustomFunction net/minecraft/commands/CommandFunction
	a entries
	b id
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Ljava/lang/CharSequence;)Z shouldConcatenateNextLine
	a (Ljava/lang/String;)Z isValidVariableName
	a (Ljava/lang/String;I)Ldp$f; decomposeMacro
	a (Lnet/minecraft/nbt/NBTTagCompound;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/commands/CustomFunction; instantiate
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/List;)Lnet/minecraft/commands/CustomFunction; fromLines
	b ()[Ldp$d; getEntries
net/minecraft/commands/ICommandListener net/minecraft/commands/CommandSource
	a NULL
	T_ ()Z shouldInformAdmins
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	j_ ()Z acceptsSuccess
	k_ ()Z alwaysAccepts
	v_ ()Z acceptsFailure
net/minecraft/commands/ICompletionProvider net/minecraft/commands/SharedSuggestionProvider
	A ()Ljava/util/Collection; getAbsoluteCoordinates
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V filterResources
	a (Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V filterResources
	a (Ljava/lang/String;Ljava/lang/String;)Z matchesSubStr
	a (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggestCoordinates
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Lnet/minecraft/core/IRegistry;Ldw$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V suggestRegistryElements
	a (Lnet/minecraft/resources/ResourceKey;Ldw$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; suggestRegistryElements
	a ([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggest2DCoordinates
	b (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	c (I)Z hasPermission
	q ()Ljava/util/Collection; getOnlinePlayerNames
	r ()Ljava/util/Collection; getAllTeams
	s ()Ljava/util/stream/Stream; getAvailableSounds
	t ()Ljava/util/stream/Stream; getRecipeNames
	u ()Ljava/util/Set; levels
	v ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	w ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	x ()Ljava/util/Collection; getCustomTabSugggestions
	y ()Ljava/util/Collection; getSelectedEntities
	z ()Ljava/util/Collection; getRelevantCoordinates
net/minecraft/commands/arguments/ArgumentAnchor net/minecraft/commands/arguments/EntityAnchorArgument
	a EXAMPLES
	b ERROR_INVALID
	a ()Lnet/minecraft/commands/arguments/ArgumentAnchor; anchor
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor; getAnchor
net/minecraft/commands/arguments/ArgumentAnchor$Anchor net/minecraft/commands/arguments/EntityAnchorArgument$Anchor
	a FEET
	b EYES
	c BY_NAME
	d name
	e transform
	f $VALUES
	a ()[Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor; $values
	a (Ljava/lang/String;)Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor; getByName
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/phys/Vec3D; apply
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3D; apply
net/minecraft/commands/arguments/ArgumentAngle net/minecraft/commands/arguments/AngleArgument
	a ERROR_NOT_COMPLETE
	b ERROR_INVALID_ANGLE
	c EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentAngle; angle
	a (Lcom/mojang/brigadier/StringReader;)Ldx$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F getAngle
net/minecraft/commands/arguments/ArgumentChat net/minecraft/commands/arguments/MessageArgument
	a EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentChat; message
	a (Lcom/mojang/brigadier/StringReader;)Lei$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; getMessage
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Consumer;)V resolveChatMessage
	a (Ljava/util/function/Consumer;Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/network/chat/PlayerChatMessage;)V resolveSignedMessage
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/network/chat/PlayerChatMessage;)Ljava/util/concurrent/CompletableFuture; filterPlainText
	b (Ljava/util/function/Consumer;Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/network/chat/PlayerChatMessage;)V resolveDisguisedMessage
net/minecraft/commands/arguments/ArgumentChatComponent net/minecraft/commands/arguments/ComponentArgument
	a ERROR_INVALID_JSON
	b EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentChatComponent; textComponent
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/IChatBaseComponent; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; getComponent
net/minecraft/commands/arguments/ArgumentChatFormat net/minecraft/commands/arguments/ColorArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentChatFormat; color
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/EnumChatFormat; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/EnumChatFormat; getColor
net/minecraft/commands/arguments/ArgumentCriterionValue net/minecraft/commands/arguments/RangeArgument
	a ()Lep$b; intRange
	b ()Lep$a; floatRange
net/minecraft/commands/arguments/ArgumentDimension net/minecraft/commands/arguments/DimensionArgument
	a EXAMPLES
	b ERROR_INVALID_VALUE
	a ()Lnet/minecraft/commands/arguments/ArgumentDimension; dimension
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/MinecraftKey; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/WorldServer; getDimension
net/minecraft/commands/arguments/ArgumentEntity net/minecraft/commands/arguments/EntityArgument
	a ERROR_NOT_SINGLE_ENTITY
	b ERROR_NOT_SINGLE_PLAYER
	c ERROR_ONLY_PLAYERS_ALLOWED
	d NO_ENTITIES_FOUND
	e NO_PLAYERS_FOUND
	f ERROR_SELECTORS_NOT_ALLOWED
	g EXAMPLES
	h single
	i playersOnly
	a ()Lnet/minecraft/commands/arguments/ArgumentEntity; entity
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/selector/EntitySelector; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/entity/Entity; getEntity
	b ()Lnet/minecraft/commands/arguments/ArgumentEntity; entities
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getEntities
	c ()Lnet/minecraft/commands/arguments/ArgumentEntity; player
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalEntities
	d ()Lnet/minecraft/commands/arguments/ArgumentEntity; players
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalPlayers
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/EntityPlayer; getPlayer
	f (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getPlayers
net/minecraft/commands/arguments/ArgumentEntity$Info net/minecraft/commands/arguments/EntityArgument$Info
	a FLAG_SINGLE
	b FLAG_PLAYERS_ONLY
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ArgumentEntity$Info$Template;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lnet/minecraft/commands/arguments/ArgumentEntity$Info$Template;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ArgumentEntity;)Lnet/minecraft/commands/arguments/ArgumentEntity$Info$Template; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/commands/arguments/ArgumentEntity$Info$Template; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
net/minecraft/commands/arguments/ArgumentEntity$Info$Template net/minecraft/commands/arguments/EntityArgument$Info$Template
	b single
	c playersOnly
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ArgumentEntity; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
net/minecraft/commands/arguments/ArgumentInventorySlot net/minecraft/commands/arguments/SlotArgument
	a EXAMPLES
	b ERROR_UNKNOWN_SLOT
	c SLOTS
	a ()Lnet/minecraft/commands/arguments/ArgumentInventorySlot; slot
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I getSlot
net/minecraft/commands/arguments/ArgumentMathOperation net/minecraft/commands/arguments/OperationArgument
	a EXAMPLES
	b ERROR_INVALID_OPERATION
	c ERROR_DIVIDE_BY_ZERO
	a ()Lnet/minecraft/commands/arguments/ArgumentMathOperation; operation
	a (Lcom/mojang/brigadier/StringReader;)Len$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Len$a; getOperation
	a (Ljava/lang/String;)Len$a; getOperation
	b (Ljava/lang/String;)Len$b; getSimpleOperation
net/minecraft/commands/arguments/ArgumentMinecraftKeyRegistered net/minecraft/commands/arguments/ResourceLocationArgument
	a EXAMPLES
	b ERROR_UNKNOWN_ADVANCEMENT
	c ERROR_UNKNOWN_RECIPE
	d ERROR_UNKNOWN_PREDICATE
	e ERROR_UNKNOWN_ITEM_MODIFIER
	a ()Lnet/minecraft/commands/arguments/ArgumentMinecraftKeyRegistered; id
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/MinecraftKey; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/AdvancementHolder; getAdvancement
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/item/crafting/RecipeHolder; getRecipe
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; getPredicate
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; getItemModifier
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getId
net/minecraft/commands/arguments/ArgumentNBTBase net/minecraft/commands/arguments/NbtTagArgument
	a EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentNBTBase; nbtTag
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/NBTBase; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/NBTBase; getNbtTag
net/minecraft/commands/arguments/ArgumentNBTKey net/minecraft/commands/arguments/NbtPathArgument
	a ERROR_INVALID_NODE
	b ERROR_DATA_TOO_DEEP
	c ERROR_NOTHING_FOUND
	d EXAMPLES
	e ERROR_EXPECTED_LIST
	f ERROR_INVALID_INDEX
	g INDEX_MATCH_START
	h INDEX_MATCH_END
	i KEY_MATCH_START
	j KEY_MATCH_END
	k QUOTED_KEY_START
	l SINGLE_QUOTED_KEY_START
	a ()Lnet/minecraft/commands/arguments/ArgumentNBTKey; nbtPath
	a (C)Z isAllowedInUnquotedName
	a (Lcom/mojang/brigadier/StringReader;)Lej$g; parse
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lej$h; readObjectNode
	a (Lcom/mojang/brigadier/StringReader;Z)Lej$h; parseNode
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lej$g; getPath
	a (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/function/Predicate; createTagPredicate
	b (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; readUnquotedName
net/minecraft/commands/arguments/ArgumentNBTTag net/minecraft/commands/arguments/CompoundTagArgument
	a EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentNBTTag; compoundTag
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/NBTTagCompound; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; getCompoundTag
net/minecraft/commands/arguments/ArgumentParticle net/minecraft/commands/arguments/ParticleArgument
	a ERROR_UNKNOWN_PARTICLE
	b EXAMPLES
	c particles
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleParam; parse
	a (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/HolderLookup;)Lnet/minecraft/core/particles/ParticleParam; readParticle
	a (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/particles/Particle;)Lnet/minecraft/core/particles/ParticleParam; readParticle
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/particles/ParticleParam; getParticle
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ArgumentParticle; particle
	b (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/HolderLookup;)Lnet/minecraft/core/particles/Particle; readParticleType
net/minecraft/commands/arguments/ArgumentProfile net/minecraft/commands/arguments/GameProfileArgument
	a ERROR_UNKNOWN_PLAYER
	b EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentProfile; gameProfile
	a (Lcom/mojang/brigadier/StringReader;)Leg$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getGameProfiles
net/minecraft/commands/arguments/ArgumentScoreboardCriteria net/minecraft/commands/arguments/ObjectiveCriteriaArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentScoreboardCriteria; criteria
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/scores/criteria/IScoreboardCriteria; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/IScoreboardCriteria; getCriteria
	a (Lnet/minecraft/stats/StatisticWrapper;Ljava/lang/Object;)Ljava/lang/String; getName
net/minecraft/commands/arguments/ArgumentScoreboardObjective net/minecraft/commands/arguments/ObjectiveArgument
	a EXAMPLES
	b ERROR_OBJECTIVE_NOT_FOUND
	c ERROR_OBJECTIVE_READ_ONLY
	a ()Lnet/minecraft/commands/arguments/ArgumentScoreboardObjective; objective
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardObjective; getObjective
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardObjective; getWritableObjective
net/minecraft/commands/arguments/ArgumentScoreboardSlot net/minecraft/commands/arguments/ScoreboardSlotArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentScoreboardSlot; displaySlot
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/scores/DisplaySlot; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/DisplaySlot; getDisplaySlot
net/minecraft/commands/arguments/ArgumentScoreboardTeam net/minecraft/commands/arguments/TeamArgument
	a EXAMPLES
	b ERROR_TEAM_NOT_FOUND
	a ()Lnet/minecraft/commands/arguments/ArgumentScoreboardTeam; team
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardTeam; getTeam
net/minecraft/commands/arguments/ArgumentScoreholder net/minecraft/commands/arguments/ScoreHolderArgument
	a SUGGEST_SCORE_HOLDERS
	b EXAMPLES
	c ERROR_NO_RESULTS
	d multiple
	a ()Lnet/minecraft/commands/arguments/ArgumentScoreholder; scoreHolder
	a (Lcom/mojang/brigadier/StringReader;)Lev$b; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; getName
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection; getNames
	b ()Lnet/minecraft/commands/arguments/ArgumentScoreholder; scoreHolders
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNames
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNamesWithDefaultWildcard
net/minecraft/commands/arguments/ArgumentTime net/minecraft/commands/arguments/TimeArgument
	a EXAMPLES
	b ERROR_INVALID_UNIT
	c ERROR_TICK_COUNT_TOO_LOW
	d UNITS
	e minimum
	a ()Lnet/minecraft/commands/arguments/ArgumentTime; time
	a (I)Lnet/minecraft/commands/arguments/ArgumentTime; time
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
net/minecraft/commands/arguments/ArgumentUUID net/minecraft/commands/arguments/UuidArgument
	a ERROR_INVALID_UUID
	b EXAMPLES
	c ALLOWED_CHARACTERS
	a ()Lnet/minecraft/commands/arguments/ArgumentUUID; uuid
	a (Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID; getUuid
net/minecraft/commands/arguments/blocks/ArgumentBlock net/minecraft/commands/arguments/blocks/BlockStateParser
	A suggestions
	a ERROR_NO_TAGS_ALLOWED
	b ERROR_UNKNOWN_BLOCK
	c ERROR_UNKNOWN_PROPERTY
	d ERROR_DUPLICATE_PROPERTY
	e ERROR_INVALID_VALUE
	f ERROR_EXPECTED_VALUE
	g ERROR_EXPECTED_END_OF_PROPERTIES
	h ERROR_UNKNOWN_TAG
	i SYNTAX_START_PROPERTIES
	j SYNTAX_START_NBT
	k SYNTAX_END_PROPERTIES
	l SYNTAX_EQUALS
	m SYNTAX_PROPERTY_SEPARATOR
	n SYNTAX_TAG
	o SUGGEST_NOTHING
	p blocks
	q reader
	r forTesting
	s allowNbt
	t properties
	u vagueProperties
	v id
	w definition
	x state
	y nbt
	z tag
	a ()V parse
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestPropertyNameOrEnd
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyValue
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder; addSuggestions
	a (Ljava/lang/StringBuilder;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)V appendProperty
	a (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;Z)Lfi$a; parseForBlock
	a (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;ZZ)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a (Lnet/minecraft/core/HolderLookup;Ljava/lang/String;Z)Lfi$a; parseForBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/lang/String; serialize
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/String;I)V setValue
	b ()Z hasBlockEntity
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyNameOrEnd
	b (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;Z)Lcom/mojang/datafixers/util/Either; parseForTesting
	b (Lnet/minecraft/core/HolderLookup;Ljava/lang/String;Z)Lcom/mojang/datafixers/util/Either; parseForTesting
	c ()V readBlock
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestPropertyName
	d ()V readTag
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyName
	e ()V readProperties
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
	f ()V readVagueProperties
	f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestEquals
	g ()V readNbt
	g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestNextPropertyOrEnd
	h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenVaguePropertiesOrNbt
	i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenPropertiesOrNbt
	j (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTag
	k (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestItem
	l (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestBlockIdOrTag
net/minecraft/commands/arguments/blocks/ArgumentBlockPredicate net/minecraft/commands/arguments/blocks/BlockPredicateArgument
	a EXAMPLES
	b blocks
	a (Lcom/mojang/brigadier/StringReader;)Lfg$b; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; getBlockPredicate
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/blocks/ArgumentBlockPredicate; blockPredicate
	a (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lfg$b; parse
net/minecraft/commands/arguments/blocks/ArgumentTile net/minecraft/commands/arguments/blocks/BlockStateArgument
	a EXAMPLES
	b blocks
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/ArgumentTileLocation; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/blocks/ArgumentTileLocation; getBlock
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/blocks/ArgumentTile; block
net/minecraft/commands/arguments/blocks/ArgumentTileLocation net/minecraft/commands/arguments/blocks/BlockInput
	a state
	b properties
	c tag
	a ()Lnet/minecraft/world/level/block/state/IBlockData; getState
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z test
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;I)Z place
	a (Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;)Z test
	b ()Ljava/util/Set; getDefinedProperties
net/minecraft/commands/arguments/coordinates/ArgumentParserPosition net/minecraft/commands/arguments/coordinates/WorldCoordinate
	a ERROR_EXPECTED_DOUBLE
	b ERROR_EXPECTED_INT
	c PREFIX_RELATIVE
	d relative
	e value
	a ()Z isRelative
	a (D)D get
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/ArgumentParserPosition; parseInt
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/ArgumentParserPosition; parseDouble
	b (Lcom/mojang/brigadier/StringReader;)Z isRelative
net/minecraft/commands/arguments/coordinates/ArgumentPosition net/minecraft/commands/arguments/coordinates/BlockPosArgument
	a ERROR_NOT_LOADED
	b ERROR_OUT_OF_WORLD
	c ERROR_OUT_OF_BOUNDS
	d EXAMPLES
	a ()Lnet/minecraft/commands/arguments/coordinates/ArgumentPosition; blockPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPosition; getLoadedBlockPos
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/level/WorldServer;Ljava/lang/String;)Lnet/minecraft/core/BlockPosition; getLoadedBlockPos
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPosition; getBlockPos
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPosition; getSpawnablePos
net/minecraft/commands/arguments/coordinates/ArgumentRotation net/minecraft/commands/arguments/coordinates/RotationArgument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	a ()Lnet/minecraft/commands/arguments/coordinates/ArgumentRotation; rotation
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; getRotation
net/minecraft/commands/arguments/coordinates/ArgumentRotationAxis net/minecraft/commands/arguments/coordinates/SwizzleArgument
	a EXAMPLES
	b ERROR_INVALID
	a ()Lnet/minecraft/commands/arguments/coordinates/ArgumentRotationAxis; swizzle
	a (Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet; getSwizzle
net/minecraft/commands/arguments/coordinates/ArgumentVec2 net/minecraft/commands/arguments/coordinates/Vec2Argument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	c centerCorrect
	a ()Lnet/minecraft/commands/arguments/coordinates/ArgumentVec2; vec2
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec2F; getVec2
	a (Z)Lnet/minecraft/commands/arguments/coordinates/ArgumentVec2; vec2
net/minecraft/commands/arguments/coordinates/ArgumentVec2I net/minecraft/commands/arguments/coordinates/ColumnPosArgument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	a ()Lnet/minecraft/commands/arguments/coordinates/ArgumentVec2I; columnPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/BlockPosition2D; getColumnPos
net/minecraft/commands/arguments/coordinates/ArgumentVec3 net/minecraft/commands/arguments/coordinates/Vec3Argument
	a ERROR_NOT_COMPLETE
	b ERROR_MIXED_TYPE
	c EXAMPLES
	d centerCorrect
	a ()Lnet/minecraft/commands/arguments/coordinates/ArgumentVec3; vec3
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec3D; getVec3
	a (Z)Lnet/minecraft/commands/arguments/coordinates/ArgumentVec3; vec3
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; getCoordinates
net/minecraft/commands/arguments/coordinates/ArgumentVectorPosition net/minecraft/commands/arguments/coordinates/LocalCoordinates
	a PREFIX_LOCAL_COORDINATE
	b left
	c up
	d forwards
	a ()Z isXRelative
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/ArgumentVectorPosition; parse
	a (Lcom/mojang/brigadier/StringReader;I)D readDouble
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/phys/Vec3D; getPosition
	b ()Z isYRelative
	b (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/phys/Vec2F; getRotation
	c ()Z isZRelative
net/minecraft/commands/arguments/coordinates/IVectorPosition net/minecraft/commands/arguments/coordinates/Coordinates
	a ()Z isXRelative
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/phys/Vec3D; getPosition
	b ()Z isYRelative
	b (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/phys/Vec2F; getRotation
	c ()Z isZRelative
	c (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/core/BlockPosition; getBlockPos
net/minecraft/commands/arguments/coordinates/VectorPosition net/minecraft/commands/arguments/coordinates/WorldCoordinates
	a x
	b y
	c z
	a ()Z isXRelative
	a (DDD)Lnet/minecraft/commands/arguments/coordinates/VectorPosition; absolute
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/VectorPosition; parseInt
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/VectorPosition; parseDouble
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/phys/Vec3D; getPosition
	a (Lnet/minecraft/world/phys/Vec2F;)Lnet/minecraft/commands/arguments/coordinates/VectorPosition; absolute
	b ()Z isYRelative
	b (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/phys/Vec2F; getRotation
	c ()Z isZRelative
	d ()Lnet/minecraft/commands/arguments/coordinates/VectorPosition; current
net/minecraft/commands/arguments/item/ArgumentItemPredicate net/minecraft/commands/arguments/item/ItemPredicateArgument
	a EXAMPLES
	b items
	a (Lcom/mojang/brigadier/StringReader;)Lfz$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; getItemPredicate
	a (Ljava/util/function/Predicate;Lnet/minecraft/nbt/NBTTagCompound;)Lfz$a; createResult
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/item/ArgumentItemPredicate; itemPredicate
net/minecraft/commands/arguments/item/ArgumentItemStack net/minecraft/commands/arguments/item/ItemArgument
	a EXAMPLES
	b items
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ArgumentPredicateItemStack; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/item/ArgumentPredicateItemStack; getItem
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/item/ArgumentItemStack; item
net/minecraft/commands/arguments/item/ArgumentParserItemStack net/minecraft/commands/arguments/item/ItemParser
	a ERROR_NO_TAGS_ALLOWED
	b ERROR_UNKNOWN_ITEM
	c ERROR_UNKNOWN_TAG
	d SYNTAX_START_NBT
	e SYNTAX_TAG
	f SUGGEST_NOTHING
	g items
	h reader
	i allowTags
	j result
	k nbt
	l suggestions
	a ()V readItem
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
	a (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lfy$a; parseForItem
	a (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Z)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	b ()V readTag
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTag
	b (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lcom/mojang/datafixers/util/Either; parseForTesting
	c ()V readNbt
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestItem
	d ()V parse
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestItemIdOrTag
net/minecraft/commands/arguments/item/ArgumentPredicateItemStack net/minecraft/commands/arguments/item/ItemInput
	a ERROR_STACK_TOO_BIG
	b item
	c tag
	a ()Lnet/minecraft/world/item/Item; getItem
	a (IZ)Lnet/minecraft/world/item/ItemStack; createItemStack
	a (Lnet/minecraft/world/item/ItemStack;)Z test
	b ()Ljava/lang/String; serialize
	c ()Ljava/lang/String; getItemName
net/minecraft/commands/arguments/item/ArgumentTag net/minecraft/commands/arguments/item/FunctionArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	c ERROR_UNKNOWN_FUNCTION
	a ()Lnet/minecraft/commands/arguments/item/ArgumentTag; functions
	a (Lcom/mojang/brigadier/StringReader;)Lfv$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getFunctions
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/commands/CustomFunction; getFunction
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; getFunctionOrTag
	b (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Collection; getFunctionTag
net/minecraft/commands/arguments/selector/ArgumentParserSelector net/minecraft/commands/arguments/selector/EntitySelectorParser
	A worldLimited
	B distance
	C level
	D x
	E y
	F z
	G deltaX
	H deltaY
	I deltaZ
	J rotX
	K rotY
	L predicate
	M order
	N currentEntity
	O playerName
	P startPosition
	Q entityUUID
	R suggestions
	S hasNameEquals
	T hasNameNotEquals
	U isLimited
	V isSorted
	W hasGamemodeEquals
	X hasGamemodeNotEquals
	Y hasTeamEquals
	Z hasTeamNotEquals
	a SYNTAX_SELECTOR_START
	aa type
	ab typeInverse
	ac hasScores
	ad hasAdvancements
	ae usesSelectors
	b SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR
	c SYNTAX_NOT
	d SYNTAX_TAG
	e ERROR_INVALID_NAME_OR_UUID
	f ERROR_UNKNOWN_SELECTOR_TYPE
	g ERROR_SELECTORS_NOT_ALLOWED
	h ERROR_MISSING_SELECTOR_TYPE
	i ERROR_EXPECTED_END_OF_OPTIONS
	j ERROR_EXPECTED_OPTION_VALUE
	k ORDER_NEAREST
	l ORDER_FURTHEST
	m ORDER_RANDOM
	n SUGGEST_NOTHING
	o SYNTAX_OPTIONS_START
	p SYNTAX_OPTIONS_END
	q SYNTAX_OPTIONS_SEPARATOR
	r SELECTOR_NEAREST_PLAYER
	s SELECTOR_ALL_PLAYERS
	t SELECTOR_RANDOM_PLAYERS
	u SELECTOR_CURRENT_ENTITY
	v SELECTOR_ALL_ENTITIES
	w reader
	x allowSelectors
	y maxResults
	z includesEntities
	A ()Z hasGamemodeNotEquals
	B ()Z hasTeamEquals
	C ()Z hasTeamNotEquals
	D ()V setTypeLimitedInversely
	E ()Z isTypeLimited
	F ()Z isTypeLimitedInversely
	G ()Z hasScores
	H ()Z hasAdvancements
	I ()V finalizePredicates
	a ()Lnet/minecraft/commands/arguments/selector/EntitySelector; getSelector
	a (D)V setX
	a (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; createAabb
	a (I)V setMaxResults
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V fillSelectorSuggestions
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a (Ljava/util/function/BiConsumer;)V setOrder
	a (Ljava/util/function/BiFunction;)V setSuggestions
	a (Ljava/util/function/Predicate;)V addPredicate
	a (Lnet/minecraft/advancements/critereon/CriterionConditionRange;)V setRotX
	a (Lnet/minecraft/advancements/critereon/CriterionConditionRange;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate; createRotationPredicate
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)V setDistance
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)V setLevel
	a (Lnet/minecraft/world/entity/EntityTypes;)V limitToType
	a (Z)V setIncludesEntities
	b ()V parseSelector
	b (D)V setY
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestNameOrSelector
	b (Lnet/minecraft/advancements/critereon/CriterionConditionRange;)V setRotY
	b (Z)V setHasNameEquals
	c ()V parseNameOrUUID
	c (D)V setZ
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestName
	c (Z)V setHasNameNotEquals
	d ()V parseOptions
	d (D)V setDeltaX
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestSelector
	d (Z)V setLimited
	e ()Z shouldInvertValue
	e (D)V setDeltaY
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOpenOptions
	e (Z)V setSorted
	f ()Z isTag
	f (D)V setDeltaZ
	f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKeyOrClose
	f (Z)V setHasGamemodeEquals
	g ()Lcom/mojang/brigadier/StringReader; getReader
	g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKey
	g (Z)V setHasGamemodeNotEquals
	h ()V setWorldLimited
	h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsNextOrClose
	h (Z)V setHasTeamEquals
	i ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; getDistance
	i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestEquals
	i (Z)V setHasTeamNotEquals
	j ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; getLevel
	j (Z)V setHasScores
	k ()Lnet/minecraft/advancements/critereon/CriterionConditionRange; getRotX
	k (Z)V setHasAdvancements
	l ()Lnet/minecraft/advancements/critereon/CriterionConditionRange; getRotY
	m ()Ljava/lang/Double; getX
	n ()Ljava/lang/Double; getY
	o ()Ljava/lang/Double; getZ
	p ()Ljava/lang/Double; getDeltaX
	q ()Ljava/lang/Double; getDeltaY
	r ()Ljava/lang/Double; getDeltaZ
	s ()Ljava/util/function/BiConsumer; getOrder
	t ()Lnet/minecraft/commands/arguments/selector/EntitySelector; parse
	u ()Z isCurrentEntity
	v ()Z hasNameEquals
	w ()Z hasNameNotEquals
	x ()Z isLimited
	y ()Z isSorted
	z ()Z hasGamemodeEquals
net/minecraft/commands/arguments/selector/options/PlayerSelector net/minecraft/commands/arguments/selector/options/EntitySelectorOptions
	a ERROR_UNKNOWN_OPTION
	b ERROR_INAPPLICABLE_OPTION
	c ERROR_RANGE_NEGATIVE
	d ERROR_LEVEL_NEGATIVE
	e ERROR_LIMIT_TOO_SMALL
	f ERROR_SORT_UNKNOWN
	g ERROR_GAME_MODE_INVALID
	h ERROR_ENTITY_TYPE_INVALID
	i OPTIONS
	a ()V bootStrap
	a (Ljava/lang/String;Lge$a;Ljava/util/function/Predicate;Lnet/minecraft/network/chat/IChatBaseComponent;)V register
	a (Lnet/minecraft/commands/arguments/selector/ArgumentParserSelector;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V suggestNames
	a (Lnet/minecraft/commands/arguments/selector/ArgumentParserSelector;Ljava/lang/String;I)Lge$a; get
net/minecraft/commands/synchronization/CompletionProviders net/minecraft/commands/synchronization/SuggestionProviders
	a ASK_SERVER
	b ALL_RECIPES
	c AVAILABLE_SOUNDS
	d SUMMONABLE_ENTITIES
	e PROVIDERS_BY_NAME
	f DEFAULT_NAME
	a (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/resources/MinecraftKey; getName
	a (Lnet/minecraft/resources/MinecraftKey;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; getProvider
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; register
	b (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; safelySwap
net/minecraft/commands/synchronization/brigadier/ArgumentSerializerString net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	a (Lcom/mojang/brigadier/arguments/StringArgumentType;)Lgr$a; unpack
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgr$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgr$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;)Lgr$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
net/minecraft/core/BaseBlockPosition net/minecraft/core/Vec3i
	a x
	b y
	c z
	f CODEC
	g ZERO
	a (Lnet/minecraft/core/BaseBlockPosition;D)Z closerThan
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)I get
	a (Lnet/minecraft/core/IPosition;D)Z closerToCenterThan
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;I)Lnet/minecraft/core/BaseBlockPosition; relative
	b (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BaseBlockPosition; relative
	b (Lnet/minecraft/core/EnumDirection;I)Lnet/minecraft/core/BaseBlockPosition; relative
	b (Lnet/minecraft/core/IPosition;)D distToCenterSqr
	c (DDD)D distToCenterSqr
	c (III)Lnet/minecraft/core/BaseBlockPosition; offset
	d (DDD)D distToLowCornerSqr
	d (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; cross
	e (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; subtract
	f (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; offset
	i (I)Lnet/minecraft/core/BaseBlockPosition; east
	i (Lnet/minecraft/core/BaseBlockPosition;)I compareTo
	j (I)Lnet/minecraft/core/BaseBlockPosition; west
	j (Lnet/minecraft/core/BaseBlockPosition;)D distSqr
	k ()Lnet/minecraft/core/BaseBlockPosition; east
	k (I)Lnet/minecraft/core/BaseBlockPosition; south
	k (Lnet/minecraft/core/BaseBlockPosition;)I distManhattan
	l ()Lnet/minecraft/core/BaseBlockPosition; west
	l (I)Lnet/minecraft/core/BaseBlockPosition; north
	m ()Lnet/minecraft/core/BaseBlockPosition; south
	m (I)Lnet/minecraft/core/BaseBlockPosition; below
	n ()Lnet/minecraft/core/BaseBlockPosition; north
	n (I)Lnet/minecraft/core/BaseBlockPosition; above
	o ()Lnet/minecraft/core/BaseBlockPosition; below
	o (I)Lnet/minecraft/core/BaseBlockPosition; multiply
	p ()Lnet/minecraft/core/BaseBlockPosition; above
	s (I)Lnet/minecraft/core/BaseBlockPosition; setZ
	t (I)Lnet/minecraft/core/BaseBlockPosition; setY
	u ()I getX
	u (I)Lnet/minecraft/core/BaseBlockPosition; setX
	v ()I getY
	v (I)Lcom/mojang/serialization/Codec; offsetCodec
	w ()I getZ
	x ()Ljava/lang/String; toShortString
net/minecraft/core/BlockPosition net/minecraft/core/BlockPos
	a CODEC
	b ZERO
	c PACKED_Y_LENGTH
	d LOGGER
	e PACKED_X_LENGTH
	h PACKED_Z_LENGTH
	i PACKED_X_MASK
	j PACKED_Y_MASK
	k PACKED_Z_MASK
	l Y_OFFSET
	m Z_OFFSET
	n X_OFFSET
	a ()J asLong
	a (DDD)Lnet/minecraft/core/BlockPosition; containing
	a (I)Lnet/minecraft/core/BlockPosition; multiply
	a (III)J asLong
	a (IIIIII)Ljava/util/stream/Stream; betweenClosedStream
	a (J)I getX
	a (JIII)J offset
	a (JLnet/minecraft/core/EnumDirection;)J offset
	a (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BlockPosition; offset
	a (Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; squareOutSouthEast
	a (Lnet/minecraft/core/BlockPosition;III)Ljava/lang/Iterable; withinManhattan
	a (Lnet/minecraft/core/BlockPosition;IILjava/util/function/BiConsumer;Ljava/util/function/Predicate;)I breadthFirstTraversal
	a (Lnet/minecraft/core/BlockPosition;IILjava/util/function/Predicate;)Ljava/util/Optional; findClosestMatch
	a (Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)Ljava/lang/Iterable; spiralAround
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Ljava/lang/Iterable; betweenClosed
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;I)Lnet/minecraft/core/BlockPosition; relative
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BlockPosition; relative
	a (Lnet/minecraft/core/EnumDirection;I)Lnet/minecraft/core/BlockPosition; relative
	a (Lnet/minecraft/core/IPosition;)Lnet/minecraft/core/BlockPosition; containing
	a (Lnet/minecraft/util/RandomSource;IIIIIII)Ljava/lang/Iterable; randomBetweenClosed
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;I)Ljava/lang/Iterable; randomInCube
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BlockPosition; rotate
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Ljava/util/stream/Stream; betweenClosedStream
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/stream/Stream; betweenClosedStream
	b ()Lnet/minecraft/world/phys/Vec3D; getCenter
	b (I)Lnet/minecraft/core/BlockPosition; above
	b (III)Lnet/minecraft/core/BlockPosition; offset
	b (IIIIII)Ljava/lang/Iterable; betweenClosed
	b (J)I getY
	b (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BlockPosition; subtract
	b (Lnet/minecraft/core/BlockPosition;III)Ljava/util/stream/Stream; withinManhattanStream
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; betweenClosedStream
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;I)Lnet/minecraft/core/BaseBlockPosition; relative
	b (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BaseBlockPosition; relative
	b (Lnet/minecraft/core/EnumDirection;I)Lnet/minecraft/core/BaseBlockPosition; relative
	c ()Lnet/minecraft/core/BlockPosition; above
	c (I)Lnet/minecraft/core/BlockPosition; below
	c (III)Lnet/minecraft/core/BaseBlockPosition; offset
	c (J)I getZ
	c (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BlockPosition; cross
	d ()Lnet/minecraft/core/BlockPosition; below
	d (I)Lnet/minecraft/core/BlockPosition; north
	d (J)Lnet/minecraft/core/BlockPosition; of
	d (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; cross
	e ()Lnet/minecraft/core/BlockPosition; north
	e (I)Lnet/minecraft/core/BlockPosition; south
	e (J)J getFlatIndex
	e (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; subtract
	f ()Lnet/minecraft/core/BlockPosition; south
	f (I)Lnet/minecraft/core/BlockPosition; west
	f (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; offset
	g ()Lnet/minecraft/core/BlockPosition; west
	g (I)Lnet/minecraft/core/BlockPosition; east
	h ()Lnet/minecraft/core/BlockPosition; east
	h (I)Lnet/minecraft/core/BlockPosition; atY
	i ()Lnet/minecraft/core/BlockPosition; immutable
	i (I)Lnet/minecraft/core/BaseBlockPosition; east
	j ()Lnet/minecraft/core/BlockPosition$MutableBlockPosition; mutable
	j (I)Lnet/minecraft/core/BaseBlockPosition; west
	k ()Lnet/minecraft/core/BaseBlockPosition; east
	k (I)Lnet/minecraft/core/BaseBlockPosition; south
	l ()Lnet/minecraft/core/BaseBlockPosition; west
	l (I)Lnet/minecraft/core/BaseBlockPosition; north
	m ()Lnet/minecraft/core/BaseBlockPosition; south
	m (I)Lnet/minecraft/core/BaseBlockPosition; below
	n ()Lnet/minecraft/core/BaseBlockPosition; north
	n (I)Lnet/minecraft/core/BaseBlockPosition; above
	o ()Lnet/minecraft/core/BaseBlockPosition; below
	o (I)Lnet/minecraft/core/BaseBlockPosition; multiply
	p ()Lnet/minecraft/core/BaseBlockPosition; above
net/minecraft/core/BlockPosition$MutableBlockPosition net/minecraft/core/BlockPos$MutableBlockPos
	a (I)Lnet/minecraft/core/BlockPosition; multiply
	a (Lnet/minecraft/core/BaseBlockPosition;III)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; setWithOffset
	a (Lnet/minecraft/core/BaseBlockPosition;Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; setWithOffset
	a (Lnet/minecraft/core/BaseBlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; setWithOffset
	a (Lnet/minecraft/core/EnumAxisCycle;III)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; set
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;I)Lnet/minecraft/core/BlockPosition; relative
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;II)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; clamp
	a (Lnet/minecraft/core/EnumDirection;I)Lnet/minecraft/core/BlockPosition; relative
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BlockPosition; rotate
	b (DDD)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; set
	b (III)Lnet/minecraft/core/BlockPosition; offset
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;I)Lnet/minecraft/core/BaseBlockPosition; relative
	b (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BaseBlockPosition; relative
	b (Lnet/minecraft/core/EnumDirection;I)Lnet/minecraft/core/BaseBlockPosition; relative
	c (III)Lnet/minecraft/core/BaseBlockPosition; offset
	c (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; move
	c (Lnet/minecraft/core/EnumDirection;I)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; move
	d (III)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; set
	d (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; cross
	e (III)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; move
	e (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; subtract
	f (J)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; set
	f (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; offset
	g (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; set
	h (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; move
	i ()Lnet/minecraft/core/BlockPosition; immutable
	i (I)Lnet/minecraft/core/BaseBlockPosition; east
	j (I)Lnet/minecraft/core/BaseBlockPosition; west
	k ()Lnet/minecraft/core/BaseBlockPosition; east
	k (I)Lnet/minecraft/core/BaseBlockPosition; south
	l ()Lnet/minecraft/core/BaseBlockPosition; west
	l (I)Lnet/minecraft/core/BaseBlockPosition; north
	m ()Lnet/minecraft/core/BaseBlockPosition; south
	m (I)Lnet/minecraft/core/BaseBlockPosition; below
	n ()Lnet/minecraft/core/BaseBlockPosition; north
	n (I)Lnet/minecraft/core/BaseBlockPosition; above
	o ()Lnet/minecraft/core/BaseBlockPosition; below
	o (I)Lnet/minecraft/core/BaseBlockPosition; multiply
	p ()Lnet/minecraft/core/BaseBlockPosition; above
	p (I)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; setX
	q (I)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; setY
	r (I)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; setZ
	s (I)Lnet/minecraft/core/BaseBlockPosition; setZ
	t (I)Lnet/minecraft/core/BaseBlockPosition; setY
	u (I)Lnet/minecraft/core/BaseBlockPosition; setX
net/minecraft/core/BlockPropertyJigsawOrientation net/minecraft/core/FrontAndTop
	a DOWN_EAST
	b DOWN_NORTH
	c DOWN_SOUTH
	d DOWN_WEST
	e UP_EAST
	f UP_NORTH
	g UP_SOUTH
	h UP_WEST
	i WEST_UP
	j EAST_UP
	k NORTH_UP
	l SOUTH_UP
	m LOOKUP_TOP_FRONT
	n name
	o top
	p front
	q $VALUES
	a ()Lnet/minecraft/core/EnumDirection; front
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BlockPropertyJigsawOrientation; fromFrontAndTop
	b ()Lnet/minecraft/core/EnumDirection; top
	b (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)I lookupKey
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/core/BlockPropertyJigsawOrientation; $values
net/minecraft/core/CursorPosition net/minecraft/core/Cursor3D
	a TYPE_INSIDE
	b TYPE_FACE
	c TYPE_EDGE
	d TYPE_CORNER
	e originX
	f originY
	g originZ
	h width
	i height
	j depth
	k end
	l index
	m x
	n y
	o z
	a ()Z advance
	b ()I nextX
	c ()I nextY
	d ()I nextZ
	e ()I getNextType
net/minecraft/core/EnumAxisCycle net/minecraft/core/AxisCycle
	a NONE
	b FORWARD
	c BACKWARD
	d AXIS_VALUES
	e VALUES
	f $VALUES
	a ()Lnet/minecraft/core/EnumAxisCycle; inverse
	a (DDDLnet/minecraft/core/EnumDirection$EnumAxis;)D cycle
	a (IIILnet/minecraft/core/EnumDirection$EnumAxis;)I cycle
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)Lnet/minecraft/core/EnumDirection$EnumAxis; cycle
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/core/EnumDirection$EnumAxis;)Lnet/minecraft/core/EnumAxisCycle; between
	b ()[Lnet/minecraft/core/EnumAxisCycle; $values
net/minecraft/core/EnumDirection net/minecraft/core/Direction
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g CODEC
	h VERTICAL_CODEC
	i data3d
	j oppositeIndex
	k data2d
	l name
	m axis
	n axisDirection
	o normal
	p VALUES
	q BY_3D_DATA
	r BY_2D_DATA
	s $VALUES
	a ()Ljava/util/stream/Stream; stream
	a (D)Lnet/minecraft/core/EnumDirection; fromYRot
	a (DDD)Lnet/minecraft/core/EnumDirection; getNearest
	a (F)Z isFacingAngle
	a (FFF)Lnet/minecraft/core/EnumDirection; getNearest
	a (I)Lnet/minecraft/core/EnumDirection; from3DDataValue
	a (III)Lnet/minecraft/core/EnumDirection; fromDelta
	a (Ljava/lang/String;)Lnet/minecraft/core/EnumDirection; byName
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)Lnet/minecraft/core/EnumDirection; getClockWise
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/core/EnumDirection$EnumAxisDirection;)Lnet/minecraft/core/EnumDirection; fromAxisAndDirection
	a (Lnet/minecraft/core/EnumDirection$EnumAxisDirection;Lnet/minecraft/core/EnumDirection$EnumAxis;)Lnet/minecraft/core/EnumDirection; get
	a (Lnet/minecraft/core/EnumDirection;)Lcom/mojang/serialization/DataResult; verifyVertical
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)[Lnet/minecraft/core/EnumDirection; makeDirectionArray
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/Collection; allShuffled
	a (Lnet/minecraft/world/entity/Entity;)[Lnet/minecraft/core/EnumDirection; orderedByNearest
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/EnumDirection$EnumAxis;)Lnet/minecraft/core/EnumDirection; getFacingAxis
	a (Lorg/joml/Matrix4f;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/EnumDirection; rotate
	b ()Lorg/joml/Quaternionf; getRotation
	b (I)Lnet/minecraft/core/EnumDirection; from2DDataValue
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;)Lnet/minecraft/core/EnumDirection; getCounterClockWise
	b (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/EnumDirection; getRandom
	c ()Ljava/lang/String; getSerializedName
	d ()I get3DDataValue
	e ()I get2DDataValue
	f ()Lnet/minecraft/core/EnumDirection$EnumAxisDirection; getAxisDirection
	g ()Lnet/minecraft/core/EnumDirection; getOpposite
	h ()Lnet/minecraft/core/EnumDirection; getClockWise
	i ()Lnet/minecraft/core/EnumDirection; getCounterClockWise
	j ()I getStepX
	k ()I getStepY
	l ()I getStepZ
	m ()Lorg/joml/Vector3f; step
	n ()Ljava/lang/String; getName
	o ()Lnet/minecraft/core/EnumDirection$EnumAxis; getAxis
	p ()F toYRot
	q ()Lnet/minecraft/core/BaseBlockPosition; getNormal
	r ()Lnet/minecraft/core/EnumDirection; getClockWiseX
	s ()Lnet/minecraft/core/EnumDirection; getCounterClockWiseX
	t ()Lnet/minecraft/core/EnumDirection; getClockWiseZ
	u ()Lnet/minecraft/core/EnumDirection; getCounterClockWiseZ
	w ()[Lnet/minecraft/core/EnumDirection; $values
net/minecraft/core/EnumDirection$EnumAxis net/minecraft/core/Direction$Axis
	a X
	b Y
	c Z
	d VALUES
	e CODEC
	f name
	g $VALUES
	a ()Ljava/lang/String; getName
	a (DDD)D choose
	a (III)I choose
	a (Ljava/lang/String;)Lnet/minecraft/core/EnumDirection$EnumAxis; byName
	a (Lnet/minecraft/core/EnumDirection;)Z test
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/EnumDirection$EnumAxis; getRandom
	b ()Z isVertical
	c ()Ljava/lang/String; getSerializedName
	d ()Z isHorizontal
	e ()Lnet/minecraft/core/EnumDirection$EnumDirectionLimit; getPlane
	f ()[Lnet/minecraft/core/EnumDirection$EnumAxis; $values
net/minecraft/core/EnumDirection$EnumAxisDirection net/minecraft/core/Direction$AxisDirection
	a POSITIVE
	b NEGATIVE
	c step
	d name
	e $VALUES
	a ()I getStep
	b ()Ljava/lang/String; getName
	c ()Lnet/minecraft/core/EnumDirection$EnumAxisDirection; opposite
	d ()[Lnet/minecraft/core/EnumDirection$EnumAxisDirection; $values
net/minecraft/core/EnumDirection$EnumDirectionLimit net/minecraft/core/Direction$Plane
	a HORIZONTAL
	b VERTICAL
	c faces
	d axis
	e $VALUES
	a ()Ljava/util/stream/Stream; stream
	a (Lnet/minecraft/core/EnumDirection;)Z test
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/EnumDirection; getRandomDirection
	b ()[Lnet/minecraft/core/EnumDirection$EnumDirectionLimit; $values
	b (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/EnumDirection$EnumAxis; getRandomAxis
	c (Lnet/minecraft/util/RandomSource;)Ljava/util/List; shuffledCopy
net/minecraft/core/EnumDirection8 net/minecraft/core/Direction8
	a NORTH
	b NORTH_EAST
	c EAST
	d SOUTH_EAST
	e SOUTH
	f SOUTH_WEST
	g WEST
	h NORTH_WEST
	i directions
	j step
	k $VALUES
	a ()Ljava/util/Set; getDirections
	b ()I getStepX
	c ()I getStepZ
	d ()[Lnet/minecraft/core/EnumDirection8; $values
net/minecraft/core/IPosition net/minecraft/core/Position
	a ()D x
	b ()D y
	c ()D z
net/minecraft/core/IRegistry net/minecraft/core/Registry
	a (Ljava/lang/Object;)I getId
	a (Ljava/util/Map;)V bindTags
	a (Lnet/minecraft/core/IRegistry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/resources/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; getOrCreateTag
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandom
	b (Ljava/lang/Object;)Lnet/minecraft/resources/MinecraftKey; getKey
	b (Lnet/minecraft/core/IRegistry;Lnet/minecraft/resources/MinecraftKey;Ljava/lang/Object;)Lhe$c; registerForHolder
	b (Lnet/minecraft/core/IRegistry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Lhe$c; registerForHolder
	b (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; getOptional
	b (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; getHolder
	b (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; getTag
	c ()Lnet/minecraft/resources/ResourceKey; key
	c (I)Ljava/util/Optional; getHolder
	c (Ljava/lang/Object;)Ljava/util/Optional; getResourceKey
	c (Lnet/minecraft/resources/MinecraftKey;)Z containsKey
	c (Lnet/minecraft/resources/ResourceKey;)Z containsKey
	c (Lnet/minecraft/tags/TagKey;)Ljava/lang/Iterable; getTagOrEmpty
	d ()Lcom/mojang/serialization/Lifecycle; registryLifecycle
	d (Ljava/lang/Object;)Lnet/minecraft/core/Holder; wrapAsHolder
	d (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; getOptional
	e ()Ljava/util/Set; keySet
	e (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; lifecycle
	e (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; getOrThrow
	f ()Ljava/util/Set; registryKeySet
	f (Ljava/lang/Object;)Lhe$c; createIntrusiveHolder
	f (Lnet/minecraft/resources/ResourceKey;)Lhe$c; getHolderOrThrow
	g ()Ljava/util/Set; entrySet
	h ()Ljava/util/stream/Stream; holders
	i ()Ljava/util/stream/Stream; getTags
	j ()Ljava/util/stream/Stream; getTagNames
	l ()Lnet/minecraft/core/IRegistry; freeze
	m ()V resetTags
	o ()Lnet/minecraft/core/HolderOwner; holderOwner
	p ()Lhg$c; asLookup
	q ()Lcom/mojang/serialization/Codec; byNameCodec
	r ()Lcom/mojang/serialization/Codec; holderByNameCodec
	s ()Ljava/util/stream/Stream; stream
	t ()Lnet/minecraft/core/Registry; asHolderIdMap
	u ()Lhg$c; asTagAddingLookup
net/minecraft/core/IRegistryCustom net/minecraft/core/RegistryAccess
	a LOGGER
	b EMPTY
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/core/IRegistryCustom$Dimension; fromRegistryOfRegistries
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; lookup
	b ()Ljava/util/stream/Stream; registries
	c ()Lnet/minecraft/core/IRegistryCustom$Dimension; freeze
	c (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; registry
	d ()Lcom/mojang/serialization/Lifecycle; allRegistriesLifecycle
	d (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/IRegistry; registryOrThrow
net/minecraft/core/IRegistryCustom$Dimension net/minecraft/core/RegistryAccess$Frozen
net/minecraft/core/IRegistryWritable net/minecraft/core/WritableRegistry
	a (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c; register
	k ()Z isEmpty
	n ()Lnet/minecraft/core/HolderGetter; createRegistrationLookup
net/minecraft/core/Registry net/minecraft/core/IdMap
	a DEFAULT
	a (I)Ljava/lang/Object; byId
	a (Ljava/lang/Object;)I getId
	b ()I size
	b (I)Ljava/lang/Object; byIdOrThrow
net/minecraft/core/RegistryBlockID net/minecraft/core/IdMapper
	b nextId
	c tToId
	d idToT
	a (I)Ljava/lang/Object; byId
	a (Ljava/lang/Object;)I getId
	a (Ljava/lang/Object;I)V addMapping
	b ()I size
	b (Ljava/lang/Object;)V add
	c (I)Z contains
net/minecraft/core/RegistryBlocks net/minecraft/core/DefaultedRegistry
	a ()Lnet/minecraft/resources/MinecraftKey; getDefaultKey
	a (I)Ljava/lang/Object; byId
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/Object; get
	b (Ljava/lang/Object;)Lnet/minecraft/resources/MinecraftKey; getKey
net/minecraft/core/RegistryMaterials net/minecraft/core/MappedRegistry
	b LOGGER
	c key
	d byId
	e toId
	f byLocation
	g byKey
	h byValue
	i lifecycles
	j registryLifecycle
	k tags
	l frozen
	m unregisteredIntrusiveHolders
	n holdersInOrder
	o nextId
	p lookup
	a ()Ljava/util/List; holdersInOrder
	a (I)Ljava/lang/Object; byId
	a (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c; registerMapping
	a (Lhe$c;)Ljava/lang/Object; getValueFromNullable
	a (Ljava/lang/Object;)I getId
	a (Ljava/util/Map;)V bindTags
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c; register
	a (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; getOrCreateTag
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandom
	b ()I size
	b (Ljava/lang/Object;)Lnet/minecraft/resources/MinecraftKey; getKey
	b (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; getHolder
	b (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; getTag
	c ()Lnet/minecraft/resources/ResourceKey; key
	c (I)Ljava/util/Optional; getHolder
	c (Ljava/lang/Object;)Ljava/util/Optional; getResourceKey
	c (Lnet/minecraft/resources/MinecraftKey;)Z containsKey
	c (Lnet/minecraft/resources/ResourceKey;)Z containsKey
	d ()Lcom/mojang/serialization/Lifecycle; registryLifecycle
	d (Ljava/lang/Object;)Lnet/minecraft/core/Holder; wrapAsHolder
	d (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; createTag
	e ()Ljava/util/Set; keySet
	e (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; lifecycle
	f ()Ljava/util/Set; registryKeySet
	f (Ljava/lang/Object;)Lhe$c; createIntrusiveHolder
	g ()Ljava/util/Set; entrySet
	g (Lnet/minecraft/resources/ResourceKey;)V validateWrite
	h ()Ljava/util/stream/Stream; holders
	h (Lnet/minecraft/resources/ResourceKey;)Lhe$c; getOrCreateHolderOrThrow
	i ()Ljava/util/stream/Stream; getTags
	j ()Ljava/util/stream/Stream; getTagNames
	k ()Z isEmpty
	l ()Lnet/minecraft/core/IRegistry; freeze
	m ()V resetTags
	n ()Lnet/minecraft/core/HolderGetter; createRegistrationLookup
	o ()Lnet/minecraft/core/HolderOwner; holderOwner
	p ()Lhg$c; asLookup
	v ()V validateWrite
net/minecraft/core/SectionPosition net/minecraft/core/SectionPos
	a SECTION_BITS
	b SECTION_SIZE
	c SECTION_MASK
	d SECTION_HALF_SIZE
	e SECTION_MAX_INDEX
	h PACKED_X_LENGTH
	i PACKED_Y_LENGTH
	j PACKED_Z_LENGTH
	k PACKED_X_MASK
	l PACKED_Y_MASK
	m PACKED_Z_MASK
	n Y_OFFSET
	o Z_OFFSET
	p X_OFFSET
	q RELATIVE_X_SHIFT
	r RELATIVE_Y_SHIFT
	s RELATIVE_Z_SHIFT
	a ()I x
	a (D)I posToSectionCoord
	a (I)I blockToSectionCoord
	a (II)I sectionToBlockCoord
	a (III)Lnet/minecraft/core/SectionPosition; of
	a (IIIIII)Ljava/util/stream/Stream; betweenClosedStream
	a (IIILit/unimi/dsi/fastutil/longs/LongConsumer;)V aroundAndAtBlockPos
	a (J)Lnet/minecraft/core/SectionPosition; of
	a (JIII)J offset
	a (JLit/unimi/dsi/fastutil/longs/LongConsumer;)V aroundAndAtBlockPos
	a (JLnet/minecraft/core/EnumDirection;)J offset
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/SectionPosition; of
	a (Lnet/minecraft/core/BlockPosition;Lit/unimi/dsi/fastutil/longs/LongConsumer;)V aroundAndAtBlockPos
	a (Lnet/minecraft/core/IPosition;)Lnet/minecraft/core/SectionPosition; of
	a (Lnet/minecraft/core/SectionPosition;I)Ljava/util/stream/Stream; cube
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)Lnet/minecraft/core/SectionPosition; of
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;III)Ljava/util/stream/Stream; aroundChunk
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;)Lnet/minecraft/core/SectionPosition; bottomOf
	a (Lnet/minecraft/world/level/entity/EntityAccess;)Lnet/minecraft/core/SectionPosition; of
	a (S)I sectionRelativeX
	b ()I y
	b (D)I blockToSectionCoord
	b (I)I sectionRelative
	b (II)J getZeroNode
	b (III)J asLong
	b (J)I x
	b (Lnet/minecraft/core/BlockPosition;)S sectionRelativePos
	b (S)I sectionRelativeY
	c ()I z
	c (I)I sectionToBlockCoord
	c (III)Lnet/minecraft/core/BaseBlockPosition; offset
	c (J)I y
	c (Lnet/minecraft/core/BlockPosition;)J asLong
	c (S)I sectionRelativeZ
	d ()I minBlockX
	d (III)Lnet/minecraft/core/SectionPosition; offset
	d (J)I z
	d (S)I relativeToBlockX
	e ()I minBlockY
	e (J)J blockToSection
	e (S)I relativeToBlockY
	f ()I minBlockZ
	f (J)J getZeroNode
	f (S)I relativeToBlockZ
	g ()I maxBlockX
	g (S)Lnet/minecraft/core/BlockPosition; relativeToBlockPos
	h ()I maxBlockY
	i ()I maxBlockZ
	j ()Lnet/minecraft/core/BlockPosition; origin
	q ()Lnet/minecraft/core/BlockPosition; center
	r ()Lnet/minecraft/world/level/ChunkCoordIntPair; chunk
	s ()J asLong
	t ()Ljava/util/stream/Stream; blocksInside
net/minecraft/core/Vector3f net/minecraft/core/Rotations
	a x
	b y
	c z
	a ()Lnet/minecraft/nbt/NBTTagList; save
	b ()F getX
	c ()F getY
	d ()F getZ
	e ()F getWrappedX
	f ()F getWrappedY
	g ()F getWrappedZ
net/minecraft/core/dispenser/DispenseBehaviorBoat net/minecraft/core/dispenser/BoatDispenseItemBehavior
	c defaultDispenseItemBehavior
	d type
	e isChestBoat
	a (Lnet/minecraft/core/dispenser/SourceBlock;)V playSound
	a (Lnet/minecraft/core/dispenser/SourceBlock;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; execute
net/minecraft/core/dispenser/DispenseBehaviorItem net/minecraft/core/dispenser/DefaultDispenseItemBehavior
	a (Lnet/minecraft/core/dispenser/SourceBlock;)V playSound
	a (Lnet/minecraft/core/dispenser/SourceBlock;Lnet/minecraft/core/EnumDirection;)V playAnimation
	a (Lnet/minecraft/core/dispenser/SourceBlock;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; execute
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/EnumDirection;Lnet/minecraft/core/IPosition;)V spawnItem
net/minecraft/core/dispenser/DispenseBehaviorMaybe net/minecraft/core/dispenser/OptionalDispenseItemBehavior
	c success
	a ()Z isSuccess
	a (Lnet/minecraft/core/dispenser/SourceBlock;)V playSound
	a (Z)V setSuccess
net/minecraft/core/dispenser/DispenseBehaviorProjectile net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior
	a ()F getUncertainty
	a (Lnet/minecraft/core/dispenser/SourceBlock;)V playSound
	a (Lnet/minecraft/core/dispenser/SourceBlock;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; execute
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/IPosition;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/IProjectile; getProjectile
	b ()F getPower
net/minecraft/core/dispenser/DispenseBehaviorShears net/minecraft/core/dispenser/ShearsDispenseItemBehavior
	a (Lnet/minecraft/core/dispenser/SourceBlock;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; execute
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z tryShearBeehive
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z tryShearLivingEntity
net/minecraft/core/dispenser/DispenseBehaviorShulkerBox net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior
	c LOGGER
	a (Lnet/minecraft/core/dispenser/SourceBlock;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; execute
net/minecraft/core/dispenser/IDispenseBehavior net/minecraft/core/dispenser/DispenseItemBehavior
	a LOGGER
	b NOOP
	a (Lnet/minecraft/core/dispenser/SourceBlock;Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/phys/Vec3D; getEntityPokingOutOfBlockPos
	c ()V bootStrap
net/minecraft/core/dispenser/SourceBlock net/minecraft/core/dispenser/BlockSource
	a level
	b pos
	c state
	d blockEntity
	a ()Lnet/minecraft/world/phys/Vec3D; center
	b ()Lnet/minecraft/server/level/WorldServer; level
	c ()Lnet/minecraft/core/BlockPosition; pos
	d ()Lnet/minecraft/world/level/block/state/IBlockData; state
	e ()Lnet/minecraft/world/level/block/entity/TileEntityDispenser; blockEntity
net/minecraft/core/particles/Particle net/minecraft/core/particles/ParticleType
	a overrideLimiter
	b deserializer
	c ()Z getOverrideLimiter
	d ()Lit$a; getDeserializer
	e ()Lcom/mojang/serialization/Codec; codec
net/minecraft/core/particles/ParticleParam net/minecraft/core/particles/ParticleOptions
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
net/minecraft/core/particles/ParticleParamBlock net/minecraft/core/particles/BlockParticleOption
	a DESERIALIZER
	b type
	c state
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/core/particles/Particle;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
	c ()Lnet/minecraft/world/level/block/state/IBlockData; getState
net/minecraft/core/particles/ParticleParamItem net/minecraft/core/particles/ItemParticleOption
	a DESERIALIZER
	b type
	c itemStack
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/core/particles/Particle;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
	c ()Lnet/minecraft/world/item/ItemStack; getItem
net/minecraft/core/particles/ParticleParamRedstone net/minecraft/core/particles/DustParticleOptions
	a REDSTONE_PARTICLE_COLOR
	b REDSTONE
	c CODEC
	d DESERIALIZER
	b ()Lnet/minecraft/core/particles/Particle; getType
net/minecraft/core/particles/ParticleType net/minecraft/core/particles/SimpleParticleType
	a DESERIALIZER
	b codec
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
	e ()Lcom/mojang/serialization/Codec; codec
	f ()Lnet/minecraft/core/particles/ParticleType; getType
net/minecraft/core/particles/Particles net/minecraft/core/particles/ParticleTypes
	A FIREWORK
	B FISHING
	C FLAME
	D CHERRY_LEAVES
	E SCULK_SOUL
	F SCULK_CHARGE
	G SCULK_CHARGE_POP
	H SOUL_FIRE_FLAME
	I SOUL
	J FLASH
	K HAPPY_VILLAGER
	L COMPOSTER
	M HEART
	N INSTANT_EFFECT
	O ITEM
	P VIBRATION
	Q ITEM_SLIME
	R ITEM_SNOWBALL
	S LARGE_SMOKE
	T LAVA
	U MYCELIUM
	V NOTE
	W POOF
	X PORTAL
	Y RAIN
	Z SMOKE
	a AMBIENT_ENTITY_EFFECT
	aA LANDING_OBSIDIAN_TEAR
	aB REVERSE_PORTAL
	aC WHITE_ASH
	aD SMALL_FLAME
	aE SNOWFLAKE
	aF DRIPPING_DRIPSTONE_LAVA
	aG FALLING_DRIPSTONE_LAVA
	aH DRIPPING_DRIPSTONE_WATER
	aI FALLING_DRIPSTONE_WATER
	aJ GLOW_SQUID_INK
	aK GLOW
	aL WAX_ON
	aM WAX_OFF
	aN ELECTRIC_SPARK
	aO SCRAPE
	aP SHRIEK
	aQ EGG_CRACK
	aR CODEC
	aa SNEEZE
	ab SPIT
	ac SQUID_INK
	ad SWEEP_ATTACK
	ae TOTEM_OF_UNDYING
	af UNDERWATER
	ag SPLASH
	ah WITCH
	ai BUBBLE_POP
	aj CURRENT_DOWN
	ak BUBBLE_COLUMN_UP
	al NAUTILUS
	am DOLPHIN
	an CAMPFIRE_COSY_SMOKE
	ao CAMPFIRE_SIGNAL_SMOKE
	ap DRIPPING_HONEY
	aq FALLING_HONEY
	ar LANDING_HONEY
	as FALLING_NECTAR
	at FALLING_SPORE_BLOSSOM
	au ASH
	av CRIMSON_SPORE
	aw WARPED_SPORE
	ax SPORE_BLOSSOM_AIR
	ay DRIPPING_OBSIDIAN_TEAR
	az FALLING_OBSIDIAN_TEAR
	b ANGRY_VILLAGER
	c BLOCK
	d BLOCK_MARKER
	e BUBBLE
	f CLOUD
	g CRIT
	h DAMAGE_INDICATOR
	i DRAGON_BREATH
	j DRIPPING_LAVA
	k FALLING_LAVA
	l LANDING_LAVA
	m DRIPPING_WATER
	n FALLING_WATER
	o DUST
	p DUST_COLOR_TRANSITION
	q EFFECT
	r ELDER_GUARDIAN
	s ENCHANTED_HIT
	t ENCHANT
	u END_ROD
	v ENTITY_EFFECT
	w EXPLOSION_EMITTER
	x EXPLOSION
	y SONIC_BOOM
	z FALLING_DUST
	a (Ljava/lang/String;Z)Lnet/minecraft/core/particles/ParticleType; register
	a (Ljava/lang/String;ZLit$a;Ljava/util/function/Function;)Lnet/minecraft/core/particles/Particle; register
net/minecraft/data/DebugReportProvider net/minecraft/data/DataProvider
	a FIXED_ORDER_FIELDS
	b KEY_COMPARATOR
	c LOGGER
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/data/CachedOutput;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; saveStable
	a (Lnet/minecraft/data/CachedOutput;Lcom/mojang/serialization/Codec;Ljava/lang/Object;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; saveStable
net/minecraft/data/structures/DebugReportNBT net/minecraft/data/structures/NbtToSnbt
	d LOGGER
	e inputFolders
	f output
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/data/CachedOutput;Ljava/nio/file/Path;Ljava/lang/String;)V writeSnbt
	a (Lnet/minecraft/data/CachedOutput;Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path; convertStructure
net/minecraft/data/worldgen/BiomeSettings net/minecraft/data/worldgen/BiomeDefaultFeatures
	A (Lcqu$a;)V addLushCavesVegetationFeatures
	B (Lcqu$a;)V addLushCavesSpecialOres
	C (Lcqu$a;)V addMountainTrees
	D (Lcqu$a;)V addMountainForestTrees
	E (Lcqu$a;)V addJungleTrees
	F (Lcqu$a;)V addSparseJungleTrees
	G (Lcqu$a;)V addBadlandsTrees
	H (Lcqu$a;)V addSnowyTrees
	I (Lcqu$a;)V addJungleGrass
	J (Lcqu$a;)V addSavannaGrass
	K (Lcqu$a;)V addShatteredSavannaGrass
	L (Lcqu$a;)V addSavannaExtraGrass
	M (Lcqu$a;)V addBadlandGrass
	N (Lcqu$a;)V addForestFlowers
	O (Lcqu$a;)V addForestGrass
	P (Lcqu$a;)V addSwampVegetation
	Q (Lcqu$a;)V addMangroveSwampVegetation
	R (Lcqu$a;)V addMushroomFieldVegetation
	S (Lcqu$a;)V addPlainVegetation
	T (Lcqu$a;)V addDesertVegetation
	U (Lcqu$a;)V addGiantTaigaVegetation
	V (Lcqu$a;)V addDefaultFlowers
	W (Lcqu$a;)V addCherryGroveVegetation
	X (Lcqu$a;)V addMeadowVegetation
	Y (Lcqu$a;)V addWarmFlowers
	Z (Lcqu$a;)V addDefaultGrass
	a (Lcqu$a;)V addDefaultCarversAndLakes
	a (Lcqu$a;Z)V addDefaultOres
	a (Lcrf$a;)V farmAnimals
	a (Lcrf$a;II)V warmOceanSpawns
	a (Lcrf$a;III)V oceanSpawns
	a (Lcrf$a;IIIZ)V monsters
	aa (Lcqu$a;)V addTaigaGrass
	ab (Lcqu$a;)V addPlainGrass
	ac (Lcqu$a;)V addDefaultMushrooms
	ad (Lcqu$a;)V addDefaultExtraVegetation
	ae (Lcqu$a;)V addBadlandExtraVegetation
	af (Lcqu$a;)V addJungleMelons
	ag (Lcqu$a;)V addSparseJungleMelons
	ah (Lcqu$a;)V addJungleVines
	ai (Lcqu$a;)V addDesertExtraVegetation
	aj (Lcqu$a;)V addSwampExtraVegetation
	ak (Lcqu$a;)V addDesertExtraDecoration
	al (Lcqu$a;)V addFossilDecoration
	am (Lcqu$a;)V addColdOceanExtraVegetation
	an (Lcqu$a;)V addDefaultSeagrass
	ao (Lcqu$a;)V addLukeWarmKelp
	ap (Lcqu$a;)V addDefaultSprings
	aq (Lcqu$a;)V addFrozenSprings
	ar (Lcqu$a;)V addIcebergs
	as (Lcqu$a;)V addBlueIce
	at (Lcqu$a;)V addSurfaceFreezing
	au (Lcqu$a;)V addNetherDefaultOres
	av (Lcqu$a;)V addAncientDebris
	aw (Lcqu$a;)V addDefaultCrystalFormations
	b (Lcqu$a;)V addDefaultMonsterRoom
	b (Lcrf$a;)V caveSpawns
	c (Lcqu$a;)V addDefaultUndergroundVariety
	c (Lcrf$a;)V commonSpawns
	d (Lcqu$a;)V addDripstone
	d (Lcrf$a;)V plainsSpawns
	e (Lcqu$a;)V addSculk
	e (Lcrf$a;)V snowySpawns
	f (Lcqu$a;)V addDefaultOres
	f (Lcrf$a;)V desertSpawns
	g (Lcqu$a;)V addExtraGold
	g (Lcrf$a;)V dripstoneCavesSpawns
	h (Lcqu$a;)V addExtraEmeralds
	h (Lcrf$a;)V mooshroomSpawns
	i (Lcqu$a;)V addInfestedStone
	i (Lcrf$a;)V baseJungleSpawns
	j (Lcqu$a;)V addDefaultSoftDisks
	j (Lcrf$a;)V endSpawns
	k (Lcqu$a;)V addSwampClayDisk
	l (Lcqu$a;)V addMangroveSwampDisks
	m (Lcqu$a;)V addMossyStoneBlock
	n (Lcqu$a;)V addFerns
	o (Lcqu$a;)V addRareBerryBushes
	p (Lcqu$a;)V addCommonBerryBushes
	q (Lcqu$a;)V addLightBambooVegetation
	r (Lcqu$a;)V addBambooVegetation
	s (Lcqu$a;)V addTaigaTrees
	t (Lcqu$a;)V addGroveTrees
	u (Lcqu$a;)V addWaterTrees
	v (Lcqu$a;)V addBirchTrees
	w (Lcqu$a;)V addOtherBirchTrees
	x (Lcqu$a;)V addTallBirchTrees
	y (Lcqu$a;)V addSavannaTrees
	z (Lcqu$a;)V addShatteredSavannaTrees
net/minecraft/data/worldgen/WorldGenCarvers net/minecraft/data/worldgen/Carvers
	a CAVE
	b CAVE_EXTRA_UNDERGROUND
	c CANYON
	d NETHER_CAVE
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureBastionBridge net/minecraft/data/worldgen/BastionBridgePools
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureBastionExtra net/minecraft/data/worldgen/BastionSharedPools
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureBastionHoglinStable net/minecraft/data/worldgen/BastionHoglinStablePools
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureBastionPieces net/minecraft/data/worldgen/BastionPieces
	a START
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureBastionTreasure net/minecraft/data/worldgen/BastionTreasureRoomPools
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureBastionUnits net/minecraft/data/worldgen/BastionHousingUnitsPools
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureDesertVillage net/minecraft/data/worldgen/DesertVillagePools
	a START
	b TERMINATORS_KEY
	c ZOMBIE_TERMINATORS_KEY
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeaturePieces net/minecraft/data/worldgen/Pools
	a EMPTY
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;Ljava/lang/String;Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate;)V register
net/minecraft/data/worldgen/WorldGenFeaturePillagerOutpostPieces net/minecraft/data/worldgen/PillagerOutpostPools
	a START
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureVillagePlain net/minecraft/data/worldgen/PlainVillagePools
	a START
	b TERMINATORS_KEY
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureVillageSavanna net/minecraft/data/worldgen/SavannaVillagePools
	a START
	b TERMINATORS_KEY
	c ZOMBIE_TERMINATORS_KEY
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureVillageSnowy net/minecraft/data/worldgen/SnowyVillagePools
	a START
	b TERMINATORS_KEY
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureVillageTaiga net/minecraft/data/worldgen/TaigaVillagePools
	a START
	b TERMINATORS_KEY
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureVillages net/minecraft/data/worldgen/VillagePools
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/gametest/framework/GameTestHarnessAssertion net/minecraft/gametest/framework/GameTestAssertException
net/minecraft/gametest/framework/GameTestHarnessAssertionPosition net/minecraft/gametest/framework/GameTestAssertPosException
	a absolutePos
	b relativePos
	c tick
	a ()Ljava/lang/String; getMessageToShowAtBlock
	b ()Lnet/minecraft/core/BlockPosition; getRelativePos
	c ()Lnet/minecraft/core/BlockPosition; getAbsolutePos
net/minecraft/gametest/framework/GameTestHarnessBatch net/minecraft/gametest/framework/GameTestBatch
	a DEFAULT_BATCH_NAME
	b name
	c testFunctions
	d beforeBatchFunction
	e afterBatchFunction
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/level/WorldServer;)V runBeforeBatchFunction
	b ()Ljava/util/Collection; getTestFunctions
	b (Lnet/minecraft/server/level/WorldServer;)V runAfterBatchFunction
net/minecraft/gametest/framework/GameTestHarnessBatchRunner net/minecraft/gametest/framework/GameTestBatchRunner
	a LOGGER
	b firstTestNorthWestCorner
	c level
	d testTicker
	e testsPerRow
	f allTestInfos
	g batches
	h count
	i rowBounds
	j nextTestNorthWestCorner
	a ()Ljava/util/List; getTestInfos
	a (I)V runBatch
	a (Ljava/util/Collection;)Ljava/util/Map; createStructuresForBatch
	b ()V start
net/minecraft/gametest/framework/GameTestHarnessCollector net/minecraft/gametest/framework/MultipleTestTracker
	a NOT_STARTED_TEST_CHAR
	b ONGOING_TEST_CHAR
	c SUCCESSFUL_TEST_CHAR
	d FAILED_OPTIONAL_TEST_CHAR
	e FAILED_REQUIRED_TEST_CHAR
	f tests
	g listeners
	a ()I getFailedRequiredCount
	a (Ljava/util/function/Consumer;)V addFailureListener
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V addTestToTrack
	a (Lnet/minecraft/gametest/framework/GameTestHarnessListener;)V addListener
	b ()I getFailedOptionalCount
	c ()I getDoneCount
	d ()Z hasFailedRequired
	e ()Z hasFailedOptional
	f ()Ljava/util/Collection; getFailedRequired
	g ()Ljava/util/Collection; getFailedOptional
	h ()I getTotalCount
	i ()Z isDone
	j ()Ljava/lang/String; getProgressBar
net/minecraft/gametest/framework/GameTestHarnessEvent net/minecraft/gametest/framework/GameTestEvent
	a expectedDelay
	b assertion
	a (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestHarnessEvent; create
	a (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestHarnessEvent; create
net/minecraft/gametest/framework/GameTestHarnessHelper net/minecraft/gametest/framework/GameTestHelper
	a testInfo
	b finalCheckAdded
	a ()Lnet/minecraft/server/level/WorldServer; getLevel
	a (I)V setDayTime
	a (III)V pressButton
	a (IIILnet/minecraft/world/level/block/Block;)V setBlock
	a (IIILnet/minecraft/world/level/block/state/IBlockData;)V setBlock
	a (ILjava/lang/Runnable;)V succeedOnTickWhen
	a (JLjava/lang/Runnable;)V runAtTickTime
	a (JLnet/minecraft/core/BlockPosition;)V assertAtTickTimeContainerEmpty
	a (JLnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/Item;)V assertAtTickTimeContainerContains
	a (Ljava/lang/Class;)V killAllEntitiesOfClass
	a (Ljava/lang/Runnable;)V succeedIf
	a (Ljava/lang/String;)V fail
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;)V fail
	a (Ljava/lang/String;Lnet/minecraft/world/entity/Entity;)V fail
	a (Ljava/util/function/Consumer;)V forEveryBlockInStructure
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	a (Lnet/minecraft/core/BlockPosition;J)V pulseRedstone
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;Ljava/lang/String;)V assertBlock
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V assertBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)V assertSameBlockState
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)V assertRedstoneSignal
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;Ljava/util/function/Function;Ljava/lang/Object;)V assertEntityData
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/item/Item;)V assertEntityIsHolding
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V useBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V useBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/Item;)V assertContainerContains
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V setBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)V assertBlockProperty
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/util/function/Predicate;Ljava/lang/String;)V assertBlockProperty
	a (Lnet/minecraft/world/entity/Entity;III)V assertEntityInstancePresent
	a (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/Object;)V assertEntityProperty
	a (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;Ljava/lang/String;)V assertEntityProperty
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)V assertEntityInstancePresent
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/core/BlockPosition;F)Lnet/minecraft/gametest/framework/GameTestHarnessSequence; walkTo
	a (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/EntityLiving; makeAboutToDrown
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/effect/MobEffectList;I)V assertLivingEntityHasMobEffect
	a (Lnet/minecraft/world/entity/EntityTypes;)V assertEntityPresent
	a (Lnet/minecraft/world/entity/EntityTypes;DDD)V assertEntityTouching
	a (Lnet/minecraft/world/entity/EntityTypes;FFF)Lnet/minecraft/world/entity/Entity; spawn
	a (Lnet/minecraft/world/entity/EntityTypes;III)Lnet/minecraft/world/entity/Entity; spawn
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/Entity; spawn
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;D)V assertEntityPresent
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;ID)V assertEntitiesPresent
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/entity/Entity; spawn
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)V assertEntityPresent
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)V placeAt
	a (Lnet/minecraft/world/item/Item;FFF)Lnet/minecraft/world/entity/item/EntityItem; spawnItem
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/item/EntityItem; spawnItem
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPosition;D)V assertItemEntityPresent
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPosition;DI)V assertItemEntityCountIs
	a (Lnet/minecraft/world/level/block/Block;III)V assertBlockPresent
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V assertBlockPresent
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/core/BlockPosition;)V assertSameBlockStates
	a (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; absoluteVec
	a (ZLjava/lang/String;)V assertTrue
	b ()V killAllEntities
	b (III)V pullLever
	b (JLjava/lang/Runnable;)V runAfterDelay
	b (Ljava/lang/Runnable;)V succeedWhen
	b (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	b (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V assertBlockState
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;Ljava/util/function/Function;Ljava/lang/Object;)V succeedWhenEntityData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/item/Item;)V assertEntityInventoryContains
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/EntityLiving; withLowHealth
	b (Lnet/minecraft/world/entity/EntityTypes;)V assertEntityNotPresent
	b (Lnet/minecraft/world/entity/EntityTypes;DDD)V assertEntityNotTouching
	b (Lnet/minecraft/world/entity/EntityTypes;FFF)Lnet/minecraft/world/entity/EntityInsentient; spawnWithNoFreeWill
	b (Lnet/minecraft/world/entity/EntityTypes;III)Lnet/minecraft/world/entity/EntityInsentient; spawnWithNoFreeWill
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/EntityInsentient; spawnWithNoFreeWill
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;D)Ljava/util/List; getEntities
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/entity/EntityInsentient; spawnWithNoFreeWill
	b (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPosition;D)V assertItemEntityNotPresent
	b (Lnet/minecraft/world/level/block/Block;III)V assertBlockNotPresent
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V assertBlockNotPresent
	b (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; relativeVec
	b (ZLjava/lang/String;)V assertFalse
	c ()Lnet/minecraft/world/entity/player/EntityHuman; makeMockSurvivalPlayer
	c (Ljava/lang/Runnable;)V failIf
	c (Lnet/minecraft/core/BlockPosition;)V pressButton
	c (Lnet/minecraft/world/entity/EntityTypes;III)V assertEntityPresent
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;)V assertEntityPresent
	c (Lnet/minecraft/world/level/block/Block;III)V succeedWhenBlockPresent
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V succeedWhenBlockPresent
	d ()Lnet/minecraft/world/entity/player/EntityHuman; makeMockPlayer
	d (Ljava/lang/Runnable;)V failIfEver
	d (Lnet/minecraft/core/BlockPosition;)V useBlock
	d (Lnet/minecraft/world/entity/EntityTypes;III)V assertEntityNotPresent
	d (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;)V assertEntityNotPresent
	e ()Lnet/minecraft/server/level/EntityPlayer; makeMockServerPlayerInLevel
	e (Ljava/lang/Runnable;)V onEachTick
	e (Lnet/minecraft/core/BlockPosition;)V pullLever
	e (Lnet/minecraft/world/entity/EntityTypes;III)V succeedWhenEntityPresent
	e (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;)V succeedWhenEntityPresent
	f ()V setNight
	f (Lnet/minecraft/core/BlockPosition;)V destroyBlock
	f (Lnet/minecraft/world/entity/EntityTypes;III)V succeedWhenEntityNotPresent
	f (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;)V succeedWhenEntityNotPresent
	g ()V succeed
	g (Lnet/minecraft/core/BlockPosition;)V assertContainerEmpty
	h ()Lnet/minecraft/gametest/framework/GameTestHarnessSequence; startSequence
	h (Lnet/minecraft/core/BlockPosition;)V randomTick
	i ()J getTick
	i (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; absolutePos
	j ()V ensureSingleFinalCheck
	j (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; relativePos
	k ()Lnet/minecraft/world/phys/AxisAlignedBB; getBounds
	l ()Lnet/minecraft/world/phys/AxisAlignedBB; getRelativeBounds
net/minecraft/gametest/framework/GameTestHarnessITestReporter net/minecraft/gametest/framework/TestReporter
	a ()V finish
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestFailed
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestSuccess
net/minecraft/gametest/framework/GameTestHarnessInfo net/minecraft/gametest/framework/GameTestInfo
	a testFunction
	b structureBlockPos
	c level
	d listeners
	e timeoutTicks
	f sequences
	g runAtTickTimeMap
	h startTick
	i tickCount
	j started
	k timer
	l done
	m rotation
	n error
	o structureBlockEntity
	A ()V tickInternal
	B ()V startTest
	C ()Lnet/minecraft/world/level/block/entity/TileEntityStructure; getStructureBlockEntity
	D ()V finish
	a ()V startExecution
	a (JLjava/lang/Runnable;)V setRunAtTickTime
	a (Ljava/lang/Throwable;)V fail
	a (Lnet/minecraft/core/BlockPosition;)V setStructureBlockPos
	a (Lnet/minecraft/core/BlockPosition;I)V spawnStructure
	a (Lnet/minecraft/gametest/framework/GameTestHarnessListener;)V addListener
	b ()V tick
	c ()Ljava/lang/String; getTestName
	d ()Lnet/minecraft/core/BlockPosition; getStructureBlockPos
	e ()Lnet/minecraft/core/BaseBlockPosition; getStructureSize
	f ()Lnet/minecraft/world/phys/AxisAlignedBB; getStructureBounds
	g ()Lnet/minecraft/server/level/WorldServer; getLevel
	h ()Z hasSucceeded
	i ()Z hasFailed
	j ()Z hasStarted
	k ()Z isDone
	l ()J getRunTime
	m ()V succeed
	n ()Ljava/lang/Throwable; getError
	o ()V clearStructure
	p ()J getTick
	q ()Lnet/minecraft/gametest/framework/GameTestHarnessSequence; createSequence
	r ()Z isRequired
	s ()Z isOptional
	t ()Ljava/lang/String; getStructureName
	u ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	v ()Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction; getTestFunction
	w ()I getTimeoutTicks
	x ()Z isFlaky
	y ()I maxAttempts
	z ()I requiredSuccesses
net/minecraft/gametest/framework/GameTestHarnessListener net/minecraft/gametest/framework/GameTestListener
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testStructureLoaded
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testPassed
	c (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testFailed
net/minecraft/gametest/framework/GameTestHarnessLogger net/minecraft/gametest/framework/LogTestReporter
	a LOGGER
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestFailed
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestSuccess
net/minecraft/gametest/framework/GameTestHarnessRegistry net/minecraft/gametest/framework/GameTestRegistry
	a TEST_FUNCTIONS
	b TEST_CLASS_NAMES
	c BEFORE_BATCH_FUNCTIONS
	d AFTER_BATCH_FUNCTIONS
	e LAST_FAILED_TESTS
	a ()Ljava/util/Collection; getAllTestFunctions
	a (Ljava/lang/Class;)V register
	a (Ljava/lang/String;)Ljava/util/Collection; getTestFunctionsForClassName
	a (Ljava/lang/reflect/Method;)V register
	a (Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map;)V registerBatchFunction
	a (Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction;)V rememberFailedTest
	a (Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction;Ljava/lang/String;)Z isTestFunctionPartOfClass
	b ()Ljava/util/Collection; getAllTestClassNames
	b (Ljava/lang/String;)Z isTestClass
	b (Ljava/lang/reflect/Method;)Ljava/util/Collection; useTestGeneratorMethod
	c ()Ljava/util/Collection; getLastFailedTests
	c (Ljava/lang/String;)Ljava/util/function/Consumer; getBeforeBatchFunction
	c (Ljava/lang/reflect/Method;)Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction; turnMethodIntoTestFunction
	d ()V forgetFailedTests
	d (Ljava/lang/String;)Ljava/util/function/Consumer; getAfterBatchFunction
	d (Ljava/lang/reflect/Method;)Ljava/util/function/Consumer; turnMethodIntoConsumer
	e (Ljava/lang/String;)Ljava/util/Optional; findTestFunction
	f (Ljava/lang/String;)Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction; getTestFunction
net/minecraft/gametest/framework/GameTestHarnessRunner net/minecraft/gametest/framework/GameTestRunner
	a PADDING_AROUND_EACH_STRUCTURE
	b SPACE_BETWEEN_COLUMNS
	c SPACE_BETWEEN_ROWS
	d DEFAULT_TESTS_PER_ROW
	e MAX_TESTS_PER_BATCH
	a (Ljava/util/Collection;)Ljava/util/Collection; groupTestsIntoBatches
	a (Ljava/util/Collection;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/gametest/framework/GameTestHarnessTicker;I)Ljava/util/Collection; runTestBatches
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/gametest/framework/GameTestHarnessTicker;)V runTest
	a (Lnet/minecraft/server/level/WorldServer;)V clearMarkers
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/gametest/framework/GameTestHarnessTicker;I)V clearAllTests
	b (Ljava/util/Collection;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/gametest/framework/GameTestHarnessTicker;I)Ljava/util/Collection; runTests
net/minecraft/gametest/framework/GameTestHarnessSequence net/minecraft/gametest/framework/GameTestSequence
	a parent
	b events
	c lastTick
	a ()V thenSucceed
	a (I)Lnet/minecraft/gametest/framework/GameTestHarnessSequence; thenIdle
	a (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestHarnessSequence; thenExecuteAfter
	a (J)V tickAndContinue
	a (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestHarnessSequence; thenWaitUntil
	a (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestHarnessSequence; thenWaitUntil
	a (Ljava/util/function/Supplier;)V thenFail
	b ()Lqa$a; thenTrigger
	b (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestHarnessSequence; thenExecuteFor
	b (J)V tickAndFailIfNotComplete
	b (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestHarnessSequence; thenExecute
	c (J)V tick
	c (Ljava/lang/Runnable;)V executeWithoutFail
net/minecraft/gametest/framework/GameTestHarnessStructures net/minecraft/gametest/framework/StructureUtils
	a DEFAULT_TEST_STRUCTURES_DIR
	b testStructuresDir
	c LOGGER
	d HOW_MANY_CHUNKS_TO_LOAD_IN_EACH_DIRECTION_OF_STRUCTURE
	a (I)Lnet/minecraft/world/level/block/EnumBlockRotation; getRotationForRotationSteps
	a (ILnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;)V clearBlock
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BaseBlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/server/level/WorldServer;)V createNewEmptyStructureBlock
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;ILnet/minecraft/server/level/WorldServer;Z)Lnet/minecraft/world/level/block/entity/TileEntityStructure; spawnStructure
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/server/level/WorldServer;Z)Lnet/minecraft/world/level/block/entity/TileEntityStructure; createStructureBlock
	a (Ljava/lang/String;Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure; getStructureTemplate
	a (Ljava/nio/file/Path;)Lnet/minecraft/nbt/NBTTagCompound; tryLoadStructure
	a (Lnet/minecraft/core/BlockPosition;ILnet/minecraft/server/level/WorldServer;)Ljava/util/Optional; findStructureBlockContainingPos
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BaseBlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getStructureBoundingBox
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;)Z doesStructureContain
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/server/level/WorldServer;)V addCommandBlockAndButtonToStartTest
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;)V forceLoadChunks
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)I getRotationStepsForRotation
	a (Lnet/minecraft/world/level/block/entity/TileEntityStructure;)Lnet/minecraft/world/phys/AxisAlignedBB; getStructureBounds
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;ILnet/minecraft/server/level/WorldServer;)V clearSpaceForStructure
	b (Lnet/minecraft/core/BlockPosition;ILnet/minecraft/server/level/WorldServer;)Lnet/minecraft/core/BlockPosition; findNearestStructureBlock
	b (Lnet/minecraft/world/level/block/entity/TileEntityStructure;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getStructureBoundingBox
	c (Lnet/minecraft/core/BlockPosition;ILnet/minecraft/server/level/WorldServer;)Ljava/util/Collection; findStructureBlocks
net/minecraft/gametest/framework/GameTestHarnessTestClassArgument net/minecraft/gametest/framework/TestClassNameArgument
	a EXAMPLES
	a ()Lnet/minecraft/gametest/framework/GameTestHarnessTestClassArgument; testClassName
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; getTestClassName
net/minecraft/gametest/framework/GameTestHarnessTestCommand net/minecraft/gametest/framework/TestCommand
	a LOGGER
	b DEFAULT_CLEAR_RADIUS
	c MAX_CLEAR_RADIUS
	d STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS
	e STRUCTURE_BLOCK_FULL_SEARCH_RADIUS
	f TEST_POS_Z_OFFSET_FROM_PLAYER
	g SHOW_POS_DURATION_MS
	h DEFAULT_X_SIZE
	i DEFAULT_Y_SIZE
	j DEFAULT_Z_SIZE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I runNearbyTest
	a (Lnet/minecraft/commands/CommandListenerWrapper;I)I clearAllTests
	a (Lnet/minecraft/commands/CommandListenerWrapper;II)I runAllTests
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I showPos
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;II)I runAllTestsInClass
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;III)I createNewStructure
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;II)V runTests
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction;I)I runTest
	a (Lnet/minecraft/commands/CommandListenerWrapper;ZII)I runLastFailedTests
	a (Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction;Lnet/minecraft/server/level/WorldServer;)V runTestPreparation
	a (Lnet/minecraft/server/level/WorldServer;Ljava/lang/String;Lnet/minecraft/EnumChatFormat;)V say
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/gametest/framework/GameTestHarnessCollector;)V runTest
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/gametest/framework/GameTestHarnessCollector;)V showTestSummaryIfAllDone
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I runAllNearbyTests
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)V say
	c (Lnet/minecraft/commands/CommandListenerWrapper;)I exportNearestTestStructure
	c (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I exportTestStructure
	d (Lnet/minecraft/commands/CommandListenerWrapper;)I exportAllNearbyTests
	d (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I importTestStructure
net/minecraft/gametest/framework/GameTestHarnessTestFunction net/minecraft/gametest/framework/TestFunction
	a batchName
	b testName
	c structureName
	d required
	e maxAttempts
	f requiredSuccesses
	g function
	h maxTicks
	i setupTicks
	j rotation
	a ()Ljava/lang/String; getTestName
	a (Lnet/minecraft/gametest/framework/GameTestHarnessHelper;)V run
	b ()Ljava/lang/String; getStructureName
	c ()I getMaxTicks
	d ()Z isRequired
	e ()Ljava/lang/String; getBatchName
	f ()J getSetupTicks
	g ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	h ()Z isFlaky
	i ()I getMaxAttempts
	j ()I getRequiredSuccesses
net/minecraft/gametest/framework/GameTestHarnessTestFunctionArgument net/minecraft/gametest/framework/TestFunctionArgument
	a EXAMPLES
	a ()Lnet/minecraft/gametest/framework/GameTestHarnessTestFunctionArgument; testFunctionArgument
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction; getTestFunction
net/minecraft/gametest/framework/GameTestHarnessTicker net/minecraft/gametest/framework/GameTestTicker
	a SINGLETON
	b testInfos
	a ()V clear
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V add
	b ()V tick
net/minecraft/gametest/framework/GameTestHarnessTimeout net/minecraft/gametest/framework/GameTestTimeoutException
net/minecraft/locale/LocaleLanguage net/minecraft/locale/Language
	a DEFAULT
	b LOGGER
	c GSON
	d UNSUPPORTED_FORMAT_PATTERN
	e instance
	a ()Lnet/minecraft/locale/LocaleLanguage; getInstance
	a (Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V loadFromJson
	a (Ljava/lang/String;)Ljava/lang/String; getOrDefault
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getOrDefault
	a (Ljava/util/List;)Ljava/util/List; getVisualOrder
	a (Ljava/util/function/BiConsumer;Ljava/lang/String;)V parseTranslations
	a (Lnet/minecraft/locale/LocaleLanguage;)V inject
	a (Lnet/minecraft/network/chat/IChatFormatted;)Lnet/minecraft/util/FormattedString; getVisualOrder
	b ()Z isDefaultRightToLeft
	b (Ljava/lang/String;)Z has
	c ()Lnet/minecraft/locale/LocaleLanguage; loadDefault
net/minecraft/nbt/DynamicOpsNBT net/minecraft/nbt/NbtOps
	a INSTANCE
	b WRAPPER_MARKER
	a ()Lnet/minecraft/nbt/NBTBase; empty
	a (B)Lnet/minecraft/nbt/NBTBase; createByte
	a (D)Lnet/minecraft/nbt/NBTBase; createDouble
	a (F)Lnet/minecraft/nbt/NBTBase; createFloat
	a (I)Lnet/minecraft/nbt/NBTBase; createInt
	a (J)Lnet/minecraft/nbt/NBTBase; createLong
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/nbt/NBTBase;)Ljava/lang/Object; convertTo
	a (Ljava/lang/Number;)Lnet/minecraft/nbt/NBTBase; createNumeric
	a (Ljava/lang/String;)Lnet/minecraft/nbt/NBTBase; createString
	a (Ljava/nio/ByteBuffer;)Lnet/minecraft/nbt/NBTBase; createByteList
	a (Ljava/util/stream/IntStream;)Lnet/minecraft/nbt/NBTBase; createIntList
	a (Ljava/util/stream/LongStream;)Lnet/minecraft/nbt/NBTBase; createLongList
	a (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/NBTBase; createMap
	a (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getNumberValue
	a (Lnet/minecraft/nbt/NBTBase;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; mergeToMap
	a (Lnet/minecraft/nbt/NBTBase;Ljava/lang/String;)Lnet/minecraft/nbt/NBTBase; remove
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)Lcom/mojang/serialization/DataResult; mergeToList
	a (Lnet/minecraft/nbt/NBTBase;Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; mergeToList
	a (Lnet/minecraft/nbt/NBTBase;Lnet/minecraft/nbt/NBTBase;Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; mergeToMap
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTBase; tryUnwrap
	a (S)Lnet/minecraft/nbt/NBTBase; createShort
	a (Z)Lnet/minecraft/nbt/NBTBase; createBoolean
	b (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/NBTBase; createList
	b (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getStringValue
	c (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getMapValues
	d (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getMapEntries
	e (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getMap
	f (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getStream
	g (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getList
	h (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getByteBuffer
	i (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getIntStream
	j (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getLongStream
	k (Lnet/minecraft/nbt/NBTBase;)Ljava/util/Optional; createCollector
net/minecraft/nbt/GameProfileSerializer net/minecraft/nbt/NbtUtils
	a SNBT_DATA_TAG
	b YXZ_LISTTAG_INT_COMPARATOR
	c YXZ_LISTTAG_DOUBLE_COMPARATOR
	d PROPERTIES_START
	e PROPERTIES_END
	f ELEMENT_SEPARATOR
	g KEY_VALUE_SEPARATOR
	h COMMA_SPLITTER
	i COLON_SPLITTER
	j LOGGER
	k INDENT
	l NOT_FOUND
	a (ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder; indent
	a (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; snbtToStructure
	a (Ljava/lang/StringBuilder;Lnet/minecraft/nbt/NBTBase;IZ)Ljava/lang/StringBuilder; prettyPrint
	a (Ljava/util/UUID;)Lnet/minecraft/nbt/NBTTagIntArray; createUUID
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/nbt/NBTTagCompound; writeBlockPos
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/block/state/IBlockData; readBlockState
	a (Lnet/minecraft/nbt/NBTBase;)Ljava/util/UUID; loadUUID
	a (Lnet/minecraft/nbt/NBTBase;Lnet/minecraft/nbt/NBTBase;Z)Z compareNbt
	a (Lnet/minecraft/nbt/NBTBase;Z)Ljava/lang/String; prettyPrint
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lcom/mojang/authlib/GameProfile; readGameProfile
	a (Lnet/minecraft/nbt/NBTTagCompound;I)Lnet/minecraft/nbt/NBTTagCompound; addDataVersion
	a (Lnet/minecraft/nbt/NBTTagCompound;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/nbt/NBTTagCompound; writeGameProfile
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/nbt/NBTTagCompound; writeBlockState
	a (Lnet/minecraft/world/level/block/state/IBlockDataHolder;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/String;Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/block/state/IBlockDataHolder; setValueHelper
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/nbt/NBTTagCompound; writeFluidState
	b (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; unpackBlockState
	b (Lnet/minecraft/nbt/NBTBase;)Ljava/lang/String; prettyPrint
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/core/BlockPosition; readBlockPos
	b (Lnet/minecraft/nbt/NBTTagCompound;I)I getDataVersion
	c (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/network/chat/IChatBaseComponent; toPrettyComponent
	c (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/lang/String; structureToSnbt
	d (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; packStructureTemplate
	e (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; unpackStructureTemplate
	f (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/lang/String; packBlockState
	g (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; addCurrentDataVersion
net/minecraft/nbt/MojangsonParser net/minecraft/nbt/TagParser
	a ERROR_TRAILING_DATA
	b ERROR_EXPECTED_KEY
	c ERROR_EXPECTED_VALUE
	d ERROR_INSERT_MIXED_LIST
	e ERROR_INSERT_MIXED_ARRAY
	f ERROR_INVALID_ARRAY
	g ELEMENT_SEPARATOR
	h NAME_VALUE_SEPARATOR
	i AS_CODEC
	j LIST_OPEN
	k LIST_CLOSE
	l STRUCT_CLOSE
	m STRUCT_OPEN
	n DOUBLE_PATTERN_NOSUFFIX
	o DOUBLE_PATTERN
	p FLOAT_PATTERN
	q BYTE_PATTERN
	r LONG_PATTERN
	s SHORT_PATTERN
	t INT_PATTERN
	u reader
	a ()Lnet/minecraft/nbt/NBTTagCompound; readSingleStruct
	a (C)V expect
	a (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; parseTag
	a (Lnet/minecraft/nbt/NBTTagType;Lnet/minecraft/nbt/NBTTagType;)Ljava/util/List; readArray
	b ()Ljava/lang/String; readKey
	b (Ljava/lang/String;)Lnet/minecraft/nbt/NBTBase; type
	c ()Lnet/minecraft/nbt/NBTBase; readTypedValue
	d ()Lnet/minecraft/nbt/NBTBase; readValue
	e ()Lnet/minecraft/nbt/NBTBase; readList
	f ()Lnet/minecraft/nbt/NBTTagCompound; readStruct
	g ()Lnet/minecraft/nbt/NBTBase; readListTag
	h ()Lnet/minecraft/nbt/NBTBase; readArrayTag
	i ()Z hasElementSeparator
net/minecraft/nbt/NBTBase net/minecraft/nbt/Tag
	d OBJECT_HEADER
	e ARRAY_HEADER
	f OBJECT_REFERENCE
	g STRING_SIZE
	h TAG_END
	i TAG_BYTE
	j TAG_SHORT
	k TAG_INT
	l TAG_LONG
	m TAG_FLOAT
	n TAG_DOUBLE
	o TAG_BYTE_ARRAY
	p TAG_STRING
	q TAG_LIST
	r TAG_COMPOUND
	s TAG_INT_ARRAY
	t TAG_LONG_ARRAY
	u TAG_ANY_NUMERIC
	v MAX_DEPTH
	a ()I sizeInBytes
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lrn$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	b (Lnet/minecraft/nbt/StreamTagVisitor;)V acceptAsRoot
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	r_ ()Ljava/lang/String; getAsString
net/minecraft/nbt/NBTCompressedStreamTools net/minecraft/nbt/NbtIo
	a (Ljava/io/DataInput;)Lnet/minecraft/nbt/NBTTagCompound; read
	a (Ljava/io/DataInput;Lnet/minecraft/nbt/NBTReadLimiter;)Lnet/minecraft/nbt/NBTTagCompound; read
	a (Ljava/io/DataInput;Lnet/minecraft/nbt/NBTReadLimiter;B)Lnet/minecraft/nbt/NBTBase; readTagSafe
	a (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;Lnet/minecraft/nbt/NBTReadLimiter;)V parse
	a (Ljava/io/File;)Lnet/minecraft/nbt/NBTTagCompound; readCompressed
	a (Ljava/io/File;Lnet/minecraft/nbt/StreamTagVisitor;Lnet/minecraft/nbt/NBTReadLimiter;)V parseCompressed
	a (Ljava/io/InputStream;)Lnet/minecraft/nbt/NBTTagCompound; readCompressed
	a (Ljava/io/InputStream;Lnet/minecraft/nbt/StreamTagVisitor;Lnet/minecraft/nbt/NBTReadLimiter;)V parseCompressed
	a (Lnet/minecraft/nbt/NBTBase;Ljava/io/DataOutput;)V writeAnyTag
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/io/File;)V writeCompressed
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/io/OutputStream;)V writeCompressed
	b (Ljava/io/DataInput;Lnet/minecraft/nbt/NBTReadLimiter;)Lnet/minecraft/nbt/NBTBase; readAnyTag
	b (Ljava/io/File;)Lnet/minecraft/nbt/NBTTagCompound; read
	b (Ljava/io/InputStream;)Ljava/io/DataInputStream; createDecompressorStream
	b (Lnet/minecraft/nbt/NBTBase;Ljava/io/DataOutput;)V writeUnnamedTag
	b (Lnet/minecraft/nbt/NBTTagCompound;Ljava/io/File;)V write
	c (Ljava/io/DataInput;Lnet/minecraft/nbt/NBTReadLimiter;)Lnet/minecraft/nbt/NBTBase; readUnnamedTag
net/minecraft/nbt/NBTList net/minecraft/nbt/CollectionTag
	a (ILnet/minecraft/nbt/NBTBase;)Z setTag
	b (ILnet/minecraft/nbt/NBTBase;)Z addTag
	c (I)Lnet/minecraft/nbt/NBTBase; remove
	c (ILnet/minecraft/nbt/NBTBase;)V add
	d (ILnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTBase; set
	f ()B getElementType
net/minecraft/nbt/NBTNumber net/minecraft/nbt/NumericTag
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
net/minecraft/nbt/NBTReadLimiter net/minecraft/nbt/NbtAccounter
	a MAX_STACK_DEPTH
	b quota
	c usage
	d maxDepth
	e depth
	a ()Lnet/minecraft/nbt/NBTReadLimiter; unlimitedHeap
	a (J)Lnet/minecraft/nbt/NBTReadLimiter; create
	a (JJ)V accountBytes
	b ()V pushDepth
	b (J)V accountBytes
	c ()V popDepth
	d ()J getUsage
	e ()I getDepth
net/minecraft/nbt/NBTTagByte net/minecraft/nbt/ByteTag
	a TYPE
	b ZERO
	c ONE
	w SELF_SIZE_IN_BYTES
	x data
	a ()I sizeInBytes
	a (B)Lnet/minecraft/nbt/NBTTagByte; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lrn$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	a (Z)Lnet/minecraft/nbt/NBTTagByte; valueOf
	b ()B getId
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagByte; copy
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
net/minecraft/nbt/NBTTagByteArray net/minecraft/nbt/ByteArrayTag
	a TYPE
	b SELF_SIZE_IN_BYTES
	c data
	a ()I sizeInBytes
	a (I)Lnet/minecraft/nbt/NBTTagByte; get
	a (ILnet/minecraft/nbt/NBTBase;)Z setTag
	a (ILnet/minecraft/nbt/NBTTagByte;)Lnet/minecraft/nbt/NBTTagByte; set
	a (Ljava/io/DataOutput;)V write
	a (Ljava/util/List;)[B toArray
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lrn$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	b (I)Lnet/minecraft/nbt/NBTTagByte; remove
	b (ILnet/minecraft/nbt/NBTBase;)Z addTag
	b (ILnet/minecraft/nbt/NBTTagByte;)V add
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	c (I)Lnet/minecraft/nbt/NBTBase; remove
	c (ILnet/minecraft/nbt/NBTBase;)V add
	d ()Lnet/minecraft/nbt/NBTBase; copy
	d (ILnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTBase; set
	e ()[B getAsByteArray
	f ()B getElementType
net/minecraft/nbt/NBTTagCompound net/minecraft/nbt/CompoundTag
	a CODEC
	b TYPE
	c SELF_SIZE_IN_BYTES
	w MAP_ENTRY_SIZE_IN_BYTES
	x tags
	a ()I sizeInBytes
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;)Ljava/util/UUID; getUUID
	a (Ljava/lang/String;B)V putByte
	a (Ljava/lang/String;D)V putDouble
	a (Ljava/lang/String;F)V putFloat
	a (Ljava/lang/String;I)V putInt
	a (Ljava/lang/String;J)V putLong
	a (Ljava/lang/String;Ljava/lang/String;)V putString
	a (Ljava/lang/String;Ljava/util/List;)V putByteArray
	a (Ljava/lang/String;Ljava/util/UUID;)V putUUID
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTBase; put
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTBase;Ljava/io/DataOutput;)V writeNamedTag
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTTagType;Ljava/lang/ClassCastException;)Lnet/minecraft/CrashReport; createReport
	a (Ljava/lang/String;S)V putShort
	a (Ljava/lang/String;Z)V putBoolean
	a (Ljava/lang/String;[B)V putByteArray
	a (Ljava/lang/String;[I)V putIntArray
	a (Ljava/lang/String;[J)V putLongArray
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; merge
	a (Lnet/minecraft/nbt/NBTTagType;Ljava/lang/String;Ljava/io/DataInput;Lnet/minecraft/nbt/NBTReadLimiter;)Lnet/minecraft/nbt/NBTBase; readNamedTagData
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lrn$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	b (Ljava/lang/String;)Z hasUUID
	b (Ljava/lang/String;I)Z contains
	b (Ljava/lang/String;Ljava/util/List;)V putIntArray
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	c (Ljava/lang/String;)Lnet/minecraft/nbt/NBTBase; get
	c (Ljava/lang/String;I)Lnet/minecraft/nbt/NBTTagList; getList
	c (Ljava/lang/String;Ljava/util/List;)V putLongArray
	d ()Lnet/minecraft/nbt/NBTBase; copy
	d (Ljava/lang/String;)B getTagType
	e ()Ljava/util/Set; getAllKeys
	e (Ljava/lang/String;)Z contains
	f ()I size
	f (Ljava/lang/String;)B getByte
	g ()Z isEmpty
	g (Ljava/lang/String;)S getShort
	h ()Lnet/minecraft/nbt/NBTTagCompound; copy
	h (Ljava/lang/String;)I getInt
	i ()Ljava/util/Map; entries
	i (Ljava/lang/String;)J getLong
	j (Ljava/lang/String;)F getFloat
	k (Ljava/lang/String;)D getDouble
	l (Ljava/lang/String;)Ljava/lang/String; getString
	m (Ljava/lang/String;)[B getByteArray
	n (Ljava/lang/String;)[I getIntArray
	o (Ljava/lang/String;)[J getLongArray
	p (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; getCompound
	q (Ljava/lang/String;)Z getBoolean
	r (Ljava/lang/String;)V remove
net/minecraft/nbt/NBTTagDouble net/minecraft/nbt/DoubleTag
	a ZERO
	b TYPE
	c SELF_SIZE_IN_BYTES
	w data
	a ()I sizeInBytes
	a (D)Lnet/minecraft/nbt/NBTTagDouble; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lrn$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagDouble; copy
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
net/minecraft/nbt/NBTTagEnd net/minecraft/nbt/EndTag
	a TYPE
	b INSTANCE
	c SELF_SIZE_IN_BYTES
	a ()I sizeInBytes
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lrn$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagEnd; copy
net/minecraft/nbt/NBTTagFloat net/minecraft/nbt/FloatTag
	a ZERO
	b TYPE
	c SELF_SIZE_IN_BYTES
	w data
	a ()I sizeInBytes
	a (F)Lnet/minecraft/nbt/NBTTagFloat; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lrn$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagFloat; copy
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
net/minecraft/nbt/NBTTagInt net/minecraft/nbt/IntTag
	a TYPE
	b SELF_SIZE_IN_BYTES
	c data
	a ()I sizeInBytes
	a (I)Lnet/minecraft/nbt/NBTTagInt; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lrn$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagInt; copy
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
net/minecraft/nbt/NBTTagIntArray net/minecraft/nbt/IntArrayTag
	a TYPE
	b SELF_SIZE_IN_BYTES
	c data
	a ()I sizeInBytes
	a (I)Lnet/minecraft/nbt/NBTTagInt; get
	a (ILnet/minecraft/nbt/NBTBase;)Z setTag
	a (ILnet/minecraft/nbt/NBTTagInt;)Lnet/minecraft/nbt/NBTTagInt; set
	a (Ljava/io/DataOutput;)V write
	a (Ljava/util/List;)[I toArray
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lrn$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	b (I)Lnet/minecraft/nbt/NBTTagInt; remove
	b (ILnet/minecraft/nbt/NBTBase;)Z addTag
	b (ILnet/minecraft/nbt/NBTTagInt;)V add
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	c (I)Lnet/minecraft/nbt/NBTBase; remove
	c (ILnet/minecraft/nbt/NBTBase;)V add
	d ()Lnet/minecraft/nbt/NBTBase; copy
	d (ILnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTBase; set
	e ()Lnet/minecraft/nbt/NBTTagIntArray; copy
	f ()B getElementType
	g ()[I getAsIntArray
net/minecraft/nbt/NBTTagList net/minecraft/nbt/ListTag
	a TYPE
	b SELF_SIZE_IN_BYTES
	c list
	w type
	a ()I sizeInBytes
	a (I)Lnet/minecraft/nbt/NBTTagCompound; getCompound
	a (ILnet/minecraft/nbt/NBTBase;)Z setTag
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/NBTBase;)Z updateType
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lrn$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	b (I)Lnet/minecraft/nbt/NBTTagList; getList
	b (ILnet/minecraft/nbt/NBTBase;)Z addTag
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	c (I)Lnet/minecraft/nbt/NBTBase; remove
	c (ILnet/minecraft/nbt/NBTBase;)V add
	d ()Lnet/minecraft/nbt/NBTBase; copy
	d (I)S getShort
	d (ILnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTBase; set
	e ()Lnet/minecraft/nbt/NBTTagList; copy
	e (I)I getInt
	f ()B getElementType
	f (I)[I getIntArray
	g ()V updateTypeAfterRemove
	g (I)[J getLongArray
	h (I)D getDouble
	i (I)F getFloat
	j (I)Ljava/lang/String; getString
	k (I)Lnet/minecraft/nbt/NBTBase; get
net/minecraft/nbt/NBTTagLong net/minecraft/nbt/LongTag
	a TYPE
	b SELF_SIZE_IN_BYTES
	c data
	a ()I sizeInBytes
	a (J)Lnet/minecraft/nbt/NBTTagLong; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lrn$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagLong; copy
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
net/minecraft/nbt/NBTTagLongArray net/minecraft/nbt/LongArrayTag
	a TYPE
	b SELF_SIZE_IN_BYTES
	c data
	a ()I sizeInBytes
	a (I)Lnet/minecraft/nbt/NBTTagLong; get
	a (ILnet/minecraft/nbt/NBTBase;)Z setTag
	a (ILnet/minecraft/nbt/NBTTagLong;)Lnet/minecraft/nbt/NBTTagLong; set
	a (Ljava/io/DataOutput;)V write
	a (Ljava/util/List;)[J toArray
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lrn$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	b (I)Lnet/minecraft/nbt/NBTTagLong; remove
	b (ILnet/minecraft/nbt/NBTBase;)Z addTag
	b (ILnet/minecraft/nbt/NBTTagLong;)V add
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	c (I)Lnet/minecraft/nbt/NBTBase; remove
	c (ILnet/minecraft/nbt/NBTBase;)V add
	d ()Lnet/minecraft/nbt/NBTBase; copy
	d (ILnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTBase; set
	e ()Lnet/minecraft/nbt/NBTTagLongArray; copy
	f ()B getElementType
	g ()[J getAsLongArray
net/minecraft/nbt/NBTTagShort net/minecraft/nbt/ShortTag
	a TYPE
	b SELF_SIZE_IN_BYTES
	c data
	a ()I sizeInBytes
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lrn$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	a (S)Lnet/minecraft/nbt/NBTTagShort; valueOf
	b ()B getId
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagShort; copy
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
net/minecraft/nbt/NBTTagString net/minecraft/nbt/StringTag
	A data
	a TYPE
	b SELF_SIZE_IN_BYTES
	c EMPTY
	w DOUBLE_QUOTE
	x SINGLE_QUOTE
	y ESCAPE
	z NOT_SET
	a ()I sizeInBytes
	a (Ljava/io/DataInput;)V skipString
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagString; valueOf
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lrn$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	b (Ljava/lang/String;)Ljava/lang/String; quoteAndEscape
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagString; copy
	r_ ()Ljava/lang/String; getAsString
net/minecraft/nbt/NBTTagType net/minecraft/nbt/TagType
	a ()Ljava/lang/String; getName
	a (I)Lnet/minecraft/nbt/NBTTagType; createInvalid
	a (Ljava/io/DataInput;ILnet/minecraft/nbt/NBTReadLimiter;)V skip
	a (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;Lnet/minecraft/nbt/NBTReadLimiter;)Lrn$b; parse
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;Lnet/minecraft/nbt/NBTReadLimiter;)V skip
	b (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;Lnet/minecraft/nbt/NBTReadLimiter;)V parseRoot
	c (Ljava/io/DataInput;Lnet/minecraft/nbt/NBTReadLimiter;)Lnet/minecraft/nbt/NBTBase; load
	d ()Z isValue
net/minecraft/nbt/NBTTagTypes net/minecraft/nbt/TagTypes
	a TYPES
	a (I)Lnet/minecraft/nbt/NBTTagType; getType
net/minecraft/network/EnumProtocol net/minecraft/network/ConnectionProtocol
	a HANDSHAKING
	b PLAY
	c STATUS
	d LOGIN
	e CONFIGURATION
	f NOT_REGISTERED
	g id
	h flows
	i $VALUES
	a ()Ljava/lang/String; id
	a (Lnet/minecraft/network/protocol/EnumProtocolDirection;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; getPacketsByIds
	b ()Lsn$c; protocol
	b (Lnet/minecraft/network/protocol/EnumProtocolDirection;)Lsn$a; codec
	c ()[Lnet/minecraft/network/EnumProtocol; $values
net/minecraft/network/NetworkManager net/minecraft/network/Connection
	A delayedDisconnect
	B bandwidthDebugMonitor
	a ROOT_MARKER
	b PACKET_MARKER
	c PACKET_RECEIVED_MARKER
	d PACKET_SENT_MARKER
	e ATTRIBUTE_SERVERBOUND_PROTOCOL
	f ATTRIBUTE_CLIENTBOUND_PROTOCOL
	g NETWORK_WORKER_GROUP
	h NETWORK_EPOLL_WORKER_GROUP
	i LOCAL_WORKER_GROUP
	j AVERAGE_PACKETS_SMOOTHING
	k LOGGER
	l receiving
	m pendingActions
	n channel
	o address
	p disconnectListener
	q packetListener
	r disconnectedReason
	s encrypted
	t disconnectionHandled
	u receivedPackets
	v sentPackets
	w averageReceivedPackets
	x averageSentPackets
	y tickCount
	z handlingFault
	a ()V suspendInboundAfterProtocolChange
	a (IZ)V setupCompression
	a (Lio/netty/channel/Channel;)V setInitialProtocolAttributes
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;)V channelRead0
	a (Lio/netty/channel/ChannelPipeline;)V configurePacketHandler
	a (Lio/netty/channel/ChannelPipeline;Lnet/minecraft/network/protocol/EnumProtocolDirection;)V configureInMemoryPipeline
	a (Lio/netty/channel/ChannelPipeline;Lnet/minecraft/network/protocol/EnumProtocolDirection;Lnet/minecraft/network/BandwidthDebugMonitor;)V configureSerialization
	a (Ljava/lang/String;ILnet/minecraft/network/PacketListener;Lnet/minecraft/network/protocol/handshake/ClientIntent;)V initiateServerboundConnection
	a (Ljava/lang/String;ILnet/minecraft/network/protocol/login/PacketLoginOutListener;)V initiateServerboundPlayConnection
	a (Ljava/lang/String;ILnet/minecraft/network/protocol/status/PacketStatusOutListener;)V initiateServerboundStatusConnection
	a (Ljava/net/InetSocketAddress;ZLnet/minecraft/network/NetworkManager;)Lio/netty/channel/ChannelFuture; connect
	a (Ljava/net/InetSocketAddress;ZLnet/minecraft/util/SampleLogger;)Lnet/minecraft/network/NetworkManager; connectToServer
	a (Ljava/net/SocketAddress;)Lnet/minecraft/network/NetworkManager; connectToLocalServer
	a (Ljava/util/function/Consumer;)V runOnceConnected
	a (Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V setEncryptionKey
	a (Lnet/minecraft/network/PacketListener;)V setListener
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V disconnect
	a (Lnet/minecraft/network/protocol/EnumProtocolDirection;)Lio/netty/util/AttributeKey; getProtocolKey
	a (Lnet/minecraft/network/protocol/Packet;)V send
	a (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;)V genericsFtw
	a (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V send
	a (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;Z)V send
	a (Lnet/minecraft/network/protocol/handshake/ClientIntent;)V setClientboundProtocolAfterHandshake
	a (Lnet/minecraft/util/SampleLogger;)V setBandwidthLogger
	a (Z)Ljava/lang/String; getLoggableAddress
	b ()V resumeInboundAfterProtocolChange
	b (Lio/netty/channel/ChannelPipeline;Lnet/minecraft/network/protocol/EnumProtocolDirection;)V configureInMemoryPacketValidation
	b (Lnet/minecraft/network/PacketListener;)V setListenerForServerboundHandshake
	b (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;Z)V sendPacket
	c ()V flushChannel
	c (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;Z)V doSendPacket
	d ()V tick
	e ()V tickSecond
	f ()Ljava/net/SocketAddress; getRemoteAddress
	g ()Z isMemoryConnection
	h ()Lnet/minecraft/network/protocol/EnumProtocolDirection; getReceiving
	i ()Lnet/minecraft/network/protocol/EnumProtocolDirection; getSending
	j ()Z isEncrypted
	k ()Z isConnected
	l ()Z isConnecting
	m ()Lnet/minecraft/network/PacketListener; getPacketListener
	n ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisconnectedReason
	o ()V setReadOnly
	p ()V handleDisconnection
	q ()F getAverageReceivedPackets
	r ()F getAverageSentPackets
	s ()V flush
	t ()V flushQueue
net/minecraft/network/NetworkManagerServer net/minecraft/network/RateKickingConnection
	j LOGGER
	k EXCEED_REASON
	l rateLimitPacketsPerSecond
	e ()V tickSecond
net/minecraft/network/PacketCompressor net/minecraft/network/CompressionEncoder
	a encodeBuf
	b deflater
	c threshold
	a ()I getThreshold
	a (I)V setThreshold
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/network/PacketDataSerializer net/minecraft/network/FriendlyByteBuf
	a DEFAULT_NBT_QUOTA
	b MAX_STRING_LENGTH
	c MAX_COMPONENT_STRING_LENGTH
	d source
	e PUBLIC_KEY_SIZE
	f MAX_PUBLIC_KEY_HEADER_SIZE
	g MAX_PUBLIC_KEY_LENGTH
	h GSON
	A ()Lcom/mojang/authlib/properties/PropertyMap; readGameProfileProperties
	B ()Lcom/mojang/authlib/properties/Property; readProperty
	C ()Lnet/minecraft/network/PacketDataSerializer; clear
	D ()Lnet/minecraft/network/PacketDataSerializer; markReaderIndex
	E ()Lnet/minecraft/network/PacketDataSerializer; resetReaderIndex
	F ()Lnet/minecraft/network/PacketDataSerializer; markWriterIndex
	G ()Lnet/minecraft/network/PacketDataSerializer; resetWriterIndex
	H ()Lnet/minecraft/network/PacketDataSerializer; discardReadBytes
	I ()Lnet/minecraft/network/PacketDataSerializer; discardSomeReadBytes
	J ()Lnet/minecraft/network/PacketDataSerializer; retain
	K ()Lnet/minecraft/network/PacketDataSerializer; touch
	a ()Lit/unimi/dsi/fastutil/ints/IntList; readIntIdList
	a (D)Lnet/minecraft/network/PacketDataSerializer; writeDouble
	a (F)Lnet/minecraft/network/PacketDataSerializer; writeFloat
	a (I)[B readByteArray
	a (ID)Lnet/minecraft/network/PacketDataSerializer; setDouble
	a (IF)Lnet/minecraft/network/PacketDataSerializer; setFloat
	a (II)Lnet/minecraft/network/PacketDataSerializer; setIndex
	a (IJ)Lnet/minecraft/network/PacketDataSerializer; setLong
	a (ILio/netty/buffer/ByteBuf;)Lnet/minecraft/network/PacketDataSerializer; getBytes
	a (ILio/netty/buffer/ByteBuf;I)Lnet/minecraft/network/PacketDataSerializer; getBytes
	a (ILio/netty/buffer/ByteBuf;II)Lnet/minecraft/network/PacketDataSerializer; getBytes
	a (ILjava/io/OutputStream;I)Lnet/minecraft/network/PacketDataSerializer; getBytes
	a (ILjava/nio/ByteBuffer;)Lnet/minecraft/network/PacketDataSerializer; getBytes
	a (IZ)Lnet/minecraft/network/PacketDataSerializer; setBoolean
	a (I[B)Lnet/minecraft/network/PacketDataSerializer; getBytes
	a (I[BII)Lnet/minecraft/network/PacketDataSerializer; getBytes
	a (J)Lnet/minecraft/network/PacketDataSerializer; writeVarLong
	a (Lcom/mojang/authlib/GameProfile;)V writeGameProfile
	a (Lcom/mojang/authlib/properties/Property;)V writeProperty
	a (Lcom/mojang/authlib/properties/PropertyMap;)V writeGameProfileProperties
	a (Lcom/mojang/datafixers/util/Either;Lso$b;Lso$b;)V writeEither
	a (Lcom/mojang/serialization/Codec;)Ljava/lang/Object; readJsonWithCodec
	a (Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V writeJsonWithCodec
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)Ljava/lang/Object; readWithCodecTrusted
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)Lnet/minecraft/network/PacketDataSerializer; writeWithCodec
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Lnet/minecraft/nbt/NBTReadLimiter;)Ljava/lang/Object; readWithCodec
	a (Lio/netty/buffer/ByteBuf;)Lnet/minecraft/network/PacketDataSerializer; readBytes
	a (Lio/netty/buffer/ByteBuf;I)Lnet/minecraft/network/PacketDataSerializer; readBytes
	a (Lio/netty/buffer/ByteBuf;II)Lnet/minecraft/network/PacketDataSerializer; readBytes
	a (Lit/unimi/dsi/fastutil/ints/IntList;)V writeIntIdList
	a (Ljava/io/OutputStream;I)Lnet/minecraft/network/PacketDataSerializer; readBytes
	a (Ljava/lang/Class;)Ljava/util/EnumSet; readEnumSet
	a (Ljava/lang/Enum;)Lnet/minecraft/network/PacketDataSerializer; writeEnum
	a (Ljava/lang/Object;)Lnet/minecraft/network/PacketDataSerializer; touch
	a (Ljava/lang/Object;Lso$b;)V writeNullable
	a (Ljava/lang/String;)Lnet/minecraft/network/PacketDataSerializer; writeUtf
	a (Ljava/lang/String;I)Lnet/minecraft/network/PacketDataSerializer; writeUtf
	a (Ljava/nio/ByteBuffer;)Lnet/minecraft/network/PacketDataSerializer; readBytes
	a (Ljava/security/PublicKey;)Lnet/minecraft/network/PacketDataSerializer; writePublicKey
	a (Ljava/time/Instant;)V writeInstant
	a (Ljava/util/BitSet;)V writeBitSet
	a (Ljava/util/BitSet;I)V writeFixedBitSet
	a (Ljava/util/Collection;Lso$b;)V writeCollection
	a (Ljava/util/Date;)Lnet/minecraft/network/PacketDataSerializer; writeDate
	a (Ljava/util/EnumSet;Ljava/lang/Class;)V writeEnumSet
	a (Ljava/util/Map;Lso$b;Lso$b;)V writeMap
	a (Ljava/util/Optional;Lso$b;)V writeOptional
	a (Ljava/util/UUID;)Lnet/minecraft/network/PacketDataSerializer; writeUUID
	a (Ljava/util/function/Consumer;)V readWithCount
	a (Ljava/util/function/IntFunction;)Ljava/lang/Object; readById
	a (Ljava/util/function/IntFunction;I)Ljava/util/function/IntFunction; limitValue
	a (Ljava/util/function/IntFunction;Lso$a;)Ljava/util/Collection; readCollection
	a (Ljava/util/function/IntFunction;Lso$a;Lso$a;)Ljava/util/Map; readMap
	a (Ljava/util/function/ToIntFunction;Ljava/lang/Object;)Lnet/minecraft/network/PacketDataSerializer; writeById
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/network/PacketDataSerializer; writeBlockPos
	a (Lnet/minecraft/core/GlobalPos;)V writeGlobalPos
	a (Lnet/minecraft/core/Registry;)Ljava/lang/Object; readById
	a (Lnet/minecraft/core/Registry;Ljava/lang/Object;)V writeId
	a (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Holder;Lso$b;)V writeId
	a (Lnet/minecraft/core/Registry;Lso$a;)Lnet/minecraft/core/Holder; readById
	a (Lnet/minecraft/core/SectionPosition;)Lnet/minecraft/network/PacketDataSerializer; writeSectionPos
	a (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/network/PacketDataSerializer; writeNbt
	a (Lnet/minecraft/nbt/NBTReadLimiter;)Lnet/minecraft/nbt/NBTBase; readNbt
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/PacketDataSerializer; writeComponent
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/network/PacketDataSerializer; writeResourceLocation
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; readResourceKey
	a (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/PacketDataSerializer; writeItem
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/network/PacketDataSerializer; writeChunkPos
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V writeBlockHitResult
	a (Lnet/minecraft/world/phys/Vec3D;)V writeVec3
	a (Lorg/joml/Quaternionf;)V writeQuaternion
	a (Lorg/joml/Vector3f;)V writeVector3f
	a (Lso$a;)Ljava/util/List; readList
	a (Lso$a;Lso$a;)Ljava/util/Map; readMap
	a (Z)Lnet/minecraft/network/PacketDataSerializer; writeBoolean
	a ([B)Lnet/minecraft/network/PacketDataSerializer; writeByteArray
	a ([BII)Lnet/minecraft/network/PacketDataSerializer; readBytes
	a ([I)Lnet/minecraft/network/PacketDataSerializer; writeVarIntArray
	a ([J)Lnet/minecraft/network/PacketDataSerializer; writeLongArray
	a ([JI)[J readLongArray
	b ()[B readByteArray
	b (I)[I readVarIntArray
	b (II)Lnet/minecraft/network/PacketDataSerializer; setByte
	b (IJ)Lnet/minecraft/network/PacketDataSerializer; setLongLE
	b (ILio/netty/buffer/ByteBuf;)Lnet/minecraft/network/PacketDataSerializer; setBytes
	b (ILio/netty/buffer/ByteBuf;I)Lnet/minecraft/network/PacketDataSerializer; setBytes
	b (ILio/netty/buffer/ByteBuf;II)Lnet/minecraft/network/PacketDataSerializer; setBytes
	b (ILjava/nio/ByteBuffer;)Lnet/minecraft/network/PacketDataSerializer; setBytes
	b (I[B)Lnet/minecraft/network/PacketDataSerializer; setBytes
	b (I[BII)Lnet/minecraft/network/PacketDataSerializer; setBytes
	b (J)Lnet/minecraft/network/PacketDataSerializer; writeLong
	b (Lio/netty/buffer/ByteBuf;)Lnet/minecraft/network/PacketDataSerializer; writeBytes
	b (Lio/netty/buffer/ByteBuf;I)Lnet/minecraft/network/PacketDataSerializer; writeBytes
	b (Lio/netty/buffer/ByteBuf;II)Lnet/minecraft/network/PacketDataSerializer; writeBytes
	b (Ljava/lang/Class;)Ljava/lang/Enum; readEnum
	b (Ljava/nio/ByteBuffer;)Lnet/minecraft/network/PacketDataSerializer; writeBytes
	b (Lnet/minecraft/resources/ResourceKey;)V writeResourceKey
	b (Lso$a;)Ljava/util/Optional; readOptional
	b (Lso$a;Lso$a;)Lcom/mojang/datafixers/util/Either; readEither
	b ([B)Lnet/minecraft/network/PacketDataSerializer; readBytes
	b ([BII)Lnet/minecraft/network/PacketDataSerializer; writeBytes
	b ([J)[J readLongArray
	c ()[I readVarIntArray
	c (I)Lnet/minecraft/network/PacketDataSerializer; writeVarInt
	c (II)Lnet/minecraft/network/PacketDataSerializer; setShort
	c (J)Lnet/minecraft/network/PacketDataSerializer; writeLongLE
	c (Lso$a;)Ljava/lang/Object; readNullable
	c ([B)Lnet/minecraft/network/PacketDataSerializer; writeBytes
	d ()[J readLongArray
	d (I)Ljava/lang/String; readUtf
	d (II)Lnet/minecraft/network/PacketDataSerializer; setShortLE
	e ()Lnet/minecraft/core/BlockPosition; readBlockPos
	e (I)Ljava/util/BitSet; readFixedBitSet
	e (II)Lnet/minecraft/network/PacketDataSerializer; setMedium
	f ()Lnet/minecraft/world/level/ChunkCoordIntPair; readChunkPos
	f (I)Lnet/minecraft/network/PacketDataSerializer; capacity
	f (II)Lnet/minecraft/network/PacketDataSerializer; setMediumLE
	g ()Lnet/minecraft/core/SectionPosition; readSectionPos
	g (I)Lnet/minecraft/network/PacketDataSerializer; readerIndex
	g (II)Lnet/minecraft/network/PacketDataSerializer; setInt
	h ()Lnet/minecraft/core/GlobalPos; readGlobalPos
	h (I)Lnet/minecraft/network/PacketDataSerializer; writerIndex
	h (II)Lnet/minecraft/network/PacketDataSerializer; setIntLE
	i ()Lorg/joml/Vector3f; readVector3f
	i (I)Lnet/minecraft/network/PacketDataSerializer; ensureWritable
	i (II)Lnet/minecraft/network/PacketDataSerializer; setChar
	j ()Lorg/joml/Quaternionf; readQuaternion
	j (I)Lnet/minecraft/network/PacketDataSerializer; skipBytes
	j (II)Lnet/minecraft/network/PacketDataSerializer; setZero
	k ()Lnet/minecraft/world/phys/Vec3D; readVec3
	k (I)Lnet/minecraft/network/PacketDataSerializer; writeByte
	l ()Lnet/minecraft/network/chat/IChatBaseComponent; readComponent
	l (I)Lnet/minecraft/network/PacketDataSerializer; writeShort
	m ()I readVarInt
	m (I)Lnet/minecraft/network/PacketDataSerializer; writeShortLE
	n ()J readVarLong
	n (I)Lnet/minecraft/network/PacketDataSerializer; writeMedium
	o ()Ljava/util/UUID; readUUID
	o (I)Lnet/minecraft/network/PacketDataSerializer; writeMediumLE
	p ()Lnet/minecraft/nbt/NBTTagCompound; readNbt
	p (I)Lnet/minecraft/network/PacketDataSerializer; writeInt
	q ()Lnet/minecraft/world/item/ItemStack; readItem
	q (I)Lnet/minecraft/network/PacketDataSerializer; writeIntLE
	r ()Ljava/lang/String; readUtf
	r (I)Lnet/minecraft/network/PacketDataSerializer; writeChar
	s ()Lnet/minecraft/resources/MinecraftKey; readResourceLocation
	s (I)Lnet/minecraft/network/PacketDataSerializer; writeZero
	t ()Lnet/minecraft/resources/ResourceKey; readRegistryKey
	t (I)Lnet/minecraft/network/PacketDataSerializer; retain
	u ()Ljava/util/Date; readDate
	v ()Ljava/time/Instant; readInstant
	w ()Ljava/security/PublicKey; readPublicKey
	x ()Lnet/minecraft/world/phys/MovingObjectPositionBlock; readBlockHitResult
	y ()Ljava/util/BitSet; readBitSet
	z ()Lcom/mojang/authlib/GameProfile; readGameProfile
net/minecraft/network/PacketDecompressor net/minecraft/network/CompressionDecoder
	a MAXIMUM_COMPRESSED_LENGTH
	b MAXIMUM_UNCOMPRESSED_LENGTH
	c inflater
	d threshold
	e validateDecompressed
	a (IZ)V setThreshold
	a (Lio/netty/buffer/ByteBuf;)V setupInflaterInput
	a (Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf; inflate
net/minecraft/network/PacketDecrypter net/minecraft/network/CipherDecoder
	a cipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
net/minecraft/network/PacketEncrypter net/minecraft/network/CipherEncoder
	a cipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/network/PacketEncryptionHandler net/minecraft/network/CipherBase
	a cipher
	b heapIn
	c heapOut
	a (Lio/netty/buffer/ByteBuf;)[B bufToByte
	a (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; decipher
net/minecraft/network/PacketPrepender net/minecraft/network/Varint21LengthFieldPrepender
	a MAX_VARINT21_BYTES
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/network/PacketSplitter net/minecraft/network/Varint21FrameDecoder
	a MAX_VARINT21_BYTES
	b helperBuf
	c monitor
	a (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Z copyVarint
net/minecraft/network/SkipEncodeException net/minecraft/network/SkipPacketException
net/minecraft/network/chat/ChatClickable net/minecraft/network/chat/ClickEvent
	a action
	b value
	a ()Lnet/minecraft/network/chat/ChatClickable$EnumClickAction; getAction
	b ()Ljava/lang/String; getValue
net/minecraft/network/chat/ChatClickable$EnumClickAction net/minecraft/network/chat/ClickEvent$Action
	a OPEN_URL
	b OPEN_FILE
	c RUN_COMMAND
	d SUGGEST_COMMAND
	e CHANGE_PAGE
	f COPY_TO_CLIPBOARD
	g LOOKUP
	h allowFromServer
	i name
	j $VALUES
	a ()Z isAllowedFromServer
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatClickable$EnumClickAction; getByName
	b ()Ljava/lang/String; getName
	c ()[Lnet/minecraft/network/chat/ChatClickable$EnumClickAction; $values
net/minecraft/network/chat/ChatComponentUtils net/minecraft/network/chat/ComponentUtils
	a DEFAULT_SEPARATOR_TEXT
	b DEFAULT_SEPARATOR
	c DEFAULT_NO_STYLE_SEPARATOR
	a (Lcom/mojang/brigadier/Message;)Lnet/minecraft/network/chat/IChatBaseComponent; fromMessage
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; copyOnClickText
	a (Ljava/util/Collection;)Lnet/minecraft/network/chat/IChatBaseComponent; formatList
	a (Ljava/util/Collection;Ljava/util/Optional;Ljava/util/function/Function;)Lnet/minecraft/network/chat/IChatMutableComponent; formatList
	a (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/IChatBaseComponent; formatAndSortList
	a (Ljava/util/Collection;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; formatList
	a (Ljava/util/Collection;Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/function/Function;)Lnet/minecraft/network/chat/IChatMutableComponent; formatList
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Optional;Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; updateForEntity
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/ChatModifier; resolveStyle
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/IChatMutableComponent; updateForEntity
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; wrapInSquareBrackets
	a (Lnet/minecraft/network/chat/IChatMutableComponent;Lnet/minecraft/network/chat/ChatModifier;)Lnet/minecraft/network/chat/IChatMutableComponent; mergeStyles
	b (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/IChatBaseComponent; formatList
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)Z isTranslationResolvable
net/minecraft/network/chat/ChatDecoration net/minecraft/network/chat/ChatTypeDecoration
	a CODEC
	b translationKey
	c parameters
	d style
	a ()Ljava/lang/String; translationKey
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatDecoration; withSender
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lth$a;)Lnet/minecraft/network/chat/IChatBaseComponent; decorate
	b ()Ljava/util/List; parameters
	b (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatDecoration; incomingDirectMessage
	b (Lnet/minecraft/network/chat/IChatBaseComponent;Lth$a;)[Lnet/minecraft/network/chat/IChatBaseComponent; resolveParameters
	c ()Lnet/minecraft/network/chat/ChatModifier; style
	c (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatDecoration; outgoingDirectMessage
	d (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatDecoration; teamMessage
net/minecraft/network/chat/ChatHexColor net/minecraft/network/chat/TextColor
	a CODEC
	b CUSTOM_COLOR_PREFIX
	c LEGACY_FORMAT_TO_COLOR
	d NAMED_COLORS
	e value
	f name
	a ()I getValue
	a (I)Lnet/minecraft/network/chat/ChatHexColor; fromRgb
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatHexColor; parseColor
	a (Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/network/chat/ChatHexColor; fromLegacyFormat
	b ()Ljava/lang/String; serialize
	c ()Ljava/lang/String; formatValue
net/minecraft/network/chat/ChatHoverable net/minecraft/network/chat/HoverEvent
	a LOGGER
	b action
	c value
	a ()Lnet/minecraft/network/chat/ChatHoverable$EnumHoverAction; getAction
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/ChatHoverable; deserialize
	a (Lnet/minecraft/network/chat/ChatHoverable$EnumHoverAction;)Ljava/lang/Object; getValue
	b ()Lcom/google/gson/JsonObject; serialize
net/minecraft/network/chat/ChatHoverable$EnumHoverAction net/minecraft/network/chat/HoverEvent$Action
	a SHOW_TEXT
	b SHOW_ITEM
	c SHOW_ENTITY
	d LOOKUP
	e name
	f allowFromServer
	g argDeserializer
	h argSerializer
	i legacyArgDeserializer
	a ()Z isAllowedFromServer
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/ChatHoverable; deserialize
	a (Ljava/lang/Object;)Lcom/google/gson/JsonElement; serializeArg
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatHoverable$EnumHoverAction; getByName
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/ChatHoverable; deserializeFromLegacy
	b ()Ljava/lang/String; getName
	b (Ljava/lang/Object;)Ljava/lang/Object; cast
net/minecraft/network/chat/ChatMessageType net/minecraft/network/chat/ChatType
	a CODEC
	b DEFAULT_CHAT_DECORATION
	c CHAT
	d SAY_COMMAND
	e MSG_COMMAND_INCOMING
	f MSG_COMMAND_OUTGOING
	g TEAM_MSG_COMMAND_INCOMING
	h TEAM_MSG_COMMAND_OUTGOING
	i EMOTE_COMMAND
	j chat
	k narration
	a ()Lnet/minecraft/network/chat/ChatDecoration; chat
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; create
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lth$a; bind
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/commands/CommandListenerWrapper;)Lth$a; bind
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/network/chat/IChatBaseComponent;)Lth$a; bind
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;)Lth$a; bind
	b ()Lnet/minecraft/network/chat/ChatDecoration; narration
net/minecraft/network/chat/ChatModifier net/minecraft/network/chat/Style
	a EMPTY
	b FORMATTING_CODEC
	c DEFAULT_FONT
	d color
	e bold
	f italic
	g underlined
	h strikethrough
	i obfuscated
	j clickEvent
	k hoverEvent
	l insertion
	m font
	a ()Lnet/minecraft/network/chat/ChatHexColor; getColor
	a (I)Lnet/minecraft/network/chat/ChatModifier; withColor
	a (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/ChatModifier; withBold
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatModifier; withInsertion
	a (Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/network/chat/ChatModifier; create
	a (Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/network/chat/ChatModifier; withColor
	a (Lnet/minecraft/network/chat/ChatClickable;)Lnet/minecraft/network/chat/ChatModifier; withClickEvent
	a (Lnet/minecraft/network/chat/ChatHexColor;)Lnet/minecraft/network/chat/ChatModifier; withColor
	a (Lnet/minecraft/network/chat/ChatHoverable;)Lnet/minecraft/network/chat/ChatModifier; withHoverEvent
	a (Lnet/minecraft/network/chat/ChatModifier;)Lnet/minecraft/network/chat/ChatModifier; applyTo
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/network/chat/ChatModifier; withFont
	a ([Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/network/chat/ChatModifier; applyFormats
	b ()Z isBold
	b (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/ChatModifier; withItalic
	b (Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/network/chat/ChatModifier; applyFormat
	c ()Z isItalic
	c (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/ChatModifier; withUnderlined
	c (Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/network/chat/ChatModifier; applyLegacyFormat
	d ()Z isStrikethrough
	d (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/ChatModifier; withStrikethrough
	e ()Z isUnderlined
	e (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/ChatModifier; withObfuscated
	f ()Z isObfuscated
	g ()Z isEmpty
	h ()Lnet/minecraft/network/chat/ChatClickable; getClickEvent
	i ()Lnet/minecraft/network/chat/ChatHoverable; getHoverEvent
	j ()Ljava/lang/String; getInsertion
	k ()Lnet/minecraft/resources/MinecraftKey; getFont
net/minecraft/network/chat/ChatModifier$ChatModifierSerializer net/minecraft/network/chat/Style$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/ChatModifier; deserialize
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/MinecraftKey; getFont
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalFlag
	a (Lnet/minecraft/network/chat/ChatModifier;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/ChatHoverable; getHoverEvent
	c (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/ChatClickable; getClickEvent
	d (Lcom/google/gson/JsonObject;)Ljava/lang/String; getInsertion
	e (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/ChatHexColor; getTextColor
net/minecraft/network/chat/IChatBaseComponent net/minecraft/network/chat/Component
	a ()Lnet/minecraft/network/chat/ChatModifier; getStyle
	a (I)Ljava/lang/String; getString
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; nullToEmpty
	a (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; translatableWithFallback
	a (Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lnet/minecraft/network/chat/IChatMutableComponent; translatableWithFallback
	a (Ljava/lang/String;Ljava/util/Optional;)Lnet/minecraft/network/chat/IChatMutableComponent; selector
	a (Ljava/lang/String;ZLjava/util/Optional;Lnet/minecraft/network/chat/contents/DataSource;)Lnet/minecraft/network/chat/IChatMutableComponent; nbt
	a (Ljava/lang/String;[Ljava/lang/Object;)Lnet/minecraft/network/chat/IChatMutableComponent; translatable
	a (Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/List; toFlatList
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Z contains
	a (Ltp$a;)Ljava/util/Optional; visit
	a (Ltp$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
	b ()Lnet/minecraft/network/chat/ComponentContents; getContents
	b (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; literal
	b (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; score
	c ()Ljava/util/List; getSiblings
	c (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; translatable
	d ()Lnet/minecraft/network/chat/IChatMutableComponent; plainCopy
	d (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; keybind
	e ()Lnet/minecraft/network/chat/IChatMutableComponent; copy
	f ()Lnet/minecraft/util/FormattedString; getVisualOrderText
	g ()Ljava/util/List; toFlatList
	h ()Lnet/minecraft/network/chat/IChatMutableComponent; empty
net/minecraft/network/chat/IChatBaseComponent$ChatSerializer net/minecraft/network/chat/Component$Serializer
	a GSON
	b JSON_READER_POS
	c JSON_READER_LINESTART
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/IChatMutableComponent; fromJson
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/IChatMutableComponent; deserialize
	a (Lcom/google/gson/JsonSerializationContext;Lcom/google/gson/JsonObject;Ljava/util/Optional;)V serializeSeparator
	a (Lcom/google/gson/stream/JsonReader;)I getPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/IChatMutableComponent; fromJson
	a (Ljava/lang/Object;)Ljava/lang/Object; unwrapTextArgument
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; fromJson
	a (Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Optional; parseSeparator
	a (Lnet/minecraft/network/chat/ChatModifier;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeStyle
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Ljava/lang/String; toJson
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	b (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; fromJsonLenient
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)Ljava/lang/String; toStableJson
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)Lcom/google/gson/JsonElement; toJsonTree
net/minecraft/network/chat/IChatFormatted net/minecraft/network/chat/FormattedText
	a STOP_ITERATION
	b EMPTY
	a (Ljava/lang/String;Lnet/minecraft/network/chat/ChatModifier;)Lnet/minecraft/network/chat/IChatFormatted; of
	a (Ljava/util/List;)Lnet/minecraft/network/chat/IChatFormatted; composite
	a (Ltp$a;)Ljava/util/Optional; visit
	a (Ltp$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
	a ([Lnet/minecraft/network/chat/IChatFormatted;)Lnet/minecraft/network/chat/IChatFormatted; composite
	e (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatFormatted; of
net/minecraft/network/chat/IChatMutableComponent net/minecraft/network/chat/MutableComponent
	c contents
	d siblings
	e style
	f visualOrderText
	g decomposedWith
	a ()Lnet/minecraft/network/chat/ChatModifier; getStyle
	a (Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/IChatMutableComponent; withStyle
	a (Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/network/chat/IChatMutableComponent; withStyle
	a (Lnet/minecraft/network/chat/ComponentContents;)Lnet/minecraft/network/chat/IChatMutableComponent; create
	a ([Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/network/chat/IChatMutableComponent; withStyle
	b ()Lnet/minecraft/network/chat/ComponentContents; getContents
	b (Lnet/minecraft/network/chat/ChatModifier;)Lnet/minecraft/network/chat/IChatMutableComponent; setStyle
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; append
	c ()Ljava/util/List; getSiblings
	c (Lnet/minecraft/network/chat/ChatModifier;)Lnet/minecraft/network/chat/IChatMutableComponent; withStyle
	f ()Lnet/minecraft/util/FormattedString; getVisualOrderText
	f (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; append
net/minecraft/network/protocol/EnumProtocolDirection net/minecraft/network/protocol/PacketFlow
	a SERVERBOUND
	b CLIENTBOUND
	c $VALUES
	a ()Lnet/minecraft/network/protocol/EnumProtocolDirection; getOpposite
	b ()[Lnet/minecraft/network/protocol/EnumProtocolDirection; $values
net/minecraft/network/protocol/PlayerConnectionUtils net/minecraft/network/protocol/PacketUtils
	a LOGGER
	a (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/server/level/WorldServer;)V ensureRunningOnSameThread
	a (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/util/thread/IAsyncTaskHandler;)V ensureRunningOnSameThread
net/minecraft/network/protocol/game/PacketDebug net/minecraft/network/protocol/game/DebugPackets
	a LOGGER
	a (Lnet/minecraft/server/level/WorldServer;)V sendGameTestClearPacket
	a (Lnet/minecraft/server/level/WorldServer;Ljava/lang/Object;)Ljava/lang/String; getShortDescription
	a (Lnet/minecraft/server/level/WorldServer;Ljava/util/Collection;)V sendRaids
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V sendPoiAddedPacket
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Ljava/lang/String;II)V sendGameTestAddMarker
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;)V sendPacketToAllPlayers
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/ChunkCoordIntPair;)V sendPoiPacketsForChunk
	a (Lnet/minecraft/world/entity/EntityLiving;)V sendEntityBrain
	a (Lnet/minecraft/world/entity/EntityLiving;J)Ljava/util/List; getMemoryDescriptions
	a (Lnet/minecraft/world/entity/animal/EntityBee;)V sendBeeInfo
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V sendStructurePacket
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V sendNeighborsUpdatePacket
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBeehive;)V sendHiveInfo
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/ai/goal/PathfinderGoalSelector;)V sendGoalSelector
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/level/pathfinder/PathEntity;F)V sendPathFindingPacket
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;)V sendGameEventInfo
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/gameevent/GameEventListener;)V sendGameEventListenerInfo
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V sendPoiRemovedPacket
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V sendPoiTicketCountPacket
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V sendVillageSectionsPacket
net/minecraft/network/protocol/game/PacketListenerPlayIn net/minecraft/network/protocol/game/ServerGamePacketListener
	a (Lnet/minecraft/network/protocol/game/PacketPlayInAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/network/protocol/game/PacketPlayInAdvancements;)V handleSeenAdvancements
	a (Lnet/minecraft/network/protocol/game/PacketPlayInArmAnimation;)V handleAnimate
	a (Lnet/minecraft/network/protocol/game/PacketPlayInAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBEdit;)V handleEditBook
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBeacon;)V handleSetBeaconPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBlockDig;)V handlePlayerAction
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBlockPlace;)V handleUseItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBoatMove;)V handlePaddleBoat
	a (Lnet/minecraft/network/protocol/game/PacketPlayInChat;)V handleChat
	a (Lnet/minecraft/network/protocol/game/PacketPlayInClientCommand;)V handleClientCommand
	a (Lnet/minecraft/network/protocol/game/PacketPlayInCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/network/protocol/game/PacketPlayInDifficultyChange;)V handleChangeDifficulty
	a (Lnet/minecraft/network/protocol/game/PacketPlayInDifficultyLock;)V handleLockDifficulty
	a (Lnet/minecraft/network/protocol/game/PacketPlayInEnchantItem;)V handleContainerButtonClick
	a (Lnet/minecraft/network/protocol/game/PacketPlayInEntityAction;)V handlePlayerCommand
	a (Lnet/minecraft/network/protocol/game/PacketPlayInEntityNBTQuery;)V handleEntityTagQuery
	a (Lnet/minecraft/network/protocol/game/PacketPlayInFlying;)V handleMovePlayer
	a (Lnet/minecraft/network/protocol/game/PacketPlayInHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInItemName;)V handleRenameItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInJigsawGenerate;)V handleJigsawGenerate
	a (Lnet/minecraft/network/protocol/game/PacketPlayInPickItem;)V handlePickItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInRecipeDisplayed;)V handleRecipeBookSeenRecipePacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInRecipeSettings;)V handleRecipeBookChangeSettingsPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetCommandBlock;)V handleSetCommandBlock
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetCommandMinecart;)V handleSetCommandMinecart
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetCreativeSlot;)V handleSetCreativeModeSlot
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetJigsaw;)V handleSetJigsawBlock
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSpectate;)V handleTeleportToEntityPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSteerVehicle;)V handlePlayerInput
	a (Lnet/minecraft/network/protocol/game/PacketPlayInStruct;)V handleSetStructureBlock
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTabComplete;)V handleCustomCommandSuggestions
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTeleportAccept;)V handleAcceptTeleportPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTileNBTQuery;)V handleBlockEntityTagQuery
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTrSel;)V handleSelectTrade
	a (Lnet/minecraft/network/protocol/game/PacketPlayInUpdateSign;)V handleSignUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayInUseEntity;)V handleInteract
	a (Lnet/minecraft/network/protocol/game/PacketPlayInUseItem;)V handleUseItemOn
	a (Lnet/minecraft/network/protocol/game/PacketPlayInVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/network/protocol/game/PacketPlayInWindowClick;)V handleContainerClick
	a (Lnet/minecraft/network/protocol/game/ServerboundChatAckPacket;)V handleChatAck
	a (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;)V handleChatCommand
	a (Lnet/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket;)V handleChatSessionUpdate
	a (Lnet/minecraft/network/protocol/game/ServerboundChunkBatchReceivedPacket;)V handleChunkBatchReceived
	a (Lnet/minecraft/network/protocol/game/ServerboundConfigurationAcknowledgedPacket;)V handleConfigurationAcknowledged
	b ()Lnet/minecraft/network/EnumProtocol; protocol
net/minecraft/network/protocol/game/PacketListenerPlayOut net/minecraft/network/protocol/game/ClientGamePacketListener
	a (Lnet/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket;)V handleBlockChangedAck
	a (Lnet/minecraft/network/protocol/game/ClientboundBundlePacket;)V handleBundlePacket
	a (Lnet/minecraft/network/protocol/game/ClientboundChunkBatchFinishedPacket;)V handleChunkBatchFinished
	a (Lnet/minecraft/network/protocol/game/ClientboundChunkBatchStartPacket;)V handleChunkBatchStart
	a (Lnet/minecraft/network/protocol/game/ClientboundChunksBiomesPacket;)V handleChunksBiomes
	a (Lnet/minecraft/network/protocol/game/ClientboundClearTitlesPacket;)V handleTitlesClear
	a (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket;)V handleCustomChatCompletions
	a (Lnet/minecraft/network/protocol/game/ClientboundDamageEventPacket;)V handleDamageEvent
	a (Lnet/minecraft/network/protocol/game/ClientboundDeleteChatPacket;)V handleDeleteChat
	a (Lnet/minecraft/network/protocol/game/ClientboundDisguisedChatPacket;)V handleDisguisedChat
	a (Lnet/minecraft/network/protocol/game/ClientboundHurtAnimationPacket;)V handleHurtAnimation
	a (Lnet/minecraft/network/protocol/game/ClientboundInitializeBorderPacket;)V handleInitializeBorder
	a (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket;)V handleLevelChunkWithLight
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerChatPacket;)V handlePlayerChat
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket;)V handlePlayerCombatEnd
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket;)V handlePlayerCombatEnter
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket;)V handlePlayerCombatKill
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket;)V handlePlayerInfoRemove
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket;)V handlePlayerInfoUpdate
	a (Lnet/minecraft/network/protocol/game/ClientboundServerDataPacket;)V handleServerData
	a (Lnet/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket;)V setActionBarText
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket;)V handleSetBorderCenter
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket;)V handleSetBorderLerpSize
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderSizePacket;)V handleSetBorderSize
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket;)V handleSetBorderWarningDelay
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket;)V handleSetBorderWarningDistance
	a (Lnet/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket;)V handleSetSimulationDistance
	a (Lnet/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket;)V setSubtitleText
	a (Lnet/minecraft/network/protocol/game/ClientboundSetTitleTextPacket;)V setTitleText
	a (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket;)V setTitlesAnimation
	a (Lnet/minecraft/network/protocol/game/ClientboundStartConfigurationPacket;)V handleConfigurationStart
	a (Lnet/minecraft/network/protocol/game/ClientboundSystemChatPacket;)V handleSystemChat
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAdvancements;)V handleUpdateAdvancementsPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAnimation;)V handleAnimate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAttachEntity;)V handleEntityLinkPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBlockAction;)V handleBlockEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBlockBreakAnimation;)V handleBlockDestruction
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBlockChange;)V handleBlockUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBoss;)V handleBossUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCamera;)V handleSetCamera
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCollect;)V handleTakeItemEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCommands;)V handleCommands
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntity;)V handleMoveEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityDestroy;)V handleRemoveEntities
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityEffect;)V handleUpdateMobEffect
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityEquipment;)V handleSetEquipment
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityHeadRotation;)V handleRotateMob
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityMetadata;)V handleSetEntityData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntitySound;)V handleSoundEntityEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityStatus;)V handleEntityEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityTeleport;)V handleTeleportEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityVelocity;)V handleSetEntityMotion
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutExperience;)V handleSetExperience
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutExplosion;)V handleExplosion
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutGameStateChange;)V handleGameEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutLightUpdate;)V handleLightUpdatePacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutLogin;)V handleLogin
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutLookAt;)V handleLookAt
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutMap;)V handleMapItemData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutMount;)V handleSetEntityPassengersPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutMultiBlockChange;)V handleChunkBlocksUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutNBTQuery;)V handleTagQueryPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutNamedSoundEffect;)V handleSoundEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenBook;)V handleOpenBook
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenSignEditor;)V handleOpenSignEditor
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenWindow;)V handleOpenScreen
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenWindowHorse;)V handleHorseScreenOpen
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenWindowMerchant;)V handleMerchantOffers
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutPlayerListHeaderFooter;)V handleTabListCustomisation
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutPosition;)V handleMovePlayer
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRecipeUpdate;)V handleUpdateRecipes
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRecipes;)V handleAddOrRemoveRecipes
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRemoveEntityEffect;)V handleRemoveMobEffect
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRespawn;)V handleRespawn
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardDisplayObjective;)V handleSetDisplayObjective
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardObjective;)V handleAddObjective
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardScore;)V handleSetScore
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam;)V handleSetPlayerTeamPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSelectAdvancementTab;)V handleSelectAdvancementsTab
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutServerDifficulty;)V handleChangeDifficulty
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSetCooldown;)V handleItemCooldown
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSetSlot;)V handleContainerSetSlot
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V handleAddEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntityExperienceOrb;)V handleAddExperienceOrb
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnPosition;)V handleSetSpawn
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutStatistic;)V handleAwardStats
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutStopSound;)V handleStopSoundEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutTabComplete;)V handleCommandSuggestions
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData;)V handleBlockEntityData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUnloadChunk;)V handleForgetLevelChunk
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUpdateAttributes;)V handleUpdateAttributes
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUpdateHealth;)V handleSetHealth
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUpdateTime;)V handleSetTime
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutViewCentre;)V handleSetChunkCacheCenter
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutViewDistance;)V handleSetChunkCacheRadius
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWindowData;)V handleContainerSetData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWindowItems;)V handleContainerContent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWorldEvent;)V handleLevelEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWorldParticles;)V handleParticleEvent
	b ()Lnet/minecraft/network/EnumProtocol; protocol
net/minecraft/network/protocol/game/PacketPlayInAbilities net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket
	a FLAG_FLYING
	b isFlying
	a ()Z isFlying
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInAdvancements net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket
	a action
	b tab
	a ()Lnet/minecraft/network/protocol/game/PacketPlayInAdvancements; closedScreen
	a (Lnet/minecraft/advancements/AdvancementHolder;)Lnet/minecraft/network/protocol/game/PacketPlayInAdvancements; openedTab
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Lnet/minecraft/network/protocol/game/PacketPlayInAdvancements$Status; getAction
	e ()Lnet/minecraft/resources/MinecraftKey; getTab
net/minecraft/network/protocol/game/PacketPlayInAdvancements$Status net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action
	a OPENED_TAB
	b CLOSED_SCREEN
	c $VALUES
	a ()[Lnet/minecraft/network/protocol/game/PacketPlayInAdvancements$Status; $values
net/minecraft/network/protocol/game/PacketPlayInArmAnimation net/minecraft/network/protocol/game/ServerboundSwingPacket
	a hand
	a ()Lnet/minecraft/world/EnumHand; getHand
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInAutoRecipe net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket
	a containerId
	b recipe
	c shiftDown
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Lnet/minecraft/resources/MinecraftKey; getRecipe
	e ()Z isShiftDown
net/minecraft/network/protocol/game/PacketPlayInBEdit net/minecraft/network/protocol/game/ServerboundEditBookPacket
	a MAX_BYTES_PER_CHAR
	b TITLE_MAX_CHARS
	c PAGE_MAX_CHARS
	d MAX_PAGES_COUNT
	e slot
	f pages
	g title
	a ()Ljava/util/List; getPages
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Ljava/util/Optional; getTitle
	e ()I getSlot
net/minecraft/network/protocol/game/PacketPlayInBeacon net/minecraft/network/protocol/game/ServerboundSetBeaconPacket
	a primary
	b secondary
	a ()Ljava/util/Optional; getPrimary
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Ljava/util/Optional; getSecondary
net/minecraft/network/protocol/game/PacketPlayInBlockDig net/minecraft/network/protocol/game/ServerboundPlayerActionPacket
	a pos
	b direction
	c action
	d sequence
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Lnet/minecraft/core/EnumDirection; getDirection
	e ()Lnet/minecraft/network/protocol/game/PacketPlayInBlockDig$EnumPlayerDigType; getAction
	f ()I getSequence
net/minecraft/network/protocol/game/PacketPlayInBlockDig$EnumPlayerDigType net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action
	a START_DESTROY_BLOCK
	b ABORT_DESTROY_BLOCK
	c STOP_DESTROY_BLOCK
	d DROP_ALL_ITEMS
	e DROP_ITEM
	f RELEASE_USE_ITEM
	g SWAP_ITEM_WITH_OFFHAND
	h $VALUES
	a ()[Lnet/minecraft/network/protocol/game/PacketPlayInBlockDig$EnumPlayerDigType; $values
net/minecraft/network/protocol/game/PacketPlayInBlockPlace net/minecraft/network/protocol/game/ServerboundUseItemPacket
	a hand
	b sequence
	a ()Lnet/minecraft/world/EnumHand; getHand
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()I getSequence
net/minecraft/network/protocol/game/PacketPlayInBoatMove net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket
	a left
	b right
	a ()Z getLeft
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Z getRight
net/minecraft/network/protocol/game/PacketPlayInChat net/minecraft/network/protocol/game/ServerboundChatPacket
	a message
	b timeStamp
	c salt
	d signature
	e lastSeenMessages
	a ()Ljava/lang/String; message
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Ljava/time/Instant; timeStamp
	e ()J salt
	f ()Lnet/minecraft/network/chat/MessageSignature; signature
	g ()Ltr$b; lastSeenMessages
net/minecraft/network/protocol/game/PacketPlayInClientCommand net/minecraft/network/protocol/game/ServerboundClientCommandPacket
	a action
	a ()Lnet/minecraft/network/protocol/game/PacketPlayInClientCommand$EnumClientCommand; getAction
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInClientCommand$EnumClientCommand net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action
	a PERFORM_RESPAWN
	b REQUEST_STATS
	c $VALUES
	a ()[Lnet/minecraft/network/protocol/game/PacketPlayInClientCommand$EnumClientCommand; $values
net/minecraft/network/protocol/game/PacketPlayInCloseWindow net/minecraft/network/protocol/game/ServerboundContainerClosePacket
	a containerId
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInDifficultyChange net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket
	a difficulty
	a ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInDifficultyLock net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket
	a locked
	a ()Z isLocked
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInEnchantItem net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket
	a containerId
	b buttonId
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()I getButtonId
net/minecraft/network/protocol/game/PacketPlayInEntityAction net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket
	a id
	b action
	c data
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Lnet/minecraft/network/protocol/game/PacketPlayInEntityAction$EnumPlayerAction; getAction
	e ()I getData
net/minecraft/network/protocol/game/PacketPlayInEntityAction$EnumPlayerAction net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action
	a PRESS_SHIFT_KEY
	b RELEASE_SHIFT_KEY
	c STOP_SLEEPING
	d START_SPRINTING
	e STOP_SPRINTING
	f START_RIDING_JUMP
	g STOP_RIDING_JUMP
	h OPEN_INVENTORY
	i START_FALL_FLYING
	j $VALUES
	a ()[Lnet/minecraft/network/protocol/game/PacketPlayInEntityAction$EnumPlayerAction; $values
net/minecraft/network/protocol/game/PacketPlayInEntityNBTQuery net/minecraft/network/protocol/game/ServerboundEntityTagQuery
	a transactionId
	b entityId
	a ()I getTransactionId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()I getEntityId
net/minecraft/network/protocol/game/PacketPlayInFlying net/minecraft/network/protocol/game/ServerboundMovePlayerPacket
	a x
	b y
	c z
	d yRot
	e xRot
	f onGround
	g hasPos
	h hasRot
	a ()Z isOnGround
	a (D)D getX
	a (F)F getYRot
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	b (D)D getY
	b (F)F getXRot
	c (D)D getZ
	d ()Z hasPosition
	e ()Z hasRotation
net/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInLook net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInLook; read
net/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInPosition net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInPosition; read
net/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInPositionLook net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInPositionLook; read
net/minecraft/network/protocol/game/PacketPlayInHeldItemSlot net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket
	a slot
	a ()I getSlot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInItemName net/minecraft/network/protocol/game/ServerboundRenameItemPacket
	a name
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInJigsawGenerate net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket
	a pos
	b levels
	c keepJigsaws
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()I levels
	e ()Z keepJigsaws
net/minecraft/network/protocol/game/PacketPlayInPickItem net/minecraft/network/protocol/game/ServerboundPickItemPacket
	a slot
	a ()I getSlot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInRecipeDisplayed net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket
	a recipe
	a ()Lnet/minecraft/resources/MinecraftKey; getRecipe
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInRecipeSettings net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket
	a bookType
	b isOpen
	c isFiltering
	a ()Lnet/minecraft/world/inventory/RecipeBookType; getBookType
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Z isOpen
	e ()Z isFiltering
net/minecraft/network/protocol/game/PacketPlayInSetCommandBlock net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket
	a FLAG_TRACK_OUTPUT
	b FLAG_CONDITIONAL
	c FLAG_AUTOMATIC
	d pos
	e command
	f trackOutput
	g conditional
	h automatic
	i mode
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Ljava/lang/String; getCommand
	e ()Z isTrackOutput
	f ()Z isConditional
	g ()Z isAutomatic
	h ()Lnet/minecraft/world/level/block/entity/TileEntityCommand$Type; getMode
net/minecraft/network/protocol/game/PacketPlayInSetCommandMinecart net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket
	a entity
	b command
	c trackOutput
	a ()Ljava/lang/String; getCommand
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/level/CommandBlockListenerAbstract; getCommandBlock
	d ()Z isTrackOutput
net/minecraft/network/protocol/game/PacketPlayInSetCreativeSlot net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket
	a slotNum
	b itemStack
	a ()I getSlotNum
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Lnet/minecraft/world/item/ItemStack; getItem
net/minecraft/network/protocol/game/PacketPlayInSetJigsaw net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket
	a pos
	b name
	c target
	d pool
	e finalState
	f joint
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Lnet/minecraft/resources/MinecraftKey; getName
	e ()Lnet/minecraft/resources/MinecraftKey; getTarget
	f ()Lnet/minecraft/resources/MinecraftKey; getPool
	g ()Ljava/lang/String; getFinalState
	h ()Lnet/minecraft/world/level/block/entity/TileEntityJigsaw$JointType; getJoint
net/minecraft/network/protocol/game/PacketPlayInSpectate net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket
	a uuid
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/entity/Entity; getEntity
net/minecraft/network/protocol/game/PacketPlayInSteerVehicle net/minecraft/network/protocol/game/ServerboundPlayerInputPacket
	a FLAG_JUMPING
	b FLAG_SHIFT_KEY_DOWN
	c xxa
	d zza
	e isJumping
	f isShiftKeyDown
	a ()F getXxa
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()F getZza
	e ()Z isJumping
	f ()Z isShiftKeyDown
net/minecraft/network/protocol/game/PacketPlayInStruct net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket
	a FLAG_IGNORE_ENTITIES
	b FLAG_SHOW_AIR
	c FLAG_SHOW_BOUNDING_BOX
	d pos
	e updateType
	f mode
	g name
	h offset
	i size
	j mirror
	k rotation
	l data
	m ignoreEntities
	n showAir
	o showBoundingBox
	p integrity
	q seed
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Lnet/minecraft/world/level/block/entity/TileEntityStructure$UpdateType; getUpdateType
	e ()Lnet/minecraft/world/level/block/state/properties/BlockPropertyStructureMode; getMode
	f ()Ljava/lang/String; getName
	g ()Lnet/minecraft/core/BlockPosition; getOffset
	h ()Lnet/minecraft/core/BaseBlockPosition; getSize
	i ()Lnet/minecraft/world/level/block/EnumBlockMirror; getMirror
	j ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	k ()Ljava/lang/String; getData
	l ()Z isIgnoreEntities
	m ()Z isShowAir
	n ()Z isShowBoundingBox
	o ()F getIntegrity
	p ()J getSeed
net/minecraft/network/protocol/game/PacketPlayInTabComplete net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket
	a id
	b command
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Ljava/lang/String; getCommand
net/minecraft/network/protocol/game/PacketPlayInTeleportAccept net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket
	a id
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInTileNBTQuery net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery
	a transactionId
	b pos
	a ()I getTransactionId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Lnet/minecraft/core/BlockPosition; getPos
net/minecraft/network/protocol/game/PacketPlayInTrSel net/minecraft/network/protocol/game/ServerboundSelectTradePacket
	a item
	a ()I getItem
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInUpdateSign net/minecraft/network/protocol/game/ServerboundSignUpdatePacket
	a MAX_STRING_LENGTH
	b pos
	c lines
	d isFrontText
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Z isFrontText
	e ()[Ljava/lang/String; getLines
net/minecraft/network/protocol/game/PacketPlayInUseEntity net/minecraft/network/protocol/game/ServerboundInteractPacket
	a entityId
	b action
	c usingSecondaryAction
	d ATTACK_ACTION
	a ()Z isUsingSecondaryAction
	a (Labv$c;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/entity/Entity; getTarget
	a (Lnet/minecraft/world/entity/Entity;Z)Lnet/minecraft/network/protocol/game/PacketPlayInUseEntity; createAttackPacket
	a (Lnet/minecraft/world/entity/Entity;ZLnet/minecraft/world/EnumHand;)Lnet/minecraft/network/protocol/game/PacketPlayInUseEntity; createInteractionPacket
	a (Lnet/minecraft/world/entity/Entity;ZLnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/network/protocol/game/PacketPlayInUseEntity; createInteractionPacket
net/minecraft/network/protocol/game/PacketPlayInUseEntity$EnumEntityUseAction net/minecraft/network/protocol/game/ServerboundInteractPacket$Action
	a ()Labv$b; getType
	a (Labv$c;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
net/minecraft/network/protocol/game/PacketPlayInUseItem net/minecraft/network/protocol/game/ServerboundUseItemOnPacket
	a blockHit
	b hand
	c sequence
	a ()Lnet/minecraft/world/EnumHand; getHand
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Lnet/minecraft/world/phys/MovingObjectPositionBlock; getHitResult
	e ()I getSequence
net/minecraft/network/protocol/game/PacketPlayInVehicleMove net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket
	a x
	b y
	c z
	d yRot
	e xRot
	a ()D getX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()D getY
	e ()D getZ
	f ()F getYRot
	g ()F getXRot
net/minecraft/network/protocol/game/PacketPlayInWindowClick net/minecraft/network/protocol/game/ServerboundContainerClickPacket
	a MAX_SLOT_COUNT
	b containerId
	c stateId
	d slotNum
	e buttonNum
	f clickType
	g carriedItem
	h changedSlots
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()I getSlotNum
	e ()I getButtonNum
	f ()Lnet/minecraft/world/item/ItemStack; getCarriedItem
	g ()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; getChangedSlots
	h ()Lnet/minecraft/world/inventory/InventoryClickType; getClickType
	i ()I getStateId
net/minecraft/network/protocol/game/PacketPlayOutAbilities net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket
	a FLAG_INVULNERABLE
	b FLAG_FLYING
	c FLAG_CAN_FLY
	d FLAG_INSTABUILD
	e invulnerable
	f isFlying
	g canFly
	h instabuild
	i flyingSpeed
	j walkingSpeed
	a ()Z isInvulnerable
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Z isFlying
	e ()Z canFly
	f ()Z canInstabuild
	g ()F getFlyingSpeed
	h ()F getWalkingSpeed
net/minecraft/network/protocol/game/PacketPlayOutAdvancements net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket
	a reset
	b added
	c removed
	d progress
	a ()Ljava/util/List; getAdded
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Ljava/util/Set; getRemoved
	e ()Ljava/util/Map; getProgress
	f ()Z shouldReset
net/minecraft/network/protocol/game/PacketPlayOutAnimation net/minecraft/network/protocol/game/ClientboundAnimatePacket
	a SWING_MAIN_HAND
	b WAKE_UP
	c SWING_OFF_HAND
	d CRITICAL_HIT
	e MAGIC_CRITICAL_HIT
	f id
	g action
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getAction
net/minecraft/network/protocol/game/PacketPlayOutAttachEntity net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket
	a sourceId
	b destId
	a ()I getSourceId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getDestId
net/minecraft/network/protocol/game/PacketPlayOutAutoRecipe net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket
	a containerId
	b recipe
	a ()Lnet/minecraft/resources/MinecraftKey; getRecipe
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getContainerId
net/minecraft/network/protocol/game/PacketPlayOutBlockAction net/minecraft/network/protocol/game/ClientboundBlockEventPacket
	a pos
	b b0
	c b1
	d block
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getB0
	e ()I getB1
	f ()Lnet/minecraft/world/level/block/Block; getBlock
net/minecraft/network/protocol/game/PacketPlayOutBlockBreakAnimation net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket
	a id
	b pos
	c progress
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Lnet/minecraft/core/BlockPosition; getPos
	e ()I getProgress
net/minecraft/network/protocol/game/PacketPlayOutBlockChange net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket
	a pos
	b blockState
	a ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Lnet/minecraft/core/BlockPosition; getPos
net/minecraft/network/protocol/game/PacketPlayOutBoss net/minecraft/network/protocol/game/ClientboundBossEventPacket
	a FLAG_DARKEN
	b FLAG_MUSIC
	c FLAG_FOG
	d id
	e operation
	f REMOVE_OPERATION
	a (Ljava/util/UUID;)Lnet/minecraft/network/protocol/game/PacketPlayOutBoss; createRemovePacket
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/BossBattle;)Lnet/minecraft/network/protocol/game/PacketPlayOutBoss; createAddPacket
	a (Lxg$b;)V dispatch
	a (ZZZ)I encodeProperties
	b (Lnet/minecraft/world/BossBattle;)Lnet/minecraft/network/protocol/game/PacketPlayOutBoss; createUpdateProgressPacket
	c (Lnet/minecraft/world/BossBattle;)Lnet/minecraft/network/protocol/game/PacketPlayOutBoss; createUpdateNamePacket
	d (Lnet/minecraft/world/BossBattle;)Lnet/minecraft/network/protocol/game/PacketPlayOutBoss; createUpdateStylePacket
	e (Lnet/minecraft/world/BossBattle;)Lnet/minecraft/network/protocol/game/PacketPlayOutBoss; createUpdatePropertiesPacket
net/minecraft/network/protocol/game/PacketPlayOutBoss$Action net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation
	a ()Lxg$d; getType
	a (Ljava/util/UUID;Lxg$b;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
net/minecraft/network/protocol/game/PacketPlayOutCamera net/minecraft/network/protocol/game/ClientboundSetCameraPacket
	a cameraId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/Entity; getEntity
net/minecraft/network/protocol/game/PacketPlayOutCloseWindow net/minecraft/network/protocol/game/ClientboundContainerClosePacket
	a containerId
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutCollect net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket
	a itemId
	b playerId
	c amount
	a ()I getItemId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getPlayerId
	e ()I getAmount
net/minecraft/network/protocol/game/PacketPlayOutCommands net/minecraft/network/protocol/game/ClientboundCommandsPacket
	a MASK_TYPE
	b FLAG_EXECUTABLE
	c FLAG_REDIRECT
	d FLAG_CUSTOM_SUGGESTIONS
	e TYPE_ROOT
	f TYPE_LITERAL
	g TYPE_ARGUMENT
	h rootIndex
	i entries
	a (Lcom/mojang/brigadier/tree/CommandNode;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lxo$b; createEntry
	a (Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; enumerateNodes
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ljava/util/List; createEntries
	a (Ljava/util/List;)V validateEntries
	a (Ljava/util/List;Ljava/util/function/BiPredicate;)V validateEntries
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/tree/RootCommandNode; getRoot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;B)Lxo$e; read
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lxo$b; readNode
net/minecraft/network/protocol/game/PacketPlayOutEntity net/minecraft/network/protocol/game/ClientboundMoveEntityPacket
	a entityId
	b xa
	c ya
	d za
	e yRot
	f xRot
	g onGround
	h hasRot
	i hasPos
	a ()S getXa
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/Entity; getEntity
	d ()S getYa
	e ()S getZa
	f ()B getyRot
	g ()B getxRot
	h ()Z hasRotation
	i ()Z hasPosition
	j ()Z isOnGround
net/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutEntityLook net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutEntityLook; read
net/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutRelEntityMove net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutRelEntityMove; read
net/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutRelEntityMoveLook net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutRelEntityMoveLook; read
net/minecraft/network/protocol/game/PacketPlayOutEntityDestroy net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket
	a entityIds
	a ()Lit/unimi/dsi/fastutil/ints/IntList; getEntityIds
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutEntityEffect net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket
	a FLAG_AMBIENT
	b FLAG_VISIBLE
	c FLAG_SHOW_ICON
	d entityId
	e effect
	f effectAmplifier
	g effectDurationTicks
	h flags
	i factorData
	a ()I getEntityId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Lnet/minecraft/world/effect/MobEffectList; getEffect
	e ()B getEffectAmplifier
	f ()I getEffectDurationTicks
	g ()Z isEffectVisible
	h ()Z isEffectAmbient
	i ()Z effectShowsIcon
	j ()Lbid$a; getFactorData
net/minecraft/network/protocol/game/PacketPlayOutEntityEquipment net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket
	a CONTINUE_MASK
	b entity
	c slots
	a ()I getEntity
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Ljava/util/List; getSlots
net/minecraft/network/protocol/game/PacketPlayOutEntityHeadRotation net/minecraft/network/protocol/game/ClientboundRotateHeadPacket
	a entityId
	b yHeadRot
	a ()B getYHeadRot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/Entity; getEntity
net/minecraft/network/protocol/game/PacketPlayOutEntityMetadata net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket
	a EOF_MARKER
	b id
	c packedItems
	a ()I id
	a (Ljava/util/List;Lnet/minecraft/network/PacketDataSerializer;)V pack
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Ljava/util/List; unpack
	d ()Ljava/util/List; packedItems
net/minecraft/network/protocol/game/PacketPlayOutEntitySound net/minecraft/network/protocol/game/ClientboundSoundEntityPacket
	a sound
	b source
	c id
	d volume
	e pitch
	f seed
	a ()Lnet/minecraft/core/Holder; getSound
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Lnet/minecraft/sounds/SoundCategory; getSource
	e ()I getId
	f ()F getVolume
	g ()F getPitch
	h ()J getSeed
net/minecraft/network/protocol/game/PacketPlayOutEntityStatus net/minecraft/network/protocol/game/ClientboundEntityEventPacket
	a entityId
	b eventId
	a ()B getEventId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/Entity; getEntity
net/minecraft/network/protocol/game/PacketPlayOutEntityTeleport net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket
	a id
	b x
	c y
	d z
	e yRot
	f xRot
	g onGround
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()B getyRot
	h ()B getxRot
	i ()Z isOnGround
net/minecraft/network/protocol/game/PacketPlayOutEntityVelocity net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket
	a id
	b xa
	c ya
	d za
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getXa
	e ()I getYa
	f ()I getZa
net/minecraft/network/protocol/game/PacketPlayOutExperience net/minecraft/network/protocol/game/ClientboundSetExperiencePacket
	a experienceProgress
	b totalExperience
	c experienceLevel
	a ()F getExperienceProgress
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getTotalExperience
	e ()I getExperienceLevel
net/minecraft/network/protocol/game/PacketPlayOutExplosion net/minecraft/network/protocol/game/ClientboundExplodePacket
	a x
	b y
	c z
	d power
	e toBlow
	f knockbackX
	g knockbackY
	h knockbackZ
	a ()F getKnockbackX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()F getKnockbackY
	e ()F getKnockbackZ
	f ()D getX
	g ()D getY
	h ()D getZ
	i ()F getPower
	j ()Ljava/util/List; getToBlow
net/minecraft/network/protocol/game/PacketPlayOutGameStateChange net/minecraft/network/protocol/game/ClientboundGameEventPacket
	a NO_RESPAWN_BLOCK_AVAILABLE
	b START_RAINING
	c STOP_RAINING
	d CHANGE_GAME_MODE
	e WIN_GAME
	f DEMO_EVENT
	g ARROW_HIT_PLAYER
	h RAIN_LEVEL_CHANGE
	i THUNDER_LEVEL_CHANGE
	j PUFFER_FISH_STING
	k GUARDIAN_ELDER_EFFECT
	l IMMEDIATE_RESPAWN
	m LIMITED_CRAFTING
	n DEMO_PARAM_INTRO
	o DEMO_PARAM_HINT_1
	p DEMO_PARAM_HINT_2
	q DEMO_PARAM_HINT_3
	r DEMO_PARAM_HINT_4
	s event
	t param
	a ()Lyb$a; getEvent
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()F getParam
net/minecraft/network/protocol/game/PacketPlayOutHeldItemSlot net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket
	a slot
	a ()I getSlot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutLightUpdate net/minecraft/network/protocol/game/ClientboundLightUpdatePacket
	a x
	b z
	c lightData
	a ()I getX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getZ
	e ()Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData; getLightData
net/minecraft/network/protocol/game/PacketPlayOutLogin net/minecraft/network/protocol/game/ClientboundLoginPacket
	a playerId
	b hardcore
	c levels
	d maxPlayers
	e chunkRadius
	f simulationDistance
	g reducedDebugInfo
	h showDeathScreen
	i doLimitedCrafting
	j commonPlayerSpawnInfo
	a ()I playerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Z hardcore
	e ()Ljava/util/Set; levels
	f ()I maxPlayers
	g ()I chunkRadius
	h ()I simulationDistance
	i ()Z reducedDebugInfo
	j ()Z showDeathScreen
	k ()Z doLimitedCrafting
	l ()Lnet/minecraft/network/protocol/game/CommonPlayerSpawnInfo; commonPlayerSpawnInfo
net/minecraft/network/protocol/game/PacketPlayOutLookAt net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket
	a x
	b y
	c z
	d entity
	e fromAnchor
	f toAnchor
	g atEntity
	a ()Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor; getFromAnchor
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/phys/Vec3D; getPosition
net/minecraft/network/protocol/game/PacketPlayOutMap net/minecraft/network/protocol/game/ClientboundMapItemDataPacket
	a mapId
	b scale
	c locked
	d decorations
	e colorPatch
	a ()I getMapId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V applyToMap
	d ()B getScale
	e ()Z isLocked
net/minecraft/network/protocol/game/PacketPlayOutMount net/minecraft/network/protocol/game/ClientboundSetPassengersPacket
	a vehicle
	b passengers
	a ()[I getPassengers
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getVehicle
net/minecraft/network/protocol/game/PacketPlayOutMultiBlockChange net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket
	a POS_IN_SECTION_BITS
	b sectionPos
	c positions
	d states
	a (Ljava/util/function/BiConsumer;)V runUpdates
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutNBTQuery net/minecraft/network/protocol/game/ClientboundTagQueryPacket
	a transactionId
	b tag
	a ()I getTransactionId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b ()Z isSkippable
	d ()Lnet/minecraft/nbt/NBTTagCompound; getTag
net/minecraft/network/protocol/game/PacketPlayOutNamedSoundEffect net/minecraft/network/protocol/game/ClientboundSoundPacket
	a LOCATION_ACCURACY
	b sound
	c source
	d x
	e y
	f z
	g volume
	h pitch
	i seed
	a ()Lnet/minecraft/core/Holder; getSound
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Lnet/minecraft/sounds/SoundCategory; getSource
	e ()D getX
	f ()D getY
	g ()D getZ
	h ()F getVolume
	i ()F getPitch
	j ()J getSeed
net/minecraft/network/protocol/game/PacketPlayOutOpenBook net/minecraft/network/protocol/game/ClientboundOpenBookPacket
	a hand
	a ()Lnet/minecraft/world/EnumHand; getHand
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutOpenSignEditor net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket
	a pos
	b isFrontText
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Z isFrontText
net/minecraft/network/protocol/game/PacketPlayOutOpenWindow net/minecraft/network/protocol/game/ClientboundOpenScreenPacket
	a containerId
	b type
	c title
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Lnet/minecraft/world/inventory/Containers; getType
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
net/minecraft/network/protocol/game/PacketPlayOutOpenWindowHorse net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket
	a containerId
	b size
	c entityId
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getSize
	e ()I getEntityId
net/minecraft/network/protocol/game/PacketPlayOutOpenWindowMerchant net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket
	a containerId
	b offers
	c villagerLevel
	d villagerXp
	e showProgress
	f canRestock
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Lnet/minecraft/world/item/trading/MerchantRecipeList; getOffers
	e ()I getVillagerLevel
	f ()I getVillagerXp
	g ()Z showProgress
	h ()Z canRestock
net/minecraft/network/protocol/game/PacketPlayOutPlayerListHeaderFooter net/minecraft/network/protocol/game/ClientboundTabListPacket
	a header
	b footer
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getHeader
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getFooter
net/minecraft/network/protocol/game/PacketPlayOutPosition net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket
	a x
	b y
	c z
	d yRot
	e xRot
	f relativeArguments
	g id
	a ()D getX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()D getY
	e ()D getZ
	f ()F getYRot
	g ()F getXRot
	h ()I getId
	i ()Ljava/util/Set; getRelativeArguments
net/minecraft/network/protocol/game/PacketPlayOutRecipeUpdate net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket
	a recipes
	a ()Ljava/util/List; getRecipes
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/RecipeHolder;)V toNetwork
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/RecipeHolder; fromNetwork
net/minecraft/network/protocol/game/PacketPlayOutRecipes net/minecraft/network/protocol/game/ClientboundRecipePacket
	a state
	b recipes
	c toHighlight
	d bookSettings
	a ()Ljava/util/List; getRecipes
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Ljava/util/List; getHighlights
	e ()Lnet/minecraft/stats/RecipeBookSettings; getBookSettings
	f ()Lnet/minecraft/network/protocol/game/PacketPlayOutRecipes$Action; getState
net/minecraft/network/protocol/game/PacketPlayOutRecipes$Action net/minecraft/network/protocol/game/ClientboundRecipePacket$State
	a INIT
	b ADD
	c REMOVE
	d $VALUES
	a ()[Lnet/minecraft/network/protocol/game/PacketPlayOutRecipes$Action; $values
net/minecraft/network/protocol/game/PacketPlayOutRemoveEntityEffect net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket
	a entityId
	b effect
	a ()Lnet/minecraft/world/effect/MobEffectList; getEffect
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/Entity; getEntity
net/minecraft/network/protocol/game/PacketPlayOutRespawn net/minecraft/network/protocol/game/ClientboundRespawnPacket
	a KEEP_ATTRIBUTES
	b KEEP_ENTITY_DATA
	c KEEP_ALL_DATA
	d commonPlayerSpawnInfo
	e dataToKeep
	a ()Lnet/minecraft/network/protocol/game/CommonPlayerSpawnInfo; commonPlayerSpawnInfo
	a (B)Z shouldKeep
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()B dataToKeep
net/minecraft/network/protocol/game/PacketPlayOutScoreboardDisplayObjective net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket
	a slot
	b objectiveName
	a ()Lnet/minecraft/world/scores/DisplaySlot; getSlot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Ljava/lang/String; getObjectiveName
net/minecraft/network/protocol/game/PacketPlayOutScoreboardObjective net/minecraft/network/protocol/game/ClientboundSetObjectivePacket
	a METHOD_ADD
	b METHOD_REMOVE
	c METHOD_CHANGE
	d objectiveName
	e displayName
	f renderType
	g method
	a ()Ljava/lang/String; getObjectiveName
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	e ()I getMethod
	f ()Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
net/minecraft/network/protocol/game/PacketPlayOutScoreboardScore net/minecraft/network/protocol/game/ClientboundSetScorePacket
	a owner
	b objectiveName
	c score
	d method
	a ()Ljava/lang/String; getOwner
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Ljava/lang/String; getObjectiveName
	e ()I getScore
	f ()Lnet/minecraft/server/ScoreboardServer$Action; getMethod
net/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket
	a METHOD_ADD
	b METHOD_REMOVE
	c METHOD_CHANGE
	d METHOD_JOIN
	e METHOD_LEAVE
	f MAX_VISIBILITY_LENGTH
	g MAX_COLLISION_LENGTH
	h method
	i name
	j players
	k parameters
	a ()Laaf$a; getPlayerAction
	a (I)Z shouldHavePlayerList
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/scores/ScoreboardTeam;)Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam; createRemovePacket
	a (Lnet/minecraft/world/scores/ScoreboardTeam;Ljava/lang/String;Laaf$a;)Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam; createPlayerPacket
	a (Lnet/minecraft/world/scores/ScoreboardTeam;Z)Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam; createAddOrModifyPacket
	b (I)Z shouldHaveParameters
	d ()Laaf$a; getTeamAction
	e ()Ljava/lang/String; getName
	f ()Ljava/util/Collection; getPlayers
	g ()Ljava/util/Optional; getParameters
net/minecraft/network/protocol/game/PacketPlayOutSelectAdvancementTab net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket
	a tab
	a ()Lnet/minecraft/resources/MinecraftKey; getTab
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutServerDifficulty net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket
	a difficulty
	b locked
	a ()Z isLocked
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
net/minecraft/network/protocol/game/PacketPlayOutSetCooldown net/minecraft/network/protocol/game/ClientboundCooldownPacket
	a item
	b duration
	a ()Lnet/minecraft/world/item/Item; getItem
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getDuration
net/minecraft/network/protocol/game/PacketPlayOutSetSlot net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket
	a CARRIED_ITEM
	b PLAYER_INVENTORY
	c containerId
	d stateId
	e slot
	f itemStack
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getSlot
	e ()Lnet/minecraft/world/item/ItemStack; getItem
	f ()I getStateId
net/minecraft/network/protocol/game/PacketPlayOutSpawnEntity net/minecraft/network/protocol/game/ClientboundAddEntityPacket
	a MAGICAL_QUANTIZATION
	b LIMIT
	c id
	d uuid
	e type
	f x
	g y
	h z
	i xa
	j ya
	k za
	l xRot
	m yRot
	n yHeadRot
	o data
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Ljava/util/UUID; getUUID
	e ()Lnet/minecraft/world/entity/EntityTypes; getType
	f ()D getX
	g ()D getY
	h ()D getZ
	i ()D getXa
	j ()D getYa
	k ()D getZa
	l ()F getXRot
	m ()F getYRot
	n ()F getYHeadRot
	o ()I getData
net/minecraft/network/protocol/game/PacketPlayOutSpawnEntityExperienceOrb net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket
	a id
	b x
	c y
	d z
	e value
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()I getValue
net/minecraft/network/protocol/game/PacketPlayOutSpawnPosition net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket
	a pos
	b angle
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()F getAngle
net/minecraft/network/protocol/game/PacketPlayOutStatistic net/minecraft/network/protocol/game/ClientboundAwardStatsPacket
	a stats
	a ()Ljava/util/Map; getStats
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/stats/Statistic;)V writeStatCap
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/stats/StatisticWrapper;)Lnet/minecraft/stats/Statistic; readStatCap
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutStopSound net/minecraft/network/protocol/game/ClientboundStopSoundPacket
	a HAS_SOURCE
	b HAS_SOUND
	c name
	d source
	a ()Lnet/minecraft/resources/MinecraftKey; getName
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Lnet/minecraft/sounds/SoundCategory; getSource
net/minecraft/network/protocol/game/PacketPlayOutTabComplete net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket
	a id
	b suggestions
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Lcom/mojang/brigadier/suggestion/Suggestions; getSuggestions
net/minecraft/network/protocol/game/PacketPlayOutTileEntityData net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket
	a pos
	b type
	c tag
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; create
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Ljava/util/function/Function;)Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; create
	d ()Lnet/minecraft/world/level/block/entity/TileEntityTypes; getType
	e ()Lnet/minecraft/nbt/NBTTagCompound; getTag
net/minecraft/network/protocol/game/PacketPlayOutUnloadChunk net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket
	a pos
	a ()Lnet/minecraft/world/level/ChunkCoordIntPair; pos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutUpdateAttributes net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket
	a entityId
	b attributes
	a ()I getEntityId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Ljava/util/List; getValues
net/minecraft/network/protocol/game/PacketPlayOutUpdateAttributes$AttributeSnapshot net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot
	a attribute
	b base
	c modifiers
	a ()Lnet/minecraft/world/entity/ai/attributes/AttributeBase; getAttribute
	b ()D getBase
	c ()Ljava/util/Collection; getModifiers
net/minecraft/network/protocol/game/PacketPlayOutUpdateHealth net/minecraft/network/protocol/game/ClientboundSetHealthPacket
	a health
	b food
	c saturation
	a ()F getHealth
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getFood
	e ()F getSaturation
net/minecraft/network/protocol/game/PacketPlayOutUpdateTime net/minecraft/network/protocol/game/ClientboundSetTimePacket
	a gameTime
	b dayTime
	a ()J getGameTime
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()J getDayTime
net/minecraft/network/protocol/game/PacketPlayOutVehicleMove net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket
	a x
	b y
	c z
	d yRot
	e xRot
	a ()D getX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()D getY
	e ()D getZ
	f ()F getYRot
	g ()F getXRot
net/minecraft/network/protocol/game/PacketPlayOutViewCentre net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket
	a x
	b z
	a ()I getX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getZ
net/minecraft/network/protocol/game/PacketPlayOutViewDistance net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket
	a radius
	a ()I getRadius
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutWindowData net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket
	a containerId
	b id
	c value
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getId
	e ()I getValue
net/minecraft/network/protocol/game/PacketPlayOutWindowItems net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket
	a containerId
	b stateId
	c items
	d carriedItem
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Ljava/util/List; getItems
	e ()Lnet/minecraft/world/item/ItemStack; getCarriedItem
	f ()I getStateId
net/minecraft/network/protocol/game/PacketPlayOutWorldEvent net/minecraft/network/protocol/game/ClientboundLevelEventPacket
	a type
	b pos
	c data
	d globalEvent
	a ()Z isGlobalEvent
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getType
	e ()I getData
	f ()Lnet/minecraft/core/BlockPosition; getPos
net/minecraft/network/protocol/game/PacketPlayOutWorldParticles net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket
	a x
	b y
	c z
	d xDist
	e yDist
	f zDist
	g maxSpeed
	h count
	i overrideLimiter
	j particle
	a ()Z isOverrideLimiter
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/core/particles/Particle;)Lnet/minecraft/core/particles/ParticleParam; readParticle
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()F getXDist
	h ()F getYDist
	i ()F getZDist
	j ()F getMaxSpeed
	k ()I getCount
	l ()Lnet/minecraft/core/particles/ParticleParam; getParticle
net/minecraft/network/protocol/handshake/PacketHandshakingInListener net/minecraft/network/protocol/handshake/ServerHandshakePacketListener
	a (Lnet/minecraft/network/protocol/handshake/PacketHandshakingInSetProtocol;)V handleIntention
	b ()Lnet/minecraft/network/EnumProtocol; protocol
net/minecraft/network/protocol/handshake/PacketHandshakingInSetProtocol net/minecraft/network/protocol/handshake/ClientIntentionPacket
	a protocolVersion
	b hostName
	c port
	d intention
	e MAX_HOST_LENGTH
	a ()I protocolVersion
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/handshake/PacketHandshakingInListener;)V handle
	c ()Lnet/minecraft/network/EnumProtocol; nextProtocol
	d ()Ljava/lang/String; hostName
	e ()I port
	f ()Lnet/minecraft/network/protocol/handshake/ClientIntent; intention
net/minecraft/network/protocol/login/PacketLoginInEncryptionBegin net/minecraft/network/protocol/login/ServerboundKeyPacket
	a keybytes
	b encryptedChallenge
	a (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; getSecretKey
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginInListener;)V handle
	a ([BLjava/security/PrivateKey;)Z isChallengeValid
net/minecraft/network/protocol/login/PacketLoginInListener net/minecraft/network/protocol/login/ServerLoginPacketListener
	a (Lnet/minecraft/network/protocol/login/PacketLoginInEncryptionBegin;)V handleKey
	a (Lnet/minecraft/network/protocol/login/PacketLoginInStart;)V handleHello
	a (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket;)V handleCustomQueryPacket
	a (Lnet/minecraft/network/protocol/login/ServerboundLoginAcknowledgedPacket;)V handleLoginAcknowledgement
	b ()Lnet/minecraft/network/EnumProtocol; protocol
net/minecraft/network/protocol/login/PacketLoginInStart net/minecraft/network/protocol/login/ServerboundHelloPacket
	a name
	b profileId
	a ()Ljava/lang/String; name
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginInListener;)V handle
	d ()Ljava/util/UUID; profileId
net/minecraft/network/protocol/login/PacketLoginOutCustomPayload net/minecraft/network/protocol/login/ClientboundCustomQueryPacket
	a transactionId
	b payload
	c MAX_PAYLOAD_SIZE
	a ()I transactionId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutListener;)V handle
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/login/custom/CustomQueryPayload; readPayload
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/login/custom/DiscardedQueryPayload; readUnknownPayload
	d ()Lnet/minecraft/network/protocol/login/custom/CustomQueryPayload; payload
net/minecraft/network/protocol/login/PacketLoginOutDisconnect net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket
	a reason
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getReason
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutListener;)V handle
net/minecraft/network/protocol/login/PacketLoginOutEncryptionBegin net/minecraft/network/protocol/login/ClientboundHelloPacket
	a serverId
	b publicKey
	c challenge
	a ()Ljava/lang/String; getServerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutListener;)V handle
	d ()Ljava/security/PublicKey; getPublicKey
	e ()[B getChallenge
net/minecraft/network/protocol/login/PacketLoginOutListener net/minecraft/network/protocol/login/ClientLoginPacketListener
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutCustomPayload;)V handleCustomQuery
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutDisconnect;)V handleDisconnect
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutEncryptionBegin;)V handleHello
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutSetCompression;)V handleCompression
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutSuccess;)V handleGameProfile
	b ()Lnet/minecraft/network/EnumProtocol; protocol
net/minecraft/network/protocol/login/PacketLoginOutSetCompression net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket
	a compressionThreshold
	a ()I getCompressionThreshold
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutListener;)V handle
net/minecraft/network/protocol/login/PacketLoginOutSuccess net/minecraft/network/protocol/login/ClientboundGameProfilePacket
	a gameProfile
	a ()Lcom/mojang/authlib/GameProfile; getGameProfile
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutListener;)V handle
	c ()Lnet/minecraft/network/EnumProtocol; nextProtocol
net/minecraft/network/protocol/status/PacketStatusInListener net/minecraft/network/protocol/status/ServerStatusPacketListener
	a (Lnet/minecraft/network/protocol/status/PacketStatusInStart;)V handleStatusRequest
	b ()Lnet/minecraft/network/EnumProtocol; protocol
net/minecraft/network/protocol/status/PacketStatusInPing net/minecraft/network/protocol/status/ServerboundPingRequestPacket
	a time
	a ()J getTime
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/ServerPingPacketListener;)V handle
net/minecraft/network/protocol/status/PacketStatusInStart net/minecraft/network/protocol/status/ServerboundStatusRequestPacket
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/status/PacketStatusInListener;)V handle
net/minecraft/network/protocol/status/PacketStatusOutListener net/minecraft/network/protocol/status/ClientStatusPacketListener
	a (Lnet/minecraft/network/protocol/status/PacketStatusOutServerInfo;)V handleStatusResponse
	b ()Lnet/minecraft/network/EnumProtocol; protocol
net/minecraft/network/protocol/status/PacketStatusOutPong net/minecraft/network/protocol/status/ClientboundPongResponsePacket
	a time
	a ()J getTime
	a (Lnet/minecraft/network/ClientPongPacketListener;)V handle
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
net/minecraft/network/protocol/status/PacketStatusOutServerInfo net/minecraft/network/protocol/status/ClientboundStatusResponsePacket
	a status
	a ()Lnet/minecraft/network/protocol/status/ServerPing; status
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/status/PacketStatusOutListener;)V handle
net/minecraft/network/protocol/status/ServerPing net/minecraft/network/protocol/status/ServerStatus
	a CODEC
	b description
	c players
	d version
	e favicon
	f enforcesSecureChat
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; description
	b ()Ljava/util/Optional; players
	c ()Ljava/util/Optional; version
	d ()Ljava/util/Optional; favicon
	e ()Z enforcesSecureChat
net/minecraft/network/protocol/status/ServerPing$ServerData net/minecraft/network/protocol/status/ServerStatus$Version
	a CODEC
	b name
	c protocol
	a ()Lnet/minecraft/network/protocol/status/ServerPing$ServerData; current
	b ()Ljava/lang/String; name
	c ()I protocol
net/minecraft/network/protocol/status/ServerPing$ServerPingPlayerSample net/minecraft/network/protocol/status/ServerStatus$Players
	a CODEC
	b max
	c online
	d sample
	e PROFILE_CODEC
	a ()I max
	b ()I online
	c ()Ljava/util/List; sample
net/minecraft/network/syncher/DataWatcher net/minecraft/network/syncher/SynchedEntityData
	a LOGGER
	b ENTITY_ID_POOL
	c MAX_ID_VALUE
	d entity
	e itemsById
	f lock
	g isDirty
	a ()Z isDirty
	a (Ljava/lang/Class;Lnet/minecraft/network/syncher/DataWatcherSerializer;)Lnet/minecraft/network/syncher/DataWatcherObject; defineId
	a (Ljava/util/List;)V assignValues
	a (Lnet/minecraft/network/syncher/DataWatcher$Item;Laeh$b;)V assignValue
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)Z hasItem
	a (Lnet/minecraft/network/syncher/DataWatcherObject;Ljava/lang/Object;)V define
	a (Lnet/minecraft/network/syncher/DataWatcherObject;Ljava/lang/Object;Z)V set
	b ()Ljava/util/List; packDirty
	b (Lnet/minecraft/network/syncher/DataWatcherObject;)Ljava/lang/Object; get
	b (Lnet/minecraft/network/syncher/DataWatcherObject;Ljava/lang/Object;)V set
	c ()Ljava/util/List; getNonDefaultValues
	c (Lnet/minecraft/network/syncher/DataWatcherObject;)Lnet/minecraft/network/syncher/DataWatcher$Item; getItem
	c (Lnet/minecraft/network/syncher/DataWatcherObject;Ljava/lang/Object;)V createDataItem
	d ()Z isEmpty
net/minecraft/network/syncher/DataWatcher$Item net/minecraft/network/syncher/SynchedEntityData$DataItem
	a accessor
	b value
	c initialValue
	d dirty
	a ()Lnet/minecraft/network/syncher/DataWatcherObject; getAccessor
	a (Ljava/lang/Object;)V setValue
	a (Z)V setDirty
	b ()Ljava/lang/Object; getValue
	c ()Z isDirty
	d ()Z isSetToDefault
	e ()Laeh$b; value
net/minecraft/network/syncher/DataWatcherObject net/minecraft/network/syncher/EntityDataAccessor
	a id
	b serializer
	a ()I getId
	b ()Lnet/minecraft/network/syncher/DataWatcherSerializer; getSerializer
net/minecraft/network/syncher/DataWatcherRegistry net/minecraft/network/syncher/EntityDataSerializers
	A VECTOR3
	B QUATERNION
	C SERIALIZERS
	a BYTE
	b INT
	c LONG
	d FLOAT
	e STRING
	f COMPONENT
	g OPTIONAL_COMPONENT
	h ITEM_STACK
	i BLOCK_STATE
	j OPTIONAL_BLOCK_STATE
	k BOOLEAN
	l PARTICLE
	m ROTATIONS
	n BLOCK_POS
	o OPTIONAL_BLOCK_POS
	p DIRECTION
	q OPTIONAL_UUID
	r OPTIONAL_GLOBAL_POS
	s COMPOUND_TAG
	t VILLAGER_DATA
	u OPTIONAL_UNSIGNED_INT
	v POSE
	w CAT_VARIANT
	x FROG_VARIANT
	y PAINTING_VARIANT
	z SNIFFER_STATE
	a (I)Lnet/minecraft/network/syncher/DataWatcherSerializer; getSerializer
	a (Lnet/minecraft/network/syncher/DataWatcherSerializer;)V registerSerializer
	b (Lnet/minecraft/network/syncher/DataWatcherSerializer;)I getSerializedId
net/minecraft/network/syncher/DataWatcherSerializer net/minecraft/network/syncher/EntityDataSerializer
	a (I)Lnet/minecraft/network/syncher/DataWatcherObject; createAccessor
	a (Ljava/lang/Class;)Lnet/minecraft/network/syncher/DataWatcherSerializer; simpleEnum
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/core/Registry;)Lnet/minecraft/network/syncher/DataWatcherSerializer; simpleId
	a (Lnet/minecraft/network/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/network/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lso$b;Lso$a;)Lnet/minecraft/network/syncher/DataWatcherSerializer; simple
	b (Lso$b;Lso$a;)Lnet/minecraft/network/syncher/DataWatcherSerializer; optional
net/minecraft/recipebook/AutoRecipe net/minecraft/recipebook/ServerPlaceRecipe
	a stackedContents
	b inventory
	c menu
	d LOGGER
	a ()V clearGrid
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/crafting/RecipeHolder;Z)V recipeClicked
	a (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;)V moveItemToGrid
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;Z)V handleRecipeClicked
	a (ZIZ)I getStackSize
	b ()Z testClearGrid
	c ()I getAmountOfFreeSlotsInInventory
net/minecraft/recipebook/AutoRecipeAbstract net/minecraft/recipebook/PlaceRecipe
	a (IIILnet/minecraft/world/item/crafting/RecipeHolder;Ljava/util/Iterator;I)V placeRecipe
	a (Ljava/util/Iterator;IIII)V addItemToSlot
net/minecraft/resources/DynamicOpsWrapper net/minecraft/resources/DelegatingOps
	a delegate
net/minecraft/resources/MinecraftKey net/minecraft/resources/ResourceLocation
	a CODEC
	b NAMESPACE_SEPARATOR
	c DEFAULT_NAMESPACE
	d REALMS_NAMESPACE
	e ERROR_INVALID
	f namespace
	g path
	a ()Ljava/lang/String; getPath
	a (C)Z isAllowedInResourceLocation
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/MinecraftKey; read
	a (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; tryParse
	a (Ljava/lang/String;C)Lnet/minecraft/resources/MinecraftKey; of
	a (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; tryBuild
	a (Ljava/util/function/UnaryOperator;)Lnet/minecraft/resources/MinecraftKey; withPath
	a (Lnet/minecraft/resources/MinecraftKey;)I compareTo
	b ()Ljava/lang/String; getNamespace
	b (C)Z validPathChar
	b (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; read
	b (Ljava/lang/String;C)[Ljava/lang/String; decompose
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; toLanguageKey
	c ()Ljava/lang/String; toDebugFileName
	c (C)Z validNamespaceChar
	c (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; withPath
	c (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; assertValidNamespace
	d ()Ljava/lang/String; toLanguageKey
	d (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; withPrefix
	d (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; assertValidPath
	e ()Ljava/lang/String; toShortLanguageKey
	e (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; withSuffix
	f (Ljava/lang/String;)Ljava/lang/String; toLanguageKey
	g (Ljava/lang/String;)Z isValidPath
	h (Ljava/lang/String;)Z isValidNamespace
	i (Ljava/lang/String;)Z isValidResourceLocation
net/minecraft/server/AdvancementDataPlayer net/minecraft/server/PlayerAdvancements
	a LOGGER
	b GSON
	c playerList
	d playerSavePath
	e tree
	f progress
	g visible
	h progressChanged
	i rootsToUpdate
	j player
	k lastSelectedTab
	l isFirstPacket
	m codec
	a ()V stopListening
	a (Lnet/minecraft/advancements/AdvancementHolder;)V setSelectedTab
	a (Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;)Z award
	a (Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)V registerListener
	a (Lnet/minecraft/advancements/AdvancementHolder;Lnet/minecraft/advancements/AdvancementProgress;)V startProgress
	a (Lnet/minecraft/advancements/AdvancementNode;Ljava/util/Set;Ljava/util/Set;)V updateTreeVisibility
	a (Lnet/minecraft/server/AdvancementDataWorld;)V reload
	a (Lnet/minecraft/server/AdvancementDataWorld;Lafe$a;)V applyFrom
	a (Lnet/minecraft/server/level/EntityPlayer;)V setPlayer
	b ()V save
	b (Lnet/minecraft/advancements/AdvancementHolder;)Lnet/minecraft/advancements/AdvancementProgress; getOrStartProgress
	b (Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;)Z revoke
	b (Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)V removeListener
	b (Lnet/minecraft/server/AdvancementDataWorld;)V registerListeners
	b (Lnet/minecraft/server/level/EntityPlayer;)V flushDirty
	c ()Lafe$a; asData
	c (Lnet/minecraft/advancements/AdvancementHolder;)V markForVisibilityUpdate
	c (Lnet/minecraft/server/AdvancementDataWorld;)V checkForAutomaticTriggers
	d (Lnet/minecraft/advancements/AdvancementHolder;)V registerListeners
	d (Lnet/minecraft/server/AdvancementDataWorld;)V load
	e (Lnet/minecraft/advancements/AdvancementHolder;)V unregisterListeners
net/minecraft/server/AdvancementDataWorld net/minecraft/server/ServerAdvancementManager
	a LOGGER
	b GSON
	c advancements
	d tree
	e lootData
	a ()Lnet/minecraft/advancements/AdvancementTree; tree
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/advancements/AdvancementHolder; get
	b ()Ljava/util/Collection; getAllAdvancements
net/minecraft/server/CancelledPacketHandleException net/minecraft/server/RunningOnDifferentThreadException
	a RUNNING_ON_DIFFERENT_THREAD
net/minecraft/server/CustomFunctionData net/minecraft/server/ServerFunctionManager
	a NO_RECURSIVE_TRACES
	b TICK_FUNCTION_TAG
	c LOAD_FUNCTION_TAG
	d server
	e context
	f ticking
	g postReload
	h library
	a ()I getCommandLimit
	a (Ljava/util/Collection;Lnet/minecraft/resources/MinecraftKey;)V executeTagFunctions
	a (Lnet/minecraft/commands/CustomFunction;Lnet/minecraft/commands/CommandListenerWrapper;)I execute
	a (Lnet/minecraft/commands/CustomFunction;Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/CustomFunctionData$TraceCallbacks;Lnet/minecraft/nbt/NBTTagCompound;)I execute
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; get
	a (Lnet/minecraft/server/CustomFunctionManager;)V replaceLibrary
	b ()Lcom/mojang/brigadier/CommandDispatcher; getDispatcher
	b (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Collection; getTag
	b (Lnet/minecraft/server/CustomFunctionManager;)V postReload
	c ()V tick
	d ()Lnet/minecraft/commands/CommandListenerWrapper; getGameLoopSender
	e ()Ljava/lang/Iterable; getFunctionNames
	f ()Ljava/lang/Iterable; getTagNames
net/minecraft/server/CustomFunctionData$ExecutionContext net/minecraft/server/ServerFunctionManager$ExecutionContext
	b depth
	c tracer
	d commandQueue
	e nestedCalls
	f abortCurrentDepth
	a (Ljava/lang/String;)V reportError
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/commands/CommandListenerWrapper; wrapSender
	a (Lnet/minecraft/commands/CustomFunction;Lnet/minecraft/commands/CommandListenerWrapper;)V delayFunctionCall
	b (Lnet/minecraft/commands/CustomFunction;Lnet/minecraft/commands/CommandListenerWrapper;)I runTopCommand
net/minecraft/server/CustomFunctionData$ExecutionContext$AbortingReturnValueConsumer net/minecraft/server/ServerFunctionManager$ExecutionContext$AbortingReturnValueConsumer
	b wrapped
net/minecraft/server/CustomFunctionData$QueuedCommand net/minecraft/server/ServerFunctionManager$QueuedCommand
	a sender
	b depth
	c entry
	a (Lnet/minecraft/server/CustomFunctionData;Ljava/util/Deque;ILnet/minecraft/server/CustomFunctionData$TraceCallbacks;)V execute
net/minecraft/server/CustomFunctionData$TraceCallbacks net/minecraft/server/ServerFunctionManager$TraceCallbacks
	a (ILjava/lang/String;)V onCommand
	a (ILjava/lang/String;I)V onReturn
	a (ILnet/minecraft/resources/MinecraftKey;I)V onCall
	b (ILjava/lang/String;)V onError
net/minecraft/server/CustomFunctionManager net/minecraft/server/ServerFunctionLibrary
	a LOGGER
	b LISTER
	c functions
	d tagsLoader
	e tags
	f functionCompilationLevel
	g dispatcher
	a ()Ljava/util/Map; getFunctions
	a (Lann$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; getFunction
	a (Lnet/minecraft/server/packs/resources/IResource;)Ljava/util/List; readLines
	b ()Ljava/lang/Iterable; getAvailableTags
	b (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Collection; getTag
net/minecraft/server/DataPackResources net/minecraft/server/ReloadableServerResources
	a LOGGER
	b DATA_RELOAD_INITIAL_TASK
	c commandBuildContext
	d commands
	e recipes
	f tagManager
	g lootData
	h advancements
	i functionLibrary
	a ()Lnet/minecraft/server/CustomFunctionManager; getFunctionLibrary
	a (Lnet/minecraft/core/IRegistryCustom;)V updateRegistryTags
	a (Lnet/minecraft/core/IRegistryCustom;Laqj$a;)V updateRegistryTags
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/core/IRegistryCustom$Dimension;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/commands/CommandDispatcher$ServerType;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; loadResources
	b ()Lnet/minecraft/world/level/storage/loot/LootDataManager; getLootData
	c ()Lnet/minecraft/world/item/crafting/CraftingManager; getRecipeManager
	d ()Lnet/minecraft/commands/CommandDispatcher; getCommands
	e ()Lnet/minecraft/server/AdvancementDataWorld; getAdvancements
	f ()Ljava/util/List; listeners
net/minecraft/server/DebugOutputStream net/minecraft/server/DebugLoggedPrintStream
	b LOGGER
	a (Ljava/lang/String;)V logLine
net/minecraft/server/DispenserRegistry net/minecraft/server/Bootstrap
	a STDOUT
	b bootstrapDuration
	c isBootstrapped
	d LOGGER
	a ()V bootStrap
	a (Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V checkTranslations
	a (Ljava/lang/String;)V realStdoutPrintln
	a (Ljava/util/Set;)V checkGameruleTranslations
	a (Ljava/util/function/Supplier;)V checkBootstrapCalled
	b ()Ljava/util/Set; getMissingTranslations
	b (Ljava/util/function/Supplier;)Ljava/lang/RuntimeException; createBootstrapException
	c ()V validate
	d ()V wrapStreams
net/minecraft/server/EULA net/minecraft/server/Eula
	a LOGGER
	b file
	c agreed
	a ()Z hasAgreedToEULA
	b ()Z readFile
	c ()V saveDefaults
net/minecraft/server/IMinecraftServer net/minecraft/server/ServerInterface
	J ()[Ljava/lang/String; getPlayerNames
	a ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; getProperties
	a (Ljava/lang/String;)Ljava/lang/String; runCommand
	b ()Ljava/lang/String; getServerIp
	d ()I getServerPort
	f ()Ljava/lang/String; getServerName
	q ()Ljava/lang/String; getLevelIdName
	s ()Ljava/lang/String; getPluginNames
net/minecraft/server/RedirectStream net/minecraft/server/LoggedPrintStream
	a name
	b LOGGER
	a (Ljava/lang/String;)V logLine
net/minecraft/server/ScoreboardServer net/minecraft/server/ServerScoreboard
	a server
	b trackedObjectives
	c dirtyListeners
	a ()V setDirty
	a (Ljava/lang/Runnable;)V addDirtyListener
	a (Ljava/lang/String;)V onPlayerRemoved
	a (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardObjective;)V onPlayerScoreRemoved
	a (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardTeam;)Z addPlayerToTeam
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/scores/PersistentScoreboard; createData
	a (Lnet/minecraft/world/scores/DisplaySlot;Lnet/minecraft/world/scores/ScoreboardObjective;)V setDisplayObjective
	a (Lnet/minecraft/world/scores/ScoreboardObjective;)V onObjectiveAdded
	a (Lnet/minecraft/world/scores/ScoreboardScore;)V onScoreChanged
	a (Lnet/minecraft/world/scores/ScoreboardTeam;)V onTeamAdded
	b ()Lebr$a; dataFactory
	b (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardTeam;)V removePlayerFromTeam
	b (Lnet/minecraft/world/scores/ScoreboardObjective;)V onObjectiveChanged
	b (Lnet/minecraft/world/scores/ScoreboardTeam;)V onTeamChanged
	c (Lnet/minecraft/world/scores/ScoreboardObjective;)V onObjectiveRemoved
	c (Lnet/minecraft/world/scores/ScoreboardTeam;)V onTeamRemoved
	d (Lnet/minecraft/world/scores/ScoreboardObjective;)Ljava/util/List; getStartTrackingPackets
	e (Lnet/minecraft/world/scores/ScoreboardObjective;)V startTrackingObjective
	f (Lnet/minecraft/world/scores/ScoreboardObjective;)Ljava/util/List; getStopTrackingPackets
	g (Lnet/minecraft/world/scores/ScoreboardObjective;)V stopTrackingObjective
	h (Lnet/minecraft/world/scores/ScoreboardObjective;)I getObjectiveDisplaySlotCount
	i ()Lnet/minecraft/world/scores/PersistentScoreboard; createData
net/minecraft/server/ScoreboardServer$Action net/minecraft/server/ServerScoreboard$Method
	a CHANGE
	b REMOVE
	c $VALUES
	a ()[Lnet/minecraft/server/ScoreboardServer$Action; $values
net/minecraft/server/ServerCommand net/minecraft/server/ConsoleInput
	a msg
	b source
net/minecraft/server/bossevents/BossBattleCustom net/minecraft/server/bossevents/CustomBossEvent
	h id
	i players
	j value
	k max
	a ()Lnet/minecraft/resources/MinecraftKey; getTextId
	a (I)V setValue
	a (Ljava/util/Collection;)Z setPlayers
	a (Ljava/util/UUID;)V addOfflinePlayer
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/server/bossevents/BossBattleCustom; load
	a (Lnet/minecraft/server/level/EntityPlayer;)V addPlayer
	b ()V removeAllPlayers
	b (I)V setMax
	b (Lnet/minecraft/server/level/EntityPlayer;)V removePlayer
	c ()I getValue
	c (Lnet/minecraft/server/level/EntityPlayer;)V onPlayerConnect
	d ()I getMax
	d (Lnet/minecraft/server/level/EntityPlayer;)V onPlayerDisconnect
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	f ()Lnet/minecraft/nbt/NBTTagCompound; save
net/minecraft/server/bossevents/BossBattleCustomData net/minecraft/server/bossevents/CustomBossEvents
	a events
	a ()Ljava/util/Collection; getIds
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/server/bossevents/BossBattleCustom; get
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/server/bossevents/BossBattleCustom; create
	a (Lnet/minecraft/server/bossevents/BossBattleCustom;)V remove
	a (Lnet/minecraft/server/level/EntityPlayer;)V onPlayerConnect
	b ()Ljava/util/Collection; getEvents
	b (Lnet/minecraft/server/level/EntityPlayer;)V onPlayerDisconnect
	c ()Lnet/minecraft/nbt/NBTTagCompound; save
net/minecraft/server/commands/CommandAdvancement net/minecraft/server/commands/AdvancementCommands
	a SUGGEST_ADVANCEMENTS
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/advancements/AdvancementHolder;Lnet/minecraft/server/commands/CommandAdvancement$Filter;)Ljava/util/List; getAdvancements
	a (Lnet/minecraft/advancements/AdvancementNode;Ljava/util/List;)V addChildren
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/commands/CommandAdvancement$Action;Ljava/util/Collection;)I perform
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/commands/CommandAdvancement$Action;Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;)I performCriterion
net/minecraft/server/commands/CommandAdvancement$Action net/minecraft/server/commands/AdvancementCommands$Action
	a GRANT
	b REVOKE
	c key
	d $VALUES
	a ()Ljava/lang/String; getKey
	a (Lnet/minecraft/server/level/EntityPlayer;Ljava/lang/Iterable;)I perform
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/advancements/AdvancementHolder;)Z perform
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;)Z performCriterion
	b ()[Lnet/minecraft/server/commands/CommandAdvancement$Action; $values
net/minecraft/server/commands/CommandAdvancement$Filter net/minecraft/server/commands/AdvancementCommands$Mode
	a ONLY
	b THROUGH
	c FROM
	d UNTIL
	e EVERYTHING
	f parents
	g children
	h $VALUES
	a ()[Lnet/minecraft/server/commands/CommandAdvancement$Filter; $values
net/minecraft/server/commands/CommandAttribute net/minecraft/server/commands/AttributeCommand
	a ERROR_NOT_LIVING_ENTITY
	b ERROR_NO_SUCH_ATTRIBUTE
	c ERROR_NO_SUCH_MODIFIER
	d ERROR_MODIFIER_ALREADY_PRESENT
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;D)I getAttributeValue
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Ljava/util/UUID;)I removeModifier
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Ljava/util/UUID;D)I getAttributeModifier
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Ljava/util/UUID;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)I addModifier
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/network/chat/IChatBaseComponent; getAttributeDescription
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/EntityLiving; getLivingEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable; getAttributeInstance
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;D)I getAttributeBase
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/EntityLiving; getEntityWithAttribute
	c (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;D)I setAttributeBase
net/minecraft/server/commands/CommandBan net/minecraft/server/commands/BanPlayerCommands
	a ERROR_ALREADY_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/network/chat/IChatBaseComponent;)I banPlayers
net/minecraft/server/commands/CommandBanIp net/minecraft/server/commands/BanIpCommands
	a ERROR_INVALID_IP
	b ERROR_ALREADY_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/network/chat/IChatBaseComponent;)I banIpOrName
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/network/chat/IChatBaseComponent;)I banIp
net/minecraft/server/commands/CommandBanList net/minecraft/server/commands/BanListCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I showList
net/minecraft/server/commands/CommandBossBar net/minecraft/server/commands/BossBarCommands
	a SUGGEST_BOSS_BAR
	b ERROR_ALREADY_EXISTS
	c ERROR_DOESNT_EXIST
	d ERROR_NO_PLAYER_CHANGE
	e ERROR_NO_NAME_CHANGE
	f ERROR_NO_COLOR_CHANGE
	g ERROR_NO_STYLE_CHANGE
	h ERROR_NO_VALUE_CHANGE
	i ERROR_NO_MAX_CHANGE
	j ERROR_ALREADY_HIDDEN
	k ERROR_ALREADY_VISIBLE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/bossevents/BossBattleCustom; getBossBar
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I listBars
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/chat/IChatBaseComponent;)I createBar
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;)I getValue
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;I)I setValue
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;Ljava/util/Collection;)I setPlayers
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;Lnet/minecraft/network/chat/IChatBaseComponent;)I setName
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;Lnet/minecraft/world/BossBattle$BarColor;)I setColor
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;Lnet/minecraft/world/BossBattle$BarStyle;)I setStyle
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;Z)I setVisible
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;)I getMax
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;I)I setMax
	c (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;)I getVisible
	d (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;)I getPlayers
	e (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;)I removeBar
net/minecraft/server/commands/CommandClear net/minecraft/server/commands/ClearInventoryCommands
	a ERROR_SINGLE
	b ERROR_MULTIPLE
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/function/Predicate;I)I clearInventory
net/minecraft/server/commands/CommandClone net/minecraft/server/commands/CloneCommands
	a FILTER_AIR
	b ERROR_OVERLAP
	c ERROR_AREA_TOO_LARGE
	d ERROR_FAILED
	a (Lagi$b;Lagi$b;Lagi$b;Lagi$b;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrapWithCloneMode
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/level/WorldServer;Ljava/lang/String;)Lagi$c; getLoadedDimensionAndPosition
	a (Lnet/minecraft/commands/CommandBuildContext;Lagi$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; beginEndDestinationAndModeSuffix
	a (Lnet/minecraft/commands/CommandBuildContext;Lagi$b;Lagi$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; destinationAndModeSuffix
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lagi$c;Lagi$c;Lagi$c;Ljava/util/function/Predicate;Lnet/minecraft/server/commands/CommandClone$Mode;)I clone
net/minecraft/server/commands/CommandClone$CommandCloneStoredTileEntity net/minecraft/server/commands/CloneCommands$CloneBlockInfo
	a pos
	b state
	c tag
net/minecraft/server/commands/CommandClone$Mode net/minecraft/server/commands/CloneCommands$Mode
	a FORCE
	b MOVE
	c NORMAL
	d canOverlap
	e $VALUES
	a ()Z canOverlap
	b ()[Lnet/minecraft/server/commands/CommandClone$Mode; $values
net/minecraft/server/commands/CommandDatapack net/minecraft/server/commands/DataPackCommand
	a ERROR_UNKNOWN_PACK
	b ERROR_PACK_ALREADY_ENABLED
	c ERROR_PACK_ALREADY_DISABLED
	d ERROR_PACK_FEATURES_NOT_ENABLED
	e SELECTED_PACKS
	f UNSELECTED_PACKS
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lnet/minecraft/server/packs/repository/ResourcePackLoader; getPack
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I listPacks
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/packs/repository/ResourcePackLoader;)I disablePack
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/packs/repository/ResourcePackLoader;Lagk$a;)I enablePack
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I listAvailablePacks
	c (Lnet/minecraft/commands/CommandListenerWrapper;)I listEnabledPacks
net/minecraft/server/commands/CommandDebug net/minecraft/server/commands/DebugCommand
	a LOGGER
	b ERROR_NOT_RUNNING
	c ERROR_ALREADY_RUNNING
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I start
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I traceFunction
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I stop
net/minecraft/server/commands/CommandDeop net/minecraft/server/commands/DeOpCommands
	a ERROR_NOT_OP
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I deopPlayers
net/minecraft/server/commands/CommandDifficulty net/minecraft/server/commands/DifficultyCommand
	a ERROR_ALREADY_DIFFICULT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/EnumDifficulty;)I setDifficulty
net/minecraft/server/commands/CommandEffect net/minecraft/server/commands/EffectCommands
	a ERROR_GIVE_FAILED
	b ERROR_CLEAR_EVERYTHING_FAILED
	c ERROR_CLEAR_SPECIFIC_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I clearEffects
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/core/Holder;)I clearEffect
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/core/Holder;Ljava/lang/Integer;IZ)I giveEffect
net/minecraft/server/commands/CommandEnchant net/minecraft/server/commands/EnchantCommand
	a ERROR_NOT_LIVING_ENTITY
	b ERROR_NO_ITEM
	c ERROR_INCOMPATIBLE
	d ERROR_LEVEL_TOO_HIGH
	e ERROR_NOTHING_HAPPENED
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/core/Holder;I)I enchant
net/minecraft/server/commands/CommandExecute net/minecraft/server/commands/ExecuteCommand
	a MAX_TEST_AREA
	b ERROR_AREA_TOO_LARGE
	c ERROR_CONDITIONAL_FAILED
	d ERROR_CONDITIONAL_FAILED_COUNT
	e CALLBACK_CHAINER
	f SUGGEST_PREDICATE
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z checkScore
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Z checkScore
	a (Lcom/mojang/brigadier/context/CommandContext;Z)I checkIfRegions
	a (Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection; expect
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLagv$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addConditional
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder; addIfBlocksConditional
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; createRelationOperations
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;ZLnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addConditionals
	a (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrapStores
	a (Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier; expandOneToOneEntityRelation
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lhe$c;)Lnet/minecraft/commands/CommandListenerWrapper; spawnEntityAndRedirect
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;Z)Lnet/minecraft/commands/CommandListenerWrapper; storeValue
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;ZZ)Lnet/minecraft/commands/CommandListenerWrapper; storeValue
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/commands/data/CommandDataAccessor;Lej$g;Ljava/util/function/IntFunction;Z)Lnet/minecraft/commands/CommandListenerWrapper; storeData
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z checkCustomPredicate
	a (Lnet/minecraft/server/commands/data/CommandDataAccessor;Lej$g;)I checkMatchingData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z isChunkLoaded
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Z)Ljava/util/OptionalInt; checkRegions
	a (ZLagv$a;)Lcom/mojang/brigadier/Command; createNumericConditionalHandler
	b (Lcom/mojang/brigadier/context/CommandContext;Z)I checkUnlessRegions
	b (Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier; expandOneToManyEntityRelation
	c (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; checkRegions
net/minecraft/server/commands/CommandFill net/minecraft/server/commands/FillCommand
	a ERROR_AREA_TOO_LARGE
	b HOLLOW_CORE
	c ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/commands/arguments/blocks/ArgumentTileLocation;Lnet/minecraft/server/commands/CommandFill$Mode;Ljava/util/function/Predicate;)I fillBlocks
net/minecraft/server/commands/CommandFill$Mode net/minecraft/server/commands/FillCommand$Mode
	a REPLACE
	b OUTLINE
	c HOLLOW
	d DESTROY
	e filter
	f $VALUES
	a ()[Lnet/minecraft/server/commands/CommandFill$Mode; $values
net/minecraft/server/commands/CommandForceload net/minecraft/server/commands/ForceLoadCommand
	a MAX_CHUNK_LIMIT
	b ERROR_TOO_MANY_CHUNKS
	c ERROR_NOT_TICKING
	d ERROR_ALL_ADDED
	e ERROR_NONE_REMOVED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I listForceLoad
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/level/BlockPosition2D;)I queryForceLoad
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/level/BlockPosition2D;Lnet/minecraft/server/level/BlockPosition2D;Z)I changeForceLoad
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I removeAll
net/minecraft/server/commands/CommandFunction net/minecraft/server/commands/FunctionCommand
	a SUGGEST_FUNCTION
	b ERROR_ARGUMENT_NOT_COMPOUND
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lej$g;Lnet/minecraft/server/commands/data/CommandDataAccessor;)Lnet/minecraft/nbt/NBTTagCompound; getArgumentTag
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/nbt/NBTTagCompound;)I runFunction
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/commands/CustomFunction;Lnet/minecraft/nbt/NBTTagCompound;)Laha$a; runFunction
net/minecraft/server/commands/CommandGamemode net/minecraft/server/commands/GameModeCommand
	a PERMISSION_LEVEL
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lnet/minecraft/world/level/EnumGamemode;)I setMode
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/EnumGamemode;)V logGamemodeChange
net/minecraft/server/commands/CommandGamemodeDefault net/minecraft/server/commands/DefaultGameModeCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/level/EnumGamemode;)I setMode
net/minecraft/server/commands/CommandGamerule net/minecraft/server/commands/GameRuleCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/level/GameRules$GameRuleKey;)I setRule
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/level/GameRules$GameRuleKey;)I queryRule
net/minecraft/server/commands/CommandGive net/minecraft/server/commands/GiveCommand
	a MAX_ALLOWED_ITEMSTACKS
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/commands/arguments/item/ArgumentPredicateItemStack;Ljava/util/Collection;I)I giveItem
net/minecraft/server/commands/CommandHelp net/minecraft/server/commands/HelpCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/commands/CommandIdleTimeout net/minecraft/server/commands/SetPlayerIdleTimeoutCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;I)I setIdleTimeout
net/minecraft/server/commands/CommandKick net/minecraft/server/commands/KickCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/network/chat/IChatBaseComponent;)I kickPlayers
net/minecraft/server/commands/CommandKill net/minecraft/server/commands/KillCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I kill
net/minecraft/server/commands/CommandList net/minecraft/server/commands/ListPlayersCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I listPlayers
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/function/Function;)I format
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I listPlayersWithUuids
net/minecraft/server/commands/CommandLocate net/minecraft/server/commands/LocateCommand
	a LOGGER
	b ERROR_STRUCTURE_NOT_FOUND
	c ERROR_STRUCTURE_INVALID
	d ERROR_BIOME_NOT_FOUND
	e ERROR_POI_NOT_FOUND
	f MAX_STRUCTURE_SEARCH_RADIUS
	g MAX_BIOME_SEARCH_RADIUS
	h BIOME_SAMPLE_RESOLUTION_HORIZONTAL
	i BIOME_SAMPLE_RESOLUTION_VERTICAL
	j POI_SEARCH_RADIUS
	a (IIII)F dist
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lcom/mojang/datafixers/util/Pair;)Ljava/lang/String; getElementName
	a (Leu$c;Lnet/minecraft/core/IRegistry;)Ljava/util/Optional; getHolders
	a (Lnet/minecraft/commands/CommandListenerWrapper;Let$c;)I locateBiome
	a (Lnet/minecraft/commands/CommandListenerWrapper;Let$c;Lnet/minecraft/core/BlockPosition;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I showLocateResult
	a (Lnet/minecraft/commands/CommandListenerWrapper;Leu$c;)I locateStructure
	a (Lnet/minecraft/commands/CommandListenerWrapper;Leu$c;Lnet/minecraft/core/BlockPosition;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I showLocateResult
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/lang/String;Ljava/time/Duration;)I showLocateResult
	b (Lnet/minecraft/commands/CommandListenerWrapper;Let$c;)I locatePoi
net/minecraft/server/commands/CommandLoot net/minecraft/server/commands/LootCommand
	a SUGGEST_LOOT_TABLE
	b ERROR_NO_HELD_ITEMS
	c ERROR_NO_LOOT_TABLE
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lahl$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addTargets
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Lahl$b;)I dropBlockLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/MinecraftKey;Lahl$b;)I dropChestLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Lahl$b;)I dropFishingLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/level/storage/loot/LootParams;Lahl$b;)I drop
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/entity/Entity;Lahl$b;)I dropKillLoot
	a (Ljava/util/Collection;IILjava/util/List;Lahl$a;)I entityReplace
	a (Ljava/util/Collection;Ljava/util/List;Lahl$a;)I playerGive
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/List;)V callback
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/List;Lnet/minecraft/resources/MinecraftKey;)V callback
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/IInventory; getContainer
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;IILjava/util/List;Lahl$a;)I blockReplace
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;Ljava/util/List;Lahl$a;)I blockDistribute
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/item/ItemStack; getSourceHandItem
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/phys/Vec3D;Ljava/util/List;Lahl$a;)I dropInWorld
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/item/ItemStack;)Z distributeToContainer
	a (Lnet/minecraft/world/entity/Entity;Ljava/util/List;IILjava/util/List;)V setSlots
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z canMergeItems
net/minecraft/server/commands/CommandMe net/minecraft/server/commands/EmoteCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/commands/CommandOp net/minecraft/server/commands/OpCommand
	a ERROR_ALREADY_OP
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I opPlayers
net/minecraft/server/commands/CommandPardon net/minecraft/server/commands/PardonCommand
	a ERROR_NOT_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I pardonPlayers
net/minecraft/server/commands/CommandPardonIP net/minecraft/server/commands/PardonIpCommand
	a ERROR_INVALID
	b ERROR_NOT_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I unban
net/minecraft/server/commands/CommandParticle net/minecraft/server/commands/ParticleCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/particles/ParticleParam;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;FIZLjava/util/Collection;)I sendParticles
net/minecraft/server/commands/CommandPlaySound net/minecraft/server/commands/PlaySoundCommand
	a ERROR_TOO_FAR
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/sounds/SoundCategory;Lnet/minecraft/world/phys/Vec3D;FFF)I playSound
	a (Lnet/minecraft/sounds/SoundCategory;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; source
net/minecraft/server/commands/CommandPublish net/minecraft/server/commands/PublishCommand
	a ERROR_FAILED
	b ERROR_ALREADY_PUBLISHED
	a (I)Lnet/minecraft/network/chat/IChatMutableComponent; getSuccessMessage
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;IZLnet/minecraft/world/level/EnumGamemode;)I publish
net/minecraft/server/commands/CommandRecipe net/minecraft/server/commands/RecipeCommand
	a ERROR_GIVE_FAILED
	b ERROR_TAKE_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/Collection;)I giveRecipes
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/Collection;)I takeRecipes
net/minecraft/server/commands/CommandReload net/minecraft/server/commands/ReloadCommand
	a LOGGER
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ljava/util/Collection;Lnet/minecraft/commands/CommandListenerWrapper;)V reloadPacks
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;Lnet/minecraft/world/level/storage/SaveData;Ljava/util/Collection;)Ljava/util/Collection; discoverNewPacks
net/minecraft/server/commands/CommandSaveAll net/minecraft/server/commands/SaveAllCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Z)I saveAll
net/minecraft/server/commands/CommandSaveOff net/minecraft/server/commands/SaveOffCommand
	a ERROR_ALREADY_OFF
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/commands/CommandSaveOn net/minecraft/server/commands/SaveOnCommand
	a ERROR_ALREADY_ON
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/commands/CommandSay net/minecraft/server/commands/SayCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/commands/CommandSchedule net/minecraft/server/commands/ScheduleCommand
	a ERROR_SAME_TICK
	b ERROR_CANT_REMOVE
	c SUGGEST_SCHEDULE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lcom/mojang/datafixers/util/Pair;IZ)I schedule
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I remove
net/minecraft/server/commands/CommandScoreboard net/minecraft/server/commands/ScoreboardCommand
	a ERROR_OBJECTIVE_ALREADY_EXISTS
	b ERROR_DISPLAY_SLOT_ALREADY_EMPTY
	c ERROR_DISPLAY_SLOT_ALREADY_SET
	d ERROR_TRIGGER_ALREADY_ENABLED
	e ERROR_NOT_TRIGGER
	f ERROR_NO_VALUE
	a ()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; createRenderTypeModify
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I listTrackedPlayers
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I listTrackedPlayerScores
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardObjective;)I getScore
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/world/scores/criteria/IScoreboardCriteria;Lnet/minecraft/network/chat/IChatBaseComponent;)I addObjective
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I resetScores
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTriggers
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;)I enableTrigger
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;I)I setScore
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;Len$a;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;)I performOperation
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/DisplaySlot;)I clearDisplaySlot
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/DisplaySlot;Lnet/minecraft/world/scores/ScoreboardObjective;)I setDisplaySlot
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardObjective;)I removeObjective
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardObjective;Lnet/minecraft/network/chat/IChatBaseComponent;)I setDisplayName
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardObjective;Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay;)I setRenderType
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I listObjectives
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;)I resetScore
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;I)I addScore
	c (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;I)I removeScore
net/minecraft/server/commands/CommandSeed net/minecraft/server/commands/SeedCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;Z)V register
net/minecraft/server/commands/CommandSetBlock net/minecraft/server/commands/SetBlockCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/commands/arguments/blocks/ArgumentTileLocation;Lnet/minecraft/server/commands/CommandSetBlock$Mode;Ljava/util/function/Predicate;)I setBlock
net/minecraft/server/commands/CommandSetBlock$Filter net/minecraft/server/commands/SetBlockCommand$Filter
net/minecraft/server/commands/CommandSetBlock$Mode net/minecraft/server/commands/SetBlockCommand$Mode
	a REPLACE
	b DESTROY
	c $VALUES
	a ()[Lnet/minecraft/server/commands/CommandSetBlock$Mode; $values
net/minecraft/server/commands/CommandSetWorldSpawn net/minecraft/server/commands/SetWorldSpawnCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;F)I setSpawn
net/minecraft/server/commands/CommandSpawnpoint net/minecraft/server/commands/SetSpawnCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/core/BlockPosition;F)I setSpawn
net/minecraft/server/commands/CommandSpectate net/minecraft/server/commands/SpectateCommand
	a ERROR_SELF
	b ERROR_NOT_SPECTATOR
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/EntityPlayer;)I spectate
net/minecraft/server/commands/CommandSpreadPlayers net/minecraft/server/commands/SpreadPlayersCommand
	a MAX_ITERATION_COUNT
	b ERROR_FAILED_TO_SPREAD_TEAMS
	c ERROR_FAILED_TO_SPREAD_ENTITIES
	d ERROR_INVALID_MAX_HEIGHT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ljava/util/Collection;)I getNumberOfTeams
	a (Ljava/util/Collection;Lnet/minecraft/server/level/WorldServer;[Laip$a;IZ)D setPlayerPositions
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/phys/Vec2F;FFIZLjava/util/Collection;)I spreadPlayers
	a (Lnet/minecraft/util/RandomSource;IDDDD)[Laip$a; createInitialPositions
	a (Lnet/minecraft/world/phys/Vec2F;DLnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;DDDDI[Laip$a;Z)V spreadPositions
net/minecraft/server/commands/CommandStop net/minecraft/server/commands/StopCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/commands/CommandStopSound net/minecraft/server/commands/StopSoundCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/sounds/SoundCategory;Lnet/minecraft/resources/MinecraftKey;)I stopSound
net/minecraft/server/commands/CommandSummon net/minecraft/server/commands/SummonCommand
	a ERROR_FAILED
	b ERROR_DUPLICATE_UUID
	c INVALID_POSITION
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lhe$c;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/nbt/NBTTagCompound;Z)Lnet/minecraft/world/entity/Entity; createEntity
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lhe$c;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/nbt/NBTTagCompound;Z)I spawnEntity
net/minecraft/server/commands/CommandTag net/minecraft/server/commands/TagCommand
	a ERROR_ADD_FAILED
	b ERROR_REMOVE_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ljava/util/Collection;)Ljava/util/Collection; getTags
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I listTags
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Ljava/lang/String;)I addTag
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Ljava/lang/String;)I removeTag
net/minecraft/server/commands/CommandTeam net/minecraft/server/commands/TeamCommand
	a ERROR_TEAM_ALREADY_EXISTS
	b ERROR_TEAM_ALREADY_EMPTY
	c ERROR_TEAM_ALREADY_NAME
	d ERROR_TEAM_ALREADY_COLOR
	e ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED
	f ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED
	g ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED
	h ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED
	i ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED
	j ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED
	k ERROR_TEAM_COLLISION_UNCHANGED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I listTeams
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I createTeam
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/network/chat/IChatBaseComponent;)I createTeam
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I leaveTeam
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;)I emptyTeam
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Ljava/util/Collection;)I joinTeam
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/EnumChatFormat;)I setColor
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/network/chat/IChatBaseComponent;)I setDisplayName
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility;)I setNametagVisibility
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush;)I setCollision
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Z)I setFriendlySight
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;)I deleteTeam
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/network/chat/IChatBaseComponent;)I setPrefix
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility;)I setDeathMessageVisibility
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Z)I setFriendlyFire
	c (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;)I listMembers
	c (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/network/chat/IChatBaseComponent;)I setSuffix
net/minecraft/server/commands/CommandTeamMsg net/minecraft/server/commands/TeamMsgCommand
	a SUGGEST_STYLE
	b ERROR_NOT_ON_TEAM
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/scores/ScoreboardTeam;Ljava/util/List;Lnet/minecraft/network/chat/PlayerChatMessage;)V sendMessage
net/minecraft/server/commands/CommandTeleport net/minecraft/server/commands/TeleportCommand
	a INVALID_POSITION
	a (D)Ljava/lang/String; formatDouble
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/commands/arguments/coordinates/IVectorPosition;Lnet/minecraft/commands/arguments/coordinates/IVectorPosition;Laiw$a;)I teleportToPos
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/entity/Entity;)I teleportToEntity
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/WorldServer;DDDLjava/util/Set;FFLaiw$a;)V performTeleport
net/minecraft/server/commands/CommandTell net/minecraft/server/commands/MsgCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/network/chat/PlayerChatMessage;)V sendMessage
net/minecraft/server/commands/CommandTellRaw net/minecraft/server/commands/TellRawCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/commands/CommandTime net/minecraft/server/commands/TimeCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;I)I setTime
	a (Lnet/minecraft/server/level/WorldServer;)I getDayTime
	b (Lnet/minecraft/commands/CommandListenerWrapper;I)I addTime
	c (Lnet/minecraft/commands/CommandListenerWrapper;I)I queryTime
net/minecraft/server/commands/CommandTitle net/minecraft/server/commands/TitleCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I clearTitle
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;III)I setTimes
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/lang/String;Ljava/util/function/Function;)I showTitle
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I resetTitle
net/minecraft/server/commands/CommandTrigger net/minecraft/server/commands/TriggerCommand
	a ERROR_NOT_PRIMED
	b ERROR_INVALID_OBJECTIVE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestObjectives
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardScore;)I simpleTrigger
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardScore;I)I addValue
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/scores/ScoreboardObjective;)Lnet/minecraft/world/scores/ScoreboardScore; getScore
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardScore;I)I setValue
net/minecraft/server/commands/CommandWeather net/minecraft/server/commands/WeatherCommand
	a DEFAULT_TIME
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;I)I setClear
	a (Lnet/minecraft/commands/CommandListenerWrapper;ILnet/minecraft/util/valueproviders/IntProvider;)I getDuration
	b (Lnet/minecraft/commands/CommandListenerWrapper;I)I setRain
	c (Lnet/minecraft/commands/CommandListenerWrapper;I)I setThunder
net/minecraft/server/commands/CommandWhitelist net/minecraft/server/commands/WhitelistCommand
	a ERROR_ALREADY_ENABLED
	b ERROR_ALREADY_DISABLED
	c ERROR_ALREADY_WHITELISTED
	d ERROR_NOT_WHITELISTED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I reload
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I addPlayers
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I enableWhitelist
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I removePlayers
	c (Lnet/minecraft/commands/CommandListenerWrapper;)I disableWhitelist
	d (Lnet/minecraft/commands/CommandListenerWrapper;)I showList
net/minecraft/server/commands/CommandWorldBorder net/minecraft/server/commands/WorldBorderCommand
	a ERROR_SAME_CENTER
	b ERROR_SAME_SIZE
	c ERROR_TOO_SMALL
	d ERROR_TOO_BIG
	e ERROR_TOO_FAR_OUT
	f ERROR_SAME_WARNING_TIME
	g ERROR_SAME_WARNING_DISTANCE
	h ERROR_SAME_DAMAGE_BUFFER
	i ERROR_SAME_DAMAGE_AMOUNT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I getSize
	a (Lnet/minecraft/commands/CommandListenerWrapper;DJ)I setSize
	a (Lnet/minecraft/commands/CommandListenerWrapper;F)I setDamageBuffer
	a (Lnet/minecraft/commands/CommandListenerWrapper;I)I setWarningTime
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/phys/Vec2F;)I setCenter
	b (Lnet/minecraft/commands/CommandListenerWrapper;F)I setDamageAmount
	b (Lnet/minecraft/commands/CommandListenerWrapper;I)I setWarningDistance
net/minecraft/server/commands/CommandXp net/minecraft/server/commands/ExperienceCommand
	a ERROR_SET_POINTS_INVALID
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/server/commands/CommandXp$Unit;)I addExperience
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/server/commands/CommandXp$Unit;)I queryExperience
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/server/commands/CommandXp$Unit;)I setExperience
net/minecraft/server/commands/CommandXp$Unit net/minecraft/server/commands/ExperienceCommand$Type
	a POINTS
	b LEVELS
	c add
	d set
	e name
	f query
	g $VALUES
	a ()[Lnet/minecraft/server/commands/CommandXp$Unit; $values
net/minecraft/server/commands/data/CommandData net/minecraft/server/commands/data/DataCommands
	a ALL_PROVIDERS
	b TARGET_PROVIDERS
	c SOURCE_PROVIDERS
	d ERROR_MERGE_UNCHANGED
	e ERROR_GET_NOT_NUMBER
	f ERROR_GET_NON_EXISTENT
	g ERROR_MULTIPLE_TAGS
	h ERROR_EXPECTED_OBJECT
	i ERROR_EXPECTED_VALUE
	j ERROR_INVALID_SUBSTRING
	a (II)I getOffset
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Lajh$c;)Ljava/util/List; getSingletonSource
	a (Lcom/mojang/brigadier/context/CommandContext;Lajh$c;Lajh$a;Ljava/util/List;)I manipulateData
	a (Lej$g;Lnet/minecraft/server/commands/data/CommandDataAccessor;)Lnet/minecraft/nbt/NBTBase; getSingleTag
	a (Ljava/lang/String;I)Ljava/lang/String; substring
	a (Ljava/lang/String;II)Ljava/lang/String; validatedSubstring
	a (Ljava/util/List;Lajh$d;)Ljava/util/List; stringifyTagList
	a (Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; decorateModification
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/commands/data/CommandDataAccessor;)I getData
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/commands/data/CommandDataAccessor;Lej$g;)I removeData
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/commands/data/CommandDataAccessor;Lej$g;D)I getNumeric
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/commands/data/CommandDataAccessor;Lnet/minecraft/nbt/NBTTagCompound;)I mergeData
	a (Lnet/minecraft/nbt/NBTBase;)Ljava/lang/String; getAsText
	b (Lcom/mojang/brigadier/context/CommandContext;Lajh$c;)Ljava/util/List; resolveSourcePath
	b (Ljava/lang/String;II)Ljava/lang/String; substring
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/commands/data/CommandDataAccessor;Lej$g;)I getData
net/minecraft/server/commands/data/CommandDataAccessor net/minecraft/server/commands/data/DataAccessor
	a ()Lnet/minecraft/nbt/NBTTagCompound; getData
	a (Lej$g;DI)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setData
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getModifiedSuccess
net/minecraft/server/commands/data/CommandDataAccessorEntity net/minecraft/server/commands/data/EntityDataAccessor
	a PROVIDER
	b ERROR_NO_PLAYERS
	c entity
	a ()Lnet/minecraft/nbt/NBTTagCompound; getData
	a (Lej$g;DI)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setData
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getModifiedSuccess
net/minecraft/server/commands/data/CommandDataAccessorTile net/minecraft/server/commands/data/BlockDataAccessor
	a PROVIDER
	b ERROR_NOT_A_BLOCK_ENTITY
	c entity
	d pos
	a ()Lnet/minecraft/nbt/NBTTagCompound; getData
	a (Lej$g;DI)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setData
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getModifiedSuccess
net/minecraft/server/commands/data/CommandDataStorage net/minecraft/server/commands/data/StorageDataAccessor
	a PROVIDER
	b SUGGEST_STORAGE
	c storage
	d id
	a ()Lnet/minecraft/nbt/NBTTagCompound; getData
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/world/level/storage/PersistentCommandStorage; getGlobalTags
	a (Lej$g;DI)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setData
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getModifiedSuccess
net/minecraft/server/dedicated/PropertyManager net/minecraft/server/dedicated/Settings
	Z properties
	a LOGGER
	a ()Ljava/util/Properties; cloneProperties
	a (Ljava/lang/String;)Ljava/lang/String; getLegacyString
	a (Ljava/lang/String;I)I get
	a (Ljava/lang/String;J)J get
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; get
	a (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; getLegacy
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I get
	a (Ljava/lang/String;Z)Z get
	a (Ljava/util/function/Function;)Ljava/util/function/Function; wrapNumberDeserializer
	a (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function; dispatchNumberOrString
	b (Ljava/lang/String;)Ljava/lang/Boolean; getLegacyBoolean
	b (Ljava/lang/String;I)Lnet/minecraft/server/dedicated/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Z)Lnet/minecraft/server/dedicated/PropertyManager$EditableProperty; getMutable
	b (Ljava/nio/file/Path;)Ljava/util/Properties; loadFromFile
	b (Lnet/minecraft/core/IRegistryCustom;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/PropertyManager; reload
	c (Ljava/lang/String;)Ljava/lang/String; getStringRaw
	c (Ljava/nio/file/Path;)V store
net/minecraft/server/dedicated/PropertyManager$EditableProperty net/minecraft/server/dedicated/Settings$MutableValue
	b key
	c value
	d serializer
	a (Lnet/minecraft/core/IRegistryCustom;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/PropertyManager; update
net/minecraft/server/dedicated/ThreadWatchdog net/minecraft/server/dedicated/ServerWatchdog
	a LOGGER
	b MAX_SHUTDOWN_TIME
	c SHUTDOWN_STATUS
	d server
	e maxTickTime
	a ()V exit
net/minecraft/server/gui/GuiStatsComponent net/minecraft/server/gui/StatsComponent
	a DECIMAL_FORMAT
	b values
	c vp
	d msgs
	e server
	f timer
	a ()V close
	a ([J)D getAverage
	b ()V tick
net/minecraft/server/gui/PlayerListBox net/minecraft/server/gui/PlayerListComponent
	a server
	b tickCount
	a ()V tick
net/minecraft/server/gui/ServerGUI net/minecraft/server/gui/MinecraftServerGui
	a MONOSPACED
	b LOGGER
	c TITLE
	d SHUTDOWN_TITLE
	e server
	f logAppenderThread
	g finalizers
	h isClosing
	a ()V start
	a (Ljava/lang/Runnable;)V addFinalizer
	a (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V print
	a (Lnet/minecraft/server/dedicated/DedicatedServer;)Lnet/minecraft/server/gui/ServerGUI; showFrameFor
	b ()V close
	c ()Ljavax/swing/JComponent; buildInfoPanel
	d ()Ljavax/swing/JComponent; buildPlayerPanel
	e ()Ljavax/swing/JComponent; buildChatPanel
	f ()V runFinalizers
net/minecraft/server/level/BlockPosition2D net/minecraft/server/level/ColumnPos
	a x
	b z
	c COORD_BITS
	d COORD_MASK
	a ()Lnet/minecraft/world/level/ChunkCoordIntPair; toChunkPos
	a (II)J asLong
	a (J)I getX
	b ()J toLong
	b (J)I getZ
	c ()I x
	d ()I z
net/minecraft/server/level/BossBattleServer net/minecraft/server/level/ServerBossEvent
	h players
	i unmodifiablePlayers
	j visible
	a (F)V setProgress
	a (Ljava/util/function/Function;)V broadcast
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setName
	a (Lnet/minecraft/server/level/EntityPlayer;)V addPlayer
	a (Lnet/minecraft/world/BossBattle$BarColor;)V setColor
	a (Lnet/minecraft/world/BossBattle$BarStyle;)V setOverlay
	a (Z)Lnet/minecraft/world/BossBattle; setDarkenScreen
	b ()V removeAllPlayers
	b (Lnet/minecraft/server/level/EntityPlayer;)V removePlayer
	b (Z)Lnet/minecraft/world/BossBattle; setPlayBossMusic
	c (Z)Lnet/minecraft/world/BossBattle; setCreateWorldFog
	d (Z)V setVisible
	g ()Z isVisible
	h ()Ljava/util/Collection; getPlayers
net/minecraft/server/level/ChunkMap net/minecraft/server/level/ChunkTracker
	a (J)Z isSource
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (J)I getLevelFromSource
	b (JIZ)V update
	b (JJI)I computeLevelFromNeighbor
net/minecraft/server/level/ChunkMapDistance net/minecraft/server/level/DistanceManager
	a LOGGER
	b PLAYER_TICKET_LEVEL
	c INITIAL_TICKET_LIST_CAPACITY
	d playersPerChunk
	e tickets
	f ticketTracker
	g naturalSpawnChunkCounter
	h tickingTicketsTracker
	i playerTicketManager
	j chunksToUpdateFutures
	k ticketThrottler
	l ticketThrottlerInput
	m ticketThrottlerReleaser
	n ticketsToRelease
	o mainThreadExecutor
	p ticketTickCounter
	q simulationDistance
	a ()V purgeStaleTickets
	a (I)V updatePlayerTickets
	a (J)Z isChunkToRemove
	a (JILnet/minecraft/server/level/PlayerChunk;I)Lnet/minecraft/server/level/PlayerChunk; updateChunkScheduling
	a (JLnet/minecraft/server/level/Ticket;)V addTicket
	a (Ljava/lang/String;)V dumpTickets
	a (Lnet/minecraft/core/SectionPosition;Lnet/minecraft/server/level/EntityPlayer;)V addPlayer
	a (Lnet/minecraft/server/level/PlayerChunkMap;)Z runAllUpdates
	a (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V addTicket
	a (Lnet/minecraft/util/ArraySetSorted;)I getTicketLevelAt
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V updateChunkForced
	b ()I getNaturalSpawnChunkCount
	b (I)V updateSimulationDistance
	b (J)Lnet/minecraft/server/level/PlayerChunk; getChunk
	b (JLnet/minecraft/server/level/Ticket;)V removeTicket
	b (Lnet/minecraft/core/SectionPosition;Lnet/minecraft/server/level/EntityPlayer;)V removePlayer
	b (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
	c ()Ljava/lang/String; getDebugStatus
	c (J)Z inEntityTickingRange
	c (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V addRegionTicket
	d ()Lnet/minecraft/server/level/TickingTracker; tickingTracker
	d (J)Z inBlockTickingRange
	d (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V removeRegionTicket
	e ()V removeTicketsOnClosing
	e (J)Ljava/lang/String; getTicketDebugString
	f ()Z hasTickets
	f (J)Z hasPlayersNearby
	g ()I getPlayerTicketLevel
	g (J)Lnet/minecraft/util/ArraySetSorted; getTickets
net/minecraft/server/level/ChunkProviderServer net/minecraft/server/level/ServerChunkCache
	a chunkMap
	b CHUNK_STATUSES
	c distanceManager
	d level
	e mainThread
	f lightEngine
	g mainThreadProcessor
	h dataStorage
	i lastInhabitedUpdate
	j spawnEnemies
	k spawnFriendlies
	l CACHE_SIZE
	m lastChunkPos
	n lastChunkStatus
	o lastChunk
	p lastSpawnState
	a ()Lnet/minecraft/server/level/LightEngineThreaded; getLightEngine
	a (I)V setViewDistance
	a (II)Lnet/minecraft/world/level/chunk/Chunk; getChunkNow
	a (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (J)Z isPositionTicking
	a (JLjava/util/function/Consumer;)V getFullChunk
	a (JLnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/chunk/ChunkStatus;)V storeInCache
	a (Ljava/util/function/BooleanSupplier;Z)V tick
	a (Lnet/minecraft/core/BlockPosition;)V blockChanged
	a (Lnet/minecraft/server/level/EntityPlayer;)V move
	a (Lnet/minecraft/server/level/PlayerChunk;I)Z chunkAbsent
	a (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V addRegionTicket
	a (Lnet/minecraft/world/entity/Entity;)V removeEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V broadcastAndSend
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/lang/String; getChunkDebugData
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V updateChunkForced
	a (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/SectionPosition;)V onLightUpdate
	a (Z)V save
	a (ZZ)V setSpawnSettings
	b ()I getTickingGenerated
	b (I)V setSimulationDistance
	b (II)Z hasChunk
	b (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; getChunkFuture
	b (J)Lnet/minecraft/server/level/PlayerChunk; getVisibleChunkIfPresent
	b (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V removeRegionTicket
	b (Lnet/minecraft/world/entity/Entity;)V addEntity
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V broadcast
	c ()Lnet/minecraft/world/level/World; getLevel
	c (II)Lnet/minecraft/world/level/chunk/LightChunk; getChunkForLighting
	c (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; getChunkFutureMainThread
	d ()Z pollTask
	e ()Ljava/lang/String; gatherStats
	f ()I getPendingTasksCount
	g ()Lnet/minecraft/world/level/chunk/ChunkGenerator; getGenerator
	h ()Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; getGeneratorState
	i ()Lnet/minecraft/world/level/levelgen/RandomState; randomState
	j ()I getLoadedChunksCount
	k ()Lnet/minecraft/world/level/storage/WorldPersistentData; getDataStorage
	l ()Lnet/minecraft/world/entity/ai/village/poi/VillagePlace; getPoiManager
	m ()Lnet/minecraft/world/level/chunk/storage/ChunkScanAccess; chunkScanner
	n ()Lcqg$d; getLastSpawnState
	o ()V removeTicketsOnClosing
	p ()Lnet/minecraft/world/level/lighting/LevelLightEngine; getLightEngine
	q ()Lnet/minecraft/world/level/IBlockAccess; getLevel
	r ()V clearCache
	s ()Z runDistanceManagerUpdates
	t ()V tickChunks
net/minecraft/server/level/ChunkTaskQueue net/minecraft/server/level/ChunkTaskPriorityQueue
	a PRIORITY_LEVEL_COUNT
	b taskQueue
	c firstQueue
	d name
	e acquired
	f maxTasks
	a ()Ljava/util/stream/Stream; pop
	a (ILnet/minecraft/world/level/ChunkCoordIntPair;I)V resortChunkTasks
	a (J)Ljava/lang/Runnable; acquire
	a (JZ)V release
	a (Ljava/util/Optional;JI)V submit
	b ()Z hasWork
	c ()Lit/unimi/dsi/fastutil/longs/LongSet; getAcquired
net/minecraft/server/level/ChunkTaskQueueSorter net/minecraft/server/level/ChunkTaskPriorityQueueSorter
	a LOGGER
	b queues
	c sleeping
	d mailbox
	a ()Z hasWork
	a (Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lakc$a; message
	a (Ljava/lang/Runnable;JZ)Lakc$b; release
	a (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Lakc$a; message
	a (Lnet/minecraft/server/level/ChunkTaskQueue;Lnet/minecraft/util/thread/Mailbox;)V pollTask
	a (Lnet/minecraft/server/level/PlayerChunk;Ljava/lang/Runnable;)Lakc$a; message
	a (Lnet/minecraft/server/level/PlayerChunk;Ljava/util/function/Function;)Lakc$a; message
	a (Lnet/minecraft/util/thread/Mailbox;)Lnet/minecraft/util/thread/Mailbox; getReleaseProcessor
	a (Lnet/minecraft/util/thread/Mailbox;JLjava/lang/Runnable;Z)V release
	a (Lnet/minecraft/util/thread/Mailbox;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V submit
	a (Lnet/minecraft/util/thread/Mailbox;Z)Lnet/minecraft/util/thread/Mailbox; getProcessor
	b ()Ljava/lang/String; getDebugStatus
	b (Lnet/minecraft/util/thread/Mailbox;)Lnet/minecraft/server/level/ChunkTaskQueue; getQueue
net/minecraft/server/level/DemoPlayerInteractManager net/minecraft/server/level/DemoMode
	a DEMO_DAYS
	b TOTAL_PLAY_TICKS
	e displayedIntro
	f demoHasEnded
	g demoEndedReminder
	h gameModeTicks
	a ()V tick
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/network/protocol/game/PacketPlayInBlockDig$EnumPlayerDigType;Lnet/minecraft/core/EnumDirection;II)V handleBlockBreakAction
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; useItem
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; useItemOn
	f ()V outputDemoReminder
net/minecraft/server/level/EntityPlayer net/minecraft/server/level/ServerPlayer
	b LOGGER
	c connection
	cA spawnInvulnerableTime
	cB chatVisibility
	cC canChatColor
	cD lastActionTime
	cE camera
	cF isChangingDimension
	cG seenCredits
	cH recipeBook
	cI levitationStartPos
	cJ levitationStartTime
	cK disconnected
	cL requestedViewDistance
	cM language
	cN startingToFallPosition
	cO enteredNetherPosition
	cP enteredLavaOnVehiclePosition
	cQ lastSectionPos
	cR chunkTrackingView
	cS respawnDimension
	cT respawnPosition
	cU respawnForced
	cV respawnAngle
	cW textFilter
	cX textFilteringEnabled
	cY allowsListing
	cZ wardenSpawnTracker
	cm NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ
	cn NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y
	co advancements
	cp stats
	cq lastRecordedHealthAndAbsorption
	cr lastRecordedFoodLevel
	cs lastRecordedAirLevel
	ct lastRecordedArmor
	cu lastRecordedLevel
	cv lastRecordedExperience
	cw lastSentHealth
	cx lastSentFood
	cy lastFoodSaturationZero
	cz lastSentExp
	d server
	da containerSynchronizer
	db containerListener
	dc chatSession
	dd containerCounter
	e gameMode
	f wonGame
	A ()Z canChatInColor
	B ()Lnet/minecraft/world/entity/player/EnumChatVisibility; getChatVisibility
	C ()I requestedViewDistance
	D ()I getPermissionLevel
	E ()V resetLastActionTime
	F ()Lnet/minecraft/stats/ServerStatisticManager; getStats
	G ()Lnet/minecraft/stats/RecipeBookServer; getRecipeBook
	H ()V updateInvisibilityStatus
	I ()Lnet/minecraft/world/entity/Entity; getCamera
	J ()V processPortalCooldown
	K ()J getLastActionTime
	L ()Lnet/minecraft/network/chat/IChatBaseComponent; getTabListDisplayName
	M ()Z isChangingDimension
	M_ ()Z isSpectator
	N ()V hasChangedDimension
	O ()Lnet/minecraft/server/AdvancementDataPlayer; getAdvancements
	P ()Lnet/minecraft/core/BlockPosition; getRespawnPosition
	Q ()F getRespawnAngle
	R ()Lnet/minecraft/resources/ResourceKey; getRespawnDimension
	S ()Z isRespawnForced
	T ()Lnet/minecraft/core/SectionPosition; getLastSectionPos
	U ()Lnet/minecraft/server/level/ChunkTrackingView; getChunkTrackingView
	V ()Lnet/minecraft/server/network/ITextFilter; getTextFilter
	W ()Z isTextFilteringEnabled
	X ()Z allowsListing
	Y ()Ljava/util/Optional; getWardenSpawnTracker
	Z ()Lnet/minecraft/network/chat/RemoteChatSession; getChatSession
	a (DD)V indicateDamage
	a (DDD)V dismountTo
	a (DDDZ)V doCheckFallDamage
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (FFZZ)V setPlayerInput
	a (I)V setExperiencePoints
	a (ILnet/minecraft/world/item/trading/MerchantRecipeList;IIZZ)V sendMerchantOffers
	a (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/world/scores/criteria/IScoreboardCriteria;)V handleTeamKill
	a (Ljava/util/Collection;)I awardRecipes
	a (Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor;)V lookAt
	a (Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor;Lnet/minecraft/world/phys/Vec3D;)V lookAt
	a (Lnet/minecraft/core/BlockPosition;)Lcom/mojang/datafixers/util/Either; startSleepInBed
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z bedInRange
	a (Lnet/minecraft/core/SectionPosition;)V setLastSectionPos
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/lang/String;)Lnet/minecraft/world/level/EnumGamemode; readPlayerMode
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/network/chat/OutgoingChatMessage;ZLth$a;)V sendChatMessage
	a (Lnet/minecraft/network/chat/RemoteChatSession;)V setChatSession
	a (Lnet/minecraft/network/protocol/status/ServerPing;)V sendServerStatus
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPosition;FZZ)V setRespawnPosition
	a (Lnet/minecraft/server/level/ChunkTrackingView;)V setChunkTrackingView
	a (Lnet/minecraft/server/level/ClientInformation;)V updateOptions
	a (Lnet/minecraft/server/level/EntityPlayer;)Z broadcastToPlayer
	a (Lnet/minecraft/server/level/EntityPlayer;Z)V restoreFrom
	a (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/level/portal/ShapeDetectorShape; findDimensionEntryPoint
	a (Lnet/minecraft/server/level/WorldServer;DDDFF)V teleportTo
	a (Lnet/minecraft/server/level/WorldServer;DDDLjava/util/Set;FF)Z teleportTo
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V createEndPlatform
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; getExitPortal
	a (Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/stats/Statistic;)V resetStat
	a (Lnet/minecraft/stats/Statistic;I)V awardStat
	a (Lnet/minecraft/world/EnumHand;)V swing
	a (Lnet/minecraft/world/ITileInventory;)Ljava/util/OptionalInt; openMenu
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/effect/MobEffect;)V onEffectRemoved
	a (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/entity/Entity;)V onEffectAdded
	a (Lnet/minecraft/world/effect/MobEffect;ZLnet/minecraft/world/entity/Entity;)V onEffectUpdated
	a (Lnet/minecraft/world/entity/Entity;)V crit
	a (Lnet/minecraft/world/entity/Entity;I)V take
	a (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V awardKillScore
	a (Lnet/minecraft/world/entity/Entity;Z)Z startRiding
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;Lnet/minecraft/world/IInventory;)V openHorseInventory
	a (Lnet/minecraft/world/entity/item/EntityItem;)V onItemPickup
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canHarmPlayer
	a (Lnet/minecraft/world/inventory/Container;)V initMenu
	a (Lnet/minecraft/world/item/ItemStack;)V updateUsingItem
	a (Lnet/minecraft/world/item/ItemStack;I)V onEnchantmentPerformed
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;)V openItemGui
	a (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/EntityItem; drop
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;Ljava/util/List;)V triggerRecipeCrafted
	a (Lnet/minecraft/world/level/EnumGamemode;)Z setGameMode
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/world/level/block/entity/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;Z)V openTextEdit
	a (Lnet/minecraft/world/level/block/state/IBlockData;)V onInsideBlock
	a (Lnet/minecraft/world/scores/criteria/IScoreboardCriteria;I)V updateScoreForCriteria
	a (Z)Z drop
	a (ZZ)V stopSleepInBed
	a ([Lnet/minecraft/resources/MinecraftKey;)V awardRecipesByKey
	aa ()V stopRiding
	ad_ ()V completeUsingItem
	b (DDD)V teleportTo
	b (I)V setExperienceLevels
	b (Ljava/util/Collection;)I resetRecipes
	b (Lnet/minecraft/core/BlockPosition;)V startSleeping
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z bedBlocked
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V sendSystemMessage
	b (Lnet/minecraft/server/level/EntityPlayer;)Z shouldFilterMessageTo
	b (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/entity/Entity; changeDimension
	b (Lnet/minecraft/world/damagesource/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/world/entity/Entity;)V magicCrit
	b (Lnet/minecraft/world/level/EnumGamemode;)Lnet/minecraft/world/level/EnumGamemode; calculateGameModeForNewPlayer
	c (DDD)V teleportRelative
	c (I)V giveExperienceLevels
	c (Lnet/minecraft/core/BlockPosition;)V onChangedBlock
	c (Lnet/minecraft/nbt/NBTTagCompound;)V loadGameTypes
	c (Lnet/minecraft/server/level/WorldServer;)V setServerLevel
	c (Lnet/minecraft/world/entity/Entity;)V setCamera
	d (DDD)V moveTo
	d (I)V giveExperiencePoints
	d (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/network/protocol/game/CommonPlayerSpawnInfo; createCommonSpawnInfo
	d (Lnet/minecraft/world/entity/Entity;)V attack
	e (Lnet/minecraft/server/level/WorldServer;)V fudgeSpawnLocation
	e_ ()V onEnterCombat
	f ()Z isCreative
	f (Lnet/minecraft/server/level/WorldServer;)V triggerDimensionChangeTriggers
	f_ ()V onLeaveCombat
	gr ()V tellNeutralMobsThatIDied
	gs ()Z isPvpAllowed
	gt ()V nextContainerCounter
	gu ()Z acceptsChatMessages
	h ()V initInventoryMenu
	i (Lnet/minecraft/core/BlockPosition;)Z isReachableBedBlock
	k ()Lnet/minecraft/world/item/ItemCooldown; createItemCooldowns
	k (Lnet/minecraft/nbt/NBTTagCompound;)V storeGameTypes
	l ()V tick
	m ()V doTick
	n ()V resetFallDistance
	o ()V trackStartFallingPosition
	p ()V trackEnteredOrExitedLavaOnVehicle
	q ()V closeContainer
	r ()V doCloseContainer
	s ()V disconnect
	t ()Z hasDisconnected
	u ()V resetSentInfo
	u (I)I getCoprime
	v (Z)Z acceptsSystemMessages
	w ()V onUpdateAbilities
	x ()Lnet/minecraft/server/level/WorldServer; serverLevel
	y ()Ljava/lang/String; getIpAddress
	z ()Lnet/minecraft/server/level/ClientInformation; clientInformation
net/minecraft/server/level/EntityTrackerEntry net/minecraft/server/level/ServerEntity
	a FORCED_POS_UPDATE_PERIOD
	b LOGGER
	c TOLERANCE_LEVEL_ROTATION
	d TOLERANCE_LEVEL_POSITION
	e FORCED_TELEPORT_PERIOD
	f level
	g entity
	h updateInterval
	i trackDelta
	j broadcast
	k positionCodec
	l yRotp
	m xRotp
	n yHeadRotp
	o ap
	p tickCount
	q teleportDelay
	r lastPassengers
	s wasRiding
	t wasOnGround
	u trackedDataValues
	a ()V sendChanges
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/stream/Stream; removedPassengers
	a (Lnet/minecraft/network/protocol/Packet;)V broadcastAndSend
	a (Lnet/minecraft/server/level/EntityPlayer;)V removePairing
	a (Lnet/minecraft/server/level/EntityPlayer;Ljava/util/function/Consumer;)V sendPairingData
	b ()V sendDirtyEntityData
	b (Lnet/minecraft/server/level/EntityPlayer;)V addPairing
net/minecraft/server/level/LightEngineGraphSection net/minecraft/server/level/SectionTracker
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (J)I getLevelFromSource
	b (JIZ)V update
	b (JJI)I computeLevelFromNeighbor
net/minecraft/server/level/LightEngineThreaded net/minecraft/server/level/ThreadedLevelLightEngine
	a DEFAULT_BATCH_SIZE
	d LOGGER
	e taskMailbox
	f lightTasks
	g chunkMap
	h sorterMailbox
	i taskPerBatch
	j scheduled
	a ()I runLightUpdates
	a (II)Ljava/util/concurrent/CompletableFuture; waitForPendingTasks
	a (IILjava/util/function/IntSupplier;Lnet/minecraft/server/level/LightEngineThreaded$Update;Ljava/lang/Runnable;)V addTask
	a (IILnet/minecraft/server/level/LightEngineThreaded$Update;Ljava/lang/Runnable;)V addTask
	a (Lnet/minecraft/core/BlockPosition;)V checkBlock
	a (Lnet/minecraft/core/SectionPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V updateChunkStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V setLightEnabled
	a (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/chunk/NibbleArray;)V queueSectionData
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; initializeLight
	b ()V tryScheduleUpdate
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)V propagateLightSources
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V retainData
	b (Lnet/minecraft/world/level/chunk/IChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; lightChunk
	f ()V runUpdate
net/minecraft/server/level/LightEngineThreaded$Update net/minecraft/server/level/ThreadedLevelLightEngine$TaskType
	a PRE_UPDATE
	b POST_UPDATE
	c $VALUES
	a ()[Lnet/minecraft/server/level/LightEngineThreaded$Update; $values
net/minecraft/server/level/PlayerChunk net/minecraft/server/level/ChunkHolder
	A sendSync
	a UNLOADED_CHUNK
	b UNLOADED_CHUNK_FUTURE
	c UNLOADED_LEVEL_CHUNK
	d NOT_DONE_YET
	e UNLOADED_LEVEL_CHUNK_FUTURE
	f CHUNK_STATUSES
	g futures
	h levelHeightAccessor
	i fullChunkFuture
	j tickingChunkFuture
	k entityTickingChunkFuture
	l chunkToSave
	m chunkToSaveHistory
	n oldTicketLevel
	o ticketLevel
	p queueLevel
	q pos
	r hasChangedSections
	s changedBlocksPerSection
	t blockChangedLightSectionFilter
	u skyChangedLightSectionFilter
	v lightEngine
	w onLevelChange
	x playerProvider
	y wasAccessibleSinceLastSave
	z pendingFullStateConfirmation
	a ()Ljava/util/concurrent/CompletableFuture; getTickingChunkFuture
	a (I)V setTicketLevel
	a (Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;)V addSaveDependency
	a (Ljava/util/List;Lnet/minecraft/network/protocol/Packet;)V broadcast
	a (Ljava/util/List;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V broadcastBlockEntity
	a (Ljava/util/List;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V broadcastBlockEntityIfNeeded
	a (Ljava/util/concurrent/CompletableFuture;)V addSendDependency
	a (Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V updateChunkToSave
	a (Lnet/minecraft/core/BlockPosition;)V blockChanged
	a (Lnet/minecraft/server/level/PlayerChunkMap;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Lnet/minecraft/server/level/FullChunkStatus;)V scheduleFullChunkPromotion
	a (Lnet/minecraft/server/level/PlayerChunkMap;Ljava/util/concurrent/Executor;)V updateFutures
	a (Lnet/minecraft/server/level/PlayerChunkMap;Lnet/minecraft/server/level/FullChunkStatus;)V demoteFullChunk
	a (Lnet/minecraft/world/level/EnumSkyBlock;I)V sectionLightChanged
	a (Lnet/minecraft/world/level/chunk/Chunk;)V broadcastChanges
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresentUnchecked
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/PlayerChunkMap;)Ljava/util/concurrent/CompletableFuture; getOrScheduleFuture
	a (Lnet/minecraft/world/level/chunk/ProtoChunkExtension;)V replaceProtoChunk
	b ()Ljava/util/concurrent/CompletableFuture; getEntityTickingChunkFuture
	b (I)V setQueueLevel
	b (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresent
	c ()Ljava/util/concurrent/CompletableFuture; getFullChunkFuture
	d ()Lnet/minecraft/world/level/chunk/Chunk; getTickingChunk
	e ()Ljava/util/concurrent/CompletableFuture; getChunkSendSyncFuture
	f ()Lnet/minecraft/world/level/chunk/Chunk; getChunkToSend
	g ()Lnet/minecraft/world/level/chunk/Chunk; getFullChunk
	h ()Lnet/minecraft/world/level/chunk/ChunkStatus; getLastAvailableStatus
	i ()Lnet/minecraft/world/level/chunk/IChunkAccess; getLastAvailable
	j ()Ljava/util/concurrent/CompletableFuture; getChunkToSave
	k ()Lnet/minecraft/server/level/FullChunkStatus; getFullStatus
	l ()Lnet/minecraft/world/level/ChunkCoordIntPair; getPos
	m ()I getTicketLevel
	n ()I getQueueLevel
	o ()Z wasAccessibleSinceLastSave
	p ()V refreshAccessibility
	q ()Ljava/util/List; getAllFutures
net/minecraft/server/level/PlayerChunk$Failure net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure
	b UNLOADED
net/minecraft/server/level/PlayerChunkMap net/minecraft/server/level/ChunkMap
	A queueSorter
	B worldgenMailbox
	C mainThreadMailbox
	D progressListener
	E chunkStatusListener
	F distanceManager
	G tickingGenerated
	H structureTemplateManager
	I storageName
	J playerMap
	K entityMap
	L chunkTypeCache
	M chunkSaveCooldowns
	N unloadQueue
	O serverViewDistance
	a MIN_VIEW_DISTANCE
	b MAX_VIEW_DISTANCE
	c FORCED_TICKET_LEVEL
	f CHUNK_TYPE_REPLACEABLE
	g CHUNK_TYPE_UNKNOWN
	h CHUNK_TYPE_FULL
	i LOGGER
	j CHUNK_SAVED_PER_TICK
	k CHUNK_SAVED_EAGERLY_PER_TICK
	l EAGER_CHUNK_SAVE_COOLDOWN_IN_MILLIS
	m updatingChunkMap
	n visibleChunkMap
	o pendingUnloads
	p entitiesInLevel
	q level
	r lightEngine
	s mainThreadExecutor
	t generator
	u randomState
	v chunkGeneratorState
	w overworldDataStorage
	x poiManager
	y toDrop
	z modified
	a ()Lnet/minecraft/world/level/chunk/ChunkGenerator; generator
	a (I)V setServerViewDistance
	a (J)Lnet/minecraft/server/level/PlayerChunk; getUpdatingChunkIfPresent
	a (JILnet/minecraft/server/level/PlayerChunk;I)Lnet/minecraft/server/level/PlayerChunk; updateChunkScheduling
	a (JLnet/minecraft/server/level/PlayerChunk;)V scheduleUnload
	a (Ljava/io/Writer;)V dumpChunks
	a (Ljava/lang/IllegalStateException;Ljava/lang/String;)Lnet/minecraft/ReportedException; debugFuturesAndCreateReportedException
	a (Ljava/lang/Throwable;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lcom/mojang/datafixers/util/Either; handleChunkLoadFailure
	a (Ljava/util/List;)V resendBiomesForChunks
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; printFuture
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/server/level/EntityPlayer;)V move
	a (Lnet/minecraft/server/level/EntityPlayer;II)Z isChunkTracked
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/server/level/ChunkTrackingView;)V applyChunkTrackingView
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/ChunkCoordIntPair;)V markChunkPendingToSend
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/chunk/Chunk;)V markChunkPendingToSend
	a (Lnet/minecraft/server/level/EntityPlayer;Z)V updatePlayerStatus
	a (Lnet/minecraft/server/level/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; prepareEntityTickingChunk
	a (Lnet/minecraft/server/level/PlayerChunk;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture; getChunkRangeFuture
	a (Lnet/minecraft/server/level/PlayerChunk;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; schedule
	a (Lnet/minecraft/server/level/WorldServer;Ljava/util/List;)V postLoadProtoChunk
	a (Lnet/minecraft/world/entity/Entity;)V addEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V broadcast
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/lang/String; getChunkDebugData
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)V waitForLightBeforeSending
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/server/level/FullChunkStatus;)V onFullChunkStatusChange
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/entity/Entity;)D euclideanDistanceSquared
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/ChunkStatus$Type;)B markPosition
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)Ljava/util/List; getPlayers
	a (Lnet/minecraft/world/level/chunk/Chunk;)V onChunkReadyToSend
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;I)Lnet/minecraft/world/level/chunk/ChunkStatus; getDependencyStatus
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;)Z save
	a (Z)V saveAllChunks
	b ()Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; generatorState
	b (J)Lnet/minecraft/server/level/PlayerChunk; getVisibleChunkIfPresent
	b (Ljava/util/function/BooleanSupplier;)V processUnloads
	b (Lnet/minecraft/nbt/NBTTagCompound;)Z isChunkDataValid
	b (Lnet/minecraft/server/level/EntityPlayer;)I getPlayerViewDistance
	b (Lnet/minecraft/server/level/EntityPlayer;II)Z isChunkOnTrackedBorder
	b (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/ChunkCoordIntPair;)V dropChunk
	b (Lnet/minecraft/server/level/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; prepareTickingChunk
	b (Lnet/minecraft/server/level/PlayerChunk;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; scheduleChunkGeneration
	b (Lnet/minecraft/world/entity/Entity;)V removeEntity
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V broadcastAndSend
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)V releaseLightTicket
	c ()Lnet/minecraft/world/level/levelgen/RandomState; randomState
	c (J)Ljava/util/function/IntSupplier; getChunkQueueLevel
	c (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; upgradeChunkTag
	c (Lnet/minecraft/server/level/EntityPlayer;)Z skipPlayer
	c (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/ChunkCoordIntPair;)Z playerIsCloseEnoughForSpawning
	c (Lnet/minecraft/server/level/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; prepareAccessibleChunk
	c (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z anyPlayerCloseEnoughForSpawning
	d ()V debugReloadGenerator
	d (J)Lnet/minecraft/world/level/chunk/Chunk; getChunkToSend
	d (Lnet/minecraft/server/level/EntityPlayer;)V updatePlayerPos
	d (Lnet/minecraft/server/level/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; protoChunkToFullChunk
	d (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/List; getPlayersCloseForSpawning
	e ()Lnet/minecraft/server/level/LightEngineThreaded; getLightEngine
	e (Lnet/minecraft/server/level/EntityPlayer;)V updateChunkTracking
	e (Lnet/minecraft/server/level/PlayerChunk;)Z saveChunkIfNeeded
	f ()Z hasWork
	f (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; scheduleChunkLoad
	g ()Z promoteChunkMap
	g (Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/world/level/chunk/IChunkAccess; createEmptyChunk
	h ()I getTickingGenerated
	h (Lnet/minecraft/world/level/ChunkCoordIntPair;)V markPositionReplaceable
	i ()I size
	i (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z isExistingChunkFull
	j ()Lnet/minecraft/server/level/ChunkMapDistance; getDistanceManager
	j (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; readChunk
	k ()Ljava/lang/Iterable; getChunks
	l ()V tick
	m ()Lnet/minecraft/world/entity/ai/village/poi/VillagePlace; getPoiManager
	n ()Ljava/lang/String; getStorageName
net/minecraft/server/level/PlayerChunkMap$EntityTracker net/minecraft/server/level/ChunkMap$TrackedEntity
	b serverEntity
	c entity
	d range
	e lastSectionPos
	f seenBy
	a ()V broadcastRemoved
	a (I)I scaledRange
	a (Ljava/util/List;)V updatePlayers
	a (Lnet/minecraft/network/protocol/Packet;)V broadcast
	a (Lnet/minecraft/server/level/EntityPlayer;)V removePlayer
	b ()I getEffectiveRange
	b (Lnet/minecraft/network/protocol/Packet;)V broadcastAndSend
	b (Lnet/minecraft/server/level/EntityPlayer;)V updatePlayer
net/minecraft/server/level/PlayerInteractManager net/minecraft/server/level/ServerPlayerGameMode
	a LOGGER
	b gameModeForPlayer
	c level
	d player
	e previousGameModeForPlayer
	f isDestroyingBlock
	g destroyProgressStart
	h destroyPos
	i gameTicks
	j hasDelayedDestroy
	k delayedDestroyPos
	l delayedTickStart
	m lastSentState
	a ()V tick
	a (Lnet/minecraft/core/BlockPosition;)Z destroyBlock
	a (Lnet/minecraft/core/BlockPosition;ILjava/lang/String;)V destroyAndAck
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/network/protocol/game/PacketPlayInBlockDig$EnumPlayerDigType;Lnet/minecraft/core/EnumDirection;II)V handleBlockBreakAction
	a (Lnet/minecraft/core/BlockPosition;ZILjava/lang/String;)V debugLogging
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; useItem
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; useItemOn
	a (Lnet/minecraft/server/level/WorldServer;)V setLevel
	a (Lnet/minecraft/world/level/EnumGamemode;)Z changeGameModeForPlayer
	a (Lnet/minecraft/world/level/EnumGamemode;Lnet/minecraft/world/level/EnumGamemode;)V setGameModeForPlayer
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;I)F incrementDestroyProgress
	b ()Lnet/minecraft/world/level/EnumGamemode; getGameModeForPlayer
	c ()Lnet/minecraft/world/level/EnumGamemode; getPreviousGameModeForPlayer
	d ()Z isSurvival
	e ()Z isCreative
net/minecraft/server/level/RegionLimitedWorldAccess net/minecraft/server/level/WorldGenRegion
	a LOGGER
	b cache
	c center
	d size
	e level
	f seed
	g levelData
	h random
	i dimensionType
	j blockTicks
	k fluidTicks
	l biomeManager
	m firstPos
	n lastPos
	o structureManager
	p generatingStatus
	q writeRadiusCutoff
	r currentlyGenerating
	s subTickCount
	t WORLDGEN_REGION_RANDOM
	A ()J getSeed
	A_ ()I getSkyDarken
	B_ ()Lnet/minecraft/world/level/border/WorldBorder; getWorldBorder
	C ()Lnet/minecraft/server/level/WorldServer; getLevel
	C_ ()Lnet/minecraft/world/level/dimension/DimensionManager; dimensionType
	D_ ()Lnet/minecraft/util/RandomSource; getRandom
	E_ ()Lnet/minecraft/world/level/biome/BiomeManager; getBiomeManager
	F_ ()J nextSubTickCount
	G ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	G_ ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	H_ ()I getMinBuildHeight
	I_ ()I getHeight
	J ()Lnet/minecraft/world/level/chunk/IChunkProvider; getChunkSource
	K ()Lnet/minecraft/world/ticks/LevelTickAccess; getFluidTicks
	L ()Lnet/minecraft/world/ticks/LevelTickAccess; getBlockTicks
	a ()Lnet/minecraft/world/level/ChunkCoordIntPair; getCenter
	a (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/EntityHuman; getNearestPlayer
	a (II)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (III)Lnet/minecraft/core/Holder; getUncachedNoiseBiome
	a (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (Ljava/util/function/Supplier;)V setCurrentlyGenerating
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)Z setBlock
	a (Lnet/minecraft/core/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/entity/Entity;I)Z destroyBlock
	a (Lnet/minecraft/core/EnumDirection;Z)F getShade
	a (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/world/entity/player/EntityHuman;ILnet/minecraft/core/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playSound
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)Z isOldChunkAround
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;Ldjt$a;)V gameEvent
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)I getHeight
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b (II)Z hasChunk
	b (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
	b (Lnet/minecraft/world/entity/Entity;)Z addFreshEntity
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	d_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/DifficultyDamageScaler; getCurrentDifficultyAt
	f (Lnet/minecraft/core/BlockPosition;)V markPosForPostprocessing
	f_ (Lnet/minecraft/core/BlockPosition;)Z ensureCanWrite
	n ()Lnet/minecraft/server/MinecraftServer; getServer
	v ()Ljava/util/List; players
	w_ ()Z isClientSide
	x_ ()Lnet/minecraft/world/level/lighting/LevelLightEngine; getLightEngine
	y_ ()I getSeaLevel
	z_ ()Lnet/minecraft/world/level/storage/WorldData; getLevelData
net/minecraft/server/level/WorldProviderNormal net/minecraft/server/level/PlayerRespawnLogic
	a (Lnet/minecraft/server/level/WorldServer;II)Lnet/minecraft/core/BlockPosition; getOverworldRespawnPos
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/core/BlockPosition; getSpawnPosInChunk
net/minecraft/server/level/WorldServer net/minecraft/server/level/ServerLevel
	D THUNDER_DELAY
	E LOGGER
	F EMPTY_TIME_NO_TICK
	G MAX_SCHEDULED_TICKS_PER_TICK
	H players
	I chunkSource
	J server
	K serverLevelData
	L entityTickList
	M entityManager
	N gameEventDispatcher
	O sleepStatus
	P emptyTime
	Q portalForcer
	R blockTicks
	S fluidTicks
	T navigatingMobs
	U isUpdatingNavigations
	V blockEvents
	W blockEventsToReschedule
	X handlingTick
	Y customSpawners
	Z dragonFight
	a END_SPAWN_POINT
	aa dragonParts
	ab structureManager
	ac structureCheck
	ad tickTime
	ae randomSequences
	b RAIN_DELAY
	c RAIN_DURATION
	d THUNDER_DURATION
	e noSave
	f raids
	A ()J getSeed
	B ()Lnet/minecraft/world/level/dimension/end/EnderDragonBattle; getDragonFight
	C ()Lnet/minecraft/server/level/WorldServer; getLevel
	D ()Ljava/lang/String; getWatchdogStats
	D (Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; findLightningRod
	E ()Lnet/minecraft/world/level/entity/LevelEntityGetter; getEntities
	F ()Ljava/lang/String; gatherChunkSourceStats
	G ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	H ()Lnet/minecraft/world/RandomSequences; getRandomSequences
	I ()Lnet/minecraft/world/scores/Scoreboard; getScoreboard
	J ()Lnet/minecraft/world/level/chunk/IChunkProvider; getChunkSource
	K ()Lnet/minecraft/world/ticks/LevelTickAccess; getFluidTicks
	L ()Lnet/minecraft/world/ticks/LevelTickAccess; getBlockTicks
	a ()Lnet/minecraft/world/level/StructureManager; structureManager
	a (I)Lnet/minecraft/world/entity/Entity; getEntity
	a (III)Lnet/minecraft/core/Holder; getUncachedNoiseBiome
	a (IIZ)Z setChunkForced
	a (IIZZ)V setWeatherParameters
	a (ILnet/minecraft/core/BlockPosition;I)V destroyBlockProgress
	a (J)Z shouldTickBlocksAt
	a (Ljava/io/Writer;)V dumpBlockEntityTickers
	a (Ljava/io/Writer;Ljava/lang/Iterable;)V dumpEntities
	a (Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String; getTypeCount
	a (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; getMapData
	a (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V setMapData
	a (Ljava/nio/file/Path;)V saveDebugReport
	a (Ljava/util/UUID;)Lnet/minecraft/world/entity/Entity; getEntity
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Ljava/util/function/Predicate;)Ljava/util/List; getPlayers
	a (Ljava/util/function/Predicate;I)Ljava/util/List; getPlayers
	a (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;III)Lcom/mojang/datafixers/util/Pair; findClosestBiome3d
	a (Ljava/util/stream/Stream;)V addLegacyChunkEntities
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; findLightningTargetAround
	a (Lnet/minecraft/core/BlockPosition;F)V setDefaultSpawnPos
	a (Lnet/minecraft/core/BlockPosition;I)Z isCloseToVillage
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V updateNeighborsAt
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;II)V blockEvent
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V neighborChanged
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/EnumDirection;)V updateNeighborsAtExceptFromFacing
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V onBlockStateChange
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;I)V sendBlockUpdated
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;)V tickFluid
	a (Lnet/minecraft/core/EnumDirection;Z)F getShade
	a (Lnet/minecraft/core/SectionPosition;)Z isVillage
	a (Lnet/minecraft/core/particles/ParticleParam;DDDIDDDD)I sendParticles
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/util/RandomSource; getRandomSequence
	a (Lnet/minecraft/server/level/EntityPlayer;)V addDuringCommandTeleport
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/core/particles/ParticleParam;ZDDDIDDDD)Z sendParticles
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity$RemovalReason;)V removePlayerImmediately
	a (Lnet/minecraft/server/level/EntityPlayer;ZDDDLnet/minecraft/network/protocol/Packet;)Z sendParticles
	a (Lnet/minecraft/server/level/WorldServer;)V makeObsidianPlatform
	a (Lnet/minecraft/tags/TagKey;Lnet/minecraft/core/BlockPosition;IZ)Lnet/minecraft/core/BlockPosition; findNearestMapStructure
	a (Lnet/minecraft/util/IProgressUpdate;ZZ)V save
	a (Lnet/minecraft/world/entity/Entity;)V tickNonPassenger
	a (Lnet/minecraft/world/entity/Entity;B)V broadcastEntityEvent
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V broadcastDamageEvent
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLcpv$a;)Lnet/minecraft/world/level/Explosion; explode
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V tickPassenger
	a (Lnet/minecraft/world/entity/ai/village/ReputationEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ReputationHandler;)V onReputationEvent
	a (Lnet/minecraft/world/entity/player/EntityHuman;DDDLnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundCategory;FFJ)V playSeededSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;ILnet/minecraft/core/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundCategory;FFJ)V playSeededSound
	a (Lnet/minecraft/world/level/BlockActionData;)Z doBlockEvent
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z isNaturalSpawningAllowed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/chunk/Chunk;)V unload
	a (Lnet/minecraft/world/level/chunk/Chunk;I)V tickChunk
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;)V onStructureStartsAvailable
	a (Lnet/minecraft/world/level/dimension/end/EnderDragonBattle;)V setDragonFight
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;Ljava/util/List;)V getEntities
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;Ljava/util/List;I)V getEntities
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;Ldjt$a;)V gameEvent
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V clearBlockEvents
	a (ZLnet/minecraft/core/BlockPosition;)V tickIceAndSnow
	a (ZZ)V tickCustomSpawners
	ap ()V wakeUpAllPlayers
	aq ()V announceSleepStatus
	ar ()V advanceWeatherCycle
	as ()V resetWeatherCycle
	at ()V saveLevelData
	au ()V runBlockEvents
	b ()V tickTime
	b (I)Lnet/minecraft/world/entity/Entity; getEntityOrPart
	b (ILnet/minecraft/core/BlockPosition;I)V globalLevelEvent
	b (J)V setDayTime
	b (Ljava/util/stream/Stream;)V addWorldGenChunkEntities
	b (Lnet/minecraft/core/BlockPosition;)Z isVillage
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V blockUpdated
	b (Lnet/minecraft/core/SectionPosition;)I sectionsToVillage
	b (Lnet/minecraft/server/level/EntityPlayer;)V addDuringPortalTeleport
	b (Lnet/minecraft/world/entity/Entity;)Z addFreshEntity
	b (Lnet/minecraft/world/level/chunk/Chunk;)V startTickingChunk
	c ()Z isHandlingTick
	c (J)Z areEntitiesLoaded
	c (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/raid/Raid; getRaidAt
	c (Lnet/minecraft/server/level/EntityPlayer;)V addNewPlayer
	c (Lnet/minecraft/world/entity/Entity;)Z addWithUUID
	d ()Z canSleepThroughNights
	d (J)Z isPositionTickingWithEntitiesLoaded
	d (Lnet/minecraft/core/BlockPosition;)Z isRaided
	d (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V tickBlock
	d (Lnet/minecraft/server/level/EntityPlayer;)V addRespawnedPlayer
	d (Lnet/minecraft/world/entity/Entity;)V addDuringTeleport
	e ()V updateSleepingPlayerList
	e (Lnet/minecraft/core/BlockPosition;)Z isPositionEntityTicking
	e (Lnet/minecraft/server/level/EntityPlayer;)V addPlayer
	e (Lnet/minecraft/world/entity/Entity;)Z tryAddFreshEntityWithPassengers
	f ()Lnet/minecraft/server/ScoreboardServer; getScoreboard
	f (Lnet/minecraft/core/BlockPosition;)Z isNaturalSpawningAllowed
	g ()V resetEmptyTime
	h ()Ljava/util/List; getDragons
	i ()Lnet/minecraft/server/level/EntityPlayer; getRandomPlayer
	i (Lnet/minecraft/world/entity/Entity;)Z shouldDiscardEntity
	j ()I getLogicalHeight
	j (Lnet/minecraft/world/entity/Entity;)Z addEntity
	k ()Lnet/minecraft/server/level/ChunkProviderServer; getChunkSource
	l ()Lnet/minecraft/world/ticks/TickListServer; getBlockTicks
	m ()Lnet/minecraft/world/ticks/TickListServer; getFluidTicks
	n ()Lnet/minecraft/server/MinecraftServer; getServer
	o ()Lnet/minecraft/world/level/portal/PortalTravelAgent; getPortalForcer
	p ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; getStructureManager
	q ()Lnet/minecraft/world/item/crafting/CraftingManager; getRecipeManager
	r ()Z noSave
	s ()Lnet/minecraft/world/level/storage/WorldPersistentData; getDataStorage
	t ()I getFreeMapId
	u ()Lit/unimi/dsi/fastutil/longs/LongSet; getForcedChunks
	v ()Ljava/util/List; players
	w ()Lnet/minecraft/world/entity/ai/village/poi/VillagePlace; getPoiManager
	x ()Lnet/minecraft/world/entity/raid/PersistentRaid; getRaids
	y ()Ljava/lang/Iterable; getAllEntities
	z ()Z isFlat
net/minecraft/server/level/progress/WorldLoadListener net/minecraft/server/level/progress/ChunkProgressListener
	a ()V start
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/ChunkStatus;)V onStatusChange
	b ()V stop
net/minecraft/server/level/progress/WorldLoadListenerFactory net/minecraft/server/level/progress/ChunkProgressListenerFactory
net/minecraft/server/level/progress/WorldLoadListenerLogger net/minecraft/server/level/progress/LoggerChunkProgressListener
	a LOGGER
	b maxCount
	c count
	d startTime
	e nextTickTime
	a ()V start
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/ChunkStatus;)V onStatusChange
	b ()V stop
	c ()I getProgress
net/minecraft/server/network/HandshakeListener net/minecraft/server/network/ServerHandshakePacketListenerImpl
	a IGNORE_STATUS_REASON
	b server
	c connection
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/protocol/handshake/PacketHandshakingInSetProtocol;)V handleIntention
	c ()Z isAcceptingMessages
net/minecraft/server/network/ITextFilter net/minecraft/server/network/TextFilter
	a DUMMY
	a ()V join
	a (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; processStreamMessage
	a (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; processMessageBundle
	b ()V leave
net/minecraft/server/network/LegacyPingHandler net/minecraft/server/network/LegacyQueryHandler
	a LOGGER
	b server
	a (Lio/netty/buffer/ByteBuf;)Z readCustomPayloadPacket
	a (Lio/netty/buffer/ByteBufAllocator;Ljava/lang/String;)Lio/netty/buffer/ByteBuf; createLegacyDisconnectPacket
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V sendFlushAndClose
	a (Lnet/minecraft/server/ServerInfo;)Ljava/lang/String; createVersion0Response
	b (Lnet/minecraft/server/ServerInfo;)Ljava/lang/String; createVersion1Response
net/minecraft/server/network/LoginListener net/minecraft/server/network/ServerLoginPacketListenerImpl
	a UNIQUE_THREAD_ID
	b LOGGER
	c MAX_TICKS_BEFORE_LOGIN
	d DISCONNECT_UNEXPECTED_QUERY
	e challenge
	f server
	g connection
	h state
	i tick
	j requestedUsername
	k authenticatedProfile
	l serverId
	a (Lcom/mojang/authlib/GameProfile;)Z isPlayerAlreadyInWorld
	a (Ljava/lang/String;)Z isValidUsername
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/protocol/login/PacketLoginInEncryptionBegin;)V handleKey
	a (Lnet/minecraft/network/protocol/login/PacketLoginInStart;)V handleHello
	a (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket;)V handleCustomQueryPacket
	a (Lnet/minecraft/network/protocol/login/ServerboundLoginAcknowledgedPacket;)V handleLoginAcknowledgement
	b (Lcom/mojang/authlib/GameProfile;)V startClientVerification
	b (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; createOfflineProfile
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V disconnect
	c ()Z isAcceptingMessages
	c (Lcom/mojang/authlib/GameProfile;)V verifyLoginAndFinishConnectionSetup
	d (Lcom/mojang/authlib/GameProfile;)V finishLoginAndWaitForClient
	e ()V tick
	f ()Ljava/lang/String; getUserName
net/minecraft/server/network/LoginListener$EnumProtocolState net/minecraft/server/network/ServerLoginPacketListenerImpl$State
	a HELLO
	b KEY
	c AUTHENTICATING
	d NEGOTIATING
	e VERIFYING
	f WAITING_FOR_DUPE_DISCONNECT
	g PROTOCOL_SWITCHING
	h ACCEPTED
	i $VALUES
	a ()[Lnet/minecraft/server/network/LoginListener$EnumProtocolState; $values
net/minecraft/server/network/PacketStatusListener net/minecraft/server/network/ServerStatusPacketListenerImpl
	a DISCONNECT_REASON
	b status
	c connection
	d hasRequestedStatus
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/protocol/status/PacketStatusInPing;)V handlePingRequest
	a (Lnet/minecraft/network/protocol/status/PacketStatusInStart;)V handleStatusRequest
	c ()Z isAcceptingMessages
net/minecraft/server/network/PlayerConnection net/minecraft/server/network/ServerGamePacketListenerImpl
	A vehicleLastGoodZ
	B awaitingPositionFromClient
	C awaitingTeleport
	D awaitingTeleportTime
	E clientIsFloating
	F aboveGroundTickCount
	G clientVehicleIsFloating
	H aboveGroundVehicleTickCount
	I receivedMovePacketCount
	J knownMovePacketCount
	K lastChatTimeStamp
	L chatSession
	M signedMessageDecoder
	N lastSeenMessages
	O messageSignatureCache
	P chatMessageChain
	Q waitingForSwitchToConfig
	d MAX_INTERACTION_DISTANCE
	e player
	f chunkSender
	g LOGGER
	h NO_BLOCK_UPDATES_TO_ACK
	i TRACKED_MESSAGE_DISCONNECT_THRESHOLD
	j CHAT_VALIDATION_FAILED
	k tickCount
	l ackBlockChangesUpTo
	m chatSpamTickCount
	n dropSpamTickCount
	o firstGoodX
	p firstGoodY
	q firstGoodZ
	r lastGoodX
	s lastGoodY
	t lastGoodZ
	u lastVehicle
	v vehicleFirstGoodX
	w vehicleFirstGoodY
	x vehicleFirstGoodZ
	y vehicleLastGoodX
	z vehicleLastGoodY
	a (D)D clampHorizontal
	a (DDDFF)V teleport
	a (DDDFFLjava/util/Set;)V teleport
	a (I)V ackBlockChangesUpTo
	a (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture; filterTextPacket
	a (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; filterTextPacket
	a (Ljava/lang/String;Ljava/time/Instant;Ltr$b;)Ljava/util/Optional; tryHandleChat
	a (Ljava/time/Instant;)Z updateChatOrder
	a (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; filterTextPacket
	a (Ljava/util/List;I)V updateBookContents
	a (Ljava/util/List;Ljava/util/function/UnaryOperator;Lnet/minecraft/world/item/ItemStack;)V updateBookPages
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lth$a;)V sendDisguisedChatMessage
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)V addPendingMessage
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Lth$a;)V sendPlayerChatMessage
	a (Lnet/minecraft/network/chat/RemoteChatSession;)V resetPlayerChatState
	a (Lnet/minecraft/network/protocol/Packet;)Z shouldHandleMessage
	a (Lnet/minecraft/network/protocol/common/ServerboundClientInformationPacket;)V handleClientInformation
	a (Lnet/minecraft/network/protocol/game/PacketPlayInAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/network/protocol/game/PacketPlayInAdvancements;)V handleSeenAdvancements
	a (Lnet/minecraft/network/protocol/game/PacketPlayInArmAnimation;)V handleAnimate
	a (Lnet/minecraft/network/protocol/game/PacketPlayInAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBEdit;)V handleEditBook
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBeacon;)V handleSetBeaconPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBlockDig;)V handlePlayerAction
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBlockPlace;)V handleUseItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBoatMove;)V handlePaddleBoat
	a (Lnet/minecraft/network/protocol/game/PacketPlayInChat;)V handleChat
	a (Lnet/minecraft/network/protocol/game/PacketPlayInChat;Lnet/minecraft/network/chat/LastSeenMessages;)Lnet/minecraft/network/chat/PlayerChatMessage; getSignedMessage
	a (Lnet/minecraft/network/protocol/game/PacketPlayInClientCommand;)V handleClientCommand
	a (Lnet/minecraft/network/protocol/game/PacketPlayInCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/network/protocol/game/PacketPlayInDifficultyChange;)V handleChangeDifficulty
	a (Lnet/minecraft/network/protocol/game/PacketPlayInDifficultyLock;)V handleLockDifficulty
	a (Lnet/minecraft/network/protocol/game/PacketPlayInEnchantItem;)V handleContainerButtonClick
	a (Lnet/minecraft/network/protocol/game/PacketPlayInEntityAction;)V handlePlayerCommand
	a (Lnet/minecraft/network/protocol/game/PacketPlayInEntityNBTQuery;)V handleEntityTagQuery
	a (Lnet/minecraft/network/protocol/game/PacketPlayInFlying;)V handleMovePlayer
	a (Lnet/minecraft/network/protocol/game/PacketPlayInHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInItemName;)V handleRenameItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInJigsawGenerate;)V handleJigsawGenerate
	a (Lnet/minecraft/network/protocol/game/PacketPlayInPickItem;)V handlePickItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInRecipeDisplayed;)V handleRecipeBookSeenRecipePacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInRecipeSettings;)V handleRecipeBookChangeSettingsPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetCommandBlock;)V handleSetCommandBlock
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetCommandMinecart;)V handleSetCommandMinecart
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetCreativeSlot;)V handleSetCreativeModeSlot
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetJigsaw;)V handleSetJigsawBlock
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSpectate;)V handleTeleportToEntityPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSteerVehicle;)V handlePlayerInput
	a (Lnet/minecraft/network/protocol/game/PacketPlayInStruct;)V handleSetStructureBlock
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTabComplete;)V handleCustomCommandSuggestions
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTeleportAccept;)V handleAcceptTeleportPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTileNBTQuery;)V handleBlockEntityTagQuery
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTrSel;)V handleSelectTrade
	a (Lnet/minecraft/network/protocol/game/PacketPlayInUpdateSign;)V handleSignUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayInUpdateSign;Ljava/util/List;)V updateSignText
	a (Lnet/minecraft/network/protocol/game/PacketPlayInUseEntity;)V handleInteract
	a (Lnet/minecraft/network/protocol/game/PacketPlayInUseItem;)V handleUseItemOn
	a (Lnet/minecraft/network/protocol/game/PacketPlayInVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/network/protocol/game/PacketPlayInWindowClick;)V handleContainerClick
	a (Lnet/minecraft/network/protocol/game/ServerboundChatAckPacket;)V handleChatAck
	a (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;)V handleChatCommand
	a (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;Lnet/minecraft/network/chat/LastSeenMessages;)V performChatCommand
	a (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;Lnet/minecraft/network/chat/SignableCommand;Lnet/minecraft/network/chat/LastSeenMessages;)Ljava/util/Map; collectSignedArguments
	a (Lnet/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket;)V handleChatSessionUpdate
	a (Lnet/minecraft/network/protocol/game/ServerboundChunkBatchReceivedPacket;)V handleChunkBatchReceived
	a (Lnet/minecraft/network/protocol/game/ServerboundConfigurationAcknowledgedPacket;)V handleConfigurationAcknowledged
	a (Lnet/minecraft/network/protocol/status/PacketStatusInPing;)V handlePingRequest
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;)Z wasBlockPlacementAttempt
	a (Lnet/minecraft/server/network/FilteredText;Ljava/util/List;I)V signBook
	a (Lnet/minecraft/world/entity/Entity;)Z noBlocksAround
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/phys/AxisAlignedBB;DDD)Z isPlayerCollidingWithAnythingNew
	a (Ltr$b;)Ljava/util/Optional; unpackAndApplyLastSeen
	a (Lue$a;)V handleMessageDecodeFailure
	b (D)D clampVertical
	b (DDDFF)Z containsInvalidValues
	b (Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults; parseCommand
	b (Lnet/minecraft/network/chat/PlayerChatMessage;)V broadcastChatMessage
	c ()Z isAcceptingMessages
	c (Ljava/lang/String;)Z isChatMessageIllegal
	e ()V tick
	j ()Lcom/mojang/authlib/GameProfile; playerProfile
	m ()V resetPosition
	n ()Ljava/net/SocketAddress; getRemoteAddress
	o ()V switchToConfig
	p ()Lnet/minecraft/server/level/EntityPlayer; getPlayer
	q ()V removePlayerFromWorld
	r ()V detectRateSpam
net/minecraft/server/network/ServerConnection net/minecraft/server/network/ServerConnectionListener
	a SERVER_EVENT_GROUP
	b SERVER_EPOLL_EVENT_GROUP
	c running
	d LOGGER
	e server
	f channels
	g connections
	a ()Ljava/net/SocketAddress; startMemoryChannel
	a (Ljava/net/InetAddress;I)V startTcpServerListener
	b ()V stop
	c ()V tick
	d ()Lnet/minecraft/server/MinecraftServer; getServer
	e ()Ljava/util/List; getConnections
net/minecraft/server/network/ServerConnection$LatencySimulator net/minecraft/server/network/ServerConnectionListener$LatencySimulator
	a TIMER
	b delay
	c jitter
	d queuedMessages
	a (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V delayDownstream
	a (Lio/netty/util/Timeout;)V onTimeout
net/minecraft/server/network/ServerConnection$LatencySimulator$DelayedMessage net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage
	a ctx
	b msg
net/minecraft/server/network/TextFilter net/minecraft/server/network/TextFilterClient
	a LOGGER
	b WORKER_COUNT
	c THREAD_FACTORY
	d DEFAULT_ENDPOINT
	e chatEndpoint
	f chatEncoder
	g joinEndpoint
	h joinEncoder
	i leaveEndpoint
	j leaveEncoder
	k authKey
	l chatIgnoreStrategy
	m workerPool
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getEndpointFromConfig
	a (Lcom/google/gson/JsonObject;Ljava/net/URL;)Lcom/google/gson/JsonObject; processRequestResponse
	a (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/network/ITextFilter; createContext
	a (Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lalv$a;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; requestMessageProcessing
	a (Lcom/mojang/authlib/GameProfile;Ljava/net/URL;Lalv$b;Ljava/util/concurrent/Executor;)V processJoinOrLeave
	a (Ljava/io/InputStream;)V drainStream
	a (Ljava/lang/String;)Lnet/minecraft/server/network/TextFilter; createFromConfig
	a (Ljava/lang/String;Lcom/google/gson/JsonArray;Lalv$a;)Lnet/minecraft/network/chat/FilterMask; parseMask
	a (Ljava/net/URI;Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL; getEndpoint
	b (Lcom/google/gson/JsonObject;Ljava/net/URL;)V processRequest
	c (Lcom/google/gson/JsonObject;Ljava/net/URL;)Ljava/net/HttpURLConnection; makeRequest
net/minecraft/server/packs/EnumResourcePackType net/minecraft/server/packs/PackType
	a CLIENT_RESOURCES
	b SERVER_DATA
	c directory
	d $VALUES
	a ()Ljava/lang/String; getDirectory
	b ()[Lnet/minecraft/server/packs/EnumResourcePackType; $values
net/minecraft/server/packs/IResourcePack net/minecraft/server/packs/PackResources
	a METADATA_EXTENSION
	b PACK_META
	a ()Ljava/lang/String; packId
	a (Lnet/minecraft/server/packs/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;Lamh$a;)V listResources
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/server/packs/resources/IoSupplier; getResource
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	a ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; getRootResource
	b ()Z isBuiltin
net/minecraft/server/packs/ResourcePackAbstract net/minecraft/server/packs/AbstractPackResources
	c LOGGER
	d name
	e isBuiltin
	a ()Ljava/lang/String; packId
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;Ljava/io/InputStream;)Ljava/lang/Object; getMetadataFromStream
	b ()Z isBuiltin
net/minecraft/server/packs/ResourcePackFile net/minecraft/server/packs/FilePackResources
	c LOGGER
	d zipFileAccess
	e prefix
	a (Ljava/lang/String;)Ljava/lang/String; addPrefix
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; extractNamespace
	a (Lnet/minecraft/server/packs/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;Lamh$a;)V listResources
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/server/packs/resources/IoSupplier; getResource
	a ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; getRootResource
	b (Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; getResource
	b (Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/String; getPathFromLocation
net/minecraft/server/packs/ResourcePackVanilla net/minecraft/server/packs/VanillaPackResources
	c LOGGER
	d metadata
	e namespaces
	f rootPaths
	g pathsForType
	a ()Ljava/lang/String; packId
	a (Lamh$a;Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;)V getResources
	a (Lnet/minecraft/server/packs/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;Lamh$a;)V listResources
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/server/packs/resources/IoSupplier; getResource
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/resources/MinecraftKey;Ljava/util/function/Consumer;)V listRawPaths
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	a ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; getRootResource
	b ()Z isBuiltin
	c ()Lnet/minecraft/server/packs/resources/ResourceProvider; asProvider
net/minecraft/server/packs/metadata/ResourcePackMetaParser net/minecraft/server/packs/metadata/MetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
net/minecraft/server/packs/metadata/pack/ResourcePackInfo net/minecraft/server/packs/metadata/pack/PackMetadataSection
	a CODEC
	b TYPE
	c description
	d packFormat
	e supportedFormats
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; description
	b ()I packFormat
	c ()Ljava/util/Optional; supportedFormats
net/minecraft/server/packs/repository/EnumResourcePackVersion net/minecraft/server/packs/repository/PackCompatibility
	a TOO_OLD
	b TOO_NEW
	c COMPATIBLE
	d description
	e confirmation
	f $VALUES
	a ()Z isCompatible
	a (Lnet/minecraft/util/InclusiveRange;I)Lnet/minecraft/server/packs/repository/EnumResourcePackVersion; forVersion
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; getConfirmation
	d ()[Lnet/minecraft/server/packs/repository/EnumResourcePackVersion; $values
net/minecraft/server/packs/repository/ResourcePackLoader net/minecraft/server/packs/repository/Pack
	a LOGGER
	b id
	c resources
	d title
	e info
	f defaultPosition
	g required
	h fixedPosition
	i packSource
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	a (Ljava/lang/String;Lanb$c;I)Lanb$a; readPackInfo
	a (Ljava/lang/String;Lnet/minecraft/network/chat/IChatBaseComponent;ZLanb$c;Lanb$a;Lnet/minecraft/server/packs/repository/ResourcePackLoader$Position;ZLnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; create
	a (Ljava/lang/String;Lnet/minecraft/network/chat/IChatBaseComponent;ZLanb$c;Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/server/packs/repository/ResourcePackLoader$Position;Lnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; readMetaAndCreate
	a (Ljava/lang/String;Lnet/minecraft/server/packs/metadata/pack/ResourcePackInfo;)Lnet/minecraft/util/InclusiveRange; getDeclaredPackVersions
	a (Z)Lnet/minecraft/network/chat/IChatBaseComponent; getChatLink
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	c ()Lnet/minecraft/server/packs/repository/EnumResourcePackVersion; getCompatibility
	d ()Lnet/minecraft/world/flag/FeatureFlagSet; getRequestedFeatures
	e ()Lnet/minecraft/server/packs/IResourcePack; open
	f ()Ljava/lang/String; getId
	g ()Z isRequired
	h ()Z isFixedPosition
	i ()Lnet/minecraft/server/packs/repository/ResourcePackLoader$Position; getDefaultPosition
	j ()Lnet/minecraft/server/packs/repository/PackSource; getPackSource
net/minecraft/server/packs/repository/ResourcePackLoader$Position net/minecraft/server/packs/repository/Pack$Position
	a TOP
	b BOTTOM
	c $VALUES
	a ()Lnet/minecraft/server/packs/repository/ResourcePackLoader$Position; opposite
	a (Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I insert
	b ()[Lnet/minecraft/server/packs/repository/ResourcePackLoader$Position; $values
net/minecraft/server/packs/repository/ResourcePackRepository net/minecraft/server/packs/repository/PackRepository
	a sources
	b available
	c selected
	a ()V reload
	a (Ljava/lang/String;)Z addPack
	a (Ljava/util/Collection;)V setSelected
	b ()Ljava/util/Collection; getAvailableIds
	b (Ljava/lang/String;)Z removePack
	b (Ljava/util/Collection;)Ljava/util/List; rebuildSelected
	c ()Ljava/util/Collection; getAvailablePacks
	c (Ljava/lang/String;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; getPack
	c (Ljava/util/Collection;)Ljava/util/stream/Stream; getAvailablePacks
	d ()Ljava/util/Collection; getSelectedIds
	d (Ljava/lang/String;)Z isAvailable
	e ()Lnet/minecraft/world/flag/FeatureFlagSet; getRequestedFeatureFlags
	f ()Ljava/util/Collection; getSelectedPacks
	g ()Ljava/util/List; openAllSelected
	h ()Ljava/util/Map; discoverAvailable
net/minecraft/server/packs/repository/ResourcePackSource net/minecraft/server/packs/repository/RepositorySource
	a (Ljava/util/function/Consumer;)V loadPacks
net/minecraft/server/packs/repository/ResourcePackSourceFolder net/minecraft/server/packs/repository/FolderRepositorySource
	a LOGGER
	b folder
	c packType
	d packSource
	e validator
	a (Ljava/nio/file/Path;)Ljava/lang/String; nameFromPath
	a (Ljava/nio/file/Path;Lnet/minecraft/world/level/validation/DirectoryValidator;ZLjava/util/function/BiConsumer;)V discoverPacks
	a (Ljava/util/function/Consumer;)V loadPacks
net/minecraft/server/packs/repository/ResourcePackSourceVanilla net/minecraft/server/packs/repository/ServerPacksSource
	b VERSION_METADATA_SECTION
	c FEATURE_FLAGS_METADATA_SECTION
	d BUILT_IN_METADATA
	e VANILLA_NAME
	f PACKS_DIR
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; getPackTitle
	a (Ljava/lang/String;Lanb$c;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; createBuiltinPack
	a (Ljava/nio/file/Path;Lnet/minecraft/world/level/validation/DirectoryValidator;)Lnet/minecraft/server/packs/repository/ResourcePackRepository; createPackRepository
	a (Lnet/minecraft/server/packs/IResourcePack;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; createVanillaPack
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;)Lnet/minecraft/server/packs/repository/ResourcePackRepository; createPackRepository
	b ()Lnet/minecraft/server/packs/ResourcePackVanilla; createVanillaPackSource
	c ()Lnet/minecraft/server/packs/repository/ResourcePackRepository; createVanillaTrustedRepository
net/minecraft/server/packs/resources/IReloadListener net/minecraft/server/packs/resources/PreparableReloadListener
	a (Lann$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	c ()Ljava/lang/String; getName
net/minecraft/server/packs/resources/IReloadable net/minecraft/server/packs/resources/ReloadInstance
	a ()Ljava/util/concurrent/CompletableFuture; done
	b ()F getActualProgress
	c ()Z isDone
	d ()V checkExceptions
net/minecraft/server/packs/resources/IReloadableResourceManager net/minecraft/server/packs/resources/CloseableResourceManager
net/minecraft/server/packs/resources/IResource net/minecraft/server/packs/resources/Resource
	a source
	b streamSupplier
	c metadataSupplier
	d cachedMetadata
	a ()Lnet/minecraft/server/packs/IResourcePack; source
	b ()Ljava/lang/String; sourcePackId
	c ()Z isBuiltin
	d ()Ljava/io/InputStream; open
	e ()Ljava/io/BufferedReader; openAsReader
	f ()Lnet/minecraft/server/packs/resources/ResourceMetadata; metadata
net/minecraft/server/packs/resources/IResourceManager net/minecraft/server/packs/resources/ResourceManager
	a ()Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/List; getResourceStack
	b ()Ljava/util/stream/Stream; listPacks
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
net/minecraft/server/packs/resources/IResourceManager$Empty net/minecraft/server/packs/resources/ResourceManager$Empty
	a INSTANCE
	b $VALUES
	a ()Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/List; getResourceStack
	b ()Ljava/util/stream/Stream; listPacks
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	c ()[Lnet/minecraft/server/packs/resources/IResourceManager$Empty; $values
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
net/minecraft/server/packs/resources/Reloadable net/minecraft/server/packs/resources/SimpleReloadInstance
	a allPreparations
	b allDone
	c PREPARATION_PROGRESS_WEIGHT
	d EXTRA_RELOAD_PROGRESS_WEIGHT
	e LISTENER_PROGRESS_WEIGHT
	f preparingListeners
	g listenerCount
	h startedReloads
	i finishedReloads
	j startedTaskCounter
	k doneTaskCounter
	a ()Ljava/util/concurrent/CompletableFuture; done
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/Reloadable; of
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Z)Lnet/minecraft/server/packs/resources/IReloadable; create
	b ()F getActualProgress
net/minecraft/server/packs/resources/ReloadableProfiled net/minecraft/server/packs/resources/ProfiledReloadInstance
	c LOGGER
	d total
	a (Ljava/util/List;)Ljava/util/List; finish
net/minecraft/server/packs/resources/ResourceDataAbstract net/minecraft/server/packs/resources/SimplePreparableReloadListener
	a (Lann$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
net/minecraft/server/packs/resources/ResourceDataJson net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener
	a LOGGER
	b gson
	c directory
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/lang/String;Lcom/google/gson/Gson;Ljava/util/Map;)V scanDirectory
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/util/Map; prepare
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
net/minecraft/server/packs/resources/ResourceManager net/minecraft/server/packs/resources/MultiPackResourceManager
	a LOGGER
	b namespacedManagers
	c packs
	a ()Ljava/util/Set; getNamespaces
	a (Ljava/lang/String;)V checkTrailingDirectoryPath
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/List; getResourceStack
	a (Lnet/minecraft/server/packs/IResourcePack;)Lnet/minecraft/server/packs/resources/ResourceFilterSection; getPackFilterSection
	b ()Ljava/util/stream/Stream; listPacks
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
net/minecraft/server/packs/resources/ResourceManagerFallback net/minecraft/server/packs/resources/FallbackResourceManager
	a fallbacks
	b LOGGER
	c type
	d namespace
	a ()Ljava/util/Set; getNamespaces
	a (Lank$d;Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/Map;)V listPackResources
	a (Lank$d;Ljava/util/Map;)V applyPackFiltersToExistingResources
	a (Ljava/lang/String;Ljava/util/function/Predicate;)V pushFilterOnly
	a (Ljava/lang/String;Lnet/minecraft/server/packs/IResourcePack;Ljava/util/function/Predicate;)V pushInternal
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/List; getResourceStack
	a (Lnet/minecraft/resources/MinecraftKey;I)Lnet/minecraft/server/packs/resources/IoSupplier; createStackMetadataFinder
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/server/packs/IResourcePack;Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/IoSupplier; wrapForDebug
	a (Lnet/minecraft/server/packs/IResourcePack;)V push
	a (Lnet/minecraft/server/packs/IResourcePack;Ljava/util/function/Predicate;)V push
	a (Lnet/minecraft/server/packs/IResourcePack;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/server/packs/resources/IoSupplier;Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/IResource; createResource
	a (Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/IoSupplier; convertToMetadata
	b ()Ljava/util/stream/Stream; listPacks
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	b (Lnet/minecraft/resources/MinecraftKey;)Z isMetadata
	b (Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/ResourceMetadata; parseMetadata
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
	c (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/MinecraftKey; getResourceLocationFromMetadata
	d (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/MinecraftKey; getMetadataLocation
net/minecraft/server/players/ExpirableListEntry net/minecraft/server/players/BanListEntry
	a DATE_FORMAT
	b EXPIRES_NEVER
	c created
	d source
	e expires
	f reason
	a ()Ljava/util/Date; getCreated
	a (Lcom/google/gson/JsonObject;)V serialize
	b ()Ljava/lang/String; getSource
	c ()Ljava/util/Date; getExpires
	d ()Ljava/lang/String; getReason
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	f ()Z hasExpired
net/minecraft/server/players/GameProfileBanEntry net/minecraft/server/players/UserBanListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
net/minecraft/server/players/GameProfileBanList net/minecraft/server/players/UserBanList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/JsonListEntry; createEntry
	a (Lcom/mojang/authlib/GameProfile;)Z isBanned
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
net/minecraft/server/players/IpBanEntry net/minecraft/server/players/IpBanListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; createIpInfo
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
net/minecraft/server/players/JsonList net/minecraft/server/players/StoredUserList
	a LOGGER
	b GSON
	c file
	d map
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/JsonListEntry; createEntry
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (Lnet/minecraft/server/players/JsonListEntry;)V add
	b ()Ljava/io/File; getFile
	b (Ljava/lang/Object;)Lnet/minecraft/server/players/JsonListEntry; get
	b (Lnet/minecraft/server/players/JsonListEntry;)V remove
	c ()Z isEmpty
	c (Ljava/lang/Object;)V remove
	d ()Ljava/util/Collection; getEntries
	d (Ljava/lang/Object;)Z contains
	e ()V save
	f ()V load
	g ()V removeExpired
net/minecraft/server/players/JsonListEntry net/minecraft/server/players/StoredUserEntry
	a user
	a (Lcom/google/gson/JsonObject;)V serialize
	f ()Z hasExpired
	g ()Ljava/lang/Object; getUser
net/minecraft/server/players/NameReferencingFileConverter net/minecraft/server/players/OldUsersConverter
	a OLD_IPBANLIST
	b OLD_USERBANLIST
	c OLD_OPLIST
	d OLD_WHITELIST
	e LOGGER
	a ()Z areOldUserlistsRemoved
	a (Ljava/io/File;)V ensureDirectoryExists
	a (Ljava/io/File;Ljava/util/Map;)Ljava/util/List; readOldListFormat
	a (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; parseDate
	a (Lnet/minecraft/server/MinecraftServer;)Z convertUserBanlist
	a (Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID; convertMobOwnerIfNecessary
	a (Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V lookupPlayers
	a (Lnet/minecraft/server/dedicated/DedicatedServer;)Z convertPlayers
	b (Ljava/io/File;)V renameOldFile
	b (Lnet/minecraft/server/MinecraftServer;)Z convertIpBanlist
	c (Lnet/minecraft/server/MinecraftServer;)Z convertOpsList
	d (Lnet/minecraft/server/MinecraftServer;)Z convertWhiteList
	e (Lnet/minecraft/server/MinecraftServer;)Z serverReadyAfterUserconversion
	f (Lnet/minecraft/server/MinecraftServer;)Z areOldPlayersConverted
	g (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; getWorldPlayersDirectory
net/minecraft/server/players/NameReferencingFileConverter$FileConversionException net/minecraft/server/players/OldUsersConverter$ConversionError
net/minecraft/server/players/OpList net/minecraft/server/players/ServerOpList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/JsonListEntry; createEntry
	a (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
net/minecraft/server/players/OpListEntry net/minecraft/server/players/ServerOpListEntry
	a level
	b bypassesPlayerLimit
	a ()I getLevel
	a (Lcom/google/gson/JsonObject;)V serialize
	b ()Z getBypassesPlayerLimit
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
net/minecraft/server/players/UserCache net/minecraft/server/players/GameProfileCache
	a LOGGER
	b GAMEPROFILES_MRU_LIMIT
	c GAMEPROFILES_EXPIRATION_MONTHS
	d usesAuthentication
	e profilesByName
	f profilesByUUID
	g requests
	h profileRepository
	i gson
	j file
	k operationCount
	l executor
	a ()V clearExecutor
	a (I)Ljava/util/stream/Stream; getTopMRUProfiles
	a (Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Ljava/util/Optional; readGameProfile
	a (Lcom/mojang/authlib/GameProfile;)V add
	a (Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Ljava/util/Optional; lookupGameProfile
	a (Ljava/lang/String;)Ljava/util/Optional; get
	a (Ljava/util/UUID;)Ljava/util/Optional; get
	a (Ljava/util/concurrent/Executor;)V setExecutor
	a (Lnet/minecraft/server/players/UserCache$UserCacheEntry;)V safeAdd
	a (Lnet/minecraft/server/players/UserCache$UserCacheEntry;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement; writeGameProfile
	a (Z)V setUsesAuthentication
	b ()Ljava/util/List; load
	b (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; getAsync
	c ()V save
	d ()Z usesAuthentication
	e ()J getNextOperation
	f ()Ljava/text/DateFormat; createDateFormat
net/minecraft/server/players/UserCache$UserCacheEntry net/minecraft/server/players/GameProfileCache$GameProfileInfo
	a profile
	b expirationDate
	c lastAccess
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	a (J)V setLastAccess
	b ()Ljava/util/Date; getExpirationDate
	c ()J getLastAccess
net/minecraft/server/players/WhiteList net/minecraft/server/players/UserWhiteList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/JsonListEntry; createEntry
	a (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
net/minecraft/server/players/WhiteListEntry net/minecraft/server/players/UserWhiteListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
net/minecraft/server/rcon/RemoteControlCommandListener net/minecraft/server/rcon/RconConsoleSource
	b RCON
	c RCON_COMPONENT
	d buffer
	e server
	T_ ()Z shouldInformAdmins
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	e ()V prepareForCommand
	f ()Ljava/lang/String; getCommandResponse
	g ()Lnet/minecraft/commands/CommandListenerWrapper; createCommandSourceStack
	j_ ()Z acceptsSuccess
	v_ ()Z acceptsFailure
net/minecraft/server/rcon/RemoteStatusReply net/minecraft/server/rcon/NetworkDataOutputStream
	a outputStream
	b dataOutputStream
	a ()[B toByteArray
	a (F)V writeFloat
	a (I)V write
	a (Ljava/lang/String;)V writeString
	a (S)V writeShort
	a ([B)V writeBytes
	b ()V reset
	b (I)V writeInt
net/minecraft/server/rcon/StatusChallengeUtils net/minecraft/server/rcon/PktUtils
	a MAX_PACKET_SIZE
	b HEX_CHAR
	a (B)Ljava/lang/String; toHexString
	a ([BI)I intFromByteArray
	a ([BII)Ljava/lang/String; stringFromByteArray
	b ([BII)I intFromByteArray
	c ([BII)I intFromNetworkByteArray
net/minecraft/server/rcon/thread/RemoteConnectionThread net/minecraft/server/rcon/thread/GenericThread
	a running
	b name
	c thread
	d LOGGER
	e UNIQUE_THREAD_ID
	f MAX_STOP_WAIT
	a ()Z start
	b ()V stop
	c ()Z isRunning
net/minecraft/server/rcon/thread/RemoteControlListener net/minecraft/server/rcon/thread/RconThread
	d LOGGER
	e socket
	f rconPassword
	g clients
	h serverInterface
	a (Ljava/net/ServerSocket;)V closeSocket
	a (Lnet/minecraft/server/IMinecraftServer;)Lnet/minecraft/server/rcon/thread/RemoteControlListener; create
	b ()V stop
	d ()V clearClients
net/minecraft/server/rcon/thread/RemoteControlSession net/minecraft/server/rcon/thread/RconClient
	d LOGGER
	e SERVERDATA_AUTH
	f SERVERDATA_EXECCOMMAND
	g SERVERDATA_RESPONSE_VALUE
	h SERVERDATA_AUTH_RESPONSE
	i SERVERDATA_AUTH_FAILURE
	j authed
	k client
	l buf
	m rconPassword
	n serverInterface
	a (IILjava/lang/String;)V send
	a (ILjava/lang/String;)V sendCmdResponse
	b ()V stop
	d ()V sendAuthFailure
	e ()V closeSocket
net/minecraft/server/rcon/thread/RemoteStatusListener net/minecraft/server/rcon/thread/QueryThreadGs4
	d LOGGER
	e GAME_TYPE
	f GAME_ID
	g CHALLENGE_CHECK_INTERVAL
	h RESPONSE_CACHE_TIME
	i lastChallengeCheck
	j port
	k serverPort
	l maxPlayers
	m serverName
	n worldName
	o socket
	p buffer
	q hostIp
	r serverIp
	s validChallenges
	t rulesResponse
	u lastRulesResponse
	v serverInterface
	a ()Z start
	a (Ljava/lang/Exception;)V recoverSocketError
	a (Ljava/net/DatagramPacket;)Z processPacket
	a (Ljava/net/SocketAddress;)[B getIdentBytes
	a (Lnet/minecraft/server/IMinecraftServer;)Lnet/minecraft/server/rcon/thread/RemoteStatusListener; create
	a ([BLjava/net/DatagramPacket;)V sendTo
	b (Ljava/net/DatagramPacket;)[B buildRuleResponse
	c (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; validChallenge
	d ()V pruneChallenges
	d (Ljava/net/DatagramPacket;)V sendChallenge
	e ()Z initSocket
net/minecraft/server/rcon/thread/RemoteStatusListener$RemoteStatusChallenge net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge
	a time
	b challenge
	c identBytes
	d challengeBytes
	e ident
	a ()I getChallenge
	a (J)Ljava/lang/Boolean; before
	b ()[B getChallengeBytes
	c ()[B getIdentBytes
	d ()Ljava/lang/String; getIdent
net/minecraft/sounds/SoundCategory net/minecraft/sounds/SoundSource
	a MASTER
	b MUSIC
	c RECORDS
	d WEATHER
	e BLOCKS
	f HOSTILE
	g NEUTRAL
	h PLAYERS
	i AMBIENT
	j VOICE
	k name
	l $VALUES
	a ()Ljava/lang/String; getName
	b ()[Lnet/minecraft/sounds/SoundCategory; $values
net/minecraft/sounds/SoundEffect net/minecraft/sounds/SoundEvent
	a DIRECT_CODEC
	b CODEC
	c DEFAULT_RANGE
	d location
	e range
	f newSystem
	a ()Lnet/minecraft/resources/MinecraftKey; getLocation
	a (F)F getRange
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/sounds/SoundEffect; createVariableRangeEvent
	a (Lnet/minecraft/resources/MinecraftKey;F)Lnet/minecraft/sounds/SoundEffect; createFixedRangeEvent
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/util/Optional;)Lnet/minecraft/sounds/SoundEffect; create
	b ()Ljava/util/Optional; fixedRange
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/sounds/SoundEffect; readFromNetwork
net/minecraft/sounds/SoundEffects net/minecraft/sounds/SoundEvents
	A AMBIENT_UNDERWATER_LOOP_ADDITIONS
	AA WOLF_STEP
	AB WOLF_WHINE
	AC WOODEN_DOOR_CLOSE
	AD WOODEN_DOOR_OPEN
	AE WOODEN_TRAPDOOR_CLOSE
	AF WOODEN_TRAPDOOR_OPEN
	AG WOODEN_BUTTON_CLICK_OFF
	AH WOODEN_BUTTON_CLICK_ON
	AI WOODEN_PRESSURE_PLATE_CLICK_OFF
	AJ WOODEN_PRESSURE_PLATE_CLICK_ON
	AK WOOD_BREAK
	AL WOOD_FALL
	AM WOOD_HIT
	AN WOOD_PLACE
	AO WOOD_STEP
	AP WOOL_BREAK
	AQ WOOL_FALL
	AR WOOL_HIT
	AS WOOL_PLACE
	AT WOOL_STEP
	AU ZOGLIN_AMBIENT
	AV ZOGLIN_ANGRY
	AW ZOGLIN_ATTACK
	AX ZOGLIN_DEATH
	AY ZOGLIN_HURT
	AZ ZOGLIN_STEP
	Aa WET_SPONGE_HIT
	Ab WET_SPONGE_PLACE
	Ac WET_SPONGE_STEP
	Ad WITCH_AMBIENT
	Ae WITCH_CELEBRATE
	Af WITCH_DEATH
	Ag WITCH_DRINK
	Ah WITCH_HURT
	Ai WITCH_THROW
	Aj WITHER_AMBIENT
	Ak WITHER_BREAK_BLOCK
	Al WITHER_DEATH
	Am WITHER_HURT
	An WITHER_SHOOT
	Ao WITHER_SKELETON_AMBIENT
	Ap WITHER_SKELETON_DEATH
	Aq WITHER_SKELETON_HURT
	Ar WITHER_SKELETON_STEP
	As WITHER_SPAWN
	At WOLF_AMBIENT
	Au WOLF_DEATH
	Av WOLF_GROWL
	Aw WOLF_HOWL
	Ax WOLF_HURT
	Ay WOLF_PANT
	Az WOLF_SHAKE
	B AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
	Ba ZOMBIE_AMBIENT
	Bb ZOMBIE_ATTACK_WOODEN_DOOR
	Bc ZOMBIE_ATTACK_IRON_DOOR
	Bd ZOMBIE_BREAK_WOODEN_DOOR
	Be ZOMBIE_CONVERTED_TO_DROWNED
	Bf ZOMBIE_DEATH
	Bg ZOMBIE_DESTROY_EGG
	Bh ZOMBIE_HORSE_AMBIENT
	Bi ZOMBIE_HORSE_DEATH
	Bj ZOMBIE_HORSE_HURT
	Bk ZOMBIE_HURT
	Bl ZOMBIE_INFECT
	Bm ZOMBIFIED_PIGLIN_AMBIENT
	Bn ZOMBIFIED_PIGLIN_ANGRY
	Bo ZOMBIFIED_PIGLIN_DEATH
	Bp ZOMBIFIED_PIGLIN_HURT
	Bq ZOMBIE_STEP
	Br ZOMBIE_VILLAGER_AMBIENT
	Bs ZOMBIE_VILLAGER_CONVERTED
	Bt ZOMBIE_VILLAGER_CURE
	Bu ZOMBIE_VILLAGER_DEATH
	Bv ZOMBIE_VILLAGER_HURT
	Bw ZOMBIE_VILLAGER_STEP
	C AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
	D AMETHYST_BLOCK_BREAK
	E AMETHYST_BLOCK_CHIME
	F AMETHYST_BLOCK_FALL
	G AMETHYST_BLOCK_HIT
	H AMETHYST_BLOCK_PLACE
	I AMETHYST_BLOCK_RESONATE
	J AMETHYST_BLOCK_STEP
	K AMETHYST_CLUSTER_BREAK
	L AMETHYST_CLUSTER_FALL
	M AMETHYST_CLUSTER_HIT
	N AMETHYST_CLUSTER_PLACE
	O AMETHYST_CLUSTER_STEP
	P ANCIENT_DEBRIS_BREAK
	Q ANCIENT_DEBRIS_STEP
	R ANCIENT_DEBRIS_PLACE
	S ANCIENT_DEBRIS_HIT
	T ANCIENT_DEBRIS_FALL
	U ANVIL_BREAK
	V ANVIL_DESTROY
	W ANVIL_FALL
	X ANVIL_HIT
	Y ANVIL_LAND
	Z ANVIL_PLACE
	a ALLAY_AMBIENT_WITH_ITEM
	aA AXOLOTL_SPLASH
	aB AXOLOTL_SWIM
	aC AZALEA_BREAK
	aD AZALEA_FALL
	aE AZALEA_HIT
	aF AZALEA_PLACE
	aG AZALEA_STEP
	aH AZALEA_LEAVES_BREAK
	aI AZALEA_LEAVES_FALL
	aJ AZALEA_LEAVES_HIT
	aK AZALEA_LEAVES_PLACE
	aL AZALEA_LEAVES_STEP
	aM BAMBOO_BREAK
	aN BAMBOO_FALL
	aO BAMBOO_HIT
	aP BAMBOO_PLACE
	aQ BAMBOO_STEP
	aR BAMBOO_SAPLING_BREAK
	aS BAMBOO_SAPLING_HIT
	aT BAMBOO_SAPLING_PLACE
	aU BAMBOO_WOOD_BREAK
	aV BAMBOO_WOOD_FALL
	aW BAMBOO_WOOD_HIT
	aX BAMBOO_WOOD_PLACE
	aY BAMBOO_WOOD_STEP
	aZ BAMBOO_WOOD_DOOR_CLOSE
	aa ANVIL_STEP
	ab ANVIL_USE
	ac ARMOR_EQUIP_CHAIN
	ad ARMOR_EQUIP_DIAMOND
	ae ARMOR_EQUIP_ELYTRA
	af ARMOR_EQUIP_GENERIC
	ag ARMOR_EQUIP_GOLD
	ah ARMOR_EQUIP_IRON
	ai ARMOR_EQUIP_LEATHER
	aj ARMOR_EQUIP_NETHERITE
	ak ARMOR_EQUIP_TURTLE
	al ARMOR_STAND_BREAK
	am ARMOR_STAND_FALL
	an ARMOR_STAND_HIT
	ao ARMOR_STAND_PLACE
	ap ARROW_HIT
	aq ARROW_HIT_PLAYER
	ar ARROW_SHOOT
	as AXE_STRIP
	at AXE_SCRAPE
	au AXE_WAX_OFF
	av AXOLOTL_ATTACK
	aw AXOLOTL_DEATH
	ax AXOLOTL_HURT
	ay AXOLOTL_IDLE_AIR
	az AXOLOTL_IDLE_WATER
	b ALLAY_AMBIENT_WITHOUT_ITEM
	bA BEE_HURT
	bB BEE_LOOP_AGGRESSIVE
	bC BEE_LOOP
	bD BEE_STING
	bE BEE_POLLINATE
	bF BEEHIVE_DRIP
	bG BEEHIVE_ENTER
	bH BEEHIVE_EXIT
	bI BEEHIVE_SHEAR
	bJ BEEHIVE_WORK
	bK BELL_BLOCK
	bL BELL_RESONATE
	bM BIG_DRIPLEAF_BREAK
	bN BIG_DRIPLEAF_FALL
	bO BIG_DRIPLEAF_HIT
	bP BIG_DRIPLEAF_PLACE
	bQ BIG_DRIPLEAF_STEP
	bR BLAZE_AMBIENT
	bS BLAZE_BURN
	bT BLAZE_DEATH
	bU BLAZE_HURT
	bV BLAZE_SHOOT
	bW BOAT_PADDLE_LAND
	bX BOAT_PADDLE_WATER
	bY BONE_BLOCK_BREAK
	bZ BONE_BLOCK_FALL
	ba BAMBOO_WOOD_DOOR_OPEN
	bb BAMBOO_WOOD_TRAPDOOR_CLOSE
	bc BAMBOO_WOOD_TRAPDOOR_OPEN
	bd BAMBOO_WOOD_BUTTON_CLICK_OFF
	be BAMBOO_WOOD_BUTTON_CLICK_ON
	bf BAMBOO_WOOD_PRESSURE_PLATE_CLICK_OFF
	bg BAMBOO_WOOD_PRESSURE_PLATE_CLICK_ON
	bh BAMBOO_WOOD_FENCE_GATE_CLOSE
	bi BAMBOO_WOOD_FENCE_GATE_OPEN
	bj BARREL_CLOSE
	bk BARREL_OPEN
	bl BASALT_BREAK
	bm BASALT_STEP
	bn BASALT_PLACE
	bo BASALT_HIT
	bp BASALT_FALL
	bq BAT_AMBIENT
	br BAT_DEATH
	bs BAT_HURT
	bt BAT_LOOP
	bu BAT_TAKEOFF
	bv BEACON_ACTIVATE
	bw BEACON_AMBIENT
	bx BEACON_DEACTIVATE
	by BEACON_POWER_SELECT
	bz BEE_DEATH
	c ALLAY_DEATH
	cA BUCKET_EMPTY_TADPOLE
	cB BUCKET_FILL
	cC BUCKET_FILL_AXOLOTL
	cD BUCKET_FILL_FISH
	cE BUCKET_FILL_LAVA
	cF BUCKET_FILL_POWDER_SNOW
	cG BUCKET_FILL_TADPOLE
	cH BUNDLE_DROP_CONTENTS
	cI BUNDLE_INSERT
	cJ BUNDLE_REMOVE_ONE
	cK CAKE_ADD_CANDLE
	cL CALCITE_BREAK
	cM CALCITE_STEP
	cN CALCITE_PLACE
	cO CALCITE_HIT
	cP CALCITE_FALL
	cQ CAMEL_AMBIENT
	cR CAMEL_DASH
	cS CAMEL_DASH_READY
	cT CAMEL_DEATH
	cU CAMEL_EAT
	cV CAMEL_HURT
	cW CAMEL_SADDLE
	cX CAMEL_SIT
	cY CAMEL_STAND
	cZ CAMEL_STEP
	ca BONE_BLOCK_HIT
	cb BONE_BLOCK_PLACE
	cc BONE_BLOCK_STEP
	cd BONE_MEAL_USE
	ce BOOK_PAGE_TURN
	cf BOOK_PUT
	cg BLASTFURNACE_FIRE_CRACKLE
	ch BOTTLE_EMPTY
	ci BOTTLE_FILL
	cj BOTTLE_FILL_DRAGONBREATH
	ck BREWING_STAND_BREW
	cl BRUSH_GENERIC
	cm BRUSH_SAND
	cn BRUSH_GRAVEL
	co BRUSH_SAND_COMPLETED
	cp BRUSH_GRAVEL_COMPLETED
	cq BUBBLE_COLUMN_BUBBLE_POP
	cr BUBBLE_COLUMN_UPWARDS_AMBIENT
	cs BUBBLE_COLUMN_UPWARDS_INSIDE
	ct BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
	cu BUBBLE_COLUMN_WHIRLPOOL_INSIDE
	cv BUCKET_EMPTY
	cw BUCKET_EMPTY_AXOLOTL
	cx BUCKET_EMPTY_FISH
	cy BUCKET_EMPTY_LAVA
	cz BUCKET_EMPTY_POWDER_SNOW
	d ALLAY_HURT
	dA CHAIN_HIT
	dB CHAIN_PLACE
	dC CHAIN_STEP
	dD CHERRY_WOOD_BREAK
	dE CHERRY_WOOD_FALL
	dF CHERRY_WOOD_HIT
	dG CHERRY_WOOD_PLACE
	dH CHERRY_WOOD_STEP
	dI CHERRY_SAPLING_BREAK
	dJ CHERRY_SAPLING_FALL
	dK CHERRY_SAPLING_HIT
	dL CHERRY_SAPLING_PLACE
	dM CHERRY_SAPLING_STEP
	dN CHERRY_LEAVES_BREAK
	dO CHERRY_LEAVES_FALL
	dP CHERRY_LEAVES_HIT
	dQ CHERRY_LEAVES_PLACE
	dR CHERRY_LEAVES_STEP
	dS CHERRY_WOOD_HANGING_SIGN_STEP
	dT CHERRY_WOOD_HANGING_SIGN_BREAK
	dU CHERRY_WOOD_HANGING_SIGN_FALL
	dV CHERRY_WOOD_HANGING_SIGN_HIT
	dW CHERRY_WOOD_HANGING_SIGN_PLACE
	dX CHERRY_WOOD_DOOR_CLOSE
	dY CHERRY_WOOD_DOOR_OPEN
	dZ CHERRY_WOOD_TRAPDOOR_CLOSE
	da CAMEL_STEP_SAND
	db CAMPFIRE_CRACKLE
	dc CANDLE_AMBIENT
	dd CANDLE_BREAK
	de CANDLE_EXTINGUISH
	df CANDLE_FALL
	dg CANDLE_HIT
	dh CANDLE_PLACE
	di CANDLE_STEP
	dj CAT_AMBIENT
	dk CAT_STRAY_AMBIENT
	dl CAT_DEATH
	dm CAT_EAT
	dn CAT_HISS
	do CAT_BEG_FOR_FOOD
	dp CAT_HURT
	dq CAT_PURR
	dr CAT_PURREOW
	ds CAVE_VINES_BREAK
	dt CAVE_VINES_FALL
	du CAVE_VINES_HIT
	dv CAVE_VINES_PLACE
	dw CAVE_VINES_STEP
	dx CAVE_VINES_PICK_BERRIES
	dy CHAIN_BREAK
	dz CHAIN_FALL
	e ALLAY_ITEM_GIVEN
	eA CHORUS_FRUIT_TELEPORT
	eB COD_AMBIENT
	eC COD_DEATH
	eD COD_FLOP
	eE COD_HURT
	eF COMPARATOR_CLICK
	eG COMPOSTER_EMPTY
	eH COMPOSTER_FILL
	eI COMPOSTER_FILL_SUCCESS
	eJ COMPOSTER_READY
	eK CONDUIT_ACTIVATE
	eL CONDUIT_AMBIENT
	eM CONDUIT_AMBIENT_SHORT
	eN CONDUIT_ATTACK_TARGET
	eO CONDUIT_DEACTIVATE
	eP COPPER_BREAK
	eQ COPPER_STEP
	eR COPPER_PLACE
	eS COPPER_HIT
	eT COPPER_FALL
	eU CORAL_BLOCK_BREAK
	eV CORAL_BLOCK_FALL
	eW CORAL_BLOCK_HIT
	eX CORAL_BLOCK_PLACE
	eY CORAL_BLOCK_STEP
	eZ COW_AMBIENT
	ea CHERRY_WOOD_TRAPDOOR_OPEN
	eb CHERRY_WOOD_BUTTON_CLICK_OFF
	ec CHERRY_WOOD_BUTTON_CLICK_ON
	ed CHERRY_WOOD_PRESSURE_PLATE_CLICK_OFF
	ee CHERRY_WOOD_PRESSURE_PLATE_CLICK_ON
	ef CHERRY_WOOD_FENCE_GATE_CLOSE
	eg CHERRY_WOOD_FENCE_GATE_OPEN
	eh CHEST_CLOSE
	ei CHEST_LOCKED
	ej CHEST_OPEN
	ek CHICKEN_AMBIENT
	el CHICKEN_DEATH
	em CHICKEN_EGG
	en CHICKEN_HURT
	eo CHICKEN_STEP
	ep CHISELED_BOOKSHELF_BREAK
	eq CHISELED_BOOKSHELF_FALL
	er CHISELED_BOOKSHELF_HIT
	es CHISELED_BOOKSHELF_INSERT
	et CHISELED_BOOKSHELF_INSERT_ENCHANTED
	eu CHISELED_BOOKSHELF_STEP
	ev CHISELED_BOOKSHELF_PICKUP
	ew CHISELED_BOOKSHELF_PICKUP_ENCHANTED
	ex CHISELED_BOOKSHELF_PLACE
	ey CHORUS_FLOWER_DEATH
	ez CHORUS_FLOWER_GROW
	f ALLAY_ITEM_TAKEN
	fA DEEPSLATE_BRICKS_PLACE
	fB DEEPSLATE_BRICKS_STEP
	fC DEEPSLATE_BREAK
	fD DEEPSLATE_FALL
	fE DEEPSLATE_HIT
	fF DEEPSLATE_PLACE
	fG DEEPSLATE_STEP
	fH DEEPSLATE_TILES_BREAK
	fI DEEPSLATE_TILES_FALL
	fJ DEEPSLATE_TILES_HIT
	fK DEEPSLATE_TILES_PLACE
	fL DEEPSLATE_TILES_STEP
	fM DISPENSER_DISPENSE
	fN DISPENSER_FAIL
	fO DISPENSER_LAUNCH
	fP DOLPHIN_AMBIENT
	fQ DOLPHIN_AMBIENT_WATER
	fR DOLPHIN_ATTACK
	fS DOLPHIN_DEATH
	fT DOLPHIN_EAT
	fU DOLPHIN_HURT
	fV DOLPHIN_JUMP
	fW DOLPHIN_PLAY
	fX DOLPHIN_SPLASH
	fY DOLPHIN_SWIM
	fZ DONKEY_AMBIENT
	fa COW_DEATH
	fb COW_HURT
	fc COW_MILK
	fd COW_STEP
	fe CREEPER_DEATH
	ff CREEPER_HURT
	fg CREEPER_PRIMED
	fh CROP_BREAK
	fi CROP_PLANTED
	fj CROSSBOW_HIT
	fk CROSSBOW_LOADING_END
	fl CROSSBOW_LOADING_MIDDLE
	fm CROSSBOW_LOADING_START
	fn CROSSBOW_QUICK_CHARGE_1
	fo CROSSBOW_QUICK_CHARGE_2
	fp CROSSBOW_QUICK_CHARGE_3
	fq CROSSBOW_SHOOT
	fr DECORATED_POT_BREAK
	fs DECORATED_POT_FALL
	ft DECORATED_POT_HIT
	fu DECORATED_POT_STEP
	fv DECORATED_POT_PLACE
	fw DECORATED_POT_SHATTER
	fx DEEPSLATE_BRICKS_BREAK
	fy DEEPSLATE_BRICKS_FALL
	fz DEEPSLATE_BRICKS_HIT
	g ALLAY_THROW
	gA DROWNED_HURT
	gB DROWNED_HURT_WATER
	gC DROWNED_SHOOT
	gD DROWNED_STEP
	gE DROWNED_SWIM
	gF DYE_USE
	gG EGG_THROW
	gH ELDER_GUARDIAN_AMBIENT
	gI ELDER_GUARDIAN_AMBIENT_LAND
	gJ ELDER_GUARDIAN_CURSE
	gK ELDER_GUARDIAN_DEATH
	gL ELDER_GUARDIAN_DEATH_LAND
	gM ELDER_GUARDIAN_FLOP
	gN ELDER_GUARDIAN_HURT
	gO ELDER_GUARDIAN_HURT_LAND
	gP ELYTRA_FLYING
	gQ ENCHANTMENT_TABLE_USE
	gR ENDER_CHEST_CLOSE
	gS ENDER_CHEST_OPEN
	gT ENDER_DRAGON_AMBIENT
	gU ENDER_DRAGON_DEATH
	gV DRAGON_FIREBALL_EXPLODE
	gW ENDER_DRAGON_FLAP
	gX ENDER_DRAGON_GROWL
	gY ENDER_DRAGON_HURT
	gZ ENDER_DRAGON_SHOOT
	ga DONKEY_ANGRY
	gb DONKEY_CHEST
	gc DONKEY_DEATH
	gd DONKEY_EAT
	ge DONKEY_HURT
	gf DRIPSTONE_BLOCK_BREAK
	gg DRIPSTONE_BLOCK_STEP
	gh DRIPSTONE_BLOCK_PLACE
	gi DRIPSTONE_BLOCK_HIT
	gj DRIPSTONE_BLOCK_FALL
	gk POINTED_DRIPSTONE_BREAK
	gl POINTED_DRIPSTONE_STEP
	gm POINTED_DRIPSTONE_PLACE
	gn POINTED_DRIPSTONE_HIT
	go POINTED_DRIPSTONE_FALL
	gp POINTED_DRIPSTONE_LAND
	gq POINTED_DRIPSTONE_DRIP_LAVA
	gr POINTED_DRIPSTONE_DRIP_WATER
	gs POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON
	gt POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON
	gu BIG_DRIPLEAF_TILT_DOWN
	gv BIG_DRIPLEAF_TILT_UP
	gw DROWNED_AMBIENT
	gx DROWNED_AMBIENT_WATER
	gy DROWNED_DEATH
	gz DROWNED_DEATH_WATER
	h AMBIENT_CAVE
	hA EXPERIENCE_ORB_PICKUP
	hB FENCE_GATE_CLOSE
	hC FENCE_GATE_OPEN
	hD FIRECHARGE_USE
	hE FIREWORK_ROCKET_BLAST
	hF FIREWORK_ROCKET_BLAST_FAR
	hG FIREWORK_ROCKET_LARGE_BLAST
	hH FIREWORK_ROCKET_LARGE_BLAST_FAR
	hI FIREWORK_ROCKET_LAUNCH
	hJ FIREWORK_ROCKET_SHOOT
	hK FIREWORK_ROCKET_TWINKLE
	hL FIREWORK_ROCKET_TWINKLE_FAR
	hM FIRE_AMBIENT
	hN FIRE_EXTINGUISH
	hO FISH_SWIM
	hP FISHING_BOBBER_RETRIEVE
	hQ FISHING_BOBBER_SPLASH
	hR FISHING_BOBBER_THROW
	hS FLINTANDSTEEL_USE
	hT FLOWERING_AZALEA_BREAK
	hU FLOWERING_AZALEA_FALL
	hV FLOWERING_AZALEA_HIT
	hW FLOWERING_AZALEA_PLACE
	hX FLOWERING_AZALEA_STEP
	hY FOX_AGGRO
	hZ FOX_AMBIENT
	ha ENDER_EYE_DEATH
	hb ENDER_EYE_LAUNCH
	hc ENDERMAN_AMBIENT
	hd ENDERMAN_DEATH
	he ENDERMAN_HURT
	hf ENDERMAN_SCREAM
	hg ENDERMAN_STARE
	hh ENDERMAN_TELEPORT
	hi ENDERMITE_AMBIENT
	hj ENDERMITE_DEATH
	hk ENDERMITE_HURT
	hl ENDERMITE_STEP
	hm ENDER_PEARL_THROW
	hn END_GATEWAY_SPAWN
	ho END_PORTAL_FRAME_FILL
	hp END_PORTAL_SPAWN
	hq EVOKER_AMBIENT
	hr EVOKER_CAST_SPELL
	hs EVOKER_CELEBRATE
	ht EVOKER_DEATH
	hu EVOKER_FANGS_ATTACK
	hv EVOKER_HURT
	hw EVOKER_PREPARE_ATTACK
	hx EVOKER_PREPARE_SUMMON
	hy EVOKER_PREPARE_WOLOLO
	hz EXPERIENCE_BOTTLE_THROW
	i AMBIENT_BASALT_DELTAS_ADDITIONS
	iA FROGSPAWN_FALL
	iB FROGSPAWN_HATCH
	iC FROGSPAWN_HIT
	iD FROGSPAWN_PLACE
	iE FROG_AMBIENT
	iF FROG_DEATH
	iG FROG_EAT
	iH FROG_HURT
	iI FROG_LAY_SPAWN
	iJ FROG_LONG_JUMP
	iK FROG_STEP
	iL FROG_TONGUE
	iM ROOTS_BREAK
	iN ROOTS_STEP
	iO ROOTS_PLACE
	iP ROOTS_HIT
	iQ ROOTS_FALL
	iR FURNACE_FIRE_CRACKLE
	iS GENERIC_BIG_FALL
	iT GENERIC_BURN
	iU GENERIC_DEATH
	iV GENERIC_DRINK
	iW GENERIC_EAT
	iX GENERIC_EXPLODE
	iY GENERIC_EXTINGUISH_FIRE
	iZ GENERIC_HURT
	ia FOX_BITE
	ib FOX_DEATH
	ic FOX_EAT
	id FOX_HURT
	ie FOX_SCREECH
	if FOX_SLEEP
	ig FOX_SNIFF
	ih FOX_SPIT
	ii FOX_TELEPORT
	ij SUSPICIOUS_SAND_BREAK
	ik SUSPICIOUS_SAND_STEP
	il SUSPICIOUS_SAND_PLACE
	im SUSPICIOUS_SAND_HIT
	in SUSPICIOUS_SAND_FALL
	io SUSPICIOUS_GRAVEL_BREAK
	ip SUSPICIOUS_GRAVEL_STEP
	iq SUSPICIOUS_GRAVEL_PLACE
	ir SUSPICIOUS_GRAVEL_HIT
	is SUSPICIOUS_GRAVEL_FALL
	it FROGLIGHT_BREAK
	iu FROGLIGHT_FALL
	iv FROGLIGHT_HIT
	iw FROGLIGHT_PLACE
	ix FROGLIGHT_STEP
	iy FROGSPAWNSTEP
	iz FROGSPAWN_BREAK
	j AMBIENT_BASALT_DELTAS_LOOP
	jA GLOW_SQUID_DEATH
	jB GLOW_SQUID_HURT
	jC GLOW_SQUID_SQUIRT
	jD GOAT_AMBIENT
	jE GOAT_DEATH
	jF GOAT_EAT
	jG GOAT_HURT
	jH GOAT_LONG_JUMP
	jI GOAT_MILK
	jJ GOAT_PREPARE_RAM
	jK GOAT_RAM_IMPACT
	jL GOAT_HORN_BREAK
	jM GOAT_HORN_PLAY
	jN GOAT_SCREAMING_AMBIENT
	jO GOAT_SCREAMING_DEATH
	jP GOAT_SCREAMING_EAT
	jQ GOAT_SCREAMING_HURT
	jR GOAT_SCREAMING_LONG_JUMP
	jS GOAT_SCREAMING_MILK
	jT GOAT_SCREAMING_PREPARE_RAM
	jU GOAT_SCREAMING_RAM_IMPACT
	jV GOAT_SCREAMING_HORN_BREAK
	jW GOAT_STEP
	jX GRASS_BREAK
	jY GRASS_FALL
	jZ GRASS_HIT
	ja GENERIC_SMALL_FALL
	jb GENERIC_SPLASH
	jc GENERIC_SWIM
	jd GHAST_AMBIENT
	je GHAST_DEATH
	jf GHAST_HURT
	jg GHAST_SCREAM
	jh GHAST_SHOOT
	ji GHAST_WARN
	jj GILDED_BLACKSTONE_BREAK
	jk GILDED_BLACKSTONE_FALL
	jl GILDED_BLACKSTONE_HIT
	jm GILDED_BLACKSTONE_PLACE
	jn GILDED_BLACKSTONE_STEP
	jo GLASS_BREAK
	jp GLASS_FALL
	jq GLASS_HIT
	jr GLASS_PLACE
	js GLASS_STEP
	jt GLOW_INK_SAC_USE
	ju GLOW_ITEM_FRAME_ADD_ITEM
	jv GLOW_ITEM_FRAME_BREAK
	jw GLOW_ITEM_FRAME_PLACE
	jx GLOW_ITEM_FRAME_REMOVE_ITEM
	jy GLOW_ITEM_FRAME_ROTATE_ITEM
	jz GLOW_SQUID_AMBIENT
	k AMBIENT_BASALT_DELTAS_MOOD
	kA HANGING_SIGN_PLACE
	kB NETHER_WOOD_HANGING_SIGN_STEP
	kC NETHER_WOOD_HANGING_SIGN_BREAK
	kD NETHER_WOOD_HANGING_SIGN_FALL
	kE NETHER_WOOD_HANGING_SIGN_HIT
	kF NETHER_WOOD_HANGING_SIGN_PLACE
	kG BAMBOO_WOOD_HANGING_SIGN_STEP
	kH BAMBOO_WOOD_HANGING_SIGN_BREAK
	kI BAMBOO_WOOD_HANGING_SIGN_FALL
	kJ BAMBOO_WOOD_HANGING_SIGN_HIT
	kK BAMBOO_WOOD_HANGING_SIGN_PLACE
	kL HOE_TILL
	kM HOGLIN_AMBIENT
	kN HOGLIN_ANGRY
	kO HOGLIN_ATTACK
	kP HOGLIN_CONVERTED_TO_ZOMBIFIED
	kQ HOGLIN_DEATH
	kR HOGLIN_HURT
	kS HOGLIN_RETREAT
	kT HOGLIN_STEP
	kU HONEY_BLOCK_BREAK
	kV HONEY_BLOCK_FALL
	kW HONEY_BLOCK_HIT
	kX HONEY_BLOCK_PLACE
	kY HONEY_BLOCK_SLIDE
	kZ HONEY_BLOCK_STEP
	ka GRASS_PLACE
	kb GRASS_STEP
	kc GRAVEL_BREAK
	kd GRAVEL_FALL
	ke GRAVEL_HIT
	kf GRAVEL_PLACE
	kg GRAVEL_STEP
	kh GRINDSTONE_USE
	ki GROWING_PLANT_CROP
	kj GUARDIAN_AMBIENT
	kk GUARDIAN_AMBIENT_LAND
	kl GUARDIAN_ATTACK
	km GUARDIAN_DEATH
	kn GUARDIAN_DEATH_LAND
	ko GUARDIAN_FLOP
	kp GUARDIAN_HURT
	kq GUARDIAN_HURT_LAND
	kr HANGING_ROOTS_BREAK
	ks HANGING_ROOTS_FALL
	kt HANGING_ROOTS_HIT
	ku HANGING_ROOTS_PLACE
	kv HANGING_ROOTS_STEP
	kw HANGING_SIGN_STEP
	kx HANGING_SIGN_BREAK
	ky HANGING_SIGN_FALL
	kz HANGING_SIGN_HIT
	l AMBIENT_CRIMSON_FOREST_ADDITIONS
	lA HUSK_HURT
	lB HUSK_STEP
	lC ILLUSIONER_AMBIENT
	lD ILLUSIONER_CAST_SPELL
	lE ILLUSIONER_DEATH
	lF ILLUSIONER_HURT
	lG ILLUSIONER_MIRROR_MOVE
	lH ILLUSIONER_PREPARE_BLINDNESS
	lI ILLUSIONER_PREPARE_MIRROR
	lJ INK_SAC_USE
	lK IRON_DOOR_CLOSE
	lL IRON_DOOR_OPEN
	lM IRON_GOLEM_ATTACK
	lN IRON_GOLEM_DAMAGE
	lO IRON_GOLEM_DEATH
	lP IRON_GOLEM_HURT
	lQ IRON_GOLEM_REPAIR
	lR IRON_GOLEM_STEP
	lS IRON_TRAPDOOR_CLOSE
	lT IRON_TRAPDOOR_OPEN
	lU ITEM_FRAME_ADD_ITEM
	lV ITEM_FRAME_BREAK
	lW ITEM_FRAME_PLACE
	lX ITEM_FRAME_REMOVE_ITEM
	lY ITEM_FRAME_ROTATE_ITEM
	lZ ITEM_BREAK
	la HONEYCOMB_WAX_ON
	lb HONEY_DRINK
	lc GOAT_HORN_VARIANT_COUNT
	ld GOAT_HORN_SOUND_VARIANTS
	le HORSE_AMBIENT
	lf HORSE_ANGRY
	lg HORSE_ARMOR
	lh HORSE_BREATHE
	li HORSE_DEATH
	lj HORSE_EAT
	lk HORSE_GALLOP
	ll HORSE_HURT
	lm HORSE_JUMP
	ln HORSE_LAND
	lo HORSE_SADDLE
	lp HORSE_STEP
	lq HORSE_STEP_WOOD
	lr HOSTILE_BIG_FALL
	ls HOSTILE_DEATH
	lt HOSTILE_HURT
	lu HOSTILE_SMALL_FALL
	lv HOSTILE_SPLASH
	lw HOSTILE_SWIM
	lx HUSK_AMBIENT
	ly HUSK_CONVERTED_TO_ZOMBIE
	lz HUSK_DEATH
	m AMBIENT_CRIMSON_FOREST_LOOP
	mA LLAMA_EAT
	mB LLAMA_HURT
	mC LLAMA_SPIT
	mD LLAMA_STEP
	mE LLAMA_SWAG
	mF MAGMA_CUBE_DEATH_SMALL
	mG LODESTONE_BREAK
	mH LODESTONE_STEP
	mI LODESTONE_PLACE
	mJ LODESTONE_HIT
	mK LODESTONE_FALL
	mL LODESTONE_COMPASS_LOCK
	mM MAGMA_CUBE_DEATH
	mN MAGMA_CUBE_HURT
	mO MAGMA_CUBE_HURT_SMALL
	mP MAGMA_CUBE_JUMP
	mQ MAGMA_CUBE_SQUISH
	mR MAGMA_CUBE_SQUISH_SMALL
	mS MANGROVE_ROOTS_BREAK
	mT MANGROVE_ROOTS_FALL
	mU MANGROVE_ROOTS_HIT
	mV MANGROVE_ROOTS_PLACE
	mW MANGROVE_ROOTS_STEP
	mX MEDIUM_AMETHYST_BUD_BREAK
	mY MEDIUM_AMETHYST_BUD_PLACE
	mZ METAL_BREAK
	ma ITEM_PICKUP
	mb LADDER_BREAK
	mc LADDER_FALL
	md LADDER_HIT
	me LADDER_PLACE
	mf LADDER_STEP
	mg LANTERN_BREAK
	mh LANTERN_FALL
	mi LANTERN_HIT
	mj LANTERN_PLACE
	mk LANTERN_STEP
	ml LARGE_AMETHYST_BUD_BREAK
	mm LARGE_AMETHYST_BUD_PLACE
	mn LAVA_AMBIENT
	mo LAVA_EXTINGUISH
	mp LAVA_POP
	mq LEASH_KNOT_BREAK
	mr LEASH_KNOT_PLACE
	ms LEVER_CLICK
	mt LIGHTNING_BOLT_IMPACT
	mu LIGHTNING_BOLT_THUNDER
	mv LINGERING_POTION_THROW
	mw LLAMA_AMBIENT
	mx LLAMA_ANGRY
	my LLAMA_CHEST
	mz LLAMA_DEATH
	n AMBIENT_CRIMSON_FOREST_MOOD
	nA MOSS_HIT
	nB MOSS_PLACE
	nC MOSS_STEP
	nD MUD_BREAK
	nE MUD_FALL
	nF MUD_HIT
	nG MUD_PLACE
	nH MUD_STEP
	nI MUD_BRICKS_BREAK
	nJ MUD_BRICKS_FALL
	nK MUD_BRICKS_HIT
	nL MUD_BRICKS_PLACE
	nM MUD_BRICKS_STEP
	nN MUDDY_MANGROVE_ROOTS_BREAK
	nO MUDDY_MANGROVE_ROOTS_FALL
	nP MUDDY_MANGROVE_ROOTS_HIT
	nQ MUDDY_MANGROVE_ROOTS_PLACE
	nR MUDDY_MANGROVE_ROOTS_STEP
	nS MULE_AMBIENT
	nT MULE_ANGRY
	nU MULE_CHEST
	nV MULE_DEATH
	nW MULE_EAT
	nX MULE_HURT
	nY MUSIC_CREATIVE
	nZ MUSIC_CREDITS
	na METAL_FALL
	nb METAL_HIT
	nc METAL_PLACE
	nd METAL_PRESSURE_PLATE_CLICK_OFF
	ne METAL_PRESSURE_PLATE_CLICK_ON
	nf METAL_STEP
	ng MINECART_INSIDE_UNDERWATER
	nh MINECART_INSIDE
	ni MINECART_RIDING
	nj MOOSHROOM_CONVERT
	nk MOOSHROOM_EAT
	nl MOOSHROOM_MILK
	nm MOOSHROOM_MILK_SUSPICIOUSLY
	nn MOOSHROOM_SHEAR
	no MOSS_CARPET_BREAK
	np MOSS_CARPET_FALL
	nq MOSS_CARPET_HIT
	nr MOSS_CARPET_PLACE
	ns MOSS_CARPET_STEP
	nt PINK_PETALS_BREAK
	nu PINK_PETALS_FALL
	nv PINK_PETALS_HIT
	nw PINK_PETALS_PLACE
	nx PINK_PETALS_STEP
	ny MOSS_BREAK
	nz MOSS_FALL
	o AMBIENT_NETHER_WASTES_ADDITIONS
	oA MUSIC_BIOME_LUSH_CAVES
	oB MUSIC_BIOME_SWAMP
	oC MUSIC_BIOME_FOREST
	oD MUSIC_BIOME_OLD_GROWTH_TAIGA
	oE MUSIC_BIOME_MEADOW
	oF MUSIC_BIOME_CHERRY_GROVE
	oG MUSIC_BIOME_NETHER_WASTES
	oH MUSIC_BIOME_FROZEN_PEAKS
	oI MUSIC_BIOME_SNOWY_SLOPES
	oJ MUSIC_BIOME_SOUL_SAND_VALLEY
	oK MUSIC_BIOME_STONY_PEAKS
	oL MUSIC_BIOME_WARPED_FOREST
	oM MUSIC_BIOME_FLOWER_FOREST
	oN MUSIC_BIOME_DESERT
	oO MUSIC_BIOME_BADLANDS
	oP MUSIC_BIOME_JUNGLE
	oQ MUSIC_BIOME_SPARSE_JUNGLE
	oR MUSIC_BIOME_BAMBOO_JUNGLE
	oS MUSIC_UNDER_WATER
	oT NETHER_BRICKS_BREAK
	oU NETHER_BRICKS_STEP
	oV NETHER_BRICKS_PLACE
	oW NETHER_BRICKS_HIT
	oX NETHER_BRICKS_FALL
	oY NETHER_WART_BREAK
	oZ NETHER_WART_PLANTED
	oa MUSIC_DISC_5
	ob MUSIC_DISC_11
	oc MUSIC_DISC_13
	od MUSIC_DISC_BLOCKS
	oe MUSIC_DISC_CAT
	of MUSIC_DISC_CHIRP
	og MUSIC_DISC_FAR
	oh MUSIC_DISC_MALL
	oi MUSIC_DISC_MELLOHI
	oj MUSIC_DISC_PIGSTEP
	ok MUSIC_DISC_STAL
	ol MUSIC_DISC_STRAD
	om MUSIC_DISC_WAIT
	on MUSIC_DISC_WARD
	oo MUSIC_DISC_OTHERSIDE
	op MUSIC_DISC_RELIC
	oq MUSIC_DRAGON
	or MUSIC_END
	os MUSIC_GAME
	ot MUSIC_MENU
	ou MUSIC_BIOME_BASALT_DELTAS
	ov MUSIC_BIOME_CRIMSON_FOREST
	ow MUSIC_BIOME_DEEP_DARK
	ox MUSIC_BIOME_DRIPSTONE_CAVES
	oy MUSIC_BIOME_GROVE
	oz MUSIC_BIOME_JAGGED_PEAKS
	p AMBIENT_NETHER_WASTES_LOOP
	pA NYLIUM_BREAK
	pB NYLIUM_STEP
	pC NYLIUM_PLACE
	pD NYLIUM_HIT
	pE NYLIUM_FALL
	pF NETHER_SPROUTS_BREAK
	pG NETHER_SPROUTS_STEP
	pH NETHER_SPROUTS_PLACE
	pI NETHER_SPROUTS_HIT
	pJ NETHER_SPROUTS_FALL
	pK FUNGUS_BREAK
	pL FUNGUS_STEP
	pM FUNGUS_PLACE
	pN FUNGUS_HIT
	pO FUNGUS_FALL
	pP WEEPING_VINES_BREAK
	pQ WEEPING_VINES_STEP
	pR WEEPING_VINES_PLACE
	pS WEEPING_VINES_HIT
	pT WEEPING_VINES_FALL
	pU WART_BLOCK_BREAK
	pV WART_BLOCK_STEP
	pW WART_BLOCK_PLACE
	pX WART_BLOCK_HIT
	pY WART_BLOCK_FALL
	pZ NETHERITE_BLOCK_BREAK
	pa NETHER_WOOD_BREAK
	pb NETHER_WOOD_FALL
	pc NETHER_WOOD_HIT
	pd NETHER_WOOD_PLACE
	pe NETHER_WOOD_STEP
	pf NETHER_WOOD_DOOR_CLOSE
	pg NETHER_WOOD_DOOR_OPEN
	ph NETHER_WOOD_TRAPDOOR_CLOSE
	pi NETHER_WOOD_TRAPDOOR_OPEN
	pj NETHER_WOOD_BUTTON_CLICK_OFF
	pk NETHER_WOOD_BUTTON_CLICK_ON
	pl NETHER_WOOD_PRESSURE_PLATE_CLICK_OFF
	pm NETHER_WOOD_PRESSURE_PLATE_CLICK_ON
	pn NETHER_WOOD_FENCE_GATE_CLOSE
	po NETHER_WOOD_FENCE_GATE_OPEN
	pp EMPTY
	pq PACKED_MUD_BREAK
	pr PACKED_MUD_FALL
	ps PACKED_MUD_HIT
	pt PACKED_MUD_PLACE
	pu PACKED_MUD_STEP
	pv STEM_BREAK
	pw STEM_STEP
	px STEM_PLACE
	py STEM_HIT
	pz STEM_FALL
	q AMBIENT_NETHER_WASTES_MOOD
	qA NOTE_BLOCK_IMITATE_SKELETON
	qB NOTE_BLOCK_IMITATE_CREEPER
	qC NOTE_BLOCK_IMITATE_ENDER_DRAGON
	qD NOTE_BLOCK_IMITATE_WITHER_SKELETON
	qE NOTE_BLOCK_IMITATE_PIGLIN
	qF OCELOT_HURT
	qG OCELOT_AMBIENT
	qH OCELOT_DEATH
	qI PAINTING_BREAK
	qJ PAINTING_PLACE
	qK PANDA_PRE_SNEEZE
	qL PANDA_SNEEZE
	qM PANDA_AMBIENT
	qN PANDA_DEATH
	qO PANDA_EAT
	qP PANDA_STEP
	qQ PANDA_CANT_BREED
	qR PANDA_AGGRESSIVE_AMBIENT
	qS PANDA_WORRIED_AMBIENT
	qT PANDA_HURT
	qU PANDA_BITE
	qV PARROT_AMBIENT
	qW PARROT_DEATH
	qX PARROT_EAT
	qY PARROT_FLY
	qZ PARROT_HURT
	qa NETHERITE_BLOCK_STEP
	qb NETHERITE_BLOCK_PLACE
	qc NETHERITE_BLOCK_HIT
	qd NETHERITE_BLOCK_FALL
	qe NETHERRACK_BREAK
	qf NETHERRACK_STEP
	qg NETHERRACK_PLACE
	qh NETHERRACK_HIT
	qi NETHERRACK_FALL
	qj NOTE_BLOCK_BASEDRUM
	qk NOTE_BLOCK_BASS
	ql NOTE_BLOCK_BELL
	qm NOTE_BLOCK_CHIME
	qn NOTE_BLOCK_FLUTE
	qo NOTE_BLOCK_GUITAR
	qp NOTE_BLOCK_HARP
	qq NOTE_BLOCK_HAT
	qr NOTE_BLOCK_PLING
	qs NOTE_BLOCK_SNARE
	qt NOTE_BLOCK_XYLOPHONE
	qu NOTE_BLOCK_IRON_XYLOPHONE
	qv NOTE_BLOCK_COW_BELL
	qw NOTE_BLOCK_DIDGERIDOO
	qx NOTE_BLOCK_BIT
	qy NOTE_BLOCK_BANJO
	qz NOTE_BLOCK_IMITATE_ZOMBIE
	r AMBIENT_SOUL_SAND_VALLEY_ADDITIONS
	rA PARROT_IMITATE_WARDEN
	rB PARROT_IMITATE_WITCH
	rC PARROT_IMITATE_WITHER
	rD PARROT_IMITATE_WITHER_SKELETON
	rE PARROT_IMITATE_ZOGLIN
	rF PARROT_IMITATE_ZOMBIE
	rG PARROT_IMITATE_ZOMBIE_VILLAGER
	rH PARROT_STEP
	rI PHANTOM_AMBIENT
	rJ PHANTOM_BITE
	rK PHANTOM_DEATH
	rL PHANTOM_FLAP
	rM PHANTOM_HURT
	rN PHANTOM_SWOOP
	rO PIG_AMBIENT
	rP PIG_DEATH
	rQ PIG_HURT
	rR PIG_SADDLE
	rS PIG_STEP
	rT PIGLIN_ADMIRING_ITEM
	rU PIGLIN_AMBIENT
	rV PIGLIN_ANGRY
	rW PIGLIN_CELEBRATE
	rX PIGLIN_DEATH
	rY PIGLIN_JEALOUS
	rZ PIGLIN_HURT
	ra PARROT_IMITATE_BLAZE
	rb PARROT_IMITATE_CREEPER
	rc PARROT_IMITATE_DROWNED
	rd PARROT_IMITATE_ELDER_GUARDIAN
	re PARROT_IMITATE_ENDER_DRAGON
	rf PARROT_IMITATE_ENDERMITE
	rg PARROT_IMITATE_EVOKER
	rh PARROT_IMITATE_GHAST
	ri PARROT_IMITATE_GUARDIAN
	rj PARROT_IMITATE_HOGLIN
	rk PARROT_IMITATE_HUSK
	rl PARROT_IMITATE_ILLUSIONER
	rm PARROT_IMITATE_MAGMA_CUBE
	rn PARROT_IMITATE_PHANTOM
	ro PARROT_IMITATE_PIGLIN
	rp PARROT_IMITATE_PIGLIN_BRUTE
	rq PARROT_IMITATE_PILLAGER
	rr PARROT_IMITATE_RAVAGER
	rs PARROT_IMITATE_SHULKER
	rt PARROT_IMITATE_SILVERFISH
	ru PARROT_IMITATE_SKELETON
	rv PARROT_IMITATE_SLIME
	rw PARROT_IMITATE_SPIDER
	rx PARROT_IMITATE_STRAY
	ry PARROT_IMITATE_VEX
	rz PARROT_IMITATE_VINDICATOR
	s AMBIENT_SOUL_SAND_VALLEY_LOOP
	sA PLAYER_HURT_DROWN
	sB PLAYER_HURT_FREEZE
	sC PLAYER_HURT_ON_FIRE
	sD PLAYER_HURT_SWEET_BERRY_BUSH
	sE PLAYER_LEVELUP
	sF PLAYER_SMALL_FALL
	sG PLAYER_SPLASH
	sH PLAYER_SPLASH_HIGH_SPEED
	sI PLAYER_SWIM
	sJ POLAR_BEAR_AMBIENT
	sK POLAR_BEAR_AMBIENT_BABY
	sL POLAR_BEAR_DEATH
	sM POLAR_BEAR_HURT
	sN POLAR_BEAR_STEP
	sO POLAR_BEAR_WARNING
	sP POLISHED_DEEPSLATE_BREAK
	sQ POLISHED_DEEPSLATE_FALL
	sR POLISHED_DEEPSLATE_HIT
	sS POLISHED_DEEPSLATE_PLACE
	sT POLISHED_DEEPSLATE_STEP
	sU PORTAL_AMBIENT
	sV PORTAL_TRAVEL
	sW PORTAL_TRIGGER
	sX POWDER_SNOW_BREAK
	sY POWDER_SNOW_FALL
	sZ POWDER_SNOW_HIT
	sa PIGLIN_RETREAT
	sb PIGLIN_STEP
	sc PIGLIN_CONVERTED_TO_ZOMBIFIED
	sd PIGLIN_BRUTE_AMBIENT
	se PIGLIN_BRUTE_ANGRY
	sf PIGLIN_BRUTE_DEATH
	sg PIGLIN_BRUTE_HURT
	sh PIGLIN_BRUTE_STEP
	si PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED
	sj PILLAGER_AMBIENT
	sk PILLAGER_CELEBRATE
	sl PILLAGER_DEATH
	sm PILLAGER_HURT
	sn PISTON_CONTRACT
	so PISTON_EXTEND
	sp PLAYER_ATTACK_CRIT
	sq PLAYER_ATTACK_KNOCKBACK
	sr PLAYER_ATTACK_NODAMAGE
	ss PLAYER_ATTACK_STRONG
	st PLAYER_ATTACK_SWEEP
	su PLAYER_ATTACK_WEAK
	sv PLAYER_BIG_FALL
	sw PLAYER_BREATH
	sx PLAYER_BURP
	sy PLAYER_DEATH
	sz PLAYER_HURT
	t AMBIENT_SOUL_SAND_VALLEY_MOOD
	tA NETHER_GOLD_ORE_HIT
	tB NETHER_GOLD_ORE_PLACE
	tC NETHER_GOLD_ORE_STEP
	tD NETHER_ORE_BREAK
	tE NETHER_ORE_FALL
	tF NETHER_ORE_HIT
	tG NETHER_ORE_PLACE
	tH NETHER_ORE_STEP
	tI REDSTONE_TORCH_BURNOUT
	tJ RESPAWN_ANCHOR_AMBIENT
	tK RESPAWN_ANCHOR_CHARGE
	tL RESPAWN_ANCHOR_DEPLETE
	tM RESPAWN_ANCHOR_SET_SPAWN
	tN ROOTED_DIRT_BREAK
	tO ROOTED_DIRT_FALL
	tP ROOTED_DIRT_HIT
	tQ ROOTED_DIRT_PLACE
	tR ROOTED_DIRT_STEP
	tS SALMON_AMBIENT
	tT SALMON_DEATH
	tU SALMON_FLOP
	tV SALMON_HURT
	tW SAND_BREAK
	tX SAND_FALL
	tY SAND_HIT
	tZ SAND_PLACE
	ta POWDER_SNOW_PLACE
	tb POWDER_SNOW_STEP
	tc PUFFER_FISH_AMBIENT
	td PUFFER_FISH_BLOW_OUT
	te PUFFER_FISH_BLOW_UP
	tf PUFFER_FISH_DEATH
	tg PUFFER_FISH_FLOP
	th PUFFER_FISH_HURT
	ti PUFFER_FISH_STING
	tj PUMPKIN_CARVE
	tk RABBIT_AMBIENT
	tl RABBIT_ATTACK
	tm RABBIT_DEATH
	tn RABBIT_HURT
	to RABBIT_JUMP
	tp RAID_HORN
	tq RAVAGER_AMBIENT
	tr RAVAGER_ATTACK
	ts RAVAGER_CELEBRATE
	tt RAVAGER_DEATH
	tu RAVAGER_HURT
	tv RAVAGER_STEP
	tw RAVAGER_STUNNED
	tx RAVAGER_ROAR
	ty NETHER_GOLD_ORE_BREAK
	tz NETHER_GOLD_ORE_FALL
	u AMBIENT_WARPED_FOREST_ADDITIONS
	uA SCULK_SHRIEKER_BREAK
	uB SCULK_SHRIEKER_FALL
	uC SCULK_SHRIEKER_HIT
	uD SCULK_SHRIEKER_PLACE
	uE SCULK_SHRIEKER_SHRIEK
	uF SCULK_SHRIEKER_STEP
	uG SCULK_VEIN_BREAK
	uH SCULK_VEIN_FALL
	uI SCULK_VEIN_HIT
	uJ SCULK_VEIN_PLACE
	uK SCULK_VEIN_STEP
	uL SHEEP_AMBIENT
	uM SHEEP_DEATH
	uN SHEEP_HURT
	uO SHEEP_SHEAR
	uP SHEEP_STEP
	uQ SHIELD_BLOCK
	uR SHIELD_BREAK
	uS SHROOMLIGHT_BREAK
	uT SHROOMLIGHT_STEP
	uU SHROOMLIGHT_PLACE
	uV SHROOMLIGHT_HIT
	uW SHROOMLIGHT_FALL
	uX SHOVEL_FLATTEN
	uY SHULKER_AMBIENT
	uZ SHULKER_BOX_CLOSE
	ua SAND_STEP
	ub SCAFFOLDING_BREAK
	uc SCAFFOLDING_FALL
	ud SCAFFOLDING_HIT
	ue SCAFFOLDING_PLACE
	uf SCAFFOLDING_STEP
	ug SCULK_BLOCK_SPREAD
	uh SCULK_BLOCK_CHARGE
	ui SCULK_BLOCK_BREAK
	uj SCULK_BLOCK_FALL
	uk SCULK_BLOCK_HIT
	ul SCULK_BLOCK_PLACE
	um SCULK_BLOCK_STEP
	un SCULK_CATALYST_BLOOM
	uo SCULK_CATALYST_BREAK
	up SCULK_CATALYST_FALL
	uq SCULK_CATALYST_HIT
	ur SCULK_CATALYST_PLACE
	us SCULK_CATALYST_STEP
	ut SCULK_CLICKING
	uu SCULK_CLICKING_STOP
	uv SCULK_SENSOR_BREAK
	uw SCULK_SENSOR_FALL
	ux SCULK_SENSOR_HIT
	uy SCULK_SENSOR_PLACE
	uz SCULK_SENSOR_STEP
	v AMBIENT_WARPED_FOREST_LOOP
	vA SKELETON_SHOOT
	vB SKELETON_STEP
	vC SLIME_ATTACK
	vD SLIME_DEATH
	vE SLIME_HURT
	vF SLIME_JUMP
	vG SLIME_SQUISH
	vH SLIME_BLOCK_BREAK
	vI SLIME_BLOCK_FALL
	vJ SLIME_BLOCK_HIT
	vK SLIME_BLOCK_PLACE
	vL SLIME_BLOCK_STEP
	vM SMALL_AMETHYST_BUD_BREAK
	vN SMALL_AMETHYST_BUD_PLACE
	vO SMALL_DRIPLEAF_BREAK
	vP SMALL_DRIPLEAF_FALL
	vQ SMALL_DRIPLEAF_HIT
	vR SMALL_DRIPLEAF_PLACE
	vS SMALL_DRIPLEAF_STEP
	vT SOUL_SAND_BREAK
	vU SOUL_SAND_STEP
	vV SOUL_SAND_PLACE
	vW SOUL_SAND_HIT
	vX SOUL_SAND_FALL
	vY SOUL_SOIL_BREAK
	vZ SOUL_SOIL_STEP
	va SHULKER_BOX_OPEN
	vb SHULKER_BULLET_HIT
	vc SHULKER_BULLET_HURT
	vd SHULKER_CLOSE
	ve SHULKER_DEATH
	vf SHULKER_HURT
	vg SHULKER_HURT_CLOSED
	vh SHULKER_OPEN
	vi SHULKER_SHOOT
	vj SHULKER_TELEPORT
	vk SILVERFISH_AMBIENT
	vl SILVERFISH_DEATH
	vm SILVERFISH_HURT
	vn SILVERFISH_STEP
	vo SKELETON_AMBIENT
	vp SKELETON_CONVERTED_TO_STRAY
	vq SKELETON_DEATH
	vr SKELETON_HORSE_AMBIENT
	vs SKELETON_HORSE_DEATH
	vt SKELETON_HORSE_HURT
	vu SKELETON_HORSE_SWIM
	vv SKELETON_HORSE_AMBIENT_WATER
	vw SKELETON_HORSE_GALLOP_WATER
	vx SKELETON_HORSE_JUMP_WATER
	vy SKELETON_HORSE_STEP_WATER
	vz SKELETON_HURT
	w AMBIENT_WARPED_FOREST_MOOD
	wA SNIFFER_IDLE
	wB SNIFFER_HURT
	wC SNIFFER_DEATH
	wD SNIFFER_DROP_SEED
	wE SNIFFER_SCENTING
	wF SNIFFER_SNIFFING
	wG SNIFFER_SEARCHING
	wH SNIFFER_DIGGING
	wI SNIFFER_DIGGING_STOP
	wJ SNIFFER_HAPPY
	wK SNIFFER_EGG_PLOP
	wL SNIFFER_EGG_CRACK
	wM SNIFFER_EGG_HATCH
	wN SNOWBALL_THROW
	wO SNOW_BREAK
	wP SNOW_FALL
	wQ SNOW_GOLEM_AMBIENT
	wR SNOW_GOLEM_DEATH
	wS SNOW_GOLEM_HURT
	wT SNOW_GOLEM_SHOOT
	wU SNOW_GOLEM_SHEAR
	wV SNOW_HIT
	wW SNOW_PLACE
	wX SNOW_STEP
	wY SPIDER_AMBIENT
	wZ SPIDER_DEATH
	wa SOUL_SOIL_PLACE
	wb SOUL_SOIL_HIT
	wc SOUL_SOIL_FALL
	wd SOUL_ESCAPE
	we SPORE_BLOSSOM_BREAK
	wf SPORE_BLOSSOM_FALL
	wg SPORE_BLOSSOM_HIT
	wh SPORE_BLOSSOM_PLACE
	wi SPORE_BLOSSOM_STEP
	wj STRIDER_AMBIENT
	wk STRIDER_HAPPY
	wl STRIDER_RETREAT
	wm STRIDER_DEATH
	wn STRIDER_HURT
	wo STRIDER_STEP
	wp STRIDER_STEP_LAVA
	wq STRIDER_EAT
	wr STRIDER_SADDLE
	ws SLIME_DEATH_SMALL
	wt SLIME_HURT_SMALL
	wu SLIME_JUMP_SMALL
	wv SLIME_SQUISH_SMALL
	ww SMITHING_TABLE_USE
	wx SMOKER_SMOKE
	wy SNIFFER_STEP
	wz SNIFFER_EAT
	x AMBIENT_UNDERWATER_ENTER
	xA STRAY_DEATH
	xB STRAY_HURT
	xC STRAY_STEP
	xD SWEET_BERRY_BUSH_BREAK
	xE SWEET_BERRY_BUSH_PLACE
	xF SWEET_BERRY_BUSH_PICK_BERRIES
	xG TADPOLE_DEATH
	xH TADPOLE_FLOP
	xI TADPOLE_GROW_UP
	xJ TADPOLE_HURT
	xK THORNS_HIT
	xL TNT_PRIMED
	xM TOTEM_USE
	xN TRIDENT_HIT
	xO TRIDENT_HIT_GROUND
	xP TRIDENT_RETURN
	xQ TRIDENT_RIPTIDE_1
	xR TRIDENT_RIPTIDE_2
	xS TRIDENT_RIPTIDE_3
	xT TRIDENT_THROW
	xU TRIDENT_THUNDER
	xV TRIPWIRE_ATTACH
	xW TRIPWIRE_CLICK_OFF
	xX TRIPWIRE_CLICK_ON
	xY TRIPWIRE_DETACH
	xZ TROPICAL_FISH_AMBIENT
	xa SPIDER_HURT
	xb SPIDER_STEP
	xc SPLASH_POTION_BREAK
	xd SPLASH_POTION_THROW
	xe SPONGE_BREAK
	xf SPONGE_FALL
	xg SPONGE_HIT
	xh SPONGE_PLACE
	xi SPONGE_STEP
	xj SPONGE_ABSORB
	xk SPYGLASS_USE
	xl SPYGLASS_STOP_USING
	xm SQUID_AMBIENT
	xn SQUID_DEATH
	xo SQUID_HURT
	xp SQUID_SQUIRT
	xq STONE_BREAK
	xr STONE_BUTTON_CLICK_OFF
	xs STONE_BUTTON_CLICK_ON
	xt STONE_FALL
	xu STONE_HIT
	xv STONE_PLACE
	xw STONE_PRESSURE_PLATE_CLICK_OFF
	xx STONE_PRESSURE_PLATE_CLICK_ON
	xy STONE_STEP
	xz STRAY_AMBIENT
	y AMBIENT_UNDERWATER_EXIT
	yA UI_TOAST_CHALLENGE_COMPLETE
	yB UI_TOAST_IN
	yC UI_TOAST_OUT
	yD VEX_AMBIENT
	yE VEX_CHARGE
	yF VEX_DEATH
	yG VEX_HURT
	yH VILLAGER_AMBIENT
	yI VILLAGER_CELEBRATE
	yJ VILLAGER_DEATH
	yK VILLAGER_HURT
	yL VILLAGER_NO
	yM VILLAGER_TRADE
	yN VILLAGER_YES
	yO VILLAGER_WORK_ARMORER
	yP VILLAGER_WORK_BUTCHER
	yQ VILLAGER_WORK_CARTOGRAPHER
	yR VILLAGER_WORK_CLERIC
	yS VILLAGER_WORK_FARMER
	yT VILLAGER_WORK_FISHERMAN
	yU VILLAGER_WORK_FLETCHER
	yV VILLAGER_WORK_LEATHERWORKER
	yW VILLAGER_WORK_LIBRARIAN
	yX VILLAGER_WORK_MASON
	yY VILLAGER_WORK_SHEPHERD
	yZ VILLAGER_WORK_TOOLSMITH
	ya TROPICAL_FISH_DEATH
	yb TROPICAL_FISH_FLOP
	yc TROPICAL_FISH_HURT
	yd TUFF_BREAK
	ye TUFF_STEP
	yf TUFF_PLACE
	yg TUFF_HIT
	yh TUFF_FALL
	yi TURTLE_AMBIENT_LAND
	yj TURTLE_DEATH
	yk TURTLE_DEATH_BABY
	yl TURTLE_EGG_BREAK
	ym TURTLE_EGG_CRACK
	yn TURTLE_EGG_HATCH
	yo TURTLE_HURT
	yp TURTLE_HURT_BABY
	yq TURTLE_LAY_EGG
	yr TURTLE_SHAMBLE
	ys TURTLE_SHAMBLE_BABY
	yt TURTLE_SWIM
	yu UI_BUTTON_CLICK
	yv UI_LOOM_SELECT_PATTERN
	yw UI_LOOM_TAKE_RESULT
	yx UI_CARTOGRAPHY_TABLE_TAKE_RESULT
	yy UI_STONECUTTER_TAKE_RESULT
	yz UI_STONECUTTER_SELECT_RECIPE
	z AMBIENT_UNDERWATER_LOOP
	zA WARDEN_DIG
	zB WARDEN_EMERGE
	zC WARDEN_HEARTBEAT
	zD WARDEN_HURT
	zE WARDEN_LISTENING
	zF WARDEN_LISTENING_ANGRY
	zG WARDEN_NEARBY_CLOSE
	zH WARDEN_NEARBY_CLOSER
	zI WARDEN_NEARBY_CLOSEST
	zJ WARDEN_ROAR
	zK WARDEN_SNIFF
	zL WARDEN_SONIC_BOOM
	zM WARDEN_SONIC_CHARGE
	zN WARDEN_STEP
	zO WARDEN_TENDRIL_CLICKS
	zP WAXED_SIGN_INTERACT_FAIL
	zQ WATER_AMBIENT
	zR WEATHER_RAIN
	zS WEATHER_RAIN_ABOVE
	zT WET_GRASS_BREAK
	zU WET_GRASS_FALL
	zV WET_GRASS_HIT
	zW WET_GRASS_PLACE
	zX WET_GRASS_STEP
	zY WET_SPONGE_BREAK
	zZ WET_SPONGE_FALL
	za VILLAGER_WORK_WEAPONSMITH
	zb VINDICATOR_AMBIENT
	zc VINDICATOR_CELEBRATE
	zd VINDICATOR_DEATH
	ze VINDICATOR_HURT
	zf VINE_BREAK
	zg VINE_FALL
	zh VINE_HIT
	zi VINE_PLACE
	zj VINE_STEP
	zk LILY_PAD_PLACE
	zl WANDERING_TRADER_AMBIENT
	zm WANDERING_TRADER_DEATH
	zn WANDERING_TRADER_DISAPPEARED
	zo WANDERING_TRADER_DRINK_MILK
	zp WANDERING_TRADER_DRINK_POTION
	zq WANDERING_TRADER_HURT
	zr WANDERING_TRADER_NO
	zs WANDERING_TRADER_REAPPEARED
	zt WANDERING_TRADER_TRADE
	zu WANDERING_TRADER_YES
	zv WARDEN_AGITATED
	zw WARDEN_AMBIENT
	zx WARDEN_ANGRY
	zy WARDEN_ATTACK_IMPACT
	zz WARDEN_DEATH
	a ()Lcom/google/common/collect/ImmutableList; registerGoatHornSoundVariants
	a (Ljava/lang/String;)Lnet/minecraft/sounds/SoundEffect; register
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/sounds/SoundEffect; register
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/sounds/SoundEffect; register
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;F)Lnet/minecraft/core/Holder; register
	b (Ljava/lang/String;)Lhe$c; registerForHolder
	b (Lnet/minecraft/resources/MinecraftKey;)Lhe$c; registerForHolder
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lhe$c; registerForHolder
net/minecraft/stats/Counter net/minecraft/stats/StatFormatter
	a DECIMAL_FORMAT
	b DEFAULT
	c DIVIDE_BY_TEN
	d DISTANCE
	e TIME
net/minecraft/stats/RecipeBookServer net/minecraft/stats/ServerRecipeBook
	c RECIPE_BOOK_TAG
	d LOGGER
	a (Ljava/util/Collection;Lnet/minecraft/server/level/EntityPlayer;)I addRecipes
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/item/crafting/CraftingManager;)V fromNbt
	a (Lnet/minecraft/nbt/NBTTagList;Ljava/util/function/Consumer;Lnet/minecraft/world/item/crafting/CraftingManager;)V loadRecipes
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRecipes$Action;Lnet/minecraft/server/level/EntityPlayer;Ljava/util/List;)V sendRecipes
	a (Lnet/minecraft/server/level/EntityPlayer;)V sendInitialRecipeBook
	b ()Lnet/minecraft/nbt/NBTTagCompound; toNbt
	b (Ljava/util/Collection;Lnet/minecraft/server/level/EntityPlayer;)I removeRecipes
net/minecraft/stats/ServerStatisticManager net/minecraft/stats/ServerStatsCounter
	b LOGGER
	c server
	d file
	e dirty
	a ()V save
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/nbt/NBTTagCompound; fromJson
	a (Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V parseLocal
	a (Lnet/minecraft/server/level/EntityPlayer;)V sendStats
	a (Lnet/minecraft/stats/StatisticWrapper;Ljava/lang/String;)Ljava/util/Optional; getStat
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/stats/Statistic;I)V setValue
	b ()Ljava/lang/String; toJson
	b (Lnet/minecraft/stats/Statistic;)Lnet/minecraft/resources/MinecraftKey; getKey
	c ()V markAllDirty
	d ()Ljava/util/Set; getDirty
net/minecraft/stats/Statistic net/minecraft/stats/Stat
	n formatter
	o value
	p type
	a ()Lnet/minecraft/stats/StatisticWrapper; getType
	a (I)Ljava/lang/String; format
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/String; locationToKey
	a (Lnet/minecraft/stats/StatisticWrapper;Ljava/lang/Object;)Ljava/lang/String; buildName
	b ()Ljava/lang/Object; getValue
net/minecraft/stats/StatisticList net/minecraft/stats/Stats
	A HORSE_ONE_CM
	B AVIATE_ONE_CM
	C SWIM_ONE_CM
	D STRIDER_ONE_CM
	E JUMP
	F DROP
	G DAMAGE_DEALT
	H DAMAGE_DEALT_ABSORBED
	I DAMAGE_DEALT_RESISTED
	J DAMAGE_TAKEN
	K DAMAGE_BLOCKED_BY_SHIELD
	L DAMAGE_ABSORBED
	M DAMAGE_RESISTED
	N DEATHS
	O MOB_KILLS
	P ANIMALS_BRED
	Q PLAYER_KILLS
	R FISH_CAUGHT
	S TALKED_TO_VILLAGER
	T TRADED_WITH_VILLAGER
	U EAT_CAKE_SLICE
	V FILL_CAULDRON
	W USE_CAULDRON
	X CLEAN_ARMOR
	Y CLEAN_BANNER
	Z CLEAN_SHULKER_BOX
	a BLOCK_MINED
	aA RAID_TRIGGER
	aB RAID_WIN
	aC INTERACT_WITH_ANVIL
	aD INTERACT_WITH_GRINDSTONE
	aE TARGET_HIT
	aF INTERACT_WITH_SMITHING_TABLE
	aa INTERACT_WITH_BREWINGSTAND
	ab INTERACT_WITH_BEACON
	ac INSPECT_DROPPER
	ad INSPECT_HOPPER
	ae INSPECT_DISPENSER
	af PLAY_NOTEBLOCK
	ag TUNE_NOTEBLOCK
	ah POT_FLOWER
	ai TRIGGER_TRAPPED_CHEST
	aj OPEN_ENDERCHEST
	ak ENCHANT_ITEM
	al PLAY_RECORD
	am INTERACT_WITH_FURNACE
	an INTERACT_WITH_CRAFTING_TABLE
	ao OPEN_CHEST
	ap SLEEP_IN_BED
	aq OPEN_SHULKER_BOX
	ar OPEN_BARREL
	as INTERACT_WITH_BLAST_FURNACE
	at INTERACT_WITH_SMOKER
	au INTERACT_WITH_LECTERN
	av INTERACT_WITH_CAMPFIRE
	aw INTERACT_WITH_CARTOGRAPHY_TABLE
	ax INTERACT_WITH_LOOM
	ay INTERACT_WITH_STONECUTTER
	az BELL_RING
	b ITEM_CRAFTED
	c ITEM_USED
	d ITEM_BROKEN
	e ITEM_PICKED_UP
	f ITEM_DROPPED
	g ENTITY_KILLED
	h ENTITY_KILLED_BY
	i CUSTOM
	j LEAVE_GAME
	k PLAY_TIME
	l TOTAL_WORLD_TIME
	m TIME_SINCE_DEATH
	n TIME_SINCE_REST
	o CROUCH_TIME
	p WALK_ONE_CM
	q CROUCH_ONE_CM
	r SPRINT_ONE_CM
	s WALK_ON_WATER_ONE_CM
	t FALL_ONE_CM
	u CLIMB_ONE_CM
	v FLY_ONE_CM
	w WALK_UNDER_WATER_ONE_CM
	x MINECART_ONE_CM
	y BOAT_ONE_CM
	z PIG_ONE_CM
	a (Ljava/lang/String;Lnet/minecraft/core/IRegistry;)Lnet/minecraft/stats/StatisticWrapper; makeRegistryStatType
	a (Ljava/lang/String;Lnet/minecraft/stats/Counter;)Lnet/minecraft/resources/MinecraftKey; makeCustomStat
net/minecraft/stats/StatisticManager net/minecraft/stats/StatsCounter
	a stats
	a (Lnet/minecraft/stats/Statistic;)I getValue
	a (Lnet/minecraft/stats/StatisticWrapper;Ljava/lang/Object;)I getValue
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/stats/Statistic;I)V setValue
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/stats/Statistic;I)V increment
net/minecraft/stats/StatisticWrapper net/minecraft/stats/StatType
	a registry
	b map
	c displayName
	a ()Lnet/minecraft/core/IRegistry; getRegistry
	a (Ljava/lang/Object;)Z contains
	a (Ljava/lang/Object;Lnet/minecraft/stats/Counter;)Lnet/minecraft/stats/Statistic; get
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	b (Ljava/lang/Object;)Lnet/minecraft/stats/Statistic; get
net/minecraft/tags/TagDataPack net/minecraft/tags/TagLoader
	a LOGGER
	b idToValue
	c directory
	a (Laqf$a;Ljava/util/List;)Lcom/mojang/datafixers/util/Either; build
	a (Ljava/util/Map;)Ljava/util/Map; build
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)Ljava/util/Map; load
	b (Lnet/minecraft/server/packs/resources/IResourceManager;)Ljava/util/Map; loadAndBuild
net/minecraft/tags/TagRegistry net/minecraft/tags/TagManager
	a CUSTOM_REGISTRY_DIRECTORIES
	b registryAccess
	c results
	a ()Ljava/util/List; getResult
	a (Lann$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/String; getTagDir
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/concurrent/Executor;Lhr$d;)Ljava/util/concurrent/CompletableFuture; createLoader
net/minecraft/tags/TagsBlock net/minecraft/tags/BlockTags
	A SPRUCE_LOGS
	B MANGROVE_LOGS
	C CRIMSON_STEMS
	D WARPED_STEMS
	E BAMBOO_BLOCKS
	F WART_BLOCKS
	G BANNERS
	H SAND
	I SMELTS_TO_GLASS
	J STAIRS
	K SLABS
	L WALLS
	M ANVIL
	N RAILS
	O LEAVES
	P TRAPDOORS
	Q SMALL_FLOWERS
	R BEDS
	S FENCES
	T TALL_FLOWERS
	U FLOWERS
	V PIGLIN_REPELLENTS
	W GOLD_ORES
	X IRON_ORES
	Y DIAMOND_ORES
	Z REDSTONE_ORES
	a WOOL
	aA ALL_SIGNS
	aB DRAGON_IMMUNE
	aC DRAGON_TRANSPARENT
	aD WITHER_IMMUNE
	aE WITHER_SUMMON_BASE_BLOCKS
	aF BEEHIVES
	aG CROPS
	aH BEE_GROWABLES
	aI PORTALS
	aJ FIRE
	aK NYLIUM
	aL BEACON_BASE_BLOCKS
	aM SOUL_SPEED_BLOCKS
	aN WALL_POST_OVERRIDE
	aO CLIMBABLE
	aP FALL_DAMAGE_RESETTING
	aQ SHULKER_BOXES
	aR HOGLIN_REPELLENTS
	aS SOUL_FIRE_BASE_BLOCKS
	aT STRIDER_WARM_BLOCKS
	aU CAMPFIRES
	aV GUARDED_BY_PIGLINS
	aW PREVENT_MOB_SPAWNING_INSIDE
	aX FENCE_GATES
	aY UNSTABLE_BOTTOM_CENTER
	aZ MUSHROOM_GROW_BLOCK
	aa LAPIS_ORES
	ab COAL_ORES
	ac EMERALD_ORES
	ad COPPER_ORES
	ae CANDLES
	af DIRT
	ag TERRACOTTA
	ah CONCRETE_POWDER
	ai COMPLETES_FIND_TREE_TUTORIAL
	aj FLOWER_POTS
	ak ENDERMAN_HOLDABLE
	al ICE
	am VALID_SPAWN
	an IMPERMEABLE
	ao UNDERWATER_BONEMEALS
	ap CORAL_BLOCKS
	aq WALL_CORALS
	ar CORAL_PLANTS
	as CORALS
	at BAMBOO_PLANTABLE_ON
	au STANDING_SIGNS
	av WALL_SIGNS
	aw SIGNS
	ax CEILING_HANGING_SIGNS
	ay WALL_HANGING_SIGNS
	az ALL_HANGING_SIGNS
	b PLANKS
	bA MINEABLE_WITH_HOE
	bB MINEABLE_WITH_PICKAXE
	bC MINEABLE_WITH_SHOVEL
	bD SWORD_EFFICIENT
	bE NEEDS_DIAMOND_TOOL
	bF NEEDS_IRON_TOOL
	bG NEEDS_STONE_TOOL
	bH FEATURES_CANNOT_REPLACE
	bI LAVA_POOL_STONE_CANNOT_REPLACE
	bJ GEODE_INVALID_BLOCKS
	bK FROG_PREFER_JUMP_TO
	bL SCULK_REPLACEABLE
	bM SCULK_REPLACEABLE_WORLD_GEN
	bN ANCIENT_CITY_REPLACEABLE
	bO VIBRATION_RESONATORS
	bP ANIMALS_SPAWNABLE_ON
	bQ AXOLOTLS_SPAWNABLE_ON
	bR GOATS_SPAWNABLE_ON
	bS MOOSHROOMS_SPAWNABLE_ON
	bT PARROTS_SPAWNABLE_ON
	bU POLAR_BEARS_SPAWNABLE_ON_ALTERNATE
	bV RABBITS_SPAWNABLE_ON
	bW FOXES_SPAWNABLE_ON
	bX WOLVES_SPAWNABLE_ON
	bY FROGS_SPAWNABLE_ON
	bZ AZALEA_GROWS_ON
	ba INFINIBURN_OVERWORLD
	bb INFINIBURN_NETHER
	bc INFINIBURN_END
	bd BASE_STONE_OVERWORLD
	be STONE_ORE_REPLACEABLES
	bf DEEPSLATE_ORE_REPLACEABLES
	bg BASE_STONE_NETHER
	bh OVERWORLD_CARVER_REPLACEABLES
	bi NETHER_CARVER_REPLACEABLES
	bj CANDLE_CAKES
	bk CAULDRONS
	bl CRYSTAL_SOUND_BLOCKS
	bm INSIDE_STEP_SOUND_BLOCKS
	bn COMBINATION_STEP_SOUND_BLOCKS
	bo CAMEL_SAND_STEP_SOUND_BLOCKS
	bp OCCLUDES_VIBRATION_SIGNALS
	bq DAMPENS_VIBRATIONS
	br DRIPSTONE_REPLACEABLE
	bs CAVE_VINES
	bt MOSS_REPLACEABLE
	bu LUSH_GROUND_REPLACEABLE
	bv AZALEA_ROOT_REPLACEABLE
	bw SMALL_DRIPLEAF_PLACEABLE
	bx BIG_DRIPLEAF_PLACEABLE
	by SNOW
	bz MINEABLE_WITH_AXE
	c STONE_BRICKS
	ca CONVERTABLE_TO_MUD
	cb MANGROVE_LOGS_CAN_GROW_THROUGH
	cc MANGROVE_ROOTS_CAN_GROW_THROUGH
	cd DEAD_BUSH_MAY_PLACE_ON
	ce SNAPS_GOAT_HORN
	cf REPLACEABLE_BY_TREES
	cg SNOW_LAYER_CANNOT_SURVIVE_ON
	ch SNOW_LAYER_CAN_SURVIVE_ON
	ci INVALID_SPAWN_INSIDE
	cj SNIFFER_DIGGABLE_BLOCK
	ck SNIFFER_EGG_HATCH_BOOST
	cl TRAIL_RUINS_REPLACEABLE
	cm REPLACEABLE
	cn ENCHANTMENT_POWER_PROVIDER
	co ENCHANTMENT_POWER_TRANSMITTER
	cp MAINTAINS_FARMLAND
	d WOODEN_BUTTONS
	e STONE_BUTTONS
	f BUTTONS
	g WOOL_CARPETS
	h WOODEN_DOORS
	i WOODEN_STAIRS
	j WOODEN_SLABS
	k WOODEN_FENCES
	l PRESSURE_PLATES
	m WOODEN_PRESSURE_PLATES
	n STONE_PRESSURE_PLATES
	o WOODEN_TRAPDOORS
	p DOORS
	q SAPLINGS
	r LOGS_THAT_BURN
	s OVERWORLD_NATURAL_LOGS
	t LOGS
	u DARK_OAK_LOGS
	v OAK_LOGS
	w BIRCH_LOGS
	x ACACIA_LOGS
	y CHERRY_LOGS
	z JUNGLE_LOGS
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/TagsEntity net/minecraft/tags/EntityTypeTags
	a SKELETONS
	b RAIDERS
	c BEEHIVE_INHABITORS
	d ARROWS
	e IMPACT_PROJECTILES
	f POWDER_SNOW_WALKABLE_MOBS
	g AXOLOTL_ALWAYS_HOSTILES
	h AXOLOTL_HUNT_TARGETS
	i FREEZE_IMMUNE_ENTITY_TYPES
	j FREEZE_HURTS_EXTRA_TYPES
	k FROG_FOOD
	l FALL_DAMAGE_IMMUNE
	m DISMOUNTS_UNDERWATER
	n NON_CONTROLLING_RIDER
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/TagsFluid net/minecraft/tags/FluidTags
	a WATER
	b LAVA
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/TagsItem net/minecraft/tags/ItemTags
	A CRIMSON_STEMS
	B WARPED_STEMS
	C BAMBOO_BLOCKS
	D WART_BLOCKS
	E BANNERS
	F SAND
	G SMELTS_TO_GLASS
	H STAIRS
	I SLABS
	J WALLS
	K ANVIL
	L RAILS
	M LEAVES
	N TRAPDOORS
	O SMALL_FLOWERS
	P BEDS
	Q FENCES
	R TALL_FLOWERS
	S FLOWERS
	T PIGLIN_REPELLENTS
	U PIGLIN_LOVED
	V IGNORED_BY_PIGLIN_BABIES
	W PIGLIN_FOOD
	X FOX_FOOD
	Y GOLD_ORES
	Z IRON_ORES
	a WOOL
	aA AXOLOTL_TEMPT_ITEMS
	aB DAMPENS_VIBRATIONS
	aC CLUSTER_MAX_HARVESTABLES
	aD COMPASSES
	aE HANGING_SIGNS
	aF CREEPER_IGNITERS
	aG NOTE_BLOCK_TOP_INSTRUMENTS
	aH TRIMMABLE_ARMOR
	aI TRIM_MATERIALS
	aJ TRIM_TEMPLATES
	aK SNIFFER_FOOD
	aL DECORATED_POT_SHERDS
	aM DECORATED_POT_INGREDIENTS
	aN SWORDS
	aO AXES
	aP HOES
	aQ PICKAXES
	aR SHOVELS
	aS TOOLS
	aT BREAKS_DECORATED_POTS
	aU VILLAGER_PLANTABLE_SEEDS
	aa DIAMOND_ORES
	ab REDSTONE_ORES
	ac LAPIS_ORES
	ad COAL_ORES
	ae EMERALD_ORES
	af COPPER_ORES
	ag NON_FLAMMABLE_WOOD
	ah SOUL_FIRE_BASE_BLOCKS
	ai CANDLES
	aj DIRT
	ak TERRACOTTA
	al COMPLETES_FIND_TREE_TUTORIAL
	am BOATS
	an CHEST_BOATS
	ao FISHES
	ap SIGNS
	aq MUSIC_DISCS
	ar CREEPER_DROP_MUSIC_DISCS
	as COALS
	at ARROWS
	au LECTERN_BOOKS
	av BOOKSHELF_BOOKS
	aw BEACON_PAYMENT_ITEMS
	ax STONE_TOOL_MATERIALS
	ay STONE_CRAFTING_MATERIALS
	az FREEZE_IMMUNE_WEARABLES
	b PLANKS
	c STONE_BRICKS
	d WOODEN_BUTTONS
	e STONE_BUTTONS
	f BUTTONS
	g WOOL_CARPETS
	h WOODEN_DOORS
	i WOODEN_STAIRS
	j WOODEN_SLABS
	k WOODEN_FENCES
	l FENCE_GATES
	m WOODEN_PRESSURE_PLATES
	n WOODEN_TRAPDOORS
	o DOORS
	p SAPLINGS
	q LOGS_THAT_BURN
	r LOGS
	s DARK_OAK_LOGS
	t OAK_LOGS
	u BIRCH_LOGS
	v ACACIA_LOGS
	w CHERRY_LOGS
	x JUNGLE_LOGS
	y SPRUCE_LOGS
	z MANGROVE_LOGS
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; bind
net/minecraft/util/ArraySetSorted net/minecraft/util/SortedArraySet
	a DEFAULT_INITIAL_CAPACITY
	b comparator
	c contents
	d size
	a ()Lnet/minecraft/util/ArraySetSorted; create
	a (I)Lnet/minecraft/util/ArraySetSorted; create
	a (Ljava/lang/Object;)Ljava/lang/Object; addOrGet
	a (Ljava/lang/Object;I)V addInternal
	a (Ljava/util/Comparator;)Lnet/minecraft/util/ArraySetSorted; create
	a (Ljava/util/Comparator;I)Lnet/minecraft/util/ArraySetSorted; create
	a ([Ljava/lang/Object;)[Ljava/lang/Object; castRawArray
	b ()Ljava/lang/Object; first
	b (I)I getInsertionPosition
	b (Ljava/lang/Object;)Ljava/lang/Object; get
	c ()Ljava/lang/Object; last
	c (I)V grow
	c (Ljava/lang/Object;)I findIndex
	d (I)V removeInternal
	e (I)Ljava/lang/Object; getInternal
net/minecraft/util/CSVWriter net/minecraft/util/CsvOutput
	a LINE_SEPARATOR
	b FIELD_SEPARATOR
	c output
	d columnCount
	a ()Laqy$a; builder
	a (Ljava/lang/Object;)Ljava/lang/String; getStringValue
	a (Ljava/util/stream/Stream;)V writeLine
	a ([Ljava/lang/Object;)V writeRow
net/minecraft/util/ChatDeserializer net/minecraft/util/GsonHelper
	a GSON
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; fromNullableJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; fromNullableJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; fromNullableJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; fromNullableJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/JsonElement;)Z isStringValue
	a (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String; convertToString
	a (Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; convertToObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isStringValue
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;B)B getAsByte
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;C)C getAsCharacter
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;D)D getAsDouble
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;F)F getAsFloat
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;I)I getAsInt
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;J)J getAsLong
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray; getAsJsonArray
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; getAsObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject; getAsJsonObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; getAsObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getAsString
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal; getAsBigDecimal
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger; getAsBigInteger
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/core/Holder;)Lnet/minecraft/core/Holder; getAsItem
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;S)S getAsShort
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z getAsBoolean
	a (Lcom/google/gson/stream/JsonWriter;Lcom/google/gson/JsonElement;Ljava/util/Comparator;)V writeValue
	a (Ljava/io/Reader;)Lcom/google/gson/JsonObject; parse
	a (Ljava/io/Reader;Z)Lcom/google/gson/JsonObject; parse
	a (Ljava/lang/String;)Lcom/google/gson/JsonObject; parse
	a (Ljava/lang/String;Z)Lcom/google/gson/JsonObject; parse
	a (Ljava/util/Collection;Ljava/util/Comparator;)Ljava/util/Collection; sortByKeyIfNeeded
	b (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; fromNullableJson
	b (Lcom/google/gson/JsonElement;)Z isNumberValue
	b (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lnet/minecraft/core/Holder; convertToItem
	b (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isNumberValue
	b (Ljava/io/Reader;)Lcom/google/gson/JsonArray; parseArray
	b (Ljava/lang/String;)Lcom/google/gson/JsonArray; parseArray
	c (Lcom/google/gson/JsonElement;)Z isBooleanValue
	c (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z convertToBoolean
	c (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isBooleanValue
	d (Lcom/google/gson/JsonElement;)Ljava/lang/String; getType
	d (Lcom/google/gson/JsonElement;Ljava/lang/String;)D convertToDouble
	d (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isArrayNode
	e (Lcom/google/gson/JsonElement;)Ljava/lang/String; toStableString
	e (Lcom/google/gson/JsonElement;Ljava/lang/String;)F convertToFloat
	e (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isObjectNode
	f (Lcom/google/gson/JsonElement;Ljava/lang/String;)J convertToLong
	f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidPrimitive
	g (Lcom/google/gson/JsonElement;Ljava/lang/String;)I convertToInt
	g (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidNode
	h (Lcom/google/gson/JsonElement;Ljava/lang/String;)B convertToByte
	h (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonElement; getNonNull
	i (Lcom/google/gson/JsonElement;Ljava/lang/String;)C convertToCharacter
	i (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getAsString
	j (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; convertToBigDecimal
	j (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/core/Holder; getAsItem
	k (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; convertToBigInteger
	k (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z getAsBoolean
	l (Lcom/google/gson/JsonElement;Ljava/lang/String;)S convertToShort
	l (Lcom/google/gson/JsonObject;Ljava/lang/String;)D getAsDouble
	m (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; convertToJsonObject
	m (Lcom/google/gson/JsonObject;Ljava/lang/String;)F getAsFloat
	n (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; convertToJsonArray
	n (Lcom/google/gson/JsonObject;Ljava/lang/String;)J getAsLong
	o (Lcom/google/gson/JsonObject;Ljava/lang/String;)I getAsInt
	p (Lcom/google/gson/JsonObject;Ljava/lang/String;)B getAsByte
	q (Lcom/google/gson/JsonObject;Ljava/lang/String;)C getAsCharacter
	r (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; getAsBigDecimal
	s (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; getAsBigInteger
	t (Lcom/google/gson/JsonObject;Ljava/lang/String;)S getAsShort
	u (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; getAsJsonObject
	v (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; getAsJsonArray
net/minecraft/util/ChatTypeAdapterFactory net/minecraft/util/LowerCaseEnumTypeAdapterFactory
	a (Ljava/lang/Object;)Ljava/lang/String; toLowercase
net/minecraft/util/ColorUtil net/minecraft/util/FastColor
net/minecraft/util/CryptographyException net/minecraft/util/CryptException
net/minecraft/util/DataBits net/minecraft/util/BitStorage
	a ()[J getRaw
	a (I)I get
	a (II)I getAndSet
	a (Ljava/util/function/IntConsumer;)V getAll
	a ([I)V unpack
	b ()I getSize
	b (II)V set
	c ()I getBits
	d ()Lnet/minecraft/util/DataBits; copy
net/minecraft/util/EntitySlice net/minecraft/util/ClassInstanceMultiMap
	a byClass
	b baseClass
	c allInstances
	a ()Ljava/util/List; getAllInstances
	a (Ljava/lang/Class;)Ljava/util/Collection; find
net/minecraft/util/ExceptionSuppressor net/minecraft/util/ExceptionCollector
	a result
	a ()V throwIfPresent
	a (Ljava/lang/Throwable;)V add
net/minecraft/util/FormattedString net/minecraft/util/FormattedCharSequence
	a EMPTY
net/minecraft/util/FormattedStringEmpty net/minecraft/util/FormattedCharSink
net/minecraft/util/HttpUtilities net/minecraft/util/HttpUtil
	a DOWNLOAD_EXECUTOR
	b LOGGER
	a ()I getAvailablePort
	a (I)Z isPortAvailable
	a (Ljava/io/File;Ljava/net/URL;Ljava/util/Map;ILnet/minecraft/util/IProgressUpdate;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture; downloadTo
net/minecraft/util/INamable net/minecraft/util/StringRepresentable
	W PRE_BUILT_MAP_THRESHOLD
	a (Ljava/util/function/Supplier;)Lasp$a; fromEnum
	a (Ljava/util/function/Supplier;Ljava/util/function/Function;)Lasp$a; fromEnumWithMapping
	a ([Lnet/minecraft/util/INamable;)Lcom/mojang/serialization/Keyable; keys
	c ()Ljava/lang/String; getSerializedName
net/minecraft/util/IProgressUpdate net/minecraft/util/ProgressListener
	a ()V stop
	a (I)V progressStagePercentage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V progressStartNoAbort
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V progressStart
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V progressStage
net/minecraft/util/LazyInitVar net/minecraft/util/LazyLoadedValue
	a factory
	a ()Ljava/lang/Object; get
net/minecraft/util/MathHelper net/minecraft/util/Mth
	a PI
	b HALF_PI
	c TWO_PI
	d DEG_TO_RAD
	e RAD_TO_DEG
	f EPSILON
	g SQRT_OF_TWO
	h UUID_VERSION
	i UUID_VERSION_TYPE_4
	j UUID_VARIANT
	k UUID_VARIANT_2
	l SIN_SCALE
	m SIN
	n RANDOM
	o MULTIPLY_DE_BRUIJN_BIT_POSITION
	p ONE_SIXTH
	q FRAC_EXP
	r LUT_SIZE
	s FRAC_BIAS
	t ASIN_TAB
	u COS_TAB
	a ()Ljava/util/UUID; createInsecureUUID
	a (D)I floor
	a (DD)D absMax
	a (DDD)D clamp
	a (DDDDD)D clampedMap
	a (DDDDDD)D lerp2
	a (DDDDDDDDDDD)D lerp3
	a (DI)I quantize
	a (F)F sin
	a (FF)Z equal
	a (FFF)F clamp
	a (FFFFF)F catmullrom
	a (FII)I lerpInt
	a (I)I abs
	a (II)I floorDiv
	a (III)I clamp
	a (IIII)Ljava/util/stream/IntStream; outFromOrigin
	a (IILjava/util/function/IntPredicate;)I binarySearch
	a (J)J square
	a (JJJ)J clamp
	a (Ljava/lang/String;I)I getInt
	a (Lnet/minecraft/core/BaseBlockPosition;)J getSeed
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/UUID; createInsecureUUID
	a (Lnet/minecraft/util/RandomSource;DD)D nextDouble
	a (Lnet/minecraft/util/RandomSource;FF)F nextFloat
	a (Lnet/minecraft/util/RandomSource;II)I nextInt
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/AxisAlignedBB;)Z rayIntersectsAABB
	b (D)J lfloor
	b (DD)Z equal
	b (DDD)D clampedLerp
	b (DDDDD)D map
	b (F)F cos
	b (FF)F positiveModulo
	b (FFF)F clampedLerp
	b (FFFFF)F clampedMap
	b (FII)I lerpDiscrete
	b (I)I wrapDegrees
	b (II)I positiveModulo
	b (III)J getSeed
	b (Lnet/minecraft/util/RandomSource;FF)F randomBetween
	b (Lnet/minecraft/util/RandomSource;II)I randomBetweenInclusive
	c (D)I ceil
	c (DD)D positiveModulo
	c (DDD)D inverseLerp
	c (F)F sqrt
	c (FF)F degreesDifference
	c (FFF)F rotateIfNecessary
	c (FFFFF)F map
	c (I)I smallestEncompassingPowerOfTwo
	c (II)Z isMultipleOf
	c (III)Ljava/util/stream/IntStream; outFromOrigin
	c (Lnet/minecraft/util/RandomSource;FF)F normal
	d (D)D wrapDegrees
	d (DD)D atan2
	d (DDD)D lerp
	d (F)I floor
	d (FF)F degreesDifferenceAbs
	d (FFF)F approach
	d (I)Z isPowerOfTwo
	d (II)I roundToward
	e (D)D frac
	e (DD)D lengthSquared
	e (DDD)D rotLerp
	e (F)F abs
	e (FF)F triangleWave
	e (FFF)F approachDegrees
	e (I)I ceillog2
	e (II)I positiveCeilDiv
	f (D)D invSqrt
	f (DD)D length
	f (DDD)D lengthSquared
	f (F)I ceil
	f (FFF)I color
	f (I)I log2
	g (D)D fastInvSqrt
	g (DDD)D length
	g (F)F wrapDegrees
	g (FFF)F inverseLerp
	g (I)I murmurHash3Mixer
	h (D)D smoothstep
	h (F)F frac
	h (FFF)I hsvToRgb
	h (I)I square
	i (D)D smoothstepDerivative
	i (F)F invSqrt
	i (FFF)F lerp
	j (D)I sign
	j (F)F fastInvCubeRoot
	j (FFF)F rotLerp
	k (D)D square
	k (F)F square
	l (D)D wobble
net/minecraft/util/MinecraftEncryption net/minecraft/util/Crypt
	a SIGNING_ALGORITHM
	b SIGNATURE_BYTES
	c RSA_PUBLIC_KEY_HEADER
	d MIME_LINE_SEPARATOR
	e MIME_ENCODER
	f PUBLIC_KEY_CODEC
	g PRIVATE_KEY_CODEC
	h SYMMETRIC_ALGORITHM
	i SYMMETRIC_BITS
	j ASYMMETRIC_ALGORITHM
	k ASYMMETRIC_BITS
	l BYTE_ENCODING
	m HASH_ALGORITHM
	n PEM_RSA_PRIVATE_KEY_HEADER
	o PEM_RSA_PRIVATE_KEY_FOOTER
	p RSA_PUBLIC_KEY_FOOTER
	a ()Ljavax/crypto/SecretKey; generateSecretKey
	a (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; setupCipher
	a (ILjava/security/Key;)Ljavax/crypto/Cipher; getCipher
	a (ILjava/security/Key;[B)[B cipherData
	a (Ljava/lang/String;)Ljava/security/PrivateKey; stringToPemRsaPrivateKey
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Laqw$a;)Ljava/security/Key; rsaStringToKey
	a (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B digestData
	a (Ljava/security/Key;[B)[B encryptUsingKey
	a (Ljava/security/PrivateKey;)Ljava/lang/String; pemRsaPrivateKeyToString
	a (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; decryptByteToSecretKey
	a (Ljava/security/PublicKey;)Ljava/lang/String; rsaPublicKeyToString
	a ([B)Ljava/security/PublicKey; byteToPublicKey
	a ([[B)[B digestData
	b ()Ljava/security/KeyPair; generateKeyPair
	b (Ljava/lang/String;)Ljava/security/PublicKey; stringToRsaPublicKey
	b (Ljava/security/Key;[B)[B decryptUsingKey
	b ([B)Ljava/security/PrivateKey; byteToPrivateKey
net/minecraft/util/RegistryID net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap
	b NOT_FOUND
	c EMPTY_SLOT
	d LOADFACTOR
	e keys
	f values
	g byId
	h nextId
	i size
	a ()V clear
	a (I)Ljava/lang/Object; byId
	a (Ljava/lang/Object;)I getId
	a (Ljava/lang/Object;I)V addMapping
	b ()I size
	b (Ljava/lang/Object;)Z contains
	b (Ljava/lang/Object;I)I indexOf
	c ()Lnet/minecraft/util/RegistryID; copy
	c (I)Lnet/minecraft/util/RegistryID; create
	c (Ljava/lang/Object;)I add
	d ()I nextId
	d (I)Z contains
	d (Ljava/lang/Object;)I hash
	e (I)I getValue
	f (I)V grow
	g (I)I findEmpty
net/minecraft/util/SessionLock net/minecraft/util/DirectoryLock
	a LOCK_FILE
	b lockFile
	c lock
	d DUMMY
	a ()Z isValid
	a (Ljava/nio/file/Path;)Lnet/minecraft/util/SessionLock; create
	b (Ljava/nio/file/Path;)Z isLocked
net/minecraft/util/SessionLock$ExceptionWorldConflict net/minecraft/util/DirectoryLock$LockException
	a (Ljava/nio/file/Path;)Lnet/minecraft/util/SessionLock$ExceptionWorldConflict; alreadyLocked
net/minecraft/util/TimeRange net/minecraft/util/TimeUtil
	a NANOSECONDS_PER_SECOND
	b NANOSECONDS_PER_MILLISECOND
	a (II)Lnet/minecraft/util/valueproviders/UniformInt; rangeOfSeconds
net/minecraft/util/UtilColor net/minecraft/util/StringUtil
	a STRIP_COLOR_PATTERN
	b LINE_PATTERN
	c LINE_END_PATTERN
	a (I)Ljava/lang/String; formatTickDuration
	a (Ljava/lang/String;)Ljava/lang/String; stripColor
	a (Ljava/lang/String;IZ)Ljava/lang/String; truncateStringIfNecessary
	b (Ljava/lang/String;)Z isNullOrEmpty
	c (Ljava/lang/String;)I lineCount
	d (Ljava/lang/String;)Z endsWithNewLine
	e (Ljava/lang/String;)Ljava/lang/String; trimChatMessage
net/minecraft/util/datafix/DataBitsPacked net/minecraft/util/datafix/PackedBitStorage
	a BIT_TO_LONG_SHIFT
	b data
	c bits
	d mask
	e size
	a ()[J getRaw
	a (I)I get
	a (II)V set
	b ()I getBits
net/minecraft/util/datafix/DataConverterRegistry net/minecraft/util/datafix/DataFixers
	a BLENDING_VERSION
	b SAME
	c SAME_NAMESPACED
	d dataFixer
	a ()Lcom/mojang/datafixers/DataFixer; getDataFixer
	a (Lcom/mojang/datafixers/DataFixerBuilder;)V addFixers
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator; createRenamer
	a (Ljava/util/Map;)Ljava/util/function/UnaryOperator; createRenamer
	a (Ljava/util/Set;)Lcom/mojang/datafixers/DataFixer; createFixerUpper
net/minecraft/util/datafix/fixes/ChunkConverterPalette net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix
	A BED_BLOCK_MAP
	B BANNER_BLOCK_MAP
	C AIR
	D SIZE
	a NORTH_WEST_MASK
	b WEST_MASK
	c SOUTH_WEST_MASK
	d SOUTH_MASK
	e SOUTH_EAST_MASK
	f EAST_MASK
	g NORTH_EAST_MASK
	h NORTH_MASK
	i LOGGER
	j VIRTUAL
	k FIX
	l PUMPKIN
	m SNOWY_PODZOL
	n SNOWY_GRASS
	o SNOWY_MYCELIUM
	p UPPER_SUNFLOWER
	q UPPER_LILAC
	r UPPER_TALL_GRASS
	s UPPER_LARGE_FERN
	t UPPER_ROSE_BUSH
	u UPPER_PEONY
	v FLOWER_POT_MAP
	w SKULL_MAP
	x DOOR_MAP
	y NOTE_BLOCK_MAP
	z DYE_COLOR_MAP
	a (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; getName
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String; getProperty
	a (Ljava/util/Map;ILjava/lang/String;)V addBeds
	a (Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V mapSkull
	a (Ljava/util/Map;Ljava/lang/String;I)V mapDoor
	a (Lnet/minecraft/util/RegistryID;Lcom/mojang/serialization/Dynamic;)I idFor
	a (ZZZZ)I getSideMask
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	b (Ljava/util/Map;ILjava/lang/String;)V addBanners
net/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g axis
	h axisDirection
	i $VALUES
	a ()Lnet/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$AxisDirection; getAxisDirection
	b ()Lnet/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$Axis; getAxis
	c ()[Lnet/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction; $values
net/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$Axis net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis
	a X
	b Y
	c Z
	d $VALUES
	a ()[Lnet/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$Axis; $values
net/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$AxisDirection net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection
	a POSITIVE
	b NEGATIVE
	c step
	d $VALUES
	a ()I getStep
	b ()[Lnet/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$AxisDirection; $values
net/minecraft/util/datafix/fixes/DataConverterAddChoices net/minecraft/util/datafix/fixes/AddNewChoices
	a name
	b type
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/util/datafix/fixes/DataConverterAdvancement net/minecraft/util/datafix/fixes/AdvancementsFix
	a RENAMES
net/minecraft/util/datafix/fixes/DataConverterAdvancementBase net/minecraft/util/datafix/fixes/AdvancementsRenameFix
	a name
	b renamer
net/minecraft/util/datafix/fixes/DataConverterArmorStand net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterAttributes net/minecraft/util/datafix/fixes/AttributesRename
	a RENAMES
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fixItemStackTag
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixName
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fixEntity
net/minecraft/util/datafix/fixes/DataConverterBanner net/minecraft/util/datafix/fixes/ItemBannerColorFix
net/minecraft/util/datafix/fixes/DataConverterBannerColour net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterBedBlock net/minecraft/util/datafix/fixes/ChunkBedBlockEntityInjecterFix
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/util/datafix/fixes/DataConverterBedItem net/minecraft/util/datafix/fixes/BedItemColorFix
net/minecraft/util/datafix/fixes/DataConverterBiome net/minecraft/util/datafix/fixes/BiomeFix
	a BIOMES
net/minecraft/util/datafix/fixes/DataConverterBitStorageAlign net/minecraft/util/datafix/fixes/BitStorageAlignFix
	a BIT_TO_LONG_SHIFT
	b SECTION_WIDTH
	c SECTION_HEIGHT
	d SECTION_SIZE
	e HEIGHTMAP_BITS
	f HEIGHTMAP_SIZE
	a (II[J)[J addPadding
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateSections
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateHeightmaps
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; updateBitStorage
net/minecraft/util/datafix/fixes/DataConverterBlockEntityKeepPacked net/minecraft/util/datafix/fixes/BlockEntityKeepPacked
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterBlockEntityUUID net/minecraft/util/datafix/fixes/BlockEntityUUIDFix
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateSkull
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateConduit
net/minecraft/util/datafix/fixes/DataConverterBlockName net/minecraft/util/datafix/fixes/BlockNameFlatteningFix
net/minecraft/util/datafix/fixes/DataConverterBlockRename net/minecraft/util/datafix/fixes/BlockRenameFix
	a name
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Ljava/lang/String;)Ljava/lang/String; fixBlock
net/minecraft/util/datafix/fixes/DataConverterBook net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterCatType net/minecraft/util/datafix/fixes/CatTypeFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterChunkLightRemove net/minecraft/util/datafix/fixes/ChunkLightRemoveFix
net/minecraft/util/datafix/fixes/DataConverterChunkStatus net/minecraft/util/datafix/fixes/ChunkStatusFix
net/minecraft/util/datafix/fixes/DataConverterChunkStatus2 net/minecraft/util/datafix/fixes/ChunkStatusFix2
	a RENAMES_AND_DOWNGRADES
net/minecraft/util/datafix/fixes/DataConverterChunkStructuresTemplateRename net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix
	a RENAMES
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixChildren
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterColorlessShulkerEntity net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterCoral net/minecraft/util/datafix/fixes/RenamedCoralFix
	a RENAMED_IDS
net/minecraft/util/datafix/fixes/DataConverterCoralFan net/minecraft/util/datafix/fixes/RenamedCoralFansFix
	a RENAMED_IDS
net/minecraft/util/datafix/fixes/DataConverterCustomNameEntity net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTagCustomName
net/minecraft/util/datafix/fixes/DataConverterCustomNameItem net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterCustomNameTile net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix
net/minecraft/util/datafix/fixes/DataConverterDropChances net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix
	a FLOAT_LIST_CODEC
	a (Lcom/mojang/serialization/OptionalDynamic;I)Z isZeroList
net/minecraft/util/datafix/fixes/DataConverterDye net/minecraft/util/datafix/fixes/DyeItemRenameFix
	a RENAMED_IDS
net/minecraft/util/datafix/fixes/DataConverterEntity net/minecraft/util/datafix/fixes/EntityIdFix
	a ID_MAP
net/minecraft/util/datafix/fixes/DataConverterEntityBlockState net/minecraft/util/datafix/fixes/EntityBlockStateFix
	a MAP
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateFallingBlock
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; updateBlockToBlockState
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Ljava/lang/String;)I getBlockId
net/minecraft/util/datafix/fixes/DataConverterEntityCatSplit net/minecraft/util/datafix/fixes/EntityCatSplitFix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/util/datafix/fixes/DataConverterEntityCodSalmon net/minecraft/util/datafix/fixes/EntityCodSalmonFix
	a RENAMED_IDS
	b RENAMED_EGG_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/DataConverterEntityName net/minecraft/util/datafix/fixes/EntityRenameFix
	a name
	a (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; getEntity
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
net/minecraft/util/datafix/fixes/DataConverterEntityNameAbstract net/minecraft/util/datafix/fixes/SimpleEntityRenameFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/util/datafix/fixes/DataConverterEntityProjectileOwner net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix
	a (JJ)[I createUUIDArray
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateProjectiles
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerArrow
	a (Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic; setUUID
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerLlamaSpit
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateItemPotion
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerThrowable
net/minecraft/util/datafix/fixes/DataConverterEntityPufferfish net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix
	a RENAMED_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/DataConverterEntityRavagerRename net/minecraft/util/datafix/fixes/EntityRavagerRenameFix
	a RENAMED_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/DataConverterEntityRename net/minecraft/util/datafix/fixes/EntityTheRenameningFix
	a RENAMED_IDS
	b RENAMED_BLOCKS
	c RENAMED_ITEMS
	d MINECRAFT_BRED
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/DataConverterEntityRenameAbstract net/minecraft/util/datafix/fixes/SimplestEntityRenameFix
	a name
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/DataConverterEntityShulkerRotation net/minecraft/util/datafix/fixes/EntityShulkerRotationFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterEntityTippedArrow net/minecraft/util/datafix/fixes/EntityTippedArrowFix
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/DataConverterEntityUUID net/minecraft/util/datafix/fixes/EntityUUIDFix
	b LOGGER
	c ABSTRACT_HORSES
	d TAMEABLE_ANIMALS
	e ANIMALS
	f MOBS
	g LIVING_ENTITIES
	h PROJECTILES
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateLivingEntity
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateEntityUUID
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updatePiglin
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateEvokerFangs
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateZombieVillager
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAreaEffectCloud
	h (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateShulkerBullet
	i (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateItem
	j (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateFox
	k (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateHurtBy
	l (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAnimalOwner
	m (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAnimal
	n (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateMob
	o (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateProjectile
net/minecraft/util/datafix/fixes/DataConverterEntityZombifiedPiglinRename net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix
	a RENAMED_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/DataConverterEquipment net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix
	a (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/util/datafix/fixes/DataConverterFlatten net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix
	a MAP
	b IDS
	c DAMAGE_IDS
	a (Ljava/lang/String;I)Ljava/lang/String; updateItem
net/minecraft/util/datafix/fixes/DataConverterFlattenData net/minecraft/util/datafix/fixes/BlockStateData
	a FILTER_ME
	b LOGGER
	c MAP
	d BLOCK_DEFAULTS
	e ID_BY_OLD
	f ID_BY_OLD_NAME
	a ()V bootstrap0
	a (I)Ljava/lang/String; upgradeBlock
	a (ILjava/lang/String;[Ljava/lang/String;)V register
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; upgradeBlockStateTag
	a (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
	b ()V bootstrap1
	b (I)Lcom/mojang/serialization/Dynamic; getTag
	b (Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; parse
	c ()V bootstrap2
	d ()V bootstrap3
	e ()V bootstrap4
	f ()V bootstrap5
	g ()V bootstrap6
	h ()V bootstrap7
	i ()V bootstrap8
	j ()V bootstrap9
	k ()V bootstrap10
	l ()V bootstrap11
	m ()V bootstrap12
	n ()V bootstrap13
	o ()V bootstrap14
	p ()V bootstrap15
	q ()V finalizeMaps
net/minecraft/util/datafix/fixes/DataConverterFlattenSpawnEgg net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix
	a itemType
	b MAP
net/minecraft/util/datafix/fixes/DataConverterFlattenState net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix
net/minecraft/util/datafix/fixes/DataConverterFurnaceRecipesUsed net/minecraft/util/datafix/fixes/FurnaceRecipeFix
	a (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateFurnaceContents
net/minecraft/util/datafix/fixes/DataConverterGossip net/minecraft/util/datafix/fixes/GossipUUIDFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterGuardian net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/util/datafix/fixes/DataConverterHanging net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix
	a DIRECTIONS
	a (Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic; doFix
net/minecraft/util/datafix/fixes/DataConverterHealth net/minecraft/util/datafix/fixes/EntityHealthFix
	a ENTITIES
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterHeightmapRenaming net/minecraft/util/datafix/fixes/HeightmapRenamingFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
net/minecraft/util/datafix/fixes/DataConverterHorse net/minecraft/util/datafix/fixes/EntityHorseSplitFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
net/minecraft/util/datafix/fixes/DataConverterIglooMetadataRemoval net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; removeIglooPieces
	c (Lcom/mojang/serialization/Dynamic;)Z isIglooPiece
net/minecraft/util/datafix/fixes/DataConverterItemFrame net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix
	a (B)B direction2dTo3d
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterItemLoreComponentize net/minecraft/util/datafix/fixes/ItemLoreFix
	a (Ljava/lang/String;)Ljava/lang/String; fixLoreEntry
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; fixLoreList
net/minecraft/util/datafix/fixes/DataConverterItemName net/minecraft/util/datafix/fixes/ItemRenameFix
	a name
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Ljava/lang/String;)Ljava/lang/String; fixItem
net/minecraft/util/datafix/fixes/DataConverterItemStackEnchantment net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix
	a MAP
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterItemStackUUID net/minecraft/util/datafix/fixes/ItemStackUUIDFix
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAttributeModifiers
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateSkullOwner
net/minecraft/util/datafix/fixes/DataConverterJigsawProperties net/minecraft/util/datafix/fixes/JigsawPropertiesFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterJigsawRotation net/minecraft/util/datafix/fixes/JigsawRotationFix
	a RENAMES
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
net/minecraft/util/datafix/fixes/DataConverterJukeBox net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterKeybind net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix
	a KEY_UNKNOWN
	b MAP
net/minecraft/util/datafix/fixes/DataConverterKeybind2 net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix
net/minecraft/util/datafix/fixes/DataConverterLang net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix
net/minecraft/util/datafix/fixes/DataConverterLeaves net/minecraft/util/datafix/fixes/LeavesFix
	a NORTH_WEST_MASK
	b WEST_MASK
	c SOUTH_WEST_MASK
	d SOUTH_MASK
	e SOUTH_EAST_MASK
	f EAST_MASK
	g NORTH_EAST_MASK
	h NORTH_MASK
	i DIRECTIONS
	j DECAY_DISTANCE
	k SIZE_BITS
	l SIZE
	m LEAVES
	n LOGS
	a (I)I getX
	a (III)I getIndex
	a (ZZZZ)I getSideMask
	b (I)I getY
	c (I)I getZ
net/minecraft/util/datafix/fixes/DataConverterLeavesBiome net/minecraft/util/datafix/fixes/ChunkBiomeFix
net/minecraft/util/datafix/fixes/DataConverterLevelDataGeneratorOptions net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix
	a MAP
	b GENERATOR_OPTIONS
	a (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; getLayerInfoFromString
	a (Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; convert
	b (Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
net/minecraft/util/datafix/fixes/DataConverterMap net/minecraft/util/datafix/fixes/ItemStackMapIdFix
net/minecraft/util/datafix/fixes/DataConverterMapId net/minecraft/util/datafix/fixes/MapIdFix
net/minecraft/util/datafix/fixes/DataConverterMaterialId net/minecraft/util/datafix/fixes/ItemIdFix
	a ITEM_NAMES
	a (I)Ljava/lang/String; getItem
net/minecraft/util/datafix/fixes/DataConverterMemoryExpiry net/minecraft/util/datafix/fixes/MemoryExpiryDataFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; updateMemoryEntry
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateBrain
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateMemories
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; wrapMemoryValue
net/minecraft/util/datafix/fixes/DataConverterMinecart net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix
	a MINECART_BY_ID
net/minecraft/util/datafix/fixes/DataConverterMiscUUID net/minecraft/util/datafix/fixes/LevelUUIDFix
	b LOGGER
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateWanderingTrader
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateDragonFight
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateCustomBossEvents
net/minecraft/util/datafix/fixes/DataConverterMissingDimension net/minecraft/util/datafix/fixes/MissingDimensionFix
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/Type; flatType
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; recreateSettings
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; fields
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; optionalFields
	b (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; optionalFields
net/minecraft/util/datafix/fixes/DataConverterMobSpawner net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
net/minecraft/util/datafix/fixes/DataConverterNamedEntity net/minecraft/util/datafix/fixes/NamedEntityFix
	a name
	b entityName
	c type
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterNewVillage net/minecraft/util/datafix/fixes/NewVillageFix
	a (Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/util/datafix/fixes/DataConverterObjectiveDisplayName net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix
net/minecraft/util/datafix/fixes/DataConverterObjectiveRenderType net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix
	a (Ljava/lang/String;)Ljava/lang/String; getRenderType
net/minecraft/util/datafix/fixes/DataConverterOminousBannerBlockEntityRename net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterOminousBannerRename net/minecraft/util/datafix/fixes/OminousBannerRenameFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixItemStackTag
net/minecraft/util/datafix/fixes/DataConverterOptionsAddTextBackground net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix
	a (Ljava/lang/String;)D calculateBackground
net/minecraft/util/datafix/fixes/DataConverterPOI net/minecraft/util/datafix/fixes/ReorganizePoi
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
net/minecraft/util/datafix/fixes/DataConverterPOIRebuild net/minecraft/util/datafix/fixes/ForcePoiRebuild
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
net/minecraft/util/datafix/fixes/DataConverterPainting net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix
	a MAP
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterPiston net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterPlayerUUID net/minecraft/util/datafix/fixes/PlayerUUIDFix
net/minecraft/util/datafix/fixes/DataConverterPotionId net/minecraft/util/datafix/fixes/ItemPotionFix
	a DEFAULT
	b SPLASH
	c POTIONS
net/minecraft/util/datafix/fixes/DataConverterPotionWater net/minecraft/util/datafix/fixes/ItemWaterPotionFix
net/minecraft/util/datafix/fixes/DataConverterProtoChunk net/minecraft/util/datafix/fixes/ChunkToProtochunkFix
	a NUM_SECTIONS
	a (III)S packOffsetCoordinates
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixChunkData
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; repackBiomes
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; repackTicks
net/minecraft/util/datafix/fixes/DataConverterRecipeRename net/minecraft/util/datafix/fixes/RecipesRenameningFix
	a RECIPES
net/minecraft/util/datafix/fixes/DataConverterRecipes net/minecraft/util/datafix/fixes/RecipesFix
	a RECIPES
net/minecraft/util/datafix/fixes/DataConverterRedstoneConnections net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateRedstoneConnections
	a (Ljava/lang/String;)Z isConnected
net/minecraft/util/datafix/fixes/DataConverterRemoveGolemGossip net/minecraft/util/datafix/fixes/RemoveGolemGossipFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixValue
net/minecraft/util/datafix/fixes/DataConverterRiding net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix
	a (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/util/datafix/fixes/DataConverterSaddle net/minecraft/util/datafix/fixes/EntityHorseSaddleFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterSavedDataUUID net/minecraft/util/datafix/fixes/SavedDataUUIDFix
	b LOGGER
net/minecraft/util/datafix/fixes/DataConverterSettingRename net/minecraft/util/datafix/fixes/OptionsRenameFieldFix
	a fixName
	b fieldFrom
	c fieldTo
net/minecraft/util/datafix/fixes/DataConverterShoulderEntity net/minecraft/util/datafix/fixes/WriteAndReadFix
	a name
	b type
net/minecraft/util/datafix/fixes/DataConverterShulker net/minecraft/util/datafix/fixes/EntityShulkerColorFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterShulkerBoxBlock net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterShulkerBoxItem net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix
	a NAMES_BY_COLOR
net/minecraft/util/datafix/fixes/DataConverterSignText net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix
	a GSON
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; updateLine
net/minecraft/util/datafix/fixes/DataConverterSkeleton net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/util/datafix/fixes/DataConverterSpawnEgg net/minecraft/util/datafix/fixes/ItemSpawnEggFix
	a ID_TO_ENTITY
net/minecraft/util/datafix/fixes/DataConverterStatistic net/minecraft/util/datafix/fixes/StatsCounterFix
	a SPECIAL_OBJECTIVE_CRITERIA
	b SKIP
	c CUSTOM_MAP
	d BLOCK_KEY
	e NEW_BLOCK_KEY
	f ITEM_KEYS
	g ENTITY_KEYS
	h ENTITIES
	i NEW_CUSTOM_KEY
	a ()Lcom/mojang/datafixers/TypeRewriteRule; makeStatFixer
	a (Ljava/lang/String;)Lazj$a; unpackLegacyKey
	b ()Lcom/mojang/datafixers/TypeRewriteRule; makeObjectiveFixer
	b (Ljava/lang/String;)Ljava/lang/String; upgradeItem
	c (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
net/minecraft/util/datafix/fixes/DataConverterStriderGravity net/minecraft/util/datafix/fixes/StriderGravityFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterStructureReference net/minecraft/util/datafix/fixes/StructureReferenceCountFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; setCountToAtLeastOne
net/minecraft/util/datafix/fixes/DataConverterTeamDisplayName net/minecraft/util/datafix/fixes/TeamDisplayNameFix
net/minecraft/util/datafix/fixes/DataConverterTileEntity net/minecraft/util/datafix/fixes/BlockEntityIdFix
	a ID_MAP
net/minecraft/util/datafix/fixes/DataConverterTrappedChest net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix
	a LOGGER
	b SIZE
	c SIZE_BITS
net/minecraft/util/datafix/fixes/DataConverterTypes net/minecraft/util/datafix/fixes/References
	A GAME_EVENT_NAME
	B UNTAGGED_SPAWNER
	C STRUCTURE_FEATURE
	D OBJECTIVE
	E TEAM
	F RECIPE
	G BIOME
	H MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST
	I WORLD_GEN_SETTINGS
	a LEVEL
	b PLAYER
	c CHUNK
	d HOTBAR
	e OPTIONS
	f STRUCTURE
	g STATS
	h SAVED_DATA_COMMAND_STORAGE
	i SAVED_DATA_FORCED_CHUNKS
	j SAVED_DATA_MAP_DATA
	k SAVED_DATA_MAP_INDEX
	l SAVED_DATA_RAIDS
	m SAVED_DATA_RANDOM_SEQUENCES
	n SAVED_DATA_STRUCTURE_FEATURE_INDICES
	o SAVED_DATA_SCOREBOARD
	p ADVANCEMENTS
	q POI_CHUNK
	r ENTITY_CHUNK
	s BLOCK_ENTITY
	t ITEM_STACK
	u BLOCK_STATE
	v ENTITY_NAME
	w ENTITY_TREE
	x ENTITY
	y BLOCK_NAME
	z ITEM_NAME
net/minecraft/util/datafix/fixes/DataConverterUUID net/minecraft/util/datafix/fixes/EntityStringUuidFix
net/minecraft/util/datafix/fixes/DataConverterUUIDBase net/minecraft/util/datafix/fixes/AbstractUUIDFix
	a typeReference
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateNamedChoice
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; createUUIDFromML
	a (Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional; createUUIDTag
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional; createUUIDFromString
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDString
	b (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDMLTag
	c (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDLeastMost
	d (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; createUUIDFromLongs
net/minecraft/util/datafix/fixes/DataConverterVBO net/minecraft/util/datafix/fixes/OptionsForceVBOFix
net/minecraft/util/datafix/fixes/DataConverterVillagerFollowRange net/minecraft/util/datafix/fixes/VillagerFollowRangeFix
	a ORIGINAL_VALUE
	b NEW_BASE_VALUE
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixValue
net/minecraft/util/datafix/fixes/DataConverterVillagerLevelXp net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix
	a TRADES_PER_LEVEL
	b LEVEL_XP_THRESHOLDS
	a (I)I getMinXpPerLevel
	a (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addLevel
	b (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addXpFromLevel
net/minecraft/util/datafix/fixes/DataConverterVillagerProfession net/minecraft/util/datafix/fixes/VillagerDataFix
	a (II)Ljava/lang/String; upgradeData
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterVillagerTrade net/minecraft/util/datafix/fixes/VillagerTradeFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateItemStack
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterWallProperty net/minecraft/util/datafix/fixes/WallPropertyFix
	a WALL_BLOCKS
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; upgradeBlockStateTag
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; fixWallProperty
	a (Ljava/lang/String;)Ljava/lang/String; mapProperty
net/minecraft/util/datafix/fixes/DataConverterWolf net/minecraft/util/datafix/fixes/EntityWolfColorFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterWorldGenSettings net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix
	a DEFAULT
	b GENERATOR_OPTIONS
	c SPLITTER
	d LAYER_SPLITTER
	e OLD_AMOUNT_SPLITTER
	f AMOUNT_SPLITTER
	g BLOCK_SPLITTER
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Ljava/lang/String;)Ljava/lang/String; fixString
net/minecraft/util/datafix/fixes/DataConverterWorldGenSettingsBuilding net/minecraft/util/datafix/fixes/WorldGenSettingsFix
	a VILLAGE
	b DESERT_PYRAMID
	c IGLOO
	d JUNGLE_TEMPLE
	e SWAMP_HUT
	f PILLAGER_OUTPOST
	g END_CITY
	h WOODLAND_MANSION
	i OCEAN_MONUMENT
	j DEFAULTS
	a (JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; noise
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic; defaultOverworld
	a (Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object; vanillaLevels
	a (Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic; vanillaBiomeSource
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map; fixFlatStructures
	a (Ljava/lang/String;I)I getInt
	a (Ljava/lang/String;II)I getInt
	a (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V setSpacing
net/minecraft/util/datafix/fixes/DataConverterZombie net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix
	a PROFESSION_MAX
	b RANDOM
	a (I)I getVillagerProfession
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterZombieType net/minecraft/util/datafix/fixes/EntityZombieSplitFix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/util/datafix/fixes/DataConverterZombieVillagerLevelXp net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/schemas/DataConverterSchemaNamed net/minecraft/util/datafix/schemas/NamespacedSchema
	a NAMESPACED_STRING_CODEC
	b NAMESPACED_STRING
	a ()Lcom/mojang/datafixers/types/Type; namespacedString
	a (Ljava/lang/String;)Ljava/lang/String; ensureNamespaced
net/minecraft/util/datafix/schemas/DataConverterSchemaV100 net/minecraft/util/datafix/schemas/V100
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/datafix/schemas/DataConverterSchemaV102 net/minecraft/util/datafix/schemas/V102
net/minecraft/util/datafix/schemas/DataConverterSchemaV1022 net/minecraft/util/datafix/schemas/V1022
net/minecraft/util/datafix/schemas/DataConverterSchemaV106 net/minecraft/util/datafix/schemas/V106
net/minecraft/util/datafix/schemas/DataConverterSchemaV107 net/minecraft/util/datafix/schemas/V107
net/minecraft/util/datafix/schemas/DataConverterSchemaV1125 net/minecraft/util/datafix/schemas/V1125
net/minecraft/util/datafix/schemas/DataConverterSchemaV135 net/minecraft/util/datafix/schemas/V135
net/minecraft/util/datafix/schemas/DataConverterSchemaV143 net/minecraft/util/datafix/schemas/V143
net/minecraft/util/datafix/schemas/DataConverterSchemaV1451 net/minecraft/util/datafix/schemas/V1451
net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_1 net/minecraft/util/datafix/schemas/V1451_1
net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_2 net/minecraft/util/datafix/schemas/V1451_2
net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_3 net/minecraft/util/datafix/schemas/V1451_3
net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_4 net/minecraft/util/datafix/schemas/V1451_4
net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_5 net/minecraft/util/datafix/schemas/V1451_5
net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_6 net/minecraft/util/datafix/schemas/V1451_6
	b SPECIAL_OBJECTIVE_MARKER
	c UNPACK_OBJECTIVE_ID
	d REPACK_OBJECTIVE_ID
	a (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; createCriterionTypes
	b (Ljava/lang/String;)Ljava/lang/String; packNamespacedWithDot
net/minecraft/util/datafix/schemas/DataConverterSchemaV1460 net/minecraft/util/datafix/schemas/V1460
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/util/datafix/schemas/DataConverterSchemaV1466 net/minecraft/util/datafix/schemas/V1466
net/minecraft/util/datafix/schemas/DataConverterSchemaV1470 net/minecraft/util/datafix/schemas/V1470
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/datafix/schemas/DataConverterSchemaV1481 net/minecraft/util/datafix/schemas/V1481
net/minecraft/util/datafix/schemas/DataConverterSchemaV1483 net/minecraft/util/datafix/schemas/V1483
net/minecraft/util/datafix/schemas/DataConverterSchemaV1486 net/minecraft/util/datafix/schemas/V1486
net/minecraft/util/datafix/schemas/DataConverterSchemaV1510 net/minecraft/util/datafix/schemas/V1510
net/minecraft/util/datafix/schemas/DataConverterSchemaV1800 net/minecraft/util/datafix/schemas/V1800
net/minecraft/util/datafix/schemas/DataConverterSchemaV1801 net/minecraft/util/datafix/schemas/V1801
net/minecraft/util/datafix/schemas/DataConverterSchemaV1904 net/minecraft/util/datafix/schemas/V1904
net/minecraft/util/datafix/schemas/DataConverterSchemaV1906 net/minecraft/util/datafix/schemas/V1906
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/util/datafix/schemas/DataConverterSchemaV1909 net/minecraft/util/datafix/schemas/V1909
net/minecraft/util/datafix/schemas/DataConverterSchemaV1920 net/minecraft/util/datafix/schemas/V1920
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/util/datafix/schemas/DataConverterSchemaV1928 net/minecraft/util/datafix/schemas/V1928
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/datafix/schemas/DataConverterSchemaV1929 net/minecraft/util/datafix/schemas/V1929
net/minecraft/util/datafix/schemas/DataConverterSchemaV1931 net/minecraft/util/datafix/schemas/V1931
net/minecraft/util/datafix/schemas/DataConverterSchemaV2100 net/minecraft/util/datafix/schemas/V2100
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/datafix/schemas/DataConverterSchemaV2501 net/minecraft/util/datafix/schemas/V2501
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerFurnace
net/minecraft/util/datafix/schemas/DataConverterSchemaV2502 net/minecraft/util/datafix/schemas/V2502
net/minecraft/util/datafix/schemas/DataConverterSchemaV2505 net/minecraft/util/datafix/schemas/V2505
net/minecraft/util/datafix/schemas/DataConverterSchemaV2509 net/minecraft/util/datafix/schemas/V2509
net/minecraft/util/datafix/schemas/DataConverterSchemaV2519 net/minecraft/util/datafix/schemas/V2519
net/minecraft/util/datafix/schemas/DataConverterSchemaV2522 net/minecraft/util/datafix/schemas/V2522
net/minecraft/util/datafix/schemas/DataConverterSchemaV2551 net/minecraft/util/datafix/schemas/V2551
net/minecraft/util/datafix/schemas/DataConverterSchemaV2568 net/minecraft/util/datafix/schemas/V2568
net/minecraft/util/datafix/schemas/DataConverterSchemaV501 net/minecraft/util/datafix/schemas/V501
net/minecraft/util/datafix/schemas/DataConverterSchemaV700 net/minecraft/util/datafix/schemas/V700
net/minecraft/util/datafix/schemas/DataConverterSchemaV701 net/minecraft/util/datafix/schemas/V701
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/datafix/schemas/DataConverterSchemaV702 net/minecraft/util/datafix/schemas/V702
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/datafix/schemas/DataConverterSchemaV703 net/minecraft/util/datafix/schemas/V703
net/minecraft/util/datafix/schemas/DataConverterSchemaV704 net/minecraft/util/datafix/schemas/V704
	a ITEM_TO_BLOCKENTITY
	b ADD_NAMES
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/util/datafix/schemas/DataConverterSchemaV705 net/minecraft/util/datafix/schemas/V705
	b ADD_NAMES
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
net/minecraft/util/datafix/schemas/DataConverterSchemaV808 net/minecraft/util/datafix/schemas/V808
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/util/datafix/schemas/DataConverterSchemaV99 net/minecraft/util/datafix/schemas/V99
	a ADD_NAMES
	b LOGGER
	c ITEM_TO_BLOCKENTITY
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object; addNames
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMinecart
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/util/monitoring/jmx/MinecraftServerBeans net/minecraft/util/monitoring/jmx/MinecraftServerStatistics
	a LOGGER
	b server
	c mBeanInfo
	d attributeDescriptionByName
	a ()F getAverageTickTime
	a (Lnet/minecraft/server/MinecraftServer;)V registerJmxMonitoring
	b ()[J getTickTimes
net/minecraft/util/profiling/GameProfilerDisabled net/minecraft/util/profiling/InactiveProfiler
	a INSTANCE
	a ()V startTick
	a (Ljava/lang/String;)V push
	a (Ljava/lang/String;I)V incrementCounter
	a (Ljava/util/function/Supplier;)V push
	a (Ljava/util/function/Supplier;I)V incrementCounter
	a (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V markForCharting
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	c (Ljava/lang/String;)Lbdi$a; getEntry
	d ()Lnet/minecraft/util/profiling/MethodProfilerResults; getResults
	e ()Ljava/util/Set; getChartedPaths
net/minecraft/util/profiling/GameProfilerFiller net/minecraft/util/profiling/ProfilerFiller
	b ROOT
	a ()V startTick
	a (Ljava/lang/String;)V push
	a (Ljava/lang/String;I)V incrementCounter
	a (Ljava/util/function/Supplier;)V push
	a (Ljava/util/function/Supplier;I)V incrementCounter
	a (Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;)Lnet/minecraft/util/profiling/GameProfilerFiller; tee
	a (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V markForCharting
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	c (Ljava/util/function/Supplier;)V incrementCounter
	d (Ljava/lang/String;)V incrementCounter
net/minecraft/util/profiling/GameProfilerFillerActive net/minecraft/util/profiling/ProfileCollector
	c (Ljava/lang/String;)Lbdi$a; getEntry
	d ()Lnet/minecraft/util/profiling/MethodProfilerResults; getResults
	e ()Ljava/util/Set; getChartedPaths
net/minecraft/util/profiling/GameProfilerSwitcher net/minecraft/util/profiling/ContinuousProfiler
	a realTime
	b tickCount
	c profiler
	a ()Z isEnabled
	b ()V disable
	c ()V enable
	d ()Lnet/minecraft/util/profiling/GameProfilerFiller; getFiller
	e ()Lnet/minecraft/util/profiling/MethodProfilerResults; getResults
net/minecraft/util/profiling/GameProfilerTick net/minecraft/util/profiling/SingleTickProfiler
	a LOGGER
	b realTime
	c saveThreshold
	d tick
	e location
	f profiler
	a ()Lnet/minecraft/util/profiling/GameProfilerFiller; startTick
	a (Ljava/lang/String;)Lnet/minecraft/util/profiling/GameProfilerTick; createTickProfiler
	a (Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerTick;)Lnet/minecraft/util/profiling/GameProfilerFiller; decorateFiller
	b ()V endTick
net/minecraft/util/profiling/MethodProfiler net/minecraft/util/profiling/ActiveProfiler
	a WARNING_TIME_NANOS
	c LOGGER
	d paths
	e startTimes
	f entries
	g getTickTime
	h getRealTime
	i startTimeNano
	j startTimeTicks
	k path
	l started
	m currentEntry
	n warn
	o chartedPaths
	a ()V startTick
	a (Ljava/lang/String;)V push
	a (Ljava/lang/String;I)V incrementCounter
	a (Ljava/util/function/Supplier;)V push
	a (Ljava/util/function/Supplier;I)V incrementCounter
	a (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V markForCharting
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	c (Ljava/lang/String;)Lbdi$a; getEntry
	d ()Lnet/minecraft/util/profiling/MethodProfilerResults; getResults
	e ()Ljava/util/Set; getChartedPaths
	f ()Lbdi$a; getCurrentEntry
net/minecraft/util/profiling/MethodProfilerResult net/minecraft/util/profiling/ProfilerPathEntry
	a ()J getDuration
	b ()J getMaxDuration
	c ()J getCount
	d ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
net/minecraft/util/profiling/MethodProfilerResults net/minecraft/util/profiling/ProfileResults
	d PATH_SEPARATOR
	a ()J getStartTimeNano
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	a (Ljava/nio/file/Path;)Z saveResults
	b ()I getStartTimeTicks
	b (Ljava/lang/String;)Ljava/lang/String; demanglePath
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
	f ()I getTickDuration
	g ()J getNanoDuration
net/minecraft/util/profiling/MethodProfilerResultsEmpty net/minecraft/util/profiling/EmptyProfileResults
	a EMPTY
	a ()J getStartTimeNano
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	a (Ljava/nio/file/Path;)Z saveResults
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
net/minecraft/util/profiling/MethodProfilerResultsField net/minecraft/util/profiling/ResultField
	a percentage
	b globalPercentage
	c count
	d name
	a ()I getColor
	a (Lnet/minecraft/util/profiling/MethodProfilerResultsField;)I compareTo
net/minecraft/util/profiling/MethodProfilerResultsFilled net/minecraft/util/profiling/FilledProfileResults
	a LOGGER
	b EMPTY
	c SPLITTER
	e COUNTER_ENTRY_COMPARATOR
	f entries
	g startTimeNano
	h startTimeTicks
	i endTimeNano
	j endTimeTicks
	k tickDuration
	a ()J getStartTimeNano
	a (ILjava/lang/String;Lbdl$a;ILjava/lang/StringBuilder;)V appendCounterResults
	a (ILjava/lang/String;Ljava/lang/StringBuilder;)V appendProfilerResults
	a (JI)Ljava/lang/String; getProfilerResults
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	a (Ljava/lang/String;Ljava/lang/String;)Z isDirectChild
	a (Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder; indentLine
	a (Ljava/nio/file/Path;)Z saveResults
	a (Ljava/util/Map;Ljava/lang/StringBuilder;I)V appendCounters
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	c (Ljava/lang/String;)Lnet/minecraft/util/profiling/MethodProfilerResult; getEntry
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
	f ()I getTickDuration
	h ()Ljava/util/Map; getCounterValues
	i ()Ljava/lang/String; getComment
net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$a net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$Fields
	a WORLD_POS_X
	b WORLD_POS_Z
	c CHUNK_POS_X
	d CHUNK_POS_Z
	e STATUS
	f LEVEL
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$a net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$Fields
	a REMOTE_ADDRESS
	b SENT_BYTES
	c RECEIVED_BYTES
	d SENT_PACKETS
	e RECEIVED_PACKETS
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation
	a sentBytes
	b sentPackets
	c receivedBytes
	d receivedPackets
	e event
	a ()V commitEvent
	a (I)V trackSentPacket
	b (I)V trackReceivedPacket
net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$a net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$Fields
	a AVERAGE_TICK_DURATION
net/minecraft/util/random/WeightedRandom2 net/minecraft/util/random/WeightedRandom
	a (Ljava/util/List;)I getTotalWeight
	a (Ljava/util/List;I)Ljava/util/Optional; getWeightedItem
	a (Lnet/minecraft/util/RandomSource;Ljava/util/List;)Ljava/util/Optional; getRandomItem
	a (Lnet/minecraft/util/RandomSource;Ljava/util/List;I)Ljava/util/Optional; getRandomItem
net/minecraft/util/thread/IAsyncTaskHandler net/minecraft/util/thread/BlockableEventLoop
	b name
	c LOGGER
	d pendingRunnables
	e blockingCount
	a (Ljava/lang/Object;)V tell
	a (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submitAsync
	a (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; submit
	at ()Z scheduleExecutables
	au ()Ljava/lang/Thread; getRunningThread
	bk ()Ljava/util/List; profiledMetrics
	bl ()Z isSameThread
	bm ()I getPendingTasksCount
	bn ()Ljava/lang/String; name
	bo ()V dropAllTasks
	bp ()V runAllTasks
	bq ()V waitForTasks
	c (Ljava/lang/Runnable;)V executeIfPossible
	c (Ljava/util/function/BooleanSupplier;)V managedBlock
	d (Ljava/lang/Runnable;)V doRunTask
	e (Ljava/lang/Runnable;)Z shouldRun
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	g (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submit
	h (Ljava/lang/Runnable;)V executeBlocking
	i (Ljava/lang/Runnable;)V tell
	x ()Z pollTask
net/minecraft/util/thread/IAsyncTaskHandlerReentrant net/minecraft/util/thread/ReentrantBlockableEventLoop
	b reentrantCount
	at ()Z scheduleExecutables
	br ()Z runningTask
	d (Ljava/lang/Runnable;)V doRunTask
net/minecraft/util/thread/Mailbox net/minecraft/util/thread/ProcessorHandle
	a (Ljava/lang/Object;)V tell
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/util/thread/Mailbox; of
	b (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; ask
	bn ()Ljava/lang/String; name
	c (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; askEither
net/minecraft/util/thread/PairedQueue net/minecraft/util/thread/StrictQueue
	a ()Ljava/lang/Object; pop
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
	c ()I size
net/minecraft/util/thread/ThreadedMailbox net/minecraft/util/thread/ProcessorMailbox
	a LOGGER
	b CLOSED_BIT
	c SCHEDULED_BIT
	d status
	e queue
	f dispatcher
	g name
	a ()V runAll
	a (Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I pollUntil
	a (Ljava/lang/Object;)V tell
	a (Ljava/util/concurrent/Executor;Ljava/lang/String;)Lnet/minecraft/util/thread/ThreadedMailbox; create
	b ()I size
	bk ()Ljava/util/List; profiledMetrics
	bn ()Ljava/lang/String; name
	c ()Z hasWork
	d ()Z setAsScheduled
	e ()V setAsIdle
	f ()Z canBeScheduled
	g ()Z shouldProcess
	h ()Z pollTask
	i ()V registerForExecution
net/minecraft/world/BossBattle net/minecraft/world/BossEvent
	a name
	b progress
	c color
	d overlay
	e darkenScreen
	f playBossMusic
	g createWorldFog
	h id
	a (F)V setProgress
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setName
	a (Lnet/minecraft/world/BossBattle$BarColor;)V setColor
	a (Lnet/minecraft/world/BossBattle$BarStyle;)V setOverlay
	a (Z)Lnet/minecraft/world/BossBattle; setDarkenScreen
	b (Z)Lnet/minecraft/world/BossBattle; setPlayBossMusic
	c (Z)Lnet/minecraft/world/BossBattle; setCreateWorldFog
	i ()Ljava/util/UUID; getId
	j ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	k ()F getProgress
	l ()Lnet/minecraft/world/BossBattle$BarColor; getColor
	m ()Lnet/minecraft/world/BossBattle$BarStyle; getOverlay
	n ()Z shouldDarkenScreen
	o ()Z shouldPlayBossMusic
	p ()Z shouldCreateWorldFog
net/minecraft/world/BossBattle$BarColor net/minecraft/world/BossEvent$BossBarColor
	a PINK
	b BLUE
	c RED
	d GREEN
	e YELLOW
	f PURPLE
	g WHITE
	h name
	i formatting
	j $VALUES
	a ()Lnet/minecraft/EnumChatFormat; getFormatting
	a (Ljava/lang/String;)Lnet/minecraft/world/BossBattle$BarColor; byName
	b ()Ljava/lang/String; getName
	c ()[Lnet/minecraft/world/BossBattle$BarColor; $values
net/minecraft/world/BossBattle$BarStyle net/minecraft/world/BossEvent$BossBarOverlay
	a PROGRESS
	b NOTCHED_6
	c NOTCHED_10
	d NOTCHED_12
	e NOTCHED_20
	f name
	g $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/world/BossBattle$BarStyle; byName
	b ()[Lnet/minecraft/world/BossBattle$BarStyle; $values
net/minecraft/world/ChestLock net/minecraft/world/LockCode
	a NO_LOCK
	b TAG_LOCK
	c key
	a (Lnet/minecraft/nbt/NBTTagCompound;)V addToTag
	a (Lnet/minecraft/world/item/ItemStack;)Z unlocksWith
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/ChestLock; fromTag
net/minecraft/world/ContainerUtil net/minecraft/world/ContainerHelper
	a (Ljava/util/List;I)Lnet/minecraft/world/item/ItemStack; takeItem
	a (Ljava/util/List;II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/core/NonNullList;)Lnet/minecraft/nbt/NBTTagCompound; saveAllItems
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/core/NonNullList;Z)Lnet/minecraft/nbt/NBTTagCompound; saveAllItems
	a (Lnet/minecraft/world/IInventory;Ljava/util/function/Predicate;IZ)I clearOrCountMatchingItems
	a (Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;IZ)I clearOrCountMatchingItems
	b (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/core/NonNullList;)V loadAllItems
net/minecraft/world/DifficultyDamageScaler net/minecraft/world/DifficultyInstance
	a DIFFICULTY_TIME_GLOBAL_OFFSET
	b MAX_DIFFICULTY_TIME_GLOBAL
	c MAX_DIFFICULTY_TIME_LOCAL
	d base
	e effectiveDifficulty
	a ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	a (F)Z isHarderThan
	a (Lnet/minecraft/world/EnumDifficulty;JJF)F calculateDifficulty
	b ()F getEffectiveDifficulty
	c ()Z isHard
	d ()F getSpecialMultiplier
net/minecraft/world/EnumDifficulty net/minecraft/world/Difficulty
	a PEACEFUL
	b EASY
	c NORMAL
	d HARD
	e CODEC
	f BY_ID
	g id
	h key
	i $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/EnumDifficulty; byId
	a (Ljava/lang/String;)Lnet/minecraft/world/EnumDifficulty; byName
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	c ()Ljava/lang/String; getSerializedName
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getInfo
	e ()Ljava/lang/String; getKey
	f ()[Lnet/minecraft/world/EnumDifficulty; $values
net/minecraft/world/EnumHand net/minecraft/world/InteractionHand
	a MAIN_HAND
	b OFF_HAND
	c $VALUES
	a ()[Lnet/minecraft/world/EnumHand; $values
net/minecraft/world/EnumInteractionResult net/minecraft/world/InteractionResult
	a SUCCESS
	b CONSUME
	c CONSUME_PARTIAL
	d PASS
	e FAIL
	f $VALUES
	a ()Z consumesAction
	a (Z)Lnet/minecraft/world/EnumInteractionResult; sidedSuccess
	b ()Z shouldSwing
	c ()Z shouldAwardStats
	d ()[Lnet/minecraft/world/EnumInteractionResult; $values
net/minecraft/world/IInventory net/minecraft/world/Container
	m_ LARGE_MAX_STACK_SIZE
	n_ DEFAULT_DISTANCE_LIMIT
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Ljava/util/Set;)Z hasAnyOf
	a (Lnet/minecraft/world/IInventory;ILnet/minecraft/world/item/ItemStack;)Z canTakeItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValidBlockEntity
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/entity/player/EntityHuman;I)Z stillValidBlockEntity
	a_ (Ljava/util/function/Predicate;)Z hasAnyMatching
	a_ (Lnet/minecraft/world/item/Item;)I countItem
	af_ ()Z isEmpty
	ag_ ()I getMaxStackSize
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/world/item/ItemStack;)Z canPlaceItem
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	d_ (Lnet/minecraft/world/entity/player/EntityHuman;)V startOpen
	e ()V setChanged
net/minecraft/world/IInventoryHolder net/minecraft/world/WorldlyContainerHolder
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/IWorldInventory; getContainer
net/minecraft/world/IInventoryListener net/minecraft/world/ContainerListener
	a (Lnet/minecraft/world/IInventory;)V containerChanged
net/minecraft/world/INamableTileEntity net/minecraft/world/Nameable
	N_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	ac ()Z hasCustomName
	ad ()Lnet/minecraft/network/chat/IChatBaseComponent; getCustomName
net/minecraft/world/ITileInventory net/minecraft/world/MenuProvider
	N_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
net/minecraft/world/IWorldInventory net/minecraft/world/WorldlyContainer
	a (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/core/EnumDirection;)[I getSlotsForFace
	b (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canTakeItemThroughFace
net/minecraft/world/InteractionResultWrapper net/minecraft/world/InteractionResultHolder
	a result
	b object
	a ()Lnet/minecraft/world/EnumInteractionResult; getResult
	a (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultWrapper; success
	a (Ljava/lang/Object;Z)Lnet/minecraft/world/InteractionResultWrapper; sidedSuccess
	b ()Ljava/lang/Object; getObject
	b (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultWrapper; consume
	c (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultWrapper; pass
	d (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultWrapper; fail
net/minecraft/world/InventoryLargeChest net/minecraft/world/CompoundContainer
	c container1
	d container2
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/world/IInventory;)Z contains
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	af_ ()Z isEmpty
	ag_ ()I getMaxStackSize
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/world/item/ItemStack;)Z canPlaceItem
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	d_ (Lnet/minecraft/world/entity/player/EntityHuman;)V startOpen
	e ()V setChanged
net/minecraft/world/InventorySubcontainer net/minecraft/world/SimpleContainer
	c size
	d items
	e listeners
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/nbt/NBTTagList;)V fromTag
	a (Lnet/minecraft/world/IInventoryListener;)V addListener
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/item/Item;I)Lnet/minecraft/world/item/ItemStack; removeItemType
	a (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; addItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V moveItemsBetweenStacks
	af_ ()Z isEmpty
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/world/IInventoryListener;)V removeListener
	b (Lnet/minecraft/world/item/ItemStack;)Z canAddItem
	c (Lnet/minecraft/world/item/ItemStack;)V moveItemToEmptySlots
	d (Lnet/minecraft/world/item/ItemStack;)V moveItemToOccupiedSlotsWithSameType
	e ()V setChanged
	f ()Ljava/util/List; removeAllItems
	g ()Lnet/minecraft/nbt/NBTTagList; createTag
net/minecraft/world/InventoryUtils net/minecraft/world/Containers
	a (Lnet/minecraft/world/level/World;DDDLnet/minecraft/world/IInventory;)V dropContents
	a (Lnet/minecraft/world/level/World;DDDLnet/minecraft/world/item/ItemStack;)V dropItemStack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/NonNullList;)V dropContents
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/IInventory;)V dropContents
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/IInventory;)V dropContents
net/minecraft/world/TileInventory net/minecraft/world/SimpleMenuProvider
	a title
	b menuConstructor
	N_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
net/minecraft/world/damagesource/CombatMath net/minecraft/world/damagesource/CombatRules
	a MAX_ARMOR
	b ARMOR_PROTECTION_DIVIDER
	c BASE_ARMOR_TOUGHNESS
	d MIN_ARMOR_RATIO
	e NUM_ARMOR_ITEMS
	a (FF)F getDamageAfterMagicAbsorb
	a (FFF)F getDamageAfterAbsorb
net/minecraft/world/effect/InstantMobEffect net/minecraft/world/effect/InstantenousMobEffect
	a ()Z isInstantenous
	a (II)Z shouldApplyEffectTickThisTick
net/minecraft/world/effect/MobEffect net/minecraft/world/effect/MobEffectInstance
	a INFINITE_DURATION
	b LOGGER
	c TAG_ID
	d TAG_AMBIENT
	e TAG_HIDDEN_EFFECT
	f TAG_AMPLIFIER
	g TAG_DURATION
	h TAG_SHOW_PARTICLES
	i TAG_SHOW_ICON
	j TAG_FACTOR_CALCULATION_DATA
	k effect
	l duration
	m amplifier
	n ambient
	o visible
	p showIcon
	q hiddenEffect
	r factorData
	a ()Ljava/util/Optional; getFactorData
	a (I)Z endsWithin
	a (Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)I mapDuration
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/world/effect/MobEffect;)V setDetailsFrom
	a (Lnet/minecraft/world/effect/MobEffectList;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/effect/MobEffect; loadSpecifiedEffect
	a (Lnet/minecraft/world/entity/EntityLiving;)V onEffectStarted
	a (Lnet/minecraft/world/entity/EntityLiving;Ljava/lang/Runnable;)Z tick
	b ()Z isInfiniteDuration
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/effect/MobEffect; load
	b (Lnet/minecraft/world/effect/MobEffect;)Z update
	c ()Lnet/minecraft/world/effect/MobEffectList; getEffect
	c (Lnet/minecraft/nbt/NBTTagCompound;)V writeDetailsTo
	c (Lnet/minecraft/world/effect/MobEffect;)I compareTo
	d ()I getDuration
	d (Lnet/minecraft/world/effect/MobEffect;)Z isShorterDurationThan
	e ()I getAmplifier
	f ()Z isAmbient
	g ()Z isVisible
	h ()Z showIcon
	i ()Ljava/lang/String; getDescriptionId
	j ()Z hasRemainingDuration
	k ()I tickDownDuration
	l ()Ljava/lang/String; describeDuration
net/minecraft/world/effect/MobEffectInfo net/minecraft/world/effect/MobEffectCategory
	a BENEFICIAL
	b HARMFUL
	c NEUTRAL
	d tooltipFormatting
	e $VALUES
	a ()Lnet/minecraft/EnumChatFormat; getTooltipFormatting
	b ()[Lnet/minecraft/world/effect/MobEffectInfo; $values
net/minecraft/world/effect/MobEffectList net/minecraft/world/effect/MobEffect
	a attributeModifiers
	b category
	c color
	d descriptionId
	e factorDataFactory
	f builtInRegistryHolder
	a ()Z isInstantenous
	a (II)Z shouldApplyEffectTickThisTick
	a (Ljava/util/function/Supplier;)Lnet/minecraft/world/effect/MobEffectList; setFactorDataFactory
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityLiving;ID)V applyInstantenousEffect
	a (Lnet/minecraft/world/entity/EntityLiving;I)V applyEffectTick
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Lnet/minecraft/world/effect/MobEffectList; addAttributeModifier
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeMapBase;)V removeAttributeModifiers
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeMapBase;I)V addAttributeModifiers
	b ()Ljava/util/Optional; createFactorData
	b (Lnet/minecraft/world/entity/EntityLiving;I)V onEffectStarted
	c ()Ljava/lang/String; getOrCreateDescriptionId
	d ()Ljava/lang/String; getDescriptionId
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	f ()Lnet/minecraft/world/effect/MobEffectInfo; getCategory
	g ()I getColor
	h ()Ljava/util/Map; getAttributeModifiers
	i ()Z isBeneficial
	j ()Lhe$c; builtInRegistryHolder
net/minecraft/world/entity/EntityAgeable net/minecraft/world/entity/AgeableMob
	b BABY_START_AGE
	bT DATA_BABY_ID
	bU FORCED_AGE_PARTICLE_TICKS
	c age
	d forcedAge
	e forcedAgeTimer
	V_ ()Z canBreed
	a (IZ)V ageUp
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Z)V setBaby
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b_ ()V aiStep
	b_ (I)V ageUp
	c_ (I)V setAge
	d_ (I)I getSpeedUpSecondsWhenFeeding
	h ()I getAge
	m ()V ageBoundaryReached
	m_ ()Z isBaby
net/minecraft/world/entity/EntityAreaEffectCloud net/minecraft/world/entity/AreaEffectCloud
	aE radiusPerTick
	aF owner
	aG ownerUUID
	b DEFAULT_WIDTH
	c HEIGHT
	d LOGGER
	e TIME_BETWEEN_APPLICATIONS
	f DATA_RADIUS
	g DATA_COLOR
	h DATA_WAITING
	i DATA_PARTICLE
	j MAX_RADIUS
	k MINIMAL_RADIUS
	l DEFAULT_RADIUS
	m TAG_EFFECTS
	n potion
	o effects
	p victims
	q duration
	r waitTime
	s reapplicationDelay
	t fixedColor
	u durationOnUse
	v radiusOnUse
	a (F)V setRadius
	a (I)V setFixedColor
	a (Lnet/minecraft/core/particles/ParticleParam;)V setParticle
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/effect/MobEffect;)V addEffect
	a (Lnet/minecraft/world/entity/EntityLiving;)V setOwner
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;)V setPotion
	a (Z)V setWaiting
	a_ ()V defineSynchedData
	b (F)V setRadiusOnUse
	b (I)V setDuration
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (F)V setRadiusPerTick
	c (I)V setDurationOnUse
	d (I)V setWaitTime
	h ()F getRadius
	i ()I getColor
	i_ ()V refreshDimensions
	j ()Lnet/minecraft/core/particles/ParticleParam; getParticle
	k ()Z isWaiting
	l ()V tick
	m ()I getDuration
	o ()F getRadiusOnUse
	p ()F getRadiusPerTick
	q ()I getDurationOnUse
	q_ ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	r ()I getWaitTime
	s ()Lnet/minecraft/world/entity/EntityLiving; getOwner
	t ()Lnet/minecraft/world/item/alchemy/PotionRegistry; getPotion
	v ()Lnet/minecraft/world/entity/Entity; getOwner
	w ()V updateColor
net/minecraft/world/entity/EntityCreature net/minecraft/world/entity/PathfinderMob
	bS DEFAULT_WALK_TARGET_VALUE
	D (F)V onLeashDistance
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;)Z checkSpawnRules
	fQ ()V tickLeash
	fZ ()Z isPathFinding
	ga ()Z isPanicking
	gb ()Z shouldStayCloseToLeashHolder
	gc ()D followLeashSpeed
	h (Lnet/minecraft/core/BlockPosition;)F getWalkTargetValue
net/minecraft/world/entity/EntityExperienceOrb net/minecraft/world/entity/ExperienceOrb
	b LIFETIME
	c ENTITY_SCAN_PERIOD
	d MAX_FOLLOW_DIST
	e ORB_GROUPS_PER_AREA
	f ORB_MERGE_DISTANCE
	g age
	h health
	i value
	j count
	k followingPlayer
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;I)V award
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/EntityExperienceOrb;)Z canMerge
	a (Lnet/minecraft/world/entity/EntityExperienceOrb;II)Z canMerge
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)I repairPlayerItems
	aG ()Lnet/minecraft/core/BlockPosition; getBlockPosBelowThatAffectsMyMovement
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (I)I getExperienceValue
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;I)Z tryMergeToExisting
	b (Lnet/minecraft/world/entity/EntityExperienceOrb;)V merge
	b_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerTouch
	bg ()V doWaterSplashEffect
	c (I)I durabilityToXp
	cp ()Z isAttackable
	d (I)I xpToDurability
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	di ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	l ()V tick
	q ()I getValue
	s ()I getIcon
	t ()V scanForEntities
	v ()V setUnderwaterMovement
net/minecraft/world/entity/EntityFlying net/minecraft/world/entity/FlyingMob
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	c_ ()Z onClimbable
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
net/minecraft/world/entity/EntityInsentient net/minecraft/world/entity/Mob
	b DATA_MOB_FLAGS_ID
	bA MAX_WEARING_ARMOR_CHANCE
	bB MAX_PICKUP_LOOT_CHANCE
	bC MAX_ENCHANTED_ARMOR_CHANCE
	bD MAX_ENCHANTED_WEAPON_CHANCE
	bE LEASH_TAG
	bF DEFAULT_EQUIPMENT_DROP_CHANCE
	bG PRESERVE_ITEM_DROP_CHANCE
	bH UPDATE_GOAL_SELECTOR_EVERY_N_TICKS
	bI ambientSoundTime
	bJ xpReward
	bK lookControl
	bL moveControl
	bM jumpControl
	bN navigation
	bO goalSelector
	bP targetSelector
	bQ handDropChances
	bR armorDropChances
	bS ITEM_PICKUP_REACH
	bT DEFAULT_ATTACK_REACH
	bU bodyRotationControl
	bV target
	bW sensing
	bX handItems
	bY armorItems
	bZ canPickUpLoot
	c MOB_FLAG_NO_AI
	ca persistenceRequired
	cb pathfindingMalus
	cc lootTable
	cd lootTableSeed
	ce leashHolder
	cf delayedLeashHolderId
	cg leashInfoTag
	ch restrictCenter
	ci restrictRadius
	d MOB_FLAG_LEFTHANDED
	e MOB_FLAG_AGGRESSIVE
	f PICKUP_REACH
	A ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createMobAttributes
	A (F)V setZza
	B ()Z shouldPassengersInheritMalus
	B (F)V setYya
	C ()V onPathfindingStart
	C (F)V setXxa
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	E ()V onPathfindingDone
	F ()Lnet/minecraft/world/entity/ai/control/EntityAIBodyControl; createBodyControl
	G ()Lnet/minecraft/world/entity/ai/control/ControllerLook; getLookControl
	I ()Lnet/minecraft/world/entity/ai/control/ControllerMove; getMoveControl
	K ()Lnet/minecraft/world/entity/ai/control/ControllerJump; getJumpControl
	L ()Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; getNavigation
	M ()Lnet/minecraft/world/entity/ai/sensing/EntitySenses; getSensing
	N ()V ate
	O ()I getAmbientSoundInterval
	P ()V playAmbientSound
	Q ()V spawnAnim
	R ()V updateControlFlags
	S ()Lnet/minecraft/resources/MinecraftKey; getDefaultLootTable
	T ()Lnet/minecraft/core/BaseBlockPosition; getPickupReach
	U ()Z requiresCustomPersistence
	V ()Z shouldDespawnInPeaceful
	W ()V sendDebugPackets
	X ()V customServerAiStep
	Y ()I getMaxHeadXRot
	Z ()I getMaxHeadYRot
	a (FFF)F rotlerp
	a (Lnet/minecraft/core/BlockPosition;)Z isWithinRestriction
	a (Lnet/minecraft/core/BlockPosition;I)V restrictTo
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;F)V enchantSpawnedWeapon
	a (Lnet/minecraft/util/RandomSource;FLnet/minecraft/world/entity/EnumItemSlot;)V enchantSpawnedArmor
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/world/damagesource/DamageSource;Z)V dropFromLootTable
	a (Lnet/minecraft/world/entity/Entity;FF)V lookAt
	a (Lnet/minecraft/world/entity/Entity;Z)Z startRiding
	a (Lnet/minecraft/world/entity/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkMobSpawnRules
	a (Lnet/minecraft/world/entity/EntityTypes;Z)Lnet/minecraft/world/entity/EntityInsentient; convertTo
	a (Lnet/minecraft/world/entity/EnumItemSlot;F)V setDropChance
	a (Lnet/minecraft/world/entity/EnumItemSlot;I)Lnet/minecraft/world/item/Item; getEquipmentForSlot
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setItemSlot
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityInsentient;)V onOffspringSpawnedFromEgg
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V maybeDisableShield
	a (Lnet/minecraft/world/item/ItemProjectileWeapon;)Z canFireProjectileWeapon
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;)Z checkSpawnRules
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/world/level/pathfinder/PathType;)F getPathfindingMalus
	a (Lnet/minecraft/world/level/pathfinder/PathType;F)V setPathfindingMalus
	a (Z)V setBaby
	a (ZZ)V dropLeash
	a_ ()V defineSynchedData
	aq ()V baseTick
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentEnchantments
	b (Lnet/minecraft/world/entity/Entity;Z)V setLeashedTo
	b (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setItemSlotAndDropWhenKilled
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z canReplaceCurrentItem
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	bJ ()Ljava/lang/Iterable; getHandSlots
	bK ()Ljava/lang/Iterable; getArmorSlots
	b_ ()V aiStep
	c (Ljava/util/function/Predicate;)V removeAllGoals
	c (Lnet/minecraft/tags/TagKey;)V jumpInLiquid
	c (Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/item/ItemStack; getItemBySlot
	c (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; checkAndHandleImportantInteractions
	c (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z canReplaceEqualItem
	cN ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	cX ()Z isEffectiveAi
	cr ()V removeAfterChangingDimensions
	ct ()I getMaxFallDistance
	d (I)Z isMaxGroupSizeReached
	dx ()V checkDespawn
	dy ()Lnet/minecraft/world/item/ItemStack; getPickResult
	e (FF)F tickHeadTurn
	e (Lnet/minecraft/world/damagesource/DamageSource;)V playHurtSound
	e (Lnet/minecraft/world/entity/EnumItemSlot;)V setGuaranteedDrop
	eA ()J getLootTableSeed
	ed ()I getExperienceReward
	ez ()Lnet/minecraft/resources/MinecraftKey; getLootTable
	f (Lnet/minecraft/world/entity/EnumItemSlot;)F getEquipmentDropChance
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fG ()I getHeadRotSpeed
	fH ()I getMaxSpawnClusterSize
	fI ()V setPersistenceRequired
	fJ ()Z canPickUpLoot
	fK ()Z isPersistenceRequired
	fL ()Z isWithinRestriction
	fM ()Lnet/minecraft/core/BlockPosition; getRestrictCenter
	fN ()F getRestrictRadius
	fO ()V clearRestriction
	fP ()Z hasRestriction
	fQ ()V tickLeash
	fR ()Z isLeashed
	fS ()Lnet/minecraft/world/entity/Entity; getLeashHolder
	fT ()Z isNoAi
	fU ()Z isLeftHanded
	fV ()Z isAggressive
	fW ()Lnet/minecraft/world/phys/AxisAlignedBB; getAttackBoundingBox
	fX ()Z isSunBurnTick
	fY ()V removeFreeWill
	fZ ()V restoreLeashFromSave
	fg ()V serverAiStep
	fl ()Lnet/minecraft/world/entity/EnumMainHand; getMainArm
	h (D)Z removeWhenFarAway
	h (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	i (Lnet/minecraft/world/entity/EntityLiving;)Z isWithinMeleeAttackRange
	i (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; equipItemIfPossible
	j (Lnet/minecraft/world/item/ItemStack;)Z canHoldItem
	k (Lnet/minecraft/world/item/ItemStack;)Z wantsToPickUp
	l ()V tick
	q ()Lnet/minecraft/world/entity/EntityLiving; getTarget
	r (I)V setDelayedLeashHolderId
	s ()V resetAmbientSoundTime
	s (Z)V setCanPickUpLoot
	t (Z)V setNoAi
	u (Z)V setLeftHanded
	v (Z)V setAggressive
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (F)V setSpeed
	z ()V registerGoals
net/minecraft/world/entity/EntityLightning net/minecraft/world/entity/LightningBolt
	b seed
	c START_LIFE
	d DAMAGE_RADIUS
	e DETECTION_RADIUS
	f life
	g flashes
	h visualOnly
	i cause
	j hitEntities
	k blocksSetOnFire
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;I)V randomWalkCleaningCopper
	a (Z)V setVisualOnly
	a_ ()V defineSynchedData
	b (I)V spawnFire
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/EntityPlayer;)V setCause
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V clearCopperOnLightningStrike
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; randomStepCleaningCopper
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	l ()V tick
	q ()Lnet/minecraft/server/level/EntityPlayer; getCause
	s ()I getBlocksSetOnFire
	t ()Ljava/util/stream/Stream; getHitEntities
	v ()V powerLightningRod
	w ()Lnet/minecraft/core/BlockPosition; getStrikePosition
net/minecraft/world/entity/EntityLiving net/minecraft/world/entity/LivingEntity
	aE EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT
	aF swinging
	aG swingingArm
	aH swingTime
	aI removeArrowTime
	aJ removeStingerTime
	aK hurtTime
	aL hurtDuration
	aM deathTime
	aN oAttackAnim
	aO attackAnim
	aP attackStrengthTicker
	aQ walkAnimation
	aR invulnerableDuration
	aS timeOffs
	aT rotA
	aU yBodyRot
	aV yBodyRotO
	aW yHeadRot
	aX yHeadRotO
	aY lastHurtByPlayer
	aZ lastHurtByPlayerTime
	b LOGGER
	bA SPEED_MODIFIER_SPRINTING
	bB DAMAGE_SOURCE_TIMEOUT
	bC WAIT_TICKS_BEFORE_ITEM_USE_EFFECTS
	bD TICKS_PER_ELYTRA_FREE_FALL_EVENT
	bE FREE_FALL_EVENTS_PER_ELYTRA_BREAK
	bF BASE_JUMP_POWER
	bG MAX_LINE_OF_SIGHT_TEST_RANGE
	bH DATA_HEALTH_ID
	bI DATA_EFFECT_COLOR_ID
	bJ DATA_EFFECT_AMBIENCE_ID
	bK DATA_ARROW_COUNT_ID
	bL DATA_STINGER_COUNT_ID
	bM SLEEPING_POS_ID
	bN MAX_HEAD_ROTATION_RELATIVE_TO_BODY
	bO attributes
	bP combatTracker
	bQ activeEffects
	bR lastHandItemStacks
	bS lastArmorItemStacks
	bT discardFriction
	bU effectsDirty
	bV lastHurtByMob
	bW lastHurtByMobTimestamp
	bX lastHurtMob
	bY lastHurtMobTimestamp
	bZ speed
	ba dead
	bb noActionTime
	bc oRun
	bd run
	be animStep
	bf animStepO
	bg rotOffs
	bh deathScore
	bi lastHurt
	bj jumping
	bk xxa
	bl yya
	bm zza
	bn lerpSteps
	bo lerpX
	bp lerpY
	bq lerpZ
	br lerpYRot
	bs lerpXRot
	bt lerpYHeadRot
	bu lerpHeadSteps
	bv useItem
	bw useItemRemaining
	bx fallFlyTicks
	by autoSpinAttackTicks
	bz brain
	c TAG_ACTIVE_EFFECTS
	ca noJumpDelay
	cb absorptionAmount
	cc lastPos
	cd lastClimbablePos
	ce lastDamageSource
	cf lastDamageStamp
	cg swimAmount
	ch swimAmountO
	ci skipDropExperience
	d SPEED_MODIFIER_SOUL_SPEED_UUID
	e SPEED_MODIFIER_POWDER_SNOW_UUID
	g HAND_SLOTS
	h ARMOR_SLOTS
	i EQUIPMENT_SLOT_OFFSET
	j ARMOR_SLOT_OFFSET
	k SWING_DURATION
	l PLAYER_HURT_EXPERIENCE_TIME
	m MIN_MOVEMENT_DISTANCE
	n DEFAULT_BASE_GRAVITY
	o DEATH_DURATION
	p USE_ITEM_INTERVAL
	q LIVING_ENTITY_FLAG_IS_USING
	r LIVING_ENTITY_FLAG_OFF_HAND
	s LIVING_ENTITY_FLAG_SPIN_ATTACK
	t DATA_LIVING_ENTITY_FLAGS
	u DEFAULT_EYE_HEIGHT
	v SLEEPING_DIMENSIONS
	A ()V makePoofParticles
	A (F)F getFrictionInfluencedSpeed
	A (Lnet/minecraft/world/entity/Entity;)V setLastHurtMob
	B ()V swapHandItems
	B (Lnet/minecraft/world/entity/Entity;)D getVisibilityPercent
	C ()V detectEquipmentUpdates
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	D (Lnet/minecraft/world/entity/Entity;)V doPush
	E ()Ljava/util/Map; collectEquipmentChanges
	E (Lnet/minecraft/world/entity/Entity;)Z hasLineOfSight
	F ()V updateFallFlying
	G ()V updatingUsingItem
	H ()V updateInvisibilityStatus
	I ()Z shouldTriggerItemUseEffects
	K ()V updateSwimAmount
	K_ ()D lerpTargetY
	L ()Z checkBedExists
	L_ ()D lerpTargetZ
	S_ ()Lnet/minecraft/world/entity/EntityLiving; getLastAttacker
	a (DD)V indicateDamage
	a (DDDFFI)V lerpTo
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (DZLnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getFluidFallingAdjustedMovement
	a (F)F getSwimAmount
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (FI)V lerpHeadTo
	a (ID)V lerpHeadRotationStep
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Ljava/util/Map;)V handleHandSwap
	a (Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor;Lnet/minecraft/world/phys/Vec3D;)V lookAt
	a (Lnet/minecraft/core/BlockPosition;)V setPosToBed
	a (Lnet/minecraft/core/BlockPosition;Z)V setRecordPlayingNearby
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/BlockUtil$Rectangle;)Lnet/minecraft/world/phys/Vec3D; getRelativePortalPosition
	a (Lnet/minecraft/core/Holder;)D getAttributeValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/EnumHand;)V swing
	a (Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;)V setItemInHand
	a (Lnet/minecraft/world/EnumHand;Z)V swing
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/world/damagesource/DamageSource;Z)V dropFromLootTable
	a (Lnet/minecraft/world/effect/MobEffect;)V onEffectRemoved
	a (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/entity/Entity;)V onEffectAdded
	a (Lnet/minecraft/world/effect/MobEffect;ZLnet/minecraft/world/entity/Entity;)V onEffectUpdated
	a (Lnet/minecraft/world/effect/MobEffectList;)Z hasEffect
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V remove
	a (Lnet/minecraft/world/entity/Entity;)V dismountVehicle
	a (Lnet/minecraft/world/entity/Entity;I)V take
	a (Lnet/minecraft/world/entity/EntityLiving;)V setLastHurtByMob
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/entity/SlotAccess; createEquipmentSlotAccess
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;)Z canAttack
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/world/entity/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Z doesEmitEquipEvent
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setItemSlot
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V onEquipItem
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable; getAttribute
	a (Lnet/minecraft/world/entity/item/EntityItem;)V onItemPickup
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;)V tickRidden
	a (Lnet/minecraft/world/item/ItemStack;)V updateUsingItem
	a (Lnet/minecraft/world/item/ItemStack;I)V spawnItemParticles
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z equipmentHasChanged
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)V addEatEffect
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; eat
	a (Lnet/minecraft/world/level/material/Fluid;)Z canStandOnFluid
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/world/phys/AxisAlignedBB;)V checkAutoSpinAttack
	a (Lnet/minecraft/world/phys/Vec3D;F)Lnet/minecraft/world/phys/Vec3D; handleRelativeFrictionAndCalculateMovement
	aJ ()F getBlockSpeedFactor
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	aa ()V stopRiding
	ad_ ()V completeUsingItem
	aj ()V kill
	aq ()V baseTick
	az ()V onBelowWorld
	b (B)V handleEntityEvent
	b (DDDZ)Z randomTeleport
	b (F)V heal
	b (Ljava/util/Map;)V handleEquipmentChanges
	b (Ljava/util/function/Predicate;)Z isHolding
	b (Lnet/minecraft/core/BlockPosition;)V startSleeping
	b (Lnet/minecraft/core/Holder;)D getAttributeBaseValue
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/item/ItemStack; getItemInHand
	b (Lnet/minecraft/world/damagesource/DamageSource;F)V hurtArmor
	b (Lnet/minecraft/world/effect/MobEffect;)Z addEffect
	b (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/entity/Entity;)Z addEffect
	b (Lnet/minecraft/world/effect/MobEffectList;)Lnet/minecraft/world/effect/MobEffect; getEffect
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EnumItemSlot;)Z hasItemInSlot
	b (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setLastArmorItem
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)D getAttributeValue
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getRiddenInput
	b (Lnet/minecraft/world/item/Item;)Z isHolding
	b (Lnet/minecraft/world/item/ItemStack;I)V triggerItemUseEffects
	bK ()Ljava/lang/Iterable; getArmorSlots
	bZ ()Z isVisuallySwimming
	b_ ()V aiStep
	br ()Z isPickable
	bs ()Z isPushable
	bv ()Z isAlive
	bw ()Z isInWall
	by ()V rideTick
	c (F)V setHealth
	c (IZ)V setLivingEntityFlag
	c (Ljava/util/Collection;)Z areAllEffectsAmbient
	c (Lnet/minecraft/core/BlockPosition;)V onChangedBlock
	c (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z trapdoorUsableAsLadder
	c (Lnet/minecraft/tags/TagKey;)V jumpInLiquid
	c (Lnet/minecraft/world/EnumHand;)V startUsingItem
	c (Lnet/minecraft/world/damagesource/DamageSource;)V handleDamageEvent
	c (Lnet/minecraft/world/damagesource/DamageSource;F)V hurtHelmet
	c (Lnet/minecraft/world/effect/MobEffect;)Z canBeAffected
	c (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/entity/Entity;)V forceAddEffect
	c (Lnet/minecraft/world/effect/MobEffectList;)Lnet/minecraft/world/effect/MobEffect; removeEffectNoUpdate
	c (Lnet/minecraft/world/entity/EntityLiving;)Z canAttack
	c (Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/item/ItemStack; getItemBySlot
	c (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setLastHandItem
	c (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)D getAttributeBaseValue
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V setLastHurtByPlayer
	c (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;)V travelRidden
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEffect; getDrinkingSound
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldRemoveSoulSpeed
	cB ()Z shouldShowName
	c_ ()Z onClimbable
	cc ()Z isCurrentlyGlowing
	co ()F getYHeadRot
	cs ()Z canChangeDimensions
	d (FF)I calculateFallDamage
	d (I)Lnet/minecraft/sounds/SoundEffect; getFallDamageSound
	d (Lnet/minecraft/world/EnumHand;)V broadcastBreakEvent
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	d (Lnet/minecraft/world/damagesource/DamageSource;F)F getDamageAfterArmorAbsorb
	d (Lnet/minecraft/world/effect/MobEffect;)V sendEffectToPassengers
	d (Lnet/minecraft/world/effect/MobEffectList;)Z removeEffect
	d (Lnet/minecraft/world/entity/EntityLiving;)V blockUsingShield
	d (Lnet/minecraft/world/entity/EnumItemSlot;)V broadcastBreakEvent
	d (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)V onAttributeUpdated
	d (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEffect; getEatingSound
	dC ()F getVisualRotationYInDegrees
	dF ()F maxUpStep
	dN ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dO ()Lbkg$b; brainProvider
	dP ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createLivingAttributes
	dQ ()Z canBreatheUnderwater
	dR ()Z canSpawnSoulSpeedParticle
	dS ()V spawnSoulSpeedParticle
	dT ()Z onSoulSpeedBlock
	dU ()V removeSoulSpeed
	dV ()V tryAddSoulSpeed
	dW ()V removeFrost
	dX ()V tryAddFrost
	dY ()F getScale
	dZ ()Z isAffectedByFluids
	d_ ()F lerpTargetXRot
	dz ()Z canFreeze
	e (FF)F tickHeadTurn
	e (Lnet/minecraft/world/damagesource/DamageSource;)V playHurtSound
	e (Lnet/minecraft/world/damagesource/DamageSource;F)F getDamageAfterMagicAbsorb
	e (Lnet/minecraft/world/entity/EntityLiving;)V blockedByShield
	e (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/phys/AxisAlignedBB; getLocalBoundsForPose
	e (Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/item/ItemStack; getLastArmorItem
	e (Lnet/minecraft/world/entity/player/EntityHuman;)F getRiddenSpeed
	e (Lnet/minecraft/world/item/ItemStack;)V verifyEquippedItem
	eA ()J getLootTableSeed
	eB ()V skipDropExperience
	eC ()Z wasExperienceConsumed
	eD ()F getHurtDir
	eE ()Lnet/minecraft/world/phys/AxisAlignedBB; getHitbox
	eF ()Lbjg$a; getFallSounds
	eG ()Ljava/util/Optional; getLastClimbablePos
	eH ()V playBlockFallSound
	eI ()I getArmorValue
	eJ ()Lnet/minecraft/world/damagesource/CombatTracker; getCombatTracker
	eK ()Lnet/minecraft/world/entity/EntityLiving; getKillCredit
	eL ()F getMaxHealth
	eM ()F getMaxAbsorption
	eN ()I getArrowCount
	eO ()I getStingerCount
	eP ()V updateSwingTime
	eQ ()Lnet/minecraft/world/entity/ai/attributes/AttributeMapBase; getAttributes
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	eS ()Lnet/minecraft/world/item/ItemStack; getMainHandItem
	eT ()Lnet/minecraft/world/item/ItemStack; getOffhandItem
	eU ()F getArmorCoverPercentage
	eV ()F getSoundVolume
	eW ()F getVoicePitch
	eX ()Z isImmobile
	eY ()F getJumpPower
	eZ ()F getJumpBoostPower
	e_ ()V onEnterCombat
	ea ()V tickDeath
	eb ()Z shouldDropExperience
	ec ()Z shouldDropLoot
	ed ()I getExperienceReward
	ee ()Z isAlwaysExperienceDropper
	ef ()Lnet/minecraft/util/RandomSource; getRandom
	eg ()Lnet/minecraft/world/entity/EntityLiving; getLastHurtByMob
	eh ()I getLastHurtByMobTimestamp
	ei ()Lnet/minecraft/world/entity/EntityLiving; getLastHurtMob
	ej ()I getLastHurtMobTimestamp
	ek ()I getNoActionTime
	el ()Z shouldDiscardFriction
	em ()V tickEffects
	en ()Z canBeSeenAsEnemy
	eo ()Z canBeSeenByAnyone
	ep ()V removeEffectParticles
	eq ()Z removeAllEffects
	er ()Ljava/util/Collection; getActiveEffects
	es ()Ljava/util/Map; getActiveEffectsMap
	et ()Z isInvertedHealAndHarm
	eu ()F getHealth
	ev ()Z isDeadOrDying
	ew ()Lnet/minecraft/world/damagesource/DamageSource; getLastDamageSource
	ex ()V dropEquipment
	ey ()V dropExperience
	ez ()Lnet/minecraft/resources/MinecraftKey; getLootTable
	f (Lnet/minecraft/world/damagesource/DamageSource;)Z isDamageSourceBlocked
	f (Lnet/minecraft/world/damagesource/DamageSource;F)V actuallyHurt
	f (Lnet/minecraft/world/entity/EntityLiving;)V createWitherRose
	f (Lnet/minecraft/world/entity/EntityPose;)Z wouldNotSuffocateAtTargetPose
	f (Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/item/ItemStack; getLastHandItem
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fA ()Ljava/util/Optional; getSleepingPos
	fB ()V clearSleepingPos
	fC ()Z isSleeping
	fD ()V stopSleeping
	fE ()Lnet/minecraft/core/EnumDirection; getBedOrientation
	fF ()Z canDisableShield
	f_ ()V onLeaveCombat
	fa ()V jumpFromGround
	fb ()V goDownInWater
	fc ()F getWaterSlowDown
	fd ()F getFlyingSpeed
	fe ()F getSpeed
	ff ()Z isSensitiveToWater
	fg ()V serverAiStep
	fh ()V pushEntities
	fi ()Z isAutoSpinAttack
	fj ()F getAbsorptionAmount
	fk ()V updateEffectVisibility
	fl ()Lnet/minecraft/world/entity/EnumMainHand; getMainArm
	fm ()Z isUsingItem
	fn ()Lnet/minecraft/world/EnumHand; getUsedItemHand
	fo ()Lnet/minecraft/world/item/ItemStack; getUseItem
	fp ()I getUseItemRemainingTicks
	fq ()I getTicksUsingItem
	fr ()V releaseUsingItem
	fs ()V stopUsingItem
	ft ()Z isBlocking
	fu ()Z isSuppressingSlidingDownLadder
	fv ()Z isFallFlying
	fw ()I getFallFlyingTicks
	fx ()Z isAffectedByPotions
	fy ()Z attackable
	fz ()Lcom/google/common/collect/ImmutableList; getDismountPoses
	g (Lnet/minecraft/core/BlockPosition;)V setSleepingPos
	g (Lnet/minecraft/world/damagesource/DamageSource;)V dropAllDeathLoot
	g (Lnet/minecraft/world/entity/Entity;)V push
	g (Lnet/minecraft/world/entity/EntityLiving;)V doAutoAttackOnTouch
	g (Lnet/minecraft/world/entity/EnumItemSlot;)B entityEventForEquipmentBreak
	g (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; getProjectile
	g (Z)V setSprinting
	g_ ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBoxForCulling
	h (F)F getViewYRot
	h (Lnet/minecraft/world/damagesource/DamageSource;)Z checkTotemDeathProtection
	h (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlotForItem
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	i (Lnet/minecraft/world/item/ItemStack;)V breakItem
	i (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; resetForwardDirectionOfRelativePortalPosition
	j (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; handleOnClimbable
	k (Lnet/minecraft/world/entity/Entity;)F getMyRidingOffset
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (F)V animateHurt
	m (I)I decreaseAirSupply
	m (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3D; getPassengerRidingPosition
	m_ ()Z isBaby
	n (F)V setYHeadRot
	n (I)I increaseAirSupply
	n_ ()D lerpTargetX
	o (F)V setYBodyRot
	o (I)V setNoActionTime
	o_ ()F lerpTargetYRot
	p (I)V setArrowCount
	p (Z)V setDiscardFriction
	q (DDD)V knockback
	q (I)V setStingerCount
	q (Z)V calculateEntityAnimation
	r (I)Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlot
	r (Z)V setJumping
	s ()V updateGlowingStatus
	u (F)V hurtCurrentlyUsedShield
	v (F)V updateWalkAnimation
	w ()V refreshDirtyAttributes
	w (F)V setSpeed
	x (F)F getAttackAnim
	y (F)V setAbsorptionAmount
	z ()I getCurrentSwingDuration
	z (F)V internalSetAbsorptionAmount
net/minecraft/world/entity/EntityPose net/minecraft/world/entity/Pose
	a STANDING
	b FALL_FLYING
	c SLEEPING
	d SWIMMING
	e SPIN_ATTACK
	f CROUCHING
	g LONG_JUMPING
	h DYING
	i CROAKING
	j USING_TONGUE
	k SITTING
	l ROARING
	m SNIFFING
	n EMERGING
	o DIGGING
	p $VALUES
	a ()[Lnet/minecraft/world/entity/EntityPose; $values
net/minecraft/world/entity/EntityPositionTypes net/minecraft/world/entity/SpawnPlacements
	a DATA_BY_TYPE
	a (Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/world/entity/EntityPositionTypes$Surface; getPlacementType
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/entity/EntityPositionTypes$Surface;Lnet/minecraft/world/level/levelgen/HeightMap$Type;Lbka$b;)V register
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkSpawnRules
	b (Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/world/level/levelgen/HeightMap$Type; getHeightmapType
net/minecraft/world/entity/EntityPositionTypes$Surface net/minecraft/world/entity/SpawnPlacements$Type
	a ON_GROUND
	b IN_WATER
	c NO_RESTRICTIONS
	d IN_LAVA
	e $VALUES
	a ()[Lnet/minecraft/world/entity/EntityPositionTypes$Surface; $values
net/minecraft/world/entity/EntitySize net/minecraft/world/entity/EntityDimensions
	a width
	b height
	c fixed
	a (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; makeBoundingBox
	a (F)Lnet/minecraft/world/entity/EntitySize; scale
	a (FF)Lnet/minecraft/world/entity/EntitySize; scale
	a (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/AxisAlignedBB; makeBoundingBox
	b (FF)Lnet/minecraft/world/entity/EntitySize; scalable
	c (FF)Lnet/minecraft/world/entity/EntitySize; fixed
net/minecraft/world/entity/EntityTameableAnimal net/minecraft/world/entity/TamableAnimal
	bT DATA_FLAGS_ID
	bU DATA_OWNERUUID_ID
	bW orderedToSit
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z wantsToAttack
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Ljava/util/UUID;)V setOwnerUUID
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/world/entity/EntityLiving;)Z canAttack
	cf ()Lnet/minecraft/world/scores/ScoreboardTeamBase; getTeam
	d ()Ljava/util/UUID; getOwnerUUID
	e ()Lnet/minecraft/world/level/IEntityAccess; level
	f (Lnet/minecraft/world/entity/player/EntityHuman;)V tame
	gd ()Z isOrderedToSit
	j (Lnet/minecraft/world/entity/EntityLiving;)Z isOwnedBy
	s ()Z isTame
	s (Lnet/minecraft/world/entity/Entity;)Z isAlliedTo
	t ()V reassessTameGoals
	w (Z)V spawnTamingParticles
	x (Z)V setTame
	y ()Z isInSittingPose
	y (Z)V setInSittingPose
	z (Z)V setOrderedToSit
net/minecraft/world/entity/EntityTypes net/minecraft/world/entity/EntityType
	A ELDER_GUARDIAN
	B END_CRYSTAL
	C ENDER_DRAGON
	D ENDER_PEARL
	E ENDERMAN
	F ENDERMITE
	G EVOKER
	H EVOKER_FANGS
	I EXPERIENCE_BOTTLE
	J EXPERIENCE_ORB
	K EYE_OF_ENDER
	L FALLING_BLOCK
	M FIREWORK_ROCKET
	N FOX
	O FROG
	P FURNACE_MINECART
	Q GHAST
	R GIANT
	S GLOW_ITEM_FRAME
	T GLOW_SQUID
	U GOAT
	V GUARDIAN
	W HOGLIN
	X HOPPER_MINECART
	Y HORSE
	Z HUSK
	a ENTITY_TAG
	aA POTION
	aB PUFFERFISH
	aC RABBIT
	aD RAVAGER
	aE SALMON
	aF SHEEP
	aG SHULKER
	aH SHULKER_BULLET
	aI SILVERFISH
	aJ SKELETON
	aK SKELETON_HORSE
	aL SLIME
	aM SMALL_FIREBALL
	aN SNIFFER
	aO SNOW_GOLEM
	aP SNOWBALL
	aQ SPAWNER_MINECART
	aR SPECTRAL_ARROW
	aS SPIDER
	aT SQUID
	aU STRAY
	aV STRIDER
	aW TADPOLE
	aX TEXT_DISPLAY
	aY TNT
	aZ TNT_MINECART
	aa ILLUSIONER
	ab INTERACTION
	ac IRON_GOLEM
	ad ITEM
	ae ITEM_DISPLAY
	af ITEM_FRAME
	ag FIREBALL
	ah LEASH_KNOT
	ai LIGHTNING_BOLT
	aj LLAMA
	ak LLAMA_SPIT
	al MAGMA_CUBE
	am MARKER
	an MINECART
	ao MOOSHROOM
	ap MULE
	aq OCELOT
	ar PAINTING
	as PANDA
	at PARROT
	au PHANTOM
	av PIG
	aw PIGLIN
	ax PIGLIN_BRUTE
	ay PILLAGER
	az POLAR_BEAR
	b ALLAY
	bA factory
	bB category
	bC immuneTo
	bD serialize
	bE summon
	bF fireImmune
	bG canSpawnFarFromPlayer
	bH clientTrackingRange
	bI updateInterval
	bJ descriptionId
	bK description
	bL lootTable
	bM dimensions
	bN requiredFeatures
	ba TRADER_LLAMA
	bb TRIDENT
	bc TROPICAL_FISH
	bd TURTLE
	be VEX
	bf VILLAGER
	bg VINDICATOR
	bh WANDERING_TRADER
	bi WARDEN
	bj WITCH
	bk WITHER
	bl WITHER_SKELETON
	bm WITHER_SKULL
	bn WOLF
	bo ZOGLIN
	bp ZOMBIE
	bq ZOMBIE_HORSE
	br ZOMBIE_VILLAGER
	bs ZOMBIFIED_PIGLIN
	bt PLAYER
	bu FISHING_BOBBER
	bw LOGGER
	bx builtInRegistryHolder
	by MAGIC_HORSE_WIDTH
	bz DISPLAY_TRACKING_RANGE
	c AREA_EFFECT_CLOUD
	d ARMOR_STAND
	e ARROW
	f AXOLOTL
	g BAT
	h BEE
	i BLAZE
	j BLOCK_DISPLAY
	k BOAT
	l CAMEL
	m CAT
	n CAVE_SPIDER
	o CHEST_BOAT
	p CHEST_MINECART
	q CHICKEN
	r COD
	s COMMAND_BLOCK_MINECART
	t COW
	u CREEPER
	v DOLPHIN
	w DONKEY
	x DRAGON_FIREBALL
	y DROWNED
	z EGG
	a ()Ljava/lang/Class; getBaseClass
	a (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; getAABB
	a (Ljava/lang/Object;)Ljava/lang/Object; tryCast
	a (Ljava/lang/String;)Ljava/util/Optional; byString
	a (Ljava/lang/String;Lnet/minecraft/world/entity/EntityTypes$Builder;)Lnet/minecraft/world/entity/EntityTypes; register
	a (Ljava/util/List;Lnet/minecraft/world/level/World;)Ljava/util/stream/Stream; loadEntitiesRecursive
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)Ljava/util/function/Consumer; appendDefaultStackConfig
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/item/ItemStack;)Ljava/util/function/Consumer; appendCustomNameConfig
	a (Lnet/minecraft/core/HolderSet;)Z is
	a (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/Optional; by
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/World;)Ljava/util/Optional; create
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/World;Ljava/util/function/Function;)Lnet/minecraft/world/entity/Entity; loadEntityRecursive
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EnumMobSpawn;)Lnet/minecraft/world/entity/Entity; spawn
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/function/Consumer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EnumMobSpawn;ZZ)Lnet/minecraft/world/entity/Entity; spawn
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)Ljava/util/function/Consumer; createDefaultStackConfig
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EnumMobSpawn;ZZ)Lnet/minecraft/world/entity/Entity; spawn
	a (Lnet/minecraft/tags/TagKey;)Z is
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; tryCast
	a (Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/resources/MinecraftKey; getKey
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/phys/AxisAlignedBB;)D getYOffset
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/Entity; create
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/nbt/NBTTagCompound;)V updateCustomEntityTag
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isBlockDangerous
	b ()Z canSerialize
	b (Ljava/util/function/Consumer;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)Ljava/util/function/Consumer; appendCustomEntityStackConfig
	b (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/World;)Ljava/util/Optional; loadStaticEntity
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/function/Consumer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EnumMobSpawn;ZZ)Lnet/minecraft/world/entity/Entity; create
	c ()Z canSummon
	d ()Z fireImmune
	e ()Z canSpawnFarFromPlayer
	f ()Lnet/minecraft/world/entity/EnumCreatureType; getCategory
	g ()Ljava/lang/String; getDescriptionId
	h ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	i ()Ljava/lang/String; toShortString
	j ()Lnet/minecraft/resources/MinecraftKey; getDefaultLootTable
	k ()F getWidth
	l ()F getHeight
	m ()Lnet/minecraft/world/flag/FeatureFlagSet; requiredFeatures
	n ()Lnet/minecraft/world/entity/EntitySize; getDimensions
	o ()I clientTrackingRange
	p ()I updateInterval
	q ()Z trackDeltas
	r ()Lhe$c; builtInRegistryHolder
net/minecraft/world/entity/EntityTypes$Builder net/minecraft/world/entity/EntityType$Builder
	a factory
	b category
	c immuneTo
	d serialize
	e summon
	f fireImmune
	g canSpawnFarFromPlayer
	h clientTrackingRange
	i updateInterval
	j dimensions
	k requiredFeatures
	a ()Lnet/minecraft/world/entity/EntityTypes$Builder; noSummon
	a (FF)Lnet/minecraft/world/entity/EntityTypes$Builder; sized
	a (I)Lnet/minecraft/world/entity/EntityTypes$Builder; clientTrackingRange
	a (Lbiu$b;Lnet/minecraft/world/entity/EnumCreatureType;)Lnet/minecraft/world/entity/EntityTypes$Builder; of
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/EntityTypes; build
	a (Lnet/minecraft/world/entity/EnumCreatureType;)Lnet/minecraft/world/entity/EntityTypes$Builder; createNothing
	a ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/entity/EntityTypes$Builder; requiredFeatures
	a ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/entity/EntityTypes$Builder; immuneTo
	b ()Lnet/minecraft/world/entity/EntityTypes$Builder; noSave
	b (I)Lnet/minecraft/world/entity/EntityTypes$Builder; updateInterval
	c ()Lnet/minecraft/world/entity/EntityTypes$Builder; fireImmune
	d ()Lnet/minecraft/world/entity/EntityTypes$Builder; canSpawnFarFromPlayer
net/minecraft/world/entity/EnumCreatureType net/minecraft/world/entity/MobCategory
	a MONSTER
	b CREATURE
	c AMBIENT
	d AXOLOTLS
	e UNDERGROUND_WATER_CREATURE
	f WATER_CREATURE
	g WATER_AMBIENT
	h MISC
	i CODEC
	j max
	k isFriendly
	l isPersistent
	m name
	n noDespawnDistance
	o despawnDistance
	p $VALUES
	a ()Ljava/lang/String; getName
	b ()I getMaxInstancesPerChunk
	c ()Ljava/lang/String; getSerializedName
	d ()Z isFriendly
	e ()Z isPersistent
	f ()I getDespawnDistance
	g ()I getNoDespawnDistance
	h ()[Lnet/minecraft/world/entity/EnumCreatureType; $values
net/minecraft/world/entity/EnumItemSlot net/minecraft/world/entity/EquipmentSlot
	a MAINHAND
	b OFFHAND
	c FEET
	d LEGS
	e CHEST
	f HEAD
	g CODEC
	h type
	i index
	j filterFlag
	k name
	l $VALUES
	a ()Lnet/minecraft/world/entity/EnumItemSlot$Function; getType
	a (I)I getIndex
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/EnumItemSlot; byName
	a (Lnet/minecraft/world/entity/EnumItemSlot$Function;I)Lnet/minecraft/world/entity/EnumItemSlot; byTypeAndIndex
	b ()I getIndex
	c ()Ljava/lang/String; getSerializedName
	d ()I getFilterFlag
	e ()Ljava/lang/String; getName
	f ()Z isArmor
	g ()[Lnet/minecraft/world/entity/EnumItemSlot; $values
net/minecraft/world/entity/EnumItemSlot$Function net/minecraft/world/entity/EquipmentSlot$Type
	a HAND
	b ARMOR
	c $VALUES
	a ()[Lnet/minecraft/world/entity/EnumItemSlot$Function; $values
net/minecraft/world/entity/EnumMainHand net/minecraft/world/entity/HumanoidArm
	a LEFT
	b RIGHT
	c CODEC
	d BY_ID
	e id
	f name
	g translationKey
	h $VALUES
	a ()I getId
	b ()Ljava/lang/String; getKey
	c ()Ljava/lang/String; getSerializedName
	e ()Lnet/minecraft/world/entity/EnumMainHand; getOpposite
	f ()[Lnet/minecraft/world/entity/EnumMainHand; $values
net/minecraft/world/entity/EnumMobSpawn net/minecraft/world/entity/MobSpawnType
	a NATURAL
	b CHUNK_GENERATION
	c SPAWNER
	d STRUCTURE
	e BREEDING
	f MOB_SUMMONED
	g JOCKEY
	h EVENT
	i CONVERSION
	j REINFORCEMENT
	k TRIGGERED
	l BUCKET
	m SPAWN_EGG
	n COMMAND
	o DISPENSER
	p PATROL
	q $VALUES
	a ()[Lnet/minecraft/world/entity/EnumMobSpawn; $values
net/minecraft/world/entity/EnumMonsterType net/minecraft/world/entity/MobType
	a UNDEFINED
	b UNDEAD
	c ARTHROPOD
	d ILLAGER
	e WATER
net/minecraft/world/entity/EnumMoveType net/minecraft/world/entity/MoverType
	a SELF
	b PLAYER
	c PISTON
	d SHULKER_BOX
	e SHULKER
	f $VALUES
	a ()[Lnet/minecraft/world/entity/EnumMoveType; $values
net/minecraft/world/entity/GroupDataEntity net/minecraft/world/entity/SpawnGroupData
net/minecraft/world/entity/IEntityAngerable net/minecraft/world/entity/NeutralMob
	a_ TAG_ANGER_TIME
	b_ TAG_ANGRY_AT
	U_ ()V stopBeingAngry
	X_ ()Z isAngry
	Y_ ()V forgetCurrentTargetAndRefreshUniversalAnger
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/server/level/WorldServer;Z)V updatePersistentAnger
	a (Lnet/minecraft/world/entity/EntityLiving;)V setLastHurtByMob
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/nbt/NBTTagCompound;)V readPersistentAngerSaveData
	a_ (Lnet/minecraft/world/entity/EntityLiving;)Z isAngryAt
	a_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerDied
	a_ (Lnet/minecraft/world/level/World;)Z isAngryAtAllPlayers
	b ()Ljava/util/UUID; getPersistentAngerTarget
	c ()V startPersistentAngerTimer
	c (Lnet/minecraft/nbt/NBTTagCompound;)V addPersistentAngerSaveData
	c (Lnet/minecraft/world/entity/EntityLiving;)Z canAttack
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V setLastHurtByPlayer
	eg ()Lnet/minecraft/world/entity/EntityLiving; getLastHurtByMob
	h (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	q ()Lnet/minecraft/world/entity/EntityLiving; getTarget
net/minecraft/world/entity/IEntitySelector net/minecraft/world/entity/EntitySelector
	a ENTITY_STILL_ALIVE
	b LIVING_ENTITY_STILL_ALIVE
	c ENTITY_NOT_BEING_RIDDEN
	d CONTAINER_ENTITY_SELECTOR
	e NO_CREATIVE_OR_SPECTATOR
	f NO_SPECTATORS
	g CAN_BE_COLLIDED_WITH
	a (DDDD)Ljava/util/function/Predicate; withinDistance
	a (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; pushableBy
	b (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; notRiding
net/minecraft/world/entity/IEntitySelector$EntitySelectorEquipable net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector
	a itemStack
	a (Lnet/minecraft/world/entity/Entity;)Z test
net/minecraft/world/entity/IJumpable net/minecraft/world/entity/PlayerRideableJumping
	a ()Z canJump
	aa_ ()I getJumpCooldown
	b ()V handleStopJump
	b (I)V onPlayerJump
	c (I)V handleStartJump
net/minecraft/world/entity/ISaddleable net/minecraft/world/entity/Saddleable
	W_ ()Lnet/minecraft/sounds/SoundEffect; getSaddleSoundEvent
	a (Lnet/minecraft/sounds/SoundCategory;)V equipSaddle
	g ()Z isSaddleable
	i ()Z isSaddled
net/minecraft/world/entity/IShearable net/minecraft/world/entity/Shearable
	a ()Z readyForShearing
	a (Lnet/minecraft/sounds/SoundCategory;)V shear
net/minecraft/world/entity/ISteerable net/minecraft/world/entity/ItemSteerable
	a ()Z boost
net/minecraft/world/entity/ReputationHandler net/minecraft/world/entity/ReputationEventHandler
	a (Lnet/minecraft/world/entity/ai/village/ReputationEvent;Lnet/minecraft/world/entity/Entity;)V onReputationEventFrom
net/minecraft/world/entity/SaddleStorage net/minecraft/world/entity/ItemBasedSteering
	a MIN_BOOST_TIME
	b MAX_BOOST_TIME
	c entityData
	d boostTimeAccessor
	e hasSaddleAccessor
	f boosting
	g boostTime
	a ()V onSynced
	a (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;)Z boost
	a (Z)V setSaddle
	b ()V tickBoost
	b (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	c ()F boostFactor
	d ()Z hasSaddle
	e ()I boostTimeTotal
net/minecraft/world/entity/ai/BehaviorController net/minecraft/world/entity/ai/Brain
	a LOGGER
	b codec
	c SCHEDULE_UPDATE_DELAY
	d memories
	e sensors
	f availableBehaviorsByPriority
	g schedule
	h activityRequirements
	i activityMemoriesToEraseWhenStopped
	j coreActivities
	k activeActivities
	l defaultActivity
	m lastScheduleUpdate
	a ()V clearMemories
	a (ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList; createPriorityPairs
	a (JJ)V updateActivityFromSchedule
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; serializeStart
	a (Ljava/lang/Object;)Z isEmptyCollection
	a (Ljava/util/Collection;Ljava/util/Collection;)Lbkg$b; provider
	a (Ljava/util/List;)V setActiveActivityToFirstValid
	a (Ljava/util/Set;)V setCoreActivities
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V tick
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Z hasMemoryValue
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)V setMemory
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;J)V setMemoryWithExpiry
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V setMemory
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryStatus;)Z checkMemory
	a (Lnet/minecraft/world/entity/schedule/Activity;)V setActiveActivityIfPossible
	a (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;)V addActivity
	a (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V addActivityAndRemoveMemoryWhenStopped
	a (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;)V addActivity
	a (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V addActivityWithConditions
	a (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V addActivityAndRemoveMemoriesWhenStopped
	a (Lnet/minecraft/world/entity/schedule/Schedule;)V setSchedule
	b ()Ljava/util/Map; getMemories
	b (Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec; codec
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V stopAll
	b (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V eraseMemory
	b (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)Z isMemoryValue
	b (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V setMemoryInternal
	b (Lnet/minecraft/world/entity/schedule/Activity;)V setDefaultActivity
	c ()Lnet/minecraft/world/entity/schedule/Schedule; getSchedule
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V tickSensors
	c (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; getMemory
	c (Lnet/minecraft/world/entity/schedule/Activity;)Z isActive
	d ()Ljava/util/Set; getActiveActivities
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V startEachNonRunningBehavior
	d (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; getMemoryInternal
	d (Lnet/minecraft/world/entity/schedule/Activity;)V setActiveActivity
	e ()Ljava/util/List; getRunningBehaviors
	e (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V tickEachRunningBehavior
	e (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)J getTimeUntilExpiry
	e (Lnet/minecraft/world/entity/schedule/Activity;)V eraseMemoriesForOtherActivitesThan
	f ()V useDefaultActivity
	f (Lnet/minecraft/world/entity/schedule/Activity;)Z activityRequirementsAreMet
	g ()Ljava/util/Optional; getActiveNonCoreActivity
	h ()V removeAllBehaviors
	i ()Lnet/minecraft/world/entity/ai/BehaviorController; copyWithoutBehaviors
	j ()Ljava/util/stream/Stream; memories
	k ()V forgetOutdatedMemories
net/minecraft/world/entity/ai/attributes/AttributeBase net/minecraft/world/entity/ai/attributes/Attribute
	a MAX_NAME_LENGTH
	b defaultValue
	c syncable
	d descriptionId
	a ()D getDefaultValue
	a (D)D sanitizeValue
	a (Z)Lnet/minecraft/world/entity/ai/attributes/AttributeBase; setSyncable
	b ()Z isClientSyncable
	c ()Ljava/lang/String; getDescriptionId
net/minecraft/world/entity/ai/attributes/AttributeDefaults net/minecraft/world/entity/ai/attributes/DefaultAttributes
	a LOGGER
	b SUPPLIERS
	a ()V validate
	a (Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/world/entity/ai/attributes/AttributeProvider; getSupplier
	b (Lnet/minecraft/world/entity/EntityTypes;)Z hasSupplier
net/minecraft/world/entity/ai/attributes/AttributeMapBase net/minecraft/world/entity/ai/attributes/AttributeMap
	a LOGGER
	b attributes
	c dirtyAttributes
	d supplier
	a ()Ljava/util/Set; getDirtyAttributes
	a (Lcom/google/common/collect/Multimap;)V removeAttributeModifiers
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable; getInstance
	a (Lnet/minecraft/core/Holder;Ljava/util/UUID;)Z hasModifier
	a (Lnet/minecraft/nbt/NBTTagList;)V load
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable; getInstance
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;Ljava/util/UUID;)Z hasModifier
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeMapBase;)V assignValues
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable;)V onAttributeModified
	b ()Ljava/util/Collection; getSyncableAttributes
	b (Lcom/google/common/collect/Multimap;)V addTransientAttributeModifiers
	b (Lnet/minecraft/core/Holder;)Z hasAttribute
	b (Lnet/minecraft/core/Holder;Ljava/util/UUID;)D getModifierValue
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Z hasAttribute
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;Ljava/util/UUID;)D getModifierValue
	c ()Lnet/minecraft/nbt/NBTTagList; save
	c (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)D getValue
	d (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)D getBaseValue
net/minecraft/world/entity/ai/attributes/AttributeModifiable net/minecraft/world/entity/ai/attributes/AttributeInstance
	a attribute
	b modifiersByOperation
	c modifierById
	d permanentModifiers
	e baseValue
	f dirty
	g cachedValue
	h onDirty
	a ()Lnet/minecraft/world/entity/ai/attributes/AttributeBase; getAttribute
	a (D)V setBaseValue
	a (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; getModifier
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable;)V replaceFrom
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Set; getModifiers
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)Z hasModifier
	b ()D getBaseValue
	b (Ljava/util/UUID;)V removeModifier
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Collection; getModifiersOrEmpty
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V addTransientModifier
	c ()Ljava/util/Set; getModifiers
	c (Ljava/util/UUID;)Z removePermanentModifier
	c (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V addPermanentModifier
	d ()V setDirty
	d (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V addModifier
	e ()V removeModifiers
	e (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V removeModifier
	f ()D getValue
	g ()Lnet/minecraft/nbt/NBTTagCompound; save
	h ()D calculateValue
net/minecraft/world/entity/ai/attributes/AttributeProvider net/minecraft/world/entity/ai/attributes/AttributeSupplier
	a instances
	a ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; builder
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable; createInstance
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)D getValue
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;Ljava/util/UUID;)D getModifierValue
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)D getBaseValue
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;Ljava/util/UUID;)Z hasModifier
	c (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Z hasAttribute
	d (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable; getAttributeInstance
net/minecraft/world/entity/ai/attributes/AttributeProvider$Builder net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder
	a builder
	b instanceFrozen
	a ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider; build
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; add
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;D)Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; add
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable; create
net/minecraft/world/entity/ai/attributes/AttributeRanged net/minecraft/world/entity/ai/attributes/RangedAttribute
	b minValue
	c maxValue
	a (D)D sanitizeValue
	d ()D getMinValue
	e ()D getMaxValue
net/minecraft/world/entity/ai/attributes/GenericAttributes net/minecraft/world/entity/ai/attributes/Attributes
	a MAX_HEALTH
	b FOLLOW_RANGE
	c KNOCKBACK_RESISTANCE
	d MOVEMENT_SPEED
	e FLYING_SPEED
	f ATTACK_DAMAGE
	g ATTACK_KNOCKBACK
	h ATTACK_SPEED
	i ARMOR
	j ARMOR_TOUGHNESS
	k LUCK
	l MAX_ABSORPTION
	m SPAWN_REINFORCEMENTS_CHANCE
	n JUMP_STRENGTH
	a (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Lnet/minecraft/world/entity/ai/attributes/AttributeBase; register
net/minecraft/world/entity/ai/behavior/BehaviorAttack net/minecraft/world/entity/ai/behavior/MeleeAttack
	a (I)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Lnet/minecraft/world/entity/EntityInsentient;)Z isHoldingUsableProjectileWeapon
net/minecraft/world/entity/ai/behavior/BehaviorAttackTargetForget net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid
	a TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/function/BiConsumer;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Z)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/world/entity/EntityLiving;Ljava/util/Optional;)Z isTiredOfTryingToReachTarget
net/minecraft/world/entity/ai/behavior/BehaviorAttackTargetSet net/minecraft/world/entity/ai/behavior/StartAttacking
	a (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/function/Predicate;Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorBedJump net/minecraft/world/entity/ai/behavior/JumpOnBed
	c MAX_TIME_TO_REACH_BED
	d MIN_JUMPS
	e MAX_JUMPS
	f COOLDOWN_BETWEEN_JUMPS
	g speedModifier
	h targetBed
	i remainingTimeToReachBed
	j remainingJumps
	k remainingCooldownUntilNextJump
	a (J)Z timedOut
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z isBed
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V start
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityInsentient;)Ljava/util/Optional; getNearestBed
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/core/BlockPosition;)V startWalkingTowardsBed
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z nearBed
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z onOrOverBed
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)Z canStillUse
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z onBedSurface
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	e (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z tiredOfWalking
	f (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z tiredOfJumping
net/minecraft/world/entity/ai/behavior/BehaviorBell net/minecraft/world/entity/ai/behavior/SocializeAtBell
	a SPEED_MODIFIER
	a ()Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorBellAlert net/minecraft/world/entity/ai/behavior/ReactToBell
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorBellRing net/minecraft/world/entity/ai/behavior/RingBell
	a RING_BELL_FROM_DISTANCE
	b BELL_RING_CHANCE
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorBetterJob net/minecraft/world/entity/ai/behavior/PoiCompetitorScan
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/core/GlobalPos;Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/EntityVillager;)Z competesForSameJobsite
	a (Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/VillagerProfession;)Z hasMatchingProfession
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/world/entity/npc/EntityVillager;)Lnet/minecraft/world/entity/npc/EntityVillager; selectWinner
net/minecraft/world/entity/ai/behavior/BehaviorBonemeal net/minecraft/world/entity/ai/behavior/UseBonemeal
	c BONEMEALING_DURATION
	d nextWorkCycleTime
	e lastBonemealingSession
	f timeWorkedSoFar
	g cropPos
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;)Z validPos
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)V setCurrentCropAsTarget
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Ljava/util/Optional; pickNextTarget
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
net/minecraft/world/entity/ai/behavior/BehaviorCareer net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorCelebrate net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid
	c currentRaid
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/world/item/EnumColor;I)Lnet/minecraft/world/item/ItemStack; getFirework
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
net/minecraft/world/entity/ai/behavior/BehaviorCelebrateDeath net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead
	a (ILjava/util/function/BiPredicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorCooldown net/minecraft/world/entity/ai/behavior/VillagerCalmDown
	a SAFE_DISTANCE_FROM_DANGER
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorCrossbowAttack net/minecraft/world/entity/ai/behavior/CrossbowAttack
	c TIMEOUT
	d attackDelay
	e crossbowState
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityLiving;)V crossbowAttack
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V tick
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityLiving;)V lookAtTarget
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/EntityLiving; getAttackTarget
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
net/minecraft/world/entity/ai/behavior/BehaviorCrossbowAttack$BowState net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState
	a UNCHARGED
	b CHARGING
	c CHARGED
	d READY_TO_ATTACK
	e $VALUES
	a ()[Lnet/minecraft/world/entity/ai/behavior/BehaviorCrossbowAttack$BowState; $values
net/minecraft/world/entity/ai/behavior/BehaviorExpirableMemory net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/util/valueproviders/UniformInt;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorFarm net/minecraft/world/entity/ai/behavior/HarvestFarmland
	c SPEED_MODIFIER
	d HARVEST_DURATION
	e aboveFarmlandPos
	f nextOkStartTime
	g timeWorkedSoFar
	h validFarmlandAroundVillager
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;)Z validPos
	a (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/core/BlockPosition; getValidFarmland
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
net/minecraft/world/entity/ai/behavior/BehaviorFindAdmirableItem net/minecraft/world/entity/ai/behavior/GoToWantedItem
	a (FZI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/function/Predicate;FZI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorFindPosition net/minecraft/world/entity/ai/behavior/AcquirePoi
	a SCAN_RANGE
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;ZLjava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;ZLjava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/world/entity/EntityInsentient;Ljava/util/Set;)Lnet/minecraft/world/level/pathfinder/PathEntity; findPathToPois
net/minecraft/world/entity/ai/behavior/BehaviorFollowAdult net/minecraft/world/entity/ai/behavior/BabyFollowAdult
	a (Lnet/minecraft/util/valueproviders/UniformInt;F)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Lnet/minecraft/util/valueproviders/UniformInt;Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorForgetAnger net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorGate net/minecraft/world/entity/ai/behavior/GateBehavior
	a entryCondition
	b exitErasedMemories
	c orderPolicy
	d runningPolicy
	e behaviors
	f status
	a ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; getStatus
	a (Lnet/minecraft/world/entity/EntityLiving;)Z hasRequiredMemories
	b ()Ljava/lang/String; debugString
	e (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z tryStart
	f (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tickOrStop
	g (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V doStop
net/minecraft/world/entity/ai/behavior/BehaviorGate$Execution net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy
	a RUN_ONE
	b TRY_ALL
	c $VALUES
	a ()[Lnet/minecraft/world/entity/ai/behavior/BehaviorGate$Execution; $values
	a (Ljava/util/stream/Stream;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V apply
net/minecraft/world/entity/ai/behavior/BehaviorGate$Order net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy
	a ORDERED
	b SHUFFLED
	c consumer
	d $VALUES
	a ()[Lnet/minecraft/world/entity/ai/behavior/BehaviorGate$Order; $values
	a (Lnet/minecraft/world/entity/ai/behavior/ShufflingList;)V apply
net/minecraft/world/entity/ai/behavior/BehaviorGateSingle net/minecraft/world/entity/ai/behavior/RunOne
net/minecraft/world/entity/ai/behavior/BehaviorHide net/minecraft/world/entity/ai/behavior/SetHiddenState
	a HIDE_TIMEOUT
	a (II)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorHome net/minecraft/world/entity/ai/behavior/LocateHidingPlace
	a (IFI)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorInteract net/minecraft/world/entity/ai/behavior/InteractWith
	a (Lnet/minecraft/world/entity/EntityTypes;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; of
	a (Lnet/minecraft/world/entity/EntityTypes;ILnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; of
net/minecraft/world/entity/ai/behavior/BehaviorInteractDoor net/minecraft/world/entity/ai/behavior/InteractWithDoor
	a COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE
	b SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN
	c MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/core/GlobalPos;)Z isDoorTooFarAway
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;Ljava/util/Set;Ljava/util/Optional;)V closeDoorsThatIHaveOpenedOrPassedThrough
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/core/BlockPosition;Ljava/util/Optional;)Z areOtherMobsComingThroughDoor
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Lnet/minecraft/core/BlockPosition;)Z isMobComingThroughDoor
	a (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Ljava/util/Optional;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; rememberDoorToClose
net/minecraft/world/entity/ai/behavior/BehaviorInteractPlayer net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink
	c speedModifier
	a (J)Z timedOut
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)V followPlayer
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
net/minecraft/world/entity/ai/behavior/BehaviorLeaveJob net/minecraft/world/entity/ai/behavior/YieldJobSite
	a (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/core/BlockPosition;)Z nearbyWantsJobsite
	a (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/ai/village/poi/VillagePlaceType;)Z canReachPos
net/minecraft/world/entity/ai/behavior/BehaviorLook net/minecraft/world/entity/ai/behavior/LookAtTargetSink
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
net/minecraft/world/entity/ai/behavior/BehaviorLookInteract net/minecraft/world/entity/ai/behavior/SetLookAndInteract
	a (Lnet/minecraft/world/entity/EntityTypes;I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorLookTarget net/minecraft/world/entity/ai/behavior/SetEntityLookTarget
	a (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Ljava/util/function/Predicate;F)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Lnet/minecraft/world/entity/EntityTypes;F)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Lnet/minecraft/world/entity/EnumCreatureType;F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorLookWalk net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget
	a (FI)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Ljava/util/function/Predicate;Ljava/util/function/Function;I)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorMakeLove net/minecraft/world/entity/ai/behavior/VillagerMakeLove
	c INTERACT_DIST_SQR
	d SPEED_MODIFIER
	e birthTimestamp
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/core/BlockPosition;)V giveBedToChild
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/world/entity/npc/EntityVillager;)V tryToGiveBirth
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)Z isBreedingPossible
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/Holder;)Z canReach
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Ljava/util/Optional; takeVacantBed
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/world/entity/npc/EntityVillager;)Ljava/util/Optional; breed
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
net/minecraft/world/entity/ai/behavior/BehaviorMakeLoveAnimal net/minecraft/world/entity/ai/behavior/AnimalMakeLove
	c BREED_RANGE
	d MIN_DURATION
	e MAX_DURATION
	f partnerType
	g speedModifier
	h spawnChildAtTime
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;J)V start
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Lnet/minecraft/world/entity/animal/EntityAnimal; getBreedTarget
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;J)Z canStillUse
	b (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z hasBreedTargetOfRightType
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;J)V tick
	c (Lnet/minecraft/world/entity/animal/EntityAnimal;)Ljava/util/Optional; findValidBreedPartner
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;J)V stop
net/minecraft/world/entity/ai/behavior/BehaviorNearestVillage net/minecraft/world/entity/ai/behavior/GoToClosestVillage
	a (FI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorNop net/minecraft/world/entity/ai/behavior/DoNothing
	a minDuration
	b maxDuration
	c status
	d endTimestamp
	a ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; getStatus
	b ()Ljava/lang/String; debugString
	e (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z tryStart
	f (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tickOrStop
	g (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V doStop
net/minecraft/world/entity/ai/behavior/BehaviorOutside net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot
	a (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getOutdoorPosition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/core/BlockPosition;)Z hasNoBlocksAbove
net/minecraft/world/entity/ai/behavior/BehaviorPacify net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorPanic net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	b (Lnet/minecraft/world/entity/EntityLiving;)Z hasHostile
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
	c (Lnet/minecraft/world/entity/EntityLiving;)Z isHurt
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/BehaviorPlay net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids
	a MAX_FLEE_XZ_DIST
	b MAX_FLEE_Y_DIST
	c FLEE_SPEED_MODIFIER
	d CHASE_SPEED_MODIFIER
	e MAX_CHASERS_PER_TARGET
	f AVERAGE_WAIT_TIME_BETWEEN_RUNS
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/List;)Ljava/util/Optional; findSomeoneBeingChased
	a (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/EntityLiving; whoAreYouChasing
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isFriendChasingMe
	a (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Lnet/minecraft/world/entity/EntityLiving;)V chaseKid
	b (Ljava/util/List;)Ljava/util/Map; checkHowManyChasersEachFriendHas
	b (Lnet/minecraft/world/entity/EntityLiving;)Z isChasingSomeone
net/minecraft/world/entity/ai/behavior/BehaviorPosition net/minecraft/world/entity/ai/behavior/PositionTracker
	a ()Lnet/minecraft/world/phys/Vec3D; currentPosition
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isVisibleBy
	b ()Lnet/minecraft/core/BlockPosition; currentBlockPosition
net/minecraft/world/entity/ai/behavior/BehaviorPositionEntity net/minecraft/world/entity/ai/behavior/EntityTracker
	a entity
	b trackEyeHeight
	a ()Lnet/minecraft/world/phys/Vec3D; currentPosition
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isVisibleBy
	b ()Lnet/minecraft/core/BlockPosition; currentBlockPosition
	c ()Lnet/minecraft/world/entity/Entity; getEntity
net/minecraft/world/entity/ai/behavior/BehaviorPositionValidate net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi
	a MAX_DISTANCE
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)Z bedIsOccupied
net/minecraft/world/entity/ai/behavior/BehaviorPotentialJobSite net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite
	c speedModifier
	d TICKS_UNTIL_TIMEOUT
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
net/minecraft/world/entity/ai/behavior/BehaviorProfession net/minecraft/world/entity/ai/behavior/ResetProfession
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorRaid net/minecraft/world/entity/ai/behavior/SetRaidStatus
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorRaidReset net/minecraft/world/entity/ai/behavior/ResetRaidStatus
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorRemoveMemory net/minecraft/world/entity/ai/behavior/EraseMemoryIf
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorRetreat net/minecraft/world/entity/ai/behavior/BackUpIfTooClose
	a (IF)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorSchedule net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorSleep net/minecraft/world/entity/ai/behavior/SleepInBed
	c COOLDOWN_AFTER_BEING_WOKEN
	d nextOkStartTime
	a (J)Z timedOut
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/BehaviorStartRiding net/minecraft/world/entity/ai/behavior/Mount
	a CLOSE_ENOUGH_TO_START_RIDING_DIST
	a (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorStopRiding net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting
	a (ILjava/util/function/BiPredicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;I)Z isVehicleValid
net/minecraft/world/entity/ai/behavior/BehaviorStrollInside net/minecraft/world/entity/ai/behavior/InsideBrownianWalk
	a (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorStrollPlace net/minecraft/world/entity/ai/behavior/StrollToPoi
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FII)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorStrollPlaceList net/minecraft/world/entity/ai/behavior/StrollToPoiList
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIILnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorStrollPosition net/minecraft/world/entity/ai/behavior/StrollAroundPoi
	a MIN_TIME_BETWEEN_STROLLS
	b STROLL_MAX_XZ_DIST
	c STROLL_MAX_Y_DIST
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorStrollRandom net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll
	a MAX_XZ_DIST
	b MAX_Y_DIST
	a (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (FII)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorStrollRandomUnconstrained net/minecraft/world/entity/ai/behavior/RandomStroll
	a MAX_XZ_DIST
	b MAX_Y_DIST
	c SWIM_XY_DISTANCE_TIERS
	a (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; stroll
	a (FII)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; stroll
	a (FLjava/util/function/Function;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/OneShot; strollFlyOrSwim
	a (FZ)Lnet/minecraft/world/entity/ai/behavior/OneShot; stroll
	a (Lnet/minecraft/world/entity/EntityCreature;)Lnet/minecraft/world/phys/Vec3D; getTargetSwimPos
	a (Lnet/minecraft/world/entity/EntityCreature;II)Lnet/minecraft/world/phys/Vec3D; getTargetFlyPos
	b (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; fly
	c (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; swim
net/minecraft/world/entity/ai/behavior/BehaviorSwim net/minecraft/world/entity/ai/behavior/Swim
	c chance
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
net/minecraft/world/entity/ai/behavior/BehaviorTarget net/minecraft/world/entity/ai/behavior/BlockPosTracker
	a blockPos
	b centerPosition
	a ()Lnet/minecraft/world/phys/Vec3D; currentPosition
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isVisibleBy
	b ()Lnet/minecraft/core/BlockPosition; currentBlockPosition
net/minecraft/world/entity/ai/behavior/BehaviorTradePlayer net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer
	c MAX_LOOK_TIME
	d STARTING_LOOK_TIME
	e playerItemStack
	f displayItems
	g cycleCounter
	h displayIndex
	i lookTime
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/npc/EntityVillager;)V findItemsToDisplay
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)V displayFirstItem
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/world/item/ItemStack;)V displayAsHeldItem
	a (Lnet/minecraft/world/item/trading/MerchantRecipe;)Z playerItemStackMatchesCostOfOffer
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	b (Lnet/minecraft/world/entity/npc/EntityVillager;)V updateDisplayItems
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
	c (Lnet/minecraft/world/entity/npc/EntityVillager;)V clearHeldItem
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
	d (Lnet/minecraft/world/entity/npc/EntityVillager;)Lnet/minecraft/world/entity/EntityLiving; lookAtTarget
	e (Lnet/minecraft/world/entity/npc/EntityVillager;)V displayCyclingItems
net/minecraft/world/entity/ai/behavior/BehaviorTradeVillager net/minecraft/world/entity/ai/behavior/TradeWithVillager
	c INTERACT_DIST_SQR
	d SPEED_MODIFIER
	e trades
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Ljava/util/Set;Lnet/minecraft/world/entity/EntityLiving;)V throwHalfStack
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/world/entity/npc/EntityVillager;)Ljava/util/Set; figureOutWhatIAmWillingToTrade
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
net/minecraft/world/entity/ai/behavior/BehaviorUtil net/minecraft/world/entity/ai/behavior/BehaviorUtils
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/SectionPosition;I)Lnet/minecraft/core/SectionPosition; findSectionClosestToVillage
	a (Lnet/minecraft/world/entity/EntityCreature;II)Lnet/minecraft/world/phys/Vec3D; getRandomSwimmablePos
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityLiving;I)Z isWithinAttackRange
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isBreeding
	a (Lnet/minecraft/world/entity/EntityLiving;Ljava/util/Optional;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/EntityLiving; getNearestTarget
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/core/BlockPosition;FI)V setWalkAndLookTargetMemories
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;FI)V setWalkAndLookTargetMemories
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)V lookAtEntity
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;D)Z isOtherTargetMuchFurtherAwayThanCurrentAttackTarget
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;F)V lockGazeAndWalkToEachOther
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/EntityLiving; getTargetNearestMe
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/behavior/BehaviorPosition;FI)V setWalkAndLookTargetMemories
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; getLivingEntityFromUUIDMemory
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3D;)V throwItem
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;F)V throwItem
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Lnet/minecraft/world/entity/EntityLiving;)Z entityIsVisible
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/function/Predicate;)Z targetIsValid
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/EntityTypes;)Z targetIsValid
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z canSee
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;F)V setWalkAndLookTargetMemoriesToEachOther
	c (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)V lookAtEachOther
net/minecraft/world/entity/ai/behavior/BehaviorVillageHeroGift net/minecraft/world/entity/ai/behavior/GiveGiftToHero
	c THROW_GIFT_AT_DISTANCE
	d MIN_TIME_BETWEEN_GIFTS
	e MAX_TIME_BETWEEN_GIFTS
	f TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING
	g GIFTS
	h SPEED_MODIFIER
	i timeUntilNextGift
	j giftGivenDuringThisRun
	k timeSinceStart
	a (Lnet/minecraft/server/level/WorldServer;)I calculateTimeUntilNextGift
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)Ljava/util/List; getItemToThrow
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/world/entity/EntityLiving;)V throwGift
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/world/entity/player/EntityHuman;)Z isWithinThrowingDistance
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z isHero
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/world/entity/npc/EntityVillager;)Z isHeroVisible
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
	c (Lnet/minecraft/world/entity/npc/EntityVillager;)Ljava/util/Optional; getNearestTargetableHero
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
net/minecraft/world/entity/ai/behavior/BehaviorWake net/minecraft/world/entity/ai/behavior/WakeUp
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorWalkAway net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; pos
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZLjava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	b (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/OneShot; entity
net/minecraft/world/entity/ai/behavior/BehaviorWalkAwayBlock net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIII)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorWalkAwayOutOfRange net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach
	a PROJECTILE_ATTACK_RANGE_BUFFER
	a (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorWalkHome net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget
	a CACHE_TIMEOUT
	b BATCH_SIZE
	c RATE
	d OK_DISTANCE_SQR
	a (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorWork net/minecraft/world/entity/ai/behavior/WorkAtPoi
	c CHECK_COOLDOWN
	d DISTANCE
	e lastCheck
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)V useWorkstation
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/BehaviorWorkComposter net/minecraft/world/entity/ai/behavior/WorkAtComposter
	c COMPOSTABLE_ITEMS
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)V useWorkstation
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/core/GlobalPos;Lnet/minecraft/world/level/block/state/IBlockData;)V compostItems
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V spawnComposterFillEffects
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)V makeBread
net/minecraft/world/entity/ai/behavior/Behaviors net/minecraft/world/entity/ai/behavior/VillagerGoalPackages
	a STROLL_SPEED_MODIFIER
	a ()Lcom/mojang/datafixers/util/Pair; getFullLookBehavior
	a (F)Lcom/google/common/collect/ImmutableList; getPlayPackage
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z raidExistsAndActive
	a (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getCorePackage
	b ()Lcom/mojang/datafixers/util/Pair; getMinimalLookBehavior
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z raidExistsAndNotVictory
	b (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getWorkPackage
	c (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getRestPackage
	d (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getMeetPackage
	e (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getIdlePackage
	f (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getPanicPackage
	g (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getPreRaidPackage
	h (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getRaidPackage
	i (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getHidePackage
net/minecraft/world/entity/ai/behavior/BehavorMove net/minecraft/world/entity/ai/behavior/MoveToTargetSink
	c MAX_COOLDOWN_BEFORE_RETRYING
	d remainingCooldown
	e path
	f lastTargetPos
	g speedModifier
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/ai/memory/MemoryTarget;)Z reachedTarget
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/ai/memory/MemoryTarget;J)Z tryComputePath
	a (Lnet/minecraft/world/entity/ai/memory/MemoryTarget;)Z isWalkTargetSpectator
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/control/ControllerJump net/minecraft/world/entity/ai/control/JumpControl
	a jump
	b mob
	a ()V jump
	b ()V tick
net/minecraft/world/entity/ai/control/ControllerLook net/minecraft/world/entity/ai/control/LookControl
	a mob
	b yMaxRotSpeed
	c xMaxRotAngle
	d lookAtCooldown
	e wantedX
	f wantedY
	g wantedZ
	a ()V tick
	a (DDD)V setLookAt
	a (DDDFF)V setLookAt
	a (FFF)F rotateTowards
	a (Lnet/minecraft/world/entity/Entity;)V setLookAt
	a (Lnet/minecraft/world/entity/Entity;FF)V setLookAt
	a (Lnet/minecraft/world/phys/Vec3D;)V setLookAt
	b ()V clampHeadRotationToBody
	b (Lnet/minecraft/world/entity/Entity;)D getWantedY
	c ()Z resetXRotOnTick
	d ()Z isLookingAtTarget
	e ()D getWantedX
	f ()D getWantedY
	g ()D getWantedZ
	h ()Ljava/util/Optional; getXRotD
	i ()Ljava/util/Optional; getYRotD
net/minecraft/world/entity/ai/control/ControllerMove net/minecraft/world/entity/ai/control/MoveControl
	a MIN_SPEED
	b MIN_SPEED_SQR
	c MAX_TURN
	d mob
	e wantedX
	f wantedY
	g wantedZ
	h speedModifier
	i strafeForwards
	j strafeRight
	k operation
	a ()V tick
	a (DDDD)V setWantedPosition
	a (FF)V strafe
	a (FFF)F rotlerp
	b ()Z hasWanted
	b (FF)Z isWalkable
	c ()D getSpeedModifier
	d ()D getWantedX
	e ()D getWantedY
	f ()D getWantedZ
net/minecraft/world/entity/ai/control/ControllerMove$Operation net/minecraft/world/entity/ai/control/MoveControl$Operation
	a WAIT
	b MOVE_TO
	c STRAFE
	d JUMPING
	e $VALUES
	a ()[Lnet/minecraft/world/entity/ai/control/ControllerMove$Operation; $values
net/minecraft/world/entity/ai/control/ControllerMoveFlying net/minecraft/world/entity/ai/control/FlyingMoveControl
	l maxTurn
	m hoversInPlace
	a ()V tick
net/minecraft/world/entity/ai/control/EntityAIBodyControl net/minecraft/world/entity/ai/control/BodyRotationControl
	a mob
	b HEAD_STABLE_ANGLE
	c DELAY_UNTIL_STARTING_TO_FACE_FORWARD
	d HOW_LONG_IT_TAKES_TO_FACE_FORWARD
	e headStableTime
	f lastStableYHeadRot
	a ()V clientTick
	b ()V rotateBodyIfNecessary
	c ()V rotateHeadIfNecessary
	d ()V rotateHeadTowardsFront
	e ()Z notCarryingMobPassengers
	f ()Z isMoving
net/minecraft/world/entity/ai/goal/PathfinderGoal net/minecraft/world/entity/ai/goal/Goal
	a flags
	P_ ()Z isInterruptable
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	a (I)I adjustedTickDelay
	a (Ljava/util/EnumSet;)V setFlags
	b ()Z canContinueToUse
	b (I)I reducedTickDelay
	c ()V start
	d ()V stop
	e ()V tick
	j ()Ljava/util/EnumSet; getFlags
net/minecraft/world/entity/ai/goal/PathfinderGoal$Type net/minecraft/world/entity/ai/goal/Goal$Flag
	a MOVE
	b LOOK
	c JUMP
	d TARGET
	e $VALUES
	a ()[Lnet/minecraft/world/entity/ai/goal/PathfinderGoal$Type; $values
net/minecraft/world/entity/ai/goal/PathfinderGoalArrowAttack net/minecraft/world/entity/ai/goal/RangedAttackGoal
	a mob
	b rangedAttackMob
	c target
	d attackTime
	e speedModifier
	f seeTime
	g attackIntervalMin
	h attackIntervalMax
	i attackRadius
	j attackRadiusSqr
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalAvoidTarget net/minecraft/world/entity/ai/goal/AvoidEntityGoal
	a mob
	b toAvoid
	c maxDist
	d path
	e pathNav
	f avoidClass
	g avoidPredicate
	h predicateOnAvoidEntity
	i walkSpeedModifier
	j sprintSpeedModifier
	k avoidEntityTargeting
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalBeg net/minecraft/world/entity/ai/goal/BegGoal
	a wolf
	b player
	c level
	d lookDistance
	e lookTime
	f begTargeting
	a ()Z canUse
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z playerHoldingInteresting
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalBoat net/minecraft/world/entity/ai/goal/BoatGoals
	a GO_TO_BOAT
	b GO_IN_BOAT_DIRECTION
	c $VALUES
	a ()[Lnet/minecraft/world/entity/ai/goal/PathfinderGoalBoat; $values
net/minecraft/world/entity/ai/goal/PathfinderGoalBowShoot net/minecraft/world/entity/ai/goal/RangedBowAttackGoal
	a mob
	b speedModifier
	c attackIntervalMin
	d attackRadiusSqr
	e attackTime
	f seeTime
	g strafingClockwise
	h strafingBackwards
	i strafingTime
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	c (I)V setMinAttackInterval
	d ()V stop
	e ()V tick
	h ()Z isHoldingBow
net/minecraft/world/entity/ai/goal/PathfinderGoalBreakDoor net/minecraft/world/entity/ai/goal/BreakDoorGoal
	a breakTime
	b lastBreakProgress
	c doorBreakTime
	g DEFAULT_DOOR_BREAK_TIME
	h validDifficulties
	a ()Z canUse
	a (Lnet/minecraft/world/EnumDifficulty;)Z isValidDifficulty
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	f ()I getDoorBreakTime
net/minecraft/world/entity/ai/goal/PathfinderGoalBreath net/minecraft/world/entity/ai/goal/BreathAirGoal
	a mob
	P_ ()Z isInterruptable
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z givesAir
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	h ()V findAirPosition
net/minecraft/world/entity/ai/goal/PathfinderGoalBreed net/minecraft/world/entity/ai/goal/BreedGoal
	a animal
	b level
	c partner
	d PARTNER_TARGETING
	e partnerClass
	f loveTime
	g speedModifier
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	g ()V breed
	h ()Lnet/minecraft/world/entity/animal/EntityAnimal; getFreePartner
net/minecraft/world/entity/ai/goal/PathfinderGoalCatSitOnBed net/minecraft/world/entity/ai/goal/CatLieOnBedGoal
	g cat
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityCreature;)I nextStartTick
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalCrossbowAttack net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal
	a PATHFINDING_DELAY_RANGE
	b mob
	c crossbowState
	d speedModifier
	e attackRadiusSqr
	f seeTime
	g attackDelay
	h updatePathDelay
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	h ()Z isHoldingCrossbow
	i ()Z isValidTarget
	k ()Z canRun
net/minecraft/world/entity/ai/goal/PathfinderGoalCrossbowAttack$State net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState
	a UNCHARGED
	b CHARGING
	c CHARGED
	d READY_TO_ATTACK
	e $VALUES
	a ()[Lnet/minecraft/world/entity/ai/goal/PathfinderGoalCrossbowAttack$State; $values
net/minecraft/world/entity/ai/goal/PathfinderGoalDoorInteract net/minecraft/world/entity/ai/goal/DoorInteractGoal
	a passed
	b doorOpenDirX
	c doorOpenDirZ
	d mob
	e doorPos
	f hasDoor
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	a (Z)V setOpen
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	h ()Z isOpen
net/minecraft/world/entity/ai/goal/PathfinderGoalDoorOpen net/minecraft/world/entity/ai/goal/OpenDoorGoal
	a closeDoor
	b forgetTime
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalEatTile net/minecraft/world/entity/ai/goal/EatBlockGoal
	a EAT_ANIMATION_TICKS
	b IS_TALL_GRASS
	c mob
	d level
	e eatAnimationTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()I getEatAnimationTick
net/minecraft/world/entity/ai/goal/PathfinderGoalFishSchool net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal
	a INTERVAL_TICKS
	b mob
	c timeToRecalcPath
	d nextStartTick
	a ()Z canUse
	a (Lnet/minecraft/world/entity/animal/EntityFishSchool;)I nextStartTick
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalFleeSun net/minecraft/world/entity/ai/goal/FleeSunGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f level
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	h ()Z setWantedPos
	i ()Lnet/minecraft/world/phys/Vec3D; getHidePos
net/minecraft/world/entity/ai/goal/PathfinderGoalFloat net/minecraft/world/entity/ai/goal/FloatGoal
	a mob
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalFollowBoat net/minecraft/world/entity/ai/goal/FollowBoatGoal
	a timeToRecalcPath
	b mob
	c following
	d currentGoal
	P_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalFollowEntity net/minecraft/world/entity/ai/goal/FollowMobGoal
	a mob
	b followPredicate
	c followingMob
	d speedModifier
	e navigation
	f timeToRecalcPath
	g stopDistance
	h oldWaterCost
	i areaSize
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalFollowOwner net/minecraft/world/entity/ai/goal/FollowOwnerGoal
	a TELEPORT_WHEN_DISTANCE_IS
	b MIN_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	c MAX_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	d MAX_VERTICAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	e tamable
	f owner
	g level
	h speedModifier
	i navigation
	j timeToRecalcPath
	k stopDistance
	l startDistance
	m oldWaterCost
	n canFly
	a ()Z canUse
	a (II)I randomIntInclusive
	a (III)Z maybeTeleportTo
	a (Lnet/minecraft/core/BlockPosition;)Z canTeleportTo
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z unableToMove
	i ()V teleportToOwner
net/minecraft/world/entity/ai/goal/PathfinderGoalFollowParent net/minecraft/world/entity/ai/goal/FollowParentGoal
	a HORIZONTAL_SCAN_RANGE
	b VERTICAL_SCAN_RANGE
	c DONT_FOLLOW_IF_CLOSER_THAN
	d animal
	e parent
	f speedModifier
	g timeToRecalcPath
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalGotoTarget net/minecraft/world/entity/ai/goal/MoveToBlockGoal
	a mob
	b speedModifier
	c nextStartTick
	d tryTicks
	e blockPos
	f verticalSearchStart
	g GIVE_UP_TICKS
	h STAY_TICKS
	i INTERVAL_TICKS
	j maxStayTicks
	k reachedTarget
	l searchRange
	m verticalSearchRange
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityCreature;)I nextStartTick
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	h ()V moveMobToBlock
	i ()D acceptedDistance
	k ()Lnet/minecraft/core/BlockPosition; getMoveToTarget
	l ()Z shouldRecalculatePath
	m ()Z isReachedTarget
	n ()Z findNearestBlock
net/minecraft/world/entity/ai/goal/PathfinderGoalInteract net/minecraft/world/entity/ai/goal/InteractGoal
net/minecraft/world/entity/ai/goal/PathfinderGoalJumpOnBlock net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal
	g cat
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalLeapAtTarget net/minecraft/world/entity/ai/goal/LeapAtTargetGoal
	a mob
	b target
	c yd
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/world/entity/ai/goal/PathfinderGoalLlamaFollow net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal
	a llama
	b speedModifier
	c CARAVAN_LIMIT
	d distCheckCounter
	a ()Z canUse
	a (Lnet/minecraft/world/entity/animal/horse/EntityLlama;I)Z firstIsLeashed
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalLookAtPlayer net/minecraft/world/entity/ai/goal/LookAtPlayerGoal
	a DEFAULT_PROBABILITY
	b mob
	c lookAt
	d lookDistance
	e probability
	f lookAtType
	g lookAtContext
	h lookTime
	i onlyHorizontal
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalLookAtTradingPlayer net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal
	h villager
	a ()Z canUse
net/minecraft/world/entity/ai/goal/PathfinderGoalMeleeAttack net/minecraft/world/entity/ai/goal/MeleeAttackGoal
	a mob
	b speedModifier
	c followingTargetEvenIfNotSeen
	d path
	e pathedTargetX
	f pathedTargetY
	g pathedTargetZ
	h ticksUntilNextPathRecalculation
	i ticksUntilNextAttack
	j attackInterval
	k lastCanUseCheck
	l COOLDOWN_BETWEEN_CAN_USE_CHECKS
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityLiving;)V checkAndPerformAttack
	b ()Z canContinueToUse
	b (Lnet/minecraft/world/entity/EntityLiving;)Z canPerformAttack
	c ()V start
	d ()V stop
	e ()V tick
	h ()V resetAttackCooldown
	i ()Z isTimeToAttack
	k ()I getTicksUntilNextAttack
	l ()I getAttackInterval
net/minecraft/world/entity/ai/goal/PathfinderGoalMoveThroughVillage net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal
	a mob
	b speedModifier
	c path
	d poiPos
	e onlyAtNight
	f visited
	g distanceToPoi
	h canDealWithDoors
	a ()Z canUse
	a (Lnet/minecraft/core/BlockPosition;)Z hasNotVisited
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	h ()V updateVisited
net/minecraft/world/entity/ai/goal/PathfinderGoalMoveTowardsRestriction net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/world/entity/ai/goal/PathfinderGoalMoveTowardsTarget net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal
	a mob
	b target
	c wantedX
	d wantedY
	e wantedZ
	f speedModifier
	g within
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
net/minecraft/world/entity/ai/goal/PathfinderGoalNearestVillage net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal
	a DISTANCE_THRESHOLD
	b mob
	c interval
	d wantedPos
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	h ()V moveRandomly
net/minecraft/world/entity/ai/goal/PathfinderGoalOcelotAttack net/minecraft/world/entity/ai/goal/OcelotAttackGoal
	a mob
	b target
	c attackTime
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalOfferFlower net/minecraft/world/entity/ai/goal/OfferFlowerGoal
	a OFFER_TICKS
	b OFFER_TARGER_CONTEXT
	c golem
	d villager
	e tick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalPanic net/minecraft/world/entity/ai/goal/PanicGoal
	a WATER_CHECK_DISTANCE_VERTICAL
	b mob
	c speedModifier
	d posX
	e posY
	f posZ
	g isRunning
	a ()Z canUse
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/core/BlockPosition; lookForWater
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	h ()Z shouldPanic
	i ()Z findRandomPosition
	k ()Z isRunning
net/minecraft/world/entity/ai/goal/PathfinderGoalPerch net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal
	a entity
	b owner
	c isSittingOnShoulder
	P_ ()Z isInterruptable
	a ()Z canUse
	c ()V start
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalRaid net/minecraft/world/entity/ai/goal/PathfindToRaidGoal
	a RECRUITMENT_SEARCH_TICK_DELAY
	b SPEED_MODIFIER
	c mob
	d recruitmentTick
	a ()Z canUse
	a (Lnet/minecraft/world/entity/raid/Raid;)V recruitNearby
	b ()Z canContinueToUse
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalRandomFly net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal
	h ()Lnet/minecraft/world/phys/Vec3D; getPosition
net/minecraft/world/entity/ai/goal/PathfinderGoalRandomLookaround net/minecraft/world/entity/ai/goal/RandomLookAroundGoal
	a mob
	b relX
	c relZ
	d lookTime
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalRandomStroll net/minecraft/world/entity/ai/goal/RandomStrollGoal
	a DEFAULT_INTERVAL
	b mob
	c wantedX
	d wantedY
	e wantedZ
	f speedModifier
	g interval
	h forceTrigger
	i checkNoActionTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	c (I)V setInterval
	d ()V stop
	h ()Lnet/minecraft/world/phys/Vec3D; getPosition
	i ()V trigger
net/minecraft/world/entity/ai/goal/PathfinderGoalRandomStrollLand net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal
	i PROBABILITY
	j probability
	h ()Lnet/minecraft/world/phys/Vec3D; getPosition
net/minecraft/world/entity/ai/goal/PathfinderGoalRandomSwim net/minecraft/world/entity/ai/goal/RandomSwimmingGoal
	h ()Lnet/minecraft/world/phys/Vec3D; getPosition
net/minecraft/world/entity/ai/goal/PathfinderGoalRemoveBlock net/minecraft/world/entity/ai/goal/RemoveBlockGoal
	g blockToRemove
	h removerMob
	i ticksSinceReachedGoal
	j WAIT_AFTER_BLOCK_FOUND
	a ()Z canUse
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IBlockAccess;)Lnet/minecraft/core/BlockPosition; getPosWithBlock
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V playDestroyProgressSound
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V playBreakSound
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalRestrictSun net/minecraft/world/entity/ai/goal/RestrictSunGoal
	a mob
	a ()Z canUse
	c ()V start
	d ()V stop
net/minecraft/world/entity/ai/goal/PathfinderGoalSelector net/minecraft/world/entity/ai/goal/GoalSelector
	a LOGGER
	b NO_GOAL
	c lockedFlags
	d availableGoals
	e profiler
	f disabledFlags
	g tickCount
	h newGoalRate
	a ()V tick
	a (I)V setNewGoalRate
	a (ILnet/minecraft/world/entity/ai/goal/PathfinderGoal;)V addGoal
	a (Ljava/util/function/Predicate;)V removeAllGoals
	a (Lnet/minecraft/world/entity/ai/goal/PathfinderGoal$Type;)V disableControlFlag
	a (Lnet/minecraft/world/entity/ai/goal/PathfinderGoal$Type;Z)V setControlFlag
	a (Lnet/minecraft/world/entity/ai/goal/PathfinderGoal;)V removeGoal
	a (Lnet/minecraft/world/entity/ai/goal/PathfinderGoalWrapped;Ljava/util/EnumSet;)Z goalContainsAnyFlags
	a (Lnet/minecraft/world/entity/ai/goal/PathfinderGoalWrapped;Ljava/util/Map;)Z goalCanBeReplacedForAllFlags
	a (Z)V tickRunningGoals
	b ()Ljava/util/Set; getAvailableGoals
	b (Lnet/minecraft/world/entity/ai/goal/PathfinderGoal$Type;)V enableControlFlag
	c ()Ljava/util/stream/Stream; getRunningGoals
net/minecraft/world/entity/ai/goal/PathfinderGoalSit net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal
	a mob
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
net/minecraft/world/entity/ai/goal/PathfinderGoalStrollVillage net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal
	i MAX_XZ_DIST
	j MAX_Y_DIST
	a ()Z canUse
	h ()Lnet/minecraft/world/phys/Vec3D; getPosition
net/minecraft/world/entity/ai/goal/PathfinderGoalStrollVillageGolem net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal
	i POI_SECTION_SCAN_RADIUS
	j VILLAGER_SCAN_RADIUS
	k RANDOM_POS_XY_DISTANCE
	l RANDOM_POS_Y_DISTANCE
	a (Lnet/minecraft/core/SectionPosition;)Lnet/minecraft/core/BlockPosition; getRandomPoiWithinSection
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)Z doesVillagerWantGolem
	h ()Lnet/minecraft/world/phys/Vec3D; getPosition
	k ()Lnet/minecraft/world/phys/Vec3D; getPositionTowardsAnywhere
	l ()Lnet/minecraft/world/phys/Vec3D; getPositionTowardsVillagerWhoWantsGolem
	m ()Lnet/minecraft/world/phys/Vec3D; getPositionTowardsPoi
	n ()Lnet/minecraft/core/SectionPosition; getRandomVillageSection
net/minecraft/world/entity/ai/goal/PathfinderGoalSwell net/minecraft/world/entity/ai/goal/SwellGoal
	a creeper
	b target
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalTame net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal
	a horse
	b speedModifier
	c posX
	d posY
	e posZ
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalTempt net/minecraft/world/entity/ai/goal/TemptGoal
	a mob
	b player
	c TEMP_TARGETING
	d targetingConditions
	e speedModifier
	f px
	g py
	h pz
	i pRotX
	j pRotY
	k calmDown
	l isRunning
	m items
	n canScare
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityLiving;)Z shouldFollow
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z canScare
	i ()Z isRunning
net/minecraft/world/entity/ai/goal/PathfinderGoalTradeWithPlayer net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal
	a mob
	a ()Z canUse
	c ()V start
	d ()V stop
net/minecraft/world/entity/ai/goal/PathfinderGoalUseItem net/minecraft/world/entity/ai/goal/UseItemGoal
	a mob
	b item
	c canUseSelector
	d finishUsingSound
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
net/minecraft/world/entity/ai/goal/PathfinderGoalWater net/minecraft/world/entity/ai/goal/TryFindWaterGoal
	a mob
	a ()Z canUse
	c ()V start
net/minecraft/world/entity/ai/goal/PathfinderGoalWaterJump net/minecraft/world/entity/ai/goal/DolphinJumpGoal
	a STEPS_TO_CHECK
	b dolphin
	c interval
	d breached
	P_ ()Z isInterruptable
	a ()Z canUse
	a (Lnet/minecraft/core/BlockPosition;III)Z waterIsClear
	b ()Z canContinueToUse
	b (Lnet/minecraft/core/BlockPosition;III)Z surfaceIsClear
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalWaterJumpAbstract net/minecraft/world/entity/ai/goal/JumpGoal
net/minecraft/world/entity/ai/goal/PathfinderGoalWrapped net/minecraft/world/entity/ai/goal/WrappedGoal
	a goal
	b priority
	c isRunning
	P_ ()Z isInterruptable
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	a (I)I adjustedTickDelay
	a (Ljava/util/EnumSet;)V setFlags
	a (Lnet/minecraft/world/entity/ai/goal/PathfinderGoalWrapped;)Z canBeReplacedBy
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z isRunning
	i ()I getPriority
	j ()Ljava/util/EnumSet; getFlags
	k ()Lnet/minecraft/world/entity/ai/goal/PathfinderGoal; getGoal
net/minecraft/world/entity/ai/goal/PathfinderGoalZombieAttack net/minecraft/world/entity/ai/goal/ZombieAttackGoal
	b zombie
	c raiseArmTicks
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/target/PathfinderGoalDefendVillage net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal
	a golem
	b potentialTarget
	c attackTargeting
	a ()Z canUse
	c ()V start
net/minecraft/world/entity/ai/goal/target/PathfinderGoalHurtByTarget net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal
	a HURT_BY_TARGETING
	b ALERT_RANGE_Y
	c alertSameType
	d timestamp
	i toIgnoreDamage
	j toIgnoreAlert
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityLiving;)V alertOther
	a ([Ljava/lang/Class;)Lnet/minecraft/world/entity/ai/goal/target/PathfinderGoalHurtByTarget; setAlertOthers
	c ()V start
	h ()V alertOthers
net/minecraft/world/entity/ai/goal/target/PathfinderGoalNearestAttackableTarget net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal
	a targetType
	b randomInterval
	c target
	d targetConditions
	i DEFAULT_RANDOM_INTERVAL
	a ()Z canUse
	a (D)Lnet/minecraft/world/phys/AxisAlignedBB; getTargetSearchArea
	a (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	c ()V start
	h ()V findTarget
net/minecraft/world/entity/ai/goal/target/PathfinderGoalNearestAttackableTargetWitch net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal
	i canAttack
	a ()Z canUse
	a (Z)V setCanAttack
net/minecraft/world/entity/ai/goal/target/PathfinderGoalNearestHealableRaider net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal
	i DEFAULT_COOLDOWN
	j cooldown
	a ()Z canUse
	c ()V start
	i ()I getCooldown
	k ()V decrementCooldown
net/minecraft/world/entity/ai/goal/target/PathfinderGoalOwnerHurtByTarget net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal
	a tameAnimal
	b ownerLastHurtBy
	c timestamp
	a ()Z canUse
	c ()V start
net/minecraft/world/entity/ai/goal/target/PathfinderGoalOwnerHurtTarget net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal
	a tameAnimal
	b ownerLastHurt
	c timestamp
	a ()Z canUse
	c ()V start
net/minecraft/world/entity/ai/goal/target/PathfinderGoalRandomTargetNonTamed net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal
	i tamableMob
	a ()Z canUse
	b ()Z canContinueToUse
net/minecraft/world/entity/ai/goal/target/PathfinderGoalTarget net/minecraft/world/entity/ai/goal/target/TargetGoal
	a EMPTY_REACH_CACHE
	b CAN_REACH_CACHE
	c CANT_REACH_CACHE
	d mustReach
	e mob
	f mustSee
	g targetMob
	h unseenMemoryTicks
	i reachCache
	j reachCacheTime
	k unseenTicks
	a (Lnet/minecraft/world/entity/EntityLiving;)Z canReach
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;)Z canAttack
	b ()Z canContinueToUse
	c ()V start
	c (I)Lnet/minecraft/world/entity/ai/goal/target/PathfinderGoalTarget; setUnseenMemoryTicks
	d ()V stop
	l ()D getFollowDistance
net/minecraft/world/entity/ai/goal/target/PathfinderGoalUniversalAngerReset net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal
	a ALERT_RANGE_Y
	b mob
	c alertOthersOfSameType
	d lastHurtByPlayerTimestamp
	a ()Z canUse
	c ()V start
	h ()Z wasHurtByPlayer
	i ()Ljava/util/List; getNearbyMobsOfSameType
net/minecraft/world/entity/ai/gossip/Reputation net/minecraft/world/entity/ai/gossip/GossipContainer
	a DISCARD_THRESHOLD
	b LOGGER
	c gossips
	a ()Ljava/util/Map; getGossipEntries
	a (II)I mergeValuesForTransfer
	a (Lcom/mojang/serialization/Dynamic;)V update
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/lang/Object; store
	a (Ljava/util/UUID;)Lbsd$a; getOrCreate
	a (Ljava/util/UUID;Ljava/util/function/Predicate;)I getReputation
	a (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/ReputationType;)V remove
	a (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/ReputationType;I)V add
	a (Lnet/minecraft/util/RandomSource;I)Ljava/util/Collection; selectGossipsForTransfer
	a (Lnet/minecraft/world/entity/ai/gossip/Reputation;Lnet/minecraft/util/RandomSource;I)V transferFrom
	a (Lnet/minecraft/world/entity/ai/gossip/ReputationType;)V remove
	a (Lnet/minecraft/world/entity/ai/gossip/ReputationType;II)I mergeValuesForAddition
	a (Lnet/minecraft/world/entity/ai/gossip/ReputationType;Ljava/util/function/DoublePredicate;)J getCountForType
	b ()V decay
	b (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/ReputationType;I)V remove
	c ()Ljava/util/stream/Stream; unpack
net/minecraft/world/entity/ai/gossip/ReputationType net/minecraft/world/entity/ai/gossip/GossipType
	a MAJOR_NEGATIVE
	b MINOR_NEGATIVE
	c MINOR_POSITIVE
	d MAJOR_POSITIVE
	e TRADING
	f REPUTATION_CHANGE_PER_EVENT
	g REPUTATION_CHANGE_PER_EVERLASTING_MEMORY
	h REPUTATION_CHANGE_PER_TRADE
	i id
	j weight
	k max
	l decayPerDay
	m decayPerTransfer
	n CODEC
	o $VALUES
	a ()[Lnet/minecraft/world/entity/ai/gossip/ReputationType; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/ai/memory/ExpirableMemory net/minecraft/world/entity/ai/memory/ExpirableValue
	a value
	b timeToLive
	a ()V tick
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/memory/ExpirableMemory; of
	a (Ljava/lang/Object;J)Lnet/minecraft/world/entity/ai/memory/ExpirableMemory; of
	b ()J getTimeToLive
	c ()Ljava/lang/Object; getValue
	d ()Z hasExpired
	e ()Z canExpire
net/minecraft/world/entity/ai/memory/MemoryTarget net/minecraft/world/entity/ai/memory/WalkTarget
	a target
	b speedModifier
	c closeEnoughDist
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorPosition; getTarget
	b ()F getSpeedModifier
	c ()I getCloseEnoughDist
net/minecraft/world/entity/ai/navigation/Navigation net/minecraft/world/entity/ai/navigation/GroundPathNavigation
	p avoidSun
	R_ ()V trimPath
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/world/level/pathfinder/Pathfinder; createPathFinder
	a (Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/world/level/pathfinder/PathType;)Z hasValidPathType
	b ()Lnet/minecraft/world/phys/Vec3D; getTempMobPos
	b (Z)V setCanOpenDoors
	c (Z)V setCanPassDoors
	d (Z)V setAvoidSun
	e ()Z canPassDoors
	e (Z)V setCanWalkOverFences
	f ()Z canOpenDoors
	s ()I getSurfaceY
net/minecraft/world/entity/ai/navigation/NavigationAbstract net/minecraft/world/entity/ai/navigation/PathNavigation
	a mob
	b level
	c path
	d speedModifier
	e tick
	f lastStuckCheck
	g lastStuckCheckPos
	h timeoutCachedNode
	i timeoutTimer
	j lastTimeoutCheck
	k timeoutLimit
	l maxDistanceToWaypoint
	m hasDelayedRecomputation
	n timeLastRecompute
	o nodeEvaluator
	p MAX_TIME_RECOMPUTE
	q STUCK_CHECK_INTERVAL
	r STUCK_THRESHOLD_DISTANCE_FACTOR
	s targetPos
	t reachRange
	u maxVisitedNodesMultiplier
	v pathFinder
	w isStuck
	R_ ()V trimPath
	a ()Z canUpdatePath
	a (D)V setSpeedModifier
	a (DDDD)Z moveTo
	a (DDDI)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (F)V setMaxVisitedNodesMultiplier
	a (I)Lnet/minecraft/world/level/pathfinder/Pathfinder; createPathFinder
	a (Ljava/util/Set;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Ljava/util/Set;IZI)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Ljava/util/Set;IZIF)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Ljava/util/stream/Stream;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/core/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/core/BlockPosition;II)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/world/entity/Entity;D)Z moveTo
	a (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Z)Z isClearForMovementBetween
	a (Lnet/minecraft/world/level/pathfinder/PathEntity;D)Z moveTo
	a (Lnet/minecraft/world/phys/Vec3D;)D getGroundY
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z canMoveDirectly
	a (Z)V setCanFloat
	b ()Lnet/minecraft/world/phys/Vec3D; getTempMobPos
	b (Lnet/minecraft/core/BlockPosition;)Z shouldRecomputePath
	b (Lnet/minecraft/world/level/pathfinder/PathType;)Z canCutCorner
	b (Lnet/minecraft/world/phys/Vec3D;)V doStuckDetection
	c ()V tick
	c (Lnet/minecraft/world/phys/Vec3D;)Z shouldTargetNextNodeInDirection
	e ()V timeoutPath
	f ()V resetStuckTimeout
	g ()V resetMaxVisitedNodesMultiplier
	h ()Lnet/minecraft/core/BlockPosition; getTargetPos
	i ()V recomputePath
	j ()Lnet/minecraft/world/level/pathfinder/PathEntity; getPath
	k ()V followThePath
	l ()Z isDone
	m ()Z isInProgress
	n ()V stop
	o ()Lnet/minecraft/world/level/pathfinder/PathfinderAbstract; getNodeEvaluator
	p ()Z canFloat
	q ()F getMaxDistanceToWaypoint
	r ()Z isStuck
net/minecraft/world/entity/ai/navigation/NavigationFlying net/minecraft/world/entity/ai/navigation/FlyingPathNavigation
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/world/level/pathfinder/Pathfinder; createPathFinder
	a (Lnet/minecraft/core/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z canMoveDirectly
	b ()Lnet/minecraft/world/phys/Vec3D; getTempMobPos
	b (Z)V setCanOpenDoors
	c ()V tick
	c (Z)V setCanPassDoors
	d ()Z canPassDoors
	e ()Z canOpenDoors
net/minecraft/world/entity/ai/navigation/NavigationGuardian net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation
	p allowBreaching
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/world/level/pathfinder/Pathfinder; createPathFinder
	a (Lnet/minecraft/core/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/world/phys/Vec3D;)D getGroundY
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z canMoveDirectly
	a (Z)V setCanFloat
	b ()Lnet/minecraft/world/phys/Vec3D; getTempMobPos
net/minecraft/world/entity/ai/navigation/NavigationSpider net/minecraft/world/entity/ai/navigation/WallClimberNavigation
	p pathToPosition
	a (Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/world/entity/Entity;D)Z moveTo
	a (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	c ()V tick
net/minecraft/world/entity/ai/sensing/EntitySenses net/minecraft/world/entity/ai/sensing/Sensing
	a mob
	b seen
	c unseen
	a ()V tick
	a (Lnet/minecraft/world/entity/Entity;)Z hasLineOfSight
net/minecraft/world/entity/ai/sensing/SensorAdult net/minecraft/world/entity/ai/sensing/AdultSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)V doTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/world/entity/EntityAgeable;Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities;)V setNearestVisibleAdult
net/minecraft/world/entity/ai/sensing/SensorDummy net/minecraft/world/entity/ai/sensing/DummySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
net/minecraft/world/entity/ai/sensing/SensorGolemLastSeen net/minecraft/world/entity/ai/sensing/GolemSensor
	a GOLEM_SCAN_RATE
	c MEMORY_TIME_TO_LIVE
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/world/entity/EntityLiving;)V checkForNearbyGolem
	b (Lnet/minecraft/world/entity/EntityLiving;)V golemDetected
net/minecraft/world/entity/ai/sensing/SensorHoglinSpecific net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)V doTick
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Ljava/util/Optional; findNearestRepellent
net/minecraft/world/entity/ai/sensing/SensorHurtBy net/minecraft/world/entity/ai/sensing/HurtBySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
net/minecraft/world/entity/ai/sensing/SensorNearestBed net/minecraft/world/entity/ai/sensing/NearestBedSensor
	a CACHE_TIMEOUT
	c BATCH_SIZE
	d RATE
	e batchCache
	f triedCount
	g lastUpdate
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)V doTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
net/minecraft/world/entity/ai/sensing/SensorNearestItems net/minecraft/world/entity/ai/sensing/NearestItemSensor
	a MAX_DISTANCE_TO_WANTED_ITEM
	c XZ_RANGE
	d Y_RANGE
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)V doTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
net/minecraft/world/entity/ai/sensing/SensorNearestLivingEntities net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	b ()I radiusXZ
	c ()I radiusY
net/minecraft/world/entity/ai/sensing/SensorNearestPlayers net/minecraft/world/entity/ai/sensing/PlayerSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
net/minecraft/world/entity/ai/sensing/SensorPiglinBruteSpecific net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
net/minecraft/world/entity/ai/sensing/SensorPiglinSpecific net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z isValidRepellent
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; findNearestRepellent
net/minecraft/world/entity/ai/sensing/SensorSecondaryPlaces net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor
	a SCAN_RATE
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)V doTick
net/minecraft/world/entity/ai/sensing/SensorVillagerBabies net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/List; getNearestVillagerBabies
	b (Lnet/minecraft/world/entity/EntityLiving;)Z isVillagerBaby
	c (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities; getVisibleEntities
net/minecraft/world/entity/ai/sensing/SensorVillagerHostiles net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor
	a ACCEPTABLE_DISTANCE_FROM_HOSTILES
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isMatchingEntity
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; getMemory
	b (Lnet/minecraft/world/entity/EntityLiving;)Z isHostile
	e (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isClose
net/minecraft/world/entity/ai/targeting/PathfinderTargetCondition net/minecraft/world/entity/ai/targeting/TargetingConditions
	a DEFAULT
	b MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET
	c isCombat
	d range
	e checkLineOfSight
	f testInvisible
	g selector
	a ()Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition; forCombat
	a (D)Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition; range
	a (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition; selector
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z test
	b ()Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition; forNonCombat
	c ()Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition; copy
	d ()Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition; ignoreLineOfSight
	e ()Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition; ignoreInvisibilityTesting
net/minecraft/world/entity/ai/util/PathfinderGoalUtil net/minecraft/world/entity/ai/util/GoalUtils
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityCreature;)Z isOutsideLimits
	a (Lnet/minecraft/world/entity/EntityCreature;I)Z mobRestricted
	a (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/core/BlockPosition;)Z isWater
	a (Lnet/minecraft/world/entity/EntityInsentient;)Z hasGroundPathNavigation
	a (Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract;Lnet/minecraft/core/BlockPosition;)Z isNotStable
	a (ZLnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/core/BlockPosition;)Z isRestricted
	b (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/core/BlockPosition;)Z hasMalus
	c (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/core/BlockPosition;)Z isSolid
net/minecraft/world/entity/ai/util/RandomPositionGenerator net/minecraft/world/entity/ai/util/RandomPos
	a RANDOM_POS_ATTEMPTS
	a (Ljava/util/function/Supplier;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3D; generateRandomPos
	a (Lnet/minecraft/core/BlockPosition;IILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPosition; moveUpToAboveSolid
	a (Lnet/minecraft/core/BlockPosition;ILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPosition; moveUpOutOfSolid
	a (Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/core/BlockPosition; generateRandomDirection
	a (Lnet/minecraft/util/RandomSource;IIIDDD)Lnet/minecraft/core/BlockPosition; generateRandomDirectionWithinRadians
	a (Lnet/minecraft/world/entity/EntityCreature;ILnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; generateRandomPosTowardDirection
	a (Lnet/minecraft/world/entity/EntityCreature;Ljava/util/function/Supplier;)Lnet/minecraft/world/phys/Vec3D; generateRandomPos
net/minecraft/world/entity/ai/village/ReputationEvent net/minecraft/world/entity/ai/village/ReputationEventType
	a ZOMBIE_VILLAGER_CURED
	b GOLEM_KILLED
	c VILLAGER_HURT
	d VILLAGER_KILLED
	e TRADE
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/village/ReputationEvent; register
net/minecraft/world/entity/ai/village/poi/VillagePlace net/minecraft/world/entity/ai/village/poi/PoiManager
	a MAX_VILLAGE_DISTANCE
	b VILLAGE_SECTION_SIZE
	d distanceTracker
	e loadedChunks
	a (J)V setDirty
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Lnet/minecraft/core/BlockPosition;I)Ljava/util/Optional; take
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/stream/Stream; findAll
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandom
	a (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)J getCountInRange
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInChunk
	a (Lnet/minecraft/core/BlockPosition;)V remove
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z exists
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/Holder;)V add
	a (Lnet/minecraft/core/SectionPosition;)I sectionsToVillage
	a (Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/chunk/ChunkSection;)V checkConsistencyWithBlocks
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPosition;)Z existsAtPosition
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;I)V ensureLoadedAndValid
	a (Lnet/minecraft/world/level/chunk/ChunkSection;)Z mayHavePoi
	a (Lnet/minecraft/world/level/chunk/ChunkSection;Lnet/minecraft/core/SectionPosition;Ljava/util/function/BiConsumer;)V updateFromSection
	b (J)V onSectionLoad
	b (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/stream/Stream; findAllWithType
	b (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInSquare
	b (Lnet/minecraft/core/BlockPosition;)Z release
	c (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/stream/Stream; findAllClosestFirstWithType
	c (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInRange
	c (Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; getType
	d (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/Optional; find
	d (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/Optional; findClosest
	d (Lnet/minecraft/core/BlockPosition;)I getFreeTickets
	e (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/Optional; findClosest
	e (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/Optional; findClosestWithType
	g (J)Z isVillageCenter
net/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy
	a HAS_SPACE
	b IS_OCCUPIED
	c ANY
	d test
	e $VALUES
	a ()Ljava/util/function/Predicate; getTest
	b ()[Lnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy; $values
net/minecraft/world/entity/ai/village/poi/VillagePlaceRecord net/minecraft/world/entity/ai/village/poi/PoiRecord
	a pos
	b poiType
	c freeTickets
	d setDirty
	a ()I getFreeTickets
	a (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; codec
	b ()Z acquireTicket
	c ()Z releaseTicket
	d ()Z hasSpace
	e ()Z isOccupied
	f ()Lnet/minecraft/core/BlockPosition; getPos
	g ()Lnet/minecraft/core/Holder; getPoiType
net/minecraft/world/entity/ai/village/poi/VillagePlaceSection net/minecraft/world/entity/ai/village/poi/PoiSection
	a LOGGER
	b records
	c byType
	d setDirty
	e isValid
	a ()Z isValid
	a (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/util/function/Consumer;)V refresh
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getRecords
	a (Lnet/minecraft/core/BlockPosition;)V remove
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z exists
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/Holder;)V add
	a (Lnet/minecraft/world/entity/ai/village/poi/VillagePlaceRecord;)Z add
	b ()V clear
	b (Lnet/minecraft/core/BlockPosition;)I getFreeTickets
	c (Lnet/minecraft/core/BlockPosition;)Z release
	d (Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; getType
	e (Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; getPoiRecord
net/minecraft/world/entity/ai/village/poi/VillagePlaceType net/minecraft/world/entity/ai/village/poi/PoiType
	a NONE
	b matchingStates
	c maxTickets
	d validRange
	a ()Ljava/util/Set; matchingStates
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z is
	b ()I maxTickets
	c ()I validRange
net/minecraft/world/entity/ambient/EntityAmbient net/minecraft/world/entity/ambient/AmbientCreature
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
net/minecraft/world/entity/ambient/EntityBat net/minecraft/world/entity/ambient/Bat
	b FLAP_DEGREES_PER_TICK
	bS BAT_RESTING_TARGETING
	bT targetPosition
	c TICKS_PER_FLAP
	d DATA_ID_FLAGS
	e FLAG_RESTING
	D (Lnet/minecraft/world/entity/Entity;)V doPush
	X ()V customServerAiStep
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	aR ()Z isFlapping
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkBatSpawnRules
	bs ()Z isPushable
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eV ()F getSoundVolume
	eW ()F getVoicePitch
	fh ()V pushEntities
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	p_ ()Z isIgnoringBlockTriggers
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Z isResting
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setResting
	y ()Z isHalloween
net/minecraft/world/entity/animal/EntityAnimal net/minecraft/world/entity/animal/Animal
	bT inLove
	bU loveCause
	bV PARENT_AGE_AFTER_BREEDING
	O ()I getAmbientSoundInterval
	X ()V customServerAiStep
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;)V spawnChildFromBreeding
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;Lnet/minecraft/world/entity/EntityAgeable;)V finalizeSpawnChildFromBreeding
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)Z isBrightEnoughToSpawn
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkAnimalSpawnRules
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	ed ()I getExperienceReward
	g (Lnet/minecraft/world/entity/player/EntityHuman;)V setInLove
	ge ()Z canFallInLove
	gf ()I getInLoveTime
	gg ()Lnet/minecraft/server/level/EntityPlayer; getLoveCause
	gh ()Z isInLove
	gi ()V resetLove
	h (D)Z removeWhenFarAway
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s (I)V setInLoveTime
net/minecraft/world/entity/animal/EntityBee net/minecraft/world/entity/animal/Bee
	bT FLAP_DEGREES_PER_TICK
	bU TICKS_PER_FLAP
	bW TAG_CROPS_GROWN_SINCE_POLLINATION
	bX TAG_CANNOT_ENTER_HIVE_TICKS
	bY TAG_TICKS_SINCE_POLLINATION
	bZ TAG_HAS_STUNG
	cA numCropsGrownSincePollination
	cB COOLDOWN_BEFORE_LOCATING_NEW_HIVE
	cC remainingCooldownBeforeLocatingNewHive
	cD COOLDOWN_BEFORE_LOCATING_NEW_FLOWER
	cE remainingCooldownBeforeLocatingNewFlower
	cF savedFlowerPos
	cG hivePos
	cH beePollinateGoal
	cI goToHiveGoal
	cJ goToKnownFlowerGoal
	cK underWaterTicks
	ca TAG_HAS_NECTAR
	cb TAG_FLOWER_POS
	cc TAG_HIVE_POS
	cd DATA_FLAGS_ID
	ce DATA_REMAINING_ANGER_TIME
	cf FLAG_ROLL
	cg FLAG_HAS_STUNG
	ch FLAG_HAS_NECTAR
	ci STING_DEATH_COUNTDOWN
	cj TICKS_BEFORE_GOING_TO_KNOWN_FLOWER
	ck TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME
	cl MIN_ATTACK_DIST
	cm MAX_CROPS_GROWABLE
	cn POISON_SECONDS_NORMAL
	co POISON_SECONDS_HARD
	cp TOO_FAR_DISTANCE
	cq HIVE_CLOSE_ENOUGH_DISTANCE
	cr PATHFIND_TO_HIVE_WHEN_CLOSER_THAN
	cs HIVE_SEARCH_DISTANCE
	ct PERSISTENT_ANGER_TIME
	cu persistentAngerTarget
	cv rollAmount
	cw rollAmountO
	cx timeSinceSting
	cy ticksWithoutNectarSinceExitingHive
	cz stayOutOfHiveCountdown
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	E (F)F getRollAmount
	W ()V sendDebugPackets
	X ()V customServerAiStep
	a ()I getRemainingPersistentAngerTime
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (I)V setRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/level/World;DDDDDLnet/minecraft/core/particles/ParticleParam;)V spawnFluidParticle
	aR ()Z isFlapping
	a_ ()V defineSynchedData
	b ()Ljava/util/UUID; getPersistentAngerTarget
	b (Lnet/minecraft/core/BlockPosition;I)Z closerThan
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityBee; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	b_ ()V aiStep
	c ()V startPersistentAngerTimer
	c (Lnet/minecraft/tags/TagKey;)V jumpInLiquid
	cI ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (IZ)V setFlag
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	eV ()F getSoundVolume
	gA ()Z isRolling
	gd ()Ljava/util/List; getBlacklistedHives
	gj ()V resetTicksWithoutNectarSinceExitingHive
	gk ()Z hasHive
	gl ()Lnet/minecraft/core/BlockPosition; getHivePos
	gm ()Lnet/minecraft/world/entity/ai/goal/PathfinderGoalSelector; getGoalSelector
	gn ()Z hasNectar
	go ()Z hasStung
	gp ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	gq ()Z isFlying
	gr ()V dropOffNectar
	gs ()Z isTiredOfLookingForNectar
	gt ()Z wantsToEnterHive
	gu ()V updateRollAmount
	gv ()Z isHiveNearFire
	gw ()I getCropsGrownSincePollination
	gx ()V resetNumCropsGrownSincePollination
	gy ()V incrementNumCropsGrownSincePollination
	gz ()Z isHiveValid
	i (Lnet/minecraft/core/BlockPosition;)V setSavedFlowerPos
	j (Lnet/minecraft/core/BlockPosition;)V pathfindRandomlyTowards
	k (Lnet/minecraft/core/BlockPosition;)Z doesHiveHaveSpace
	l ()V tick
	l (Lnet/minecraft/core/BlockPosition;)Z isTooFarAway
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/core/BlockPosition;)Z isFlowerValid
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s ()Lnet/minecraft/core/BlockPosition; getSavedFlowerPos
	t ()Z hasSavedFlowerPos
	t (I)V setStayOutOfHiveCountdown
	u (I)Z getFlag
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setHasNectar
	x (Z)V setHasStung
	y ()I getTravellingTicks
	y (Z)V setRolling
	z ()V registerGoals
net/minecraft/world/entity/animal/EntityBird net/minecraft/world/entity/animal/FlyingAnimal
	gq ()Z isFlying
net/minecraft/world/entity/animal/EntityCat net/minecraft/world/entity/animal/Cat
	bW TEMPT_SPEED_MOD
	bX WALK_SPEED_MOD
	bY SPRINT_SPEED_MOD
	bZ TEMPT_INGREDIENT
	ca DATA_VARIANT_ID
	cb IS_LYING
	cc RELAX_STATE_ONE
	cd DATA_COLLAR_COLOR
	ce avoidPlayersGoal
	cf temptGoal
	cg lieDownAmount
	ch lieDownAmountO
	ci lieDownAmountTail
	cj lieDownAmountOTail
	ck relaxStateOneAmount
	cl relaxStateOneAmountO
	A (Z)V setLying
	B (Z)V setRelaxStateOne
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	E (F)F getLieDownAmount
	F (F)F getLieDownAmountTail
	G (F)F getRelaxStateOneAmount
	O ()I getAmbientSoundInterval
	X ()V customServerAiStep
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/animal/CatVariant;)V setVariant
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/world/item/EnumColor;)V setCollarColor
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityCat; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	bS ()Z isSteppingCarefully
	c ()Ljava/lang/Object; getVariant
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	gj ()Lnet/minecraft/resources/MinecraftKey; getResourceLocation
	gk ()Lnet/minecraft/world/entity/animal/CatVariant; getVariant
	gl ()Z isLying
	gm ()Z isRelaxStateOne
	gn ()Lnet/minecraft/world/item/EnumColor; getCollarColor
	go ()V hiss
	gp ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	gq ()F getAttackDamage
	gr ()V handleLieDown
	gs ()V updateLieDownAmount
	gt ()V updateRelaxStateOneAmount
	h (D)Z removeWhenFarAway
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	t ()V reassessTameGoals
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	z ()V registerGoals
net/minecraft/world/entity/animal/EntityCat$PathfinderGoalTemptChance net/minecraft/world/entity/animal/Cat$CatTemptGoal
	c selectedPlayer
	d cat
	a ()Z canUse
	e ()V tick
	h ()Z canScare
net/minecraft/world/entity/animal/EntityChicken net/minecraft/world/entity/animal/Chicken
	bT flap
	bU flapSpeed
	bW oFlapSpeed
	bX oFlap
	bY flapping
	bZ eggTime
	ca isChickenJockey
	cb FOOD_ITEMS
	cc nextFlap
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V positionRider
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	aQ ()V onFlap
	aR ()Z isFlapping
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityChicken; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	ed ()I getExperienceReward
	h (D)Z removeWhenFarAway
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Z isChickenJockey
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setChickenJockey
	z ()V registerGoals
net/minecraft/world/entity/animal/EntityCod net/minecraft/world/entity/animal/Cod
	b ()Lnet/minecraft/world/item/ItemStack; getBucketItemStack
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	ge ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
net/minecraft/world/entity/animal/EntityCow net/minecraft/world/entity/animal/Cow
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityCow; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eV ()F getSoundVolume
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	z ()V registerGoals
net/minecraft/world/entity/animal/EntityDolphin net/minecraft/world/entity/animal/Dolphin
	b TOTAL_AIR_SUPPLY
	bT MOISTNESS_LEVEL
	bU SWIM_WITH_PLAYER_TARGETING
	bV TOTAL_MOISTNESS_LEVEL
	c ALLOWED_ITEMS
	d TREASURE_POS
	e GOT_FISH
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	Y ()I getMaxHeadXRot
	Z ()I getMaxHeadYRot
	a (Lnet/minecraft/core/particles/ParticleParam;)V addParticlesAroundSelf
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aL ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	aM ()Lnet/minecraft/sounds/SoundEffect; getSwimSplashSound
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (I)V handleAirSupply
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	c (I)V setMoisntessLevel
	cg ()I getMaxAirSupply
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dQ ()Z canBreatheUnderwater
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	gd ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	ge ()Z closeToNextPos
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	i (Lnet/minecraft/core/BlockPosition;)V setTreasurePos
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	n (I)I increaseAirSupply
	o (Lnet/minecraft/world/entity/Entity;)Z canRide
	s ()Lnet/minecraft/core/BlockPosition; getTreasurePos
	t ()Z gotFish
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setGotFish
	y ()I getMoistnessLevel
	z ()V registerGoals
net/minecraft/world/entity/animal/EntityFish net/minecraft/world/entity/animal/AbstractFish
	b FROM_BUCKET
	U ()Z requiresCustomPersistence
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	aL ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	b_ ()V aiStep
	c (Lnet/minecraft/nbt/NBTTagCompound;)V loadFromBucketTag
	fH ()I getMaxSpawnClusterSize
	gd ()Z canRandomSwim
	ge ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	h (D)Z removeWhenFarAway
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	l (Lnet/minecraft/world/item/ItemStack;)V saveToBucketTag
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Z fromBucket
	w (Z)V setFromBucket
	y ()Lnet/minecraft/sounds/SoundEffect; getPickupSound
	z ()V registerGoals
net/minecraft/world/entity/animal/EntityFishSchool net/minecraft/world/entity/animal/AbstractSchoolingFish
	b leader
	c schoolSize
	a (Ljava/util/stream/Stream;)V addFollowers
	a (Lnet/minecraft/world/entity/animal/EntityFishSchool;)Lnet/minecraft/world/entity/animal/EntityFishSchool; startFollowing
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	fH ()I getMaxSpawnClusterSize
	gd ()Z canRandomSwim
	gf ()I getMaxSchoolSize
	gg ()Z isFollower
	gh ()V stopFollowing
	gi ()Z canBeFollowed
	gj ()Z hasFollowers
	gk ()Z inRangeOfLeader
	gl ()V pathToLeader
	gm ()V addFollower
	gn ()V removeFollower
	l ()V tick
	z ()V registerGoals
net/minecraft/world/entity/animal/EntityFox net/minecraft/world/entity/animal/Fox
	bT FLAG_CROUCHING
	bU FLAG_INTERESTED
	bW FLAG_POUNCING
	bX DATA_TYPE_ID
	bY DATA_FLAGS_ID
	bZ FLAG_SITTING
	ca FLAG_SLEEPING
	cb FLAG_FACEPLANTED
	cc FLAG_DEFENDING
	cd DATA_TRUSTED_ID_0
	ce DATA_TRUSTED_ID_1
	cf ALLOWED_ITEMS
	cg TRUSTED_TARGET_SELECTOR
	ch STALKABLE_PREY
	ci AVOID_PLAYERS
	cj MIN_TICKS_BEFORE_EAT
	ck landTargetGoal
	cl turtleEggTargetGoal
	cm fishTargetGoal
	cn interestedAngle
	co interestedAngleO
	cp crouchAmount
	cq crouchAmountO
	cr ticksSinceEaten
	A (Z)V setFaceplanted
	B (Z)V setDefending
	C (Z)V setSleeping
	E (F)F getHeadRollAngle
	F (F)F getCrouchAmount
	P ()V playAmbientSound
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/animal/EntityFox$Type;)V setVariant
	a (Lnet/minecraft/world/entity/animal/EntityFox;Lnet/minecraft/world/entity/EntityLiving;)Z isPathClear
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityInsentient;)V onOffspringSpawnedFromEgg
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Ljava/util/UUID;)V addTrustedUUID
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityFox; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	bW ()Z isCrouching
	b_ ()V aiStep
	c ()Ljava/lang/Object; getVariant
	c (Ljava/util/UUID;)Z trusts
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkFoxSpawnRules
	cI ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (FF)I calculateFallDamage
	d (IZ)V setFlag
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	d (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEffect; getEatingSound
	eX ()Z isImmobile
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fC ()Z isSleeping
	g (Lnet/minecraft/world/damagesource/DamageSource;)V dropAllDeathLoot
	gd ()Z isFaceplanted
	gj ()Z isPouncing
	gk ()Z isJumping
	gl ()Z isFullyCrouched
	gm ()Z isInterested
	gn ()V setTargetGoals
	go ()Ljava/util/List; getTrustedUUIDs
	gp ()Z isDefending
	gq ()V wakeUp
	gr ()V clearStates
	gs ()Z canMove
	h (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	j (Lnet/minecraft/world/item/ItemStack;)Z canHoldItem
	l ()V tick
	l (Lnet/minecraft/world/item/ItemStack;)Z canEat
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	n (Lnet/minecraft/world/item/ItemStack;)V spitOutItem
	o (Lnet/minecraft/world/item/ItemStack;)V dropItemStack
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Lnet/minecraft/world/entity/animal/EntityFox$Type; getVariant
	t (I)Z getFlag
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setSitting
	x (Z)V setIsPouncing
	y ()Z isSitting
	y (Z)V setIsCrouching
	z ()V registerGoals
	z (Z)V setIsInterested
net/minecraft/world/entity/animal/EntityFox$Type net/minecraft/world/entity/animal/Fox$Type
	a RED
	b SNOW
	c CODEC
	d BY_ID
	e id
	f name
	g $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/animal/EntityFox$Type; byId
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/EntityFox$Type; byName
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/animal/EntityFox$Type; byBiome
	b ()[Lnet/minecraft/world/entity/animal/EntityFox$Type; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/animal/EntityGolem net/minecraft/world/entity/animal/AbstractGolem
	O ()I getAmbientSoundInterval
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	h (D)Z removeWhenFarAway
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
net/minecraft/world/entity/animal/EntityIronGolem net/minecraft/world/entity/animal/IronGolem
	bT offerFlowerTick
	bU PERSISTENT_ANGER_TIME
	bV remainingPersistentAngerTime
	bW persistentAngerTarget
	c DATA_FLAGS_ID
	d IRON_INGOT_HEAL_AMOUNT
	e attackAnimationTick
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	D (Lnet/minecraft/world/entity/Entity;)V doPush
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a_ ()V defineSynchedData
	b ()Ljava/util/UUID; getPersistentAngerTarget
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	bj ()Z canSpawnSprintParticle
	c ()V startPersistentAngerTimer
	cI ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	gd ()I getOfferFlowerTick
	ge ()Z isPlayerCreated
	gf ()F getAttackDamage
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (I)I decreaseAirSupply
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Lnet/minecraft/world/entity/animal/EntityIronGolem$CrackLevel; getCrackiness
	w (Z)V offerFlower
	x (Z)V setPlayerCreated
	y ()I getAttackAnimationTick
	z ()V registerGoals
net/minecraft/world/entity/animal/EntityIronGolem$CrackLevel net/minecraft/world/entity/animal/IronGolem$Crackiness
	a NONE
	b LOW
	c MEDIUM
	d HIGH
	e BY_DAMAGE
	f fraction
	g $VALUES
	a ()[Lnet/minecraft/world/entity/animal/EntityIronGolem$CrackLevel; $values
	a (F)Lnet/minecraft/world/entity/animal/EntityIronGolem$CrackLevel; byFraction
net/minecraft/world/entity/animal/EntityMushroomCow net/minecraft/world/entity/animal/MushroomCow
	bT DATA_TYPE
	bU MUTATE_CHANCE
	bW TAG_STEW_EFFECTS
	bX stewEffects
	bY lastLightningBoltUUID
	a ()Z readyForShearing
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/sounds/SoundCategory;)V shear
	a (Lnet/minecraft/world/entity/animal/EntityMushroomCow$Type;)V setVariant
	a (Lnet/minecraft/world/entity/animal/EntityMushroomCow;)Lnet/minecraft/world/entity/animal/EntityMushroomCow$Type; getOffspringType
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityCow; getBreedOffspring
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	c ()Ljava/lang/Object; getVariant
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityMushroomCow; getBreedOffspring
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkMushroomSpawnRules
	l (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getEffectsFromItemStack
	t ()Lnet/minecraft/world/entity/animal/EntityMushroomCow$Type; getVariant
net/minecraft/world/entity/animal/EntityMushroomCow$Type net/minecraft/world/entity/animal/MushroomCow$MushroomType
	a RED
	b BROWN
	c CODEC
	d type
	e blockState
	f $VALUES
	a ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/EntityMushroomCow$Type; byType
	b ()[Lnet/minecraft/world/entity/animal/EntityMushroomCow$Type; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/animal/EntityOcelot net/minecraft/world/entity/animal/Ocelot
	bT CROUCH_SPEED_MOD
	bU WALK_SPEED_MOD
	bW SPRINT_SPEED_MOD
	bX TEMPT_INGREDIENT
	bY DATA_TRUSTING
	bZ ocelotAvoidPlayersGoal
	ca temptGoal
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	O ()I getAmbientSoundInterval
	X ()V customServerAiStep
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityOcelot; getBreedOffspring
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	bS ()Z isSteppingCarefully
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkOcelotSpawnRules
	cI ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	gd ()F getAttackDamage
	h (D)Z removeWhenFarAway
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()V reassessTrustingGoals
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setTrusting
	x (Z)V spawnTrustingParticles
	y ()Z isTrusting
	z ()V registerGoals
net/minecraft/world/entity/animal/EntityPanda net/minecraft/world/entity/animal/Panda
	bT TOTAL_ROLL_STEPS
	bU rollCounter
	bW UNHAPPY_COUNTER
	bX SNEEZE_COUNTER
	bY EAT_COUNTER
	bZ MAIN_GENE_ID
	ca HIDDEN_GENE_ID
	cb DATA_ID_FLAGS
	cc BREED_TARGETING
	cd FLAG_SNEEZE
	ce FLAG_ROLL
	cf FLAG_SIT
	cg FLAG_ON_BACK
	ch EAT_TICK_INTERVAL
	ci TOTAL_UNHAPPY_TIME
	cj gotBamboo
	ck didBite
	cl rollDelta
	cm sitAmount
	cn sitAmountO
	co onBackAmount
	cp onBackAmountO
	cq rollAmount
	cr rollAmountO
	cs lookAtPlayerGoal
	ct PANDA_ITEMS
	A (Z)V roll
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	E (F)F getSitAmount
	F (F)F getLieOnBackAmount
	G (F)F getRollAmount
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/animal/EntityPanda$Gene;)V setMainGene
	a (Lnet/minecraft/world/entity/animal/EntityPanda;Lnet/minecraft/world/entity/animal/EntityPanda;)V setGeneFromParents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/animal/EntityPanda$Gene;)V setHiddenGene
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	d (IZ)V setFlag
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fV ()Z isAggressive
	gA ()V addEatingParticles
	gB ()V updateSitAmount
	gC ()V updateOnBackAnimation
	gD ()V updateRollAmount
	gE ()V handleRoll
	gF ()V afterSneeze
	gG ()Lnet/minecraft/world/entity/animal/EntityPanda$Gene; getOneOfGenesRandomly
	gH ()V tryToSit
	gd ()Z isOnBack
	gj ()Z isEating
	gk ()I getSneezeCounter
	gl ()Lnet/minecraft/world/entity/animal/EntityPanda$Gene; getMainGene
	gm ()Lnet/minecraft/world/entity/animal/EntityPanda$Gene; getHiddenGene
	gn ()Z isRolling
	go ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	gp ()Lnet/minecraft/world/entity/animal/EntityPanda$Gene; getVariant
	gq ()Z isLazy
	gr ()Z isWorried
	gs ()Z isPlayful
	gt ()Z isBrown
	gu ()Z isWeak
	gv ()Z isScared
	gw ()V setAttributes
	gx ()Z canPerformAction
	gy ()I getEatCounter
	gz ()V handleEating
	l ()V tick
	l (Lnet/minecraft/world/item/ItemStack;)Z isFoodOrCake
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s ()I getUnhappyCounter
	t ()Z isSneezing
	t (I)V setUnhappyCounter
	u (I)V setSneezeCounter
	v (I)V setEatCounter
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (I)Z getFlag
	w (Z)V sit
	x (Z)V setOnBack
	y ()Z isSitting
	y (Z)V eat
	z ()V registerGoals
	z (Z)V sneeze
net/minecraft/world/entity/animal/EntityPanda$Gene net/minecraft/world/entity/animal/Panda$Gene
	a NORMAL
	b LAZY
	c WORRIED
	d PLAYFUL
	e BROWN
	f WEAK
	g AGGRESSIVE
	h CODEC
	i BY_ID
	j MAX_GENE
	k id
	l name
	m isRecessive
	n $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/animal/EntityPanda$Gene; byId
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/EntityPanda$Gene; byName
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/EntityPanda$Gene; getRandom
	a (Lnet/minecraft/world/entity/animal/EntityPanda$Gene;Lnet/minecraft/world/entity/animal/EntityPanda$Gene;)Lnet/minecraft/world/entity/animal/EntityPanda$Gene; getVariantFromGenes
	b ()Z isRecessive
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/entity/animal/EntityPanda$Gene; $values
net/minecraft/world/entity/animal/EntityParrot net/minecraft/world/entity/animal/Parrot
	bW flap
	bX flapSpeed
	bY oFlapSpeed
	bZ oFlap
	ca DATA_VARIANT_ID
	cb NOT_PARROT_PREDICATE
	cc POISONOUS_FOOD
	cd TAME_FOOD
	ce MOB_SOUND_MAP
	cf flapping
	cg nextFlap
	ch partyParrot
	ci jukebox
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	D (Lnet/minecraft/world/entity/Entity;)V doPush
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/core/BlockPosition;Z)V setRecordPlayingNearby
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/util/RandomSource;)F getPitch
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/animal/EntityParrot$Variant;)V setVariant
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/sounds/SoundEffect; getAmbient
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;)Z imitateNearbyMobs
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aQ ()V onFlap
	aR ()Z isFlapping
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/sounds/SoundEffect; getImitatedSound
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	b_ ()V aiStep
	bs ()Z isPushable
	c ()Ljava/lang/Object; getVariant
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkParrotSpawnRules
	cI ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	eW ()F getVoicePitch
	gj ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	gk ()Z isPartyParrot
	gl ()Lnet/minecraft/world/entity/animal/EntityParrot$Variant; getVariant
	gn ()V calculateFlapping
	gq ()Z isFlying
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	m_ ()Z isBaby
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	z ()V registerGoals
net/minecraft/world/entity/animal/EntityParrot$Variant net/minecraft/world/entity/animal/Parrot$Variant
	a RED_BLUE
	b BLUE
	c GREEN
	d YELLOW_BLUE
	e GRAY
	f CODEC
	g BY_ID
	h id
	i name
	j $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/animal/EntityParrot$Variant; byId
	b ()[Lnet/minecraft/world/entity/animal/EntityParrot$Variant; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/animal/EntityPerchable net/minecraft/world/entity/animal/ShoulderRidingEntity
	bW RIDE_COOLDOWN
	bX rideCooldownCounter
	b (Lnet/minecraft/server/level/EntityPlayer;)Z setEntityOnShoulder
	gm ()Z canSitOnShoulder
	l ()V tick
net/minecraft/world/entity/animal/EntityPig net/minecraft/world/entity/animal/Pig
	bT DATA_SADDLE_ID
	bU DATA_BOOST_TIME
	bW FOOD_ITEMS
	bX steering
	a ()Z boost
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/sounds/SoundCategory;)V equipSaddle
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;)V tickRidden
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityPig; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getRiddenInput
	cI ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	cN ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	e (Lnet/minecraft/world/entity/player/EntityHuman;)F getRiddenSpeed
	ex ()V dropEquipment
	g ()Z isSaddleable
	i ()Z isSaddled
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	z ()V registerGoals
net/minecraft/world/entity/animal/EntityPolarBear net/minecraft/world/entity/animal/PolarBear
	bT DATA_STANDING_ID
	bU STAND_ANIMATION_TICKS
	bW clientSideStandAnimationO
	bX clientSideStandAnimation
	bY warningSoundTicks
	bZ PERSISTENT_ANGER_TIME
	ca remainingPersistentAngerTime
	cb persistentAngerTarget
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	E (F)F getStandingAnimationScale
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b ()Ljava/util/UUID; getPersistentAngerTarget
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c ()V startPersistentAngerTimer
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkPolarBearSpawnRules
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fc ()F getWaterSlowDown
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()V playWarningSound
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setStanding
	y ()Z isStanding
	z ()V registerGoals
net/minecraft/world/entity/animal/EntityPufferFish net/minecraft/world/entity/animal/Pufferfish
	b STATE_SMALL
	bT inflateCounter
	bU deflateTimer
	bV SCARY_MOB
	bW targetingConditions
	c STATE_MID
	d STATE_FULL
	e PUFF_STATE
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/EntityInsentient;)V touch
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a_ ()V defineSynchedData
	b ()Lnet/minecraft/world/item/ItemStack; getBucketItemStack
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b_ ()V aiStep
	b_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerTouch
	c (I)V setPuffState
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	ge ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	gf ()I getPuffState
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s (I)F getScale
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	z ()V registerGoals
net/minecraft/world/entity/animal/EntityRabbit net/minecraft/world/entity/animal/Rabbit
	bT STROLL_SPEED_MOD
	bU BREED_SPEED_MOD
	bW FOLLOW_SPEED_MOD
	bX FLEE_SPEED_MOD
	bY ATTACK_SPEED_MOD
	bZ EVIL_ATTACK_POWER
	ca EVIL_ARMOR_VALUE
	cb DATA_TYPE_ID
	cc KILLER_BUNNY
	cd MORE_CARROTS_DELAY
	ce jumpTicks
	cf jumpDuration
	cg wasOnGround
	ch jumpDelayTicks
	ci moreCarrotTicks
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	E (F)F getJumpCompletion
	X ()V customServerAiStep
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/animal/EntityRabbit$Variant;)V setVariant
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/animal/EntityRabbit$Variant; getRandomRabbitVariant
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityRabbit; getBreedOffspring
	b_ ()V aiStep
	bj ()Z canSpawnSprintParticle
	c ()Ljava/lang/Object; getVariant
	c (DD)V facePoint
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkRabbitSpawnRules
	cI ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	eY ()F getJumpPower
	fa ()V jumpFromGround
	gd ()Lnet/minecraft/world/entity/animal/EntityRabbit$Variant; getVariant
	gj ()V enableJumpControl
	gk ()V disableJumpControl
	gl ()V setLandingDelay
	gm ()V checkLandingDelay
	gn ()Z wantsMoreFood
	i (D)V setSpeedModifier
	l (Lnet/minecraft/world/item/ItemStack;)Z isTemptingItem
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	r (Z)V setJumping
	s ()V startJumping
	t ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()Lnet/minecraft/sounds/SoundEffect; getJumpSound
	z ()V registerGoals
net/minecraft/world/entity/animal/EntityRabbit$ControllerJumpRabbit net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl
	b rabbit
	c canJump
	a (Z)V setCanJump
	b ()V tick
	c ()Z wantJump
	d ()Z canJump
net/minecraft/world/entity/animal/EntityRabbit$ControllerMoveRabbit net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl
	l rabbit
	m nextJumpSpeed
	a ()V tick
	a (DDDD)V setWantedPosition
net/minecraft/world/entity/animal/EntityRabbit$GroupDataRabbit net/minecraft/world/entity/animal/Rabbit$RabbitGroupData
	a variant
net/minecraft/world/entity/animal/EntityRabbit$PathfinderGoalEatCarrots net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal
	g rabbit
	h wantsToRaid
	i canRaid
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	e ()V tick
net/minecraft/world/entity/animal/EntityRabbit$PathfinderGoalRabbitAvoidTarget net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal
	i rabbit
	a ()Z canUse
net/minecraft/world/entity/animal/EntityRabbit$PathfinderGoalRabbitPanic net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal
	h rabbit
	e ()V tick
net/minecraft/world/entity/animal/EntityRabbit$Variant net/minecraft/world/entity/animal/Rabbit$Variant
	a BROWN
	b WHITE
	c BLACK
	d WHITE_SPLOTCHED
	e GOLD
	f SALT
	g EVIL
	h CODEC
	i BY_ID
	j id
	k name
	l $VALUES
	a ()I id
	a (I)Lnet/minecraft/world/entity/animal/EntityRabbit$Variant; byId
	b ()[Lnet/minecraft/world/entity/animal/EntityRabbit$Variant; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/animal/EntitySalmon net/minecraft/world/entity/animal/Salmon
	b ()Lnet/minecraft/world/item/ItemStack; getBucketItemStack
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	ge ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	gf ()I getMaxSchoolSize
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
net/minecraft/world/entity/animal/EntitySheep net/minecraft/world/entity/animal/Sheep
	bT EAT_ANIMATION_TICKS
	bU DATA_WOOL_ID
	bW ITEM_BY_DYE
	bX COLORARRAY_BY_COLOR
	bY eatAnimationTick
	bZ eatBlockGoal
	E (F)F getHeadEatPositionScale
	F (F)F getHeadEatAngleScale
	N ()V ate
	S ()Lnet/minecraft/resources/MinecraftKey; getDefaultLootTable
	X ()V customServerAiStep
	a ()Z readyForShearing
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/sounds/SoundCategory;)V shear
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/EnumColor; getRandomSheepColor
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;Lnet/minecraft/world/entity/animal/EntityAnimal;)Lnet/minecraft/world/item/EnumColor; getOffspringColor
	a (Lnet/minecraft/world/item/EnumColor;)[F getColorArray
	a (Lnet/minecraft/world/item/EnumColor;Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/inventory/InventoryCrafting; makeContainer
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntitySheep; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/item/EnumColor;)V setColor
	b_ ()V aiStep
	c (Lnet/minecraft/world/item/EnumColor;)[F createSheepColor
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Lnet/minecraft/world/item/EnumColor; getColor
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setSheared
	y ()Z isSheared
	z ()V registerGoals
net/minecraft/world/entity/animal/EntitySnowman net/minecraft/world/entity/animal/SnowGolem
	b DATA_PUMPKIN_ID
	c PUMPKIN_FLAG
	d EYE_HEIGHT
	a ()Z readyForShearing
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/sounds/SoundCategory;)V shear
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	cI ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	ff ()Z isSensitiveToWater
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Z hasPumpkin
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setPumpkin
	z ()V registerGoals
net/minecraft/world/entity/animal/EntitySquid net/minecraft/world/entity/animal/Squid
	b xBodyRot
	bT tentacleMovement
	bU oldTentacleMovement
	bV tentacleAngle
	bW oldTentacleAngle
	bX speed
	bY tentacleSpeed
	bZ rotateSpeed
	c xBodyRotO
	ca tx
	cb ty
	cc tz
	d zBodyRot
	e zBodyRotO
	a (FFF)V setMovementVector
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	b (B)V handleEntityEvent
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eV ()F getSoundVolume
	gd ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	ge ()Z hasMovementVector
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	j (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; rotateVector
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/core/particles/ParticleParam; getInkParticle
	t ()Lnet/minecraft/sounds/SoundEffect; getSquirtSound
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()V spawnInk
	z ()V registerGoals
net/minecraft/world/entity/animal/EntitySquid$PathfinderGoalSquid net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal
	b squid
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/animal/EntityTropicalFish net/minecraft/world/entity/animal/TropicalFish
	b BUCKET_VARIANT_TAG
	c COMMON_VARIANTS
	d DATA_ID_TYPE_VARIANT
	e isSchool
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/animal/EntityTropicalFish$Variant;)V setVariant
	a (Lnet/minecraft/world/entity/animal/EntityTropicalFish$Variant;Lnet/minecraft/world/item/EnumColor;Lnet/minecraft/world/item/EnumColor;)I packVariant
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b ()Lnet/minecraft/world/item/ItemStack; getBucketItemStack
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkTropicalFishSpawnRules
	c ()Ljava/lang/Object; getVariant
	c (I)Ljava/lang/String; getPredefinedName
	d (I)Z isMaxGroupSizeReached
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	ge ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	gm ()Lnet/minecraft/world/item/EnumColor; getBaseColor
	gn ()Lnet/minecraft/world/item/EnumColor; getPatternColor
	go ()Lnet/minecraft/world/entity/animal/EntityTropicalFish$Variant; getVariant
	gp ()I getPackedVariant
	l (Lnet/minecraft/world/item/ItemStack;)V saveToBucketTag
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s (I)Lnet/minecraft/world/item/EnumColor; getBaseColor
	t (I)Lnet/minecraft/world/item/EnumColor; getPatternColor
	u (I)Lnet/minecraft/world/entity/animal/EntityTropicalFish$Variant; getPattern
	v (I)V setPackedVariant
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
net/minecraft/world/entity/animal/EntityTropicalFish$Base net/minecraft/world/entity/animal/TropicalFish$Base
	a SMALL
	b LARGE
	c id
	d $VALUES
	a ()[Lnet/minecraft/world/entity/animal/EntityTropicalFish$Base; $values
net/minecraft/world/entity/animal/EntityTropicalFish$Variant net/minecraft/world/entity/animal/TropicalFish$Pattern
	a KOB
	b SUNSTREAK
	c SNOOPER
	d DASHER
	e BRINELY
	f SPOTTY
	g FLOPPER
	h STRIPEY
	i GLITTER
	j BLOCKFISH
	k BETTY
	l CLAYFISH
	m CODEC
	n BY_ID
	o name
	p displayName
	q base
	r packedId
	s $VALUES
	a ()Lnet/minecraft/world/entity/animal/EntityTropicalFish$Base; base
	a (I)Lnet/minecraft/world/entity/animal/EntityTropicalFish$Variant; byId
	b ()I getPackedId
	c ()Ljava/lang/String; getSerializedName
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; displayName
	e ()[Lnet/minecraft/world/entity/animal/EntityTropicalFish$Variant; $values
net/minecraft/world/entity/animal/EntityTurtle net/minecraft/world/entity/animal/Turtle
	bT FOOD_ITEMS
	bU BABY_ON_LAND_SELECTOR
	bW HOME_POS
	bX HAS_EGG
	bY LAYING_EGG
	bZ TRAVEL_POS
	ca GOING_HOME
	cb TRAVELLING
	cc layEggCounter
	O ()I getAmbientSoundInterval
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aK ()F nextStep
	aL ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	b_ ()V aiStep
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkTurtleSpawnRules
	cy ()Z isPushedByFluid
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dQ ()Z canBreatheUnderwater
	dY ()F getScale
	e (F)V playSwimSound
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	gd ()Lnet/minecraft/core/BlockPosition; getHomePos
	ge ()Z canFallInLove
	gj ()Lnet/minecraft/core/BlockPosition; getTravelPos
	gk ()Z isGoingHome
	gl ()Z isTravelling
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	i (Lnet/minecraft/core/BlockPosition;)V setHomePos
	j (Lnet/minecraft/core/BlockPosition;)V setTravelPos
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m ()V ageBoundaryReached
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s ()Z hasEgg
	t ()Z isLayingEgg
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setHasEgg
	x (Z)V setLayingEgg
	y ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	y (Z)V setGoingHome
	z ()V registerGoals
	z (Z)V setTravelling
net/minecraft/world/entity/animal/EntityWaterAnimal net/minecraft/world/entity/animal/WaterAnimal
	O ()I getAmbientSoundInterval
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	aq ()V baseTick
	b (I)V handleAirSupply
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkSurfaceWaterAnimalSpawnRules
	cy ()Z isPushedByFluid
	dQ ()Z canBreatheUnderwater
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	ed ()I getExperienceReward
net/minecraft/world/entity/animal/EntityWolf net/minecraft/world/entity/animal/Wolf
	bW PREY_SELECTOR
	bX DATA_INTERESTED_ID
	bY DATA_COLLAR_COLOR
	bZ DATA_REMAINING_ANGER_TIME
	ca START_HEALTH
	cb TAME_HEALTH
	cc interestedAngle
	cd interestedAngleO
	ce isWet
	cf isShaking
	cg shakeAnim
	ch shakeAnimO
	ci PERSISTENT_ANGER_TIME
	cj persistentAngerTarget
	A (Z)V setIsInterested
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	E (F)F getWetShade
	F (F)F getHeadRollAngle
	Y ()I getMaxHeadXRot
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z wantsToAttack
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/item/EnumColor;)V setCollarColor
	a_ ()V defineSynchedData
	b ()Ljava/util/UUID; getPersistentAngerTarget
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityWolf; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	c ()V startPersistentAngerTimer
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkWolfSpawnRules
	cI ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eV ()F getSoundVolume
	f (FF)F getBodyRollAngle
	fH ()I getMaxSpawnClusterSize
	gj ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	gk ()Z isWet
	gl ()F getTailAngle
	gm ()Lnet/minecraft/world/item/EnumColor; getCollarColor
	gn ()Z isInterested
	go ()V cancelShake
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x (Z)V setTame
	z ()V registerGoals
net/minecraft/world/entity/animal/horse/EntityHorse net/minecraft/world/entity/animal/horse/Horse
	bT ARMOR_MODIFIER_UUID
	bU DATA_ID_TYPE_VARIANT
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/util/RandomSource;)V randomizeAttributes
	a (Lnet/minecraft/world/IInventory;)V containerChanged
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/animal/horse/HorseColor;)V setVariant
	a (Lnet/minecraft/world/entity/animal/horse/HorseColor;Lnet/minecraft/world/entity/animal/horse/HorseStyle;)V setVariantAndMarkings
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/world/level/block/SoundEffectType;)V playGallopSound
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	c ()Ljava/lang/Object; getVariant
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	gA ()V updateContainerEquipment
	gC ()Lnet/minecraft/sounds/SoundEffect; getAngrySound
	gM ()Z canWearArmor
	gd ()Lnet/minecraft/world/entity/animal/horse/HorseStyle; getMarkings
	gk ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	gl ()I getTypeVariant
	l (Lnet/minecraft/world/item/ItemStack;)Z isArmor
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	n (Lnet/minecraft/world/item/ItemStack;)V setArmor
	o (Lnet/minecraft/world/item/ItemStack;)V setArmorEquipment
	s ()Lnet/minecraft/world/item/ItemStack; getArmor
	t ()Lnet/minecraft/world/entity/animal/horse/HorseColor; getVariant
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (I)V setTypeVariant
net/minecraft/world/entity/animal/horse/EntityHorseAbstract net/minecraft/world/entity/animal/horse/AbstractHorse
	bT MIN_MOVEMENT_SPEED
	bU MAX_MOVEMENT_SPEED
	bW MIN_JUMP_STRENGTH
	bX MAX_JUMP_STRENGTH
	bY MIN_HEALTH
	bZ MAX_HEALTH
	cA FLAG_STANDING
	cB FLAG_OPEN_MOUTH
	cC eatingCounter
	cD mouthCounter
	cE standCounter
	cF eatAnim
	cG eatAnimO
	cH standAnim
	cI standAnimO
	cJ mouthAnim
	cK mouthAnimO
	cL owner
	ca BACKWARDS_MOVE_SPEED_FACTOR
	cb SIDEWAYS_MOVE_SPEED_FACTOR
	cc PARENT_HORSE_SELECTOR
	cd MOMMY_TARGETING
	ce FOOD_ITEMS
	cf EQUIPMENT_SLOT_OFFSET
	cg CHEST_SLOT_OFFSET
	ch INVENTORY_SLOT_OFFSET
	ci BREEDING_CROSS_FACTOR
	cj INV_SLOT_SADDLE
	ck INV_SLOT_ARMOR
	cl INV_BASE_COUNT
	cm tailCounter
	cn sprintCounter
	co isJumping
	cp inventory
	cq temper
	cr playerJumpPendingScale
	cs allowStandSliding
	ct canGallop
	cu gallopSoundCounter
	cv DATA_ID_FLAGS
	cw FLAG_TAME
	cx FLAG_SADDLE
	cy FLAG_BRED
	cz FLAG_EATING
	A (Z)V setEating
	B (Z)V setStanding
	C (Z)V spawnTamingParticles
	D (F)V onLeashDistance
	E (F)F getEatAnim
	F (F)F getStandAnim
	G (F)F getMouthAnim
	O ()I getAmbientSoundInterval
	Z_ ()I getInventorySize
	a ()Z canJump
	a (DDDDLnet/minecraft/util/RandomSource;)D createOffspringAttribute
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (ILjava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; createEquipmentSlotAccess
	a (Ljava/util/function/DoubleSupplier;)D generateJumpStrength
	a (Ljava/util/function/IntUnaryOperator;)F generateMaxHealth
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/sounds/SoundCategory;)V equipSaddle
	a (Lnet/minecraft/util/RandomSource;)V randomizeAttributes
	a (Lnet/minecraft/world/IInventory;)V containerChanged
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V positionRider
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/EntityAgeable;Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;)V setOffspringAttributes
	a (Lnet/minecraft/world/entity/EntityAgeable;Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;Lnet/minecraft/world/entity/ai/attributes/AttributeBase;DD)V setOffspringAttribute
	a (Lnet/minecraft/world/entity/EntitySize;F)F getPassengersRidingOffsetY
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)Z handleEating
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;)V tickRidden
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/world/level/block/SoundEffectType;)V playGallopSound
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getDismountLocationInDirection
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	b ()V handleStopJump
	b (B)V handleEntityEvent
	b (FLnet/minecraft/world/phys/Vec3D;)V executeRidersJump
	b (I)V onPlayerJump
	b (Ljava/util/UUID;)V setOwnerUUID
	b (Ljava/util/function/DoubleSupplier;)D generateSpeed
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/IInventory;)Z hasInventoryChanged
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V openCustomInventoryScreen
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V equipArmor
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getRiddenInput
	b (Lnet/minecraft/world/level/block/SoundEffectType;)Z isWoodSoundType
	b_ ()V aiStep
	bs ()Z isPushable
	c (I)V handleStartJump
	c (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/EnumInteractionResult; fedFood
	cN ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	c_ ()Z onClimbable
	d ()Ljava/util/UUID; getOwnerUUID
	d (FF)I calculateFallDamage
	d (IZ)V setFlag
	e ()Lnet/minecraft/world/level/IEntityAccess; level
	e (Lnet/minecraft/world/entity/player/EntityHuman;)F getRiddenSpeed
	eV ()F getSoundVolume
	eX ()Z isImmobile
	ex ()V dropEquipment
	f (Lnet/minecraft/world/entity/player/EntityHuman;)V doPlayerRide
	fH ()I getMaxSpawnClusterSize
	g ()Z isSaddleable
	gA ()V updateContainerEquipment
	gB ()D getCustomJump
	gC ()Lnet/minecraft/sounds/SoundEffect; getAngrySound
	gD ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createBaseHorseAttributes
	gE ()I getMaxTemper
	gF ()V followMommy
	gG ()Z canEatGrass
	gH ()Lnet/minecraft/sounds/SoundEffect; getAmbientStandSound
	gI ()V standIfPossible
	gJ ()V makeMad
	gK ()V playJumpSound
	gL ()Z canParent
	gM ()Z canWearArmor
	gN ()Z isWearingArmor
	gO ()I getAmbientStandInterval
	gd ()V openMouth
	gj ()Z canPerformRearing
	gk ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	gs ()Z isTamed
	gt ()V addBehaviourGoals
	gu ()Z isJumping
	gv ()Z isEating
	gw ()Z isStanding
	gx ()Z isBred
	gy ()I getTemper
	gz ()V createInventory
	h (Lnet/minecraft/world/entity/player/EntityHuman;)Z tameWithName
	i ()Z isSaddled
	j (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec2F; getRiddenRotation
	l ()V tick
	l (Lnet/minecraft/world/item/ItemStack;)Z isArmor
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s ()V eating
	t ()V moveTail
	t (I)Z getFlag
	u (I)V setTemper
	v (I)I modifyTemper
	x (Z)V setTamed
	y (Z)V setIsJumping
	z ()V registerGoals
	z (Z)V setBred
net/minecraft/world/entity/animal/horse/EntityHorseChestedAbstract net/minecraft/world/entity/animal/horse/AbstractChestedHorse
	bT INV_CHEST_COUNT
	bU DATA_ID_CHEST
	Z_ ()I getInventorySize
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;)V randomizeAttributes
	a (Lnet/minecraft/world/entity/EntitySize;F)F getPassengersRidingOffsetY
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	d (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V equipChest
	ex ()V dropEquipment
	gd ()V playChestEquipsSound
	gl ()I getInventoryColumns
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createBaseChestedHorseAttributes
	t ()Z hasChest
	w (Z)V setChest
net/minecraft/world/entity/animal/horse/EntityHorseDonkey net/minecraft/world/entity/animal/horse/Donkey
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	gC ()Lnet/minecraft/sounds/SoundEffect; getAngrySound
	gk ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
net/minecraft/world/entity/animal/horse/EntityHorseMule net/minecraft/world/entity/animal/horse/Mule
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	gC ()Lnet/minecraft/sounds/SoundEffect; getAngrySound
	gd ()V playChestEquipsSound
	gk ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
net/minecraft/world/entity/animal/horse/EntityHorseSkeleton net/minecraft/world/entity/animal/horse/SkeletonHorse
	bT skeletonTrapGoal
	bU TRAP_MAX_LIFE
	bW isTrap
	bX trapTime
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/util/RandomSource;)V randomizeAttributes
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	aL ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	e (F)V playSwimSound
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	fc ()F getWaterSlowDown
	gK ()V playJumpSound
	gt ()V addBehaviourGoals
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Z isTrap
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setTrap
net/minecraft/world/entity/animal/horse/EntityHorseZombie net/minecraft/world/entity/animal/horse/ZombieHorse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/util/RandomSource;)V randomizeAttributes
	a (Lnet/minecraft/world/entity/EntitySize;F)F getPassengersRidingOffsetY
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	gt ()V addBehaviourGoals
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
net/minecraft/world/entity/animal/horse/EntityLlama net/minecraft/world/entity/animal/horse/Llama
	bU MAX_STRENGTH
	bW FOOD_ITEMS
	bX DATA_STRENGTH_ID
	bY DATA_SWAG_ID
	bZ DATA_VARIANT_ID
	ca didSpit
	cb caravanHead
	cc caravanTail
	D (Z)V setDidSpit
	Z_ ()I getInventorySize
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/IInventory;)V containerChanged
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/animal/horse/EntityLlama$Variant;)V setVariant
	a (Lnet/minecraft/world/entity/animal/horse/EntityLlama;)V joinCaravan
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)Z handleEating
	a (Lnet/minecraft/world/item/EnumColor;)V setSwag
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/horse/EntityLlama; getBreedOffspring
	b (Lnet/minecraft/util/RandomSource;)V setRandomStrength
	c ()Ljava/lang/Object; getVariant
	cI ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eX ()Z isImmobile
	g ()Z isSaddleable
	gA ()V updateContainerEquipment
	gC ()Lnet/minecraft/sounds/SoundEffect; getAngrySound
	gE ()I getMaxTemper
	gF ()V followMommy
	gG ()Z canEatGrass
	gM ()Z canWearArmor
	gN ()Z isWearingArmor
	gP ()V leaveCaravan
	gQ ()Z hasCaravanTail
	gR ()Z inCaravan
	gS ()Lnet/minecraft/world/entity/animal/horse/EntityLlama; getCaravanHead
	gc ()D followLeashSpeed
	gd ()V playChestEquipsSound
	gj ()Z canPerformRearing
	gk ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	gl ()I getInventoryColumns
	gm ()Z isTraderLlama
	gn ()I getStrength
	go ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	gp ()Lnet/minecraft/world/entity/animal/horse/EntityLlama$Variant; getVariant
	gq ()Lnet/minecraft/world/item/EnumColor; getSwag
	gr ()Lnet/minecraft/world/entity/animal/horse/EntityLlama; makeNewLlama
	k (Lnet/minecraft/world/entity/EntityLiving;)V spit
	l (Lnet/minecraft/world/item/ItemStack;)Z isArmor
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	n (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumColor; getDyeColor
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (I)V setStrength
	z ()V registerGoals
net/minecraft/world/entity/animal/horse/EntityLlama$Variant net/minecraft/world/entity/animal/horse/Llama$Variant
	a CREAMY
	b WHITE
	c BROWN
	d GRAY
	e CODEC
	f BY_ID
	g id
	h name
	i $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/animal/horse/EntityLlama$Variant; byId
	b ()[Lnet/minecraft/world/entity/animal/horse/EntityLlama$Variant; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/animal/horse/EntityLlamaTrader net/minecraft/world/entity/animal/horse/TraderLlama
	bU despawnDelay
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b_ ()V aiStep
	f (Lnet/minecraft/world/entity/player/EntityHuman;)V doPlayerRide
	gT ()V maybeDespawn
	gU ()Z canDespawn
	gV ()Z isLeashedToWanderingTrader
	gW ()Z isLeashedToSomethingOtherThanTheWanderingTrader
	gm ()Z isTraderLlama
	gr ()Lnet/minecraft/world/entity/animal/horse/EntityLlama; makeNewLlama
	w (I)V setDespawnDelay
	z ()V registerGoals
net/minecraft/world/entity/animal/horse/HorseColor net/minecraft/world/entity/animal/horse/Variant
	a WHITE
	b CREAMY
	c CHESTNUT
	d BROWN
	e BLACK
	f GRAY
	g DARK_BROWN
	h CODEC
	i BY_ID
	j id
	k name
	l $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/animal/horse/HorseColor; byId
	b ()[Lnet/minecraft/world/entity/animal/horse/HorseColor; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/animal/horse/HorseStyle net/minecraft/world/entity/animal/horse/Markings
	a NONE
	b WHITE
	c WHITE_FIELD
	d WHITE_DOTS
	e BLACK_DOTS
	f BY_ID
	g id
	h $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/animal/horse/HorseStyle; byId
	b ()[Lnet/minecraft/world/entity/animal/horse/HorseStyle; $values
net/minecraft/world/entity/animal/horse/PathfinderGoalHorseTrap net/minecraft/world/entity/animal/horse/SkeletonTrapGoal
	a horse
	a ()Z canUse
	a (Lnet/minecraft/world/DifficultyDamageScaler;)Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract; createHorse
	a (Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;)Lnet/minecraft/world/entity/monster/EntitySkeleton; createSkeleton
	a (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; disenchant
	e ()V tick
net/minecraft/world/entity/boss/EntityComplexPart net/minecraft/world/entity/boss/EnderDragonPart
	b parentMob
	c name
	d size
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	br ()Z isPickable
	dJ ()Z shouldBeSaved
	di ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	dy ()Lnet/minecraft/world/item/ItemStack; getPickResult
	t (Lnet/minecraft/world/entity/Entity;)Z is
net/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal net/minecraft/world/entity/boss/enderdragon/EndCrystal
	b time
	c DATA_BEAM_TARGET
	d DATA_SHOW_BOTTOM
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/core/BlockPosition;)V setBeamTarget
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V onDestroyedBy
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Z)V setShowBottom
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	aj ()V kill
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	br ()Z isPickable
	dy ()Lnet/minecraft/world/item/ItemStack; getPickResult
	l ()V tick
	q ()Lnet/minecraft/core/BlockPosition; getBeamTarget
	s ()Z showsBottom
net/minecraft/world/entity/boss/enderdragon/EntityEnderDragon net/minecraft/world/entity/boss/enderdragon/EnderDragon
	b DATA_PHASE
	bS oFlapTime
	bT flapTime
	bU inWall
	bV dragonDeathTime
	bW yRotA
	bX nearestCrystal
	bY LOGGER
	bZ CRYSTAL_DESTROY_TARGETING
	c positions
	ca GROWL_INTERVAL_MIN
	cb GROWL_INTERVAL_MAX
	cc SITTING_ALLOWED_DAMAGE_PERCENTAGE
	cd DRAGON_DEATH_TIME_KEY
	ce DRAGON_PHASE_KEY
	cf subEntities
	cg neck
	ch body
	ci tail1
	cj tail2
	ck tail3
	cl wing1
	cm wing2
	cn dragonFight
	co fightOrigin
	cp phaseManager
	cq growlTime
	cr sittingDamageReceived
	cs nodes
	ct nodeAdjacency
	cu openSet
	d posPointer
	e head
	D (F)Lnet/minecraft/world/phys/Vec3D; getHeadLookVector
	a (IF)[D getLatencyPos
	a (IILnet/minecraft/world/level/pathfinder/PathPoint;)Lnet/minecraft/world/level/pathfinder/PathEntity; findPath
	a (I[D[D)F getHeadPartYOffset
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/boss/EntityComplexPart;DDD)V tickPart
	a (Lnet/minecraft/world/entity/boss/EntityComplexPart;Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/damagesource/DamageSource;)V onCrystalDestroyed
	a (Lnet/minecraft/world/level/dimension/end/EnderDragonBattle;)V setDragonFight
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)Lnet/minecraft/world/level/pathfinder/PathEntity; reconstructPath
	aQ ()V onFlap
	aR ()Z isFlapping
	a_ ()V defineSynchedData
	aj ()V kill
	b (Ljava/util/List;)V knockBack
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/entity/Entity;)Z addEffect
	b (Lnet/minecraft/world/phys/AxisAlignedBB;)Z checkWalls
	b_ ()V aiStep
	br ()Z isPickable
	c (Ljava/util/List;)V hurt
	c (Lnet/minecraft/world/entity/EntityLiving;)Z canAttack
	cs ()Z canChangeDimensions
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	dx ()V checkDespawn
	eV ()F getSoundVolume
	ea ()V tickDeath
	fZ ()[Lnet/minecraft/world/entity/boss/EntityComplexPart; getSubEntities
	g (Lnet/minecraft/world/damagesource/DamageSource;F)Z reallyHurt
	ga ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerManager; getPhaseManager
	gb ()Lnet/minecraft/world/level/dimension/end/EnderDragonBattle; getDragonFight
	gc ()F getHeadYOffset
	gd ()V checkCrystals
	h (Lnet/minecraft/core/BlockPosition;)V setFightOrigin
	i (D)F rotWrap
	o (Lnet/minecraft/world/entity/Entity;)Z canRide
	r (DDD)I findClosestNode
	s ()Lnet/minecraft/core/BlockPosition; getFightOrigin
	t ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()I findClosestNode
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonController net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance
	a dragon
	a ()Z isSitting
	a (Lnet/minecraft/world/damagesource/DamageSource;F)F onHurt
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/EntityHuman;)V onCrystalDestroyed
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	f ()F getFlySpeed
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	h ()F getTurnSpeed
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonControllerLanded net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase
	a ()Z isSitting
	a (Lnet/minecraft/world/damagesource/DamageSource;F)F onHurt
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerCharge net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase
	b LOGGER
	c CHARGE_RECOVERY_TIME
	d targetLocation
	e timeSinceCharge
	a (Lnet/minecraft/world/phys/Vec3D;)V setTarget
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerDying net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase
	b targetLocation
	c time
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerFly net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase
	b firstTick
	c currentPath
	d targetLocation
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerHold net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase
	b NEW_TARGET_TARGETING
	c currentPath
	d targetLocation
	e clockwise
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/EntityHuman;)V onCrystalDestroyed
	a (Lnet/minecraft/world/entity/player/EntityHuman;)V strafePlayer
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerHover net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase
	b targetLocation
	a ()Z isSitting
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandedAttack net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase
	b ROAR_DURATION
	c attackingTicks
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandedFlame net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase
	b FLAME_DURATION
	c SITTING_FLAME_ATTACKS_COUNT
	d WARMUP_TIME
	e flameTicks
	f flameCount
	g flame
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
	j ()V resetFlameCount
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandedSearch net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase
	b SITTING_SCANNING_IDLE_TICKS
	c SITTING_ATTACK_Y_VIEW_RANGE
	d SITTING_ATTACK_VIEW_RANGE
	e SITTING_CHARGE_VIEW_RANGE
	f CHARGE_TARGETING
	g scanTargeting
	h scanningTime
	c ()V doServerTick
	d ()V begin
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLanding net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase
	b targetLocation
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	h ()F getTurnSpeed
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandingFly net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase
	b NEAR_EGG_TARGETING
	c currentPath
	d targetLocation
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerManager net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager
	a LOGGER
	b dragon
	c phases
	d currentPhase
	a ()Lnet/minecraft/world/entity/boss/enderdragon/phases/IDragonController; getCurrentPhase
	a (Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase;)V setPhase
	b (Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase;)Lnet/minecraft/world/entity/boss/enderdragon/phases/IDragonController; getPhase
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase
	a HOLDING_PATTERN
	b STRAFE_PLAYER
	c LANDING_APPROACH
	d LANDING
	e TAKEOFF
	f SITTING_FLAMING
	g SITTING_SCANNING
	h SITTING_ATTACKING
	i CHARGING_PLAYER
	j DYING
	k HOVERING
	l phases
	m instanceClass
	n id
	o name
	a ()Ljava/lang/reflect/Constructor; getConstructor
	a (I)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getById
	a (Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; create
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon;)Lnet/minecraft/world/entity/boss/enderdragon/phases/IDragonController; createInstance
	b ()I getId
	c ()I getCount
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerStrafe net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase
	b LOGGER
	c FIREBALL_CHARGE_AMOUNT
	d fireballCharge
	e currentPath
	f targetLocation
	g attackTarget
	h holdingPatternClockwise
	a (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
net/minecraft/world/entity/boss/enderdragon/phases/IDragonController net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance
	a ()Z isSitting
	a (Lnet/minecraft/world/damagesource/DamageSource;F)F onHurt
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/EntityHuman;)V onCrystalDestroyed
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	f ()F getFlySpeed
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	h ()F getTurnSpeed
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
net/minecraft/world/entity/boss/wither/EntityWither net/minecraft/world/entity/boss/wither/WitherBoss
	b DATA_TARGET_A
	bT DATA_ID_INV
	bU INVULNERABLE_TICKS
	bV xRotHeads
	bW yRotHeads
	bX xRotOHeads
	bY yRotOHeads
	bZ nextHeadUpdate
	c DATA_TARGET_B
	ca idleHeadUpdates
	cb destroyBlocksTick
	cc bossEvent
	cd LIVING_ENTITY_SELECTOR
	ce TARGETING_CONDITIONS
	d DATA_TARGET_C
	e DATA_TARGETS
	X ()V customServerAiStep
	a ()Z isPowered
	a (FFF)F rotlerp
	a (IDDDZ)V performRangedAttack
	a (II)V setAlternativeTarget
	a (ILnet/minecraft/world/entity/EntityLiving;)V performRangedAttack
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/Vec3D;)V makeStuckInBlock
	a_ ()V defineSynchedData
	b (I)F getHeadYRot
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setCustomName
	b (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/entity/Entity;)Z addEffect
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	b_ ()V aiStep
	c (I)F getHeadXRot
	c (Lnet/minecraft/server/level/EntityPlayer;)V startSeenByPlayer
	c (Lnet/minecraft/world/effect/MobEffect;)Z canBeAffected
	cs ()Z canChangeDimensions
	d (Lnet/minecraft/server/level/EntityPlayer;)V stopSeenByPlayer
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Z canDestroy
	dx ()V checkDespawn
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	o (Lnet/minecraft/world/entity/Entity;)Z canRide
	s ()V makeInvulnerable
	s (I)V setInvulnerableTicks
	t ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t (I)I getAlternativeTarget
	u (I)D getHeadX
	v (I)D getHeadY
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (I)D getHeadZ
	y ()I getInvulnerableTicks
	z ()V registerGoals
net/minecraft/world/entity/decoration/EntityArmorStand net/minecraft/world/entity/decoration/ArmorStand
	b WOBBLE_TIME
	bA CLIENT_FLAG_NO_BASEPLATE
	bB CLIENT_FLAG_MARKER
	bC DATA_CLIENT_FLAGS
	bD DATA_HEAD_POSE
	bE DATA_BODY_POSE
	bF DATA_LEFT_ARM_POSE
	bG DATA_RIGHT_ARM_POSE
	bH DATA_LEFT_LEG_POSE
	bI DATA_RIGHT_LEG_POSE
	bJ lastHit
	bK ENABLE_ARMS
	bL DEFAULT_HEAD_POSE
	bM DEFAULT_BODY_POSE
	bN DEFAULT_LEFT_ARM_POSE
	bO DEFAULT_RIGHT_ARM_POSE
	bP DEFAULT_LEFT_LEG_POSE
	bQ DEFAULT_RIGHT_LEG_POSE
	bR MARKER_DIMENSIONS
	bS BABY_DIMENSIONS
	bT FEET_OFFSET
	bU CHEST_OFFSET
	bV LEGS_OFFSET
	bW HEAD_OFFSET
	bX RIDABLE_MINECARTS
	bY handItems
	bZ armorItems
	c DISABLE_TAKING_OFFSET
	ca invisible
	cb disabledSlots
	cc headPose
	cd bodyPose
	ce leftArmPose
	cf rightArmPose
	cg leftLegPose
	ch rightLegPose
	d DISABLE_PUTTING_OFFSET
	e CLIENT_FLAG_SMALL
	f CLIENT_FLAG_SHOW_ARMS
	A ()Lnet/minecraft/core/Vector3f; getBodyPose
	B ()Lnet/minecraft/core/Vector3f; getLeftArmPose
	C ()Lnet/minecraft/core/Vector3f; getRightArmPose
	D (Lnet/minecraft/world/entity/Entity;)V doPush
	E ()Lnet/minecraft/core/Vector3f; getLeftLegPose
	F ()Lnet/minecraft/core/Vector3f; getRightLegPose
	G ()Z hasPhysics
	H ()V updateInvisibilityStatus
	I ()Lnet/minecraft/nbt/NBTTagCompound; writePose
	K ()V showBreakingParticles
	L ()V playBrokenSound
	a (BIZ)B setBit
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/core/Vector3f;)V setHeadPose
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setItemSlot
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;)Z swapItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactAt
	a (Z)V setShowArms
	a_ ()V defineSynchedData
	aj ()V kill
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/Vector3f;)V setBodyPose
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	bJ ()Ljava/lang/Iterable; getHandSlots
	bK ()Ljava/lang/Iterable; getArmorSlots
	br ()Z isPickable
	bs ()Z isPushable
	c (Lnet/minecraft/core/Vector3f;)V setLeftArmPose
	c (Lnet/minecraft/nbt/NBTTagCompound;)V readPose
	c (Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/item/ItemStack; getItemBySlot
	cL ()Z ignoreExplosion
	cX ()Z isEffectiveAi
	d (Lnet/minecraft/core/Vector3f;)V setRightArmPose
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dy ()Lnet/minecraft/world/item/ItemStack; getPickResult
	e (FF)F tickHeadTurn
	e (Lnet/minecraft/core/Vector3f;)V setLeftLegPose
	e (Lnet/minecraft/world/entity/EnumItemSlot;)Z isDisabled
	eF ()Lbjg$a; getFallSounds
	eo ()Z canBeSeenByAnyone
	f (Lnet/minecraft/core/Vector3f;)V setRightLegPose
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fh ()V pushEntities
	fl ()Lnet/minecraft/world/entity/EnumMainHand; getMainArm
	fx ()Z isAffectedByPotions
	fy ()Z attackable
	g (Lnet/minecraft/world/damagesource/DamageSource;F)V causeDamage
	h (Lnet/minecraft/world/damagesource/DamageSource;)V brokenByPlayer
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	i (Lnet/minecraft/world/damagesource/DamageSource;)V brokenByAnything
	i_ ()V refreshDimensions
	j (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/entity/EnumItemSlot; getClickedSlot
	j (Z)V setInvisible
	k (F)Lnet/minecraft/world/phys/Vec3D; getLightProbePosition
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m_ ()Z isBaby
	n (F)V setYHeadRot
	o (F)V setYBodyRot
	p_ ()Z isIgnoringBlockTriggers
	q_ ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	s ()Z isSmall
	s (Z)V setNoBasePlate
	t ()Z isShowArms
	t (Z)V setSmall
	u (Lnet/minecraft/world/entity/Entity;)Z skipAttackInteraction
	u (Z)V setMarker
	v (Z)Lnet/minecraft/world/entity/EntitySize; getDimensionsMarker
	w ()Z isNoBasePlate
	y ()Z isMarker
	z ()Lnet/minecraft/core/Vector3f; getHeadPose
net/minecraft/world/entity/decoration/EntityHanging net/minecraft/world/entity/decoration/HangingEntity
	b HANGING_ENTITY
	c pos
	d direction
	e LOGGER
	f checkInterval
	A ()I getWidth
	B ()I getHeight
	C ()V playPlacementSound
	E ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/core/EnumDirection;)V setDirection
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;)V dropItem
	a (Lnet/minecraft/world/entity/EnumMoveType;Lnet/minecraft/world/phys/Vec3D;)V move
	a (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/EntityItem; spawnAtLocation
	a (Lnet/minecraft/world/level/block/EnumBlockMirror;)F mirror
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)F rotate
	a_ ()V defineSynchedData
	b (I)D offs
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	br ()Z isPickable
	bt ()Z repositionEntityAfterLoad
	cD ()Lnet/minecraft/core/EnumDirection; getDirection
	e (DDD)V setPos
	i_ ()V refreshDimensions
	j (DDD)V push
	l ()V tick
	u (Lnet/minecraft/world/entity/Entity;)Z skipAttackInteraction
	y ()V recalculateBoundingBox
	z ()Z survives
net/minecraft/world/entity/decoration/EntityItemFrame net/minecraft/world/entity/decoration/ItemFrame
	e NUM_ROTATIONS
	f LOGGER
	g DATA_ITEM
	h DATA_ROTATION
	i dropChance
	j fixed
	A ()I getWidth
	B ()I getHeight
	C ()V playPlacementSound
	F ()Lnet/minecraft/world/item/ItemStack; getItem
	G ()Ljava/util/OptionalInt; getFramedMapId
	H ()Z hasFramedMap
	I ()I getRotation
	K ()I getAnalogOutput
	a (D)Z shouldRenderAtSqrDistance
	a (IZ)V setRotation
	a (Lnet/minecraft/core/EnumDirection;)V setDirection
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;)V dropItem
	a (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/world/entity/EnumMoveType;Lnet/minecraft/world/phys/Vec3D;)V move
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a (Lnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/world/item/ItemStack;Z)V setItem
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	aj ()V kill
	b (I)V setRotation
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/Entity;Z)V dropItem
	bD ()F getPickRadius
	c (Lnet/minecraft/world/item/ItemStack;)V removeFramedMap
	d (Lnet/minecraft/world/item/ItemStack;)V onItemChanged
	dC ()F getVisualRotationYInDegrees
	di ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	dy ()Lnet/minecraft/world/item/ItemStack; getPickResult
	j (DDD)V push
	q ()Lnet/minecraft/sounds/SoundEffect; getRemoveItemSound
	s ()Lnet/minecraft/sounds/SoundEffect; getBreakSound
	t ()Lnet/minecraft/sounds/SoundEffect; getPlaceSound
	v ()Lnet/minecraft/sounds/SoundEffect; getAddItemSound
	w ()Lnet/minecraft/sounds/SoundEffect; getRotateItemSound
	x ()Lnet/minecraft/world/item/ItemStack; getFrameItemStack
	y ()V recalculateBoundingBox
	z ()Z survives
net/minecraft/world/entity/decoration/EntityLeash net/minecraft/world/entity/decoration/LeashFenceKnotEntity
	e OFFSET_Y
	A ()I getWidth
	B ()I getHeight
	C ()V playPlacementSound
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/core/EnumDirection;)V setDirection
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/Entity;)V dropItem
	a (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/decoration/EntityLeash; getOrCreateKnot
	di ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	dy ()Lnet/minecraft/world/item/ItemStack; getPickResult
	q (F)Lnet/minecraft/world/phys/Vec3D; getRopeHoldPosition
	y ()V recalculateBoundingBox
	z ()Z survives
net/minecraft/world/entity/decoration/EntityPainting net/minecraft/world/entity/decoration/Painting
	e VARIANT_TAG
	f DATA_PAINTING_VARIANT_ID
	g DEFAULT_VARIANT
	A ()I getWidth
	B ()I getHeight
	C ()V playPlacementSound
	a (DDDFFI)V lerpTo
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/core/Holder;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/core/Holder;)V storeVariant
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/Entity;)V dropItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Ljava/util/Optional; create
	a_ ()V defineSynchedData
	b (DDDFF)V moveTo
	b (Lnet/minecraft/core/Holder;)I variantArea
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c ()Ljava/lang/Object; getVariant
	c (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/Optional; loadVariant
	di ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	dk ()Lnet/minecraft/world/phys/Vec3D; trackingPosition
	dy ()Lnet/minecraft/world/item/ItemStack; getPickResult
	q ()Lnet/minecraft/core/Holder; getVariant
	s ()Lnet/minecraft/core/Holder; getDefaultVariant
net/minecraft/world/entity/item/EntityFallingBlock net/minecraft/world/entity/item/FallingBlockEntity
	b time
	c dropItem
	d blockData
	e DATA_START_POS
	f LOGGER
	g blockState
	h cancelDrop
	i hurtEntities
	j fallDamageMax
	k fallDamagePerDistance
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (Lnet/minecraft/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/core/BlockPosition;)V setStartPos
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/entity/item/EntityFallingBlock; fall
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V callOnBrokenAfterFall
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (FI)V setHurtsEntities
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	br ()Z isPickable
	cM ()Z onlyOpCanSetNbt
	cn ()Lnet/minecraft/network/chat/IChatBaseComponent; getTypeName
	cp ()Z isAttackable
	cu ()Z displayFireAnimation
	di ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	l ()V tick
	q ()Lnet/minecraft/core/BlockPosition; getStartPos
	s ()V disableDrop
	t ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
net/minecraft/world/entity/item/EntityItem net/minecraft/world/entity/item/ItemEntity
	b bobOffs
	c DATA_ITEM
	d LIFETIME
	e INFINITE_PICKUP_DELAY
	f INFINITE_LIFETIME
	g age
	h pickupDelay
	i health
	j thrower
	k target
	A ()V setExtendedLifetime
	B ()V makeFakeItem
	C ()Lnet/minecraft/world/entity/item/EntityItem; copy
	E ()V setUnderwaterMovement
	F ()V setUnderLavaMovement
	G ()V mergeWithNeighbours
	H ()Z isMergable
	a (F)F getSpin
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/item/EntityItem;)V tryToMerge
	a (Lnet/minecraft/world/entity/item/EntityItem;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/item/EntityItem;Lnet/minecraft/world/item/ItemStack;)V merge
	a (Lnet/minecraft/world/entity/item/EntityItem;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V merge
	a (Lnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z areMergable
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; merge
	aG ()Lnet/minecraft/core/BlockPosition; getBlockPosBelowThatAffectsMyMovement
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	aV ()Z dampensVibrations
	aW ()Z fireImmune
	a_ ()V defineSynchedData
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	b (I)V setPickUpDelay
	b (Ljava/util/UUID;)V setTarget
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/entity/Entity; changeDimension
	b_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerTouch
	c (Ljava/util/UUID;)V setThrower
	cp ()Z isAttackable
	dC ()F getVisualRotationYInDegrees
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	l ()V tick
	q ()Lnet/minecraft/world/item/ItemStack; getItem
	s ()I getAge
	t ()V setDefaultPickUpDelay
	v ()Lnet/minecraft/world/entity/Entity; getOwner
	w ()V setNoPickUpDelay
	x ()V setNeverPickUp
	y ()Z hasPickUpDelay
	z ()V setUnlimitedLifetime
net/minecraft/world/entity/item/EntityTNTPrimed net/minecraft/world/entity/item/PrimedTnt
	b DATA_FUSE_ID
	c DEFAULT_FUSE_TIME
	d owner
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getEyeHeight
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (I)V setFuse
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	br ()Z isPickable
	l ()V tick
	q ()Lnet/minecraft/world/entity/EntityLiving; getOwner
	s ()I getFuse
	t ()V explode
	v ()Lnet/minecraft/world/entity/Entity; getOwner
net/minecraft/world/entity/monster/EntityBlaze net/minecraft/world/entity/monster/Blaze
	b allowedHeightOffset
	c nextHeightOffsetChangeTick
	d DATA_FLAGS_ID
	X ()V customServerAiStep
	a_ ()V defineSynchedData
	bM ()Z isOnFire
	b_ ()V aiStep
	bm ()F getLightLevelDependentMagicValue
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	ff ()Z isSensitiveToWater
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Z isCharged
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setCharged
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityBlaze$PathfinderGoalBlazeFireball net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal
	a blaze
	b attackStep
	c attackTime
	d lastSeen
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()D getFollowDistance
net/minecraft/world/entity/monster/EntityCaveSpider net/minecraft/world/entity/monster/CaveSpider
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	l (Lnet/minecraft/world/entity/Entity;)F ridingOffset
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createCaveSpider
net/minecraft/world/entity/monster/EntityCreeper net/minecraft/world/entity/monster/Creeper
	b DATA_SWELL_DIR
	bT swell
	bU maxSwell
	bV explosionRadius
	bW droppedSkulls
	c DATA_IS_POWERED
	d DATA_IS_IGNITED
	e oldSwell
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	E (F)F getSwelling
	a ()Z isPowered
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a_ ()V defineSynchedData
	b (I)V setSwellDir
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	ct ()I getMaxFallDistance
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	gd ()V ignite
	ge ()Z canDropMobsSkull
	gf ()V increaseDroppedSkulls
	gg ()V explodeCreeper
	gh ()V spawnLingeringCloud
	h (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()I getSwellDir
	y ()Z isIgnited
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityDrowned net/minecraft/world/entity/monster/Drowned
	b NAUTILUS_SHELL_CHANCE
	bX searchingForLand
	c waterNavigation
	d groundNavigation
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkDrownedSpawnRules
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z isDeepEnoughToSpawn
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aL ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z canReplaceCurrentItem
	bZ ()Z isVisuallySwimming
	bd ()V updateSwimming
	cy ()Z isPushedByFluid
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	gd ()Lnet/minecraft/world/item/ItemStack; getSkull
	ge ()Z convertsInWater
	gf ()Z closeToNextPos
	gn ()Z wantsToSwim
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	j (Lnet/minecraft/world/entity/EntityLiving;)Z okTarget
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()V addBehaviourGoals
	t ()Z supportsBreakDoorGoal
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setSearchingForLand
	y ()Lnet/minecraft/sounds/SoundEffect; getStepSound
net/minecraft/world/entity/monster/EntityEnderman net/minecraft/world/entity/monster/EnderMan
	bT MIN_DEAGGRESSION_TIME
	bU DATA_CARRY_STATE
	bV DATA_CREEPY
	bW DATA_STARED_AT
	bX lastStareSound
	bY targetChangeTime
	bZ PERSISTENT_ANGER_TIME
	c SPEED_MODIFIER_ATTACKING_UUID
	ca remainingPersistentAngerTime
	cb persistentAngerTarget
	d SPEED_MODIFIER_ATTACKING
	e DELAY_BETWEEN_CREEPY_STARE_SOUND
	U ()Z requiresCustomPersistence
	X ()V customServerAiStep
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/projectile/EntityPotion;F)Z hurtWithCleanWater
	a (Lnet/minecraft/world/entity/Entity;)Z teleportTowards
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a_ ()V defineSynchedData
	b ()Ljava/util/UUID; getPersistentAngerTarget
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b_ ()V aiStep
	c ()V startPersistentAngerTimer
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	d (Lnet/minecraft/world/level/block/state/IBlockData;)V setCarriedBlock
	ff ()Z isSensitiveToWater
	g (Lnet/minecraft/world/entity/player/EntityHuman;)Z isLookingAtMe
	gd ()Lnet/minecraft/world/level/block/state/IBlockData; getCarriedBlock
	ge ()Z isCreepy
	gf ()Z hasBeenStaredAt
	gg ()V setBeingStaredAt
	h (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	r (DDD)Z teleport
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()V playStareSound
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()Z teleport
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityEnderman$PathfinderGoalEndermanPickupBlock net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal
	a enderman
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/monster/EntityEnderman$PathfinderGoalEndermanPlaceBlock net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal
	a enderman
	a ()Z canUse
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)Z canPlaceBlock
	e ()V tick
net/minecraft/world/entity/monster/EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal
	i enderman
	j pendingTarget
	k aggroTime
	l teleportTime
	m startAggroTargetConditions
	n continueAggroTargetConditions
	o isAngerInducing
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/monster/EntityEndermite net/minecraft/world/entity/monster/Endermite
	b MAX_LIFE
	c life
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkEndermiteSpawnRules
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	o (F)V setYBodyRot
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityEvoker net/minecraft/world/entity/monster/Evoker
	e wololoTarget
	X ()V customServerAiStep
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/animal/EntitySheep;)V setWololoTarget
	a_ ()V defineSynchedData
	ac_ ()Lnet/minecraft/sounds/SoundEffect; getCelebrateSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	gd ()Lnet/minecraft/sounds/SoundEffect; getCastingSoundEvent
	gw ()Lnet/minecraft/world/entity/animal/EntitySheep; getWololoTarget
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s (Lnet/minecraft/world/entity/Entity;)Z isAlliedTo
	t ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityGhast net/minecraft/world/entity/monster/Ghast
	b DATA_IS_CHARGING
	c explosionPower
	V ()Z shouldDespawnInPeaceful
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/damagesource/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkGhastSpawnRules
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	eV ()F getSoundVolume
	fH ()I getMaxSpawnClusterSize
	h (Lnet/minecraft/world/damagesource/DamageSource;)Z isReflectedFireball
	l (Lnet/minecraft/world/entity/Entity;)F ridingOffset
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Z isCharging
	t ()I getExplosionPower
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setCharging
	y ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityGhast$ControllerGhast net/minecraft/world/entity/monster/Ghast$GhastMoveControl
	l ghast
	m floatDuration
	a ()V tick
	a (Lnet/minecraft/world/phys/Vec3D;I)Z canReach
net/minecraft/world/entity/monster/EntityGhast$PathfinderGoalGhastAttackTarget net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal
	a chargeTime
	b ghast
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/monster/EntityGhast$PathfinderGoalGhastIdleMove net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal
	a ghast
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/world/entity/monster/EntityGhast$PathfinderGoalGhastMoveTowardsTarget net/minecraft/world/entity/monster/Ghast$GhastLookGoal
	a ghast
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/monster/EntityGiantZombie net/minecraft/world/entity/monster/Giant
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	l (Lnet/minecraft/world/entity/Entity;)F ridingOffset
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
net/minecraft/world/entity/monster/EntityGuardian net/minecraft/world/entity/monster/Guardian
	b DATA_ID_MOVING
	bT clientSideTailAnimation
	bU clientSideTailAnimationO
	bV clientSideTailAnimationSpeed
	bW clientSideSpikesAnimation
	bX clientSideSpikesAnimationO
	bY clientSideCachedAttackTarget
	bZ clientSideAttackTime
	c ATTACK_TIME
	ca clientSideTouchedGround
	d randomStrollGoal
	e DATA_ID_ATTACK_TARGET
	E (F)F getTailAnimation
	F (F)F getSpikesAnimation
	G (F)F getAttackAnimationScale
	O ()I getAmbientSoundInterval
	Y ()I getMaxHeadXRot
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (I)V setActiveAttackTarget
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkGuardianSpawnRules
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dQ ()Z canBreatheUnderwater
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	gd ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	ge ()Z isMoving
	gf ()Z hasActiveAttackTarget
	gg ()Lnet/minecraft/world/entity/EntityLiving; getActiveAttackTarget
	gh ()F getClientSideAttackTime
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	t ()I getAttackDuration
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setMoving
	y ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityGuardian$ControllerMoveGuardian net/minecraft/world/entity/monster/Guardian$GuardianMoveControl
	l guardian
	a ()V tick
net/minecraft/world/entity/monster/EntityGuardian$EntitySelectorGuardianTargetHumanSquid net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector
	a guardian
	a (Lnet/minecraft/world/entity/EntityLiving;)Z test
net/minecraft/world/entity/monster/EntityGuardian$PathfinderGoalGuardianAttack net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal
	a guardian
	b attackTime
	c elder
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/monster/EntityGuardianElder net/minecraft/world/entity/monster/ElderGuardian
	b ELDER_SIZE_SCALE
	bT EFFECT_RADIUS
	bU EFFECT_DURATION
	bV EFFECT_AMPLIFIER
	bW EFFECT_DISPLAY_LIMIT
	e EFFECT_INTERVAL
	X ()V customServerAiStep
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()I getAttackDuration
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
net/minecraft/world/entity/monster/EntityIllagerAbstract net/minecraft/world/entity/monster/AbstractIllager
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	c (Lnet/minecraft/world/entity/EntityLiving;)Z canAttack
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	l (Lnet/minecraft/world/entity/Entity;)F ridingOffset
	s ()Lbyq$a; getArmPose
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityIllagerIllusioner net/minecraft/world/entity/monster/Illusioner
	bT ILLUSION_TRANSITION_TICKS
	bU ILLUSION_SPREAD
	bV clientSideIllusionTicks
	bW clientSideIllusionOffsets
	e NUM_ILLUSIONS
	E (F)[Lnet/minecraft/world/phys/Vec3D; getIllusionOffsets
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	ac_ ()Lnet/minecraft/sounds/SoundEffect; getCelebrateSound
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	g_ ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBoxForCulling
	gd ()Lnet/minecraft/sounds/SoundEffect; getCastingSoundEvent
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lbyq$a; getArmPose
	s (Lnet/minecraft/world/entity/Entity;)Z isAlliedTo
	t ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityIllagerWizard net/minecraft/world/entity/monster/SpellcasterIllager
	b spellCastingTickCount
	bT currentSpell
	e DATA_SPELL_CASTING_ID
	X ()V customServerAiStep
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell;)V setIsCastingSpell
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	gd ()Lnet/minecraft/sounds/SoundEffect; getCastingSoundEvent
	gn ()Z isCastingSpell
	go ()Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; getCurrentSpell
	gp ()I getSpellCastingTime
	l ()V tick
	s ()Lbyq$a; getArmPose
net/minecraft/world/entity/monster/EntityIllagerWizard$PathfinderGoalCastSpell net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal
	b attackWarmupDelay
	c nextAttackTickCount
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lnet/minecraft/sounds/SoundEffect; getSpellPrepareSound
	m ()Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; getSpell
	n ()I getCastWarmupTime
net/minecraft/world/entity/monster/EntityIllagerWizard$Spell net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell
	a NONE
	b SUMMON_VEX
	c FANGS
	d WOLOLO
	e DISAPPEAR
	f BLINDNESS
	g BY_ID
	h id
	i spellColor
	j $VALUES
	a ()[Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; $values
	a (I)Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; byId
net/minecraft/world/entity/monster/EntityMagmaCube net/minecraft/world/entity/monster/MagmaCube
	a (IZ)V setSize
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkMagmaCubeSpawnRules
	bM ()Z isOnFire
	bm ()F getLightLevelDependentMagicValue
	c (Lnet/minecraft/tags/TagKey;)V jumpInLiquid
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fZ ()V decreaseSquish
	fa ()V jumpFromGround
	ga ()Z isDealsDamage
	gb ()F getAttackDamage
	gc ()Lnet/minecraft/sounds/SoundEffect; getSquishSound
	gd ()Lnet/minecraft/sounds/SoundEffect; getJumpSound
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Lnet/minecraft/core/particles/ParticleParam; getParticleType
	y ()I getJumpDelay
net/minecraft/world/entity/monster/EntityMonster net/minecraft/world/entity/monster/Monster
	V ()Z shouldDespawnInPeaceful
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z isDarkEnoughToSpawn
	aL ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	aM ()Lnet/minecraft/sounds/SoundEffect; getSwimSplashSound
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkMonsterSpawnRules
	b_ ()V aiStep
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkAnyLightMonsterSpawnRules
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	eF ()Lbjg$a; getFallSounds
	eb ()Z shouldDropExperience
	ec ()Z shouldDropLoot
	f (Lnet/minecraft/world/entity/player/EntityHuman;)Z isPreventingPlayerRest
	g (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; getProjectile
	gi ()V updateNoActionTime
	gj ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createMonsterAttributes
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityMonsterPatrolling net/minecraft/world/entity/monster/PatrollingMonster
	b patrolTarget
	c patrolLeader
	d patrolling
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkPatrollingMonsterSpawnRules
	ge ()Z canBeLeader
	gf ()Lnet/minecraft/core/BlockPosition; getPatrolTarget
	gg ()Z hasPatrolTarget
	gh ()Z isPatrolLeader
	gk ()Z canJoinPatrol
	gl ()V findPatrolTarget
	gm ()Z isPatrolling
	h (D)Z removeWhenFarAway
	i (Lnet/minecraft/core/BlockPosition;)V setPatrolTarget
	w (Z)V setPatrolLeader
	x (Z)V setPatrolling
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityPhantom net/minecraft/world/entity/monster/Phantom
	b FLAP_DEGREES_PER_TICK
	bS anchorPoint
	bT attackPhase
	c TICKS_PER_FLAP
	d ID_SIZE
	e moveTargetPoint
	F ()Lnet/minecraft/world/entity/ai/control/EntityAIBodyControl; createBodyControl
	V ()Z shouldDespawnInPeaceful
	X ()V customServerAiStep
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aR ()Z isFlapping
	a_ ()V defineSynchedData
	b (I)V setPhantomSize
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	eV ()F getSoundVolume
	l ()V tick
	l (Lnet/minecraft/world/entity/Entity;)F ridingOffset
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()I getPhantomSize
	t ()I getUniqueFlapTickOffset
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()V updatePhantomSizeInfo
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityPhantom$AttackPhase net/minecraft/world/entity/monster/Phantom$AttackPhase
	a CIRCLE
	b SWOOP
	c $VALUES
	a ()[Lnet/minecraft/world/entity/monster/EntityPhantom$AttackPhase; $values
net/minecraft/world/entity/monster/EntityPigZombie net/minecraft/world/entity/monster/ZombifiedPiglin
	bX FIRST_ANGER_SOUND_DELAY
	bY playFirstAngerSoundIn
	bZ PERSISTENT_ANGER_TIME
	c SPEED_MODIFIER_ATTACKING_UUID
	ca remainingPersistentAngerTime
	cb persistentAngerTarget
	cc ALERT_RANGE_Y
	cd ALERT_INTERVAL
	ce ticksUntilNextAlert
	cf ZOMBIFIED_PIGLIN_EYE_HEIGHT
	cg ZOMBIFIED_PIGLIN_BABY_EYE_HEIGHT_ADJUSTMENT
	d SPEED_MODIFIER_ATTACKING
	X ()V customServerAiStep
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	b ()Ljava/util/UUID; getPersistentAngerTarget
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkZombifiedPiglinSpawnRules
	c ()V startPersistentAngerTimer
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	f (Lnet/minecraft/world/entity/player/EntityHuman;)Z isPreventingPlayerRest
	gd ()Lnet/minecraft/world/item/ItemStack; getSkull
	ge ()Z convertsInWater
	gm ()V randomizeReinforcementsChance
	gn ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	go ()V maybePlayFirstAngerSound
	gp ()V maybeAlertOthers
	gq ()V alertOthers
	gr ()V playAngerSound
	h (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	k (Lnet/minecraft/world/item/ItemStack;)Z wantsToPickUp
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()V addBehaviourGoals
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
net/minecraft/world/entity/monster/EntityPillager net/minecraft/world/entity/monster/Pillager
	b IS_CHARGING_CROSSBOW
	bT SLOT_OFFSET
	bU CROSSBOW_POWER
	bV inventory
	e INVENTORY_SIZE
	a ()V onCrossbowAttackPerformed
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;F)V enchantSpawnedWeapon
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/IProjectile;F)V shootCrossbowProjectile
	a (Lnet/minecraft/world/item/ItemProjectileWeapon;)Z canFireProjectileWeapon
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	ac_ ()Lnet/minecraft/sounds/SoundEffect; getCelebrateSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b (Z)V setChargingCrossbow
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fH ()I getMaxSpawnClusterSize
	gd ()Z isChargingCrossbow
	l (Lnet/minecraft/world/item/ItemStack;)Z wantsItem
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lbyq$a; getArmPose
	s (Lnet/minecraft/world/entity/Entity;)Z isAlliedTo
	t ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()Lnet/minecraft/world/InventorySubcontainer; getInventory
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityRavager net/minecraft/world/entity/monster/Ravager
	b STUN_DURATION
	bT BASE_MOVEMENT_SPEED
	bU ATTACK_MOVEMENT_SPEED
	bV STUNNED_COLOR
	bW STUNNED_COLOR_BLUE
	bX STUNNED_COLOR_GREEN
	bY STUNNED_COLOR_RED
	bZ ATTACK_DURATION
	ca attackTick
	cb stunnedTick
	cc roarTick
	e NO_RAVAGER_AND_ALIVE
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	E (Lnet/minecraft/world/entity/Entity;)Z hasLineOfSight
	R ()V updateControlFlags
	Z ()I getMaxHeadYRot
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/Entity;)V strongKnockback
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	ac_ ()Lnet/minecraft/sounds/SoundEffect; getCelebrateSound
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	e (Lnet/minecraft/world/entity/EntityLiving;)V blockedByShield
	eX ()Z isImmobile
	fW ()Lnet/minecraft/world/phys/AxisAlignedBB; getAttackBoundingBox
	gd ()I getStunnedTick
	ge ()Z canBeLeader
	gn ()I getRoarTick
	go ()V stunEffect
	gp ()V roar
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()I getAttackTick
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityShulker net/minecraft/world/entity/monster/Shulker
	b DATA_ATTACH_FACE_ID
	bT COVERED_ARMOR_MODIFIER
	bU TELEPORT_STEPS
	bV NO_COLOR
	bW DEFAULT_COLOR
	bX MAX_TELEPORT_DISTANCE
	bY OTHER_SHULKER_SCAN_RADIUS
	bZ OTHER_SHULKER_LIMIT
	c DATA_PEEK_ID
	ca PEEK_PER_TICK
	cb FORWARD
	cc currentPeekAmountO
	cd currentPeekAmount
	ce clientOldAttachPosition
	cf clientSideTeleportInterpolation
	cg MAX_LID_OPEN
	d DATA_COLOR_ID
	e COVERED_ARMOR_MODIFIER_UUID
	E (F)F getClientPeekAmount
	F ()Lnet/minecraft/world/entity/ai/control/EntityAIBodyControl; createBodyControl
	F (F)Ljava/util/Optional; getRenderPosition
	G (F)F getPhysicalPeek
	P ()V playAmbientSound
	Y ()I getMaxHeadXRot
	Z ()I getMaxHeadYRot
	a (DDDFFI)V lerpTo
	a (Ljava/lang/Object;)V setVariant
	a (Ljava/util/Optional;)V setVariant
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canStayAt
	a (Lnet/minecraft/core/EnumDirection;)V setAttachFace
	a (Lnet/minecraft/core/EnumDirection;F)Lnet/minecraft/world/phys/AxisAlignedBB; getProgressAabb
	a (Lnet/minecraft/core/EnumDirection;FF)Lnet/minecraft/world/phys/AxisAlignedBB; getProgressDeltaAabb
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;Z)Z startRiding
	a (Lnet/minecraft/world/entity/EnumMoveType;Lnet/minecraft/world/phys/Vec3D;)V move
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	aa ()V stopRiding
	ao ()Lnet/minecraft/world/phys/AxisAlignedBB; makeBoundingBox
	b (I)V setRawPeekAmount
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	bD ()F getPickRadius
	bx ()Z canBeCollidedWith
	c ()Ljava/lang/Object; getVariant
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	do ()Lnet/minecraft/world/phys/Vec3D; getDeltaMovement
	e (DDD)V setPos
	f (Lnet/minecraft/world/phys/Vec3D;)V setDeltaMovement
	g (Lnet/minecraft/world/entity/Entity;)V push
	gd ()Ljava/util/Optional; getVariant
	ge ()Lnet/minecraft/world/item/EnumColor; getColor
	gf ()V findNewAttachment
	gg ()Z updatePeekAmount
	gh ()V onPeekAmountChange
	gi ()Z isClosed
	gj ()V hitByShulkerBullet
	gk ()I getRawPeekAmount
	i (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/EnumDirection; findAttachableSurface
	j (Lnet/minecraft/core/BlockPosition;)Z isPositionBlocked
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Z teleportSomewhere
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()Lnet/minecraft/core/EnumDirection; getAttachFace
	z ()V registerGoals
net/minecraft/world/entity/monster/EntitySilverfish net/minecraft/world/entity/monster/Silverfish
	b friendsGoal
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkSilverfishSpawnRules
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	o (F)V setYBodyRot
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	z ()V registerGoals
net/minecraft/world/entity/monster/EntitySilverfish$PathfinderGoalSilverfishHideInBlock net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal
	i selectedDirection
	j doMerge
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/world/entity/monster/EntitySilverfish$PathfinderGoalSilverfishWakeOthers net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal
	a silverfish
	b lookForFriends
	a ()Z canUse
	e ()V tick
	h ()V notifyHurt
net/minecraft/world/entity/monster/EntitySkeleton net/minecraft/world/entity/monster/Skeleton
	b CONVERSION_TAG
	bT conversionTime
	c TOTAL_CONVERSION_TIME
	d DATA_STRAY_CONVERSION_ID
	e inPowderSnowTime
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a_ ()V defineSynchedData
	b (I)V startFreezeConversion
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dz ()Z canFreeze
	gd ()Z isShaking
	ge ()Z isFreezeConverting
	gf ()V doFreezeConversion
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	t ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setFreezeConverting
net/minecraft/world/entity/monster/EntitySkeletonAbstract net/minecraft/world/entity/monster/AbstractSkeleton
	b bowGoal
	c meleeGoal
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setItemSlot
	a (Lnet/minecraft/world/item/ItemProjectileWeapon;)Z canFireProjectileWeapon
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/EntityArrow; getArrow
	b_ ()V aiStep
	by ()V rideTick
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	gd ()Z isShaking
	l (Lnet/minecraft/world/entity/Entity;)F ridingOffset
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	y ()V reassessWeaponGoal
	z ()V registerGoals
net/minecraft/world/entity/monster/EntitySkeletonStray net/minecraft/world/entity/monster/Stray
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkStraySpawnRules
	b (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/EntityArrow; getArrow
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	t ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
net/minecraft/world/entity/monster/EntitySkeletonWither net/minecraft/world/entity/monster/WitherSkeleton
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentEnchantments
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/EntityArrow; getArrow
	c (Lnet/minecraft/world/effect/MobEffect;)Z canBeAffected
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	l (Lnet/minecraft/world/entity/Entity;)F ridingOffset
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	t ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	z ()V registerGoals
net/minecraft/world/entity/monster/EntitySlime net/minecraft/world/entity/monster/Slime
	b MIN_SIZE
	bS oSquish
	bT ID_SIZE
	bU wasOnGround
	c MAX_SIZE
	d targetSquish
	e squish
	V ()Z shouldDespawnInPeaceful
	Y ()I getMaxHeadXRot
	a (IZ)V setSize
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V remove
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	ag ()Lnet/minecraft/world/entity/EntityTypes; getType
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerTouch
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkSlimeSpawnRules
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	eV ()F getSoundVolume
	fZ ()V decreaseSquish
	fa ()V jumpFromGround
	g (Lnet/minecraft/world/entity/Entity;)V push
	ga ()Z isDealsDamage
	gb ()F getAttackDamage
	gc ()Lnet/minecraft/sounds/SoundEffect; getSquishSound
	gd ()Lnet/minecraft/sounds/SoundEffect; getJumpSound
	ge ()I getSize
	gf ()Z isTiny
	gg ()Z doPlayJumpSound
	i_ ()V refreshDimensions
	j (Lnet/minecraft/world/entity/EntityLiving;)V dealDamage
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()F getSoundPitch
	t ()Lnet/minecraft/core/particles/ParticleParam; getParticleType
	y ()I getJumpDelay
	z ()V registerGoals
net/minecraft/world/entity/monster/EntitySlime$ControllerMoveSlime net/minecraft/world/entity/monster/Slime$SlimeMoveControl
	l yRot
	m jumpDelay
	n slime
	o isAggressive
	a ()V tick
	a (D)V setWantedMovement
	a (FZ)V setDirection
net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeIdle net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal
	a slime
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeNearestPlayer net/minecraft/world/entity/monster/Slime$SlimeAttackGoal
	a slime
	b growTiredTimer
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeRandomDirection net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal
	a slime
	b chosenDegrees
	c nextRandomizeTime
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeRandomJump net/minecraft/world/entity/monster/Slime$SlimeFloatGoal
	a slime
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/monster/EntitySpider net/minecraft/world/entity/monster/Spider
	b DATA_FLAGS_ID
	c SPIDER_SPECIAL_EFFECT_CHANCE
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/Vec3D;)V makeStuckInBlock
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	c (Lnet/minecraft/world/effect/MobEffect;)Z canBeAffected
	c_ ()Z onClimbable
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	l ()V tick
	l (Lnet/minecraft/world/entity/Entity;)F ridingOffset
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	t ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setClimbing
	y ()Z isClimbing
	z ()V registerGoals
net/minecraft/world/entity/monster/EntitySpider$GroupDataSpider net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData
	a effect
	a (Lnet/minecraft/util/RandomSource;)V setRandomEffect
net/minecraft/world/entity/monster/EntitySpider$PathfinderGoalSpiderMeleeAttack net/minecraft/world/entity/monster/Spider$SpiderAttackGoal
	a ()Z canUse
	b ()Z canContinueToUse
net/minecraft/world/entity/monster/EntitySpider$PathfinderGoalSpiderNearestAttackableTarget net/minecraft/world/entity/monster/Spider$SpiderTargetGoal
	a ()Z canUse
net/minecraft/world/entity/monster/EntityStrider net/minecraft/world/entity/monster/Strider
	bT SUFFOCATING_MODIFIER_UUID
	bU SUFFOCATING_MODIFIER
	bW SUFFOCATE_STEERING_MODIFIER
	bX STEERING_MODIFIER
	bY FOOD_ITEMS
	bZ TEMPT_ITEMS
	ca DATA_BOOST_TIME
	cb DATA_SUFFOCATING
	cc DATA_SADDLE_ID
	cd steering
	ce temptGoal
	B ()Z shouldPassengersInheritMalus
	a ()Z boost
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/sounds/SoundCategory;)V equipSaddle
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;)V tickRidden
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/GroupDataEntity;)Lnet/minecraft/world/entity/GroupDataEntity; spawnJockey
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/world/level/material/Fluid;)Z canStandOnFluid
	aK ()F nextStep
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/monster/EntityStrider; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getRiddenInput
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	bM ()Z isOnFire
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkStriderSpawnRules
	cI ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	cN ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	e (Lnet/minecraft/world/entity/player/EntityHuman;)F getRiddenSpeed
	ex ()V dropEquipment
	ff ()Z isSensitiveToWater
	g ()Z isSaddleable
	gd ()V floatStrider
	i ()Z isSaddled
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	r (Lnet/minecraft/world/entity/Entity;)Z canAddPassenger
	s ()Z isSuffocating
	t ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setSuffocating
	y ()Z isBeingTempted
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityVex net/minecraft/world/entity/monster/Vex
	b FLAP_DEGREES_PER_TICK
	bT owner
	bU boundOrigin
	bV hasLimitedLife
	bW limitedLifeTicks
	c TICKS_PER_FLAP
	d DATA_FLAGS_ID
	e FLAG_IS_CHARGING
	a (IZ)V setVexFlag
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/EntityInsentient;)V setOwner
	a (Lnet/minecraft/world/entity/EnumMoveType;Lnet/minecraft/world/phys/Vec3D;)V move
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aR ()Z isFlapping
	a_ ()V defineSynchedData
	b (I)V setLimitedLife
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	bm ()F getLightLevelDependentMagicValue
	c (I)Z getVexFlag
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	gd ()Z isCharging
	i (Lnet/minecraft/core/BlockPosition;)V setBoundOrigin
	l ()V tick
	l (Lnet/minecraft/world/entity/Entity;)F ridingOffset
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Lnet/minecraft/world/entity/EntityInsentient; getOwner
	v ()Lnet/minecraft/world/entity/Entity; getOwner
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setIsCharging
	y ()Lnet/minecraft/core/BlockPosition; getBoundOrigin
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityVindicator net/minecraft/world/entity/monster/Vindicator
	b TAG_JOHNNY
	bT isJohnny
	e DOOR_BREAKING_PREDICATE
	X ()V customServerAiStep
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	ac_ ()Lnet/minecraft/sounds/SoundEffect; getCelebrateSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setCustomName
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lbyq$a; getArmPose
	s (Lnet/minecraft/world/entity/Entity;)Z isAlliedTo
	t ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityWitch net/minecraft/world/entity/monster/Witch
	b SPEED_MODIFIER_DRINKING_UUID
	bT DATA_USING_ITEM
	bU usingTime
	bV healRaidersGoal
	bW attackPlayersGoal
	e SPEED_MODIFIER_DRINKING
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a_ ()V defineSynchedData
	ac_ ()Lnet/minecraft/sounds/SoundEffect; getCelebrateSound
	b (B)V handleEntityEvent
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	e (Lnet/minecraft/world/damagesource/DamageSource;F)F getDamageAfterMagicAbsorb
	ge ()Z canBeLeader
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Z isDrinkingPotion
	t ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y (Z)V setUsingItem
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityZoglin net/minecraft/world/entity/monster/Zoglin
	b SENSOR_TYPES
	bT ATTACK_KNOCKBACK
	bU KNOCKBACK_RESISTANCE
	bV ATTACK_DAMAGE
	bW BABY_ATTACK_DAMAGE
	bX ATTACK_INTERVAL
	bY BABY_ATTACK_INTERVAL
	bZ ATTACK_DURATION
	c MEMORY_TYPES
	ca MOVEMENT_SPEED_WHEN_FIGHTING
	cb SPEED_MULTIPLIER_WHEN_IDLING
	cc attackAnimationRemainingTicks
	d DATA_BABY_ID
	e MAX_HEALTH
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	W ()V sendDebugPackets
	X ()V customServerAiStep
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Z)V setBaby
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	b_ ()V aiStep
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initFightActivity
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dN ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dO ()Lbkg$b; brainProvider
	e (Lnet/minecraft/world/entity/EntityLiving;)V blockedByShield
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	gd ()I getAttackAnimationRemainingTicks
	ge ()V playAngrySound
	gf ()Ljava/util/Optional; findNearestValidAttackTarget
	j (Lnet/minecraft/world/entity/EntityLiving;)Z isTargetable
	k (Lnet/minecraft/world/entity/EntityLiving;)V setAttackTarget
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m_ ()Z isBaby
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Z isAdult
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()V updateActivity
net/minecraft/world/entity/monster/EntityZombie net/minecraft/world/entity/monster/Zombie
	b SPEED_MODIFIER_BABY_UUID
	bT REINFORCEMENT_ATTEMPTS
	bU REINFORCEMENT_RANGE_MAX
	bV REINFORCEMENT_RANGE_MIN
	bW BABY_EYE_HEIGHT_ADJUSTMENT
	bX DATA_SPECIAL_TYPE_ID
	bY DATA_DROWNED_CONVERSION_ID
	bZ BREAK_DOOR_CHANCE
	c SPEED_MODIFIER_BABY
	ca DOOR_BREAKING_PREDICATE
	cb breakDoorGoal
	cc canBreakDoors
	cd inWaterTime
	ce conversionTime
	d DATA_BABY_ID
	e ZOMBIE_LEADER_CHANCE
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	E (F)V handleAttributes
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z killedEntity
	a (Lnet/minecraft/util/RandomSource;)Z getSpawnAsBabyOdds
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Z)V setBaby
	a_ ()V defineSynchedData
	ab_ ()Z isSunSensitive
	b (I)V startUnderWaterConversion
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;)V convertToZombieType
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	ed ()I getExperienceReward
	gd ()Lnet/minecraft/world/item/ItemStack; getSkull
	ge ()Z convertsInWater
	gg ()V doUnderWaterConversion
	gh ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	gk ()Z isUnderWaterConverting
	gl ()Z canBreakDoors
	gm ()V randomizeReinforcementsChance
	j (Lnet/minecraft/world/item/ItemStack;)Z canHoldItem
	k (Lnet/minecraft/world/item/ItemStack;)Z wantsToPickUp
	l ()V tick
	l (Lnet/minecraft/world/entity/Entity;)F ridingOffset
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m_ ()Z isBaby
	s ()V addBehaviourGoals
	t ()Z supportsBreakDoorGoal
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x (Z)V setCanBreakDoors
	y ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	z ()V registerGoals
net/minecraft/world/entity/monster/EntityZombie$GroupDataZombie net/minecraft/world/entity/monster/Zombie$ZombieGroupData
	a isBaby
	b canSpawnJockey
net/minecraft/world/entity/monster/EntityZombieHusk net/minecraft/world/entity/monster/Husk
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkHuskSpawnRules
	ab_ ()Z isSunSensitive
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	gd ()Lnet/minecraft/world/item/ItemStack; getSkull
	ge ()Z convertsInWater
	gg ()V doUnderWaterConversion
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()Lnet/minecraft/sounds/SoundEffect; getStepSound
net/minecraft/world/entity/monster/EntityZombieVillager net/minecraft/world/entity/monster/ZombieVillager
	b LOGGER
	bX VILLAGER_CONVERSION_WAIT_MIN
	bY VILLAGER_CONVERSION_WAIT_MAX
	bZ MAX_SPECIAL_BLOCKS_COUNT
	c DATA_CONVERTING_ID
	ca SPECIAL_BLOCK_RADIUS
	cb villagerConversionTime
	cc conversionStarter
	cd gossips
	ce tradeOffers
	cf villagerXp
	d DATA_VILLAGER_DATA
	a (Ljava/util/UUID;I)V startConverting
	a (Lnet/minecraft/nbt/NBTBase;)V setGossips
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/npc/VillagerData;)V setVillagerData
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (I)V setVillagerXp
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	c (Lnet/minecraft/nbt/NBTTagCompound;)V setTradeOffers
	c (Lnet/minecraft/server/level/WorldServer;)V finishConversion
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eW ()F getVoicePitch
	gd ()Lnet/minecraft/world/item/ItemStack; getSkull
	ge ()Z convertsInWater
	gn ()Z isConverting
	go ()Lnet/minecraft/world/entity/npc/VillagerData; getVillagerData
	gp ()I getVillagerXp
	gq ()I getConversionProgress
	h (D)Z removeWhenFarAway
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()Lnet/minecraft/sounds/SoundEffect; getStepSound
net/minecraft/world/entity/monster/ICrossbow net/minecraft/world/entity/monster/CrossbowAttackMob
	a ()V onCrossbowAttackPerformed
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/projectile/IProjectile;FF)V shootCrossbowProjectile
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/IProjectile;F)V shootCrossbowProjectile
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/Vec3D;F)Lorg/joml/Vector3f; getProjectileShotVector
	b (Lnet/minecraft/world/entity/EntityLiving;F)V performCrossbowAttack
	b (Z)V setChargingCrossbow
	q ()Lnet/minecraft/world/entity/EntityLiving; getTarget
net/minecraft/world/entity/monster/IMonster net/minecraft/world/entity/monster/Enemy
	f_ XP_REWARD_NONE
	g_ XP_REWARD_SMALL
	h_ XP_REWARD_MEDIUM
	i_ XP_REWARD_LARGE
	j_ XP_REWARD_HUGE
	k_ XP_REWARD_BOSS
net/minecraft/world/entity/monster/IRangedEntity net/minecraft/world/entity/monster/RangedAttackMob
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
net/minecraft/world/entity/monster/hoglin/EntityHoglin net/minecraft/world/entity/monster/hoglin/Hoglin
	bT SENSOR_TYPES
	bU MEMORY_TYPES
	bW DATA_IMMUNE_TO_ZOMBIFICATION
	bX PROBABILITY_OF_SPAWNING_AS_BABY
	bY MAX_HEALTH
	bZ MOVEMENT_SPEED_WHEN_FIGHTING
	ca ATTACK_KNOCKBACK
	cb KNOCKBACK_RESISTANCE
	cc ATTACK_DAMAGE
	cd BABY_ATTACK_DAMAGE
	ce CONVERSION_TIME
	cf attackAnimationRemainingTicks
	cg timeInOverworld
	ch cannotBeHunted
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	W ()V sendDebugPackets
	X ()V customServerAiStep
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aL ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	aM ()Lnet/minecraft/sounds/SoundEffect; getSwimSplashSound
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/sounds/SoundEffect;)V playSoundEvent
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	c (Lnet/minecraft/server/level/WorldServer;)V finishConversion
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkHoglinSpawnRules
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dN ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dO ()Lbkg$b; brainProvider
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	e (Lnet/minecraft/world/entity/EntityLiving;)V blockedByShield
	eb ()Z shouldDropExperience
	ed ()I getExperienceReward
	gd ()I getAttackAnimationRemainingTicks
	ge ()Z canFallInLove
	gj ()Z canBeHunted
	gk ()Z isImmuneToZombification
	h (D)Z removeWhenFarAway
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m ()V ageBoundaryReached
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Z isAdult
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setImmuneToZombification
	x (Z)V setCannotBeHunted
	y ()Z isConverting
net/minecraft/world/entity/monster/hoglin/HoglinAI net/minecraft/world/entity/monster/hoglin/HoglinAi
	a REPELLENT_DETECTION_RANGE_HORIZONTAL
	b REPELLENT_DETECTION_RANGE_VERTICAL
	c RETREAT_DURATION
	d ATTACK_DURATION
	e DESIRED_DISTANCE_FROM_PIGLIN_WHEN_IDLING
	f DESIRED_DISTANCE_FROM_PIGLIN_WHEN_RETREATING
	g ATTACK_INTERVAL
	h BABY_ATTACK_INTERVAL
	i REPELLENT_PACIFY_TIME
	j ADULT_FOLLOW_RANGE
	k SPEED_MULTIPLIER_WHEN_AVOIDING_REPELLENT
	l SPEED_MULTIPLIER_WHEN_RETREATING
	m SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	n SPEED_MULTIPLIER_WHEN_IDLING
	o SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorGateSingle; createIdleMovementBehaviors
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)V updateActivity
	a (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/core/BlockPosition;)Z isPosNearNearestRepellent
	a (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V onHitTarget
	a (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEffect; getSoundForActivity
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	b (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Ljava/util/Optional; getSoundForCurrentActivity
	b (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V wasHurtBy
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	c (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Z isPacified
	c (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V broadcastRetreat
	d (Lnet/minecraft/world/entity/ai/BehaviorController;)V initFightActivity
	d (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Ljava/util/Optional; findNearestValidAttackTarget
	d (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V retreatFromNearestTarget
	e (Lnet/minecraft/world/entity/ai/BehaviorController;)V initRetreatActivity
	e (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Z wantsToStopFleeing
	e (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V setAvoidTarget
	f (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Z piglinsOutnumberHoglins
	f (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V maybeRetaliate
	g (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Ljava/util/List; getVisibleAdultHoglins
	g (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V setAttackTarget
	h (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Z isNearRepellent
	h (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V broadcastAttackTarget
	i (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Z isBreeding
	i (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V setAttackTargetIfCloserThanCurrent
net/minecraft/world/entity/monster/hoglin/IOglin net/minecraft/world/entity/monster/hoglin/HoglinBase
	l_ ATTACK_ANIMATION_DURATION
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z hurtAndThrowTarget
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)V throwTarget
	gd ()I getAttackAnimationRemainingTicks
net/minecraft/world/entity/monster/piglin/BehaviorAdmireTimeout net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem
	a (II)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/monster/piglin/BehaviorHuntHoglin net/minecraft/world/entity/monster/piglin/StartHuntingHoglin
	a ()Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)Z hasHuntedRecently
net/minecraft/world/entity/monster/piglin/BehaviorRememberHuntedHoglin net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/monster/piglin/BehaviorStartAdmiringItem net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen
	a (I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/monster/piglin/BehaviorStopAdmiring net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/monster/piglin/BehaviorStopAdmiringItem net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway
	a (I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/monster/piglin/EntityPiglin net/minecraft/world/entity/monster/piglin/Piglin
	bT SENSOR_TYPES
	bU MEMORY_TYPES
	bV DATA_BABY_ID
	bW DATA_IS_CHARGING_CROSSBOW
	bX DATA_IS_DANCING
	bY SPEED_MODIFIER_BABY_UUID
	bZ SPEED_MODIFIER_BABY
	ca MAX_HEALTH
	cb MOVEMENT_SPEED_WHEN_FIGHTING
	cc ATTACK_DAMAGE
	cd CROSSBOW_POWER
	ce CHANCE_OF_WEARING_EACH_ARMOUR_ITEM
	cf MAX_PASSENGERS_ON_ONE_HOGLIN
	cg PROBABILITY_OF_SPAWNING_AS_BABY
	ch BABY_EYE_HEIGHT_ADJUSTMENT
	ci PROBABILITY_OF_SPAWNING_WITH_CROSSBOW_INSTEAD_OF_SWORD
	cj inventory
	ck cannotHunt
	V ()Z shouldDespawnInPeaceful
	X ()V customServerAiStep
	a ()V onCrossbowAttackPerformed
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/world/entity/Entity;Z)Z startRiding
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/IProjectile;F)V shootCrossbowProjectile
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/util/RandomSource;)V maybeWearArmor
	a (Lnet/minecraft/world/item/ItemProjectileWeapon;)Z canFireProjectileWeapon
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Z)V setBaby
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/sounds/SoundEffect;)V playSoundEvent
	b (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/entity/Entity; getTopPassenger
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkPiglinSpawnRules
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z canReplaceCurrentItem
	b (Z)V setChargingCrossbow
	c (Lnet/minecraft/server/level/WorldServer;)V finishConversion
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dN ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dO ()Lbkg$b; brainProvider
	ed ()I getExperienceReward
	gf ()Lnet/minecraft/world/entity/monster/piglin/EntityPiglinArmPose; getArmPose
	gh ()V playConvertedSound
	gk ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	gl ()Z isDancing
	gm ()Lnet/minecraft/world/item/ItemStack; createSpawnWeapon
	gn ()Z isChargingCrossbow
	h (D)Z removeWhenFarAway
	k (Lnet/minecraft/world/item/ItemStack;)Z wantsToPickUp
	l (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; addToInventory
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z canAddToInventory
	m_ ()Z isBaby
	n (Lnet/minecraft/world/item/ItemStack;)V holdInMainHand
	o (Lnet/minecraft/world/item/ItemStack;)V holdInOffHand
	p (Lnet/minecraft/world/item/ItemStack;)Z canReplaceCurrentItem
	s ()Z canHunt
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x (Z)V setDancing
	y ()Lnet/minecraft/world/InventorySubcontainer; getInventory
	y (Z)V setCannotHunt
net/minecraft/world/entity/monster/piglin/EntityPiglinAbstract net/minecraft/world/entity/monster/piglin/AbstractPiglin
	b DATA_IMMUNE_TO_ZOMBIFICATION
	c CONVERSION_TIME
	d PIGLIN_EYE_HEIGHT
	e timeInOverworld
	P ()V playAmbientSound
	W ()V sendDebugPackets
	X ()V customServerAiStep
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	c (Lnet/minecraft/server/level/WorldServer;)V finishConversion
	gd ()Z isConverting
	ge ()Z isAdult
	gf ()Lnet/minecraft/world/entity/monster/piglin/EntityPiglinArmPose; getArmPose
	gg ()Z isHoldingMeleeWeapon
	gh ()V playConvertedSound
	l (Lnet/minecraft/world/entity/Entity;)F ridingOffset
	q ()Lnet/minecraft/world/entity/EntityLiving; getTarget
	s ()Z canHunt
	t ()Z isImmuneToZombification
	w (Z)V setImmuneToZombification
	y ()V applyOpenDoorsAbility
net/minecraft/world/entity/monster/piglin/EntityPiglinArmPose net/minecraft/world/entity/monster/piglin/PiglinArmPose
	a ATTACKING_WITH_MELEE_WEAPON
	b CROSSBOW_HOLD
	c CROSSBOW_CHARGE
	d ADMIRING_ITEM
	e DANCING
	f DEFAULT
	g $VALUES
	a ()[Lnet/minecraft/world/entity/monster/piglin/EntityPiglinArmPose; $values
net/minecraft/world/entity/monster/piglin/EntityPiglinBrute net/minecraft/world/entity/monster/piglin/PiglinBrute
	bT SENSOR_TYPES
	bU MEMORY_TYPES
	bV MAX_HEALTH
	bW MOVEMENT_SPEED_WHEN_FIGHTING
	bX ATTACK_DAMAGE
	X ()V customServerAiStep
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dN ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dO ()Lbkg$b; brainProvider
	gf ()Lnet/minecraft/world/entity/monster/piglin/EntityPiglinArmPose; getArmPose
	gh ()V playConvertedSound
	gk ()V playAngrySound
	k (Lnet/minecraft/world/item/ItemStack;)Z wantsToPickUp
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Z canHunt
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
net/minecraft/world/entity/monster/piglin/PiglinAI net/minecraft/world/entity/monster/piglin/PiglinAi
	A AVOID_ZOMBIFIED_DURATION
	B BABY_AVOID_NEMESIS_DURATION
	C PROBABILITY_OF_CELEBRATION_DANCE
	D SPEED_MULTIPLIER_WHEN_AVOIDING
	E SPEED_MULTIPLIER_WHEN_RETREATING
	F SPEED_MULTIPLIER_WHEN_MOUNTING
	G SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM
	H SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION
	I SPEED_MULTIPLIER_WHEN_DANCING
	J SPEED_MULTIPLIER_WHEN_IDLING
	a REPELLENT_DETECTION_RANGE_HORIZONTAL
	b REPELLENT_DETECTION_RANGE_VERTICAL
	c BARTERING_ITEM
	d TIME_BETWEEN_HUNTS
	e PLAYER_ANGER_RANGE
	f ANGER_DURATION
	g ADMIRE_DURATION
	h MAX_DISTANCE_TO_WALK_TO_ITEM
	i MAX_TIME_TO_WALK_TO_ITEM
	j HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM
	k CELEBRATION_TIME
	l BABY_FLEE_DURATION_AFTER_GETTING_HIT
	m HIT_BY_PLAYER_MEMORY_TIMEOUT
	n MAX_WALK_DISTANCE_TO_START_RIDING
	o RIDE_START_INTERVAL
	p RIDE_DURATION
	q RETREAT_DURATION
	r MELEE_ATTACK_COOLDOWN
	s EAT_COOLDOWN
	t DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING
	u MAX_LOOK_DIST
	v MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM
	w INTERACTION_RANGE
	x MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW
	y SPEED_WHEN_STRAFING_BACK_FROM_TARGET
	z DESIRED_DISTANCE_FROM_ZOMBIFIED
	a ()Lcom/google/common/collect/ImmutableList; createLookBehaviors
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isWearingGold
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z wantsToDance
	a (Lnet/minecraft/world/entity/EntityTypes;)Z isZombified
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	a (Lnet/minecraft/world/entity/item/EntityItem;)Lnet/minecraft/world/item/ItemStack; removeOneItemFromItemEntity
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)V updateActivity
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Ljava/util/List;)V throwItems
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Ljava/util/List;Lnet/minecraft/world/phys/Vec3D;)V throwItemsTowardPos
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/util/RandomSource;)V initMemories
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/Entity;)Z wantsToStopRiding
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/EntityLiving;)V wasHurtBy
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/player/EntityHuman;Ljava/util/List;)V throwItemsTowardPlayer
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEffect; getSoundForActivity
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/item/ItemStack;)Z wantsToPickup
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Z)V stopHoldingOffHandItem
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)V broadcastUniversalAnger
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;Lnet/minecraft/world/entity/EntityLiving;)V maybeRetaliate
	a (Lnet/minecraft/world/entity/player/EntityHuman;Z)V angerNearbyPiglins
	a (Lnet/minecraft/world/item/ItemStack;)Z isLovedItem
	b ()Lnet/minecraft/world/entity/ai/behavior/BehaviorGateSingle; createIdleLookBehaviors
	b (Lnet/minecraft/world/entity/EntityLiving;)Z isPlayerHoldingLovedItem
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)V cancelAdmiring
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Ljava/util/List;)V throwItemsTowardRandomPos
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/EntityLiving;)Z isNearestValidAttackTarget
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/ai/BehaviorController;)V initFightActivity
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/item/ItemStack;)Z canAdmire
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)Ljava/util/Optional; getNearestVisibleTargetablePlayer
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;Lnet/minecraft/world/entity/EntityLiving;)V broadcastAngerTarget
	b (Lnet/minecraft/world/item/ItemStack;)Z isBarterCurrency
	c ()Lnet/minecraft/world/entity/ai/behavior/BehaviorGateSingle; createIdleMovementBehaviors
	c (Lnet/minecraft/world/entity/EntityLiving;)Z hasCrossbow
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCelebrateActivity
	c (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Ljava/util/Optional; getSoundForCurrentActivity
	c (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/EntityLiving;)V broadcastRetreat
	c (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/item/ItemStack;)V holdInOffhand
	c (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)V dontKillAnyMoreHoglinsForAWhile
	c (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;Lnet/minecraft/world/entity/EntityLiving;)V setAngerTarget
	c (Lnet/minecraft/world/item/ItemStack;)Z isFood
	d ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; avoidRepellent
	d (Lnet/minecraft/world/entity/EntityLiving;)V admireGoldItem
	d (Lnet/minecraft/world/entity/ai/BehaviorController;)V initAdmireItemActivity
	d (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Ljava/util/List; getVisibleAdultPiglins
	d (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/EntityLiving;)V retreatFromNearestTarget
	d (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/item/ItemStack;)V putInInventory
	d (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)Z isIdle
	d (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;Lnet/minecraft/world/entity/EntityLiving;)V setAngerTargetToNearestTargetablePlayerIfFound
	e ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; babyAvoidNemesis
	e (Lnet/minecraft/world/entity/EntityLiving;)Z seesPlayerHoldingLovedItem
	e (Lnet/minecraft/world/entity/ai/BehaviorController;)V initRetreatActivity
	e (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Ljava/util/Optional; getAvoidTarget
	e (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/EntityLiving;)V setAvoidTargetAndDontHuntForAWhile
	e (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)Ljava/util/List; getAdultPiglins
	e (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;Lnet/minecraft/world/entity/EntityLiving;)V setAngerTargetIfCloserThanCurrent
	f ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; avoidZombified
	f (Lnet/minecraft/world/entity/EntityLiving;)Z doesntSeeAnyPlayerHoldingLovedItem
	f (Lnet/minecraft/world/entity/ai/BehaviorController;)V initRideHoglinActivity
	f (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isBabyRidingBaby
	f (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)Ljava/util/Optional; getAngerTarget
	g ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; babySometimesRideBabyHoglin
	g (Lnet/minecraft/world/entity/EntityLiving;)Z wasHurtRecently
	g (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Ljava/util/List; getBarterResponseItems
	h (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isNearZombified
	i (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Ljava/util/Optional; findNearestValidAttackTarget
	j (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isNearAvoidTarget
	k (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)V stopWalking
	l (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z wantsToStopFleeing
	m (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z piglinsEqualOrOutnumberHoglins
	n (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z hoglinsOutnumberPiglins
	o (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)V eat
	p (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Lnet/minecraft/world/phys/Vec3D; getRandomNearbyPos
	q (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z hasEatenRecently
	r (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isAdmiringItem
	s (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isNearRepellent
	t (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isAdmiringDisabled
	u (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isHoldingItemInOffHand
	v (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isNotHoldingLovedItemInOffHand
net/minecraft/world/entity/monster/piglin/PiglinBruteAI net/minecraft/world/entity/monster/piglin/PiglinBruteAi
	a ANGER_DURATION
	b MELEE_ATTACK_COOLDOWN
	c ACTIVITY_SOUND_LIKELIHOOD_PER_TICK
	d MAX_LOOK_DIST
	e INTERACTION_RANGE
	f TARGETING_RANGE
	g SPEED_MULTIPLIER_WHEN_IDLING
	h HOME_CLOSE_ENOUGH_DISTANCE
	i HOME_TOO_FAR_DISTANCE
	j HOME_STROLL_AROUND_DISTANCE
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorGateSingle; createIdleLookBehaviors
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)Ljava/util/Optional; findNearestValidAttackTarget
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;Lnet/minecraft/world/entity/EntityLiving;)Z isNearestValidAttackTarget
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; getTargetIfWithinRange
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;)V initMemories
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;Lnet/minecraft/world/entity/EntityLiving;)V wasHurtBy
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	b ()Lnet/minecraft/world/entity/ai/behavior/BehaviorGateSingle; createIdleMovementBehaviors
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;)V updateActivity
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;Lnet/minecraft/world/entity/EntityLiving;)V setAngerTarget
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	c (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;)V maybePlayActivitySound
	c (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	d (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;)V playActivitySound
	d (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;Lnet/minecraft/world/entity/ai/BehaviorController;)V initFightActivity
net/minecraft/world/entity/npc/EntityVillager net/minecraft/world/entity/npc/Villager
	bV BREEDING_FOOD_THRESHOLD
	bW FOOD_POINTS
	bX SPEED_MODIFIER
	bY POI_MEMORIES
	bZ LOGGER
	ca DATA_VILLAGER_DATA
	cb TRADES_PER_LEVEL
	cc WANTED_ITEMS
	cd MAX_GOSSIP_TOPICS
	ce GOSSIP_COOLDOWN
	cf GOSSIP_DECAY_INTERVAL
	cg REPUTATION_CHANGE_PER_EVENT
	ch HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS
	ci HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM
	cj TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING
	ck updateMerchantTimer
	cl increaseProfessionLevelOnUpdate
	cm lastTradedPlayer
	cn chasing
	co foodLevel
	cp gossips
	cq lastGossipTime
	cr lastGossipDecayTime
	cs villagerXp
	ct lastRestockGameTime
	cu numberOfRestocksToday
	cv lastRestockCheckDayTime
	cw assignProfessionWhenSpawned
	cx MEMORY_TYPES
	cy SENSOR_TYPES
	V_ ()Z canBreed
	W ()V sendDebugPackets
	X ()V customServerAiStep
	a (J)Z wantsToSpawnGolem
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/nbt/NBTBase;)V setGossips
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;JI)V spawnGolemIfNeeded
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V gossip
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/entity/Entity;)V tellWitnessesThatIWasMurdered
	a (Lnet/minecraft/world/entity/EntityLiving;)V setLastHurtByMob
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)V registerBrainGoals
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V releasePoi
	a (Lnet/minecraft/world/entity/ai/village/ReputationEvent;Lnet/minecraft/world/entity/Entity;)V onReputationEventFrom
	a (Lnet/minecraft/world/entity/npc/VillagerData;)V setVillagerData
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (J)Z golemSpawnConditionsMet
	b (Lnet/minecraft/core/BlockPosition;)V startSleeping
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/npc/EntityVillager; getBreedOffspring
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/item/trading/MerchantRecipe;)V rewardTradeXp
	b (Lnet/minecraft/world/item/trading/MerchantRecipeList;)V setOffers
	c (Lnet/minecraft/server/level/WorldServer;)V refreshBrain
	cn ()Lnet/minecraft/network/chat/IChatBaseComponent; getTypeName
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dN ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dO ()Lbkg$b; brainProvider
	f (Lnet/minecraft/world/entity/player/EntityHuman;)V setTradingPlayer
	fD ()V stopSleeping
	g (Lnet/minecraft/world/entity/player/EntityHuman;)I getPlayerReputation
	gA ()V resetSpecialPrices
	gB ()V resendOffersToTradingPlayer
	gC ()Z needsToRestock
	gD ()Z allowedToRestock
	gE ()V catchUpDemand
	gF ()V updateDemand
	gG ()V releaseAllPois
	gH ()Z hungry
	gI ()V eatUntilFull
	gJ ()Z shouldIncreaseLevel
	gK ()V increaseMerchantCareer
	gL ()I countFoodPointsInInventory
	gM ()V maybeDecayGossip
	gN ()V resetNumberOfRestocks
	gj ()V stopTrading
	gk ()V updateTrades
	gl ()Z isClientSide
	gm ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	gn ()Z assignProfessionWhenSpawned
	go ()Lnet/minecraft/world/entity/npc/VillagerData; getVillagerData
	gp ()Z canRestock
	gq ()V restock
	gr ()Z shouldRestock
	gs ()V playWorkSound
	gt ()Z isChasing
	gu ()V eatAndDigestFood
	gv ()Z hasExcessFood
	gw ()Z wantsMoreFood
	gx ()Z hasFarmSeeds
	gy ()Lnet/minecraft/world/entity/ai/gossip/Reputation; getGossips
	gz ()V setUnhappy
	h (D)Z removeWhenFarAway
	h (Lnet/minecraft/world/entity/player/EntityHuman;)V startTrading
	i (Lnet/minecraft/world/entity/player/EntityHuman;)V updateSpecialPrices
	k (Lnet/minecraft/world/item/ItemStack;)Z wantsToPickUp
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m ()V ageBoundaryReached
	t ()I getVillagerXp
	u (I)V setVillagerXp
	v (I)V digestFood
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x (Z)V setChasing
net/minecraft/world/entity/npc/EntityVillagerAbstract net/minecraft/world/entity/npc/AbstractVillager
	bT VILLAGER_SLOT_OFFSET
	bU offers
	bV DATA_UNHAPPY_COUNTER
	bW VILLAGER_INVENTORY_SIZE
	bX tradingPlayer
	bY inventory
	a (Lnet/minecraft/core/particles/ParticleParam;)V addParticlesAroundSelf
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/item/trading/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/world/item/trading/MerchantRecipeList;)V overrideOffers
	a (Lnet/minecraft/world/item/trading/MerchantRecipeList;[Lnet/minecraft/world/entity/npc/VillagerTrades$IMerchantRecipeOption;I)V addOffersFromItemListings
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/entity/Entity; changeDimension
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/item/trading/MerchantRecipe;)V rewardTradeXp
	f (Lnet/minecraft/world/entity/player/EntityHuman;)V setTradingPlayer
	gd ()Lnet/minecraft/world/entity/player/EntityHuman; getTradingPlayer
	ge ()Z isTrading
	gf ()Lnet/minecraft/world/item/trading/MerchantRecipeList; getOffers
	gg ()Z showProgressBar
	gh ()Lnet/minecraft/sounds/SoundEffect; getNotifyTradeSound
	gi ()V playCelebrateSound
	gj ()V stopTrading
	gk ()V updateTrades
	gl ()Z isClientSide
	l (Lnet/minecraft/world/item/ItemStack;)V notifyTradeUpdated
	q (F)Lnet/minecraft/world/phys/Vec3D; getRopeHoldPosition
	s ()I getUnhappyCounter
	s (I)V setUnhappyCounter
	t ()I getVillagerXp
	t (I)V overrideXp
	w (Z)Lnet/minecraft/sounds/SoundEffect; getTradeUpdatedSound
	y ()Lnet/minecraft/world/InventorySubcontainer; getInventory
net/minecraft/world/entity/npc/EntityVillagerTrader net/minecraft/world/entity/npc/WanderingTrader
	bV NUMBER_OF_TRADE_OFFERS
	bW wanderTarget
	bX despawnDelay
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/item/trading/MerchantRecipe;)V rewardTradeXp
	b_ ()V aiStep
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEffect; getDrinkingSound
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	gg ()Z showProgressBar
	gh ()Lnet/minecraft/sounds/SoundEffect; getNotifyTradeSound
	gk ()V updateTrades
	gm ()I getDespawnDelay
	gn ()V experimentalUpdateTrades
	go ()V maybeDespawn
	gq ()Lnet/minecraft/core/BlockPosition; getWanderTarget
	h (D)Z removeWhenFarAway
	i (Lnet/minecraft/core/BlockPosition;)V setWanderTarget
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	u (I)V setDespawnDelay
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)Lnet/minecraft/sounds/SoundEffect; getTradeUpdatedSound
	z ()V registerGoals
net/minecraft/world/entity/npc/MerchantWrapper net/minecraft/world/entity/npc/ClientSideMerchant
	a source
	b offers
	c xp
	a (Lnet/minecraft/world/item/trading/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/world/item/trading/MerchantRecipeList;)V overrideOffers
	f (Lnet/minecraft/world/entity/player/EntityHuman;)V setTradingPlayer
	gd ()Lnet/minecraft/world/entity/player/EntityHuman; getTradingPlayer
	gf ()Lnet/minecraft/world/item/trading/MerchantRecipeList; getOffers
	gg ()Z showProgressBar
	gh ()Lnet/minecraft/sounds/SoundEffect; getNotifyTradeSound
	gl ()Z isClientSide
	l (Lnet/minecraft/world/item/ItemStack;)V notifyTradeUpdated
	t ()I getVillagerXp
	t (I)V overrideXp
net/minecraft/world/entity/npc/MobSpawnerCat net/minecraft/world/entity/npc/CatSpawner
	a TICK_DELAY
	b nextTick
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;)I spawnCat
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)I spawnInVillage
	a (Lnet/minecraft/server/level/WorldServer;ZZ)I tick
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)I spawnInHut
net/minecraft/world/entity/npc/MobSpawnerTrader net/minecraft/world/entity/npc/WanderingTraderSpawner
	a DEFAULT_SPAWN_DELAY
	b DEFAULT_TICK_DELAY
	c MIN_SPAWN_CHANCE
	d MAX_SPAWN_CHANCE
	e SPAWN_CHANCE_INCREASE
	f SPAWN_ONE_IN_X_CHANCE
	g NUMBER_OF_SPAWN_ATTEMPTS
	h random
	i serverLevelData
	j tickDelay
	k spawnDelay
	l spawnChance
	a (Lnet/minecraft/server/level/WorldServer;)Z spawn
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillagerTrader;I)V tryToSpawnLlamaFor
	a (Lnet/minecraft/server/level/WorldServer;ZZ)I tick
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z hasEnoughSpace
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/core/BlockPosition; findSpawnPositionNear
net/minecraft/world/entity/npc/NPC net/minecraft/world/entity/npc/Npc
net/minecraft/world/entity/npc/VillagerTrades$IMerchantRecipeOption net/minecraft/world/entity/npc/VillagerTrades$ItemListing
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
net/minecraft/world/entity/player/AutoRecipeStackManager net/minecraft/world/entity/player/StackedContents
	a contents
	b EMPTY
	a ()V clear
	a (I)Lnet/minecraft/world/item/ItemStack; fromStackingIndex
	a (II)I take
	a (Lnet/minecraft/world/item/ItemStack;)V accountSimpleStack
	a (Lnet/minecraft/world/item/ItemStack;I)V accountStack
	a (Lnet/minecraft/world/item/crafting/IRecipe;Lit/unimi/dsi/fastutil/ints/IntList;)Z canCraft
	a (Lnet/minecraft/world/item/crafting/IRecipe;Lit/unimi/dsi/fastutil/ints/IntList;I)Z canCraft
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;ILit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;Lit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
	b (I)Z has
	b (II)V put
	b (Lnet/minecraft/world/item/ItemStack;)V accountStack
	c (Lnet/minecraft/world/item/ItemStack;)I getStackingIndex
net/minecraft/world/entity/player/EntityHuman net/minecraft/world/entity/player/Player
	b LOGGER
	bA MAX_NAME_LENGTH
	bB DEFAULT_MAIN_HAND
	bC DEFAULT_MODEL_CUSTOMIZATION
	bD MAX_HEALTH
	bE SLEEP_DURATION
	bF WAKE_UP_DURATION
	bG ENDER_SLOT_OFFSET
	bH CROUCH_BB_HEIGHT
	bI SWIMMING_BB_WIDTH
	bJ SWIMMING_BB_HEIGHT
	bK DEFAULT_EYE_HEIGHT
	bL STANDING_DIMENSIONS
	bM DATA_PLAYER_MODE_CUSTOMISATION
	bN DATA_PLAYER_MAIN_HAND
	bO DATA_SHOULDER_LEFT
	bP DATA_SHOULDER_RIGHT
	bQ enderChestInventory
	bR inventoryMenu
	bS containerMenu
	bT foodData
	bU jumpTriggerTime
	bV oBob
	bW bob
	bX takeXpDelay
	bY xCloakO
	bZ yCloakO
	c POSES
	ca zCloakO
	cb xCloak
	cc yCloak
	cd zCloak
	ce wasUnderwater
	cf experienceLevel
	cg totalExperience
	ch experienceProgress
	ci enchantmentSeed
	cj defaultFlySpeed
	ck fishing
	cl hurtDir
	cm timeEntitySatOnShoulder
	cn inventory
	co sleepCounter
	cp abilities
	cq lastLevelUpTime
	cr gameProfile
	cs reducedDebugInfo
	ct lastItemInMainHand
	cu cooldowns
	cv lastDeathLocation
	d FLY_ACHIEVEMENT_SPEED
	e DATA_PLAYER_ABSORPTION_ID
	f DATA_SCORE_ID
	A (F)V causeFoodExhaustion
	B (F)F getAttackStrengthScale
	M_ ()Z isSpectator
	N_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	W ()Z isTextFilteringEnabled
	Y ()Ljava/util/Optional; getWardenSpawnTracker
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (ILnet/minecraft/world/item/trading/MerchantRecipeList;IIZZ)V sendMerchantOffers
	a (Ljava/util/Collection;)I awardRecipes
	a (Ljava/util/Optional;)V setLastDeathLocation
	a (Lnet/minecraft/core/BlockPosition;)Lcom/mojang/datafixers/util/Either; startSleepInBed
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/item/ItemStack;)Z mayUseItemAt
	a (Lnet/minecraft/core/particles/ParticleParam;)V addParticlesAroundSelf
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/network/chat/IChatMutableComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; decorateDisplayNameComponent
	a (Lnet/minecraft/resources/MinecraftKey;)V awardStat
	a (Lnet/minecraft/resources/MinecraftKey;I)V awardStat
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;FZZ)Ljava/util/Optional; findRespawnPositionAndUseSpawnBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z killedEntity
	a (Lnet/minecraft/sounds/SoundEffect;FF)V playSound
	a (Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/stats/Statistic;)V resetStat
	a (Lnet/minecraft/stats/Statistic;I)V awardStat
	a (Lnet/minecraft/world/ITileInventory;)Ljava/util/OptionalInt; openMenu
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V remove
	a (Lnet/minecraft/world/entity/Entity;)V crit
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactOn
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Z doesEmitEquipEvent
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setItemSlot
	a (Lnet/minecraft/world/entity/EnumMainHand;)V setMainArm
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;Lnet/minecraft/world/IInventory;)V openHorseInventory
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canHarmPlayer
	a (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z isModelPartShown
	a (Lnet/minecraft/world/item/ItemStack;I)V onEnchantmentPerformed
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;)V openItemGui
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V updateTutorialInventoryAction
	a (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/entity/item/EntityItem; drop
	a (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/EntityItem; drop
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;Ljava/util/List;)V triggerRecipeCrafted
	a (Lnet/minecraft/world/level/CommandBlockListenerAbstract;)V openMinecartCommandBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/EnumGamemode;)Z blockActionRestricted
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; eat
	a (Lnet/minecraft/world/level/block/entity/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntityJigsaw;)V openJigsawBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;Z)V openTextEdit
	a (Lnet/minecraft/world/level/block/entity/TileEntityStructure;)V openStructureBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/Vec3D;)V makeStuckInBlock
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/EnumMoveType;)Lnet/minecraft/world/phys/Vec3D; maybeBackOffFromEdge
	a (ZZ)V stopSleepInBed
	a ([Lnet/minecraft/resources/MinecraftKey;)V awardRecipesByKey
	aJ ()F getBlockSpeedFactor
	aL ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	aM ()Lnet/minecraft/sounds/SoundEffect; getSwimSplashSound
	aN ()Lnet/minecraft/sounds/SoundEffect; getSwimHighSpeedSplashSound
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	av ()I getPortalWaitTime
	b (B)V handleEntityEvent
	b (Ljava/util/Collection;)I resetRecipes
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/stats/Statistic;)V awardStat
	b (Lnet/minecraft/world/damagesource/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/world/damagesource/DamageSource;F)V hurtArmor
	b (Lnet/minecraft/world/entity/Entity;)V magicCrit
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	bB ()V removeVehicle
	bI ()I getDimensionChangingDelay
	bJ ()Ljava/lang/Iterable; getHandSlots
	bK ()Ljava/lang/Iterable; getArmorSlots
	bY ()Z isSwimming
	b_ ()V aiStep
	bd ()V updateSwimming
	bg ()V doWaterSplashEffect
	bq ()Z canBeHitByProjectile
	by ()V rideTick
	c (I)V giveExperienceLevels
	c (Lnet/minecraft/nbt/NBTTagCompound;)V playShoulderEntityAmbientSound
	c (Lnet/minecraft/world/damagesource/DamageSource;F)V hurtHelmet
	c (Lnet/minecraft/world/entity/Entity;)V touch
	c (Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/item/ItemStack; getItemBySlot
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldRemoveSoulSpeed
	cB ()Z shouldShowName
	cx ()Ljava/lang/String; getScoreboardName
	cy ()Z isPushedByFluid
	d (I)V giveExperiencePoints
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	d (Lnet/minecraft/world/entity/Entity;)V attack
	d (Lnet/minecraft/world/entity/EntityLiving;)V blockUsingShield
	d (Lnet/minecraft/world/level/block/state/IBlockData;)F getDestroySpeed
	dE ()Z canSprint
	dJ ()Z shouldBeSaved
	dK ()Z isAlwaysTicking
	dT ()Z onSoulSpeedBlock
	dZ ()Z isAffectedByFluids
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	db ()I getFireImmuneTicks
	e (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasCorrectToolForDrops
	eD ()F getHurtDir
	eF ()Lbjg$a; getFallSounds
	eX ()Z isImmobile
	ed ()I getExperienceReward
	ee ()Z isAlwaysExperienceDropper
	en ()Z canBeSeenAsEnemy
	ex ()V dropEquipment
	f ()Z isCreative
	f (Lnet/minecraft/world/damagesource/DamageSource;F)V actuallyHurt
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fD ()V stopSleeping
	fG ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	fH ()Z isSecondaryUseActive
	fI ()Z wantsToStopRiding
	fJ ()Z isStayingOnGroundSurface
	fK ()Z updateIsUnderwater
	fL ()V updatePlayerPose
	fM ()I getScore
	fN ()V destroyVanishingCursedItems
	fO ()V sweepAttack
	fP ()V respawn
	fQ ()Lcom/mojang/authlib/GameProfile; getGameProfile
	fR ()Lnet/minecraft/world/entity/player/PlayerInventory; getInventory
	fS ()Lnet/minecraft/world/entity/player/PlayerAbilities; getAbilities
	fT ()Z hasContainerOpen
	fU ()Z isSleepingLongEnough
	fV ()I getSleepTimer
	fW ()Z tryToStartFallFlying
	fX ()V startFallFlying
	fY ()V stopFallFlying
	fZ ()I getEnchantmentSeed
	fa ()V jumpFromGround
	fd ()F getFlyingSpeed
	fe ()F getSpeed
	fg ()V serverAiStep
	fj ()F getAbsorptionAmount
	fl ()Lnet/minecraft/world/entity/EnumMainHand; getMainArm
	fz ()Lcom/google/common/collect/ImmutableList; getDismountPoses
	g ()Z isLocalPlayer
	g (Lnet/minecraft/world/entity/EntityLiving;)V doAutoAttackOnTouch
	g (Lnet/minecraft/world/entity/EntityPose;)Z canPlayerFitWithinBlocksAndEntitiesWhen
	g (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; getProjectile
	ga ()I getXpNeededForNextLevel
	gb ()Lnet/minecraft/world/food/FoodMetaData; getFoodData
	gc ()Z isHurt
	gd ()Z mayBuild
	ge ()Lnet/minecraft/world/inventory/InventoryEnderChest; getEnderChestInventory
	gf ()V removeEntitiesOnShoulder
	gg ()Lnet/minecraft/world/scores/Scoreboard; getScoreboard
	gh ()Z isReducedDebugInfo
	gi ()Lnet/minecraft/nbt/NBTTagCompound; getShoulderEntityLeft
	gj ()Lnet/minecraft/nbt/NBTTagCompound; getShoulderEntityRight
	gk ()F getCurrentItemAttackStrengthDelay
	gl ()V resetAttackStrengthTicker
	gm ()Lnet/minecraft/world/item/ItemCooldown; getCooldowns
	gn ()F getLuck
	go ()Z canUseGameMasterBlocks
	gp ()Z isScoping
	gq ()Ljava/util/Optional; getLastDeathLocation
	h (I)V setRemainingFireTicks
	h (Lnet/minecraft/core/BlockPosition;)Z freeAt
	h (Lnet/minecraft/nbt/NBTTagCompound;)Z setEntityOnShoulder
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	i (Lnet/minecraft/nbt/NBTTagCompound;)V setShoulderEntityLeft
	i (Lnet/minecraft/world/item/ItemStack;)Z addItem
	j (Lnet/minecraft/nbt/NBTTagCompound;)V setShoulderEntityRight
	k ()Lnet/minecraft/world/item/ItemCooldown; createItemCooldowns
	k (Lnet/minecraft/nbt/NBTTagCompound;)V respawnEntityOnShoulder
	l ()V tick
	l (Lnet/minecraft/world/entity/Entity;)F ridingOffset
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (F)V animateHurt
	q ()V closeContainer
	q (F)Lnet/minecraft/world/phys/Vec3D; getRopeHoldPosition
	r ()V doCloseContainer
	r (DDD)V checkMovementStatistics
	r (I)V setScore
	s ()V turtleHelmetTick
	s (DDD)V checkRidingStatistics
	s (I)V increaseScore
	s (Z)V disableShield
	t ()V moveCloak
	t (I)V startAutoSpinAttack
	t (Z)Z canEat
	u (F)V hurtCurrentlyUsedShield
	u (Z)V setReducedDebugInfo
	w ()V onUpdateAbilities
	y ()Z isAboveGround
	z (F)V internalSetAbsorptionAmount
net/minecraft/world/entity/player/EntityHuman$EnumBedResult net/minecraft/world/entity/player/Player$BedSleepingProblem
	a NOT_POSSIBLE_HERE
	b NOT_POSSIBLE_NOW
	c TOO_FAR_AWAY
	d OBSTRUCTED
	e OTHER_PROBLEM
	f NOT_SAFE
	g message
	h $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getMessage
	b ()[Lnet/minecraft/world/entity/player/EntityHuman$EnumBedResult; $values
net/minecraft/world/entity/player/EnumChatVisibility net/minecraft/world/entity/player/ChatVisiblity
	a FULL
	b SYSTEM
	c HIDDEN
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/player/EnumChatVisibility; byId
	b ()Ljava/lang/String; getKey
	c ()[Lnet/minecraft/world/entity/player/EnumChatVisibility; $values
net/minecraft/world/entity/player/PlayerAbilities net/minecraft/world/entity/player/Abilities
	a invulnerable
	b flying
	c mayfly
	d instabuild
	e mayBuild
	f flyingSpeed
	g walkingSpeed
	a ()F getFlyingSpeed
	a (F)V setFlyingSpeed
	a (Lnet/minecraft/nbt/NBTTagCompound;)V addSaveData
	b ()F getWalkingSpeed
	b (F)V setWalkingSpeed
	b (Lnet/minecraft/nbt/NBTTagCompound;)V loadSaveData
net/minecraft/world/entity/player/PlayerInventory net/minecraft/world/entity/player/Inventory
	c POP_TIME_DURATION
	d INVENTORY_SIZE
	e SLOT_OFFHAND
	f NOT_FOUND_INDEX
	g ALL_ARMOR_SLOTS
	h HELMET_SLOT_ONLY
	i items
	j armor
	k offhand
	l selected
	m player
	n SELECTION_SIZE
	o compartments
	p timesChanged
	a ()V clearContent
	a (D)V swapPaint
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Ljava/util/function/Predicate;ILnet/minecraft/world/IInventory;)I clearOrCountMatchingItems
	a (Lnet/minecraft/nbt/NBTTagList;)Lnet/minecraft/nbt/NBTTagList; save
	a (Lnet/minecraft/tags/TagKey;)Z contains
	a (Lnet/minecraft/world/damagesource/DamageSource;F[I)V hurtArmor
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/PlayerInventory;)V replaceWith
	a (Lnet/minecraft/world/item/ItemStack;)V setPickedItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z hasRemainingSpaceForItem
	a (Lnet/minecraft/world/item/ItemStack;Z)V placeItemBackInInventory
	a (Lnet/minecraft/world/level/block/state/IBlockData;)F getDestroySpeed
	a (Z)Lnet/minecraft/world/item/ItemStack; removeFromSelected
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	af_ ()Z isEmpty
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/nbt/NBTTagList;)V load
	b (Lnet/minecraft/world/item/ItemStack;)I findSlotMatchingItem
	c (I)V pickSlot
	c (ILnet/minecraft/world/item/ItemStack;)Z add
	c (Lnet/minecraft/world/item/ItemStack;)I findSlotMatchingUnusedItem
	d (I)Z isHotbarSlot
	d (ILnet/minecraft/world/item/ItemStack;)I addResource
	d (Lnet/minecraft/world/item/ItemStack;)I getSlotWithRemainingSpace
	e ()V setChanged
	e (I)Lnet/minecraft/world/item/ItemStack; getArmor
	e (Lnet/minecraft/world/item/ItemStack;)Z add
	f ()Lnet/minecraft/world/item/ItemStack; getSelected
	f (Lnet/minecraft/world/item/ItemStack;)V placeItemBackInInventory
	g ()I getSelectionSize
	g (Lnet/minecraft/world/item/ItemStack;)V removeItem
	h ()I getFreeSlot
	h (Lnet/minecraft/world/item/ItemStack;)Z contains
	i ()I getSuitableHotbarSlot
	i (Lnet/minecraft/world/item/ItemStack;)I addResource
	j ()V tick
	k ()V dropAll
	l ()I getTimesChanged
net/minecraft/world/entity/projectile/EntityArrow net/minecraft/world/entity/projectile/AbstractArrow
	b inGround
	c inGroundTime
	d pickup
	e shakeTime
	f ARROW_BASE_DAMAGE
	g ID_FLAGS
	h PIERCE_LEVEL
	i FLAG_CRIT
	j FLAG_NOPHYSICS
	k FLAG_CROSSBOW
	l lastState
	m life
	n baseDamage
	o knockback
	p soundEvent
	q piercingIgnoreEntityIds
	r piercedAndKilledEntities
	A ()Z shotFromCrossbow
	B ()B getPierceLevel
	C ()F getWaterInertia
	E ()Z isNoPhysics
	F ()Z shouldFall
	I ()V startFalling
	K ()V resetPiercedEntities
	a (B)V setPierceLevel
	a (D)Z shouldRenderAtSqrDistance
	a (DDDFFI)V lerpTo
	a (IZ)V setFlag
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/Entity;)Z canHitEntity
	a (Lnet/minecraft/world/entity/EntityLiving;)V doPostHurtEffects
	a (Lnet/minecraft/world/entity/EntityLiving;F)V setEnchantmentEffectsFromEntity
	a (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/world/entity/EnumMoveType;Lnet/minecraft/world/phys/Vec3D;)V move
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z tryPickup
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/MovingObjectPositionEntity; findHitEntity
	a (Z)V setCritArrow
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (I)V setKnockback
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/sounds/SoundEffect;)V setSoundEvent
	b (Lnet/minecraft/world/entity/Entity;)V setOwner
	b_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerTouch
	c (DDDFF)V shoot
	cp ()Z isAttackable
	h (D)V setBaseDamage
	l ()V tick
	l (DDD)V lerpMotion
	p (Z)V setNoPhysics
	q ()V tickDespawn
	q (Z)V setShotFromCrossbow
	s ()Lnet/minecraft/sounds/SoundEffect; getDefaultHitGroundSoundEvent
	t ()Lnet/minecraft/sounds/SoundEffect; getHitGroundSoundEvent
	w ()Lnet/minecraft/world/item/ItemStack; getPickupItem
	x ()D getBaseDamage
	y ()I getKnockback
	z ()Z isCritArrow
net/minecraft/world/entity/projectile/EntityArrow$PickupStatus net/minecraft/world/entity/projectile/AbstractArrow$Pickup
	a DISALLOWED
	b ALLOWED
	c CREATIVE_ONLY
	d $VALUES
	a ()[Lnet/minecraft/world/entity/projectile/EntityArrow$PickupStatus; $values
	a (I)Lnet/minecraft/world/entity/projectile/EntityArrow$PickupStatus; byOrdinal
net/minecraft/world/entity/projectile/EntityDragonFireball net/minecraft/world/entity/projectile/DragonFireball
	e SPLASH_RANGE
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	ae_ ()Z shouldBurn
	br ()Z isPickable
	s ()Lnet/minecraft/core/particles/ParticleParam; getTrailParticle
net/minecraft/world/entity/projectile/EntityEgg net/minecraft/world/entity/projectile/ThrownEgg
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	b (B)V handleEntityEvent
	s ()Lnet/minecraft/world/item/Item; getDefaultItem
net/minecraft/world/entity/projectile/EntityEnderPearl net/minecraft/world/entity/projectile/ThrownEnderpearl
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	b (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/entity/Entity; changeDimension
	l ()V tick
	s ()Lnet/minecraft/world/item/Item; getDefaultItem
net/minecraft/world/entity/projectile/EntityEnderSignal net/minecraft/world/entity/projectile/EyeOfEnder
	b DATA_ITEM_STACK
	c tx
	d ty
	e tz
	f life
	g surviveAfterDeath
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/core/BlockPosition;)V signalTo
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/item/ItemStack;)V setItem
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bm ()F getLightLevelDependentMagicValue
	cp ()Z isAttackable
	l ()V tick
	l (DDD)V lerpMotion
	q ()Lnet/minecraft/world/item/ItemStack; getItem
	s ()Lnet/minecraft/world/item/ItemStack; getItemRaw
net/minecraft/world/entity/projectile/EntityEvokerFangs net/minecraft/world/entity/projectile/EvokerFangs
	b ATTACK_DURATION
	c LIFE_OFFSET
	d ATTACK_TRIGGER_TICKS
	e warmupDelayTicks
	f sentSpikeEvent
	g lifeTicks
	h clientSideAttackStarted
	i owner
	j ownerUUID
	a (F)F getAnimationProgress
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/EntityLiving;)V setOwner
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/world/entity/EntityLiving;)V dealDamageTo
	l ()V tick
	q ()Lnet/minecraft/world/entity/EntityLiving; getOwner
	v ()Lnet/minecraft/world/entity/Entity; getOwner
net/minecraft/world/entity/projectile/EntityFireball net/minecraft/world/entity/projectile/AbstractHurtingProjectile
	b xPower
	c yPower
	d zPower
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;)Z canHitEntity
	a_ ()V defineSynchedData
	ae_ ()Z shouldBurn
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bD ()F getPickRadius
	bm ()F getLightLevelDependentMagicValue
	br ()Z isPickable
	di ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	l ()V tick
	s ()Lnet/minecraft/core/particles/ParticleParam; getTrailParticle
	t ()F getInertia
net/minecraft/world/entity/projectile/EntityFireballFireball net/minecraft/world/entity/projectile/Fireball
	e DATA_ITEM_STACK
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/item/ItemStack;)V setItem
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	q ()Lnet/minecraft/world/item/ItemStack; getItem
	w ()Lnet/minecraft/world/item/ItemStack; getItemRaw
net/minecraft/world/entity/projectile/EntityFireworks net/minecraft/world/entity/projectile/FireworkRocketEntity
	b DATA_ID_FIREWORKS_ITEM
	c DATA_ATTACHED_TO_TARGET
	d DATA_SHOT_AT_ANGLE
	e life
	f lifetime
	g attachedToEntity
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	cp ()Z isAttackable
	k (DDD)Z shouldRender
	l ()V tick
	q ()Lnet/minecraft/world/item/ItemStack; getItem
	s ()Z isShotAtAngle
	t ()V explode
	w ()Z hasExplosion
	x ()V dealExplosionDamage
	y ()Z isAttachedToEntity
net/minecraft/world/entity/projectile/EntityFishingHook net/minecraft/world/entity/projectile/FishingHook
	b LOGGER
	c syncronizedRandom
	d biting
	e outOfWaterTime
	f MAX_OUT_OF_WATER_TIME
	g DATA_HOOKED_ENTITY
	h DATA_BITING
	i life
	j nibble
	k timeUntilLured
	l timeUntilHooked
	m fishAngle
	n openWater
	o hookedIn
	p currentState
	q luck
	r lureSpeed
	A (Lnet/minecraft/world/entity/Entity;)V setHookedEntity
	a (D)Z shouldRenderAtSqrDistance
	a (DDDFFI)V lerpTo
	a (Lnet/minecraft/core/BlockPosition;)V catchingFish
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/projectile/EntityFishingHook$WaterPosition; getOpenWaterTypeForArea
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V remove
	a (Lnet/minecraft/world/entity/Entity;)Z canHitEntity
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z shouldStopFishing
	a (Lnet/minecraft/world/entity/projectile/EntityFishingHook;)V updateOwnerInfo
	a (Lnet/minecraft/world/item/ItemStack;)I retrieve
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	am ()V onClientRemoval
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;)Z calculateOpenWater
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/Entity;)V setOwner
	c (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/projectile/EntityFishingHook$WaterPosition; getOpenWaterTypeForBlock
	c (Lnet/minecraft/world/entity/Entity;)V pullEntity
	cs ()Z canChangeDimensions
	di ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	l ()V tick
	q ()Z isOpenWaterFishing
	s ()Lnet/minecraft/world/entity/player/EntityHuman; getPlayerOwner
	t ()Lnet/minecraft/world/entity/Entity; getHookedIn
	w ()V checkCollision
net/minecraft/world/entity/projectile/EntityFishingHook$HookState net/minecraft/world/entity/projectile/FishingHook$FishHookState
	a FLYING
	b HOOKED_IN_ENTITY
	c BOBBING
	d $VALUES
	a ()[Lnet/minecraft/world/entity/projectile/EntityFishingHook$HookState; $values
net/minecraft/world/entity/projectile/EntityFishingHook$WaterPosition net/minecraft/world/entity/projectile/FishingHook$OpenWaterType
	a ABOVE_WATER
	b INSIDE_WATER
	c INVALID
	d $VALUES
	a ()[Lnet/minecraft/world/entity/projectile/EntityFishingHook$WaterPosition; $values
net/minecraft/world/entity/projectile/EntityLargeFireball net/minecraft/world/entity/projectile/LargeFireball
	e explosionPower
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/world/entity/projectile/EntityLlamaSpit net/minecraft/world/entity/projectile/LlamaSpit
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	a_ ()V defineSynchedData
	l ()V tick
net/minecraft/world/entity/projectile/EntityPotion net/minecraft/world/entity/projectile/ThrownPotion
	b SPLASH_RANGE
	c WATER_SENSITIVE_OR_ON_FIRE
	d SPLASH_RANGE_SQ
	a (Ljava/util/List;Lnet/minecraft/world/entity/Entity;)V applySplash
	a (Lnet/minecraft/core/BlockPosition;)V dowseFire
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/PotionRegistry;)V makeAreaOfEffectCloud
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	s ()Lnet/minecraft/world/item/Item; getDefaultItem
	w ()F getGravity
	x ()V applyWater
	y ()Z isLingering
net/minecraft/world/entity/projectile/EntityProjectile net/minecraft/world/entity/projectile/ThrowableProjectile
	a (D)Z shouldRenderAtSqrDistance
	l ()V tick
	w ()F getGravity
net/minecraft/world/entity/projectile/EntityProjectileThrowable net/minecraft/world/entity/projectile/ThrowableItemProjectile
	b DATA_ITEM_STACK
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/item/ItemStack;)V setItem
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	q ()Lnet/minecraft/world/item/ItemStack; getItem
	s ()Lnet/minecraft/world/item/Item; getDefaultItem
	t ()Lnet/minecraft/world/item/ItemStack; getItemRaw
net/minecraft/world/entity/projectile/EntityShulkerBullet net/minecraft/world/entity/projectile/ShulkerBullet
	b SPEED
	c finalTarget
	d currentMoveDirection
	e flightSteps
	f targetDeltaX
	g targetDeltaY
	h targetDeltaZ
	i targetId
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)V selectNextMoveDirection
	a (Lnet/minecraft/core/EnumDirection;)V setMoveDirection
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;)Z canHitEntity
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bM ()Z isOnFire
	bm ()F getLightLevelDependentMagicValue
	br ()Z isPickable
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	dx ()V checkDespawn
	l ()V tick
	q ()Lnet/minecraft/core/EnumDirection; getMoveDirection
	s ()V destroy
net/minecraft/world/entity/projectile/EntitySmallFireball net/minecraft/world/entity/projectile/SmallFireball
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	br ()Z isPickable
net/minecraft/world/entity/projectile/EntitySnowball net/minecraft/world/entity/projectile/Snowball
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	b (B)V handleEntityEvent
	s ()Lnet/minecraft/world/item/Item; getDefaultItem
	x ()Lnet/minecraft/core/particles/ParticleParam; getParticle
net/minecraft/world/entity/projectile/EntitySpectralArrow net/minecraft/world/entity/projectile/SpectralArrow
	f duration
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/EntityLiving;)V doPostHurtEffects
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	l ()V tick
	w ()Lnet/minecraft/world/item/ItemStack; getPickupItem
net/minecraft/world/entity/projectile/EntityThrownExpBottle net/minecraft/world/entity/projectile/ThrownExperienceBottle
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	s ()Lnet/minecraft/world/item/Item; getDefaultItem
	w ()F getGravity
net/minecraft/world/entity/projectile/EntityThrownTrident net/minecraft/world/entity/projectile/ThrownTrident
	f clientSideReturnTridentTickCount
	g ID_LOYALTY
	h ID_FOIL
	i tridentItem
	j dealtDamage
	C ()F getWaterInertia
	F ()Z isFoil
	I ()Z isChanneling
	K ()Z isAcceptibleReturnOwner
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z tryPickup
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/MovingObjectPositionEntity; findHitEntity
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerTouch
	k (DDD)Z shouldRender
	l ()V tick
	q ()V tickDespawn
	s ()Lnet/minecraft/sounds/SoundEffect; getDefaultHitGroundSoundEvent
	w ()Lnet/minecraft/world/item/ItemStack; getPickupItem
net/minecraft/world/entity/projectile/EntityTippedArrow net/minecraft/world/entity/projectile/Arrow
	f EXPOSED_POTION_DECAY_TIME
	g NO_EFFECT_COLOR
	h ID_EFFECT_COLOR
	i EVENT_POTION_PUFF
	j potion
	k effects
	l fixedColor
	F ()I getColor
	I ()V updateColor
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/effect/MobEffect;)V addEffect
	a (Lnet/minecraft/world/entity/EntityLiving;)V doPostHurtEffects
	a (Lnet/minecraft/world/item/ItemStack;)V setEffectsFromItem
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (I)V makeParticle
	c (Lnet/minecraft/world/item/ItemStack;)I getCustomColor
	d (I)V setFixedColor
	l ()V tick
	w ()Lnet/minecraft/world/item/ItemStack; getPickupItem
net/minecraft/world/entity/projectile/EntityWitherSkull net/minecraft/world/entity/projectile/WitherSkull
	e DATA_DANGEROUS
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;F)F getBlockExplosionResistance
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	a (Z)V setDangerous
	a_ ()V defineSynchedData
	ae_ ()Z shouldBurn
	bM ()Z isOnFire
	br ()Z isPickable
	t ()F getInertia
	w ()Z isDangerous
net/minecraft/world/entity/projectile/IProjectile net/minecraft/world/entity/projectile/Projectile
	b ownerUUID
	c cachedOwner
	d leftOwner
	e hasBeenShot
	G ()Lnet/minecraft/world/entity/Entity; getEffectSource
	H ()V updateRotation
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/world/entity/Entity;)Z canHitEntity
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V shootFromRotation
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/Entity;)V setOwner
	c (DDDFF)V shoot
	d (FF)F lerpRotation
	d (Lnet/minecraft/world/entity/Entity;)Z ownedBy
	di ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	l ()V tick
	l (DDD)V lerpMotion
	s ()Z checkLeftOwner
	v ()Lnet/minecraft/world/entity/Entity; getOwner
net/minecraft/world/entity/projectile/ProjectileHelper net/minecraft/world/entity/projectile/ProjectileUtil
	a (Lnet/minecraft/world/entity/Entity;F)V rotateTowardsMovement
	a (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/MovingObjectPosition; getHitResultOnMoveVector
	a (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;D)Lnet/minecraft/world/phys/MovingObjectPosition; getHitResultOnViewVector
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;D)Lnet/minecraft/world/phys/MovingObjectPositionEntity; getEntityHitResult
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/EnumHand; getWeaponHoldingHand
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/EntityArrow; getMobArrow
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/MovingObjectPositionEntity; getEntityHitResult
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;F)Lnet/minecraft/world/phys/MovingObjectPositionEntity; getEntityHitResult
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/level/World;)Lnet/minecraft/world/phys/MovingObjectPosition; getHitResult
net/minecraft/world/entity/raid/EntityRaider net/minecraft/world/entity/raid/Raider
	b ALLOWED_ITEMS
	bT canJoinRaid
	bU ticksOutsideRaid
	c IS_CELEBRATING
	d raid
	e wave
	A (Z)V setCelebrating
	U ()Z requiresCustomPersistence
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/raid/Raid;)V setCurrentRaid
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	ac_ ()Lnet/minecraft/sounds/SoundEffect; getCelebrateSound
	b (I)V setWave
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b_ ()V aiStep
	c (I)V setTicksOutsideRaid
	gi ()V updateNoActionTime
	gk ()Z canJoinPatrol
	gq ()Z canJoinRaid
	gr ()Lnet/minecraft/world/entity/raid/Raid; getCurrentRaid
	gs ()Z hasActiveRaid
	gt ()I getWave
	gu ()Z isCelebrating
	gv ()I getTicksOutsideRaid
	h (D)Z removeWhenFarAway
	z ()V registerGoals
	z (Z)V setCanJoinRaid
net/minecraft/world/entity/raid/PersistentRaid net/minecraft/world/entity/raid/Raids
	a RAID_FILE_ID
	b raidMap
	c level
	d nextAvailableID
	e tick
	a ()V tick
	a (I)Lnet/minecraft/world/entity/raid/Raid; get
	a (Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/world/entity/raid/Raid; getNearbyRaid
	a (Lnet/minecraft/core/Holder;)Ljava/lang/String; getFileId
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/world/entity/raid/Raid; createOrExtendRaid
	a (Lnet/minecraft/server/level/WorldServer;)Lebr$a; factory
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/raid/Raid; getOrCreateRaid
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/raid/PersistentRaid; load
	a (Lnet/minecraft/world/entity/raid/EntityRaider;Lnet/minecraft/world/entity/raid/Raid;)Z canJoinRaid
	b ()I getUniqueId
net/minecraft/world/entity/raid/Raid$Status net/minecraft/world/entity/raid/Raid$RaidStatus
	a ONGOING
	b VICTORY
	c LOSS
	d STOPPED
	e VALUES
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/raid/Raid$Status; getByName
	b ()[Lnet/minecraft/world/entity/raid/Raid$Status; $values
net/minecraft/world/entity/raid/Raid$Wave net/minecraft/world/entity/raid/Raid$RaiderType
	a VINDICATOR
	b EVOKER
	c PILLAGER
	d WITCH
	e RAVAGER
	f VALUES
	g entityType
	h spawnsPerWaveBeforeBonus
	i $VALUES
	a ()[Lnet/minecraft/world/entity/raid/Raid$Wave; $values
net/minecraft/world/entity/schedule/ActivityFrame net/minecraft/world/entity/schedule/Keyframe
	a timeStamp
	b value
	a ()I getTimeStamp
	b ()F getValue
net/minecraft/world/entity/schedule/ScheduleActivity net/minecraft/world/entity/schedule/Timeline
	a keyframes
	b previousIndex
	a ()Lcom/google/common/collect/ImmutableList; getKeyframes
	a (I)F getValueAt
	a (IF)Lnet/minecraft/world/entity/schedule/ScheduleActivity; addKeyframe
	a (Ljava/util/Collection;)Lnet/minecraft/world/entity/schedule/ScheduleActivity; addKeyframes
	b ()V sortAndDeduplicateKeyframes
net/minecraft/world/entity/vehicle/DismountUtil net/minecraft/world/entity/vehicle/DismountHelper
	a (D)Z isBlockFloorValid
	a (Lnet/minecraft/core/BlockPosition;ILjava/util/function/Function;)D findCeilingFrom
	a (Lnet/minecraft/core/EnumDirection;)[[I offsetsForDirection
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/phys/Vec3D; findSafeDismountLocation
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; nonClimbableShape
	a (Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/AxisAlignedBB;)Z canDismountTo
	a (Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityPose;)Z canDismountTo
net/minecraft/world/entity/vehicle/EntityBoat net/minecraft/world/entity/vehicle/Boat
	aE lerpYRot
	aF lerpXRot
	aG inputLeft
	aH inputRight
	aI inputUp
	aJ inputDown
	aK waterLevel
	aL landFriction
	aM status
	aN oldStatus
	aO lastYd
	aP isAboveBubbleColumn
	aQ bubbleColumnDirectionIsDown
	aR bubbleMultiplier
	aS bubbleAngle
	aT bubbleAngleO
	b PADDLE_LEFT
	c PADDLE_RIGHT
	d PADDLE_SOUND_TIME
	e BUBBLE_TIME
	f DATA_ID_HURT
	g DATA_ID_HURTDIR
	h DATA_ID_DAMAGE
	i DATA_ID_TYPE
	j DATA_ID_PADDLE_LEFT
	k DATA_ID_PADDLE_RIGHT
	l DATA_ID_BUBBLE_TIME
	m TIME_TO_EJECT
	n PADDLE_SPEED
	o paddlePositions
	p invFriction
	q outOfControlTicks
	r deltaRotation
	s lerpSteps
	t lerpX
	u lerpY
	v lerpZ
	A ()Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType; getVariant
	B ()I getMaxPassengers
	C ()V tickBubbleColumn
	E ()V tickLerp
	F ()Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumStatus; getStatus
	G ()Z checkInWater
	H ()Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumStatus; isUnderwater
	I ()V floatBoat
	K ()V controlBoat
	K_ ()D lerpTargetY
	L ()I getBubbleTime
	L_ ()D lerpTargetZ
	a (DDDFFI)V lerpTo
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (F)V setDamage
	a (IF)F getRowingTime
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/BlockUtil$Rectangle;)Lnet/minecraft/world/phys/Vec3D; getRelativePortalPosition
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V destroy
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;)Z hasEnoughSpaceFor
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V positionRider
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Z canVehicleCollide
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType;)V setVariant
	a (ZZ)V setPaddleState
	a (ZZZZ)V setInput
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (F)F getBubbleAngle
	b (I)V setBubbleTime
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/Entity;)V clampRotation
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getDismountLocationForPassenger
	bc ()Z isUnderWater
	br ()Z isPickable
	bs ()Z isPushable
	bx ()Z canBeCollidedWith
	c ()Ljava/lang/Object; getVariant
	c (I)Z getPaddleState
	cE ()Lnet/minecraft/core/EnumDirection; getMotionDirection
	cN ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	cn ()Lnet/minecraft/network/chat/IChatBaseComponent; getTypeName
	d (I)V setHurtTime
	d_ ()F lerpTargetXRot
	dy ()Lnet/minecraft/world/item/ItemStack; getPickResult
	g (Lnet/minecraft/world/entity/Entity;)V push
	h (Lnet/minecraft/world/entity/Entity;)Z canCollideWith
	j (Lnet/minecraft/world/entity/Entity;)V onPassengerTurned
	k (Z)V onAboveBubbleCol
	l ()V tick
	m (F)V animateHurt
	m (I)V setHurtDir
	n_ ()D lerpTargetX
	o_ ()F lerpTargetYRot
	q ()Lnet/minecraft/world/item/Item; getDropItem
	r (Lnet/minecraft/world/entity/Entity;)Z canAddPassenger
	s ()Lnet/minecraft/sounds/SoundEffect; getPaddleSound
	t ()F getWaterLevelAbove
	v ()F getGroundFriction
	w ()F getSinglePassengerXOffset
	x ()F getDamage
	y ()I getHurtTime
	z ()I getHurtDir
net/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType net/minecraft/world/entity/vehicle/Boat$Type
	a OAK
	b SPRUCE
	c BIRCH
	d JUNGLE
	e ACACIA
	f CHERRY
	g DARK_OAK
	h MANGROVE
	i BAMBOO
	j CODEC
	k name
	l planks
	m BY_ID
	n $VALUES
	a ()Ljava/lang/String; getName
	a (I)Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType; byId
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType; byName
	b ()Lnet/minecraft/world/level/block/Block; getPlanks
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType; $values
net/minecraft/world/entity/vehicle/EntityBoat$EnumStatus net/minecraft/world/entity/vehicle/Boat$Status
	a IN_WATER
	b UNDER_WATER
	c UNDER_FLOWING_WATER
	d ON_LAND
	e IN_AIR
	f $VALUES
	a ()[Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumStatus; $values
net/minecraft/world/entity/vehicle/EntityMinecartAbstract net/minecraft/world/entity/vehicle/AbstractMinecart
	b WATER_SLOWDOWN_FACTOR
	c LOWERED_PASSENGER_ATTACHMENT_Y
	d PASSENGER_ATTACHMENT_Y
	e DATA_ID_HURT
	f DATA_ID_HURTDIR
	g DATA_ID_DAMAGE
	h DATA_ID_DISPLAY_BLOCK
	i DATA_ID_DISPLAY_OFFSET
	j DATA_ID_CUSTOM_DISPLAY
	k POSE_DISMOUNT_HEIGHTS
	l flipped
	m onRails
	n lerpSteps
	o lerpX
	p lerpY
	q lerpZ
	r lerpYRot
	s lerpXRot
	t targetDeltaMovement
	u EXITS
	A ()Lnet/minecraft/world/level/block/state/IBlockData; getDisplayBlockState
	B ()Lnet/minecraft/world/level/block/state/IBlockData; getDefaultDisplayBlockState
	C ()I getDisplayOffset
	E ()I getDefaultDisplayOffset
	F ()Z hasCustomDisplay
	K_ ()D lerpTargetY
	L_ ()D lerpTargetZ
	a (DDDD)Lnet/minecraft/world/phys/Vec3D; getPosOffs
	a (DDDFFI)V lerpTo
	a (F)V setDamage
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/core/BlockPosition;)Z isRedstoneConductor
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/BlockUtil$Rectangle;)Lnet/minecraft/world/phys/Vec3D; getRelativePortalPosition
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V destroy
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/level/World;DDDLnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType;)Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract; createMinecart
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition;)Lcom/mojang/datafixers/util/Pair; exits
	a (Z)V setCustomDisplay
	aJ ()F getBlockSpeedFactor
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getDismountLocationForPassenger
	br ()Z isPickable
	bs ()Z isPushable
	c (I)V setHurtTime
	c (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V moveAlongTrack
	c (Lnet/minecraft/world/level/block/state/IBlockData;)V setDisplayBlockState
	cE ()Lnet/minecraft/core/EnumDirection; getMotionDirection
	ce ()Z isOnRails
	d (I)V setHurtDir
	d_ ()F lerpTargetXRot
	dy ()Lnet/minecraft/world/item/ItemStack; getPickResult
	g (Lnet/minecraft/world/entity/Entity;)V push
	g_ ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBoxForCulling
	h (Lnet/minecraft/world/entity/Entity;)Z canCollideWith
	l ()V tick
	l (DDD)V lerpMotion
	m (F)V animateHurt
	m (I)V setDisplayOffset
	n_ ()D lerpTargetX
	o_ ()F lerpTargetYRot
	q ()Lnet/minecraft/world/item/Item; getDropItem
	q (DDD)Lnet/minecraft/world/phys/Vec3D; getPos
	s ()D getMaxSpeed
	t ()V comeOffTrack
	v ()V applyNaturalSlowdown
	w ()F getDamage
	x ()I getHurtTime
	y ()I getHurtDir
	z ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
net/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType net/minecraft/world/entity/vehicle/AbstractMinecart$Type
	a RIDEABLE
	b CHEST
	c FURNACE
	d TNT
	e SPAWNER
	f HOPPER
	g COMMAND_BLOCK
	h $VALUES
	a ()[Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; $values
net/minecraft/world/entity/vehicle/EntityMinecartChest net/minecraft/world/entity/vehicle/MinecartChest
	B ()Lnet/minecraft/world/level/block/state/IBlockData; getDefaultDisplayBlockState
	E ()I getDefaultDisplayOffset
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	b ()I getContainerSize
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	q ()Lnet/minecraft/world/item/Item; getDropItem
	z ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
net/minecraft/world/entity/vehicle/EntityMinecartCommandBlock net/minecraft/world/entity/vehicle/MinecartCommandBlock
	c DATA_ID_COMMAND_NAME
	d DATA_ID_LAST_OUTPUT
	e commandBlock
	f ACTIVATION_DELAY
	g lastActivated
	B ()Lnet/minecraft/world/level/block/state/IBlockData; getDefaultDisplayBlockState
	G ()Lnet/minecraft/world/level/CommandBlockListenerAbstract; getCommandBlock
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	cM ()Z onlyOpCanSetNbt
	q ()Lnet/minecraft/world/item/Item; getDropItem
	z ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
net/minecraft/world/entity/vehicle/EntityMinecartContainer net/minecraft/world/entity/vehicle/AbstractMinecartContainer
	c itemStacks
	d lootTable
	e lootTableSeed
	G ()Lnet/minecraft/resources/MinecraftKey; getLootTable
	H ()J getLootTableSeed
	I ()Lnet/minecraft/core/NonNullList; getItemStacks
	K ()V clearItemStacks
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (J)V setLootTableSeed
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/resources/MinecraftKey;)V setLootTable
	a (Lnet/minecraft/resources/MinecraftKey;J)V setLootTable
	a (Lnet/minecraft/world/damagesource/DamageSource;)V destroy
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V remove
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	e ()V setChanged
	v ()V applyNaturalSlowdown
net/minecraft/world/entity/vehicle/EntityMinecartFurnace net/minecraft/world/entity/vehicle/MinecartFurnace
	c xPush
	d zPush
	e DATA_ID_FUEL
	f fuel
	g INGREDIENT
	B ()Lnet/minecraft/world/level/block/state/IBlockData; getDefaultDisplayBlockState
	G ()Z hasFuel
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V moveAlongTrack
	l ()V tick
	p (Z)V setHasFuel
	q ()Lnet/minecraft/world/item/Item; getDropItem
	s ()D getMaxSpeed
	v ()V applyNaturalSlowdown
	z ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
net/minecraft/world/entity/vehicle/EntityMinecartHopper net/minecraft/world/entity/vehicle/MinecartHopper
	f enabled
	B ()Lnet/minecraft/world/level/block/state/IBlockData; getDefaultDisplayBlockState
	E ()I getDefaultDisplayOffset
	L ()Z isEnabled
	M ()D getLevelX
	N ()D getLevelY
	O ()D getLevelZ
	P ()Z suckInItems
	a (IIIZ)V activateMinecart
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	b ()I getContainerSize
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	l ()V tick
	p (Z)V setEnabled
	q ()Lnet/minecraft/world/item/Item; getDropItem
	z ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
net/minecraft/world/entity/vehicle/EntityMinecartMobSpawner net/minecraft/world/entity/vehicle/MinecartSpawner
	c spawner
	d ticker
	B ()Lnet/minecraft/world/level/block/state/IBlockData; getDefaultDisplayBlockState
	G ()Lnet/minecraft/world/level/MobSpawnerAbstract; getSpawner
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/level/World;)Ljava/lang/Runnable; createTicker
	cM ()Z onlyOpCanSetNbt
	l ()V tick
	q ()Lnet/minecraft/world/item/Item; getDropItem
	z ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
net/minecraft/world/entity/vehicle/EntityMinecartRideable net/minecraft/world/entity/vehicle/Minecart
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	q ()Lnet/minecraft/world/item/Item; getDropItem
	z ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
net/minecraft/world/entity/vehicle/EntityMinecartTNT net/minecraft/world/entity/vehicle/MinecartTNT
	c EVENT_PRIME
	d fuse
	B ()Lnet/minecraft/world/level/block/state/IBlockData; getDefaultDisplayBlockState
	G ()V primeFuse
	H ()I getFuse
	I ()Z isPrimed
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V destroy
	a (Lnet/minecraft/world/damagesource/DamageSource;D)V explode
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;F)F getBlockExplosionResistance
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	h (D)V explode
	l ()V tick
	q ()Lnet/minecraft/world/item/Item; getDropItem
	z ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
net/minecraft/world/food/FoodInfo net/minecraft/world/food/FoodProperties
	a nutrition
	b saturationModifier
	c isMeat
	d canAlwaysEat
	e fastFood
	f effects
	a ()I getNutrition
	b ()F getSaturationModifier
	c ()Z isMeat
	d ()Z canAlwaysEat
	e ()Z isFastFood
	f ()Ljava/util/List; getEffects
net/minecraft/world/food/FoodMetaData net/minecraft/world/food/FoodData
	a foodLevel
	b saturationLevel
	c exhaustionLevel
	d tickTimer
	e lastFoodLevel
	a ()I getFoodLevel
	a (F)V addExhaustion
	a (I)V setFoodLevel
	a (IF)V eat
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/player/EntityHuman;)V tick
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/ItemStack;)V eat
	b ()I getLastFoodLevel
	b (F)V setSaturation
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c ()Z needsFood
	c (F)V setExhaustion
	d ()F getExhaustionLevel
	e ()F getSaturationLevel
net/minecraft/world/inventory/AutoRecipeOutput net/minecraft/world/inventory/StackedContentsCompatible
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillStackedContents
net/minecraft/world/inventory/Container net/minecraft/world/inventory/AbstractContainerMenu
	a SLOT_CLICKED_OUTSIDE
	b QUICKCRAFT_TYPE_CHARITABLE
	c QUICKCRAFT_TYPE_GREEDY
	d QUICKCRAFT_TYPE_CLONE
	e QUICKCRAFT_HEADER_START
	f QUICKCRAFT_HEADER_CONTINUE
	g QUICKCRAFT_HEADER_END
	h CARRIED_SLOT_SIZE
	i slots
	j containerId
	k LOGGER
	l lastSlots
	m dataSlots
	n carried
	o remoteSlots
	p remoteDataSlots
	q remoteCarried
	r stateId
	s menuType
	t quickcraftType
	u quickcraftStatus
	v quickcraftSlots
	w containerListeners
	x synchronizer
	y suppressRemoteUpdates
	a ()Lnet/minecraft/world/inventory/Containers; getType
	a (I)Z isValidSlotIndex
	a (II)V setData
	a (IILnet/minecraft/world/inventory/InventoryClickType;Lnet/minecraft/world/entity/player/EntityHuman;)V clicked
	a (IILnet/minecraft/world/item/ItemStack;)V setItem
	a (ILjava/util/List;Lnet/minecraft/world/item/ItemStack;)V initializeContents
	a (ILnet/minecraft/world/entity/player/EntityHuman;)Z isValidQuickcraftType
	a (ILnet/minecraft/world/item/ItemStack;)V setRemoteSlot
	a (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V triggerSlotListeners
	a (Ljava/util/Set;ILnet/minecraft/world/item/ItemStack;)I getQuickCraftPlaceCount
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/IInventory;I)V checkContainerSize
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/IInventory;)V clearContainer
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z tryItemClickBehaviourOverride
	a (Lnet/minecraft/world/inventory/Container;)V transferState
	a (Lnet/minecraft/world/inventory/ContainerAccess;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/Block;)Z stillValid
	a (Lnet/minecraft/world/inventory/ContainerProperty;)Lnet/minecraft/world/inventory/ContainerProperty; addDataSlot
	a (Lnet/minecraft/world/inventory/ContainerSynchronizer;)V setSynchronizer
	a (Lnet/minecraft/world/inventory/IContainerProperties;)V addDataSlots
	a (Lnet/minecraft/world/inventory/IContainerProperties;I)V checkContainerDataCount
	a (Lnet/minecraft/world/inventory/ICrafting;)V addSlotListener
	a (Lnet/minecraft/world/inventory/Slot;)Lnet/minecraft/world/inventory/Slot; addSlot
	a (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Z)Z canItemQuickReplace
	a (Lnet/minecraft/world/item/ItemStack;)V setRemoteCarried
	a (Lnet/minecraft/world/item/ItemStack;IIZ)Z moveItemStackTo
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)I getRedstoneSignalFromBlockEntity
	b ()V sendAllDataToRemote
	b (I)Lnet/minecraft/world/inventory/Slot; getSlot
	b (II)I getQuickcraftMask
	b (IILnet/minecraft/world/inventory/InventoryClickType;Lnet/minecraft/world/entity/player/EntityHuman;)V doClick
	b (ILnet/minecraft/world/item/ItemStack;)V setRemoteSlotNoCopy
	b (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V synchronizeSlotToRemote
	b (Lnet/minecraft/world/IInventory;)I getRedstoneSignalFromContainer
	b (Lnet/minecraft/world/IInventory;I)Ljava/util/OptionalInt; findSlot
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	b (Lnet/minecraft/world/entity/player/EntityHuman;I)Z clickMenuButton
	b (Lnet/minecraft/world/inventory/ICrafting;)V removeSlotListener
	b (Lnet/minecraft/world/inventory/Slot;)Z canDragTo
	b (Lnet/minecraft/world/item/ItemStack;)V setCarried
	c ()Lnet/minecraft/core/NonNullList; getItems
	c (I)I getQuickcraftType
	c (II)V updateDataSlotListeners
	d ()V broadcastChanges
	d (I)I getQuickcraftHeader
	d (II)V synchronizeDataSlotToRemote
	e ()V broadcastFullState
	f ()V resetQuickCraft
	g ()Lnet/minecraft/world/item/ItemStack; getCarried
	h ()V suppressRemoteUpdates
	i ()V resumeRemoteUpdates
	j ()I getStateId
	k ()I incrementStateId
	l ()V synchronizeCarriedToRemote
	m ()Lnet/minecraft/world/entity/SlotAccess; createCarriedSlotAccess
net/minecraft/world/inventory/ContainerAccess net/minecraft/world/inventory/ContainerLevelAccess
	a NULL
	a (Ljava/util/function/BiConsumer;)V execute
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
	a (Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object; evaluate
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/inventory/ContainerAccess; create
net/minecraft/world/inventory/ContainerAnvil net/minecraft/world/inventory/AnvilMenu
	A COST_REPAIR_MATERIAL
	B COST_REPAIR_SACRIFICE
	C COST_INCOMPATIBLE_PENALTY
	D COST_RENAME
	E INPUT_SLOT_X_PLACEMENT
	F ADDITIONAL_SLOT_X_PLACEMENT
	G RESULT_SLOT_X_PLACEMENT
	H SLOT_Y_PLACEMENT
	k INPUT_SLOT
	l ADDITIONAL_SLOT
	m RESULT_SLOT
	n MAX_NAME_LENGTH
	s LOGGER
	t DEBUG_COST
	u repairItemCountCost
	v itemName
	w cost
	x COST_FAIL
	y COST_BASE
	z COST_ADDED_BASE
	a (Ljava/lang/String;)Z setItemName
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/entity/player/EntityHuman;Z)Z mayPickup
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBlock
	b (Ljava/lang/String;)Ljava/lang/String; validateName
	e (I)I calculateIncreasedRepairCost
	l ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; createInputSlotDefinitions
	m ()V createResult
	n ()I getCost
net/minecraft/world/inventory/ContainerAnvilAbstract net/minecraft/world/inventory/ItemCombinerMenu
	k INVENTORY_SLOTS_PER_ROW
	l INVENTORY_SLOTS_PER_COLUMN
	m inputSlotIndexes
	n resultSlotIndex
	o access
	p player
	q inputSlots
	r resultSlots
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/entity/player/EntityHuman;Z)Z mayPickup
	a (Lnet/minecraft/world/entity/player/PlayerInventory;)V createInventorySlots
	a (Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition;)V createInputSlots
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBlock
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	b (Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition;)V createResultSlot
	c (Lnet/minecraft/world/item/ItemStack;)Z canMoveIntoInputSlots
	d (Lnet/minecraft/world/item/ItemStack;)I getSlotToQuickMoveTo
	e (I)Lnet/minecraft/world/InventorySubcontainer; createContainer
	l ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; createInputSlotDefinitions
	m ()V createResult
	n ()I getInventorySlotStart
	o ()I getResultSlot
	p ()I getInventorySlotEnd
	q ()I getUseRowStart
	r ()I getUseRowEnd
net/minecraft/world/inventory/ContainerBeacon net/minecraft/world/inventory/BeaconMenu
	k PAYMENT_SLOT
	l SLOT_COUNT
	m DATA_COUNT
	n INV_SLOT_START
	o INV_SLOT_END
	p USE_ROW_SLOT_START
	q USE_ROW_SLOT_END
	r NO_EFFECT
	s beacon
	t paymentSlot
	u access
	v beaconData
	a (II)V setData
	a (Ljava/util/Optional;Ljava/util/Optional;)V updateEffects
	a (Lnet/minecraft/world/effect/MobEffectList;)I encodeEffect
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	e (I)Lnet/minecraft/world/effect/MobEffectList; decodeEffect
	l ()I getLevels
	m ()Lnet/minecraft/world/effect/MobEffectList; getPrimaryEffect
	n ()Lnet/minecraft/world/effect/MobEffectList; getSecondaryEffect
	o ()Z hasPayment
net/minecraft/world/inventory/ContainerBeacon$SlotBeacon net/minecraft/world/inventory/BeaconMenu$PaymentSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
net/minecraft/world/inventory/ContainerBlastFurnace net/minecraft/world/inventory/BlastFurnaceMenu
net/minecraft/world/inventory/ContainerBrewingStand net/minecraft/world/inventory/BrewingStandMenu
	k BOTTLE_SLOT_START
	l BOTTLE_SLOT_END
	m INGREDIENT_SLOT
	n FUEL_SLOT
	o SLOT_COUNT
	p DATA_COUNT
	q INV_SLOT_START
	r INV_SLOT_END
	s USE_ROW_SLOT_START
	t USE_ROW_SLOT_END
	u brewingStand
	v brewingStandData
	w ingredientSlot
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	l ()I getFuel
	m ()I getBrewingTicks
net/minecraft/world/inventory/ContainerBrewingStand$SlotBrewing net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
net/minecraft/world/inventory/ContainerBrewingStand$SlotPotionBottle net/minecraft/world/inventory/BrewingStandMenu$PotionSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	b (Lnet/minecraft/world/item/ItemStack;)Z mayPlaceItem
net/minecraft/world/inventory/ContainerCartography net/minecraft/world/inventory/CartographyTableMenu
	k MAP_SLOT
	l ADDITIONAL_SLOT
	m RESULT_SLOT
	n container
	o INV_SLOT_START
	p INV_SLOT_END
	q USE_ROW_SLOT_START
	r USE_ROW_SLOT_END
	s access
	t lastSoundTime
	u resultContainer
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V setupResultSlot
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
net/minecraft/world/inventory/ContainerChest net/minecraft/world/inventory/ChestMenu
	k SLOTS_PER_ROW
	l container
	m containerRows
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/ContainerChest; oneRow
	a (ILnet/minecraft/world/entity/player/PlayerInventory;Lnet/minecraft/world/IInventory;)Lnet/minecraft/world/inventory/ContainerChest; threeRows
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/ContainerChest; twoRows
	b (ILnet/minecraft/world/entity/player/PlayerInventory;Lnet/minecraft/world/IInventory;)Lnet/minecraft/world/inventory/ContainerChest; sixRows
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	c (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/ContainerChest; threeRows
	d (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/ContainerChest; fourRows
	e (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/ContainerChest; fiveRows
	f (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/ContainerChest; sixRows
	l ()Lnet/minecraft/world/IInventory; getContainer
	m ()I getRowCount
net/minecraft/world/inventory/ContainerDispenser net/minecraft/world/inventory/DispenserMenu
	k SLOT_COUNT
	l INV_SLOT_START
	m INV_SLOT_END
	n USE_ROW_SLOT_START
	o USE_ROW_SLOT_END
	p dispenser
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
net/minecraft/world/inventory/ContainerEnchantTable net/minecraft/world/inventory/EnchantmentMenu
	k costs
	l enchantClue
	m levelClue
	n EMPTY_SLOT_LAPIS_LAZULI
	o enchantSlots
	p access
	q random
	r enchantmentSeed
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/item/ItemStack;II)Ljava/util/List; getEnchantmentList
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	b (Lnet/minecraft/world/entity/player/EntityHuman;I)Z clickMenuButton
	l ()I getGoldCount
	m ()I getEnchantmentSeed
net/minecraft/world/inventory/ContainerFurnace net/minecraft/world/inventory/AbstractFurnaceMenu
	k INGREDIENT_SLOT
	l FUEL_SLOT
	m RESULT_SLOT
	n SLOT_COUNT
	o DATA_COUNT
	p level
	q INV_SLOT_START
	r INV_SLOT_END
	s USE_ROW_SLOT_START
	t USE_ROW_SLOT_END
	u container
	v data
	w recipeType
	x recipeBookType
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z recipeMatches
	c (Lnet/minecraft/world/item/ItemStack;)Z canSmelt
	d (Lnet/minecraft/world/item/ItemStack;)Z isFuel
	e (I)Z shouldMoveToInventory
	l ()V clearCraftingContent
	m ()I getResultSlotIndex
	n ()I getGridWidth
	o ()I getGridHeight
	p ()I getSize
	q ()F getBurnProgress
	r ()F getLitProgress
	s ()Z isLit
	t ()Lnet/minecraft/world/inventory/RecipeBookType; getRecipeBookType
net/minecraft/world/inventory/ContainerFurnaceFurnace net/minecraft/world/inventory/FurnaceMenu
net/minecraft/world/inventory/ContainerGrindstone net/minecraft/world/inventory/GrindstoneMenu
	k MAX_NAME_LENGTH
	l INPUT_SLOT
	m ADDITIONAL_SLOT
	n RESULT_SLOT
	o INV_SLOT_START
	p INV_SLOT_END
	q USE_ROW_SLOT_START
	r USE_ROW_SLOT_END
	s resultSlots
	t repairSlots
	u access
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/item/ItemStack;II)Lnet/minecraft/world/item/ItemStack; removeNonCurses
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; mergeEnchants
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	l ()V createResult
net/minecraft/world/inventory/ContainerHopper net/minecraft/world/inventory/HopperMenu
	k CONTAINER_SIZE
	l hopper
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
net/minecraft/world/inventory/ContainerHorse net/minecraft/world/inventory/HorseInventoryMenu
	k horseContainer
	l horse
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;)Z hasChest
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
net/minecraft/world/inventory/ContainerLectern net/minecraft/world/inventory/LecternMenu
	k BUTTON_PREV_PAGE
	l BUTTON_NEXT_PAGE
	m BUTTON_TAKE_BOOK
	n BUTTON_PAGE_JUMP_RANGE_START
	o DATA_COUNT
	p SLOT_COUNT
	q lectern
	r lecternData
	a (II)V setData
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (Lnet/minecraft/world/entity/player/EntityHuman;I)Z clickMenuButton
	l ()Lnet/minecraft/world/item/ItemStack; getBook
	m ()I getPage
net/minecraft/world/inventory/ContainerLoom net/minecraft/world/inventory/LoomMenu
	k PATTERN_NOT_SET
	l INV_SLOT_START
	m INV_SLOT_END
	n USE_ROW_SLOT_START
	o USE_ROW_SLOT_END
	p access
	q selectedBannerPatternIndex
	r selectablePatterns
	s slotUpdateListener
	t bannerSlot
	u dyeSlot
	v patternSlot
	w resultSlot
	x lastSoundTime
	y inputContainer
	z outputContainer
	a (Ljava/lang/Runnable;)V registerUpdateListener
	a (Lnet/minecraft/core/Holder;)V setupResultSlot
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	b (Lnet/minecraft/world/entity/player/EntityHuman;I)Z clickMenuButton
	c (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; getSelectablePatterns
	e (I)Z isValidPatternIndex
	l ()Ljava/util/List; getSelectablePatterns
	m ()I getSelectedBannerPatternIndex
	n ()Lnet/minecraft/world/inventory/Slot; getBannerSlot
	o ()Lnet/minecraft/world/inventory/Slot; getDyeSlot
	p ()Lnet/minecraft/world/inventory/Slot; getPatternSlot
	q ()Lnet/minecraft/world/inventory/Slot; getResultSlot
net/minecraft/world/inventory/ContainerMerchant net/minecraft/world/inventory/MerchantMenu
	k PAYMENT1_SLOT
	l PAYMENT2_SLOT
	m RESULT_SLOT
	n INV_SLOT_START
	o INV_SLOT_END
	p USE_ROW_SLOT_START
	q USE_ROW_SLOT_END
	r SELLSLOT1_X
	s SELLSLOT2_X
	t BUYSLOT_X
	u ROW_Y
	v trader
	w tradeContainer
	x merchantLevel
	y showProgressBar
	z canRestock
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/world/item/trading/MerchantRecipeList;)V setOffers
	a (Z)V setShowProgressBar
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	b (Z)V setCanRestock
	c (ILnet/minecraft/world/item/ItemStack;)V moveFromInventoryToPaymentSlot
	e (I)V setSelectionHint
	f (I)V setXp
	g (I)V setMerchantLevel
	h (I)V tryMoveItems
	l ()I getTraderXp
	m ()I getFutureTraderXp
	n ()I getTraderLevel
	o ()Z canRestock
	p ()Lnet/minecraft/world/item/trading/MerchantRecipeList; getOffers
	q ()Z showProgressBar
	r ()V playTradeSound
net/minecraft/world/inventory/ContainerPlayer net/minecraft/world/inventory/InventoryMenu
	A EMPTY_ARMOR_SLOT_SHIELD
	B active
	C TEXTURE_EMPTY_SLOTS
	D SLOT_IDS
	E craftSlots
	F resultSlots
	G owner
	k CONTAINER_ID
	l RESULT_SLOT
	m CRAFT_SLOT_START
	n CRAFT_SLOT_END
	o ARMOR_SLOT_START
	p ARMOR_SLOT_END
	q INV_SLOT_START
	r INV_SLOT_END
	s USE_ROW_SLOT_START
	t USE_ROW_SLOT_END
	u SHIELD_SLOT
	v BLOCK_ATLAS
	w EMPTY_ARMOR_SLOT_HELMET
	x EMPTY_ARMOR_SLOT_CHESTPLATE
	y EMPTY_ARMOR_SLOT_LEGGINGS
	z EMPTY_ARMOR_SLOT_BOOTS
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V onEquipItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z recipeMatches
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	e (I)Z shouldMoveToInventory
	f (I)Z isHotbarSlot
	l ()V clearCraftingContent
	m ()I getResultSlotIndex
	n ()I getGridWidth
	o ()I getGridHeight
	p ()I getSize
	q ()Lnet/minecraft/world/inventory/InventoryCrafting; getCraftSlots
	t ()Lnet/minecraft/world/inventory/RecipeBookType; getRecipeBookType
net/minecraft/world/inventory/ContainerProperties net/minecraft/world/inventory/SimpleContainerData
	a ints
	a ()I getCount
	a (I)I get
	a (II)V set
net/minecraft/world/inventory/ContainerProperty net/minecraft/world/inventory/DataSlot
	a prevValue
	a ()Lnet/minecraft/world/inventory/ContainerProperty; standalone
	a (I)V set
	a (Lnet/minecraft/world/inventory/IContainerProperties;I)Lnet/minecraft/world/inventory/ContainerProperty; forContainer
	a ([II)Lnet/minecraft/world/inventory/ContainerProperty; shared
	b ()I get
	c ()Z checkAndClearUpdateFlag
net/minecraft/world/inventory/ContainerRecipeBook net/minecraft/world/inventory/RecipeBookMenu
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z recipeMatches
	a (ZLnet/minecraft/world/item/crafting/RecipeHolder;Lnet/minecraft/server/level/EntityPlayer;)V handlePlacement
	e (I)Z shouldMoveToInventory
	l ()V clearCraftingContent
	m ()I getResultSlotIndex
	n ()I getGridWidth
	o ()I getGridHeight
	p ()I getSize
	t ()Lnet/minecraft/world/inventory/RecipeBookType; getRecipeBookType
net/minecraft/world/inventory/ContainerShulkerBox net/minecraft/world/inventory/ShulkerBoxMenu
	k CONTAINER_SIZE
	l container
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
net/minecraft/world/inventory/ContainerSmithing net/minecraft/world/inventory/SmithingMenu
	k TEMPLATE_SLOT
	l BASE_SLOT
	m ADDITIONAL_SLOT
	n RESULT_SLOT
	s TEMPLATE_SLOT_X_PLACEMENT
	t BASE_SLOT_X_PLACEMENT
	u ADDITIONAL_SLOT_X_PLACEMENT
	v SLOT_Y_PLACEMENT
	w RESULT_SLOT_X_PLACEMENT
	x level
	y selectedRecipe
	z recipes
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/entity/player/EntityHuman;Z)Z mayPickup
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/world/item/crafting/SmithingRecipe;Lnet/minecraft/world/item/ItemStack;)Ljava/util/OptionalInt; findSlotMatchingIngredient
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBlock
	c (Lnet/minecraft/world/item/ItemStack;)Z canMoveIntoInputSlots
	d (Lnet/minecraft/world/item/ItemStack;)I getSlotToQuickMoveTo
	e (I)V shrinkStackInSlot
	e (Lnet/minecraft/world/item/ItemStack;)Ljava/util/OptionalInt; findSlotToQuickMoveTo
	l ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; createInputSlotDefinitions
	m ()V createResult
	n ()Ljava/util/List; getRelevantItems
net/minecraft/world/inventory/ContainerSmoker net/minecraft/world/inventory/SmokerMenu
net/minecraft/world/inventory/ContainerStonecutter net/minecraft/world/inventory/StonecutterMenu
	A resultContainer
	k INPUT_SLOT
	l RESULT_SLOT
	m inputSlot
	n resultSlot
	o container
	p INV_SLOT_START
	q INV_SLOT_END
	r USE_ROW_SLOT_START
	s USE_ROW_SLOT_END
	t access
	u selectedRecipeIndex
	v level
	w recipes
	x input
	y lastSoundTime
	z slotUpdateListener
	a ()Lnet/minecraft/world/inventory/Containers; getType
	a (Ljava/lang/Runnable;)V registerUpdateListener
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/item/ItemStack;)V setupRecipeList
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	b (Lnet/minecraft/world/entity/player/EntityHuman;I)Z clickMenuButton
	e (I)Z isValidRecipeIndex
	l ()I getSelectedRecipeIndex
	m ()Ljava/util/List; getRecipes
	n ()I getNumRecipes
	o ()Z hasInputItem
	p ()V setupResultSlot
net/minecraft/world/inventory/ContainerWorkbench net/minecraft/world/inventory/CraftingMenu
	k RESULT_SLOT
	l CRAFT_SLOT_START
	m CRAFT_SLOT_END
	n INV_SLOT_START
	o INV_SLOT_END
	p USE_ROW_SLOT_START
	q USE_ROW_SLOT_END
	r craftSlots
	s resultSlots
	t access
	u player
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/inventory/Container;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/inventory/InventoryCraftResult;)V slotChangedCraftingGrid
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z recipeMatches
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	e (I)Z shouldMoveToInventory
	l ()V clearCraftingContent
	m ()I getResultSlotIndex
	n ()I getGridWidth
	o ()I getGridHeight
	p ()I getSize
	t ()Lnet/minecraft/world/inventory/RecipeBookType; getRecipeBookType
net/minecraft/world/inventory/Containers net/minecraft/world/inventory/MenuType
	a GENERIC_9x1
	b GENERIC_9x2
	c GENERIC_9x3
	d GENERIC_9x4
	e GENERIC_9x5
	f GENERIC_9x6
	g GENERIC_3x3
	h ANVIL
	i BEACON
	j BLAST_FURNACE
	k BREWING_STAND
	l CRAFTING
	m ENCHANTMENT
	n FURNACE
	o GRINDSTONE
	p HOPPER
	q LECTERN
	r LOOM
	s MERCHANT
	t SHULKER_BOX
	u SMITHING
	v SMOKER
	w CARTOGRAPHY_TABLE
	x STONECUTTER
	y requiredFeatures
	z constructor
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; create
	a (Ljava/lang/String;Lnet/minecraft/world/inventory/Containers$Supplier;)Lnet/minecraft/world/inventory/Containers; register
	a (Ljava/lang/String;Lnet/minecraft/world/inventory/Containers$Supplier;[Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/inventory/Containers; register
	m ()Lnet/minecraft/world/flag/FeatureFlagSet; requiredFeatures
net/minecraft/world/inventory/Containers$Supplier net/minecraft/world/inventory/MenuType$MenuSupplier
net/minecraft/world/inventory/IContainerProperties net/minecraft/world/inventory/ContainerData
	a ()I getCount
	a (I)I get
	a (II)V set
net/minecraft/world/inventory/ICrafting net/minecraft/world/inventory/ContainerListener
	a (Lnet/minecraft/world/inventory/Container;II)V dataChanged
	a (Lnet/minecraft/world/inventory/Container;ILnet/minecraft/world/item/ItemStack;)V slotChanged
net/minecraft/world/inventory/ITileEntityContainer net/minecraft/world/inventory/MenuConstructor
net/minecraft/world/inventory/InventoryClickType net/minecraft/world/inventory/ClickType
	a PICKUP
	b QUICK_MOVE
	c SWAP
	d CLONE
	e THROW
	f QUICK_CRAFT
	g PICKUP_ALL
	h $VALUES
	a ()[Lnet/minecraft/world/inventory/InventoryClickType; $values
net/minecraft/world/inventory/InventoryCraftResult net/minecraft/world/inventory/ResultContainer
	c itemStacks
	d recipeUsed
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)V setRecipeUsed
	af_ ()Z isEmpty
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	d ()Lnet/minecraft/world/item/crafting/RecipeHolder; getRecipeUsed
	e ()V setChanged
net/minecraft/world/inventory/InventoryCrafting net/minecraft/world/inventory/CraftingContainer
	f ()I getWidth
	g ()I getHeight
	h ()Ljava/util/List; getItems
net/minecraft/world/inventory/InventoryEnderChest net/minecraft/world/inventory/PlayerEnderChestContainer
	c activeChest
	a (Lnet/minecraft/nbt/NBTTagList;)V fromTag
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/level/block/entity/TileEntityEnderChest;)V setActiveChest
	b (Lnet/minecraft/world/level/block/entity/TileEntityEnderChest;)Z isActiveChest
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	d_ (Lnet/minecraft/world/entity/player/EntityHuman;)V startOpen
	g ()Lnet/minecraft/nbt/NBTTagList; createTag
net/minecraft/world/inventory/InventoryMerchant net/minecraft/world/inventory/MerchantContainer
	c merchant
	d itemStacks
	e activeOffer
	f selectionHint
	g futureXp
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	af_ ()Z isEmpty
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	c (I)V setSelectionHint
	d (I)Z isPaymentSlot
	e ()V setChanged
	f ()V updateSellItem
	g ()Lnet/minecraft/world/item/trading/MerchantRecipe; getActiveOffer
	h ()I getFutureXp
net/minecraft/world/inventory/SlotFurnaceFuel net/minecraft/world/inventory/FurnaceFuelSlot
	a menu
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	a_ (Lnet/minecraft/world/item/ItemStack;)I getMaxStackSize
	c (Lnet/minecraft/world/item/ItemStack;)Z isBucket
net/minecraft/world/inventory/SlotFurnaceResult net/minecraft/world/inventory/FurnaceResultSlot
	a player
	b removeCount
	a (I)Lnet/minecraft/world/item/ItemStack; remove
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	a (Lnet/minecraft/world/item/ItemStack;I)V onQuickCraft
	b_ (Lnet/minecraft/world/item/ItemStack;)V checkTakeAchievements
net/minecraft/world/inventory/SlotMerchantResult net/minecraft/world/inventory/MerchantResultSlot
	a slots
	b player
	c removeCount
	h merchant
	a (I)Lnet/minecraft/world/item/ItemStack; remove
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	a (Lnet/minecraft/world/item/ItemStack;I)V onQuickCraft
	b_ (Lnet/minecraft/world/item/ItemStack;)V checkTakeAchievements
net/minecraft/world/inventory/SlotResult net/minecraft/world/inventory/ResultSlot
	a craftSlots
	b player
	c removeCount
	a (I)Lnet/minecraft/world/item/ItemStack; remove
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	a (Lnet/minecraft/world/item/ItemStack;I)V onQuickCraft
	b (I)V onSwapCraft
	b_ (Lnet/minecraft/world/item/ItemStack;)V checkTakeAchievements
net/minecraft/world/inventory/SlotShulkerBox net/minecraft/world/inventory/ShulkerBoxSlot
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
net/minecraft/world/item/EnumAnimation net/minecraft/world/item/UseAnim
	a NONE
	b EAT
	c DRINK
	d BLOCK
	e BOW
	f SPEAR
	g CROSSBOW
	h SPYGLASS
	i TOOT_HORN
	j BRUSH
	k $VALUES
	a ()[Lnet/minecraft/world/item/EnumAnimation; $values
net/minecraft/world/item/EnumArmorMaterial net/minecraft/world/item/ArmorMaterials
	a LEATHER
	b CHAIN
	c IRON
	d GOLD
	e DIAMOND
	f TURTLE
	g NETHERITE
	h CODEC
	i HEALTH_FUNCTION_FOR_TYPE
	j name
	k durabilityMultiplier
	l protectionFunctionForType
	m enchantmentValue
	n sound
	o toughness
	p knockbackResistance
	q repairIngredient
	r $VALUES
	a ()I getEnchantmentValue
	a (Lcgp$a;)I getDurabilityForType
	b ()Lnet/minecraft/sounds/SoundEffect; getEquipSound
	b (Lcgp$a;)I getDefenseForType
	c ()Ljava/lang/String; getSerializedName
	d ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getRepairIngredient
	e ()Ljava/lang/String; getName
	f ()F getToughness
	g ()F getKnockbackResistance
	o ()[Lnet/minecraft/world/item/EnumArmorMaterial; $values
net/minecraft/world/item/EnumColor net/minecraft/world/item/DyeColor
	a WHITE
	b ORANGE
	c MAGENTA
	d LIGHT_BLUE
	e YELLOW
	f LIME
	g PINK
	h GRAY
	i LIGHT_GRAY
	j CYAN
	k PURPLE
	l BLUE
	m BROWN
	n GREEN
	o RED
	p BLACK
	q CODEC
	r BY_ID
	s BY_FIREWORK_COLOR
	t id
	u name
	v mapColor
	w textureDiffuseColors
	x fireworkColor
	y textColor
	z $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/item/EnumColor; byId
	a (Ljava/lang/String;Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/item/EnumColor; byName
	b ()Ljava/lang/String; getName
	b (I)Lnet/minecraft/world/item/EnumColor; byFireworkColor
	c ()Ljava/lang/String; getSerializedName
	d ()[F getTextureDiffuseColors
	e ()Lnet/minecraft/world/level/material/MaterialMapColor; getMapColor
	f ()I getFireworkColor
	g ()I getTextColor
	h ()[Lnet/minecraft/world/item/EnumColor; $values
net/minecraft/world/item/EnumItemRarity net/minecraft/world/item/Rarity
	a COMMON
	b UNCOMMON
	c RARE
	d EPIC
	e color
	f $VALUES
	a ()[Lnet/minecraft/world/item/EnumItemRarity; $values
net/minecraft/world/item/EnumToolMaterial net/minecraft/world/item/Tiers
	a WOOD
	b STONE
	c IRON
	d DIAMOND
	e GOLD
	f NETHERITE
	g level
	h uses
	i speed
	j damage
	k enchantmentValue
	l repairIngredient
	m $VALUES
	a ()I getUses
	b ()F getSpeed
	c ()F getAttackDamageBonus
	d ()I getLevel
	e ()I getEnchantmentValue
	f ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getRepairIngredient
	m ()[Lnet/minecraft/world/item/EnumToolMaterial; $values
net/minecraft/world/item/IDyeable net/minecraft/world/item/DyeableLeatherItem
	o_ TAG_COLOR
	p_ TAG_DISPLAY
	q_ DEFAULT_LEATHER_COLOR
	a (Lnet/minecraft/world/item/ItemStack;)Z hasCustomColor
	a (Lnet/minecraft/world/item/ItemStack;I)V setColor
	a (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)Lnet/minecraft/world/item/ItemStack; dyeArmor
	e_ (Lnet/minecraft/world/item/ItemStack;)I getColor
	f_ (Lnet/minecraft/world/item/ItemStack;)V clearColor
net/minecraft/world/item/Item$Info net/minecraft/world/item/Item$Properties
	a maxStackSize
	b maxDamage
	c craftingRemainingItem
	d rarity
	e foodProperties
	f isFireResistant
	g requiredFeatures
	a ()Lnet/minecraft/world/item/Item$Info; fireResistant
	a (I)Lnet/minecraft/world/item/Item$Info; stacksTo
	a (Lnet/minecraft/world/food/FoodInfo;)Lnet/minecraft/world/item/Item$Info; food
	a (Lnet/minecraft/world/item/EnumItemRarity;)Lnet/minecraft/world/item/Item$Info; rarity
	a (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item$Info; craftRemainder
	a ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/item/Item$Info; requiredFeatures
	b (I)Lnet/minecraft/world/item/Item$Info; defaultDurability
	c (I)Lnet/minecraft/world/item/Item$Info; durability
net/minecraft/world/item/ItemAir net/minecraft/world/item/AirItem
	a block
	a ()Ljava/lang/String; getDescriptionId
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
net/minecraft/world/item/ItemArmor net/minecraft/world/item/ArmorItem
	a DISPENSE_ITEM_BEHAVIOR
	b type
	c knockbackResistance
	d material
	e ARMOR_MODIFIER_UUID_PER_TYPE
	f defense
	g toughness
	h defaultModifiers
	a (Lnet/minecraft/core/dispenser/SourceBlock;Lnet/minecraft/world/item/ItemStack;)Z dispenseArmor
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	ao_ ()Lnet/minecraft/sounds/SoundEffect; getEquipSound
	b ()Lcgp$a; getType
	c ()I getEnchantmentValue
	d ()Lnet/minecraft/world/item/ArmorMaterial; getMaterial
	e ()I getDefense
	f ()F getToughness
	g ()Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlot
net/minecraft/world/item/ItemArmorColorable net/minecraft/world/item/DyeableArmorItem
net/minecraft/world/item/ItemArmorStand net/minecraft/world/item/ArmorStandItem
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
net/minecraft/world/item/ItemArrow net/minecraft/world/item/ArrowItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/projectile/EntityArrow; createArrow
net/minecraft/world/item/ItemAxe net/minecraft/world/item/AxeItem
	a STRIPPABLES
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; getStripped
net/minecraft/world/item/ItemBanner net/minecraft/world/item/BannerItem
	c PATTERN_PREFIX
	a (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)V appendHoverTextFromBannerBlockEntityTag
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	b ()Lnet/minecraft/world/item/EnumColor; getColor
net/minecraft/world/item/ItemBannerPattern net/minecraft/world/item/BannerPatternItem
	a bannerPattern
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	b ()Lnet/minecraft/tags/TagKey; getBannerPattern
	d ()Lnet/minecraft/network/chat/IChatMutableComponent; getDisplayName
net/minecraft/world/item/ItemBed net/minecraft/world/item/BedItem
	a (Lnet/minecraft/world/item/context/BlockActionContext;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeBlock
net/minecraft/world/item/ItemBisected net/minecraft/world/item/DoubleHighBlockItem
	a (Lnet/minecraft/world/item/context/BlockActionContext;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeBlock
net/minecraft/world/item/ItemBlock net/minecraft/world/item/BlockItem
	a BLOCK_ENTITY_TAG
	b BLOCK_STATE_TAG
	c block
	a ()Ljava/lang/String; getDescriptionId
	a (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V registerBlocks
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)Z updateCustomBlockEntityTag
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; updateBlockStateFromTag
	a (Lnet/minecraft/world/entity/item/EntityItem;)V onDestroyed
	a (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/NBTTagCompound; getBlockEntityData
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/TileEntityTypes;Lnet/minecraft/nbt/NBTTagCompound;)V setBlockEntityData
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/EnumInteractionResult; place
	a (Lnet/minecraft/world/item/context/BlockActionContext;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeBlock
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;)Z updateCustomBlockEntityTag
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/sounds/SoundEffect; getPlaceSound
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/IBlockData; updateState
	al_ ()Z canFitInsideContainerItems
	b (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/item/context/BlockActionContext; updatePlacementContext
	b (Lnet/minecraft/world/item/context/BlockActionContext;Lnet/minecraft/world/level/block/state/IBlockData;)Z canPlace
	c (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getPlacementState
	d ()Z mustSurvive
	e ()Lnet/minecraft/world/level/block/Block; getBlock
	m ()Lnet/minecraft/world/flag/FeatureFlagSet; requiredFeatures
net/minecraft/world/item/ItemBlockWallable net/minecraft/world/item/StandingAndWallBlockItem
	c attachmentDirection
	d wallBlock
	a (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V registerBlocks
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)Z canPlace
	c (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getPlacementState
net/minecraft/world/item/ItemBoat net/minecraft/world/item/BoatItem
	a ENTITY_PREDICATE
	b type
	c hasChest
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/phys/MovingObjectPosition;)Lnet/minecraft/world/entity/vehicle/EntityBoat; getBoat
net/minecraft/world/item/ItemBoneMeal net/minecraft/world/item/BoneMealItem
	a GRASS_SPREAD_WIDTH
	b GRASS_SPREAD_HEIGHT
	c GRASS_COUNT_MULTIPLIER
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z growCrop
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z growWaterPlant
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;I)V addGrowthParticles
net/minecraft/world/item/ItemBook net/minecraft/world/item/BookItem
	c ()I getEnchantmentValue
	d_ (Lnet/minecraft/world/item/ItemStack;)Z isEnchantable
net/minecraft/world/item/ItemBookAndQuill net/minecraft/world/item/WritableBookItem
	a (Lnet/minecraft/nbt/NBTTagCompound;)Z makeSureTagIsValid
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemBow net/minecraft/world/item/BowItem
	a MAX_DRAW_DURATION
	b DEFAULT_RANGE
	a (I)F getPowerForTime
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
	d ()I getDefaultProjectileRange
net/minecraft/world/item/ItemBucket net/minecraft/world/item/BucketItem
	a content
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V playEmptySound
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Z emptyContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)V checkExtraContent
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/item/ItemStack; getEmptySuccessItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemCarrotStick net/minecraft/world/item/FoodOnAStickItem
	a canInteractWith
	b consumeItemDamage
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemChorusFruit net/minecraft/world/item/ChorusFruitItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
net/minecraft/world/item/ItemCompass net/minecraft/world/item/CompassItem
	a TAG_LODESTONE_POS
	b TAG_LODESTONE_DIMENSION
	c TAG_LODESTONE_TRACKED
	d LOGGER
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/core/GlobalPos; getLodestonePosition
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/nbt/NBTTagCompound;)V addLodestoneTags
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/core/GlobalPos; getSpawnPosition
	c (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/Optional; getLodestoneDimension
	d (Lnet/minecraft/world/item/ItemStack;)Z isLodestoneCompass
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
	j (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; getDescriptionId
net/minecraft/world/item/ItemCooldown net/minecraft/world/item/ItemCooldowns
	a cooldowns
	b tickCount
	a ()V tick
	a (Lnet/minecraft/world/item/Item;)Z isOnCooldown
	a (Lnet/minecraft/world/item/Item;F)F getCooldownPercent
	a (Lnet/minecraft/world/item/Item;I)V addCooldown
	b (Lnet/minecraft/world/item/Item;)V removeCooldown
	b (Lnet/minecraft/world/item/Item;I)V onCooldownStarted
	c (Lnet/minecraft/world/item/Item;)V onCooldownEnded
net/minecraft/world/item/ItemCooldown$Info net/minecraft/world/item/ItemCooldowns$CooldownInstance
	a startTime
	b endTime
net/minecraft/world/item/ItemCooldownPlayer net/minecraft/world/item/ServerItemCooldowns
	a player
	b (Lnet/minecraft/world/item/Item;I)V onCooldownStarted
	c (Lnet/minecraft/world/item/Item;)V onCooldownEnded
net/minecraft/world/item/ItemCrossbow net/minecraft/world/item/CrossbowItem
	a DEFAULT_RANGE
	b TAG_CHARGED
	e TAG_CHARGED_PROJECTILES
	f MAX_CHARGE_DURATION
	g startSoundPlayed
	h midLoadSoundPlayed
	i START_SOUND_PERCENT
	j MID_SOUND_PERCENT
	k ARROW_POWER
	r FIREWORK_POWER
	a (I)Lnet/minecraft/sounds/SoundEffect; getStartSound
	a (ILnet/minecraft/world/item/ItemStack;)F getPowerForTime
	a (Lnet/minecraft/util/RandomSource;)[F getShotPitches
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)Z tryLoadProjectiles
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;ZZ)Z loadProjectile
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/Item;)Z containsChargedProjectile
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/world/item/ItemStack;Z)V setCharged
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;FF)V performShooting
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;FZFFF)V shootProjectile
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V onCrossbowShot
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;I)V onUseTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/EntityArrow; getArrow
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	a (ZLnet/minecraft/util/RandomSource;)F getRandomShotPitch
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V addChargedProjectile
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
	d ()I getDefaultProjectileRange
	d (Lnet/minecraft/world/item/ItemStack;)Z isCharged
	e ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
	k (Lnet/minecraft/world/item/ItemStack;)I getChargeDuration
	l (Lnet/minecraft/world/item/ItemStack;)Z useOnRelease
	o (Lnet/minecraft/world/item/ItemStack;)F getShootingPower
	p (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; getChargedProjectiles
	q (Lnet/minecraft/world/item/ItemStack;)V clearChargedProjectiles
net/minecraft/world/item/ItemDebugStick net/minecraft/world/item/DebugStickItem
	a (Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object; getRelative
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/network/chat/IChatBaseComponent;)V message
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/item/ItemStack;)Z handleInteraction
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)Z canAttackBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Ljava/lang/String; getNameHelper
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/IBlockState;Z)Lnet/minecraft/world/level/block/state/IBlockData; cycleState
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
net/minecraft/world/item/ItemDye net/minecraft/world/item/DyeItem
	a ITEM_BY_COLOR
	b dyeColor
	a (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/item/ItemDye; byColor
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactLivingEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/TileEntitySign;ZLnet/minecraft/world/entity/player/EntityHuman;)Z tryApplyToSign
	d ()Lnet/minecraft/world/item/EnumColor; getDyeColor
net/minecraft/world/item/ItemEgg net/minecraft/world/item/EggItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemElytra net/minecraft/world/item/ElytraItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	ao_ ()Lnet/minecraft/sounds/SoundEffect; getEquipSound
	d (Lnet/minecraft/world/item/ItemStack;)Z isFlyEnabled
	g ()Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlot
net/minecraft/world/item/ItemEnchantedBook net/minecraft/world/item/EnchantedBookItem
	a TAG_STORED_ENCHANTMENTS
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/WeightedRandomEnchant;)V addEnchantment
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/enchantment/WeightedRandomEnchant;)Lnet/minecraft/world/item/ItemStack; createForEnchantment
	d (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/NBTTagList; getEnchantments
	d_ (Lnet/minecraft/world/item/ItemStack;)Z isEnchantable
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
net/minecraft/world/item/ItemEndCrystal net/minecraft/world/item/EndCrystalItem
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
net/minecraft/world/item/ItemEnderEye net/minecraft/world/item/EnderEyeItem
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemEnderPearl net/minecraft/world/item/EnderpearlItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemExpBottle net/minecraft/world/item/ExperienceBottleItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
net/minecraft/world/item/ItemFireball net/minecraft/world/item/FireChargeItem
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V playSound
net/minecraft/world/item/ItemFireworks net/minecraft/world/item/FireworkRocketItem
	a CRAFTABLE_DURATIONS
	b TAG_FIREWORKS
	c TAG_EXPLOSION
	d TAG_EXPLOSIONS
	e TAG_FLIGHT
	f TAG_EXPLOSION_TYPE
	g TAG_EXPLOSION_TRAIL
	h TAG_EXPLOSION_FLICKER
	i TAG_EXPLOSION_COLORS
	j TAG_EXPLOSION_FADECOLORS
	k ROCKET_PLACEMENT_OFFSET
	a (Lnet/minecraft/world/item/ItemStack;B)V setDuration
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	ai_ ()Lnet/minecraft/world/item/ItemStack; getDefaultInstance
net/minecraft/world/item/ItemFireworks$EffectType net/minecraft/world/item/FireworkRocketItem$Shape
	a SMALL_BALL
	b LARGE_BALL
	c STAR
	d CREEPER
	e BURST
	f BY_ID
	g id
	h name
	i $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/item/ItemFireworks$EffectType; byId
	b ()Ljava/lang/String; getName
	c ()[Lnet/minecraft/world/item/ItemFireworks$EffectType; $values
net/minecraft/world/item/ItemFireworksCharge net/minecraft/world/item/FireworkStarItem
	a (I)Lnet/minecraft/network/chat/IChatBaseComponent; getColorName
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/List;)V appendHoverText
	a (Lnet/minecraft/network/chat/IChatMutableComponent;[I)Lnet/minecraft/network/chat/IChatBaseComponent; appendColors
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
net/minecraft/world/item/ItemFishingRod net/minecraft/world/item/FishingRodItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	c ()I getEnchantmentValue
net/minecraft/world/item/ItemFlintAndSteel net/minecraft/world/item/FlintAndSteelItem
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
net/minecraft/world/item/ItemGlassBottle net/minecraft/world/item/BottleItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; turnBottleIntoItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemGoldenAppleEnchanted net/minecraft/world/item/EnchantedGoldenAppleItem
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
net/minecraft/world/item/ItemHanging net/minecraft/world/item/HangingEntityItem
	a TOOLTIP_RANDOM_VARIANT
	b type
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)Z mayPlace
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
net/minecraft/world/item/ItemHoe net/minecraft/world/item/HoeItem
	a TILLABLES
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IMaterial;)Ljava/util/function/Consumer; changeIntoStateAndDropItem
	b (Lnet/minecraft/world/item/context/ItemActionContext;)Z onlyIfAirAbove
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/function/Consumer; changeIntoState
net/minecraft/world/item/ItemHoneyBottle net/minecraft/world/item/HoneyBottleItem
	a DRINK_DURATION
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	aj_ ()Lnet/minecraft/sounds/SoundEffect; getDrinkingSound
	ak_ ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
net/minecraft/world/item/ItemHorseArmor net/minecraft/world/item/HorseArmorItem
	a TEX_FOLDER
	b protection
	c texture
	h ()Lnet/minecraft/resources/MinecraftKey; getTexture
	i ()I getProtection
net/minecraft/world/item/ItemHorseArmorDyeable net/minecraft/world/item/DyeableHorseArmorItem
net/minecraft/world/item/ItemItemFrame net/minecraft/world/item/ItemFrameItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)Z mayPlace
net/minecraft/world/item/ItemKnowledgeBook net/minecraft/world/item/KnowledgeBookItem
	a RECIPE_TAG
	b LOGGER
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemLeash net/minecraft/world/item/LeadItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/EnumInteractionResult; bindPlayerMobs
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
net/minecraft/world/item/ItemLingeringPotion net/minecraft/world/item/LingeringPotionItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemLiquidUtil net/minecraft/world/item/ItemUtils
	a (Lnet/minecraft/world/entity/item/EntityItem;Ljava/util/stream/Stream;)V onContainerDestroyed
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; createFilledResult
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/item/ItemStack; createFilledResult
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; startUsingInstantly
net/minecraft/world/item/ItemMapEmpty net/minecraft/world/item/EmptyMapItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemMilkBucket net/minecraft/world/item/MilkBucketItem
	a DRINK_DURATION
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
net/minecraft/world/item/ItemMinecart net/minecraft/world/item/MinecartItem
	a DISPENSE_ITEM_BEHAVIOR
	b type
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
net/minecraft/world/item/ItemMonsterEgg net/minecraft/world/item/SpawnEggItem
	a BY_ID
	b backgroundColor
	c highlightColor
	d defaultType
	a (I)I getColor
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/EntityTypes; getType
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/entity/EntityTypes;)Z spawnsEntity
	a (Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/world/item/ItemMonsterEgg; byId
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; spawnOffspringFromSpawnEgg
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	h ()Ljava/lang/Iterable; eggs
	m ()Lnet/minecraft/world/flag/FeatureFlagSet; requiredFeatures
net/minecraft/world/item/ItemNameTag net/minecraft/world/item/NameTagItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactLivingEntity
net/minecraft/world/item/ItemNamedBlock net/minecraft/world/item/ItemNameBlockItem
	a ()Ljava/lang/String; getDescriptionId
net/minecraft/world/item/ItemNetherStar net/minecraft/world/item/SimpleFoiledItem
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
net/minecraft/world/item/ItemPickaxe net/minecraft/world/item/PickaxeItem
net/minecraft/world/item/ItemPotion net/minecraft/world/item/PotionItem
	a DRINK_DURATION
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	ai_ ()Lnet/minecraft/world/item/ItemStack; getDefaultInstance
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
	j (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; getDescriptionId
net/minecraft/world/item/ItemPotionThrowable net/minecraft/world/item/ThrowablePotionItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemProjectileWeapon net/minecraft/world/item/ProjectileWeaponItem
	c ARROW_ONLY
	d ARROW_OR_FIREWORK
	a (Lnet/minecraft/world/entity/EntityLiving;Ljava/util/function/Predicate;)Lnet/minecraft/world/item/ItemStack; getHeldProjectile
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	c ()I getEnchantmentValue
	d ()I getDefaultProjectileRange
	e ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
net/minecraft/world/item/ItemRecord net/minecraft/world/item/RecordItem
	a BY_NAME
	b analogOutput
	c sound
	d lengthInTicks
	a (Lnet/minecraft/sounds/SoundEffect;)Lnet/minecraft/world/item/ItemRecord; getBySound
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	h ()I getAnalogOutput
	i ()Lnet/minecraft/network/chat/IChatMutableComponent; getDisplayName
	x ()Lnet/minecraft/sounds/SoundEffect; getSound
	y ()I getLengthInTicks
net/minecraft/world/item/ItemRestricted net/minecraft/world/item/GameMasterBlockItem
	c (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getPlacementState
net/minecraft/world/item/ItemSaddle net/minecraft/world/item/SaddleItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactLivingEntity
net/minecraft/world/item/ItemScaffolding net/minecraft/world/item/ScaffoldingBlockItem
	b (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/item/context/BlockActionContext; updatePlacementContext
	d ()Z mustSurvive
net/minecraft/world/item/ItemShears net/minecraft/world/item/ShearsItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isCorrectToolForDrops
net/minecraft/world/item/ItemShield net/minecraft/world/item/ShieldItem
	a EFFECTIVE_BLOCK_DELAY
	b MINIMUM_DURABILITY_DAMAGE
	c TAG_BASE_COLOR
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
	d (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumColor; getColor
	g ()Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlot
	j (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; getDescriptionId
net/minecraft/world/item/ItemSign net/minecraft/world/item/SignItem
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)Z updateCustomBlockEntityTag
net/minecraft/world/item/ItemSkullPlayer net/minecraft/world/item/PlayerHeadItem
	c TAG_SKULL_OWNER
	b (Lnet/minecraft/nbt/NBTTagCompound;)V verifyTagAfterLoad
	m (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/IChatBaseComponent; getName
net/minecraft/world/item/ItemSnowball net/minecraft/world/item/SnowballItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemSoup net/minecraft/world/item/BowlFoodItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
net/minecraft/world/item/ItemSpade net/minecraft/world/item/ShovelItem
	a FLATTENABLES
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
net/minecraft/world/item/ItemSpectralArrow net/minecraft/world/item/SpectralArrowItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/projectile/EntityArrow; createArrow
net/minecraft/world/item/ItemSplashPotion net/minecraft/world/item/SplashPotionItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemStack$HideFlags net/minecraft/world/item/ItemStack$TooltipPart
	a ENCHANTMENTS
	b MODIFIERS
	c UNBREAKABLE
	d CAN_DESTROY
	e CAN_PLACE
	f ADDITIONAL
	g DYE
	h UPGRADES
	i mask
	j $VALUES
	a ()I getMask
	b ()[Lnet/minecraft/world/item/ItemStack$HideFlags; $values
net/minecraft/world/item/ItemSuspiciousStew net/minecraft/world/item/SuspiciousStewItem
	a EFFECTS_TAG
	b DEFAULT_DURATION
	a (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)V saveMobEffects
	a (Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Consumer;)V listPotionEffects
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
	b (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)V appendMobEffects
net/minecraft/world/item/ItemSword net/minecraft/world/item/SwordItem
	a attackDamage
	b defaultModifiers
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)Z canAttackBlock
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isCorrectToolForDrops
	h ()F getDamage
net/minecraft/world/item/ItemTippedArrow net/minecraft/world/item/TippedArrowItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	ai_ ()Lnet/minecraft/world/item/ItemStack; getDefaultInstance
	j (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; getDescriptionId
net/minecraft/world/item/ItemTool net/minecraft/world/item/DiggerItem
	a blocks
	b speed
	c attackDamageBaseline
	d defaultModifiers
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)F getDestroySpeed
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isCorrectToolForDrops
	d ()F getAttackDamage
net/minecraft/world/item/ItemToolMaterial net/minecraft/world/item/TieredItem
	a tier
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isValidRepairItem
	c ()I getEnchantmentValue
	i ()Lnet/minecraft/world/item/ToolMaterial; getTier
net/minecraft/world/item/ItemTrident net/minecraft/world/item/TridentItem
	a THROW_THRESHOLD_TIME
	b BASE_DAMAGE
	c SHOOT_POWER
	d defaultModifiers
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)Z canAttackBlock
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c ()I getEnchantmentValue
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
net/minecraft/world/item/ItemVanishable net/minecraft/world/item/Vanishable
net/minecraft/world/item/ItemWorldMap net/minecraft/world/item/MapItem
	a IMAGE_WIDTH
	b IMAGE_HEIGHT
	c MAP_SCALE_TAG
	d MAP_LOCK_TAG
	e DEFAULT_MAP_COLOR
	f TAG_MAP
	a (I)Ljava/lang/String; makeKey
	a (Ljava/lang/Integer;Lnet/minecraft/world/level/World;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; getSavedData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;)V renderBiomePreviewMap
	a (Lnet/minecraft/world/item/ItemStack;I)V storeMapData
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; getSavedData
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;I)V scaleMap
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;IIIZZLnet/minecraft/resources/ResourceKey;)V createAndStoreSavedData
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;IIBZZ)Lnet/minecraft/world/item/ItemStack; create
	a (Lnet/minecraft/world/level/World;IIIZZLnet/minecraft/resources/ResourceKey;)I createNewSavedData
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V update
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;)V lockMap
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getCorrectStateForFluidBlock
	a ([ZII)Z isBiomeWatery
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;)V onCraftedBy
	c (I)Lnet/minecraft/network/chat/IChatBaseComponent; getTooltipForId
	d (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/Integer; getMapId
	k (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/IChatBaseComponent; getTooltipForId
	o (Lnet/minecraft/world/item/ItemStack;)I getColor
net/minecraft/world/item/ItemWorldMapBase net/minecraft/world/item/ComplexItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	ah_ ()Z isComplex
net/minecraft/world/item/ItemWrittenBook net/minecraft/world/item/WrittenBookItem
	a TITLE_LENGTH
	b TITLE_MAX_LENGTH
	c PAGE_EDIT_LENGTH
	d PAGE_LENGTH
	e MAX_PAGES
	f MAX_GENERATION
	g TAG_TITLE
	h TAG_FILTERED_TITLE
	i TAG_AUTHOR
	j TAG_PAGES
	k TAG_FILTERED_PAGES
	r TAG_GENERATION
	s TAG_RESOLVED
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/player/EntityHuman;Ljava/lang/String;)Ljava/lang/String; resolvePage
	a (Lnet/minecraft/nbt/NBTTagCompound;)Z makeSureTagIsValid
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/player/EntityHuman;)Z resolveBookComponents
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	d (Lnet/minecraft/world/item/ItemStack;)I getGeneration
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
	k (Lnet/minecraft/world/item/ItemStack;)I getPageCount
	m (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/IChatBaseComponent; getName
net/minecraft/world/item/ToolMaterial net/minecraft/world/item/Tier
	a ()I getUses
	b ()F getSpeed
	c ()F getAttackDamageBonus
	d ()I getLevel
	e ()I getEnchantmentValue
	f ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getRepairIngredient
net/minecraft/world/item/alchemy/PotionBrewer net/minecraft/world/item/alchemy/PotionBrewing
	a BREWING_TIME_SECONDS
	b POTION_MIXES
	c CONTAINER_MIXES
	d ALLOWED_CONTAINERS
	e ALLOWED_CONTAINER
	a ()V bootStrap
	a (Lnet/minecraft/world/item/Item;)V addContainer
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)V addContainerRecipe
	a (Lnet/minecraft/world/item/ItemStack;)Z isIngredient
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z hasMix
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;)Z isBrewablePotion
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/alchemy/PotionRegistry;)V addMix
	b (Lnet/minecraft/world/item/ItemStack;)Z isContainerIngredient
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z hasContainerMix
	c (Lnet/minecraft/world/item/ItemStack;)Z isPotionIngredient
	c (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z hasPotionMix
	d (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; mix
net/minecraft/world/item/alchemy/PotionBrewer$PredicatedCombination net/minecraft/world/item/alchemy/PotionBrewing$Mix
	a from
	b ingredient
	c to
net/minecraft/world/item/alchemy/PotionRegistry net/minecraft/world/item/alchemy/Potion
	a name
	b effects
	c builtInRegistryHolder
	a ()Ljava/util/List; getEffects
	a (Ljava/lang/String;)Lnet/minecraft/world/item/alchemy/PotionRegistry; byName
	b ()Z hasInstantEffects
	b (Ljava/lang/String;)Ljava/lang/String; getName
	c ()Lhe$c; builtInRegistryHolder
net/minecraft/world/item/alchemy/PotionUtil net/minecraft/world/item/alchemy/PotionUtils
	a TAG_CUSTOM_POTION_EFFECTS
	b TAG_CUSTOM_POTION_COLOR
	c TAG_POTION
	d EMPTY_COLOR
	e NO_EFFECT
	a (Ljava/util/Collection;)I getColor
	a (Ljava/util/List;Ljava/util/List;F)V addPotionTooltip
	a (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/List; getAllEffects
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/List;)V getCustomEffects
	a (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; getMobEffects
	a (Lnet/minecraft/world/item/ItemStack;Ljava/util/Collection;)Lnet/minecraft/world/item/ItemStack; setCustomEffects
	a (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;F)V addPotionTooltip
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/PotionRegistry;)Lnet/minecraft/world/item/ItemStack; setPotion
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;)I getColor
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;Ljava/util/Collection;)Ljava/util/List; getAllEffects
	b (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/List; getCustomEffects
	b (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; getCustomEffects
	c (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/item/alchemy/PotionRegistry; getPotion
	c (Lnet/minecraft/world/item/ItemStack;)I getColor
	d (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/alchemy/PotionRegistry; getPotion
net/minecraft/world/item/context/BlockActionContext net/minecraft/world/item/context/BlockPlaceContext
	a replaceClicked
	b relativePos
	a ()Lnet/minecraft/core/BlockPosition; getClickedPos
	a (Lnet/minecraft/world/item/context/BlockActionContext;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/item/context/BlockActionContext; at
	b ()Z canPlace
	c ()Z replacingClickedOnBlock
	d ()Lnet/minecraft/core/EnumDirection; getNearestLookingDirection
	e ()Lnet/minecraft/core/EnumDirection; getNearestLookingVerticalDirection
	f ()[Lnet/minecraft/core/EnumDirection; getNearestLookingDirections
net/minecraft/world/item/context/BlockActionContextDirectional net/minecraft/world/item/context/DirectionalPlaceContext
	b direction
	a ()Lnet/minecraft/core/BlockPosition; getClickedPos
	b ()Z canPlace
	c ()Z replacingClickedOnBlock
	d ()Lnet/minecraft/core/EnumDirection; getNearestLookingDirection
	f ()[Lnet/minecraft/core/EnumDirection; getNearestLookingDirections
	g ()Lnet/minecraft/core/EnumDirection; getHorizontalDirection
	h ()Z isSecondaryUseActive
	i ()F getRotation
net/minecraft/world/item/context/ItemActionContext net/minecraft/world/item/context/UseOnContext
	a player
	b hand
	c hitResult
	d level
	e itemStack
	a ()Lnet/minecraft/core/BlockPosition; getClickedPos
	g ()Lnet/minecraft/core/EnumDirection; getHorizontalDirection
	h ()Z isSecondaryUseActive
	i ()F getRotation
	j ()Lnet/minecraft/world/phys/MovingObjectPositionBlock; getHitResult
	k ()Lnet/minecraft/core/EnumDirection; getClickedFace
	l ()Lnet/minecraft/world/phys/Vec3D; getClickLocation
	m ()Z isInside
	n ()Lnet/minecraft/world/item/ItemStack; getItemInHand
	o ()Lnet/minecraft/world/entity/player/EntityHuman; getPlayer
	p ()Lnet/minecraft/world/EnumHand; getHand
	q ()Lnet/minecraft/world/level/World; getLevel
net/minecraft/world/item/crafting/CraftingManager net/minecraft/world/item/crafting/RecipeManager
	a GSON
	b LOGGER
	c recipes
	d byName
	e hasErrors
	a ()Z hadErrorsLoading
	a (Ljava/lang/Iterable;)V replaceRecipes
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; byKey
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/RecipeHolder; fromJson
	a (Lnet/minecraft/world/item/crafting/Recipes;)Ljava/util/List; getAllRecipesFor
	a (Lnet/minecraft/world/item/crafting/Recipes;Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Ljava/util/Optional; getRecipeFor
	a (Lnet/minecraft/world/item/crafting/Recipes;Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; getRecipeFor
	b ()Ljava/util/Collection; getRecipes
	b (Lnet/minecraft/world/item/crafting/Recipes;)Lcml$a; createCheck
	b (Lnet/minecraft/world/item/crafting/Recipes;Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Ljava/util/List; getRecipesFor
	c (Lnet/minecraft/world/item/crafting/Recipes;)Ljava/util/Map; byType
	c (Lnet/minecraft/world/item/crafting/Recipes;Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Lnet/minecraft/core/NonNullList; getRemainingItemsFor
	d ()Ljava/util/stream/Stream; getRecipeIds
net/minecraft/world/item/crafting/FurnaceRecipe net/minecraft/world/item/crafting/SmeltingRecipe
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	g ()Lnet/minecraft/world/item/ItemStack; getToastSymbol
net/minecraft/world/item/crafting/IRecipe net/minecraft/world/item/crafting/Recipe
	a ()Lnet/minecraft/core/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;)Lnet/minecraft/core/NonNullList; getRemainingItems
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	am_ ()Z isSpecial
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	c ()Ljava/lang/String; getGroup
	e ()Lnet/minecraft/world/item/crafting/Recipes; getType
	g ()Lnet/minecraft/world/item/ItemStack; getToastSymbol
	h ()Z showNotification
	i ()Z isIncomplete
net/minecraft/world/item/crafting/IRecipeComplex net/minecraft/world/item/crafting/CustomRecipe
	a category
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	am_ ()Z isSpecial
	d ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; category
net/minecraft/world/item/crafting/RecipeArmorDye net/minecraft/world/item/crafting/ArmorDyeRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeBannerDuplicate net/minecraft/world/item/crafting/BannerDuplicateRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;)Lnet/minecraft/core/NonNullList; getRemainingItems
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;)Lnet/minecraft/core/NonNullList; getRemainingItems
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeBlasting net/minecraft/world/item/crafting/BlastingRecipe
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	g ()Lnet/minecraft/world/item/ItemStack; getToastSymbol
net/minecraft/world/item/crafting/RecipeBookClone net/minecraft/world/item/crafting/BookCloningRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;)Lnet/minecraft/core/NonNullList; getRemainingItems
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;)Lnet/minecraft/core/NonNullList; getRemainingItems
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeCampfire net/minecraft/world/item/crafting/CampfireCookingRecipe
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	g ()Lnet/minecraft/world/item/ItemStack; getToastSymbol
net/minecraft/world/item/crafting/RecipeCooking net/minecraft/world/item/crafting/AbstractCookingRecipe
	a type
	b category
	c group
	d ingredient
	e result
	f experience
	g cookingTime
	a ()Lnet/minecraft/core/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	b ()F getExperience
	c ()Ljava/lang/String; getGroup
	d ()I getCookingTime
	e ()Lnet/minecraft/world/item/crafting/Recipes; getType
	f ()Lnet/minecraft/world/item/crafting/CookingBookCategory; category
net/minecraft/world/item/crafting/RecipeCrafting net/minecraft/world/item/crafting/CraftingRecipe
	d ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; category
	e ()Lnet/minecraft/world/item/crafting/Recipes; getType
net/minecraft/world/item/crafting/RecipeFireworks net/minecraft/world/item/crafting/FireworkRocketRecipe
	a PAPER_INGREDIENT
	b GUNPOWDER_INGREDIENT
	c STAR_INGREDIENT
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeFireworksFade net/minecraft/world/item/crafting/FireworkStarFadeRecipe
	a STAR_INGREDIENT
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeFireworksStar net/minecraft/world/item/crafting/FireworkStarRecipe
	a SHAPE_INGREDIENT
	b TRAIL_INGREDIENT
	c FLICKER_INGREDIENT
	d SHAPE_BY_ITEM
	e GUNPOWDER_INGREDIENT
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeItemStack net/minecraft/world/item/crafting/Ingredient
	a EMPTY
	b CODEC
	c CODEC_NONEMPTY
	d values
	e itemStacks
	f stackingIds
	a ()[Lnet/minecraft/world/item/ItemStack; getItems
	a (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/RecipeItemStack; of
	a (Lnet/minecraft/network/PacketDataSerializer;)V toNetwork
	a (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/item/crafting/RecipeItemStack; of
	a (Lnet/minecraft/world/item/ItemStack;)Z test
	a (Z)Lcom/google/gson/JsonElement; toJson
	a ([Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/crafting/RecipeItemStack; of
	a ([Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/world/item/crafting/RecipeItemStack; of
	b ()Lit/unimi/dsi/fastutil/ints/IntList; getStackingIds
	b (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/RecipeItemStack; fromValues
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/RecipeItemStack; fromNetwork
	b (Z)Lcom/mojang/serialization/Codec; codec
	c ()Z isEmpty
	d ()Lnet/minecraft/world/item/crafting/RecipeItemStack; of
net/minecraft/world/item/crafting/RecipeItemStack$Provider net/minecraft/world/item/crafting/Ingredient$Value
	a CODEC
	a ()Ljava/util/Collection; getItems
net/minecraft/world/item/crafting/RecipeItemStack$StackProvider net/minecraft/world/item/crafting/Ingredient$ItemValue
	b item
	c CODEC
	a ()Ljava/util/Collection; getItems
	b ()Lnet/minecraft/world/item/ItemStack; item
net/minecraft/world/item/crafting/RecipeMapClone net/minecraft/world/item/crafting/MapCloningRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeMapExtend net/minecraft/world/item/crafting/MapExtendingRecipe
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;)Lnet/minecraft/world/item/ItemStack; findFilledMap
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	am_ ()Z isSpecial
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeRepair net/minecraft/world/item/crafting/RepairItemRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeSerializerCooking net/minecraft/world/item/crafting/SimpleCookingSerializer
	x factory
	y codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/RecipeCooking;)V toNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/RecipeCooking; fromNetwork
net/minecraft/world/item/crafting/RecipeShulkerBox net/minecraft/world/item/crafting/ShulkerBoxColoring
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeSingleItem net/minecraft/world/item/crafting/SingleItemRecipe
	a ingredient
	b result
	c group
	d type
	e serializer
	a ()Lnet/minecraft/core/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	c ()Ljava/lang/String; getGroup
	e ()Lnet/minecraft/world/item/crafting/Recipes; getType
net/minecraft/world/item/crafting/RecipeSmoking net/minecraft/world/item/crafting/SmokingRecipe
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	g ()Lnet/minecraft/world/item/ItemStack; getToastSymbol
net/minecraft/world/item/crafting/RecipeStonecutting net/minecraft/world/item/crafting/StonecutterRecipe
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	g ()Lnet/minecraft/world/item/ItemStack; getToastSymbol
net/minecraft/world/item/crafting/RecipeSuspiciousStew net/minecraft/world/item/crafting/SuspiciousStewRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeTippedArrow net/minecraft/world/item/crafting/TippedArrowRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/Recipes net/minecraft/world/item/crafting/RecipeType
	a CRAFTING
	b SMELTING
	c BLASTING
	d SMOKING
	e CAMPFIRE_COOKING
	f STONECUTTING
	g SMITHING
	a (Ljava/lang/String;)Lnet/minecraft/world/item/crafting/Recipes; register
net/minecraft/world/item/crafting/RecipiesShield net/minecraft/world/item/crafting/ShieldDecorationRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/ShapedRecipes net/minecraft/world/item/crafting/ShapedRecipe
	a width
	b height
	c recipeItems
	d result
	e group
	f category
	g showNotification
	a ()Lnet/minecraft/core/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Ljava/lang/String;)I firstNonSpace
	a (Ljava/util/List;)[Ljava/lang/String; shrink
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;IIZ)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	b (Ljava/lang/String;)I lastNonSpace
	c ()Ljava/lang/String; getGroup
	d ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; category
	h ()Z showNotification
	i ()Z isIncomplete
	j ()I getWidth
	k ()I getHeight
net/minecraft/world/item/crafting/ShapedRecipes$Serializer net/minecraft/world/item/crafting/ShapedRecipe$Serializer
	x PATTERN_CODEC
	y SINGLE_CHARACTER_STRING_CODEC
	z CODEC
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/ShapedRecipes;)V toNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/ShapedRecipes; fromNetwork
net/minecraft/world/item/crafting/ShapedRecipes$Serializer$RawShapedRecipe net/minecraft/world/item/crafting/ShapedRecipe$Serializer$RawShapedRecipe
	a CODEC
	b group
	c category
	d key
	e pattern
	f result
	g showNotification
	a ()Ljava/lang/String; group
	b ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; category
	c ()Ljava/util/Map; key
	d ()Ljava/util/List; pattern
	e ()Lnet/minecraft/world/item/ItemStack; result
	f ()Z showNotification
net/minecraft/world/item/crafting/ShapelessRecipes net/minecraft/world/item/crafting/ShapelessRecipe
	a group
	b category
	c result
	d ingredients
	a ()Lnet/minecraft/core/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	c ()Ljava/lang/String; getGroup
	d ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; category
net/minecraft/world/item/enchantment/EnchantmentArrowDamage net/minecraft/world/item/enchantment/ArrowDamageEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentArrowKnockback net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentBinding net/minecraft/world/item/enchantment/BindingCurseEnchantment
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/ItemStack;)Z canEnchant
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	c ()Z isCurse
net/minecraft/world/item/enchantment/EnchantmentDepthStrider net/minecraft/world/item/enchantment/WaterWalkerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentDigging net/minecraft/world/item/enchantment/DiggingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/ItemStack;)Z canEnchant
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentDurability net/minecraft/world/item/enchantment/DigDurabilityEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/ItemStack;)Z canEnchant
	a (Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/util/RandomSource;)Z shouldIgnoreDurabilityDrop
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentFire net/minecraft/world/item/enchantment/FireAspectEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentFlameArrows net/minecraft/world/item/enchantment/ArrowFireEnchantment
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentFrostWalker net/minecraft/world/item/enchantment/FrostWalkerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;I)V onEntityMoved
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b ()Z isTreasureOnly
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentInfiniteArrows net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentKnockback net/minecraft/world/item/enchantment/KnockbackEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentLootBonus net/minecraft/world/item/enchantment/LootBonusEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentLure net/minecraft/world/item/enchantment/FishingSpeedEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentManager net/minecraft/world/item/enchantment/EnchantmentHelper
	a TAG_ENCH_ID
	b TAG_ENCH_LEVEL
	c SWIFT_SNEAK_EXTRA_FACTOR
	a (ILnet/minecraft/world/item/ItemStack;Z)Ljava/util/List; getAvailableEnchantmentResults
	a (Lcnq$a;Ljava/lang/Iterable;)V runIterationOnInventory
	a (Lcnq$a;Lnet/minecraft/world/item/ItemStack;)V runIterationOnItem
	a (Ljava/lang/Iterable;Lnet/minecraft/world/damagesource/DamageSource;)I getDamageProtection
	a (Ljava/util/Collection;Lnet/minecraft/world/item/enchantment/Enchantment;)Z isEnchantmentCompatible
	a (Ljava/util/List;Lnet/minecraft/world/item/enchantment/WeightedRandomEnchant;)V filterCompatibleEnchantments
	a (Ljava/util/Map;Lnet/minecraft/world/item/ItemStack;)V setEnchantments
	a (Lnet/minecraft/nbt/NBTTagCompound;)I getEnchantmentLevel
	a (Lnet/minecraft/nbt/NBTTagCompound;I)V setEnchantmentLevel
	a (Lnet/minecraft/nbt/NBTTagList;)Ljava/util/Map; deserializeEnchantments
	a (Lnet/minecraft/resources/MinecraftKey;I)Lnet/minecraft/nbt/NBTTagCompound; storeEnchantment
	a (Lnet/minecraft/util/RandomSource;IILnet/minecraft/world/item/ItemStack;)I getEnchantmentCost
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/item/ItemStack;IZ)Lnet/minecraft/world/item/ItemStack; enchantItem
	a (Lnet/minecraft/world/entity/EntityLiving;)F getSweepingDamageRatio
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;)V doPostHurtEffects
	a (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Map; getEnchantments
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EnumMonsterType;)F getDamageBonus
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/resources/MinecraftKey; getEnchantmentId
	a (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/EntityLiving;)I getEnchantmentLevel
	a (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/EntityLiving;Ljava/util/function/Predicate;)Ljava/util/Map$Entry; getRandomItemWith
	a (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/item/ItemStack;)I getItemEnchantmentLevel
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/resources/MinecraftKey; getEnchantmentId
	b (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/item/ItemStack;IZ)Ljava/util/List; selectEnchantment
	b (Lnet/minecraft/world/entity/EntityLiving;)F getSneakingSpeedBonus
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;)V doPostDamageEffects
	b (Lnet/minecraft/world/item/ItemStack;)I getFishingLuckBonus
	b (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Map$Entry; getRandomItemWith
	c (Lnet/minecraft/world/entity/EntityLiving;)I getKnockbackBonus
	c (Lnet/minecraft/world/item/ItemStack;)I getFishingSpeedBonus
	d (Lnet/minecraft/world/entity/EntityLiving;)I getFireAspect
	d (Lnet/minecraft/world/item/ItemStack;)Z hasBindingCurse
	e (Lnet/minecraft/world/entity/EntityLiving;)I getRespiration
	e (Lnet/minecraft/world/item/ItemStack;)Z hasVanishingCurse
	f (Lnet/minecraft/world/entity/EntityLiving;)I getDepthStrider
	f (Lnet/minecraft/world/item/ItemStack;)Z hasSilkTouch
	g (Lnet/minecraft/world/entity/EntityLiving;)I getBlockEfficiency
	g (Lnet/minecraft/world/item/ItemStack;)I getLoyalty
	h (Lnet/minecraft/world/entity/EntityLiving;)I getMobLooting
	h (Lnet/minecraft/world/item/ItemStack;)I getRiptide
	i (Lnet/minecraft/world/entity/EntityLiving;)Z hasAquaAffinity
	i (Lnet/minecraft/world/item/ItemStack;)Z hasChanneling
	j (Lnet/minecraft/world/entity/EntityLiving;)Z hasFrostWalker
	k (Lnet/minecraft/world/entity/EntityLiving;)Z hasSoulSpeed
net/minecraft/world/item/enchantment/EnchantmentMending net/minecraft/world/item/enchantment/MendingEnchantment
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentMultishot net/minecraft/world/item/enchantment/MultiShotEnchantment
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentOxygen net/minecraft/world/item/enchantment/OxygenEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentPiercing net/minecraft/world/item/enchantment/ArrowPiercingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentProtection net/minecraft/world/item/enchantment/ProtectionEnchantment
	a type
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/world/damagesource/DamageSource;)I getDamageProtection
	a (Lnet/minecraft/world/entity/EntityLiving;D)D getExplosionKnockbackAfterDampener
	a (Lnet/minecraft/world/entity/EntityLiving;I)I getFireAfterDampener
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentProtection$DamageType net/minecraft/world/item/enchantment/ProtectionEnchantment$Type
	a ALL
	b FIRE
	c FALL
	d EXPLOSION
	e PROJECTILE
	f minCost
	g levelCost
	h $VALUES
	a ()I getMinCost
	b ()I getLevelCost
	c ()[Lnet/minecraft/world/item/enchantment/EnchantmentProtection$DamageType; $values
net/minecraft/world/item/enchantment/EnchantmentQuickCharge net/minecraft/world/item/enchantment/QuickChargeEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentSilkTouch net/minecraft/world/item/enchantment/UntouchingEnchantment
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentSlotType net/minecraft/world/item/enchantment/EnchantmentCategory
	a ARMOR
	b ARMOR_FEET
	c ARMOR_LEGS
	d ARMOR_CHEST
	e ARMOR_HEAD
	f WEAPON
	g DIGGER
	h FISHING_ROD
	i TRIDENT
	j BREAKABLE
	k BOW
	l WEARABLE
	m CROSSBOW
	n VANISHABLE
	o $VALUES
	a ()[Lnet/minecraft/world/item/enchantment/EnchantmentSlotType; $values
	a (Lnet/minecraft/world/item/Item;)Z canEnchant
net/minecraft/world/item/enchantment/EnchantmentSoulSpeed net/minecraft/world/item/enchantment/SoulSpeedEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	h ()Z isTradeable
	i ()Z isDiscoverable
net/minecraft/world/item/enchantment/EnchantmentSweeping net/minecraft/world/item/enchantment/SweepingEdgeEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
	e (I)F getSweepingDamageRatio
net/minecraft/world/item/enchantment/EnchantmentThorns net/minecraft/world/item/enchantment/ThornsEnchantment
	a CHANCE_PER_LEVEL
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/util/RandomSource;)Z shouldHit
	a (Lnet/minecraft/world/item/ItemStack;)Z canEnchant
	b (I)I getMaxCost
	b (ILnet/minecraft/util/RandomSource;)I getDamage
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;I)V doPostHurt
net/minecraft/world/item/enchantment/EnchantmentTridentChanneling net/minecraft/world/item/enchantment/TridentChannelingEnchantment
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentTridentImpaling net/minecraft/world/item/enchantment/TridentImpalerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/world/entity/EnumMonsterType;)F getDamageBonus
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentTridentLoyalty net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentTridentRiptide net/minecraft/world/item/enchantment/TridentRiptideEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentVanishing net/minecraft/world/item/enchantment/VanishingCurseEnchantment
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	c ()Z isCurse
net/minecraft/world/item/enchantment/EnchantmentWaterWorker net/minecraft/world/item/enchantment/WaterWorkerEnchantment
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentWeaponDamage net/minecraft/world/item/enchantment/DamageEnchantment
	a ALL
	b UNDEAD
	c ARTHROPODS
	d type
	g NAMES
	h MIN_COST
	i LEVEL_COST
	j LEVEL_COST_SPAN
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/world/entity/EnumMonsterType;)F getDamageBonus
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;I)V doPostAttack
	a (Lnet/minecraft/world/item/ItemStack;)Z canEnchant
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/WeightedRandomEnchant net/minecraft/world/item/enchantment/EnchantmentInstance
	a enchantment
	b level
net/minecraft/world/item/trading/IMerchant net/minecraft/world/item/trading/Merchant
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/network/chat/IChatBaseComponent;I)V openTradingScreen
	a (Lnet/minecraft/world/item/trading/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/world/item/trading/MerchantRecipeList;)V overrideOffers
	f (Lnet/minecraft/world/entity/player/EntityHuman;)V setTradingPlayer
	gd ()Lnet/minecraft/world/entity/player/EntityHuman; getTradingPlayer
	gf ()Lnet/minecraft/world/item/trading/MerchantRecipeList; getOffers
	gg ()Z showProgressBar
	gh ()Lnet/minecraft/sounds/SoundEffect; getNotifyTradeSound
	gl ()Z isClientSide
	gp ()Z canRestock
	l (Lnet/minecraft/world/item/ItemStack;)V notifyTradeUpdated
	t ()I getVillagerXp
	t (I)V overrideXp
net/minecraft/world/item/trading/MerchantRecipe net/minecraft/world/item/trading/MerchantOffer
	a baseCostA
	b costB
	c result
	d uses
	e maxUses
	f rewardExp
	g specialPriceDiff
	h demand
	i priceMultiplier
	j xp
	a ()Lnet/minecraft/world/item/ItemStack; getBaseCostA
	a (I)V addToSpecialPriceDiff
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z satisfiedBy
	b ()Lnet/minecraft/world/item/ItemStack; getCostA
	b (I)V setSpecialPriceDiff
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z take
	c ()Lnet/minecraft/world/item/ItemStack; getCostB
	c (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isRequiredItem
	d ()Lnet/minecraft/world/item/ItemStack; getResult
	e ()V updateDemand
	f ()Lnet/minecraft/world/item/ItemStack; assemble
	g ()I getUses
	h ()V resetUses
	i ()I getMaxUses
	j ()V increaseUses
	k ()I getDemand
	l ()V resetSpecialPriceDiff
	m ()I getSpecialPriceDiff
	n ()F getPriceMultiplier
	o ()I getXp
	p ()Z isOutOfStock
	q ()V setToOutOfStock
	r ()Z needsRestock
	s ()Z shouldRewardExp
	t ()Lnet/minecraft/nbt/NBTTagCompound; createTag
	u ()Lnet/minecraft/world/item/trading/MerchantRecipe; copy
net/minecraft/world/item/trading/MerchantRecipeList net/minecraft/world/item/trading/MerchantOffers
	a ()Lnet/minecraft/nbt/NBTTagCompound; createTag
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToStream
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/trading/MerchantRecipe; getRecipeFor
	b ()Lnet/minecraft/world/item/trading/MerchantRecipeList; copy
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/trading/MerchantRecipeList; createFromStream
net/minecraft/world/level/BlockAccessAir net/minecraft/world/level/EmptyBlockGetter
	a INSTANCE
	b $VALUES
	H_ ()I getMinBuildHeight
	I_ ()I getHeight
	a ()[Lnet/minecraft/world/level/BlockAccessAir; $values
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
net/minecraft/world/level/BlockActionData net/minecraft/world/level/BlockEventData
	a pos
	b block
	c paramA
	d paramB
	a ()Lnet/minecraft/core/BlockPosition; pos
	b ()Lnet/minecraft/world/level/block/Block; block
	c ()I paramA
	d ()I paramB
net/minecraft/world/level/BlockColumn net/minecraft/world/level/NoiseColumn
	a minY
	b column
	a (I)Lnet/minecraft/world/level/block/state/IBlockData; getBlock
	a (ILnet/minecraft/world/level/block/state/IBlockData;)V setBlock
net/minecraft/world/level/ChunkCache net/minecraft/world/level/PathNavigationRegion
	a centerX
	b centerZ
	c chunks
	d allEmpty
	e level
	f plains
	B_ ()Lnet/minecraft/world/level/border/WorldBorder; getWorldBorder
	H_ ()I getMinBuildHeight
	I_ ()I getHeight
	a ()Lnet/minecraft/util/profiling/GameProfilerFiller; getProfiler
	a (II)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c (II)Lnet/minecraft/world/level/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getEntityCollisions
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	d (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
net/minecraft/world/level/ChunkCoordIntPair net/minecraft/world/level/ChunkPos
	a INVALID_CHUNK_POS
	b ZERO
	c REGION_SIZE
	d REGION_MAX_INDEX
	e x
	f z
	g SAFETY_MARGIN
	h COORD_BITS
	i COORD_MASK
	j REGION_BITS
	k REGION_MASK
	l HASH_A
	m HASH_C
	n HASH_Z_XOR
	a ()J toLong
	a (I)I getBlockX
	a (II)Lnet/minecraft/world/level/ChunkCoordIntPair; minFromRegion
	a (III)Lnet/minecraft/core/BlockPosition; getBlockAt
	a (J)I getX
	a (Lnet/minecraft/core/BlockPosition;)J asLong
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)I getChessboardDistance
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)Ljava/util/stream/Stream; rangeClosed
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/stream/Stream; rangeClosed
	b ()I getMiddleBlockX
	b (I)I getBlockZ
	b (II)Lnet/minecraft/world/level/ChunkCoordIntPair; maxFromRegion
	b (J)I getZ
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)I distanceSquared
	c ()I getMiddleBlockZ
	c (I)Lnet/minecraft/core/BlockPosition; getMiddleBlockPosition
	c (II)J asLong
	c (J)I distanceSquared
	d ()I getMinBlockX
	d (II)I hash
	e ()I getMinBlockZ
	e (II)I distanceSquared
	f ()I getMaxBlockX
	g ()I getMaxBlockZ
	h ()I getRegionX
	i ()I getRegionZ
	j ()I getRegionLocalX
	k ()I getRegionLocalZ
	l ()Lnet/minecraft/core/BlockPosition; getWorldPosition
net/minecraft/world/level/CommandBlockListenerAbstract net/minecraft/world/level/BaseCommandBlock
	b TIME_FORMAT
	c DEFAULT_NAME
	d lastExecution
	e updateLastExecution
	f successCount
	g trackOutput
	h lastOutput
	i command
	j name
	T_ ()Z shouldInformAdmins
	a (I)V setSuccessCount
	a (Ljava/lang/String;)V setCommand
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/EnumInteractionResult; usedBy
	a (Lnet/minecraft/world/level/World;)Z performCommand
	a (Z)V setTrackOutput
	b (Lnet/minecraft/nbt/NBTTagCompound;)V load
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setName
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V setLastOutput
	e ()Lnet/minecraft/server/level/WorldServer; getLevel
	f ()V onUpdated
	g ()Lnet/minecraft/world/phys/Vec3D; getPosition
	i ()Lnet/minecraft/commands/CommandListenerWrapper; createCommandSourceStack
	j ()Z isValid
	j_ ()Z acceptsSuccess
	k ()I getSuccessCount
	l ()Lnet/minecraft/network/chat/IChatBaseComponent; getLastOutput
	m ()Ljava/lang/String; getCommand
	n ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	o ()Z isTrackOutput
	v_ ()Z acceptsFailure
net/minecraft/world/level/DataPackConfiguration net/minecraft/world/level/DataPackConfig
	a DEFAULT
	b CODEC
	c enabled
	d disabled
	a ()Ljava/util/List; getEnabled
	b ()Ljava/util/List; getDisabled
net/minecraft/world/level/EnumGamemode net/minecraft/world/level/GameType
	a SURVIVAL
	b CREATIVE
	c ADVENTURE
	d SPECTATOR
	e DEFAULT_MODE
	f CODEC
	g BY_ID
	h NOT_SET
	i id
	j name
	k shortName
	l longName
	m $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/level/EnumGamemode; byId
	a (Ljava/lang/String;)Lnet/minecraft/world/level/EnumGamemode; byName
	a (Ljava/lang/String;Lnet/minecraft/world/level/EnumGamemode;)Lnet/minecraft/world/level/EnumGamemode; byName
	a (Lnet/minecraft/world/entity/player/PlayerAbilities;)V updatePlayerAbilities
	a (Lnet/minecraft/world/level/EnumGamemode;)I getNullableId
	b ()Ljava/lang/String; getName
	b (I)Lnet/minecraft/world/level/EnumGamemode; byNullableId
	c ()Ljava/lang/String; getSerializedName
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getLongDisplayName
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getShortDisplayName
	f ()Z isBlockPlacingRestricted
	g ()Z isCreative
	h ()Z isSurvival
	i ()[Lnet/minecraft/world/level/EnumGamemode; $values
net/minecraft/world/level/EnumSkyBlock net/minecraft/world/level/LightLayer
	a SKY
	b BLOCK
	c $VALUES
	a ()[Lnet/minecraft/world/level/EnumSkyBlock; $values
net/minecraft/world/level/Explosion$Effect net/minecraft/world/level/Explosion$BlockInteraction
	a KEEP
	b DESTROY
	c DESTROY_WITH_DECAY
	d $VALUES
	a ()[Lnet/minecraft/world/level/Explosion$Effect; $values
net/minecraft/world/level/ExplosionDamageCalculatorEntity net/minecraft/world/level/EntityBasedExplosionDamageCalculator
	a source
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Ljava/util/Optional; getBlockExplosionResistance
net/minecraft/world/level/ForcedChunk net/minecraft/world/level/ForcedChunksSavedData
	a FILE_ID
	b TAG_FORCED
	c chunks
	a ()Lebr$a; factory
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	b ()Lit/unimi/dsi/fastutil/longs/LongSet; getChunks
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/ForcedChunk; load
net/minecraft/world/level/GameRules$GameRuleBoolean net/minecraft/world/level/GameRules$BooleanValue
	b value
	a ()Z get
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a (Ljava/lang/String;)V deserialize
	a (Lnet/minecraft/world/level/GameRules$GameRuleBoolean;Lnet/minecraft/server/MinecraftServer;)V setFrom
	a (Lnet/minecraft/world/level/GameRules$GameRuleValue;Lnet/minecraft/server/MinecraftServer;)V setFrom
	a (Z)Lnet/minecraft/world/level/GameRules$GameRuleDefinition; create
	a (ZLjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$GameRuleDefinition; create
	a (ZLnet/minecraft/server/MinecraftServer;)V set
	b ()Ljava/lang/String; serialize
	c ()I getCommandResult
	d ()Lnet/minecraft/world/level/GameRules$GameRuleBoolean; getSelf
	e ()Lnet/minecraft/world/level/GameRules$GameRuleBoolean; copy
	f ()Lnet/minecraft/world/level/GameRules$GameRuleValue; copy
	g ()Lnet/minecraft/world/level/GameRules$GameRuleValue; getSelf
net/minecraft/world/level/GameRules$GameRuleCategory net/minecraft/world/level/GameRules$Category
	a PLAYER
	b MOBS
	c SPAWNING
	d DROPS
	e UPDATES
	f CHAT
	g MISC
	h descriptionId
	i $VALUES
	a ()Ljava/lang/String; getDescriptionId
	b ()[Lnet/minecraft/world/level/GameRules$GameRuleCategory; $values
net/minecraft/world/level/GameRules$GameRuleDefinition net/minecraft/world/level/GameRules$Type
	a argument
	b constructor
	c callback
	d visitorCaller
	a ()Lnet/minecraft/world/level/GameRules$GameRuleValue; createRule
	a (Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; createArgument
	a (Lnet/minecraft/world/level/GameRules$GameRuleVisitor;Lnet/minecraft/world/level/GameRules$GameRuleKey;)V callVisitor
net/minecraft/world/level/GameRules$GameRuleInt net/minecraft/world/level/GameRules$IntegerValue
	b value
	a ()I get
	a (I)Lnet/minecraft/world/level/GameRules$GameRuleDefinition; create
	a (ILjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$GameRuleDefinition; create
	a (ILnet/minecraft/server/MinecraftServer;)V set
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a (Ljava/lang/String;)V deserialize
	a (Lnet/minecraft/world/level/GameRules$GameRuleInt;Lnet/minecraft/server/MinecraftServer;)V setFrom
	a (Lnet/minecraft/world/level/GameRules$GameRuleValue;Lnet/minecraft/server/MinecraftServer;)V setFrom
	b ()Ljava/lang/String; serialize
	b (Ljava/lang/String;)Z tryDeserialize
	c ()I getCommandResult
	c (Ljava/lang/String;)I safeParse
	d ()Lnet/minecraft/world/level/GameRules$GameRuleInt; getSelf
	e ()Lnet/minecraft/world/level/GameRules$GameRuleInt; copy
	f ()Lnet/minecraft/world/level/GameRules$GameRuleValue; copy
	g ()Lnet/minecraft/world/level/GameRules$GameRuleValue; getSelf
net/minecraft/world/level/GameRules$GameRuleKey net/minecraft/world/level/GameRules$Key
	a id
	b category
	a ()Ljava/lang/String; getId
	b ()Ljava/lang/String; getDescriptionId
	c ()Lnet/minecraft/world/level/GameRules$GameRuleCategory; getCategory
net/minecraft/world/level/GameRules$GameRuleValue net/minecraft/world/level/GameRules$Value
	a type
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a (Ljava/lang/String;)V deserialize
	a (Lnet/minecraft/server/MinecraftServer;)V onChanged
	a (Lnet/minecraft/world/level/GameRules$GameRuleValue;Lnet/minecraft/server/MinecraftServer;)V setFrom
	b ()Ljava/lang/String; serialize
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V setFromArgument
	c ()I getCommandResult
	f ()Lnet/minecraft/world/level/GameRules$GameRuleValue; copy
	g ()Lnet/minecraft/world/level/GameRules$GameRuleValue; getSelf
net/minecraft/world/level/GameRules$GameRuleVisitor net/minecraft/world/level/GameRules$GameRuleTypeVisitor
	a (Lnet/minecraft/world/level/GameRules$GameRuleKey;Lnet/minecraft/world/level/GameRules$GameRuleDefinition;)V visit
	b (Lnet/minecraft/world/level/GameRules$GameRuleKey;Lnet/minecraft/world/level/GameRules$GameRuleDefinition;)V visitBoolean
	c (Lnet/minecraft/world/level/GameRules$GameRuleKey;Lnet/minecraft/world/level/GameRules$GameRuleDefinition;)V visitInteger
net/minecraft/world/level/GeneratorAccess net/minecraft/world/level/LevelAccessor
	D_ ()Lnet/minecraft/util/RandomSource; getRandom
	F_ ()J nextSubTickCount
	J ()Lnet/minecraft/world/level/chunk/IChunkProvider; getChunkSource
	K ()Lnet/minecraft/world/ticks/LevelTickAccess; getFluidTicks
	L ()Lnet/minecraft/world/ticks/LevelTickAccess; getBlockTicks
	a (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;I)Lnet/minecraft/world/ticks/NextTickListEntry; createTick
	a (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;ILnet/minecraft/world/ticks/TickListPriority;)Lnet/minecraft/world/ticks/NextTickListEntry; createTick
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;I)V scheduleTick
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;ILnet/minecraft/world/ticks/TickListPriority;)V scheduleTick
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;I)V scheduleTick
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;ILnet/minecraft/world/ticks/TickListPriority;)V scheduleTick
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;II)V neighborShapeChanged
	a (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPosition;)V gameEvent
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;)V gameEvent
	a (Lnet/minecraft/world/entity/player/EntityHuman;ILnet/minecraft/core/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;)V playSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playSound
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPosition;Ldjt$a;)V gameEvent
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;Ldjt$a;)V gameEvent
	ah ()J dayTime
	ai ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	b (II)Z hasChunk
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V blockUpdated
	c (ILnet/minecraft/core/BlockPosition;I)V levelEvent
	d_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/DifficultyDamageScaler; getCurrentDifficultyAt
	n ()Lnet/minecraft/server/MinecraftServer; getServer
	z_ ()Lnet/minecraft/world/level/storage/WorldData; getLevelData
net/minecraft/world/level/GeneratorAccessSeed net/minecraft/world/level/WorldGenLevel
	A ()J getSeed
	a (Ljava/util/function/Supplier;)V setCurrentlyGenerating
	f_ (Lnet/minecraft/core/BlockPosition;)Z ensureCanWrite
net/minecraft/world/level/IBlockAccess net/minecraft/world/level/BlockGetter
	M ()I getMaxLightLevel
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Ljava/util/Optional; getBlockEntity
	a (Lnet/minecraft/world/level/ClipBlockStateContext;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; isBlockInLine
	a (Lnet/minecraft/world/level/RayTrace;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; clip
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/stream/Stream; getBlockStates
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object; traverseBlocks
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; clipWithInteractionOverride
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Ljava/util/function/Supplier;)D getBlockFloorHeight
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	h (Lnet/minecraft/core/BlockPosition;)I getLightEmission
	i (Lnet/minecraft/core/BlockPosition;)D getBlockFloorHeight
net/minecraft/world/level/IBlockLightAccess net/minecraft/world/level/BlockAndTintGetter
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/core/EnumDirection;Z)F getShade
	a (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/BlockPosition;)I getBrightness
	b (Lnet/minecraft/core/BlockPosition;I)I getRawBrightness
	g (Lnet/minecraft/core/BlockPosition;)Z canSeeSky
	x_ ()Lnet/minecraft/world/level/lighting/LevelLightEngine; getLightEngine
net/minecraft/world/level/ICollisionAccess net/minecraft/world/level/CollisionGetter
	B_ ()Lnet/minecraft/world/level/border/WorldBorder; getWorldBorder
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Z noCollision
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/Vec3D;DDD)Ljava/util/Optional; findFreePosition
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Z isUnobstructed
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Z noBlockCollision
	b (Lnet/minecraft/world/phys/AxisAlignedBB;)Z noCollision
	c (II)Lnet/minecraft/world/level/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getEntityCollisions
	d (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/lang/Iterable; getCollisions
	e (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/lang/Iterable; getBlockCollisions
	f (Lnet/minecraft/world/entity/Entity;)Z isUnobstructed
	f (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Z collidesWithSuffocatingBlock
	g (Lnet/minecraft/world/entity/Entity;)Z noCollision
	g (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/Optional; findSupportingBlock
	h (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Lnet/minecraft/world/phys/shapes/VoxelShape; borderCollision
net/minecraft/world/level/ICombinedAccess net/minecraft/world/level/CommonLevelAccessor
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Ljava/util/Optional; getBlockEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; getHeightmapPos
	c (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getEntityCollisions
net/minecraft/world/level/IEntityAccess net/minecraft/world/level/EntityGetter
	a (DDDD)Z hasNearbyAlivePlayer
	a (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/EntityHuman; getNearestPlayer
	a (DDDDZ)Lnet/minecraft/world/entity/player/EntityHuman; getNearestPlayer
	a (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;Lnet/minecraft/world/entity/EntityLiving;DDDLnet/minecraft/world/phys/AxisAlignedBB;)Lnet/minecraft/world/entity/EntityLiving; getNearestEntity
	a (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getNearbyEntities
	a (Ljava/lang/Class;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getEntitiesOfClass
	a (Ljava/lang/Class;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	a (Ljava/util/List;Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;Lnet/minecraft/world/entity/EntityLiving;DDD)Lnet/minecraft/world/entity/EntityLiving; getNearestEntity
	a (Lnet/minecraft/world/entity/Entity;D)Lnet/minecraft/world/entity/player/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;DDD)Lnet/minecraft/world/entity/player/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/player/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;Lnet/minecraft/world/entity/EntityLiving;DDD)Lnet/minecraft/world/entity/player/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getNearbyPlayers
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a_ (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getEntities
	b (Ljava/util/UUID;)Lnet/minecraft/world/entity/player/EntityHuman; getPlayerByUUID
	c (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getEntityCollisions
	v ()Ljava/util/List; players
net/minecraft/world/level/IMaterial net/minecraft/world/level/ItemLike
	k ()Lnet/minecraft/world/item/Item; asItem
net/minecraft/world/level/IWorldReader net/minecraft/world/level/LevelReader
	A (Lnet/minecraft/core/BlockPosition;)Z hasChunkAt
	A_ ()I getSkyDarken
	C_ ()Lnet/minecraft/world/level/dimension/DimensionManager; dimensionType
	E_ ()Lnet/minecraft/world/level/biome/BiomeManager; getBiomeManager
	G ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	G_ ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	H_ ()I getMinBuildHeight
	I_ ()I getHeight
	a (II)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (III)Lnet/minecraft/core/Holder; getUncachedNoiseBiome
	a (IIIIII)Z hasChunksAt
	a (IILnet/minecraft/world/level/chunk/ChunkStatus;)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Z hasChunksAt
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderLookup; holderLookup
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; getHeightmapPos
	b (II)Z hasChunk
	b (IIII)Z hasChunksAt
	c (II)Lnet/minecraft/world/level/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/core/BlockPosition;I)I getMaxLocalRawBrightness
	c (Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/stream/Stream; getBlockStatesIfLoaded
	d (Lnet/minecraft/world/phys/AxisAlignedBB;)Z containsAnyLiquid
	f (II)Z hasChunkAt
	s (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/Holder; getBiome
	t (Lnet/minecraft/core/BlockPosition;)Z isEmptyBlock
	u (Lnet/minecraft/core/BlockPosition;)Z canSeeSkyFromBelowWater
	v (Lnet/minecraft/core/BlockPosition;)F getPathfindingCostFromLightLevels
	w (Lnet/minecraft/core/BlockPosition;)F getLightLevelDependentMagicValue
	w_ ()Z isClientSide
	x (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	y (Lnet/minecraft/core/BlockPosition;)Z isWaterAt
	y_ ()I getSeaLevel
	z (Lnet/minecraft/core/BlockPosition;)I getMaxLocalRawBrightness
net/minecraft/world/level/IWorldTime net/minecraft/world/level/LevelTimeAccess
	ah ()J dayTime
	an ()F getMoonBrightness
	ao ()I getMoonPhase
	f (F)F getTimeOfDay
net/minecraft/world/level/IWorldWriter net/minecraft/world/level/LevelWriter
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;I)Z setBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)Z setBlock
	a (Lnet/minecraft/core/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/entity/Entity;)Z destroyBlock
	a (Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/entity/Entity;I)Z destroyBlock
	b (Lnet/minecraft/core/BlockPosition;Z)Z destroyBlock
	b (Lnet/minecraft/world/entity/Entity;)Z addFreshEntity
net/minecraft/world/level/MobSpawner net/minecraft/world/level/CustomSpawner
	a (Lnet/minecraft/server/level/WorldServer;ZZ)I tick
net/minecraft/world/level/MobSpawnerAbstract net/minecraft/world/level/BaseSpawner
	a LOGGER
	b SPAWN_DATA_TAG
	c EVENT_SPAWN
	d spawnDelay
	e spawnPotentials
	f nextSpawnData
	g spin
	h oSpin
	i minSpawnDelay
	j maxSpawnDelay
	k spawnCount
	l displayEntity
	m maxNearbyEntities
	n requiredPlayerRange
	o spawnRange
	a ()D getSpin
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V serverTick
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)V setEntityId
	a (Lnet/minecraft/world/level/World;I)Z onEventTriggered
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V clientTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;I)V broadcastEvent
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/MobSpawnerData;)V setNextSpawnData
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/Entity; getOrCreateDisplayEntity
	b ()D getoSpin
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z isNearPlayer
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/MobSpawnerData; getOrCreateNextSpawnData
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V delay
net/minecraft/world/level/MobSpawnerData net/minecraft/world/level/SpawnData
	a ENTITY_TAG
	b CODEC
	c LIST_CODEC
	d entityToSpawn
	e customSpawnRules
	a ()Lnet/minecraft/nbt/NBTTagCompound; getEntityToSpawn
	b ()Ljava/util/Optional; getCustomSpawnRules
	c ()Lnet/minecraft/nbt/NBTTagCompound; entityToSpawn
	d ()Ljava/util/Optional; customSpawnRules
net/minecraft/world/level/RayTrace net/minecraft/world/level/ClipContext
	a from
	b to
	c block
	d fluid
	e collisionContext
	a ()Lnet/minecraft/world/phys/Vec3D; getTo
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockShape
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getFluidShape
	b ()Lnet/minecraft/world/phys/Vec3D; getFrom
net/minecraft/world/level/RayTrace$BlockCollisionOption net/minecraft/world/level/ClipContext$Block
	a COLLIDER
	b OUTLINE
	c VISUAL
	d FALLDAMAGE_RESETTING
	e shapeGetter
	f $VALUES
	a ()[Lnet/minecraft/world/level/RayTrace$BlockCollisionOption; $values
net/minecraft/world/level/RayTrace$FluidCollisionOption net/minecraft/world/level/ClipContext$Fluid
	a NONE
	b SOURCE_ONLY
	c ANY
	d WATER
	e canPick
	f $VALUES
	a ()[Lnet/minecraft/world/level/RayTrace$FluidCollisionOption; $values
	a (Lnet/minecraft/world/level/material/Fluid;)Z canPick
net/minecraft/world/level/SpawnerCreature net/minecraft/world/level/NaturalSpawner
	a SPAWN_DISTANCE_CHUNK
	b SPAWN_DISTANCE_BLOCK
	c LOGGER
	d MIN_SPAWN_DISTANCE
	e MAGIC_NUMBER
	f SPAWNING_CATEGORIES
	a (ILjava/lang/Iterable;Lcqg$b;Lnet/minecraft/world/level/LocalMobCapCalculator;)Lcqg$d; createState
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/world/level/StructureManager;)Z isInNetherFortressBounds
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/chunk/IChunkAccess;)Lnet/minecraft/world/level/biome/BiomeBase; getRoughBiome
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;D)Z isValidPositionForMob
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/world/entity/EntityInsentient; getMobForSpawn
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lcrf$c;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;D)Z isValidSpawnPostitionForType
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/EnumCreatureType;Lcrf$c;Lnet/minecraft/core/BlockPosition;)Z canSpawnMobAt
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/Holder;)Lnet/minecraft/util/random/WeightedRandomList; mobsAt
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; getRandomSpawnMobAt
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/Chunk;Lcqg$d;ZZZ)V spawnForChunk
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;D)Z isRightDistanceToPlayerAndSpawnPoint
	a (Lnet/minecraft/world/entity/EntityPositionTypes$Surface;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;)Z isSpawnPositionOk
	a (Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V spawnCategoryForPosition
	a (Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/Chunk;Lcqg$c;Lcqg$a;)V spawnCategoryForChunk
	a (Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/BlockPosition;Lcqg$c;Lcqg$a;)V spawnCategoryForPosition
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/entity/EntityTypes;)Z isValidEmptySpawnBlock
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/entity/EntityTypes;II)Lnet/minecraft/core/BlockPosition; getTopNonCollidingPos
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/chunk/Chunk;)Lnet/minecraft/core/BlockPosition; getRandomPosWithin
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/util/RandomSource;)V spawnMobsForChunkGeneration
net/minecraft/world/level/SpawnerCreatureProbabilities net/minecraft/world/level/PotentialCalculator
	a charges
	a (Lnet/minecraft/core/BlockPosition;D)V addCharge
	b (Lnet/minecraft/core/BlockPosition;D)D getPotentialEnergyChange
net/minecraft/world/level/VirtualLevelReadable net/minecraft/world/level/LevelSimulatedReader
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Ljava/util/Optional; getBlockEntity
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; getHeightmapPos
	b (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
net/minecraft/world/level/VirtualLevelWritable net/minecraft/world/level/LevelSimulatedRW
net/minecraft/world/level/VoxelShapeSpliterator net/minecraft/world/level/BlockCollisions
	a box
	b context
	c cursor
	d pos
	e entityShape
	f collisionGetter
	g onlySuffocatingBlocks
	h cachedBlockGetter
	i cachedBlockGetterPos
	j resultProvider
	a (II)Lnet/minecraft/world/level/IBlockAccess; getChunk
net/minecraft/world/level/World net/minecraft/world/level/Level
	A levelData
	B isClientSide
	D dimensionTypeId
	E dimensionTypeRegistration
	F profiler
	G worldBorder
	H biomeManager
	I dimension
	J registryAccess
	K damageSources
	L subTickCount
	a pendingBlockEntityTickers
	b tickingBlockEntities
	c thread
	d isDebug
	e skyDarken
	f threadSafeRandom
	g RESOURCE_KEY_CODEC
	h OVERWORLD
	i NETHER
	j END
	k MAX_LEVEL_SIZE
	l LONG_PARTICLE_CLIP_RANGE
	m SHORT_PARTICLE_CLIP_RANGE
	n MAX_BRIGHTNESS
	o TICKS_PER_DAY
	p MAX_ENTITY_SPAWN_Y
	q MIN_ENTITY_SPAWN_Y
	r blockEntityTickers
	s neighborUpdater
	t randValue
	u addend
	v oRainLevel
	w rainLevel
	x oThunderLevel
	y thunderLevel
	z random
	A_ ()I getSkyDarken
	B_ ()Lnet/minecraft/world/level/border/WorldBorder; getWorldBorder
	C_ ()Lnet/minecraft/world/level/dimension/DimensionManager; dimensionType
	D (Lnet/minecraft/core/BlockPosition;)Z isInWorldBoundsHorizontal
	D_ ()Lnet/minecraft/util/RandomSource; getRandom
	E ()Lnet/minecraft/world/level/entity/LevelEntityGetter; getEntities
	E_ ()Lnet/minecraft/world/level/biome/BiomeManager; getBiomeManager
	F ()Ljava/lang/String; gatherChunkSourceStats
	F_ ()J nextSubTickCount
	G_ ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	I ()Lnet/minecraft/world/scores/Scoreboard; getScoreboard
	N ()Z isDay
	O ()Z isNight
	P ()V tickBlockEntities
	Q ()V updateSkyBrightness
	R ()Lnet/minecraft/core/BlockPosition; getSharedSpawnPos
	S ()F getSharedSpawnAngle
	T ()V prepareWeather
	U ()V disconnect
	V ()J getGameTime
	W ()J getDayTime
	X ()Lnet/minecraft/world/level/GameRules; getGameRules
	Y ()Z isThundering
	Z ()Z isRaining
	a (DDDDDDLnet/minecraft/nbt/NBTTagCompound;)V createFireworks
	a (DDDLnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FFZ)V playLocalSound
	a (F)F getSunAngle
	a (I)Lnet/minecraft/world/entity/Entity; getEntity
	a (II)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (IIII)Lnet/minecraft/core/BlockPosition; getBlockRandomPos
	a (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (ILnet/minecraft/core/BlockPosition;I)V destroyBlockProgress
	a (J)Z shouldTickBlocksAt
	a (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; getMapData
	a (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V setMapData
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/Entity;)V guardEntityTick
	a (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportSystemDetails; fillReportDetails
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FFZ)V playLocalSound
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)Z loadedAndEntityCanStandOn
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/EnumDirection;)Z loadedAndEntityCanStandOnFace
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V updateNeighborsAt
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;II)V blockEvent
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V neighborChanged
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/EnumDirection;)V updateNeighborsAtExceptFromFacing
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V addDestroyBlockEffect
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;I)Z setBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)Z setBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V onBlockStateChange
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;I)V sendBlockUpdated
	a (Lnet/minecraft/core/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/entity/Entity;I)Z destroyBlock
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;II)V neighborShapeChanged
	a (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/core/particles/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/network/protocol/Packet;)V sendPacketToServer
	a (Lnet/minecraft/world/entity/Entity;B)V broadcastEntityEvent
	a (Lnet/minecraft/world/entity/Entity;DDDFLcpv$a;)Lnet/minecraft/world/level/Explosion; explode
	a (Lnet/minecraft/world/entity/Entity;DDDFZLcpv$a;)Lnet/minecraft/world/level/Explosion; explode
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playSound
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V broadcastDamageEvent
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLcpv$a;)Lnet/minecraft/world/level/Explosion; explode
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLcpv$a;Z)Lnet/minecraft/world/level/Explosion; explode
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;Lnet/minecraft/world/phys/Vec3D;FZLcpv$a;)Lnet/minecraft/world/level/Explosion; explode
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/world/entity/player/EntityHuman;DDDLnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundCategory;FFJ)V playSeededSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;DDDLnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;DDDLnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FFJ)V playSeededSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundCategory;FFJ)V playSeededSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playSound
	a (Lnet/minecraft/world/level/GameRules$GameRuleKey;)Lnet/minecraft/world/level/Explosion$Effect; getDestroyType
	a (Lnet/minecraft/world/level/block/entity/TickingBlockEntity;)V addBlockEntityTicker
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;Ljava/util/List;)V getEntities
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;Ljava/util/List;I)V getEntities
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)I getHeight
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	aa ()Lnet/minecraft/resources/ResourceKey; dimensionTypeId
	ab ()Lnet/minecraft/core/Holder; dimensionTypeRegistration
	ac ()Lnet/minecraft/resources/ResourceKey; dimension
	ad ()Lnet/minecraft/util/profiling/GameProfilerFiller; getProfiler
	ae ()Ljava/util/function/Supplier; getProfilerSupplier
	af ()Z isDebug
	ag ()Lnet/minecraft/world/damagesource/DamageSources; damageSources
	b (F)F getThunderLevel
	b (I)Z isOutsideSpawnableHeight
	b (ILnet/minecraft/core/BlockPosition;I)V globalLevelEvent
	b (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z setBlockAndUpdate
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlocksDirty
	b (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)V addAlwaysVisibleParticle
	b (Lnet/minecraft/core/particles/ParticleParam;ZDDDDDD)V addAlwaysVisibleParticle
	b (ZZ)V setSpawnSettings
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c (F)V setThunderLevel
	c (I)V setSkyFlashTime
	c (II)Lnet/minecraft/world/level/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V updateNeighbourForOutputSignal
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	d (F)F getRainLevel
	d (II)Lnet/minecraft/world/level/chunk/Chunk; getChunk
	d_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/DifficultyDamageScaler; getCurrentDifficultyAt
	e (F)V setRainLevel
	h (Lnet/minecraft/world/entity/Entity;)Z shouldTickDeath
	j (Lnet/minecraft/core/BlockPosition;)Z isInWorldBounds
	k (Lnet/minecraft/core/BlockPosition;)Z isInSpawnableBounds
	l (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/chunk/Chunk; getChunkAt
	m (Lnet/minecraft/core/BlockPosition;)Z shouldTickBlocksAt
	n ()Lnet/minecraft/server/MinecraftServer; getServer
	n (Lnet/minecraft/core/BlockPosition;)V removeBlockEntity
	o (Lnet/minecraft/core/BlockPosition;)Z isLoaded
	p (Lnet/minecraft/core/BlockPosition;)V blockEntityChanged
	q ()Lnet/minecraft/world/item/crafting/CraftingManager; getRecipeManager
	q (Lnet/minecraft/core/BlockPosition;)Z isRainingAt
	r ()Z noSave
	t ()I getFreeMapId
	w_ ()Z isClientSide
	x_ ()Lnet/minecraft/world/level/lighting/LevelLightEngine; getLightEngine
	y_ ()I getSeaLevel
	z_ ()Lnet/minecraft/world/level/storage/WorldData; getLevelData
net/minecraft/world/level/WorldAccess net/minecraft/world/level/ServerLevelAccessor
	C ()Lnet/minecraft/server/level/WorldServer; getLevel
	a_ (Lnet/minecraft/world/entity/Entity;)V addFreshEntityWithPassengers
net/minecraft/world/level/WorldSettings net/minecraft/world/level/LevelSettings
	a levelName
	b gameType
	c hardcore
	d difficulty
	e allowCommands
	f gameRules
	g dataConfiguration
	a ()Ljava/lang/String; levelName
	a (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/world/level/WorldDataConfiguration;)Lnet/minecraft/world/level/WorldSettings; parse
	a (Lnet/minecraft/world/EnumDifficulty;)Lnet/minecraft/world/level/WorldSettings; withDifficulty
	a (Lnet/minecraft/world/level/EnumGamemode;)Lnet/minecraft/world/level/WorldSettings; withGameType
	a (Lnet/minecraft/world/level/WorldDataConfiguration;)Lnet/minecraft/world/level/WorldSettings; withDataConfiguration
	b ()Lnet/minecraft/world/level/EnumGamemode; gameType
	c ()Z hardcore
	d ()Lnet/minecraft/world/EnumDifficulty; difficulty
	e ()Z allowCommands
	f ()Lnet/minecraft/world/level/GameRules; gameRules
	g ()Lnet/minecraft/world/level/WorldDataConfiguration; getDataConfiguration
	h ()Lnet/minecraft/world/level/WorldSettings; copy
net/minecraft/world/level/biome/BiomeBase net/minecraft/world/level/biome/Biome
	a DIRECT_CODEC
	b NETWORK_CODEC
	c CODEC
	d LIST_CODEC
	e BIOME_INFO_NOISE
	f TEMPERATURE_NOISE
	g FROZEN_TEMPERATURE_NOISE
	h TEMPERATURE_CACHE_SIZE
	i climateSettings
	j generationSettings
	k mobSettings
	l specialEffects
	m temperatureCache
	a ()I getSkyColor
	a (DD)I getGrassColor
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/biome/BiomeBase$Precipitation; getPrecipitationAt
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z shouldFreeze
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Z)Z shouldFreeze
	b ()Lnet/minecraft/world/level/biome/BiomeSettingsMobs; getMobSettings
	b (Lnet/minecraft/core/BlockPosition;)Z coldEnoughToSnow
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z shouldSnow
	c ()Z hasPrecipitation
	c (Lnet/minecraft/core/BlockPosition;)Z warmEnoughToRain
	d ()Lnet/minecraft/world/level/biome/BiomeSettingsGeneration; getGenerationSettings
	d (Lnet/minecraft/core/BlockPosition;)Z shouldMeltFrozenOceanIcebergSlightly
	e ()I getFogColor
	e (Lnet/minecraft/core/BlockPosition;)F getHeightAdjustedTemperature
	f ()I getFoliageColor
	f (Lnet/minecraft/core/BlockPosition;)F getTemperature
	g ()F getBaseTemperature
	h ()Lnet/minecraft/world/level/biome/BiomeFog; getSpecialEffects
	i ()I getWaterColor
	j ()I getWaterFogColor
	k ()Ljava/util/Optional; getAmbientParticle
	l ()Ljava/util/Optional; getAmbientLoop
	m ()Ljava/util/Optional; getAmbientMood
	n ()Ljava/util/Optional; getAmbientAdditions
	o ()Ljava/util/Optional; getBackgroundMusic
	p ()I getGrassColorFromTexture
	q ()I getFoliageColorFromTexture
net/minecraft/world/level/biome/BiomeBase$ClimateSettings net/minecraft/world/level/biome/Biome$ClimateSettings
	a CODEC
	b hasPrecipitation
	c temperature
	d temperatureModifier
	e downfall
	a ()Z hasPrecipitation
	b ()F temperature
	c ()Lnet/minecraft/world/level/biome/BiomeBase$TemperatureModifier; temperatureModifier
	d ()F downfall
net/minecraft/world/level/biome/BiomeBase$Precipitation net/minecraft/world/level/biome/Biome$Precipitation
	a NONE
	b RAIN
	c SNOW
	d $VALUES
	a ()[Lnet/minecraft/world/level/biome/BiomeBase$Precipitation; $values
net/minecraft/world/level/biome/BiomeBase$TemperatureModifier net/minecraft/world/level/biome/Biome$TemperatureModifier
	a NONE
	b FROZEN
	c CODEC
	d name
	e $VALUES
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/core/BlockPosition;F)F modifyTemperature
	b ()[Lnet/minecraft/world/level/biome/BiomeBase$TemperatureModifier; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/biome/BiomeFog net/minecraft/world/level/biome/BiomeSpecialEffects
	a CODEC
	b fogColor
	c waterColor
	d waterFogColor
	e skyColor
	f foliageColorOverride
	g grassColorOverride
	h grassColorModifier
	i ambientParticleSettings
	j ambientLoopSoundEvent
	k ambientMoodSettings
	l ambientAdditionsSettings
	m backgroundMusic
	a ()I getFogColor
	b ()I getWaterColor
	c ()I getWaterFogColor
	d ()I getSkyColor
	e ()Ljava/util/Optional; getFoliageColorOverride
	f ()Ljava/util/Optional; getGrassColorOverride
	g ()Lnet/minecraft/world/level/biome/BiomeFog$GrassColor; getGrassColorModifier
	h ()Ljava/util/Optional; getAmbientParticleSettings
	i ()Ljava/util/Optional; getAmbientLoopSoundEvent
	j ()Ljava/util/Optional; getAmbientMoodSettings
	k ()Ljava/util/Optional; getAmbientAdditionsSettings
	l ()Ljava/util/Optional; getBackgroundMusic
net/minecraft/world/level/biome/BiomeFog$GrassColor net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier
	a NONE
	b DARK_FOREST
	c SWAMP
	d CODEC
	e name
	f $VALUES
	a ()Ljava/lang/String; getName
	a (DDI)I modifyColor
	b ()[Lnet/minecraft/world/level/biome/BiomeFog$GrassColor; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/biome/BiomeManager$Provider net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource
net/minecraft/world/level/biome/BiomeParticles net/minecraft/world/level/biome/AmbientParticleSettings
	a CODEC
	b options
	c probability
	a ()Lnet/minecraft/core/particles/ParticleParam; getOptions
	a (Lnet/minecraft/util/RandomSource;)Z canSpawn
net/minecraft/world/level/biome/BiomeSettingsGeneration net/minecraft/world/level/biome/BiomeGenerationSettings
	a EMPTY
	b CODEC
	c LOGGER
	d carvers
	e features
	f flowerFeatures
	g featureSet
	a ()Ljava/util/List; getFlowerFeatures
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)Ljava/lang/Iterable; getCarvers
	a (Lnet/minecraft/world/level/levelgen/placement/PlacedFeature;)Z hasFeature
	b ()Ljava/util/List; features
net/minecraft/world/level/biome/BiomeSettingsMobs net/minecraft/world/level/biome/MobSpawnSettings
	a EMPTY_MOB_LIST
	b EMPTY
	c CODEC
	d LOGGER
	e DEFAULT_CREATURE_SPAWN_PROBABILITY
	f creatureGenerationProbability
	g spawners
	h mobSpawnCosts
	a ()F getCreatureProbability
	a (Lnet/minecraft/world/entity/EntityTypes;)Lcrf$b; getMobSpawnCost
	a (Lnet/minecraft/world/entity/EnumCreatureType;)Lnet/minecraft/util/random/WeightedRandomList; getMobs
net/minecraft/world/level/biome/CaveSound net/minecraft/world/level/biome/AmbientAdditionsSettings
	a CODEC
	b soundEvent
	c tickChance
	a ()Lnet/minecraft/core/Holder; getSoundEvent
	b ()D getTickChance
net/minecraft/world/level/biome/CaveSoundSettings net/minecraft/world/level/biome/AmbientMoodSettings
	a CODEC
	b LEGACY_CAVE_SETTINGS
	c soundEvent
	d tickDelay
	e blockSearchExtent
	f soundPositionOffset
	a ()Lnet/minecraft/core/Holder; getSoundEvent
	b ()I getTickDelay
	c ()I getBlockSearchExtent
	d ()D getSoundPositionOffset
net/minecraft/world/level/biome/WorldChunkManager net/minecraft/world/level/biome/BiomeSource
	a CODEC
	b possibleBiomes
	a ()Lcom/mojang/serialization/Codec; codec
	a (IIIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;ZLnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; findBiomeHorizontal
	a (IIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; findBiomeHorizontal
	a (IIIILnet/minecraft/world/level/biome/Climate$Sampler;)Ljava/util/Set; getBiomesWithin
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/biome/Climate$Sampler;)V addDebugInfo
	a (Lnet/minecraft/core/BlockPosition;IIILjava/util/function/Predicate;Lnet/minecraft/world/level/biome/Climate$Sampler;Lnet/minecraft/world/level/IWorldReader;)Lcom/mojang/datafixers/util/Pair; findClosestBiome3d
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
	c ()Ljava/util/Set; possibleBiomes
net/minecraft/world/level/biome/WorldChunkManagerCheckerBoard net/minecraft/world/level/biome/CheckerboardColumnBiomeSource
	b CODEC
	c allowedBiomes
	d bitShift
	e size
	a ()Lcom/mojang/serialization/Codec; codec
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
net/minecraft/world/level/biome/WorldChunkManagerHell net/minecraft/world/level/biome/FixedBiomeSource
	b CODEC
	c biome
	a ()Lcom/mojang/serialization/Codec; codec
	a (IIIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;ZLnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; findBiomeHorizontal
	a (IIIILnet/minecraft/world/level/biome/Climate$Sampler;)Ljava/util/Set; getBiomesWithin
	a (Lnet/minecraft/core/BlockPosition;IIILjava/util/function/Predicate;Lnet/minecraft/world/level/biome/Climate$Sampler;Lnet/minecraft/world/level/IWorldReader;)Lcom/mojang/datafixers/util/Pair; findClosestBiome3d
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
net/minecraft/world/level/biome/WorldChunkManagerMultiNoise net/minecraft/world/level/biome/MultiNoiseBiomeSource
	b DIRECT_CODEC
	c CODEC
	d ENTRY_CODEC
	e PRESET_CODEC
	f parameters
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lcrc$c;)Lnet/minecraft/world/level/biome/WorldChunkManagerMultiNoise; createFromList
	a (Lcrc$h;)Lnet/minecraft/core/Holder; getNoiseBiome
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/biome/Climate$Sampler;)V addDebugInfo
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/WorldChunkManagerMultiNoise; createFromPreset
	a (Lnet/minecraft/resources/ResourceKey;)Z stable
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
	d ()Lcrc$c; parameters
net/minecraft/world/level/biome/WorldChunkManagerTheEnd net/minecraft/world/level/biome/TheEndBiomeSource
	b CODEC
	c end
	d highlands
	e midlands
	f islands
	g barrens
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/WorldChunkManagerTheEnd; create
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
net/minecraft/world/level/block/BlockAir net/minecraft/world/level/block/AirBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
net/minecraft/world/level/block/BlockAnvil net/minecraft/world/level/block/AnvilBlock
	a FACING
	b BASE
	c X_LEG1
	d X_LEG2
	e X_TOP
	f Z_LEG1
	g Z_LEG2
	h Z_TOP
	i X_AXIS_AABB
	j Z_AXIS_AABB
	k CONTAINER_TITLE
	l FALL_DAMAGE_PER_DISTANCE
	m FALL_DAMAGE_MAX
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; getFallDamageSource
	a (Lnet/minecraft/world/entity/item/EntityFallingBlock;)V falling
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/item/EntityFallingBlock;)V onBrokenAfterFall
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/item/EntityFallingBlock;)V onLand
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getDustColor
	e (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; damage
net/minecraft/world/level/block/BlockAttachable net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock
	I FACE
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canAttach
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/core/EnumDirection; getConnectedDirection
net/minecraft/world/level/block/BlockBamboo net/minecraft/world/level/block/BambooStalkBlock
	a SMALL_LEAVES_AABB_OFFSET
	b LARGE_LEAVES_AABB_OFFSET
	c COLLISION_AABB_OFFSET
	d SMALL_SHAPE
	e LARGE_SHAPE
	f COLLISION_SHAPE
	g AGE
	h LEAVES
	i STAGE
	j MAX_HEIGHT
	k STAGE_GROWING
	l STAGE_DONE_GROWING
	m AGE_THIN_BAMBOO
	n AGE_THICK_BAMBOO
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getHeightAboveUpToMax
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getDestroyProgress
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;I)V growBamboo
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isCollisionShapeFullBlock
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getHeightBelowUpToMax
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
net/minecraft/world/level/block/BlockBambooSapling net/minecraft/world/level/block/BambooSaplingBlock
	a SAPLING_AABB_OFFSET
	b SAPLING_SHAPE
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V growBamboo
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getDestroyProgress
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
net/minecraft/world/level/block/BlockBanner net/minecraft/world/level/block/BannerBlock
	a ROTATION
	b BY_COLOR
	c SHAPE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/level/block/Block; byColor
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/BlockBannerAbstract net/minecraft/world/level/block/AbstractBannerBlock
	a color
	a ()Lnet/minecraft/world/item/EnumColor; getColor
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isPossibleToRespawnInThis
net/minecraft/world/level/block/BlockBannerWall net/minecraft/world/level/block/WallBannerBlock
	a FACING
	b SHAPES
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	f ()Ljava/lang/String; getDescriptionId
net/minecraft/world/level/block/BlockBarrel net/minecraft/world/level/block/BarrelBlock
	a FACING
	b OPEN
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockBarrier net/minecraft/world/level/block/BarrierBlock
	a WATERLOGGED
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; pickupBlock
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockBeacon net/minecraft/world/level/block/BeaconBlock
	a ()Lnet/minecraft/world/item/EnumColor; getColor
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
net/minecraft/world/level/block/BlockBed net/minecraft/world/level/block/BedBlock
	a PART
	b OCCUPIED
	c HEIGHT
	d BASE
	e LEG_NORTH_WEST
	f LEG_SOUTH_WEST
	g LEG_NORTH_EAST
	h LEG_SOUTH_EAST
	i NORTH_SHAPE
	j SOUTH_SHAPE
	k WEST_SHAPE
	l EAST_SHAPE
	m LEG_WIDTH
	n color
	a ()Lnet/minecraft/world/item/EnumColor; getColor
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/core/EnumDirection;)[[I bedAboveStandUpOffsets
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)[[I bedStandUpOffsets
	a (Lnet/minecraft/world/entity/Entity;)V bounceUp
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;F)Ljava/util/Optional; findStandUpPosition
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)Ljava/util/Optional; findBunkBedStandUpPosition
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/core/BlockPosition;[[IZ)Ljava/util/Optional; findStandUpPositionAtOffset
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/EnumDirection; getBedOrientation
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/entity/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/world/level/World;)Z canSetSpawn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z kickVillagerOutOfBed
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)J getSeed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyBedPart;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/EnumDirection; getNeighbourDirection
	b (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)[[I bedSurroundStandUpOffsets
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isBunkBed
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/core/EnumDirection; getConnectedDirection
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/DoubleBlockFinder$BlockType; getBlockType
net/minecraft/world/level/block/BlockBeehive net/minecraft/world/level/block/BeehiveBlock
	a FACING
	b HONEY_LEVEL
	c MAX_HONEY_LEVELS
	d SHEARED_HONEYCOMB_COUNT
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;DDDDD)V spawnFluidParticle
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V dropHoneycomb
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V trySpawnDripParticles
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V spawnParticle
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/item/ItemStack;)V playerDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V resetHoneyLevel
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/entity/TileEntityBeehive$ReleaseStatus;)V releaseBeesAndResetHoneyLevel
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lecw$a;)Ljava/util/List; getDrops
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V angerNearbyBees
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z hiveContainsBees
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockBeetroot net/minecraft/world/level/block/BeetrootBlock
	a MAX_AGE
	b AGE
	e SHAPE_BY_AGE
	a ()Lnet/minecraft/world/level/block/state/properties/BlockStateInteger; getAgeProperty
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/World;)I getBonemealAgeIncrease
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b ()I getMaxAge
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c ()Lnet/minecraft/world/level/IMaterial; getBaseSeedId
net/minecraft/world/level/block/BlockBell net/minecraft/world/level/block/BellBlock
	D TO_SOUTH
	E CEILING_SHAPE
	a FACING
	b ATTACHMENT
	c POWERED
	d EVENT_BELL_RING
	e NORTH_SOUTH_FLOOR_SHAPE
	f EAST_WEST_FLOOR_SHAPE
	g BELL_TOP_SHAPE
	h BELL_BOTTOM_SHAPE
	i BELL_SHAPE
	j NORTH_SOUTH_BETWEEN
	k EAST_WEST_BETWEEN
	l TO_WEST
	m TO_EAST
	n TO_NORTH
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z attemptToRing
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z attemptToRing
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/player/EntityHuman;Z)Z onHit
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;D)Z isProperHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVoxelShape
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/core/EnumDirection; getConnectedDirection
net/minecraft/world/level/block/BlockBlastFurnace net/minecraft/world/level/block/BlastFurnaceBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V openContainer
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/BlockBrewingStand net/minecraft/world/level/block/BrewingStandBlock
	a HAS_BOTTLE
	b SHAPE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockBubbleColumn net/minecraft/world/level/block/BubbleColumnBlock
	a DRAG_DOWN
	b CHECK_PERIOD
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; pickupBlock
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V updateColumn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	aq_ ()Ljava/util/Optional; getPickupSound
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updateColumn
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canExistIn
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; getColumnState
net/minecraft/world/level/block/BlockButtonAbstract net/minecraft/world/level/block/ButtonBlock
	D PRESSED_FLOOR_AABB_Z
	E PRESSED_NORTH_AABB
	F PRESSED_SOUTH_AABB
	G PRESSED_WEST_AABB
	H PRESSED_EAST_AABB
	J PRESSED_DEPTH
	K UNPRESSED_DEPTH
	L type
	M ticksToStayPressed
	N arrowsCanPress
	a POWERED
	b HALF_AABB_HEIGHT
	c HALF_AABB_WIDTH
	d CEILING_AABB_X
	e CEILING_AABB_Z
	f FLOOR_AABB_X
	g FLOOR_AABB_Z
	h NORTH_AABB
	i SOUTH_AABB
	j WEST_AABB
	k EAST_AABB
	l PRESSED_CEILING_AABB_X
	m PRESSED_CEILING_AABB_Z
	n PRESSED_FLOOR_AABB_X
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Z)V playSound
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Z)Lnet/minecraft/sounds/SoundEffect; getSound
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V press
	e (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V checkPressed
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V updateNeighbours
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockCactus net/minecraft/world/level/block/CactusBlock
	a AGE
	b MAX_AGE
	c AABB_OFFSET
	d COLLISION_SHAPE
	e OUTLINE_SHAPE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
net/minecraft/world/level/block/BlockCake net/minecraft/world/level/block/CakeBlock
	a MAX_BITES
	b BITES
	c FULL_CAKE_SIGNAL
	d AABB_OFFSET
	e AABB_SIZE_PER_BITE
	f SHAPE_BY_BITE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/EnumInteractionResult; eat
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (I)I getOutputSignal
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockCampfire net/minecraft/world/level/block/CampfireBlock
	a SHAPE
	b LIT
	c SIGNAL_FIRE
	d WATERLOGGED
	e FACING
	f VIRTUAL_FENCE_POST
	g SMOKE_DISTANCE
	h spawnParticles
	i fireDamage
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V dowse
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z isSmokeyPos
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;ZZ)V makeParticles
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z isLitCampfire
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canLight
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSmokeSource
net/minecraft/world/level/block/BlockCarpet net/minecraft/world/level/block/WoolCarpetBlock
	b color
	a ()Lnet/minecraft/world/item/EnumColor; getColor
net/minecraft/world/level/block/BlockCarrots net/minecraft/world/level/block/CarrotBlock
	a SHAPE_BY_AGE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c ()Lnet/minecraft/world/level/IMaterial; getBaseSeedId
net/minecraft/world/level/block/BlockCartographyTable net/minecraft/world/level/block/CartographyTableBlock
	a CONTAINER_TITLE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
net/minecraft/world/level/block/BlockCauldron net/minecraft/world/level/block/CauldronBlock
	c RAIN_FILL_CHANCE
	d POWDER_SNOW_FILL_CHANCE
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/biome/BiomeBase$Precipitation;)Z shouldHandlePrecipitation
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/biome/BiomeBase$Precipitation;)V handlePrecipitation
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;)V receiveStalactiteDrip
	a (Lnet/minecraft/world/level/material/FluidType;)Z canReceiveStalactiteDrip
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Z isFull
net/minecraft/world/level/block/BlockChain net/minecraft/world/level/block/ChainBlock
	a WATERLOGGED
	b AABB_MIN
	c AABB_MAX
	d Y_AXIS_AABB
	e Z_AXIS_AABB
	f X_AXIS_AABB
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockChest net/minecraft/world/level/block/ChestBlock
	b FACING
	c TYPE
	d WATERLOGGED
	e EVENT_SET_OPEN_COUNT
	f AABB_OFFSET
	g AABB_HEIGHT
	h NORTH_AABB
	i SOUTH_AABB
	j WEST_AABB
	k EAST_AABB
	l AABB
	m CHEST_COMBINER
	n MENU_PROVIDER_COMBINER
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/item/context/BlockActionContext;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/EnumDirection; candidatePartnerFacing
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z isChestBlockedAt
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isBlockedChestByBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/BlockChest;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/IInventory; getContainer
	a (Lnet/minecraft/world/level/block/entity/LidBlockEntity;)Lnet/minecraft/world/level/block/DoubleBlockFinder$Combiner; opennessCombiner
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/level/block/DoubleBlockFinder$Result; combine
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b ()Lnet/minecraft/stats/Statistic; getOpenChestStat
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z isCatSittingOnChest
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c ()Lnet/minecraft/world/level/block/entity/TileEntityTypes; blockEntityType
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/DoubleBlockFinder$BlockType; getBlockType
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/core/EnumDirection; getConnectedDirection
net/minecraft/world/level/block/BlockChestAbstract net/minecraft/world/level/block/AbstractChestBlock
	a blockEntityType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/level/block/DoubleBlockFinder$Result; combine
net/minecraft/world/level/block/BlockChestTrapped net/minecraft/world/level/block/TrappedChestBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	b ()Lnet/minecraft/stats/Statistic; getOpenChestStat
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockChorusFlower net/minecraft/world/level/block/ChorusFlowerBlock
	a DEAD_AGE
	b AGE
	c BLOCK_SUPPORT_SHAPE
	d plant
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;I)V generatePlant
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;II)V growTreeRecursive
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V placeDeadFlower
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;I)V placeGrownFlower
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z allNeighborsEmpty
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
net/minecraft/world/level/block/BlockChorusFruit net/minecraft/world/level/block/ChorusPlantBlock
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
net/minecraft/world/level/block/BlockCobbleWall net/minecraft/world/level/block/WallBlock
	D POST_TEST
	E NORTH_TEST
	F SOUTH_TEST
	G WEST_TEST
	H EAST_TEST
	a UP
	b EAST_WALL
	c NORTH_WALL
	d SOUTH_WALL
	e WEST_WALL
	f WATERLOGGED
	g shapeByIndex
	h collisionShapeByIndex
	i WALL_WIDTH
	j WALL_HEIGHT
	k POST_WIDTH
	l POST_COVER_WIDTH
	m WALL_COVER_START
	n WALL_COVER_END
	a (FFFFFF)Ljava/util/Map; makeShapes
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/IBlockData; sideUpdate
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; topUpdate
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;ZZZZ)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z shouldRaisePost
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Z isConnected
	a (Lnet/minecraft/world/level/block/state/IBlockData;ZLnet/minecraft/core/EnumDirection;)Z connectsTo
	a (Lnet/minecraft/world/level/block/state/IBlockData;ZZZZLnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/IBlockData; updateSides
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/properties/BlockPropertyWallHeight;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; applyWallShape
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z isCovered
	a (ZLnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/properties/BlockPropertyWallHeight; makeWallState
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockCocoa net/minecraft/world/level/block/CocoaBlock
	D SOUTH_AABB
	a MAX_AGE
	b AGE
	c AGE_0_WIDTH
	d AGE_0_HEIGHT
	e AGE_0_HALFWIDTH
	f AGE_1_WIDTH
	g AGE_1_HEIGHT
	h AGE_1_HALFWIDTH
	i AGE_2_WIDTH
	j AGE_2_HEIGHT
	k AGE_2_HALFWIDTH
	l EAST_AABB
	m WEST_AABB
	n NORTH_AABB
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
net/minecraft/world/level/block/BlockCommand net/minecraft/world/level/block/CommandBlock
	a FACING
	b CONDITIONAL
	c LOGGER
	d automatic
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)V executeChain
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/CommandBlockListenerAbstract;Z)V execute
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockComposter net/minecraft/world/level/block/ComposterBlock
	a READY
	b MIN_LEVEL
	c MAX_LEVEL
	d LEVEL
	e COMPOSTABLES
	f AABB_SIDE_THICKNESS
	g OUTER_SHAPE
	h SHAPES
	a ()V bootStrap
	a (FLnet/minecraft/world/level/IMaterial;)V add
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; insertItem
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; empty
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/level/block/state/IBlockData; addItem
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; extractProduce
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)V handleFill
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/IWorldInventory; getContainer
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getInteractionShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockComposter$ContainerEmpty net/minecraft/world/level/block/ComposterBlock$EmptyContainer
	a (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/core/EnumDirection;)[I getSlotsForFace
	b (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canTakeItemThroughFace
net/minecraft/world/level/block/BlockComposter$ContainerInput net/minecraft/world/level/block/ComposterBlock$InputContainer
	c state
	d level
	e pos
	f changed
	a (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/core/EnumDirection;)[I getSlotsForFace
	ag_ ()I getMaxStackSize
	b (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canTakeItemThroughFace
	e ()V setChanged
net/minecraft/world/level/block/BlockComposter$ContainerOutput net/minecraft/world/level/block/ComposterBlock$OutputContainer
	c state
	d level
	e pos
	f changed
	a (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/core/EnumDirection;)[I getSlotsForFace
	ag_ ()I getMaxStackSize
	b (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canTakeItemThroughFace
	e ()V setChanged
net/minecraft/world/level/block/BlockConcretePowder net/minecraft/world/level/block/ConcretePowderBlock
	a concrete
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z touchesLiquid
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/item/EntityFallingBlock;)V onLand
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldSolidify
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getDustColor
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z canSolidify
net/minecraft/world/level/block/BlockConduit net/minecraft/world/level/block/ConduitBlock
	a WATERLOGGED
	b SHAPE
	c SIZE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockCoral net/minecraft/world/level/block/CoralBlock
	a deadBlock
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z scanForWater
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
net/minecraft/world/level/block/BlockCoralBase net/minecraft/world/level/block/BaseCoralPlantTypeBlock
	a AABB
	c WATERLOGGED
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V tryScheduleDieTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	e (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z scanForWater
net/minecraft/world/level/block/BlockCoralDead net/minecraft/world/level/block/BaseCoralPlantBlock
	a AABB_OFFSET
	b SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
net/minecraft/world/level/block/BlockCoralFan net/minecraft/world/level/block/CoralFanBlock
	a deadBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockCoralFanAbstract net/minecraft/world/level/block/BaseCoralFanBlock
	a AABB
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
net/minecraft/world/level/block/BlockCoralFanWall net/minecraft/world/level/block/CoralWallFanBlock
	b deadBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockCoralFanWallAbstract net/minecraft/world/level/block/BaseCoralWallFanBlock
	a FACING
	b SHAPES
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/BlockCoralPlant net/minecraft/world/level/block/CoralPlantBlock
	a AABB_OFFSET
	b SHAPE
	d deadBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockCrops net/minecraft/world/level/block/CropBlock
	a SHAPE_BY_AGE
	c MAX_AGE
	d AGE
	a ()Lnet/minecraft/world/level/block/state/properties/BlockStateInteger; getAgeProperty
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z hasSufficientLight
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;)I getBonemealAgeIncrease
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V growCrops
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getGrowthSpeed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	b ()I getMaxAge
	b (I)Lnet/minecraft/world/level/block/state/IBlockData; getStateForAge
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c ()Lnet/minecraft/world/level/IMaterial; getBaseSeedId
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getAge
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isMaxAge
net/minecraft/world/level/block/BlockCryingObsidian net/minecraft/world/level/block/CryingObsidianBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/BlockDaylightDetector net/minecraft/world/level/block/DaylightDetectorBlock
	a POWER
	b INVERTED
	c SHAPE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityLightDetector;)V tickEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V updateSignalStrength
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockDeadBush net/minecraft/world/level/block/DeadBushBlock
	a AABB_OFFSET
	b SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockDiodeAbstract net/minecraft/world/level/block/DiodeBlock
	b SHAPE
	c POWERED
	a ()Z sideInputDiodesOnly
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canSurviveOn
	a (Lnet/minecraft/world/level/SignalGetter;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)I getAlternateSignal
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldTurnOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)I getOutputSignal
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isLocked
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)I getInputSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldPrioritize
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V checkTickOnNeighbor
	d (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updateNeighborsInFront
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getDelay
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isDiode
net/minecraft/world/level/block/BlockDirectional net/minecraft/world/level/block/DirectionalBlock
	a FACING
net/minecraft/world/level/block/BlockDirtSnow net/minecraft/world/level/block/SnowyDirtBlock
	a SNOWY
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSnowySetting
net/minecraft/world/level/block/BlockDirtSnowSpreadable net/minecraft/world/level/block/SpreadingSnowyDirtBlock
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canBeGrass
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canPropagate
net/minecraft/world/level/block/BlockDispenser net/minecraft/world/level/block/DispenserBlock
	a FACING
	b TRIGGERED
	c LOGGER
	d DISPENSER_REGISTRY
	e TRIGGER_DURATION
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/core/dispenser/SourceBlock;)Lnet/minecraft/core/IPosition; getDispensePosition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V dispenseFrom
	a (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/IDispenseBehavior; getDispenseMethod
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/core/dispenser/IDispenseBehavior;)V registerBehavior
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockDoor net/minecraft/world/level/block/DoorBlock
	a FACING
	b OPEN
	c HINGE
	d POWERED
	e HALF
	f AABB_DOOR_THICKNESS
	g SOUTH_AABB
	h NORTH_AABB
	i WEST_AABB
	j EAST_AABB
	k type
	a ()Lnet/minecraft/world/level/block/state/properties/BlockSetType; type
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)V playSound
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Z)V setOpen
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z isWoodenDoor
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)J getSeed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/properties/BlockPropertyDoorHinge; getHinge
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isOpen
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z isWoodenDoor
net/minecraft/world/level/block/BlockDragonEgg net/minecraft/world/level/block/DragonEggBlock
	a SHAPE
	a ()I getDelayAfterPlace
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V attack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V teleport
net/minecraft/world/level/block/BlockDropper net/minecraft/world/level/block/DropperBlock
	c LOGGER
	d DISPENSE_BEHAVIOUR
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V dispenseFrom
	a (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/IDispenseBehavior; getDispenseMethod
net/minecraft/world/level/block/BlockEnchantmentTable net/minecraft/world/level/block/EnchantmentTableBlock
	a SHAPE
	b BOOKSHELF_OFFSETS
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Z isValidBookShelf
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockEndGateway net/minecraft/world/level/block/EndGatewayBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canBeReplaced
net/minecraft/world/level/block/BlockEndRod net/minecraft/world/level/block/EndRodBlock
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/BlockEnderChest net/minecraft/world/level/block/EnderChestBlock
	b FACING
	c WATERLOGGED
	d SHAPE
	e CONTAINER_TITLE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/level/block/DoubleBlockFinder$Result; combine
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockEnderPortal net/minecraft/world/level/block/EndPortalBlock
	a SHAPE
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canBeReplaced
net/minecraft/world/level/block/BlockEnderPortalFrame net/minecraft/world/level/block/EndPortalFrameBlock
	a FACING
	b HAS_EYE
	c BASE_SHAPE
	d EYE_SHAPE
	e FULL_SHAPE
	f portalShape
	a ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; getOrCreatePortalShape
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockFacingHorizontal net/minecraft/world/level/block/HorizontalDirectionalBlock
	aC FACING
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/BlockFalling net/minecraft/world/level/block/FallingBlock
	a ()I getDelayAfterPlace
	a (Lnet/minecraft/world/entity/item/EntityFallingBlock;)V falling
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getDustColor
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isFree
net/minecraft/world/level/block/BlockFence net/minecraft/world/level/block/FenceBlock
	i occlusionByIndex
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;ZLnet/minecraft/core/EnumDirection;)Z connectsTo
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSameFence
net/minecraft/world/level/block/BlockFenceGate net/minecraft/world/level/block/FenceGateBlock
	D X_OCCLUSION_SHAPE_LOW
	E type
	a OPEN
	b POWERED
	c IN_WALL
	d Z_SHAPE
	e X_SHAPE
	f Z_SHAPE_LOW
	g X_SHAPE_LOW
	h Z_COLLISION_SHAPE
	i X_COLLISION_SHAPE
	j Z_SUPPORT_SHAPE
	k X_SUPPORT_SHAPE
	l Z_OCCLUSION_SHAPE
	m X_OCCLUSION_SHAPE
	n Z_OCCLUSION_SHAPE_LOW
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z connectsToDirection
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isWall
net/minecraft/world/level/block/BlockFire net/minecraft/world/level/block/FireBlock
	D SOUTH_AABB
	E shapesCache
	F IGNITE_INSTANT
	G IGNITE_EASY
	H IGNITE_MEDIUM
	I IGNITE_HARD
	J BURN_INSTANT
	K BURN_EASY
	L BURN_MEDIUM
	M BURN_HARD
	N igniteOdds
	O burnOdds
	c MAX_AGE
	d AGE
	e NORTH
	f EAST
	g SOUTH
	h WEST
	i UP
	j PROPERTY_BY_DIRECTION
	k UP_AABB
	l WEST_AABB
	m EAST_AABB
	n NORTH_AABB
	a ()V bootStrap
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/util/RandomSource;)I getFireTickDelay
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/world/level/block/state/IBlockData; getStateWithAge
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)I getIgniteOdds
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z isNearRain
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/util/RandomSource;I)V checkBurnOut
	a (Lnet/minecraft/world/level/block/Block;II)V setFlammable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	d (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isValidFireLocation
	f (Lnet/minecraft/world/level/block/state/IBlockData;)Z canBurn
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; calculateShape
	n (Lnet/minecraft/world/level/block/state/IBlockData;)I getBurnOdds
	o (Lnet/minecraft/world/level/block/state/IBlockData;)I getIgniteOdds
net/minecraft/world/level/block/BlockFireAbstract net/minecraft/world/level/block/BaseFireBlock
	a AABB_OFFSET
	b DOWN_AABB
	c SECONDS_ON_FIRE
	d fireDamage
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
	a (Lnet/minecraft/world/level/World;)Z inPortalDimension
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canBePlacedAt
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V spawnDestroyParticles
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isPortal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	f (Lnet/minecraft/world/level/block/state/IBlockData;)Z canBurn
net/minecraft/world/level/block/BlockFletchingTable net/minecraft/world/level/block/FletchingTableBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
net/minecraft/world/level/block/BlockFloorSign net/minecraft/world/level/block/StandingSignBlock
	a ROTATION
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	g (Lnet/minecraft/world/level/block/state/IBlockData;)F getYRotationDegrees
net/minecraft/world/level/block/BlockFlowerPot net/minecraft/world/level/block/FlowerPotBlock
	a AABB_SIZE
	b SHAPE
	c POTTED_BY_CONTENT
	d content
	a ()Lnet/minecraft/world/level/block/Block; getContent
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	g ()Z isEmpty
net/minecraft/world/level/block/BlockFlowers net/minecraft/world/level/block/FlowerBlock
	a AABB_OFFSET
	b SHAPE
	c suspiciousStewEffects
	a ()Ljava/util/List; getSuspiciousEffects
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
net/minecraft/world/level/block/BlockFluids net/minecraft/world/level/block/LiquidBlock
	a LEVEL
	b fluid
	c STABLE_SHAPE
	d POSSIBLE_FLOW_DIRECTIONS
	e stateCache
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; pickupBlock
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V fizz
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldSpreadLiquid
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lecw$a;)Ljava/util/List; getDrops
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z skipRendering
	aq_ ()Ljava/util/Optional; getPickupSound
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
net/minecraft/world/level/block/BlockFungi net/minecraft/world/level/block/FungusBlock
	a SHAPE
	b BONEMEAL_SUCCESS_PROBABILITY
	c requiredBlock
	d feature
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;)Ljava/util/Optional; getFeature
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockFurnace net/minecraft/world/level/block/AbstractFurnaceBlock
	a FACING
	b LIT
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V openContainer
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/TileEntityTypes;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; createFurnaceTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockFurnaceFurace net/minecraft/world/level/block/FurnaceBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V openContainer
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/BlockGlass net/minecraft/world/level/block/GlassBlock
net/minecraft/world/level/block/BlockGlassAbstract net/minecraft/world/level/block/AbstractGlassBlock
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
net/minecraft/world/level/block/BlockGlazedTerracotta net/minecraft/world/level/block/GlazedTerracottaBlock
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
net/minecraft/world/level/block/BlockGrass net/minecraft/world/level/block/GrassBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
net/minecraft/world/level/block/BlockGrassPath net/minecraft/world/level/block/DirtPathBlock
	a SHAPE
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockGravel net/minecraft/world/level/block/GravelBlock
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getDustColor
net/minecraft/world/level/block/BlockGrindstone net/minecraft/world/level/block/GrindstoneBlock
	D FLOOR_EAST_WEST_ALL_LEGS
	E FLOOR_EAST_WEST_GRINDSTONE
	F WALL_SOUTH_LEFT_POST
	G WALL_SOUTH_RIGHT_POST
	H WALL_SOUTH_LEFT_PIVOT
	J WALL_SOUTH_RIGHT_PIVOT
	K WALL_SOUTH_LEFT_LEG
	L WALL_SOUTH_RIGHT_LEG
	M WALL_SOUTH_ALL_LEGS
	N WALL_SOUTH_GRINDSTONE
	O WALL_NORTH_LEFT_POST
	P WALL_NORTH_RIGHT_POST
	Q WALL_NORTH_LEFT_PIVOT
	R WALL_NORTH_RIGHT_PIVOT
	S WALL_NORTH_LEFT_LEG
	T WALL_NORTH_RIGHT_LEG
	U WALL_NORTH_ALL_LEGS
	V WALL_NORTH_GRINDSTONE
	W WALL_WEST_LEFT_POST
	X WALL_WEST_RIGHT_POST
	Y WALL_WEST_LEFT_PIVOT
	Z WALL_WEST_RIGHT_PIVOT
	a FLOOR_NORTH_SOUTH_LEFT_POST
	aA CEILING_EAST_WEST_ALL_LEGS
	aB CEILING_EAST_WEST_GRINDSTONE
	aP CONTAINER_TITLE
	aa WALL_WEST_LEFT_LEG
	ab WALL_WEST_RIGHT_LEG
	ac WALL_WEST_ALL_LEGS
	ad WALL_WEST_GRINDSTONE
	ae WALL_EAST_LEFT_POST
	af WALL_EAST_RIGHT_POST
	ag WALL_EAST_LEFT_PIVOT
	ah WALL_EAST_RIGHT_PIVOT
	ai WALL_EAST_LEFT_LEG
	aj WALL_EAST_RIGHT_LEG
	ak WALL_EAST_ALL_LEGS
	al WALL_EAST_GRINDSTONE
	am CEILING_NORTH_SOUTH_LEFT_POST
	an CEILING_NORTH_SOUTH_RIGHT_POST
	ao CEILING_NORTH_SOUTH_LEFT_PIVOT
	ap CEILING_NORTH_SOUTH_RIGHT_PIVOT
	aq CEILING_NORTH_SOUTH_LEFT_LEG
	ar CEILING_NORTH_SOUTH_RIGHT_LEG
	as CEILING_NORTH_SOUTH_ALL_LEGS
	at CEILING_NORTH_SOUTH_GRINDSTONE
	au CEILING_EAST_WEST_LEFT_POST
	av CEILING_EAST_WEST_RIGHT_POST
	aw CEILING_EAST_WEST_LEFT_PIVOT
	ax CEILING_EAST_WEST_RIGHT_PIVOT
	ay CEILING_EAST_WEST_LEFT_LEG
	az CEILING_EAST_WEST_RIGHT_LEG
	b FLOOR_NORTH_SOUTH_RIGHT_POST
	c FLOOR_NORTH_SOUTH_LEFT_PIVOT
	d FLOOR_NORTH_SOUTH_RIGHT_PIVOT
	e FLOOR_NORTH_SOUTH_LEFT_LEG
	f FLOOR_NORTH_SOUTH_RIGHT_LEG
	g FLOOR_NORTH_SOUTH_ALL_LEGS
	h FLOOR_NORTH_SOUTH_GRINDSTONE
	i FLOOR_EAST_WEST_LEFT_POST
	j FLOOR_EAST_WEST_RIGHT_POST
	k FLOOR_EAST_WEST_LEFT_PIVOT
	l FLOOR_EAST_WEST_RIGHT_PIVOT
	m FLOOR_EAST_WEST_LEFT_LEG
	n FLOOR_EAST_WEST_RIGHT_LEG
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVoxelShape
net/minecraft/world/level/block/BlockGrowingAbstract net/minecraft/world/level/block/GrowingPlantBlock
	a growthDirection
	b scheduleFluidTicks
	c shape
	a ()Lnet/minecraft/world/level/block/Block; getBodyBlock
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b ()Lnet/minecraft/world/level/block/BlockGrowingTop; getHeadBlock
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canAttachTo
net/minecraft/world/level/block/BlockGrowingStem net/minecraft/world/level/block/GrowingPlantBodyBlock
	a ()Lnet/minecraft/world/level/block/Block; getBodyBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; getHeadPos
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; updateHeadAfterConvertedFromBody
net/minecraft/world/level/block/BlockGrowingTop net/minecraft/world/level/block/GrowingPlantHeadBlock
	d AGE
	e MAX_AGE
	f growPerTickProbability
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/util/RandomSource;)I getBlocksToGrowWhenBonemealed
	a (Lnet/minecraft/world/level/GeneratorAccess;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/IBlockData; getGrowIntoState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; updateBodyAfterConvertedFromHead
	b ()Lnet/minecraft/world/level/block/BlockGrowingTop; getHeadBlock
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canGrowInto
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; getMaxAgeState
	o (Lnet/minecraft/world/level/block/state/IBlockData;)Z isMaxAge
net/minecraft/world/level/block/BlockHalfTransparent net/minecraft/world/level/block/HalfTransparentBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z skipRendering
net/minecraft/world/level/block/BlockHay net/minecraft/world/level/block/HayBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
net/minecraft/world/level/block/BlockHoney net/minecraft/world/level/block/HoneyBlock
	a SHAPE
	b SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST
	c MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING
	d THROTTLE_SLIDE_SPEED_TO
	e SLIDE_ADVANCEMENT_CHECK_INTERVAL
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)Z isSlidingDown
	a (Lnet/minecraft/world/entity/Entity;)V showSlideParticles
	a (Lnet/minecraft/world/entity/Entity;I)V showParticles
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)V maybeDoSlideAchievement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;)V maybeDoSlideEffects
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	b (Lnet/minecraft/world/entity/Entity;)V showJumpParticles
	c (Lnet/minecraft/world/entity/Entity;)Z doesEntityDoHoneyBlockSlideEffects
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	d (Lnet/minecraft/world/entity/Entity;)V doSlideMovement
net/minecraft/world/level/block/BlockHopper net/minecraft/world/level/block/HopperBlock
	D SOUTH_INTERACTION_SHAPE
	E WEST_INTERACTION_SHAPE
	a FACING
	b ENABLED
	c TOP
	d FUNNEL
	e CONVEX_BASE
	f BASE
	g DOWN_SHAPE
	h EAST_SHAPE
	i NORTH_SHAPE
	j SOUTH_SHAPE
	k WEST_SHAPE
	l DOWN_INTERACTION_SHAPE
	m EAST_INTERACTION_SHAPE
	n NORTH_INTERACTION_SHAPE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V checkPoweredState
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getInteractionShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockHugeMushroom net/minecraft/world/level/block/HugeMushroomBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e UP
	f DOWN
	g PROPERTY_BY_DIRECTION
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/BlockIce net/minecraft/world/level/block/IceBlock
	a ()Lnet/minecraft/world/level/block/state/IBlockData; meltsInto
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/item/ItemStack;)V playerDestroy
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V melt
net/minecraft/world/level/block/BlockIceFrost net/minecraft/world/level/block/FrostedIceBlock
	a MAX_AGE
	b AGE
	c NEIGHBORS_TO_AGE
	d NEIGHBORS_TO_MELT
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;I)Z fewerNeigboursThan
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	e (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z slightlyMelt
net/minecraft/world/level/block/BlockIronBars net/minecraft/world/level/block/IronBarsBlock
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/world/level/block/state/IBlockData;Z)Z attachsTo
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
net/minecraft/world/level/block/BlockJigsaw net/minecraft/world/level/block/JigsawBlock
	a ORIENTATION
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;)Z canAttach
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/core/EnumDirection; getFrontFacing
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/core/EnumDirection; getTopFacing
net/minecraft/world/level/block/BlockJukeBox net/minecraft/world/level/block/JukeboxBlock
	a HAS_RECORD
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockKelp net/minecraft/world/level/block/KelpBlock
	f SHAPE
	g GROW_PER_TICK_PROBABILITY
	a ()Lnet/minecraft/world/level/block/Block; getBodyBlock
	a (Lnet/minecraft/util/RandomSource;)I getBlocksToGrowWhenBonemealed
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canGrowInto
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canAttachTo
net/minecraft/world/level/block/BlockKelpPlant net/minecraft/world/level/block/KelpPlantBlock
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	b ()Lnet/minecraft/world/level/block/BlockGrowingTop; getHeadBlock
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canAttachTo
net/minecraft/world/level/block/BlockLadder net/minecraft/world/level/block/LadderBlock
	a FACING
	b WATERLOGGED
	c AABB_OFFSET
	d EAST_AABB
	e WEST_AABB
	f SOUTH_AABB
	g NORTH_AABB
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canAttachTo
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockLantern net/minecraft/world/level/block/LanternBlock
	a HANGING
	b WATERLOGGED
	c AABB
	d HANGING_AABB
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/core/EnumDirection; getConnectedDirection
net/minecraft/world/level/block/BlockLeaves net/minecraft/world/level/block/LeavesBlock
	a DECAY_DISTANCE
	b DISTANCE
	c PERSISTENT
	d WATERLOGGED
	e TICK_DELAY
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateDistance
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	g (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getLightBlock
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z decaying
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/OptionalInt; getOptionalDistanceAt
	o (Lnet/minecraft/world/level/block/state/IBlockData;)I getDistanceAt
net/minecraft/world/level/block/BlockLectern net/minecraft/world/level/block/LecternBlock
	a FACING
	b POWERED
	c HAS_BOOK
	d SHAPE_BASE
	e SHAPE_POST
	f SHAPE_COMMON
	g SHAPE_TOP_PLATE
	h SHAPE_COLLISION
	i SHAPE_WEST
	j SHAPE_NORTH
	k SHAPE_EAST
	l SHAPE_SOUTH
	m PAGE_CHANGE_IMPULSE_TICKS
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/ItemStack;)Z tryPlaceBook
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V resetBookState
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V openScreen
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V signalPageChange
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V changePowered
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/ItemStack;)V placeBook
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updateBelow
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V popBook
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockLever net/minecraft/world/level/block/LeverBlock
	a POWERED
	b DEPTH
	c WIDTH
	d HEIGHT
	e NORTH_AABB
	f SOUTH_AABB
	g WEST_AABB
	h EAST_AABB
	i UP_AABB_Z
	j UP_AABB_X
	k DOWN_AABB_Z
	l DOWN_AABB_X
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;F)V makeParticle
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; pull
	e (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V updateNeighbours
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockLongGrass net/minecraft/world/level/block/TallGrassBlock
	a AABB_OFFSET
	b SHAPE
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
net/minecraft/world/level/block/BlockLoom net/minecraft/world/level/block/LoomBlock
	a CONTAINER_TITLE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
net/minecraft/world/level/block/BlockMagma net/minecraft/world/level/block/MagmaBlock
	a BUBBLE_COLUMN_CHECK_DELAY
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockMelon net/minecraft/world/level/block/MelonBlock
	a ()Lnet/minecraft/world/level/block/BlockStem; getStem
	b ()Lnet/minecraft/world/level/block/BlockStemAttached; getAttachedStem
net/minecraft/world/level/block/BlockMinecartDetector net/minecraft/world/level/block/DetectorRailBlock
	d SHAPE
	e POWERED
	f PRESSED_CHECK_PERIOD
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/AxisAlignedBB; getSearchBB
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List; getInteractingMinecartOfType
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V checkPressed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b ()Lnet/minecraft/world/level/block/state/properties/IBlockState; getShapeProperty
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V updatePowerToConnected
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockMinecartTrack net/minecraft/world/level/block/RailBlock
	d SHAPE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V updateState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b ()Lnet/minecraft/world/level/block/state/properties/IBlockState; getShapeProperty
net/minecraft/world/level/block/BlockMinecartTrackAbstract net/minecraft/world/level/block/BaseRailBlock
	a FLAT_AABB
	b HALF_BLOCK_AABB
	c WATERLOGGED
	d isStraight
	a ()Z isStraight
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition;)Z shouldBeRemoved
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z isRail
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Lnet/minecraft/world/level/block/state/IBlockData; updateDir
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V updateState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/level/block/state/IBlockData; updateState
	b ()Lnet/minecraft/world/level/block/state/properties/IBlockState; getShapeProperty
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRail
net/minecraft/world/level/block/BlockMobSpawner net/minecraft/world/level/block/SpawnerBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getSpawnEntityDisplayName
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/IBlockAccess;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
net/minecraft/world/level/block/BlockMonsterEggs net/minecraft/world/level/block/InfestedBlock
	a hostBlock
	b BLOCK_BY_HOST_BLOCK
	c HOST_TO_INFESTED_STATES
	d INFESTED_TO_HOST_STATES
	a ()Lnet/minecraft/world/level/block/Block; getHostBlock
	a (Ljava/util/Map;Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/function/Supplier;)Lnet/minecraft/world/level/block/state/IBlockData; getNewStateWithProperties
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V spawnInfestation
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isCompatibleHostBlock
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; infestedStateByHost
	o (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; hostStateByInfested
net/minecraft/world/level/block/BlockMushroom net/minecraft/world/level/block/MushroomBlock
	a AABB_OFFSET
	b SHAPE
	c feature
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z growMushroom
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockMycel net/minecraft/world/level/block/MyceliumBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/BlockNetherSprouts net/minecraft/world/level/block/NetherSproutsBlock
	a SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockNetherVinesUtil net/minecraft/world/level/block/NetherVines
	a GROW_PER_TICK_PROBABILITY
	b BONEMEAL_GROW_PROBABILITY_DECREASE_RATE
	a (Lnet/minecraft/util/RandomSource;)I getBlocksToGrowWhenBonemealed
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidGrowthState
net/minecraft/world/level/block/BlockNetherWart net/minecraft/world/level/block/NetherWartBlock
	a MAX_AGE
	b AGE
	c SHAPE_BY_AGE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
net/minecraft/world/level/block/BlockNetherrack net/minecraft/world/level/block/NetherrackBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
net/minecraft/world/level/block/BlockNote net/minecraft/world/level/block/NoteBlock
	a INSTRUMENT
	b POWERED
	c NOTE
	d NOTE_VOLUME
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V playNote
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/resources/MinecraftKey; getCustomSoundId
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V attack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	b (I)F getPitchFromNote
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; setInstrument
net/minecraft/world/level/block/BlockNylium net/minecraft/world/level/block/NyliumBlock
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)V place
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canBeNylium
net/minecraft/world/level/block/BlockObserver net/minecraft/world/level/block/ObserverBlock
	b POWERED
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V startSignal
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updateNeighborsInFront
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockPlant net/minecraft/world/level/block/BushBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockPortal net/minecraft/world/level/block/NetherPortalBlock
	a AXIS
	b AABB_OFFSET
	c X_AXIS_AABB
	d Z_AXIS_AABB
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
net/minecraft/world/level/block/BlockPotatoes net/minecraft/world/level/block/PotatoBlock
	a SHAPE_BY_AGE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c ()Lnet/minecraft/world/level/IMaterial; getBaseSeedId
net/minecraft/world/level/block/BlockPowered net/minecraft/world/level/block/PoweredBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockPoweredRail net/minecraft/world/level/block/PoweredRailBlock
	d SHAPE
	e POWERED
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;ZI)Z findPoweredRailSignal
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;ZILnet/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition;)Z isSameRailWithPower
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V updateState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b ()Lnet/minecraft/world/level/block/state/properties/IBlockState; getShapeProperty
net/minecraft/world/level/block/BlockPressurePlateAbstract net/minecraft/world/level/block/BasePressurePlateBlock
	a PRESSED_AABB
	b AABB
	c TOUCH_AABB
	d type
	a ()I getPressedTime
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;I)V checkPressed
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V updateNeighbours
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/lang/Class;)I getEntityCount
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isPossibleToRespawnInThis
	a (Lnet/minecraft/world/level/block/state/IBlockData;I)Lnet/minecraft/world/level/block/state/IBlockData; setSignalForState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getSignalStrength
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getSignalForState
net/minecraft/world/level/block/BlockPressurePlateBinary net/minecraft/world/level/block/PressurePlateBlock
	d POWERED
	e sensitivity
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;I)Lnet/minecraft/world/level/block/state/IBlockData; setSignalForState
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getSignalStrength
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getSignalForState
net/minecraft/world/level/block/BlockPressurePlateBinary$EnumMobType net/minecraft/world/level/block/PressurePlateBlock$Sensitivity
	a EVERYTHING
	b MOBS
	c $VALUES
	a ()[Lnet/minecraft/world/level/block/BlockPressurePlateBinary$EnumMobType; $values
net/minecraft/world/level/block/BlockPressurePlateWeighted net/minecraft/world/level/block/WeightedPressurePlateBlock
	d POWER
	e maxWeight
	a ()I getPressedTime
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;I)Lnet/minecraft/world/level/block/state/IBlockData; setSignalForState
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getSignalStrength
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getSignalForState
net/minecraft/world/level/block/BlockPumpkin net/minecraft/world/level/block/PumpkinBlock
	a ()Lnet/minecraft/world/level/block/BlockStem; getStem
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b ()Lnet/minecraft/world/level/block/BlockStemAttached; getAttachedStem
net/minecraft/world/level/block/BlockPumpkinCarved net/minecraft/world/level/block/CarvedPumpkinBlock
	a FACING
	b snowGolemBase
	c snowGolemFull
	d ironGolemBase
	e ironGolemFull
	f PUMPKINS_PREDICATE
	a ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; getOrCreateSnowGolemBase
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSpawnGolem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V trySpawnGolem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection;)V clearPatternBlocks
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)V spawnGolemInWorld
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection;)V updatePatternBlocks
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	g ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; getOrCreateSnowGolemFull
	u ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; getOrCreateIronGolemBase
	v ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; getOrCreateIronGolemFull
net/minecraft/world/level/block/BlockRedstoneComparator net/minecraft/world/level/block/ComparatorBlock
	a MODE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldTurnOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/decoration/EntityItemFrame; getItemFrame
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)I getOutputSignal
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)I getInputSignal
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V checkTickOnNeighbor
	e (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)I calculateOutputSignal
	f (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V refreshOutputState
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getDelay
net/minecraft/world/level/block/BlockRedstoneLamp net/minecraft/world/level/block/RedstoneLampBlock
	a LIT
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
net/minecraft/world/level/block/BlockRedstoneOre net/minecraft/world/level/block/RedStoneOreBlock
	a LIT
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V spawnParticles
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V attack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V interact
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
net/minecraft/world/level/block/BlockRedstoneTorch net/minecraft/world/level/block/RedstoneTorchBlock
	a LIT
	b RECENT_TOGGLE_TIMER
	c MAX_RECENT_TOGGLES
	d RESTART_DELAY
	e RECENT_TOGGLES
	f TOGGLE_DELAY
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z hasNeighborSignal
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)Z isToggledTooFrequently
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockRedstoneTorch$RedstoneUpdateInfo net/minecraft/world/level/block/RedstoneTorchBlock$Toggle
	a pos
	b when
net/minecraft/world/level/block/BlockRedstoneTorchWall net/minecraft/world/level/block/RedstoneWallTorchBlock
	e FACING
	f LIT
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z hasNeighborSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	f ()Ljava/lang/String; getDescriptionId
net/minecraft/world/level/block/BlockRedstoneWire net/minecraft/world/level/block/RedStoneWireBlock
	D SHAPES_CACHE
	E COLORS
	F PARTICLE_DENSITY
	G crossState
	H shouldSignal
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e POWER
	f PROPERTY_BY_DIRECTION
	g H
	h W
	i E
	j N
	k S
	l SHAPE_DOT
	m SHAPES_FLOOR
	n SHAPES_UP
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/properties/BlockPropertyRedstoneSide; getConnectingSide
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Z)Lnet/minecraft/world/level/block/state/properties/BlockPropertyRedstoneSide; getConnectingSide
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getConnectionState
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I calculateTargetStrength
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updatePowerStrength
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V updatesOnShapeChange
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;FF)V spawnParticlesAlongLine
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z shouldConnectTo
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;II)V updateIndirectNeighbourShapes
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (I)I getColorForPower
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canSurviveOn
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getMissingConnections
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V checkCornerChangeAt
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V updateNeighborsOfNeighboringWires
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldConnectTo
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; calculateShape
	o (Lnet/minecraft/world/level/block/state/IBlockData;)Z isCross
	p (Lnet/minecraft/world/level/block/state/IBlockData;)Z isDot
	q (Lnet/minecraft/world/level/block/state/IBlockData;)I getWireSignal
net/minecraft/world/level/block/BlockReed net/minecraft/world/level/block/SugarCaneBlock
	a AGE
	b AABB_OFFSET
	c SHAPE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
net/minecraft/world/level/block/BlockRepeater net/minecraft/world/level/block/RepeaterBlock
	a LOCKED
	d DELAY
	a ()Z sideInputDiodesOnly
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isLocked
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getDelay
net/minecraft/world/level/block/BlockRespawnAnchor net/minecraft/world/level/block/RespawnAnchorBlock
	a MIN_CHARGES
	b MAX_CHARGES
	c CHARGE
	d RESPAWN_HORIZONTAL_OFFSETS
	e RESPAWN_OFFSETS
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/World;)Z isWaterThatWouldFlow
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V charge
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; findStandUpPosition
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/core/BlockPosition;Z)Ljava/util/Optional; findStandUpPosition
	a (Lnet/minecraft/world/item/ItemStack;)Z isRespawnFuel
	a (Lnet/minecraft/world/level/World;)Z canSetSpawn
	a (Lnet/minecraft/world/level/block/state/IBlockData;I)I getScaledChargeLevel
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V explode
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canBeCharged
net/minecraft/world/level/block/BlockRoots net/minecraft/world/level/block/RootsBlock
	a AABB_OFFSET
	b SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockRotatable net/minecraft/world/level/block/RotatedPillarBlock
	g AXIS
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotatePillar
net/minecraft/world/level/block/BlockSand net/minecraft/world/level/block/SandBlock
	a dustColor
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getDustColor
net/minecraft/world/level/block/BlockSapling net/minecraft/world/level/block/SaplingBlock
	a treeGrower
	d STAGE
	e AABB_OFFSET
	f SHAPE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)V advanceTree
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
net/minecraft/world/level/block/BlockScaffolding net/minecraft/world/level/block/ScaffoldingBlock
	a STABILITY_MAX_DISTANCE
	b DISTANCE
	c WATERLOGGED
	d BOTTOM
	e TICK_DELAY
	f STABLE_SHAPE
	g UNSTABLE_SHAPE
	h UNSTABLE_SHAPE_BOTTOM
	i BELOW_BLOCK
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getDistance
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;I)Z isBottom
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getInteractionShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockSeaPickle net/minecraft/world/level/block/SeaPickleBlock
	a MAX_PICKLES
	b PICKLES
	c WATERLOGGED
	d ONE_AABB
	e TWO_AABB
	f THREE_AABB
	g FOUR_AABB
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isDead
net/minecraft/world/level/block/BlockShulkerBox net/minecraft/world/level/block/ShulkerBoxBlock
	a FACING
	b CONTENTS
	c OPEN_AABB_SIZE
	d UP_OPEN_AABB
	e DOWN_OPEN_AABB
	f WES_OPEN_AABB
	g EAST_OPEN_AABB
	h NORTH_OPEN_AABB
	i SOUTH_OPEN_AABB
	j OPEN_SHAPE_BY_DIRECTION
	k color
	a ()Lnet/minecraft/world/item/EnumColor; getColor
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/level/block/Block; getBlockByColor
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/IBlockAccess;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/EnumColor; getColorFromBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lecw$a;)Ljava/util/List; getDrops
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntityShulkerBox;)Z canOpen
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/item/ItemStack; getColoredItemStack
	b (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/EnumColor; getColorFromItem
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockSign net/minecraft/world/level/block/SignBlock
	a type
	e WATERLOGGED
	f AABB_OFFSET
	g SHAPE
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/entity/TileEntitySign;)Z otherPlayerIsEditingSign
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/entity/TileEntitySign;Z)V openTextEdit
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood; getWoodType
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isPossibleToRespawnInThis
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Z)Lnet/minecraft/world/EnumInteractionResult; getInteractionResult
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/entity/TileEntitySign;Z)Z hasEditableText
	c ()Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood; type
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	g (Lnet/minecraft/world/level/block/state/IBlockData;)F getYRotationDegrees
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/Vec3D; getSignHitboxCenterPosition
net/minecraft/world/level/block/BlockSkull net/minecraft/world/level/block/SkullBlock
	b MAX
	c ROTATION
	d SHAPE
	e PIGLIN_SHAPE
	f ROTATIONS
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
net/minecraft/world/level/block/BlockSkull$Type net/minecraft/world/level/block/SkullBlock$Types
	a SKELETON
	b WITHER_SKELETON
	c PLAYER
	d ZOMBIE
	e CREEPER
	f PIGLIN
	g DRAGON
	h $VALUES
	a ()[Lnet/minecraft/world/level/block/BlockSkull$Type; $values
net/minecraft/world/level/block/BlockSkullAbstract net/minecraft/world/level/block/AbstractSkullBlock
	a POWERED
	b type
	a ()Lczx$a; getType
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	g ()Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlot
net/minecraft/world/level/block/BlockSkullPlayer net/minecraft/world/level/block/PlayerHeadBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
net/minecraft/world/level/block/BlockSkullPlayerWall net/minecraft/world/level/block/PlayerWallHeadBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lecw$a;)Ljava/util/List; getDrops
net/minecraft/world/level/block/BlockSkullWall net/minecraft/world/level/block/WallSkullBlock
	b FACING
	c AABBS
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	f ()Ljava/lang/String; getDescriptionId
net/minecraft/world/level/block/BlockSlime net/minecraft/world/level/block/SlimeBlock
	a (Lnet/minecraft/world/entity/Entity;)V bounceUp
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/entity/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
net/minecraft/world/level/block/BlockSlowSand net/minecraft/world/level/block/SoulSandBlock
	a SHAPE
	b BUBBLE_COLUMN_CHECK_DELAY
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
net/minecraft/world/level/block/BlockSmithingTable net/minecraft/world/level/block/SmithingTableBlock
	a CONTAINER_TITLE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
net/minecraft/world/level/block/BlockSmoker net/minecraft/world/level/block/SmokerBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V openContainer
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/BlockSnow net/minecraft/world/level/block/SnowLayerBlock
	a MAX_HEIGHT
	b LAYERS
	c SHAPE_BY_LAYER
	d HEIGHT_IMPASSABLE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockSoil net/minecraft/world/level/block/FarmBlock
	a MOISTURE
	b SHAPE
	c MAX_MOISTURE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V turnToDirt
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z shouldMaintainFarmland
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isNearWater
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockSoulFire net/minecraft/world/level/block/SoulFireBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	f (Lnet/minecraft/world/level/block/state/IBlockData;)Z canBurn
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canSurviveOnBlock
net/minecraft/world/level/block/BlockSponge net/minecraft/world/level/block/SpongeBlock
	a MAX_DEPTH
	b MAX_COUNT
	c ALL_DIRECTIONS
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V tryAbsorbWater
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z removeWaterBreadthFirstSearch
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockSprawling net/minecraft/world/level/block/PipeBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e UP
	f DOWN
	g PROPERTY_BY_DIRECTION
	h shapeByIndex
	i DIRECTIONS
	a (F)[Lnet/minecraft/world/phys/shapes/VoxelShape; makeShapes
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	h (Lnet/minecraft/world/level/block/state/IBlockData;)I getAABBIndex
net/minecraft/world/level/block/BlockStainedGlass net/minecraft/world/level/block/StainedGlassBlock
	a color
	a ()Lnet/minecraft/world/item/EnumColor; getColor
net/minecraft/world/level/block/BlockStainedGlassPane net/minecraft/world/level/block/StainedGlassPaneBlock
	i color
	a ()Lnet/minecraft/world/item/EnumColor; getColor
net/minecraft/world/level/block/BlockStairs net/minecraft/world/level/block/StairBlock
	D TOP_SHAPES
	E BOTTOM_SHAPES
	F SHAPE_BY_STATE
	G base
	H baseState
	a FACING
	b HALF
	c SHAPE
	d WATERLOGGED
	e TOP_AABB
	f BOTTOM_AABB
	g OCTET_NNN
	h OCTET_NNP
	i OCTET_NPN
	j OCTET_NPP
	k OCTET_PNN
	l OCTET_PNP
	m OCTET_PPN
	n OCTET_PPP
	a (ILnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; makeStairShape
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V destroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/Explosion;)V wasExploded
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V attack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)[Lnet/minecraft/world/phys/shapes/VoxelShape; makeShapes
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canTakeShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d ()F getExplosionResistance
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isStairs
	i (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/properties/BlockPropertyStairsShape; getStairsShape
	n (Lnet/minecraft/world/level/block/state/IBlockData;)I getShapeIndex
net/minecraft/world/level/block/BlockStem net/minecraft/world/level/block/StemBlock
	a MAX_AGE
	b AGE
	c AABB_OFFSET
	d SHAPE_BY_AGE
	e fruit
	f seedSupplier
	a ()Lnet/minecraft/world/level/block/BlockStemmed; getFruit
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockStemAttached net/minecraft/world/level/block/AttachedStemBlock
	a FACING
	b AABB_OFFSET
	c AABBS
	d fruit
	e seedSupplier
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockStemmed net/minecraft/world/level/block/StemGrownBlock
	a ()Lnet/minecraft/world/level/block/BlockStem; getStem
	b ()Lnet/minecraft/world/level/block/BlockStemAttached; getAttachedStem
net/minecraft/world/level/block/BlockStepAbstract net/minecraft/world/level/block/SlabBlock
	a TYPE
	b WATERLOGGED
	c BOTTOM_AABB
	d TOP_AABB
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockStonecutter net/minecraft/world/level/block/StonecutterBlock
	a FACING
	b SHAPE
	c CONTAINER_TITLE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockStructure net/minecraft/world/level/block/StructureBlock
	a MODE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/block/entity/TileEntityStructure;)V trigger
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
net/minecraft/world/level/block/BlockStructureVoid net/minecraft/world/level/block/StructureVoidBlock
	a SIZE
	b SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
net/minecraft/world/level/block/BlockSweetBerryBush net/minecraft/world/level/block/SweetBerryBushBlock
	a MAX_AGE
	b AGE
	c HURT_SPEED_THRESHOLD
	d SAPLING_SHAPE
	e MID_GROWTH_SHAPE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
net/minecraft/world/level/block/BlockTNT net/minecraft/world/level/block/TntBlock
	a UNSTABLE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/Explosion;)Z dropFromExplosion
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V explode
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)V explode
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/Explosion;)V wasExploded
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockTall net/minecraft/world/level/block/CrossCollisionBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e WATERLOGGED
	f PROPERTY_BY_DIRECTION
	g collisionShapeByIndex
	h shapeByIndex
	i stateToIndex
	a (FFFFF)[Lnet/minecraft/world/phys/shapes/VoxelShape; makeShapes
	a (Lnet/minecraft/core/EnumDirection;)I indexFor
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getAABBIndex
net/minecraft/world/level/block/BlockTallPlant net/minecraft/world/level/block/DoublePlantBlock
	a HALF
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;I)V placeAt
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/item/ItemStack;)V playerDestroy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)J getSeed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; copyWaterloggedFrom
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V preventCreativeDropFromBottomPart
net/minecraft/world/level/block/BlockTallPlantFlower net/minecraft/world/level/block/TallFlowerBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
net/minecraft/world/level/block/BlockTarget net/minecraft/world/level/block/TargetBlock
	a OUTPUT_POWER
	b ACTIVATION_TICKS_ARROWS
	c ACTIVATION_TICKS_OTHER
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/block/state/IBlockData;ILnet/minecraft/core/BlockPosition;I)V setOutputPower
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/Entity;)I updateRedstoneOutput
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/phys/Vec3D;)I getRedstoneStrength
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockTileEntity net/minecraft/world/level/block/BaseEntityBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntityTypes;Lnet/minecraft/world/level/block/entity/TileEntityTypes;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; createTickerHelper
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;II)Z triggerEvent
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
net/minecraft/world/level/block/BlockTorch net/minecraft/world/level/block/TorchBlock
	g AABB_STANDING_OFFSET
	h AABB
	i flameParticle
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/BlockTorchWall net/minecraft/world/level/block/WallTorchBlock
	a FACING
	b AABB_OFFSET
	c AABBS
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	f ()Ljava/lang/String; getDescriptionId
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
net/minecraft/world/level/block/BlockTrapdoor net/minecraft/world/level/block/TrapDoorBlock
	a OPEN
	b HALF
	c POWERED
	d WATERLOGGED
	e AABB_THICKNESS
	f EAST_OPEN_AABB
	g WEST_OPEN_AABB
	h SOUTH_OPEN_AABB
	i NORTH_OPEN_AABB
	j BOTTOM_AABB
	k TOP_AABB
	l type
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)V playSound
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockTripwire net/minecraft/world/level/block/TripWireBlock
	a POWERED
	b ATTACHED
	c DISARMED
	d NORTH
	e EAST
	f SOUTH
	g WEST
	h AABB
	i NOT_ATTACHED_AABB
	j PROPERTY_BY_DIRECTION
	k RECHECK_PERIOD
	l hook
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V checkPressed
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updateSource
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z shouldConnectTo
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockTripwireHook net/minecraft/world/level/block/TripWireHookBlock
	a FACING
	b POWERED
	c ATTACHED
	d WIRE_DIST_MIN
	e WIRE_DIST_MAX
	f AABB_OFFSET
	g NORTH_AABB
	h SOUTH_AABB
	i WEST_AABB
	j EAST_AABB
	k RECHECK_PERIOD
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)V notifyNeighbors
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;ZZILnet/minecraft/world/level/block/state/IBlockData;)V calculateState
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;ZZZZ)V emitState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockTurtleEgg net/minecraft/world/level/block/TurtleEggBlock
	a MAX_HATCH_LEVEL
	b MIN_EGGS
	c MAX_EGGS
	d HATCH
	e EGGS
	f ONE_EGG_AABB
	g MULTIPLE_EGGS_AABB
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z onSand
	a (Lnet/minecraft/world/level/World;)Z shouldUpdateHatchLevel
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V decreaseEggs
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;)Z canDestroyEgg
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/item/ItemStack;)V playerDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;I)V destroyEgg
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isSand
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockTwistingVines net/minecraft/world/level/block/TwistingVinesBlock
	f SHAPE
	a ()Lnet/minecraft/world/level/block/Block; getBodyBlock
	a (Lnet/minecraft/util/RandomSource;)I getBlocksToGrowWhenBonemealed
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canGrowInto
net/minecraft/world/level/block/BlockTwistingVinesPlant net/minecraft/world/level/block/TwistingVinesPlantBlock
	d SHAPE
	b ()Lnet/minecraft/world/level/block/BlockGrowingTop; getHeadBlock
net/minecraft/world/level/block/BlockVine net/minecraft/world/level/block/VineBlock
	a UP
	b NORTH
	c EAST
	d SOUTH
	e WEST
	f PROPERTY_BY_DIRECTION
	g AABB_OFFSET
	h UP_AABB
	i WEST_AABB
	j EAST_AABB
	k NORTH_AABB
	l SOUTH_AABB
	m shapesCache
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean; getPropertyForFace
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z canSpread
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isAcceptableNeighbour
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/IBlockData; copyRandomFaces
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canSupportAtFace
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; calculateShape
	i (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getUpdatedState
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasFaces
	o (Lnet/minecraft/world/level/block/state/IBlockData;)I countFaces
	p (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasHorizontalConnection
net/minecraft/world/level/block/BlockWallSign net/minecraft/world/level/block/WallSignBlock
	a FACING
	b AABB_THICKNESS
	c AABB_BOTTOM
	d AABB_TOP
	h AABBS
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	f ()Ljava/lang/String; getDescriptionId
	g (Lnet/minecraft/world/level/block/state/IBlockData;)F getYRotationDegrees
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/Vec3D; getSignHitboxCenterPosition
net/minecraft/world/level/block/BlockWaterLily net/minecraft/world/level/block/WaterlilyBlock
	a AABB
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockWeb net/minecraft/world/level/block/WebBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
net/minecraft/world/level/block/BlockWeepingVines net/minecraft/world/level/block/WeepingVinesBlock
	f SHAPE
	a ()Lnet/minecraft/world/level/block/Block; getBodyBlock
	a (Lnet/minecraft/util/RandomSource;)I getBlocksToGrowWhenBonemealed
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canGrowInto
net/minecraft/world/level/block/BlockWeepingVinesPlant net/minecraft/world/level/block/WeepingVinesPlantBlock
	d SHAPE
	b ()Lnet/minecraft/world/level/block/BlockGrowingTop; getHeadBlock
net/minecraft/world/level/block/BlockWetSponge net/minecraft/world/level/block/WetSpongeBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockWitherRose net/minecraft/world/level/block/WitherRoseBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockWitherSkull net/minecraft/world/level/block/WitherSkullBlock
	f witherPatternFull
	g witherPatternBase
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntitySkull;)V checkSpawn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;)Z canSpawnMob
	u ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; getOrCreateWitherFull
	v ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; getOrCreateWitherBase
net/minecraft/world/level/block/BlockWitherSkullWall net/minecraft/world/level/block/WitherWallSkullBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
net/minecraft/world/level/block/BlockWorkbench net/minecraft/world/level/block/CraftingTableBlock
	a CONTAINER_TITLE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
net/minecraft/world/level/block/DoubleBlockFinder net/minecraft/world/level/block/DoubleBlockCombiner
	a (Lnet/minecraft/world/level/block/entity/TileEntityTypes;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/properties/BlockStateDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Ljava/util/function/BiPredicate;)Lnet/minecraft/world/level/block/DoubleBlockFinder$Result; combineWithNeigbour
net/minecraft/world/level/block/DoubleBlockFinder$BlockType net/minecraft/world/level/block/DoubleBlockCombiner$BlockType
	a SINGLE
	b FIRST
	c SECOND
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/DoubleBlockFinder$BlockType; $values
net/minecraft/world/level/block/DoubleBlockFinder$Combiner net/minecraft/world/level/block/DoubleBlockCombiner$Combiner
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	b ()Ljava/lang/Object; acceptNone
net/minecraft/world/level/block/DoubleBlockFinder$Result net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult
net/minecraft/world/level/block/DoubleBlockFinder$Result$Double net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double
	a first
	b second
net/minecraft/world/level/block/DoubleBlockFinder$Result$Single net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single
	a single
net/minecraft/world/level/block/EnumBlockMirror net/minecraft/world/level/block/Mirror
	a NONE
	b LEFT_RIGHT
	c FRONT_BACK
	d CODEC
	e id
	f symbol
	g rotation
	h $VALUES
	a ()Lcom/mojang/math/PointGroupO; rotation
	a (II)I mirror
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; symbol
	b (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/EnumDirection; mirror
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/level/block/EnumBlockMirror; $values
net/minecraft/world/level/block/EnumBlockRotation net/minecraft/world/level/block/Rotation
	a NONE
	b CLOCKWISE_90
	c CLOCKWISE_180
	d COUNTERCLOCKWISE_90
	e CODEC
	f id
	g rotation
	h $VALUES
	a ()Lcom/mojang/math/PointGroupO; rotation
	a (II)I rotate
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/EnumDirection; rotate
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/EnumBlockRotation; getRandom
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/EnumBlockRotation; getRotated
	b ()[Lnet/minecraft/world/level/block/EnumBlockRotation; $values
	b (Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffled
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/EnumBlockSupport net/minecraft/world/level/block/SupportType
	a FULL
	b CENTER
	c RIGID
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/EnumBlockSupport; $values
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isSupporting
net/minecraft/world/level/block/EnumRenderType net/minecraft/world/level/block/RenderShape
	a INVISIBLE
	b ENTITYBLOCK_ANIMATED
	c MODEL
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/EnumRenderType; $values
net/minecraft/world/level/block/IBeaconBeam net/minecraft/world/level/block/BeaconBeamBlock
	a ()Lnet/minecraft/world/item/EnumColor; getColor
net/minecraft/world/level/block/IBlockFragilePlantElement net/minecraft/world/level/block/BonemealableBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
net/minecraft/world/level/block/IBlockWaterlogged net/minecraft/world/level/block/SimpleWaterloggedBlock
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; pickupBlock
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	aq_ ()Ljava/util/Optional; getPickupSound
net/minecraft/world/level/block/IFluidContainer net/minecraft/world/level/block/LiquidBlockContainer
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
net/minecraft/world/level/block/IFluidSource net/minecraft/world/level/block/BucketPickup
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; pickupBlock
	aq_ ()Ljava/util/Optional; getPickupSound
net/minecraft/world/level/block/ITileEntity net/minecraft/world/level/block/EntityBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/block/entity/TileEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; getListener
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
net/minecraft/world/level/block/MinecartTrackLogic net/minecraft/world/level/block/RailState
	a level
	b pos
	c block
	d state
	e isStraight
	f connections
	a ()Ljava/util/List; getConnections
	a (Lnet/minecraft/core/BlockPosition;)Z hasRail
	a (Lnet/minecraft/world/level/block/MinecartTrackLogic;)Z connectsTo
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition;)V updateConnections
	a (ZZLnet/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition;)Lnet/minecraft/world/level/block/MinecartTrackLogic; place
	b ()I countPotentialConnections
	b (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/MinecartTrackLogic; getRail
	b (Lnet/minecraft/world/level/block/MinecartTrackLogic;)Z canConnectTo
	c ()Lnet/minecraft/world/level/block/state/IBlockData; getState
	c (Lnet/minecraft/core/BlockPosition;)Z hasConnection
	c (Lnet/minecraft/world/level/block/MinecartTrackLogic;)V connectTo
	d ()V removeSoftConnections
	d (Lnet/minecraft/core/BlockPosition;)Z hasNeighborRail
net/minecraft/world/level/block/SoundEffectType net/minecraft/world/level/block/SoundType
	A LANTERN
	B STEM
	C NYLIUM
	D FUNGUS
	E ROOTS
	F SHROOMLIGHT
	G WEEPING_VINES
	H TWISTING_VINES
	I SOUL_SAND
	J SOUL_SOIL
	K BASALT
	L WART_BLOCK
	M NETHERRACK
	N NETHER_BRICKS
	O NETHER_SPROUTS
	P NETHER_ORE
	Q BONE_BLOCK
	R NETHERITE_BLOCK
	S ANCIENT_DEBRIS
	T LODESTONE
	U CHAIN
	V NETHER_GOLD_ORE
	W GILDED_BLACKSTONE
	X CANDLE
	Y AMETHYST
	Z AMETHYST_CLUSTER
	a EMPTY
	aA DEEPSLATE
	aB DEEPSLATE_BRICKS
	aC DEEPSLATE_TILES
	aD POLISHED_DEEPSLATE
	aE FROGLIGHT
	aF FROGSPAWN
	aG MANGROVE_ROOTS
	aH MUDDY_MANGROVE_ROOTS
	aI MUD
	aJ MUD_BRICKS
	aK PACKED_MUD
	aL HANGING_SIGN
	aM NETHER_WOOD_HANGING_SIGN
	aN BAMBOO_WOOD_HANGING_SIGN
	aO BAMBOO_WOOD
	aP NETHER_WOOD
	aQ CHERRY_WOOD
	aR CHERRY_SAPLING
	aS CHERRY_LEAVES
	aT CHERRY_WOOD_HANGING_SIGN
	aU CHISELED_BOOKSHELF
	aV SUSPICIOUS_SAND
	aW SUSPICIOUS_GRAVEL
	aX DECORATED_POT
	aY DECORATED_POT_CRACKED
	aZ SPONGE
	aa SMALL_AMETHYST_BUD
	ab MEDIUM_AMETHYST_BUD
	ac LARGE_AMETHYST_BUD
	ad TUFF
	ae CALCITE
	af DRIPSTONE_BLOCK
	ag POINTED_DRIPSTONE
	ah COPPER
	ai CAVE_VINES
	aj SPORE_BLOSSOM
	ak AZALEA
	al FLOWERING_AZALEA
	am MOSS_CARPET
	an PINK_PETALS
	ao MOSS
	ap BIG_DRIPLEAF
	aq SMALL_DRIPLEAF
	ar ROOTED_DIRT
	as HANGING_ROOTS
	at AZALEA_LEAVES
	au SCULK_SENSOR
	av SCULK_CATALYST
	aw SCULK
	ax SCULK_VEIN
	ay SCULK_SHRIEKER
	az GLOW_LICHEN
	b WOOD
	ba WET_SPONGE
	bb volume
	bc pitch
	bd breakSound
	be stepSound
	bf placeSound
	bg hitSound
	bh fallSound
	c GRAVEL
	d GRASS
	e LILY_PAD
	f STONE
	g METAL
	h GLASS
	i WOOL
	j SAND
	k SNOW
	l POWDER_SNOW
	m LADDER
	n ANVIL
	o SLIME_BLOCK
	p HONEY_BLOCK
	q WET_GRASS
	r CORAL_BLOCK
	s BAMBOO
	t BAMBOO_SAPLING
	u SCAFFOLDING
	v SWEET_BERRY_BUSH
	w CROP
	x HARD_CROP
	y VINE
	z NETHER_WART
	a ()F getVolume
	b ()F getPitch
	c ()Lnet/minecraft/sounds/SoundEffect; getBreakSound
	d ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	e ()Lnet/minecraft/sounds/SoundEffect; getPlaceSound
	f ()Lnet/minecraft/sounds/SoundEffect; getHitSound
	g ()Lnet/minecraft/sounds/SoundEffect; getFallSound
net/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decoration net/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decorations
	a EMPTY
	b back
	c left
	d right
	e front
	a ()Ljava/util/stream/Stream; sorted
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/nbt/NBTTagList;I)Lnet/minecraft/world/item/Item; itemFromTag
	b ()Lnet/minecraft/world/item/Item; back
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decoration; load
	c ()Lnet/minecraft/world/item/Item; left
	d ()Lnet/minecraft/world/item/Item; right
	e ()Lnet/minecraft/world/item/Item; front
net/minecraft/world/level/block/entity/EnumBannerPatternType net/minecraft/world/level/block/entity/BannerPattern
	a hashname
	a ()Ljava/lang/String; getHashname
	a (Ljava/lang/String;)Lnet/minecraft/core/Holder; byHash
	a (Lnet/minecraft/resources/ResourceKey;Z)Lnet/minecraft/resources/MinecraftKey; location
net/minecraft/world/level/block/entity/IHopper net/minecraft/world/level/block/entity/Hopper
	c INSIDE
	x_ ABOVE
	y_ SUCK
	M ()D getLevelX
	N ()D getLevelY
	O ()D getLevelZ
	au_ ()Lnet/minecraft/world/phys/shapes/VoxelShape; getSuckShape
net/minecraft/world/level/block/entity/TileEntity net/minecraft/world/level/block/entity/BlockEntity
	c LOGGER
	d type
	e blockState
	o level
	p worldPosition
	q remove
	a (Lnet/minecraft/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/block/entity/TileEntity; loadStatic
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)V addEntityType
	a (Lnet/minecraft/world/level/World;)V setLevel
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V setChanged
	a_ (II)Z triggerEvent
	as_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	at_ ()V setRemoved
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/level/block/state/IBlockData;)V setBlockState
	c (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/core/BlockPosition; getPosFromTag
	d (Lnet/minecraft/nbt/NBTTagCompound;)V saveId
	e ()V setChanged
	e (Lnet/minecraft/nbt/NBTTagCompound;)V saveMetadata
	e (Lnet/minecraft/world/item/ItemStack;)V saveToItem
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	k ()Lnet/minecraft/world/level/World; getLevel
	l ()Z hasLevel
	m ()Lnet/minecraft/nbt/NBTTagCompound; saveWithFullMetadata
	n ()Lnet/minecraft/nbt/NBTTagCompound; saveWithId
	o ()Lnet/minecraft/nbt/NBTTagCompound; saveWithoutMetadata
	p ()Lnet/minecraft/core/BlockPosition; getBlockPos
	q ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	r ()Z isRemoved
	s ()V clearRemoved
	t ()Z onlyOpCanSetNbt
	u ()Lnet/minecraft/world/level/block/entity/TileEntityTypes; getType
net/minecraft/world/level/block/entity/TileEntityBanner net/minecraft/world/level/block/entity/BannerBlockEntity
	a MAX_PATTERNS
	b TAG_PATTERNS
	c TAG_PATTERN
	d TAG_COLOR
	e name
	f baseColor
	g itemPatterns
	h patterns
	a ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setCustomName
	a (Lnet/minecraft/world/item/EnumColor;Lnet/minecraft/nbt/NBTTagList;)Ljava/util/List; createPatterns
	a (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/NBTTagList; getItemPatterns
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/EnumColor;)V fromItem
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	ad ()Lnet/minecraft/network/chat/IChatBaseComponent; getCustomName
	as_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/item/ItemStack;)V fromItem
	c ()Ljava/util/List; getPatterns
	c (Lnet/minecraft/world/item/ItemStack;)I getPatternCount
	d (Lnet/minecraft/world/item/ItemStack;)V removeLastPattern
	f ()Lnet/minecraft/world/item/ItemStack; getItem
	g ()Lnet/minecraft/world/item/EnumColor; getBaseColor
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
net/minecraft/world/level/block/entity/TileEntityBarrel net/minecraft/world/level/block/entity/BarrelBlockEntity
	c items
	f openersCounter
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/core/NonNullList;)V setItems
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/sounds/SoundEffect;)V playSound
	a (Lnet/minecraft/world/level/block/state/IBlockData;Z)V updateBlockState
	b ()I getContainerSize
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	d_ (Lnet/minecraft/world/entity/player/EntityHuman;)V startOpen
	f ()Lnet/minecraft/core/NonNullList; getItems
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
	i ()V recheckOpen
net/minecraft/world/level/block/entity/TileEntityBeacon net/minecraft/world/level/block/entity/BeaconBlockEntity
	a BEACON_EFFECTS
	b DATA_LEVELS
	c DATA_PRIMARY
	d DATA_SECONDARY
	e NUM_DATA_VALUES
	f MAX_LEVELS
	g VALID_EFFECTS
	h BLOCKS_CHECK_PER_TICK
	i DEFAULT_NAME
	j TAG_PRIMARY
	k TAG_SECONDARY
	l beamSections
	m checkingBeamSections
	n levels
	r lastCheckY
	s primaryPower
	t secondaryPower
	u name
	v lockKey
	w dataAccess
	N_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/lang/String;)Lnet/minecraft/world/effect/MobEffectList; loadEffect
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/lang/String;Lnet/minecraft/world/effect/MobEffectList;)V storeEffect
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setCustomName
	a (Lnet/minecraft/world/effect/MobEffectList;)Lnet/minecraft/world/effect/MobEffectList; filterEffect
	a (Lnet/minecraft/world/level/World;)V setLevel
	a (Lnet/minecraft/world/level/World;III)I updateBase
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/effect/MobEffectList;Lnet/minecraft/world/effect/MobEffectList;)V applyEffects
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;)V playSound
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBeacon;)V tick
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	ad ()Lnet/minecraft/network/chat/IChatBaseComponent; getCustomName
	as_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	at_ ()V setRemoved
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c ()Ljava/util/List; getBeamSections
	f ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
net/minecraft/world/level/block/entity/TileEntityBeacon$BeaconColorTracker net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection
	a color
	b height
	a ()V increaseHeight
	b ()[F getColor
	c ()I getHeight
net/minecraft/world/level/block/entity/TileEntityBed net/minecraft/world/level/block/entity/BedBlockEntity
	a color
	a (Lnet/minecraft/world/item/EnumColor;)V setColor
	c ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	d ()Lnet/minecraft/world/item/EnumColor; getColor
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
net/minecraft/world/level/block/entity/TileEntityBeehive net/minecraft/world/level/block/entity/BeehiveBlockEntity
	a TAG_FLOWER_POS
	b MIN_OCCUPATION_TICKS
	c ENTITY_DATA
	d TICKS_IN_HIVE
	e HAS_NECTAR
	f BEES
	g MAX_OCCUPANTS
	h MIN_OCCUPATION_TICKS_NECTARLESS
	i IGNORED_BEE_TAGS
	j MIN_TICKS_BEFORE_REENTERING_HIVE
	k MIN_OCCUPATION_TICKS_NECTAR
	l stored
	m savedFlowerPos
	a (ILnet/minecraft/world/entity/animal/EntityBee;)V setBeeReleaseData
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/nbt/NBTTagCompound;IZ)V storeBee
	a (Lnet/minecraft/world/entity/Entity;Z)V addOccupant
	a (Lnet/minecraft/world/entity/Entity;ZI)V addOccupantWithPresetTicks
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBeehive$ReleaseStatus;)V emptyAllLivingFromHive
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/List;Lnet/minecraft/core/BlockPosition;)V tickOccupants
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBeehive$HiveBee;Ljava/util/List;Lnet/minecraft/world/level/block/entity/TileEntityBeehive$ReleaseStatus;Lnet/minecraft/core/BlockPosition;)Z releaseOccupant
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBeehive;)V serverTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;)I getHoneyLevel
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBeehive$ReleaseStatus;)Ljava/util/List; releaseAllOccupants
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c ()Z isFireNearby
	d ()Z isEmpty
	d (Lnet/minecraft/nbt/NBTTagCompound;)V removeIgnoredBeeTags
	e ()V setChanged
	f ()Z isFull
	g ()I getOccupantCount
	i ()Z isSedated
	j ()Lnet/minecraft/nbt/NBTTagList; writeBees
	v ()Z hasSavedFlowerPos
net/minecraft/world/level/block/entity/TileEntityBeehive$HiveBee net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData
	a entityData
	b ticksInHive
	c minOccupationTicks
net/minecraft/world/level/block/entity/TileEntityBeehive$ReleaseStatus net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus
	a HONEY_DELIVERED
	b BEE_RELEASED
	c EMERGENCY
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/entity/TileEntityBeehive$ReleaseStatus; $values
net/minecraft/world/level/block/entity/TileEntityBell net/minecraft/world/level/block/entity/BellBlockEntity
	a ticks
	b shaking
	c clickDirection
	d DURATION
	e GLOW_DURATION
	f MIN_TICKS_BETWEEN_SEARCHES
	g MAX_RESONATION_TICKS
	h TICKS_BEFORE_RESONATION
	i SEARCH_RADIUS
	j HEAR_BELL_RADIUS
	k HIGHLIGHT_RAIDERS_RADIUS
	l lastRingTimestamp
	m nearbyEntities
	n resonating
	r resonationTicks
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/List;)Z areRaidersNearby
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)Z isRaiderWithinRange
	a (Lnet/minecraft/core/EnumDirection;)V onHit
	a (Lnet/minecraft/world/entity/EntityLiving;)V glow
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Ljava/util/List;)V makeRaidersGlow
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBell;)V clientTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBell;Ldct$a;)V tick
	a_ (II)Z triggerEvent
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Ljava/util/List;)V showBellParticles
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBell;)V serverTick
	c ()V updateEntities
net/minecraft/world/level/block/entity/TileEntityBlastFurnace net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/world/item/ItemStack;)I getBurnDuration
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
net/minecraft/world/level/block/entity/TileEntityBrewingStand net/minecraft/world/level/block/entity/BrewingStandBlockEntity
	c FUEL_USES
	d DATA_BREW_TIME
	e DATA_FUEL_USES
	f NUM_DATA_VALUES
	g dataAccess
	h INGREDIENT_SLOT
	i FUEL_SLOT
	j SLOTS_FOR_UP
	k SLOTS_FOR_DOWN
	l SLOTS_FOR_SIDES
	m items
	n brewTime
	r lastPotionCount
	s ingredient
	t fuel
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/core/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/core/NonNullList;)Z isBrewable
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/NonNullList;)V doBrew
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBrewingStand;)V serverTick
	af_ ()Z isEmpty
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/world/item/ItemStack;)Z canPlaceItem
	b (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	f ()[Z getPotionBits
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
net/minecraft/world/level/block/entity/TileEntityCampfire net/minecraft/world/level/block/entity/CampfireBlockEntity
	a BURN_COOL_SPEED
	b NUM_SLOTS
	c items
	d cookingProgress
	e cookingTime
	f quickCheck
	a ()V clearContent
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;I)Z placeFood
	a (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getCookableRecipe
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityCampfire;)V cookTick
	as_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityCampfire;)V cooldownTick
	c ()Lnet/minecraft/core/NonNullList; getItems
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityCampfire;)V particleTick
	d ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	f ()V dowse
	g ()V markUpdated
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
net/minecraft/world/level/block/entity/TileEntityChest net/minecraft/world/level/block/entity/ChestBlockEntity
	c EVENT_SET_OPEN_COUNT
	f items
	g openersCounter
	j chestLidController
	a (F)F getOpenNess
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/core/NonNullList;)V setItems
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getOpenCount
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)V signalOpenCount
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/sounds/SoundEffect;)V playSound
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityChest;)V lidAnimateTick
	a (Lnet/minecraft/world/level/block/entity/TileEntityChest;Lnet/minecraft/world/level/block/entity/TileEntityChest;)V swapContents
	a_ (II)Z triggerEvent
	b ()I getContainerSize
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	d_ (Lnet/minecraft/world/entity/player/EntityHuman;)V startOpen
	f ()Lnet/minecraft/core/NonNullList; getItems
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
	i ()V recheckOpen
net/minecraft/world/level/block/entity/TileEntityChestTrapped net/minecraft/world/level/block/entity/TrappedChestBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)V signalOpenCount
net/minecraft/world/level/block/entity/TileEntityCommand net/minecraft/world/level/block/entity/CommandBlockEntity
	a powered
	b auto
	c conditionMet
	d commandBlock
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Z)V setPowered
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Z)V setAutomatic
	c ()Lnet/minecraft/world/level/CommandBlockListenerAbstract; getCommandBlock
	d ()Z isPowered
	f ()Z isAutomatic
	g ()V onModeSwitch
	i ()Z wasConditionMet
	j ()Z markConditionMet
	t ()Z onlyOpCanSetNbt
	v ()Lnet/minecraft/world/level/block/entity/TileEntityCommand$Type; getMode
	w ()Z isConditional
	x ()V scheduleTick
net/minecraft/world/level/block/entity/TileEntityCommand$Type net/minecraft/world/level/block/entity/CommandBlockEntity$Mode
	a SEQUENCE
	b AUTO
	c REDSTONE
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/entity/TileEntityCommand$Type; $values
net/minecraft/world/level/block/entity/TileEntityComparator net/minecraft/world/level/block/entity/ComparatorBlockEntity
	a output
	a (I)V setOutputSignal
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c ()I getOutputSignal
net/minecraft/world/level/block/entity/TileEntityConduit net/minecraft/world/level/block/entity/ConduitBlockEntity
	a tickCount
	b BLOCK_REFRESH_RATE
	c EFFECT_DURATION
	d ROTATION_SPEED
	e MIN_ACTIVE_SIZE
	f MIN_KILL_SIZE
	g KILL_RANGE
	h VALID_BLOCKS
	i activeRotation
	j isActive
	k isHunting
	l effectBlocks
	m destroyTarget
	n destroyTargetUUID
	r nextAmbientSoundActivation
	a (F)F getActiveRotation
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/AxisAlignedBB; getDestroyRangeAABB
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Ljava/util/List;)Z updateShape
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Ljava/util/List;Lnet/minecraft/world/entity/Entity;I)V animationTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Ljava/util/UUID;)Lnet/minecraft/world/entity/EntityLiving; findDestroyTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntityConduit;)V updateClientTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/List;Lnet/minecraft/world/level/block/entity/TileEntityConduit;)V updateDestroyTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityConduit;)V clientTick
	a (Lnet/minecraft/world/level/block/entity/TileEntityConduit;Ljava/util/List;)V updateHunting
	a (Z)V setHunting
	as_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Ljava/util/List;)V applyEffects
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityConduit;)V serverTick
	c ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	d ()Z isActive
	f ()Z isHunting
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
net/minecraft/world/level/block/entity/TileEntityContainer net/minecraft/world/level/block/entity/BaseContainerBlockEntity
	c lockKey
	d name
	N_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setCustomName
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/ChestLock;Lnet/minecraft/network/chat/IChatBaseComponent;)Z canUnlock
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	ad ()Lnet/minecraft/network/chat/IChatBaseComponent; getCustomName
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	d (Lnet/minecraft/world/entity/player/EntityHuman;)Z canOpen
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
net/minecraft/world/level/block/entity/TileEntityDispenser net/minecraft/world/level/block/entity/DispenserBlockEntity
	c CONTAINER_SIZE
	f items
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/core/NonNullList;)V setItems
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/util/RandomSource;)I getRandomSlot
	a (Lnet/minecraft/world/item/ItemStack;)I addItem
	b ()I getContainerSize
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	f ()Lnet/minecraft/core/NonNullList; getItems
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
net/minecraft/world/level/block/entity/TileEntityDropper net/minecraft/world/level/block/entity/DropperBlockEntity
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
net/minecraft/world/level/block/entity/TileEntityEnchantTable net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity
	a time
	b flip
	c oFlip
	d flipT
	e flipA
	f open
	g oOpen
	h rot
	i oRot
	j tRot
	k RANDOM
	l name
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setCustomName
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityEnchantTable;)V bookAnimationTick
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	ad ()Lnet/minecraft/network/chat/IChatBaseComponent; getCustomName
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
net/minecraft/world/level/block/entity/TileEntityEndGateway net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity
	a LOGGER
	b SPAWN_TIME
	c COOLDOWN_TIME
	d ATTENTION_INTERVAL
	e EVENT_COOLDOWN
	f GATEWAY_HEIGHT_ABOVE_SURFACE
	g age
	h teleportCooldown
	i exitPortal
	j exactTeleport
	a (F)F getSpawnPercent
	a (Lnet/minecraft/core/BlockPosition;Z)V setExitPosition
	a (Lnet/minecraft/core/EnumDirection;)Z shouldRenderFace
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; findOrCreateValidTeleportPos
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenEndGatewayConfiguration;)V spawnGatewayPortal
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Z isChunkEmpty
	a (Lnet/minecraft/world/entity/Entity;)Z canEntityTeleport
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;IZ)Lnet/minecraft/core/BlockPosition; findTallestBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; findExitPosition
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/entity/TileEntityEndGateway;)V teleportEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityEndGateway;)V beamAnimationTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/level/chunk/Chunk; getChunk
	a (Lnet/minecraft/world/level/chunk/Chunk;)Lnet/minecraft/core/BlockPosition; findValidSpawnInChunk
	a_ (II)Z triggerEvent
	as_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (F)F getCooldownPercent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/Vec3D; findExitPortalXZPosTentative
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityEndGateway;)V teleportTick
	c ()Z isSpawning
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityEndGateway;)V triggerCooldown
	d ()Z isCoolingDown
	f ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	g ()I getParticleAmount
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
net/minecraft/world/level/block/entity/TileEntityEnderChest net/minecraft/world/level/block/entity/EnderChestBlockEntity
	a chestLidController
	b openersCounter
	a (F)F getOpenNess
	a (Lnet/minecraft/world/entity/player/EntityHuman;)V startOpen
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityEnderChest;)V lidAnimateTick
	a_ (II)Z triggerEvent
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	c ()V recheckOpen
	c (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
net/minecraft/world/level/block/entity/TileEntityEnderPortal net/minecraft/world/level/block/entity/TheEndPortalBlockEntity
	a (Lnet/minecraft/core/EnumDirection;)Z shouldRenderFace
net/minecraft/world/level/block/entity/TileEntityFurnace net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity
	c SLOT_INPUT
	d SLOT_FUEL
	e SLOT_RESULT
	f DATA_LIT_TIME
	g DATA_LIT_DURATION
	h DATA_COOKING_PROGRESS
	i DATA_COOKING_TOTAL_TIME
	j NUM_DATA_VALUES
	k BURN_TIME_STANDARD
	l BURN_COOL_SPEED
	m items
	n dataAccess
	r SLOTS_FOR_UP
	s SLOTS_FOR_DOWN
	t SLOTS_FOR_SIDES
	u litTime
	v litDuration
	w cookingProgress
	x cookingTotalTime
	y recipesUsed
	z quickCheck
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canPlaceItemThroughFace
	a (Ljava/util/Map;Lnet/minecraft/tags/TagKey;I)V add
	a (Ljava/util/Map;Lnet/minecraft/world/level/IMaterial;I)V add
	a (Lnet/minecraft/core/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/item/crafting/RecipeHolder;Lnet/minecraft/core/NonNullList;I)Z canBurn
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/server/level/EntityPlayer;)V awardUsedRecipesAndPopExperience
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Ljava/util/List; getRecipesToAwardAndPopExperience
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;IF)V createExperience
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;Ljava/util/List;)V awardUsedRecipes
	a (Lnet/minecraft/world/item/ItemStack;)I getBurnDuration
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)V setRecipeUsed
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityFurnace;)V serverTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/TileEntityFurnace;)I getTotalCookTime
	af_ ()Z isEmpty
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/world/item/ItemStack;)Z canPlaceItem
	b (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/item/crafting/RecipeHolder;Lnet/minecraft/core/NonNullList;I)Z burn
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/item/Item;)Z isNeverAFurnaceFuel
	b (Lnet/minecraft/world/item/ItemStack;)Z isFuel
	d ()Lnet/minecraft/world/item/crafting/RecipeHolder; getRecipeUsed
	f ()Ljava/util/Map; getFuel
	i ()Z isLit
net/minecraft/world/level/block/entity/TileEntityFurnaceFurnace net/minecraft/world/level/block/entity/FurnaceBlockEntity
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
net/minecraft/world/level/block/entity/TileEntityHopper net/minecraft/world/level/block/entity/HopperBlockEntity
	f MOVE_ITEM_SPEED
	g HOPPER_CONTAINER_SIZE
	j items
	k cooldownTime
	l tickedGameTime
	M ()D getLevelX
	N ()D getLevelY
	O ()D getLevelZ
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/core/NonNullList;)V setItems
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/EnumDirection;)Ljava/util/stream/IntStream; getSlots
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/IInventory;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/EnumDirection;)Z canTakeItemFromContainer
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/IInventory;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/item/ItemStack; addItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/entity/item/EntityItem;)Z addItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/EnumDirection;)Z canPlaceItemInContainer
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z canMergeItems
	a (Lnet/minecraft/world/level/World;DDD)Lnet/minecraft/world/IInventory; getContainerAt
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/IInventory; getContainerAt
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/IInventory;)Z ejectItems
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/entity/TileEntityHopper;)V entityInside
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityHopper;)V pushItemsTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityHopper;Ljava/util/function/BooleanSupplier;)Z tryMoveItems
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/IHopper;)Z suckInItems
	a (Lnet/minecraft/world/level/block/entity/IHopper;Lnet/minecraft/world/IInventory;ILnet/minecraft/core/EnumDirection;)Z tryTakeInItemFromSlot
	b ()I getContainerSize
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/EnumDirection;)Z isFullContainer
	b (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/IInventory;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/item/ItemStack; tryMoveInItem
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/IInventory; getAttachedContainer
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/IHopper;)Ljava/util/List; getItemsAtAndAbove
	c (I)V setCooldown
	c (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/EnumDirection;)Z isEmptyContainer
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/IHopper;)Lnet/minecraft/world/IInventory; getSourceContainer
	f ()Lnet/minecraft/core/NonNullList; getItems
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
	i ()Z inventoryFull
	j ()Z isOnCooldown
	v ()Z isOnCustomCooldown
net/minecraft/world/level/block/entity/TileEntityJigsaw net/minecraft/world/level/block/entity/JigsawBlockEntity
	a TARGET
	b POOL
	c JOINT
	d NAME
	e FINAL_STATE
	f name
	g target
	h pool
	i joint
	j finalState
	a (Ljava/lang/String;)V setFinalState
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/resources/MinecraftKey;)V setName
	a (Lnet/minecraft/resources/ResourceKey;)V setPool
	a (Lnet/minecraft/server/level/WorldServer;IZ)V generate
	a (Lnet/minecraft/world/level/block/entity/TileEntityJigsaw$JointType;)V setJoint
	as_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/resources/MinecraftKey;)V setTarget
	c ()Lnet/minecraft/resources/MinecraftKey; getName
	d ()Lnet/minecraft/resources/MinecraftKey; getTarget
	f ()Lnet/minecraft/resources/ResourceKey; getPool
	g ()Ljava/lang/String; getFinalState
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	i ()Lnet/minecraft/world/level/block/entity/TileEntityJigsaw$JointType; getJoint
	j ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
net/minecraft/world/level/block/entity/TileEntityJigsaw$JointType net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType
	a ROLLABLE
	b ALIGNED
	c name
	d $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTranslatedName
	a (Ljava/lang/String;)Ljava/util/Optional; byName
	b ()[Lnet/minecraft/world/level/block/entity/TileEntityJigsaw$JointType; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/entity/TileEntityJukeBox net/minecraft/world/level/block/entity/JukeboxBlockEntity
	c SONG_END_PADDING
	d items
	e ticksSinceLastEvent
	f tickCount
	g recordStartedTick
	h isPlaying
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/IInventory;ILnet/minecraft/world/item/ItemStack;)Z canTakeItem
	a (Lnet/minecraft/world/entity/Entity;Z)V setHasRecordBlockState
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/item/ItemRecord;)Z shouldRecordStopPlaying
	a (Lnet/minecraft/world/item/ItemStack;)V setRecordWithoutPlaying
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V spawnMusicParticles
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityJukeBox;)V playRecordTick
	ag_ ()I getMaxStackSize
	b (ILnet/minecraft/world/item/ItemStack;)Z canPlaceItem
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V tick
	f ()Z isRecordPlaying
	g ()V startPlaying
	i ()V popOutRecord
	v ()V stopPlaying
	w ()Z shouldSendJukeboxPlayingEvent
net/minecraft/world/level/block/entity/TileEntityLectern net/minecraft/world/level/block/entity/LecternBlockEntity
	a DATA_PAGE
	b NUM_DATA
	c SLOT_BOOK
	d NUM_SLOTS
	e bookAccess
	f dataAccess
	g book
	h page
	i pageCount
	N_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	a ()V clearContent
	a (I)V setPage
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/commands/CommandListenerWrapper; createCommandSourceStack
	a (Lnet/minecraft/world/item/ItemStack;)V setBook
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)V setBook
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/item/ItemStack; resolveBook
	c ()Lnet/minecraft/world/item/ItemStack; getBook
	f ()Z hasBook
	g ()I getPage
	i ()I getRedstoneSignal
	j ()V onBookItemRemove
	t ()Z onlyOpCanSetNbt
net/minecraft/world/level/block/entity/TileEntityLightDetector net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity
net/minecraft/world/level/block/entity/TileEntityLootable net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity
	d LOOT_TABLE_TAG
	e LOOT_TABLE_SEED_TAG
	h lootTable
	i lootTableSeed
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/core/NonNullList;)V setItems
	a (Lnet/minecraft/resources/MinecraftKey;J)V setLootTable
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/resources/MinecraftKey;)V setLootTable
	af_ ()Z isEmpty
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	d (Lnet/minecraft/nbt/NBTTagCompound;)Z tryLoadLootTable
	d (Lnet/minecraft/world/entity/player/EntityHuman;)Z canOpen
	e (Lnet/minecraft/nbt/NBTTagCompound;)Z trySaveLootTable
	e (Lnet/minecraft/world/entity/player/EntityHuman;)V unpackLootTable
	f ()Lnet/minecraft/core/NonNullList; getItems
net/minecraft/world/level/block/entity/TileEntityMobSpawner net/minecraft/world/level/block/entity/SpawnerBlockEntity
	a spawner
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/util/RandomSource;)V setEntityId
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityMobSpawner;)V clientTick
	a_ (II)Z triggerEvent
	as_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityMobSpawner;)V serverTick
	c ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	d ()Lnet/minecraft/world/level/MobSpawnerAbstract; getSpawner
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	t ()Z onlyOpCanSetNbt
net/minecraft/world/level/block/entity/TileEntityShulkerBox net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity
	c COLUMNS
	f ROWS
	g CONTAINER_SIZE
	j EVENT_SET_OPEN_COUNT
	k OPENING_TICK_LENGTH
	l MAX_LID_HEIGHT
	m MAX_LID_ROTATION
	n ITEMS_TAG
	r SLOTS
	s itemStacks
	t openCount
	u animationStatus
	v progress
	w progressOld
	x color
	a (F)F getProgress
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/core/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/core/NonNullList;)V setItems
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityShulkerBox;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBox
	a_ (II)Z triggerEvent
	b ()I getContainerSize
	b (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updateAnimation
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V moveCollidedEntities
	d (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V doNeighborUpdates
	d_ (Lnet/minecraft/world/entity/player/EntityHuman;)V startOpen
	f ()Lnet/minecraft/core/NonNullList; getItems
	f (Lnet/minecraft/nbt/NBTTagCompound;)V loadFromTag
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
	i ()Lnet/minecraft/world/level/block/entity/TileEntityShulkerBox$AnimationPhase; getAnimationStatus
	j ()Lnet/minecraft/world/item/EnumColor; getColor
	v ()Z isClosed
net/minecraft/world/level/block/entity/TileEntityShulkerBox$AnimationPhase net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus
	a CLOSED
	b OPENING
	c OPENED
	d CLOSING
	e $VALUES
	a ()[Lnet/minecraft/world/level/block/entity/TileEntityShulkerBox$AnimationPhase; $values
net/minecraft/world/level/block/entity/TileEntitySign net/minecraft/world/level/block/entity/SignBlockEntity
	a LOGGER
	b MAX_TEXT_LINE_WIDTH
	c TEXT_LINE_HEIGHT
	d playerWhoMayEdit
	e frontText
	f backText
	g isWaxed
	a (Ljava/util/UUID;)V setAllowedPlayerEditor
	a (Ljava/util/function/UnaryOperator;Z)Z updateText
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; loadLine
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z isFacingFrontText
	a (Lnet/minecraft/world/entity/player/EntityHuman;Ljava/util/List;Lnet/minecraft/world/level/block/entity/SignText;)Lnet/minecraft/world/level/block/entity/SignText; setMessages
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/commands/CommandListenerWrapper; createCommandSourceStack
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)Z executeClickCommandsIfPresent
	a (Lnet/minecraft/world/entity/player/EntityHuman;ZLjava/util/List;)V updateSignText
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntitySign;)V tick
	a (Lnet/minecraft/world/level/block/entity/SignText;)Lnet/minecraft/world/level/block/entity/SignText; loadLines
	a (Lnet/minecraft/world/level/block/entity/SignText;Z)Z setText
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;Lnet/minecraft/world/level/World;Ljava/util/UUID;)V clearInvalidPlayerWhoMayEdit
	a (Z)Lnet/minecraft/world/level/block/entity/SignText; getText
	a (ZLnet/minecraft/world/entity/player/EntityHuman;)Z canExecuteClickCommands
	as_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Ljava/util/UUID;)Z playerIsTooFarAwayToEdit
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/level/block/entity/SignText; getTextFacingPlayer
	b (Lnet/minecraft/world/level/block/entity/SignText;)Z setBackText
	b (Z)Z setWaxed
	c ()I getTextLineHeight
	c (Lnet/minecraft/world/level/block/entity/SignText;)Z setFrontText
	d ()I getMaxTextLineWidth
	f ()Lnet/minecraft/world/level/block/entity/SignText; createDefaultSignText
	g ()Lnet/minecraft/world/level/block/entity/SignText; getFrontText
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	i ()Lnet/minecraft/world/level/block/entity/SignText; getBackText
	j ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	t ()Z onlyOpCanSetNbt
	v ()Ljava/util/UUID; getPlayerWhoMayEdit
	w ()Z isWaxed
	x ()V markUpdated
net/minecraft/world/level/block/entity/TileEntitySkull net/minecraft/world/level/block/entity/SkullBlockEntity
	a TAG_SKULL_OWNER
	b TAG_NOTE_BLOCK_SOUND
	c profileCache
	d sessionService
	e mainThreadExecutor
	f CHECKED_MAIN_THREAD_EXECUTOR
	g owner
	h noteBlockSound
	i animationTickCount
	j isAnimating
	a (F)F getAnimation
	a (Lcom/mojang/authlib/GameProfile;)V setOwner
	a (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; fetchGameProfile
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/lang/String;)V resolveGameProfile
	a (Lnet/minecraft/server/Services;Ljava/util/concurrent/Executor;)V setup
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntitySkull;)V animation
	as_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lcom/mojang/authlib/GameProfile;)Ljava/util/concurrent/CompletableFuture; fillProfileTextures
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c ()V clear
	c (Lcom/mojang/authlib/GameProfile;)Z hasTextures
	d ()Lcom/mojang/authlib/GameProfile; getOwnerProfile
	d (Lnet/minecraft/nbt/NBTTagCompound;)Lcom/mojang/authlib/GameProfile; getOrResolveGameProfile
	e (Lnet/minecraft/nbt/NBTTagCompound;)V resolveGameProfile
	f ()Lnet/minecraft/resources/MinecraftKey; getNoteBlockSound
	g ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	i ()V updateOwnerProfile
net/minecraft/world/level/block/entity/TileEntitySmoker net/minecraft/world/level/block/entity/SmokerBlockEntity
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/world/item/ItemStack;)I getBurnDuration
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
net/minecraft/world/level/block/entity/TileEntityStructure net/minecraft/world/level/block/entity/StructureBlockEntity
	a MAX_OFFSET_PER_AXIS
	b MAX_SIZE_PER_AXIS
	c AUTHOR_TAG
	d SCAN_CORNER_BLOCKS_RANGE
	e structureName
	f author
	g metaData
	h structurePos
	i structureSize
	j mirror
	k rotation
	l mode
	m ignoreEntities
	n powered
	r showAir
	s showBoundingBox
	t integrity
	u seed
	A ()F getIntegrity
	B ()J getSeed
	C ()Z detectSize
	D ()Z saveStructure
	E ()V unloadStructure
	F ()Z isStructureLoadable
	G ()Z isPowered
	H ()Z getShowAir
	I ()Z getShowBoundingBox
	J ()V updateBlockState
	a (F)V setIntegrity
	a (J)V setSeed
	a (Ljava/lang/String;)V setStructureName
	a (Lnet/minecraft/core/BaseBlockPosition;)V setStructureSize
	a (Lnet/minecraft/core/BlockPosition;)V setStructurePos
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/stream/Stream;)Ljava/util/Optional; calculateEnclosingBoundingBox
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getRelatedCorners
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/resources/MinecraftKey;)V setStructureName
	a (Lnet/minecraft/server/level/WorldServer;)Z loadStructure
	a (Lnet/minecraft/server/level/WorldServer;Z)Z loadStructure
	a (Lnet/minecraft/server/level/WorldServer;ZLnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure;)Z loadStructure
	a (Lnet/minecraft/world/entity/EntityLiving;)V createdBy
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z usedBy
	a (Lnet/minecraft/world/level/block/EnumBlockMirror;)V setMirror
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)V setRotation
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyStructureMode;)V setMode
	a (Z)V setIgnoreEntities
	as_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (J)Lnet/minecraft/util/RandomSource; createRandom
	b (Ljava/lang/String;)V setMetaData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Z)Z saveStructure
	c ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	c (Z)V setPowered
	d ()Ljava/lang/String; getStructureName
	d (Z)V setShowAir
	e (Z)V setShowBoundingBox
	f ()Ljava/lang/String; getStructurePath
	g ()Z hasStructureName
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	i ()Lnet/minecraft/core/BlockPosition; getStructurePos
	j ()Lnet/minecraft/core/BaseBlockPosition; getStructureSize
	v ()Lnet/minecraft/world/level/block/EnumBlockMirror; getMirror
	w ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	x ()Ljava/lang/String; getMetaData
	y ()Lnet/minecraft/world/level/block/state/properties/BlockPropertyStructureMode; getMode
	z ()Z isIgnoreEntities
net/minecraft/world/level/block/entity/TileEntityStructure$UpdateType net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType
	a UPDATE_DATA
	b SAVE_AREA
	c LOAD_AREA
	d SCAN_AREA
	e $VALUES
	a ()[Lnet/minecraft/world/level/block/entity/TileEntityStructure$UpdateType; $values
net/minecraft/world/level/block/entity/TileEntityTypes net/minecraft/world/level/block/entity/BlockEntityType
	A BARREL
	B SMOKER
	C BLAST_FURNACE
	D LECTERN
	E BELL
	F JIGSAW
	G CAMPFIRE
	H BEEHIVE
	I SCULK_SENSOR
	J CALIBRATED_SCULK_SENSOR
	K SCULK_CATALYST
	L SCULK_SHRIEKER
	M CHISELED_BOOKSHELF
	N BRUSHABLE_BLOCK
	O DECORATED_POT
	P LOGGER
	Q factory
	R validBlocks
	S dataType
	T builtInRegistryHolder
	a FURNACE
	b CHEST
	c TRAPPED_CHEST
	d ENDER_CHEST
	e JUKEBOX
	f DISPENSER
	g DROPPER
	h SIGN
	i HANGING_SIGN
	j MOB_SPAWNER
	k PISTON
	l BREWING_STAND
	m ENCHANTING_TABLE
	n END_PORTAL
	o BEACON
	p SKULL
	q DAYLIGHT_DETECTOR
	r HOPPER
	s COMPARATOR
	t BANNER
	u STRUCTURE_BLOCK
	v END_GATEWAY
	w COMMAND_BLOCK
	x SHULKER_BOX
	y BED
	z CONDUIT
	a ()Lhe$c; builtInRegistryHolder
	a (Ljava/lang/String;Ldcx$b;)Lnet/minecraft/world/level/block/entity/TileEntityTypes; register
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; create
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	a (Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/resources/MinecraftKey; getKey
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isValid
net/minecraft/world/level/block/grower/WorldGenMegaTreeProvider net/minecraft/world/level/block/grower/AbstractMegaTreeGrower
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z growTree
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;II)Z placeMega
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceKey; getConfiguredMegaFeature
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;II)Z isTwoByTwoSapling
net/minecraft/world/level/block/grower/WorldGenMegaTreeProviderDarkOak net/minecraft/world/level/block/grower/DarkOakTreeGrower
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceKey; getConfiguredMegaFeature
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/grower/WorldGenMegaTreeProviderJungle net/minecraft/world/level/block/grower/JungleTreeGrower
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceKey; getConfiguredMegaFeature
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/grower/WorldGenTreeProvider net/minecraft/world/level/block/grower/AbstractTreeGrower
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z growTree
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z hasFlowers
net/minecraft/world/level/block/grower/WorldGenTreeProviderAcacia net/minecraft/world/level/block/grower/AcaciaTreeGrower
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/grower/WorldGenTreeProviderBirch net/minecraft/world/level/block/grower/BirchTreeGrower
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/grower/WorldGenTreeProviderOak net/minecraft/world/level/block/grower/OakTreeGrower
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/grower/WorldGenTreeProviderSpruce net/minecraft/world/level/block/grower/SpruceTreeGrower
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceKey; getConfiguredMegaFeature
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/piston/BlockPiston net/minecraft/world/level/block/piston/PistonBaseBlock
	b EXTENDED
	c TRIGGER_EXTEND
	d TRIGGER_CONTRACT
	e TRIGGER_DROP
	f PLATFORM_THICKNESS
	g EAST_AABB
	h WEST_AABB
	i SOUTH_AABB
	j NORTH_AABB
	k UP_AABB
	l DOWN_AABB
	m isSticky
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/SignalGetter;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z getNeighborSignal
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Z)Z moveBlocks
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V checkIfExtend
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;ZLnet/minecraft/core/EnumDirection;)Z isPushable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/piston/BlockPistonExtension net/minecraft/world/level/block/piston/PistonHeadBlock
	D DOWN_ARM_AABB
	E SOUTH_ARM_AABB
	F NORTH_ARM_AABB
	G EAST_ARM_AABB
	H WEST_ARM_AABB
	I SHORT_UP_ARM_AABB
	J SHORT_DOWN_ARM_AABB
	K SHORT_SOUTH_ARM_AABB
	L SHORT_NORTH_ARM_AABB
	M SHORT_EAST_ARM_AABB
	N SHORT_WEST_ARM_AABB
	O SHAPES_SHORT
	P SHAPES_LONG
	b TYPE
	c SHORT
	d PLATFORM
	e EAST_AABB
	f WEST_AABB
	g SOUTH_AABB
	h NORTH_AABB
	i UP_AABB
	j DOWN_AABB
	k AABB_OFFSET
	l EDGE_MIN
	m EDGE_MAX
	n UP_ARM_AABB
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/EnumDirection;Z)Lnet/minecraft/world/phys/shapes/VoxelShape; calculateShape
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Z isFittingBase
	a (Z)[Lnet/minecraft/world/phys/shapes/VoxelShape; makeShapes
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/piston/BlockPistonMoving net/minecraft/world/level/block/piston/MovingPistonBlock
	a FACING
	b TYPE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;ZZ)Lnet/minecraft/world/level/block/entity/TileEntity; newMovingBlockEntity
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V destroy
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/piston/TileEntityPiston; getBlockEntity
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lecw$a;)Ljava/util/List; getDrops
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
net/minecraft/world/level/block/piston/PistonExtendsChecker net/minecraft/world/level/block/piston/PistonStructureResolver
	a MAX_PUSH_DEPTH
	b level
	c pistonPos
	d extending
	e startPos
	f pushDirection
	g toPush
	h toDestroy
	i pistonDirection
	a ()Z resolve
	a (II)V reorderListAtCollision
	a (Lnet/minecraft/core/BlockPosition;)Z addBranchingBlocks
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z addBlockLine
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSticky
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Z canStickToEachOther
	b ()Lnet/minecraft/core/EnumDirection; getPushDirection
	c ()Ljava/util/List; getToPush
	d ()Ljava/util/List; getToDestroy
net/minecraft/world/level/block/piston/PistonUtil net/minecraft/world/level/block/piston/PistonMath
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/core/EnumDirection;D)Lnet/minecraft/world/phys/AxisAlignedBB; getMovementArea
net/minecraft/world/level/block/piston/TileEntityPiston net/minecraft/world/level/block/piston/PistonMovingBlockEntity
	a TICK_MOVEMENT
	b TICKS_TO_EXTEND
	c PUSH_OFFSET
	d movedState
	e direction
	f extending
	g isSourcePiston
	h NOCLIP
	i progress
	j progressO
	k lastTicked
	l deathTicks
	a (F)F getProgress
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/EnumDirection;D)V fixEntityWithinPistonBase
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/world/level/block/piston/TileEntityPiston;)Lnet/minecraft/world/phys/AxisAlignedBB; moveByPositionAndProgress
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/entity/Entity;DLnet/minecraft/core/EnumDirection;)V moveEntityByPiston
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	a (Lnet/minecraft/world/level/World;)V setLevel
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;FLnet/minecraft/world/level/block/piston/TileEntityPiston;)V moveCollidedEntities
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/piston/TileEntityPiston;)V tick
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/phys/AxisAlignedBB;)D getMovement
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)Z matchesStickyCritera
	as_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (F)F getXOff
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;FLnet/minecraft/world/level/block/piston/TileEntityPiston;)V moveStuckEntities
	c ()Z isExtending
	c (F)F getYOff
	d ()Lnet/minecraft/core/EnumDirection; getDirection
	d (F)F getZOff
	e (F)F getExtendedProgress
	f ()Z isSourcePiston
	g ()Lnet/minecraft/core/EnumDirection; getMovementDirection
	i ()Lnet/minecraft/world/level/block/state/IBlockData; getMovedState
	j ()V finalTick
	v ()J getLastTicked
	w ()Lnet/minecraft/world/level/block/state/IBlockData; getCollisionRelatedBlockState
	x ()Z isStickyForEntities
net/minecraft/world/level/block/state/BlockBase net/minecraft/world/level/block/state/BlockBehaviour
	aD UPDATE_SHAPE_ORDER
	aE hasCollision
	aF explosionResistance
	aG isRandomlyTicking
	aH soundType
	aI friction
	aJ speedFactor
	aK jumpFactor
	aL dynamicShape
	aM requiredFeatures
	aN properties
	aO drops
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lecw$a;)Ljava/util/List; getDrops
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)J getSeed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getDestroyProgress
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;II)V updateIndirectNeighbourShapes
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getInteractionShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V attack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canBeReplaced
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isCollisionShapeFullBlock
	ap_ ()F getMaxHorizontalOffset
	ar_ ()F getMaxVerticalOffset
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
	g (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getLightBlock
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
	h (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isOcclusionShapeFullBlock
	k ()Lnet/minecraft/world/item/Item; asItem
	m ()Lnet/minecraft/world/flag/FeatureFlagSet; requiredFeatures
	p ()Lnet/minecraft/world/level/block/Block; asBlock
	r ()Lnet/minecraft/resources/MinecraftKey; getLootTable
	s ()Lnet/minecraft/world/level/material/MaterialMapColor; defaultMapColor
	t ()F defaultDestroyTime
net/minecraft/world/level/block/state/BlockBase$BlockData net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase
	A isRandomlyTicking
	a cache
	b lightEmission
	g useShapeForLightOcclusion
	h isAir
	i ignitedByLava
	j liquid
	k legacySolid
	l pushReaction
	m mapColor
	n destroySpeed
	o requiresCorrectToolForDrops
	p canOcclude
	q isRedstoneConductor
	r isSuffocating
	s isViewBlocking
	t hasPostProcess
	u emissiveRendering
	v offsetFunction
	w spawnTerrainParticles
	x instrument
	y replaceable
	z fluidState
	A ()Lnet/minecraft/world/level/block/state/properties/BlockPropertyInstrument; instrument
	D ()Z calculateSolid
	a ()V initCache
	a (Lecw$a;)Ljava/util/List; getDrops
	a (Lnet/minecraft/core/BlockPosition;)J getSeed
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/core/Holder;)Z is
	a (Lnet/minecraft/core/HolderSet;)Z is
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	a (Lnet/minecraft/tags/TagKey;)Z is
	a (Lnet/minecraft/tags/TagKey;Ljava/util/function/Predicate;)Z is
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getDestroyProgress
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;I)V updateNeighbourShapes
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;II)V updateNeighbourShapes
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/phys/shapes/VoxelShape; getFaceOcclusionShape
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/EnumBlockSupport;)Z isFaceSturdy
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)Z entityCanStandOn
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/EnumDirection;)Z entityCanStandOnFace
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V attack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/Block;)Z is
	a (Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/world/level/material/FluidType;)Z canBeReplaced
	b ()Lnet/minecraft/world/level/block/Block; getBlock
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;I)V updateIndirectNeighbourShapes
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;II)V updateIndirectNeighbourShapes
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getLightBlock
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	c ()Lnet/minecraft/core/Holder; getBlockHolder
	c (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	c (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	c (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	d ()Z blocksMotion
	d (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/MaterialMapColor; getMapColor
	d (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isFaceSturdy
	e ()Z isSolid
	e (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z emissiveRendering
	f ()Z hasLargeCollisionShape
	f (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	g ()Z useShapeForLightOcclusion
	g (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isRedstoneConductor
	h ()I getLightEmission
	h (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getDestroySpeed
	i ()Z isAir
	i (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isSolidRender
	j ()Z ignitedByLava
	j (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	k ()Z liquid
	k (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	l ()Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	l (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	m ()Z isSignalSource
	m (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getInteractionShape
	n ()Z hasAnalogOutputSignal
	n (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/Vec3D; getOffset
	o ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	o (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isSuffocating
	p ()Z canOcclude
	p (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isViewBlocking
	q ()Z hasOffsetFunction
	q (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z hasPostProcess
	r ()Z canBeReplaced
	r (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isCollisionShapeFullBlock
	s ()Ljava/util/stream/Stream; getTags
	t ()Z hasBlockEntity
	u ()Lnet/minecraft/world/level/material/Fluid; getFluidState
	v ()Z isRandomlyTicking
	w ()Lnet/minecraft/world/level/block/SoundEffectType; getSoundType
	x ()Lnet/minecraft/world/level/block/state/IBlockData; asState
	y ()Z requiresCorrectToolForDrops
	z ()Z shouldSpawnTerrainParticles
net/minecraft/world/level/block/state/BlockBase$BlockData$Cache net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache
	a solidRender
	b collisionShape
	c largeCollisionShape
	d isCollisionShapeFullBlock
	e DIRECTIONS
	f SUPPORT_TYPE_COUNT
	g propagatesSkylightDown
	h lightBlock
	i occlusionShapes
	j faceSturdy
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/EnumBlockSupport;)Z isFaceSturdy
	b (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/EnumBlockSupport;)I getFaceSupportIndex
net/minecraft/world/level/block/state/BlockBase$EnumRandomOffset net/minecraft/world/level/block/state/BlockBehaviour$OffsetType
	a NONE
	b XZ
	c XYZ
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/state/BlockBase$EnumRandomOffset; $values
net/minecraft/world/level/block/state/BlockBase$Info net/minecraft/world/level/block/state/BlockBehaviour$Properties
	A hasPostProcess
	B emissiveRendering
	C dynamicShape
	D requiredFeatures
	E offsetFunction
	a mapColor
	b hasCollision
	c soundType
	d lightEmission
	e explosionResistance
	f destroyTime
	g requiresCorrectToolForDrops
	h isRandomlyTicking
	i friction
	j speedFactor
	k jumpFactor
	l drops
	m canOcclude
	n isAir
	o ignitedByLava
	p liquid
	q forceSolidOff
	r forceSolidOn
	s pushReaction
	t spawnTerrainParticles
	u instrument
	v replaceable
	w isValidSpawn
	x isRedstoneConductor
	y isSuffocating
	z isViewBlocking
	a ()Lnet/minecraft/world/level/block/state/BlockBase$Info; of
	a (F)Lnet/minecraft/world/level/block/state/BlockBase$Info; friction
	a (FF)Lnet/minecraft/world/level/block/state/BlockBase$Info; strength
	a (Ldfi$e;)Lnet/minecraft/world/level/block/state/BlockBase$Info; isValidSpawn
	a (Ldfi$f;)Lnet/minecraft/world/level/block/state/BlockBase$Info; isRedstoneConductor
	a (Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockBase$Info; mapColor
	a (Ljava/util/function/ToIntFunction;)Lnet/minecraft/world/level/block/state/BlockBase$Info; lightLevel
	a (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/level/block/state/BlockBase$Info; mapColor
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockBase$Info; dropsLike
	a (Lnet/minecraft/world/level/block/SoundEffectType;)Lnet/minecraft/world/level/block/state/BlockBase$Info; sound
	a (Lnet/minecraft/world/level/block/state/BlockBase$EnumRandomOffset;)Lnet/minecraft/world/level/block/state/BlockBase$Info; offsetType
	a (Lnet/minecraft/world/level/block/state/BlockBase;)Lnet/minecraft/world/level/block/state/BlockBase$Info; copy
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyInstrument;)Lnet/minecraft/world/level/block/state/BlockBase$Info; instrument
	a (Lnet/minecraft/world/level/material/EnumPistonReaction;)Lnet/minecraft/world/level/block/state/BlockBase$Info; pushReaction
	a (Lnet/minecraft/world/level/material/MaterialMapColor;)Lnet/minecraft/world/level/block/state/BlockBase$Info; mapColor
	a ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/level/block/state/BlockBase$Info; requiredFeatures
	b ()Lnet/minecraft/world/level/block/state/BlockBase$Info; noCollission
	b (F)Lnet/minecraft/world/level/block/state/BlockBase$Info; speedFactor
	b (Ldfi$f;)Lnet/minecraft/world/level/block/state/BlockBase$Info; isSuffocating
	c ()Lnet/minecraft/world/level/block/state/BlockBase$Info; noOcclusion
	c (F)Lnet/minecraft/world/level/block/state/BlockBase$Info; jumpFactor
	c (Ldfi$f;)Lnet/minecraft/world/level/block/state/BlockBase$Info; isViewBlocking
	d ()Lnet/minecraft/world/level/block/state/BlockBase$Info; instabreak
	d (F)Lnet/minecraft/world/level/block/state/BlockBase$Info; strength
	d (Ldfi$f;)Lnet/minecraft/world/level/block/state/BlockBase$Info; hasPostProcess
	e ()Lnet/minecraft/world/level/block/state/BlockBase$Info; randomTicks
	e (F)Lnet/minecraft/world/level/block/state/BlockBase$Info; destroyTime
	e (Ldfi$f;)Lnet/minecraft/world/level/block/state/BlockBase$Info; emissiveRendering
	f ()Lnet/minecraft/world/level/block/state/BlockBase$Info; dynamicShape
	f (F)Lnet/minecraft/world/level/block/state/BlockBase$Info; explosionResistance
	g ()Lnet/minecraft/world/level/block/state/BlockBase$Info; noLootTable
	h ()Lnet/minecraft/world/level/block/state/BlockBase$Info; ignitedByLava
	i ()Lnet/minecraft/world/level/block/state/BlockBase$Info; liquid
	j ()Lnet/minecraft/world/level/block/state/BlockBase$Info; forceSolidOn
	k ()Lnet/minecraft/world/level/block/state/BlockBase$Info; forceSolidOff
	l ()Lnet/minecraft/world/level/block/state/BlockBase$Info; air
	m ()Lnet/minecraft/world/level/block/state/BlockBase$Info; requiresCorrectToolForDrops
	n ()Lnet/minecraft/world/level/block/state/BlockBase$Info; noTerrainParticles
	o ()Lnet/minecraft/world/level/block/state/BlockBase$Info; replaceable
net/minecraft/world/level/block/state/BlockStateList net/minecraft/world/level/block/state/StateDefinition
	a NAME_PATTERN
	b owner
	c propertiesByName
	d states
	a ()Lcom/google/common/collect/ImmutableList; getPossibleStates
	a (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Lcom/mojang/serialization/MapCodec; appendPropertyCodec
	a (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/IBlockState; getProperty
	b ()Lnet/minecraft/world/level/block/state/IBlockDataHolder; any
	c ()Ljava/lang/Object; getOwner
	d ()Ljava/util/Collection; getProperties
net/minecraft/world/level/block/state/IBlockData net/minecraft/world/level/block/state/BlockState
	b CODEC
	x ()Lnet/minecraft/world/level/block/state/IBlockData; asState
net/minecraft/world/level/block/state/IBlockDataHolder net/minecraft/world/level/block/state/StateHolder
	a PROPERTY_ENTRY_TO_STRING_FUNCTION
	b values
	c NAME_TAG
	d PROPERTIES_TAG
	e owner
	f propertiesCodec
	g neighbours
	B ()Ljava/util/Collection; getProperties
	C ()Lcom/google/common/collect/ImmutableMap; getValues
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; findNextInCollection
	a (Ljava/util/Map;)V populateNeighbours
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;)Ljava/lang/Object; cycle
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Ljava/lang/Object; setValue
	b (Lnet/minecraft/world/level/block/state/properties/IBlockState;)Z hasProperty
	b (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Ljava/lang/Object; trySetValue
	c (Lnet/minecraft/world/level/block/state/properties/IBlockState;)Ljava/lang/Comparable; getValue
	c (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Ljava/util/Map; makeNeighbourValues
	d (Lnet/minecraft/world/level/block/state/properties/IBlockState;)Ljava/util/Optional; getOptionalValue
net/minecraft/world/level/block/state/pattern/ShapeDetector net/minecraft/world/level/block/state/pattern/BlockPattern
	a pattern
	b depth
	c height
	d width
	a ()I getDepth
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;III)Lnet/minecraft/core/BlockPosition; translateAndRotate
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;Lcom/google/common/cache/LoadingCache;)Lnet/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection; matches
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection; find
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection; matches
	a (Lnet/minecraft/world/level/IWorldReader;Z)Lcom/google/common/cache/LoadingCache; createLevelCache
	b ()I getHeight
	c ()I getWidth
	d ()[[[Ljava/util/function/Predicate; getPattern
net/minecraft/world/level/block/state/pattern/ShapeDetector$BlockLoader net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader
	a level
	b loadChunks
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock; load
net/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch
	a frontTopLeft
	b forwards
	c up
	d cache
	e width
	f height
	g depth
	a ()Lnet/minecraft/core/BlockPosition; getFrontTopLeft
	a (III)Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock; getBlock
	b ()Lnet/minecraft/core/EnumDirection; getForwards
	c ()Lnet/minecraft/core/EnumDirection; getUp
	d ()I getWidth
	e ()I getHeight
	f ()I getDepth
net/minecraft/world/level/block/state/pattern/ShapeDetectorBlock net/minecraft/world/level/block/state/pattern/BlockInWorld
	a level
	b pos
	c loadChunks
	d state
	e entity
	f cachedEntity
	a ()Lnet/minecraft/world/level/block/state/IBlockData; getState
	a (Ljava/util/function/Predicate;)Ljava/util/function/Predicate; hasState
	b ()Lnet/minecraft/world/level/block/entity/TileEntity; getEntity
	c ()Lnet/minecraft/world/level/IWorldReader; getLevel
	d ()Lnet/minecraft/core/BlockPosition; getPos
net/minecraft/world/level/block/state/pattern/ShapeDetectorBuilder net/minecraft/world/level/block/state/pattern/BlockPatternBuilder
	a COMMA_JOINED
	b pattern
	c lookup
	d height
	e width
	a ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBuilder; start
	a (CLjava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBuilder; where
	a ([Ljava/lang/String;)Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBuilder; aisle
	b ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; build
	c ()[[[Ljava/util/function/Predicate; createPattern
	d ()V ensureAllCharactersMatched
net/minecraft/world/level/block/state/properties/BlockProperties net/minecraft/world/level/block/state/properties/BlockStateProperties
	A TRIGGERED
	B UNSTABLE
	C WATERLOGGED
	D BERRIES
	E BLOOM
	F SHRIEKING
	G CAN_SUMMON
	H HORIZONTAL_AXIS
	I AXIS
	J UP
	K DOWN
	L NORTH
	M EAST
	N SOUTH
	O WEST
	P FACING
	Q FACING_HOPPER
	R HORIZONTAL_FACING
	S FLOWER_AMOUNT
	T ORIENTATION
	U ATTACH_FACE
	V BELL_ATTACHMENT
	W EAST_WALL
	X NORTH_WALL
	Y SOUTH_WALL
	Z WEST_WALL
	a ATTACHED
	aA DELAY
	aB MAX_DISTANCE
	aC DISTANCE
	aD EGGS
	aE HATCH
	aF LAYERS
	aG MIN_LEVEL
	aH MIN_LEVEL_CAULDRON
	aI MAX_LEVEL_3
	aJ MAX_LEVEL_8
	aK LEVEL_CAULDRON
	aL LEVEL_COMPOSTER
	aM LEVEL_FLOWING
	aN LEVEL_HONEY
	aO MAX_LEVEL_15
	aP LEVEL
	aQ MOISTURE
	aR NOTE
	aS PICKLES
	aT POWER
	aU STAGE
	aV STABILITY_MAX_DISTANCE
	aW STABILITY_DISTANCE
	aX MIN_RESPAWN_ANCHOR_CHARGES
	aY MAX_RESPAWN_ANCHOR_CHARGES
	aZ RESPAWN_ANCHOR_CHARGES
	aa EAST_REDSTONE
	ab NORTH_REDSTONE
	ac SOUTH_REDSTONE
	ad WEST_REDSTONE
	ae DOUBLE_BLOCK_HALF
	af HALF
	ag RAIL_SHAPE
	ah RAIL_SHAPE_STRAIGHT
	ai MAX_AGE_1
	aj MAX_AGE_2
	ak MAX_AGE_3
	al MAX_AGE_4
	am MAX_AGE_5
	an MAX_AGE_7
	ao MAX_AGE_15
	ap MAX_AGE_25
	aq AGE_1
	ar AGE_2
	as AGE_3
	at AGE_4
	au AGE_5
	av AGE_7
	aw AGE_15
	ax AGE_25
	ay BITES
	az CANDLES
	b BOTTOM
	ba ROTATION_16
	bb BED_PART
	bc CHEST_TYPE
	bd MODE_COMPARATOR
	be DOOR_HINGE
	bf NOTEBLOCK_INSTRUMENT
	bg PISTON_TYPE
	bh SLAB_TYPE
	bi STAIRS_SHAPE
	bj STRUCTUREBLOCK_MODE
	bk BAMBOO_LEAVES
	bl TILT
	bm VERTICAL_DIRECTION
	bn DRIPSTONE_THICKNESS
	bo SCULK_SENSOR_PHASE
	bp CHISELED_BOOKSHELF_SLOT_0_OCCUPIED
	bq CHISELED_BOOKSHELF_SLOT_1_OCCUPIED
	br CHISELED_BOOKSHELF_SLOT_2_OCCUPIED
	bs CHISELED_BOOKSHELF_SLOT_3_OCCUPIED
	bt CHISELED_BOOKSHELF_SLOT_4_OCCUPIED
	bu CHISELED_BOOKSHELF_SLOT_5_OCCUPIED
	bv DUSTED
	bw CRACKED
	c CONDITIONAL
	d DISARMED
	e DRAG
	f ENABLED
	g EXTENDED
	h EYE
	i FALLING
	j HANGING
	k HAS_BOTTLE_0
	l HAS_BOTTLE_1
	m HAS_BOTTLE_2
	n HAS_RECORD
	o HAS_BOOK
	p INVERTED
	q IN_WALL
	r LIT
	s LOCKED
	t OCCUPIED
	u OPEN
	v PERSISTENT
	w POWERED
	x SHORT
	y SIGNAL_FIRE
	z SNOWY
net/minecraft/world/level/block/state/properties/BlockPropertyAttachPosition net/minecraft/world/level/block/state/properties/AttachFace
	a FLOOR
	b WALL
	c CEILING
	d name
	e $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyAttachPosition; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyBambooSize net/minecraft/world/level/block/state/properties/BambooLeaves
	a NONE
	b SMALL
	c LARGE
	d name
	e $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyBambooSize; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyBedPart net/minecraft/world/level/block/state/properties/BedPart
	a HEAD
	b FOOT
	c name
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyBedPart; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyBellAttach net/minecraft/world/level/block/state/properties/BellAttachType
	a FLOOR
	b CEILING
	c SINGLE_WALL
	d DOUBLE_WALL
	e name
	f $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyBellAttach; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyChestType net/minecraft/world/level/block/state/properties/ChestType
	a SINGLE
	b LEFT
	c RIGHT
	d name
	e $VALUES
	a ()Lnet/minecraft/world/level/block/state/properties/BlockPropertyChestType; getOpposite
	b ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyChestType; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyComparatorMode net/minecraft/world/level/block/state/properties/ComparatorMode
	a COMPARE
	b SUBTRACT
	c name
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyComparatorMode; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyDoorHinge net/minecraft/world/level/block/state/properties/DoorHingeSide
	a LEFT
	b RIGHT
	c $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyDoorHinge; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyDoubleBlockHalf net/minecraft/world/level/block/state/properties/DoubleBlockHalf
	a UPPER
	b LOWER
	c $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyDoubleBlockHalf; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyHalf net/minecraft/world/level/block/state/properties/Half
	a TOP
	b BOTTOM
	c name
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyHalf; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyInstrument net/minecraft/world/level/block/state/properties/NoteBlockInstrument
	A $VALUES
	a HARP
	b BASEDRUM
	c SNARE
	d HAT
	e BASS
	f FLUTE
	g BELL
	h GUITAR
	i CHIME
	j XYLOPHONE
	k IRON_XYLOPHONE
	l COW_BELL
	m DIDGERIDOO
	n BIT
	o BANJO
	p PLING
	q ZOMBIE
	r SKELETON
	s CREEPER
	t DRAGON
	u WITHER_SKELETON
	v PIGLIN
	w CUSTOM_HEAD
	x name
	y soundEvent
	z type
	a ()Lnet/minecraft/core/Holder; getSoundEvent
	b ()Z isTunable
	c ()Ljava/lang/String; getSerializedName
	d ()Z hasCustomSound
	e ()Z worksAboveNoteBlock
	f ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyInstrument; $values
net/minecraft/world/level/block/state/properties/BlockPropertyPistonType net/minecraft/world/level/block/state/properties/PistonType
	a DEFAULT
	b STICKY
	c name
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyPistonType; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyRedstoneSide net/minecraft/world/level/block/state/properties/RedstoneSide
	a UP
	b SIDE
	c NONE
	d name
	e $VALUES
	a ()Z isConnected
	b ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyRedstoneSide; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertySlabType net/minecraft/world/level/block/state/properties/SlabType
	a TOP
	b BOTTOM
	c DOUBLE
	d name
	e $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertySlabType; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyStairsShape net/minecraft/world/level/block/state/properties/StairsShape
	a STRAIGHT
	b INNER_LEFT
	c INNER_RIGHT
	d OUTER_LEFT
	e OUTER_RIGHT
	f name
	g $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyStairsShape; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyStructureMode net/minecraft/world/level/block/state/properties/StructureMode
	a SAVE
	b LOAD
	c CORNER
	d DATA
	e name
	f displayName
	g $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	b ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyStructureMode; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition net/minecraft/world/level/block/state/properties/RailShape
	a NORTH_SOUTH
	b EAST_WEST
	c ASCENDING_EAST
	d ASCENDING_WEST
	e ASCENDING_NORTH
	f ASCENDING_SOUTH
	g SOUTH_EAST
	h SOUTH_WEST
	i NORTH_WEST
	j NORTH_EAST
	k name
	l $VALUES
	a ()Ljava/lang/String; getName
	b ()Z isAscending
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition; $values
net/minecraft/world/level/block/state/properties/BlockPropertyWallHeight net/minecraft/world/level/block/state/properties/WallSide
	a NONE
	b LOW
	c TALL
	d name
	e $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyWallHeight; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyWood net/minecraft/world/level/block/state/properties/WoodType
	a OAK
	b SPRUCE
	c BIRCH
	d ACACIA
	e CHERRY
	f JUNGLE
	g DARK_OAK
	h CRIMSON
	i WARPED
	j MANGROVE
	k BAMBOO
	l name
	m setType
	n soundType
	o hangingSignSoundType
	p fenceGateClose
	q fenceGateOpen
	r VALUES
	a ()Ljava/util/stream/Stream; values
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood; register
	b ()Ljava/lang/String; name
	c ()Lnet/minecraft/world/level/block/state/properties/BlockSetType; setType
	d ()Lnet/minecraft/world/level/block/SoundEffectType; soundType
	e ()Lnet/minecraft/world/level/block/SoundEffectType; hangingSignSoundType
	f ()Lnet/minecraft/sounds/SoundEffect; fenceGateClose
	g ()Lnet/minecraft/sounds/SoundEffect; fenceGateOpen
net/minecraft/world/level/block/state/properties/BlockStateBoolean net/minecraft/world/level/block/state/properties/BooleanProperty
	a values
	a ()Ljava/util/Collection; getPossibleValues
	a (Ljava/lang/Boolean;)Ljava/lang/String; getName
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean; create
	b ()I generateHashCode
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
net/minecraft/world/level/block/state/properties/BlockStateDirection net/minecraft/world/level/block/state/properties/DirectionProperty
	a (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/BlockStateDirection; create
	a (Ljava/lang/String;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/BlockStateDirection; create
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/BlockStateDirection; create
	a (Ljava/lang/String;[Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/properties/BlockStateDirection; create
net/minecraft/world/level/block/state/properties/BlockStateEnum net/minecraft/world/level/block/state/properties/EnumProperty
	a values
	b names
	a ()Ljava/util/Collection; getPossibleValues
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Ljava/lang/Enum;)Ljava/lang/String; getName
	a (Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/world/level/block/state/properties/BlockStateEnum; create
	a (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/BlockStateEnum; create
	a (Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/BlockStateEnum; create
	a (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lnet/minecraft/world/level/block/state/properties/BlockStateEnum; create
	b ()I generateHashCode
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
net/minecraft/world/level/block/state/properties/BlockStateInteger net/minecraft/world/level/block/state/properties/IntegerProperty
	a values
	b min
	c max
	a ()Ljava/util/Collection; getPossibleValues
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Ljava/lang/Integer;)Ljava/lang/String; getName
	a (Ljava/lang/String;II)Lnet/minecraft/world/level/block/state/properties/BlockStateInteger; create
	b ()I generateHashCode
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
net/minecraft/world/level/block/state/properties/IBlockState net/minecraft/world/level/block/state/properties/Property
	a clazz
	b name
	c hashCode
	d codec
	e valueCodec
	a ()Ljava/util/Collection; getPossibleValues
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/block/state/IBlockDataHolder;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; parseValue
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Lnet/minecraft/world/level/block/state/IBlockDataHolder;)Ldgm$a; value
	b ()I generateHashCode
	b (Ljava/lang/Comparable;)Ldgm$a; value
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	c ()Ljava/util/stream/Stream; getAllValues
	d ()Lcom/mojang/serialization/Codec; codec
	e ()Lcom/mojang/serialization/Codec; valueCodec
	f ()Ljava/lang/String; getName
	g ()Ljava/lang/Class; getValueClass
net/minecraft/world/level/border/IWorldBorderListener net/minecraft/world/level/border/BorderChangeListener
	a (Lnet/minecraft/world/level/border/WorldBorder;D)V onBorderSizeSet
	a (Lnet/minecraft/world/level/border/WorldBorder;DD)V onBorderCenterSet
	a (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V onBorderSizeLerping
	a (Lnet/minecraft/world/level/border/WorldBorder;I)V onBorderSetWarningTime
	b (Lnet/minecraft/world/level/border/WorldBorder;D)V onBorderSetDamagePerBlock
	b (Lnet/minecraft/world/level/border/WorldBorder;I)V onBorderSetWarningBlocks
	c (Lnet/minecraft/world/level/border/WorldBorder;D)V onBorderSetDamageSafeZOne
net/minecraft/world/level/chunk/Chunk net/minecraft/world/level/chunk/LevelChunk
	n LOGGER
	o NULL_TICKER
	p tickersInLevel
	q loaded
	r level
	s fullStatus
	t postLoad
	u gameEventListenerRegistrySections
	v blockTicks
	w fluidTicks
	C ()Z isEmpty
	D ()Lnet/minecraft/server/level/FullChunkStatus; getFullStatus
	E ()V runPostLoad
	F ()Lnet/minecraft/world/level/World; getLevel
	G ()Ljava/util/Map; getBlockEntities
	H ()V postProcessGeneration
	I ()V clearAllBlockEntities
	J ()V registerAllBlockEntitiesAfterLevelLoad
	K ()Z isInLevel
	a (I)Lnet/minecraft/world/level/gameevent/GameEventListenerRegistry; getListenerRegistry
	a (III)Lnet/minecraft/world/level/material/Fluid; getFluidState
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/block/entity/TileEntity; promotePendingBlockEntity
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Lnet/minecraft/world/level/block/state/IBlockData; setBlockState
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/chunk/Chunk$EnumTileEntityState;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	a (Lnet/minecraft/network/PacketDataSerializer;)V replaceBiomes
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/function/Consumer;)V replaceWithPacketData
	a (Lnet/minecraft/server/level/WorldServer;)V registerTickContainerInLevel
	a (Lnet/minecraft/world/entity/Entity;)V addEntity
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/server/level/WorldServer;)V removeGameEventListener
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/TickingBlockEntity; createTicker
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b (Ljava/util/function/Supplier;)V setFullStatus
	b (Lnet/minecraft/server/level/WorldServer;)V unregisterTickContainerFromLevel
	b (Lnet/minecraft/world/level/block/entity/TileEntity;)V addAndRegisterBlockEntity
	b (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/server/level/WorldServer;)V addGameEventListener
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c (I)V removeGameEventListenerRegistry
	c (J)V unpackTicks
	c (Lnet/minecraft/world/level/block/entity/TileEntity;)V updateBlockEntityTicker
	c (Z)V setLoaded
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	d (Lnet/minecraft/core/BlockPosition;)V removeBlockEntity
	g (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/nbt/NBTTagCompound; getBlockEntityNbtForSaving
	j ()Lnet/minecraft/world/level/chunk/ChunkStatus; getStatus
	j (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; createBlockEntity
	k (Lnet/minecraft/core/BlockPosition;)Z isTicking
	l (Lnet/minecraft/core/BlockPosition;)V removeBlockEntityTicker
	o ()Lnet/minecraft/world/ticks/TickContainerAccess; getBlockTicks
	p ()Lnet/minecraft/world/ticks/TickContainerAccess; getFluidTicks
	q ()Ldhf$a; getTicksForSerialization
net/minecraft/world/level/chunk/Chunk$EnumTileEntityState net/minecraft/world/level/chunk/LevelChunk$EntityCreationType
	a IMMEDIATE
	b QUEUED
	c CHECK
	d $VALUES
	a ()[Lnet/minecraft/world/level/chunk/Chunk$EnumTileEntityState; $values
net/minecraft/world/level/chunk/ChunkConverter net/minecraft/world/level/chunk/UpgradeData
	a EMPTY
	b LOGGER
	c TAG_INDICES
	d DIRECTIONS
	e sides
	f neighborBlockTicks
	g neighborFluidTicks
	h index
	i MAP
	j CHUNKY_FIXERS
	a ()Z isEmpty
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/List;)V loadTicks
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateState
	a (Lnet/minecraft/world/level/chunk/Chunk;)V upgrade
	a (Lnet/minecraft/world/level/chunk/Chunk;Lnet/minecraft/core/EnumDirection8;)V upgradeSides
	b ()Lnet/minecraft/nbt/NBTTagCompound; write
	b (Lnet/minecraft/world/level/chunk/Chunk;)V upgradeInside
net/minecraft/world/level/chunk/ChunkConverter$Type net/minecraft/world/level/chunk/UpgradeData$BlockFixers
	a BLACKLIST
	b DEFAULT
	c CHEST
	d LEAVES
	e STEM_BLOCK
	f DIRECTIONS
	g $VALUES
	a ()[Lnet/minecraft/world/level/chunk/ChunkConverter$Type; $values
net/minecraft/world/level/chunk/ChunkEmpty net/minecraft/world/level/chunk/EmptyLevelChunk
	n biome
	C ()Z isEmpty
	D ()Lnet/minecraft/server/level/FullChunkStatus; getFullStatus
	a (II)Z isYSpaceEmpty
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Lnet/minecraft/world/level/block/state/IBlockData; setBlockState
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/chunk/Chunk$EnumTileEntityState;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)V setBlockEntity
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b (Lnet/minecraft/world/level/block/entity/TileEntity;)V addAndRegisterBlockEntity
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/core/BlockPosition;)V removeBlockEntity
	h (Lnet/minecraft/core/BlockPosition;)I getLightEmission
net/minecraft/world/level/chunk/ChunkSection net/minecraft/world/level/chunk/LevelChunkSection
	a SECTION_WIDTH
	b SECTION_HEIGHT
	c SECTION_SIZE
	d BIOME_CONTAINER_BITS
	e nonEmptyBlockCount
	f tickingBlockCount
	g tickingFluidCount
	h states
	i biomes
	a ()V acquire
	a (III)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	a (IIILnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; setBlockState
	a (IIILnet/minecraft/world/level/block/state/IBlockData;Z)Lnet/minecraft/world/level/block/state/IBlockData; setBlockState
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/network/PacketDataSerializer;)V read
	a (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;III)V fillBiomesFromNoise
	b ()V release
	b (III)Lnet/minecraft/world/level/material/Fluid; getFluidState
	b (Lnet/minecraft/network/PacketDataSerializer;)V readBiomes
	c ()Z hasOnlyAir
	c (III)Lnet/minecraft/core/Holder; getNoiseBiome
	c (Lnet/minecraft/network/PacketDataSerializer;)V write
	d ()Z isRandomlyTicking
	e ()Z isRandomlyTickingBlocks
	f ()Z isRandomlyTickingFluids
	g ()V recalcBlockCounts
	h ()Lnet/minecraft/world/level/chunk/DataPaletteBlock; getStates
	i ()Lnet/minecraft/world/level/chunk/PalettedContainerRO; getBiomes
	j ()I getSerializedSize
net/minecraft/world/level/chunk/ChunkStatus$Type net/minecraft/world/level/chunk/ChunkStatus$ChunkType
	a PROTOCHUNK
	b LEVELCHUNK
	c $VALUES
	a ()[Lnet/minecraft/world/level/chunk/ChunkStatus$Type; $values
net/minecraft/world/level/chunk/DataPalette net/minecraft/world/level/chunk/Palette
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/network/PacketDataSerializer;)V read
	b ()I getSize
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	c ()Lnet/minecraft/world/level/chunk/DataPalette; copy
net/minecraft/world/level/chunk/DataPaletteBlock net/minecraft/world/level/chunk/PalettedContainer
	a MIN_PALETTE_BITS
	b dummyPaletteResize
	c registry
	d data
	e strategy
	f threadingDetector
	a ()V acquire
	a (I)Ljava/lang/Object; get
	a (III)Ljava/lang/Object; get
	a (IIILjava/lang/Object;)Ljava/lang/Object; getAndSet
	a (ILjava/lang/Object;)Ljava/lang/Object; getAndSet
	a (Ldhy$b;)V count
	a (Ldhy$c;I)Ldhy$c; createOrReuseData
	a (Ljava/util/function/Consumer;)V getAll
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/core/Registry;Lcom/mojang/serialization/Codec;Ldhy$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; codecRW
	a (Lnet/minecraft/core/Registry;Lcom/mojang/serialization/Codec;Ldhy$d;Ljava/lang/Object;Ldhz$b;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/core/Registry;Ldhy$d;)Ldhz$a; pack
	a (Lnet/minecraft/core/Registry;Ldhy$d;Ldhz$a;)Lcom/mojang/serialization/DataResult; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)V read
	a ([ILjava/util/function/IntUnaryOperator;)V swapPalette
	b ()V release
	b (IIILjava/lang/Object;)Ljava/lang/Object; getAndSetUnchecked
	b (ILjava/lang/Object;)V set
	b (Lnet/minecraft/core/Registry;Lcom/mojang/serialization/Codec;Ldhy$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; codecRO
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	c ()I getSerializedSize
	c (IIILjava/lang/Object;)V set
	d ()Lnet/minecraft/world/level/chunk/DataPaletteBlock; copy
	e ()Lnet/minecraft/world/level/chunk/DataPaletteBlock; recreate
net/minecraft/world/level/chunk/DataPaletteExpandable net/minecraft/world/level/chunk/PaletteResize
net/minecraft/world/level/chunk/DataPaletteGlobal net/minecraft/world/level/chunk/GlobalPalette
	a registry
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (ILnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/DataPaletteExpandable;Ljava/util/List;)Lnet/minecraft/world/level/chunk/DataPalette; create
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/network/PacketDataSerializer;)V read
	b ()I getSize
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	c ()Lnet/minecraft/world/level/chunk/DataPalette; copy
net/minecraft/world/level/chunk/DataPaletteHash net/minecraft/world/level/chunk/HashMapPalette
	a registry
	b values
	c resizeHandler
	d bits
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (ILnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/DataPaletteExpandable;Ljava/util/List;)Lnet/minecraft/world/level/chunk/DataPalette; create
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/network/PacketDataSerializer;)V read
	b ()I getSize
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	c ()Lnet/minecraft/world/level/chunk/DataPalette; copy
	d ()Ljava/util/List; getEntries
net/minecraft/world/level/chunk/DataPaletteLinear net/minecraft/world/level/chunk/LinearPalette
	a registry
	b values
	c resizeHandler
	d bits
	e size
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (ILnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/DataPaletteExpandable;Ljava/util/List;)Lnet/minecraft/world/level/chunk/DataPalette; create
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/network/PacketDataSerializer;)V read
	b ()I getSize
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	c ()Lnet/minecraft/world/level/chunk/DataPalette; copy
net/minecraft/world/level/chunk/IChunkAccess net/minecraft/world/level/chunk/ChunkAccess
	a NO_FILLED_SECTION
	b postProcessing
	c unsaved
	d chunkPos
	e noiseChunk
	f upgradeData
	g blendingData
	h heightmaps
	i skyLightSources
	j pendingBlockEntities
	k blockEntities
	l levelHeightAccessor
	m sections
	n LOGGER
	o EMPTY_REFERENCE_SET
	p isLightCorrect
	q inhabitedTime
	r carverBiomeSettings
	s structureStarts
	t structuresRefences
	A ()V initializeLightSources
	B ()Lnet/minecraft/world/level/lighting/ChunkSkyLightSources; getSkyLightSources
	H_ ()I getMinBuildHeight
	I_ ()I getHeight
	a ()I getHighestFilledSectionIndex
	a (I)Lnet/minecraft/world/level/gameevent/GameEventListenerRegistry; getListenerRegistry
	a (II)Z isYSpaceEmpty
	a (J)V incrementInhabitedTime
	a (Ljava/util/Map;)V setAllStarts
	a (Ljava/util/function/BiConsumer;)V findBlockLightSources
	a (Ljava/util/function/Function;)Lnet/minecraft/world/level/levelgen/NoiseChunk; getOrCreateNoiseChunk
	a (Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V findBlocks
	a (Ljava/util/function/Supplier;)Lnet/minecraft/world/level/biome/BiomeSettingsGeneration; carverBiome
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Lnet/minecraft/world/level/block/state/IBlockData; setBlockState
	a (Lnet/minecraft/core/IRegistry;[Lnet/minecraft/world/level/chunk/ChunkSection;)V replaceMissingSections
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/world/entity/Entity;)V addEntity
	a (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;)V fillBiomesFromNoise
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;)Lnet/minecraft/world/level/levelgen/HeightMap; getOrCreateHeightmapUnprimed
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)V setBlendingData
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStartForStructure
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V addReferenceForStructure
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V setStartForStructure
	a (SI)V addPackedPostProcess
	a (Z)V setUnsaved
	a ([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList; getOrCreateOffsetList
	b ()I getHighestSectionPosition
	b (I)Lnet/minecraft/world/level/chunk/ChunkSection; getSection
	b (J)V setInhabitedTime
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/world/level/levelgen/HeightMap$Type;)Z hasPrimedHeightmap
	b (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForStructure
	b (Z)V setLightCorrect
	c ()Ljava/util/Set; getBlockEntitiesPos
	d ()[Lnet/minecraft/world/level/chunk/ChunkSection; getSections
	d (Lnet/minecraft/core/BlockPosition;)V removeBlockEntity
	e ()Ljava/util/Collection; getHeightmaps
	e (Lnet/minecraft/core/BlockPosition;)V markPosForPostprocessing
	f ()Lnet/minecraft/world/level/ChunkCoordIntPair; getPos
	f (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/nbt/NBTTagCompound; getBlockEntityNbt
	g ()Ljava/util/Map; getAllStarts
	g (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/nbt/NBTTagCompound; getBlockEntityNbtForSaving
	h ()Ljava/util/Map; getAllReferences
	i ()Z isUnsaved
	j ()Lnet/minecraft/world/level/chunk/ChunkStatus; getStatus
	k ()Lnet/minecraft/world/level/chunk/ChunkStatus; getHighestGeneratedStatus
	n ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	o ()Lnet/minecraft/world/ticks/TickContainerAccess; getBlockTicks
	p ()Lnet/minecraft/world/ticks/TickContainerAccess; getFluidTicks
	q ()Ldhf$a; getTicksForSerialization
	r ()Lnet/minecraft/world/level/chunk/ChunkConverter; getUpgradeData
	s ()Z isOldNoiseGeneration
	t ()Lnet/minecraft/world/level/levelgen/blending/BlendingData; getBlendingData
	u ()J getInhabitedTime
	v ()Z isLightCorrect
	w ()Z hasAnyStructureReferences
	x ()Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; getBelowZeroRetrogen
	y ()Z isUpgrading
	z ()Lnet/minecraft/world/level/LevelHeightAccessor; getHeightAccessorForGeneration
net/minecraft/world/level/chunk/IChunkProvider net/minecraft/world/level/chunk/ChunkSource
	a (II)Lnet/minecraft/world/level/chunk/Chunk; getChunkNow
	a (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (IIZ)Lnet/minecraft/world/level/chunk/Chunk; getChunk
	a (Ljava/util/function/BooleanSupplier;Z)V tick
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V updateChunkForced
	a (ZZ)V setSpawnSettings
	b (II)Z hasChunk
	c (II)Lnet/minecraft/world/level/chunk/LightChunk; getChunkForLighting
	e ()Ljava/lang/String; gatherStats
	j ()I getLoadedChunksCount
	p ()Lnet/minecraft/world/level/lighting/LevelLightEngine; getLightEngine
net/minecraft/world/level/chunk/ILightAccess net/minecraft/world/level/chunk/LightChunkGetter
	a (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/SectionPosition;)V onLightUpdate
	c (II)Lnet/minecraft/world/level/chunk/LightChunk; getChunkForLighting
	q ()Lnet/minecraft/world/level/IBlockAccess; getLevel
net/minecraft/world/level/chunk/NibbleArray net/minecraft/world/level/chunk/DataLayer
	a LAYER_COUNT
	b LAYER_SIZE
	c SIZE
	d data
	e NIBBLE_SIZE
	f defaultValue
	a ()[B getData
	a (I)V fill
	a (II)V set
	a (III)I get
	a (IIII)V set
	b ()Lnet/minecraft/world/level/chunk/NibbleArray; copy
	b (I)Ljava/lang/String; layerToString
	b (III)I getIndex
	c ()Z isDefinitelyHomogenous
	c (I)Z isDefinitelyFilledWith
	d ()Z isEmpty
	d (I)I get
	e (I)I getNibbleIndex
	f (I)I getByteIndex
	g (I)B packFilled
net/minecraft/world/level/chunk/ProtoChunkExtension net/minecraft/world/level/chunk/ImposterProtoChunk
	n wrapped
	o allowWrites
	A ()V initializeLightSources
	B ()Lnet/minecraft/world/level/lighting/ChunkSkyLightSources; getSkyLightSources
	C ()Lnet/minecraft/world/level/chunk/Chunk; getWrapped
	M ()I getMaxLightLevel
	a (Ljava/util/Map;)V setAllStarts
	a (Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V findBlocks
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Lnet/minecraft/world/level/block/state/IBlockData; setBlockState
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/world/entity/Entity;)V addEntity
	a (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;)V fillBiomesFromNoise
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;)V setStatus
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;)Lnet/minecraft/world/level/levelgen/HeightMap; getOrCreateHeightmapUnprimed
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)Lnet/minecraft/world/level/chunk/CarvingMask; getCarvingMask
	a (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)V setBlendingData
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStartForStructure
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V addReferenceForStructure
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V setStartForStructure
	a (Z)V setUnsaved
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b (I)Lnet/minecraft/world/level/chunk/ChunkSection; getSection
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)Lnet/minecraft/world/level/chunk/CarvingMask; getOrCreateCarvingMask
	b (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForStructure
	b (Z)V setLightCorrect
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c (Lnet/minecraft/world/level/levelgen/HeightMap$Type;)Lnet/minecraft/world/level/levelgen/HeightMap$Type; fixType
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	d ()[Lnet/minecraft/world/level/chunk/ChunkSection; getSections
	d (Lnet/minecraft/core/BlockPosition;)V removeBlockEntity
	e (Lnet/minecraft/core/BlockPosition;)V markPosForPostprocessing
	f ()Lnet/minecraft/world/level/ChunkCoordIntPair; getPos
	f (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/nbt/NBTTagCompound; getBlockEntityNbt
	g ()Ljava/util/Map; getAllStarts
	g (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/nbt/NBTTagCompound; getBlockEntityNbtForSaving
	h ()Ljava/util/Map; getAllReferences
	i ()Z isUnsaved
	j ()Lnet/minecraft/world/level/chunk/ChunkStatus; getStatus
	o ()Lnet/minecraft/world/ticks/TickContainerAccess; getBlockTicks
	p ()Lnet/minecraft/world/ticks/TickContainerAccess; getFluidTicks
	q ()Ldhf$a; getTicksForSerialization
	t ()Lnet/minecraft/world/level/levelgen/blending/BlendingData; getBlendingData
	v ()Z isLightCorrect
net/minecraft/world/level/chunk/storage/ChunkRegionLoader net/minecraft/world/level/chunk/storage/ChunkSerializer
	a X_POS_TAG
	b Z_POS_TAG
	c HEIGHTMAPS_TAG
	d IS_LIGHT_ON_TAG
	e SECTIONS_TAG
	f BLOCK_LIGHT_TAG
	g SKY_LIGHT_TAG
	h BLOCK_STATE_CODEC
	i LOGGER
	j TAG_UPGRADE_DATA
	k BLOCK_TICKS_TAG
	l FLUID_TICKS_TAG
	a (Lnet/minecraft/core/IRegistry;)Lcom/mojang/serialization/Codec; makeBiomeCodec
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/Map; unpackStructureReferences
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/chunk/ChunkStatus$Type; getChunkTypeFromTag
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagList; getListOfCompoundsOrNull
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/nbt/NBTTagCompound;)Ldhq$c; postLoadChunk
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/nbt/NBTTagCompound;Ldhf$a;)V saveTicks
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/ai/village/poi/VillagePlace;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/chunk/ProtoChunk; read
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/IChunkAccess;)Lnet/minecraft/nbt/NBTTagCompound; write
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/String;)V logErrors
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;J)Ljava/util/Map; unpackStructureStart
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/world/level/ChunkCoordIntPair;Ljava/util/Map;Ljava/util/Map;)Lnet/minecraft/nbt/NBTTagCompound; packStructureData
	a ([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lnet/minecraft/nbt/NBTTagList; packOffsets
net/minecraft/world/level/chunk/storage/IChunkLoader net/minecraft/world/level/chunk/storage/ChunkStorage
	a worker
	b legacyStructureHandler
	d LAST_MONOLYTH_STRUCTURE_DATA_VERSION
	e fixerUpper
	a (Lnet/minecraft/nbt/NBTTagCompound;)I getVersion
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/resources/ResourceKey;Ljava/util/Optional;)V injectDatafixingContext
	a (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;)Lnet/minecraft/world/level/levelgen/structure/PersistentStructureLegacy; getLegacyStructureHandler
	a (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/Optional;)Lnet/minecraft/nbt/NBTTagCompound; upgradeChunkTag
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/NBTTagCompound;)V write
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;I)Z isOldChunkAround
	e (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; read
	o ()V flushWorker
	p ()Lnet/minecraft/world/level/chunk/storage/ChunkScanAccess; chunkScanner
net/minecraft/world/level/chunk/storage/RegionFileBitSet net/minecraft/world/level/chunk/storage/RegionBitmap
	a used
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getUsed
	a (I)I allocate
	a (II)V force
	b (II)V free
net/minecraft/world/level/chunk/storage/RegionFileCache net/minecraft/world/level/chunk/storage/RegionFileStorage
	a ANVIL_EXTENSION
	b MAX_CACHE_SIZE
	c regionCache
	d folder
	e sync
	a ()V flush
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/nbt/NBTTagCompound; read
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/NBTTagCompound;)V write
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/StreamTagVisitor;)V scanChunk
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/world/level/chunk/storage/RegionFile; getRegionFile
net/minecraft/world/level/chunk/storage/RegionFileCompression net/minecraft/world/level/chunk/storage/RegionFileVersion
	a VERSION_GZIP
	b VERSION_DEFLATE
	c VERSION_NONE
	d VERSIONS
	e id
	f inputWrapper
	g outputWrapper
	a ()I getId
	a (I)Lnet/minecraft/world/level/chunk/storage/RegionFileCompression; fromId
	a (Ljava/io/InputStream;)Ljava/io/InputStream; wrap
	a (Ljava/io/OutputStream;)Ljava/io/OutputStream; wrap
	a (Lnet/minecraft/world/level/chunk/storage/RegionFileCompression;)Lnet/minecraft/world/level/chunk/storage/RegionFileCompression; register
	b (I)Z isValidVersion
net/minecraft/world/level/chunk/storage/RegionFileSection net/minecraft/world/level/chunk/storage/SectionStorage
	a LOGGER
	b SECTIONS_TAG
	c levelHeightAccessor
	d worker
	e storage
	f dirty
	g codec
	h factory
	i fixerUpper
	j type
	k registryAccess
	a ()Z hasWork
	a (J)V setDirty
	a (Lcom/mojang/serialization/Dynamic;)I getVersion
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V flush
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)J getKey
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; writeColumn
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V readColumn
	b (J)V onSectionLoad
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)V readColumn
	c (J)Ljava/util/Optional; get
	c (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; tryRead
	d (J)Ljava/util/Optional; getOrLoad
	d (Lnet/minecraft/world/level/ChunkCoordIntPair;)V writeColumn
	e (J)Z outsideStoredRange
	f (J)Ljava/lang/Object; getOrCreate
net/minecraft/world/level/dimension/DimensionManager net/minecraft/world/level/dimension/DimensionType
	a BITS_FOR_Y
	b MIN_HEIGHT
	c Y_SIZE
	d MAX_Y
	e MIN_Y
	f WAY_ABOVE_MAX_Y
	g WAY_BELOW_MIN_Y
	h DIRECT_CODEC
	i MOON_BRIGHTNESS_PER_PHASE
	j CODEC
	k fixedTime
	l hasSkyLight
	m hasCeiling
	n ultraWarm
	o natural
	p coordinateScale
	q bedWorks
	r respawnAnchorWorks
	s minY
	t height
	u logicalHeight
	v infiniburn
	w effectsLocation
	x ambientLight
	y monsterSettings
	z MOON_PHASES
	a ()Z hasFixedTime
	a (J)F timeOfDay
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; parseLegacy
	a (Lnet/minecraft/resources/ResourceKey;Ljava/nio/file/Path;)Ljava/nio/file/Path; getStorageFolder
	a (Lnet/minecraft/world/level/dimension/DimensionManager;Lnet/minecraft/world/level/dimension/DimensionManager;)D getTeleportationScale
	b ()Z piglinSafe
	b (J)I moonPhase
	c ()Z hasRaids
	d ()Lnet/minecraft/util/valueproviders/IntProvider; monsterSpawnLightTest
	e ()I monsterSpawnBlockLightLimit
	f ()Ljava/util/OptionalLong; fixedTime
	g ()Z hasSkyLight
	h ()Z hasCeiling
	i ()Z ultraWarm
	j ()Z natural
	k ()D coordinateScale
	l ()Z bedWorks
	m ()Z respawnAnchorWorks
	n ()I minY
	o ()I height
	p ()I logicalHeight
	q ()Lnet/minecraft/tags/TagKey; infiniburn
	r ()Lnet/minecraft/resources/MinecraftKey; effectsLocation
	s ()F ambientLight
	t ()Ldis$a; monsterSettings
net/minecraft/world/level/dimension/WorldDimension net/minecraft/world/level/dimension/LevelStem
	a CODEC
	b OVERWORLD
	c NETHER
	d END
	e type
	f generator
	a ()Lnet/minecraft/core/Holder; type
	b ()Lnet/minecraft/world/level/chunk/ChunkGenerator; generator
net/minecraft/world/level/dimension/end/EnderDragonBattle net/minecraft/world/level/dimension/end/EndDragonFight
	A respawnTime
	B respawnCrystals
	a TIME_BETWEEN_PLAYER_SCANS
	b ARENA_TICKET_LEVEL
	c DRAGON_SPAWN_Y
	d LOGGER
	e MAX_TICKS_BEFORE_DRAGON_RESPAWN
	f TIME_BETWEEN_CRYSTAL_SCANS
	g ARENA_SIZE_CHUNKS
	h GATEWAY_COUNT
	i GATEWAY_DISTANCE
	j validPlayer
	k dragonEvent
	l level
	m origin
	n gateways
	o exitPortalPattern
	p ticksSinceDragonSeen
	q crystalsAlive
	r ticksSinceCrystalsScanned
	s ticksSinceLastPlayerScan
	t dragonKilled
	u previouslyKilled
	v skipArenaLoadedCheck
	w dragonUUID
	x needsStateScanning
	y portalLocation
	z respawnStage
	a ()V skipArenaLoadedCheck
	a (Ljava/util/List;)V respawnDragon
	a (Lnet/minecraft/core/BlockPosition;)V spawnNewGateway
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;Lnet/minecraft/world/damagesource/DamageSource;)V onCrystalDestroyed
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon;)V setDragonKilled
	a (Lnet/minecraft/world/level/dimension/end/EnumDragonRespawn;)V setRespawnStage
	a (Z)V spawnExitPortal
	b ()Ldiv$a; saveData
	b (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon;)V updateDragon
	c ()V tick
	d ()V removeAllGateways
	e ()I getCrystalsAlive
	f ()Z hasPreviouslyKilledDragon
	g ()V tryRespawn
	h ()V resetSpikeCrystals
	i ()Ljava/util/UUID; getDragonUUID
	j ()V scanState
	k ()V findOrCreateDragon
	l ()Z hasActiveExitPortal
	m ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection; findExitPortal
	n ()Z isArenaLoaded
	o ()V updatePlayers
	p ()V updateCrystalCount
	q ()V spawnNewGateway
	r ()Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon; createNewDragon
net/minecraft/world/level/dimension/end/EnumDragonRespawn net/minecraft/world/level/dimension/end/DragonRespawnAnimation
	a START
	b PREPARING_TO_SUMMON_PILLARS
	c SUMMONING_PILLARS
	d SUMMONING_DRAGON
	e END
	f $VALUES
	a ()[Lnet/minecraft/world/level/dimension/end/EnumDragonRespawn; $values
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/dimension/end/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/core/BlockPosition;)V tick
net/minecraft/world/level/levelgen/ChunkGeneratorAbstract net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator
	c CODEC
	d AIR
	e settings
	f globalFluidPicker
	a ()Lcom/mojang/serialization/Codec; codec
	a (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/BlockColumn; getBaseColumn
	a (IILnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I getBaseHeight
	a (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPosition;)V addDebugScreenInfo
	a (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; createBiomes
	a (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; fillFromNoise
	a (Lnet/minecraft/resources/ResourceKey;)Z stable
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;)V spawnOriginalMobs
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)V applyCarvers
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/IChunkAccess;)V buildSurface
	a (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;IILorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/function/Predicate;)Ljava/util/OptionalInt; iterateNoiseColumn
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/levelgen/NoiseChunk; createNoiseChunk
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/core/IRegistry;Lnet/minecraft/world/level/levelgen/blending/Blender;)V buildSurface
	a (Lnet/minecraft/world/level/levelgen/GeneratorSettingBase;)Ldke$a; createFluidPicker
	a (Lnet/minecraft/world/level/levelgen/NoiseChunk;IIILnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; debugPreliminarySurfaceLevel
	a (Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/IChunkAccess;II)Lnet/minecraft/world/level/chunk/IChunkAccess; doFill
	a (Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)V doCreateBiomes
	d ()I getGenDepth
	e ()I getSeaLevel
	f ()I getMinY
	g ()Lnet/minecraft/core/Holder; generatorSettings
net/minecraft/world/level/levelgen/ChunkProviderDebug net/minecraft/world/level/levelgen/DebugLevelSource
	c CODEC
	d AIR
	e BARRIER
	f HEIGHT
	g BARRIER_HEIGHT
	h BLOCK_MARGIN
	i ALL_BLOCKS
	j GRID_WIDTH
	k GRID_HEIGHT
	a ()Lcom/mojang/serialization/Codec; codec
	a (II)Lnet/minecraft/world/level/block/state/IBlockData; getBlockStateFor
	a (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/BlockColumn; getBaseColumn
	a (IILnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I getBaseHeight
	a (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPosition;)V addDebugScreenInfo
	a (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; fillFromNoise
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;)V spawnOriginalMobs
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)V applyCarvers
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/IChunkAccess;)V buildSurface
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/StructureManager;)V applyBiomeDecoration
	d ()I getGenDepth
	e ()I getSeaLevel
	f ()I getMinY
net/minecraft/world/level/levelgen/ChunkProviderFlat net/minecraft/world/level/levelgen/FlatLevelSource
	c CODEC
	d settings
	a ()Lcom/mojang/serialization/Codec; codec
	a (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/BlockColumn; getBaseColumn
	a (IILnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I getBaseHeight
	a (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPosition;)V addDebugScreenInfo
	a (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; fillFromNoise
	a (Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/level/levelgen/RandomState;J)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; createState
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;)V spawnOriginalMobs
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)V applyCarvers
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/IChunkAccess;)V buildSurface
	a (Lnet/minecraft/world/level/LevelHeightAccessor;)I getSpawnHeight
	d ()I getGenDepth
	e ()I getSeaLevel
	f ()I getMinY
	g ()Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat; settings
net/minecraft/world/level/levelgen/GeneratorSettingBase net/minecraft/world/level/levelgen/NoiseGeneratorSettings
	a DIRECT_CODEC
	b CODEC
	c OVERWORLD
	d LARGE_BIOMES
	e AMPLIFIED
	f NETHER
	g END
	h CAVES
	i FLOATING_ISLANDS
	j noiseSettings
	k defaultBlock
	l defaultFluid
	m noiseRouter
	n surfaceRule
	o spawnTarget
	p seaLevel
	q disableMobGeneration
	r aquifersEnabled
	s oreVeinsEnabled
	t useLegacyRandomSource
	a ()Z disableMobGeneration
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;ZZ)Lnet/minecraft/world/level/levelgen/GeneratorSettingBase; overworld
	b ()Z isAquifersEnabled
	b (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/GeneratorSettingBase; end
	c ()Z oreVeinsEnabled
	c (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/GeneratorSettingBase; nether
	d ()Ldlr$a; getRandomSource
	d (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/GeneratorSettingBase; caves
	e ()Lnet/minecraft/world/level/levelgen/GeneratorSettingBase; dummy
	e (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/GeneratorSettingBase; floatingIslands
	f ()Lnet/minecraft/world/level/levelgen/NoiseSettings; noiseSettings
	g ()Lnet/minecraft/world/level/block/state/IBlockData; defaultBlock
	h ()Lnet/minecraft/world/level/block/state/IBlockData; defaultFluid
	i ()Lnet/minecraft/world/level/levelgen/NoiseRouter; noiseRouter
	j ()Ldlj$o; surfaceRule
	k ()Ljava/util/List; spawnTarget
	l ()I seaLevel
	m ()Z aquifersEnabled
	n ()Z useLegacyRandomSource
net/minecraft/world/level/levelgen/GeneratorSettings net/minecraft/world/level/levelgen/WorldGenSettings
	a CODEC
	b options
	c dimensions
	a ()Lnet/minecraft/world/level/levelgen/WorldOptions; options
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/levelgen/WorldOptions;Lnet/minecraft/core/IRegistryCustom;)Lcom/mojang/serialization/DataResult; encode
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/levelgen/WorldOptions;Lnet/minecraft/world/level/levelgen/WorldDimensions;)Lcom/mojang/serialization/DataResult; encode
	b ()Lnet/minecraft/world/level/levelgen/WorldDimensions; dimensions
net/minecraft/world/level/levelgen/HeightMap net/minecraft/world/level/levelgen/Heightmap
	a LOGGER
	b NOT_AIR
	c MATERIAL_MOTION_BLOCKING
	d data
	e isOpaque
	f chunk
	a ()[J getRawData
	a (I)I getFirstAvailable
	a (II)I getFirstAvailable
	a (III)V setHeight
	a (IIILnet/minecraft/world/level/block/state/IBlockData;)Z update
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/Set;)V primeHeightmaps
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/HeightMap$Type;[J)V setRawData
	b (II)I getHighestTaken
	c (II)I getIndex
net/minecraft/world/level/levelgen/HeightMap$Type net/minecraft/world/level/levelgen/Heightmap$Types
	a WORLD_SURFACE_WG
	b WORLD_SURFACE
	c OCEAN_FLOOR_WG
	d OCEAN_FLOOR
	e MOTION_BLOCKING
	f MOTION_BLOCKING_NO_LEAVES
	g CODEC
	h serializationKey
	i usage
	j isOpaque
	k $VALUES
	a ()Ljava/lang/String; getSerializationKey
	b ()Z sendToClient
	c ()Ljava/lang/String; getSerializedName
	d ()Z keepAfterWorldgen
	e ()Ljava/util/function/Predicate; isOpaque
	f ()[Lnet/minecraft/world/level/levelgen/HeightMap$Type; $values
net/minecraft/world/level/levelgen/HeightMap$Use net/minecraft/world/level/levelgen/Heightmap$Usage
	a WORLDGEN
	b LIVE_WORLD
	c CLIENT
	d $VALUES
	a ()[Lnet/minecraft/world/level/levelgen/HeightMap$Use; $values
net/minecraft/world/level/levelgen/MobSpawnerPatrol net/minecraft/world/level/levelgen/PatrolSpawner
	a nextTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Z)Z spawnPatrolMember
	a (Lnet/minecraft/server/level/WorldServer;ZZ)I tick
net/minecraft/world/level/levelgen/MobSpawnerPhantom net/minecraft/world/level/levelgen/PhantomSpawner
	a nextTick
	a (Lnet/minecraft/server/level/WorldServer;ZZ)I tick
net/minecraft/world/level/levelgen/SeededRandom net/minecraft/world/level/levelgen/WorldgenRandom
	d randomSource
	e count
	a (IIJJ)Lnet/minecraft/util/RandomSource; seedSlimeChunk
	a (JII)J setDecorationSeed
	a (JIII)V setLargeFeatureWithSalt
	b (J)V setSeed
	b (JII)V setFeatureSeed
	c (I)I next
	c (JII)V setLargeFeatureSeed
	d ()Lnet/minecraft/util/RandomSource; fork
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; forkPositional
	l ()I getCount
net/minecraft/world/level/levelgen/WorldGenStage net/minecraft/world/level/levelgen/GenerationStep
net/minecraft/world/level/levelgen/WorldGenStage$Decoration net/minecraft/world/level/levelgen/GenerationStep$Decoration
	a RAW_GENERATION
	b LAKES
	c LOCAL_MODIFICATIONS
	d UNDERGROUND_STRUCTURES
	e SURFACE_STRUCTURES
	f STRONGHOLDS
	g UNDERGROUND_ORES
	h UNDERGROUND_DECORATION
	i FLUID_SPRINGS
	j VEGETAL_DECORATION
	k TOP_LAYER_MODIFICATION
	l CODEC
	m name
	n $VALUES
	a ()Ljava/lang/String; getName
	b ()[Lnet/minecraft/world/level/levelgen/WorldGenStage$Decoration; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/levelgen/WorldGenStage$Features net/minecraft/world/level/levelgen/GenerationStep$Carving
	a AIR
	b LIQUID
	c CODEC
	d name
	e $VALUES
	a ()Ljava/lang/String; getName
	b ()[Lnet/minecraft/world/level/levelgen/WorldGenStage$Features; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/levelgen/carver/WorldGenCanyon net/minecraft/world/level/levelgen/carver/CanyonWorldCarver
	a (Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z isStartChunk
	a (Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;DFF)D updateVerticalRadius
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;)[F initWidthFactors
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDFFFIIDLnet/minecraft/world/level/chunk/CarvingMask;)V doCarve
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/CarvingMask;)Z carve
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/CarvingMask;)Z carve
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;[FDDDI)Z shouldSkip
	a (Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z isStartChunk
net/minecraft/world/level/levelgen/carver/WorldGenCarverAbstract net/minecraft/world/level/levelgen/carver/WorldCarver
	a CAVE
	b NETHER_CAVE
	c CANYON
	d AIR
	e CAVE_AIR
	f WATER
	g LAVA
	h liquids
	i configuredCodec
	a (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverAbstract;)Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverAbstract; register
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;DDIIF)Z canReach
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/Aquifer;)Lnet/minecraft/world/level/block/state/IBlockData; getCarveState
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/CarvingMask;)Z carve
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/levelgen/Aquifer;DDDDDLnet/minecraft/world/level/chunk/CarvingMask;Ldmx$a;)Z carveEllipsoid
	a (Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;)Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverWrapper; configured
	a (Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z isStartChunk
	a (Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/block/state/IBlockData;)Z canReplaceBlock
	b (Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;)Z isDebugEnabled
	b (Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; getDebugState
	c ()Lcom/mojang/serialization/Codec; configuredCodec
	d ()I getRange
net/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration net/minecraft/world/level/levelgen/carver/CarverConfiguration
	d CODEC
	e y
	f yScale
	g lavaLevel
	h debugSettings
	i replaceable
net/minecraft/world/level/levelgen/carver/WorldGenCarverWrapper net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	d worldCarver
	e config
	a ()Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverAbstract; worldCarver
	a (Lnet/minecraft/util/RandomSource;)Z isStartChunk
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/CarvingMask;)Z carve
	b ()Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration; config
net/minecraft/world/level/levelgen/carver/WorldGenCaves net/minecraft/world/level/levelgen/carver/CaveWorldCarver
	a ()I getCaveBound
	a (DDDD)Z shouldSkip
	a (Lnet/minecraft/util/RandomSource;)F getThickness
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDDDFFFIIDLnet/minecraft/world/level/chunk/CarvingMask;Ldmx$a;)V createTunnel
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/CarvingMask;)Z carve
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/levelgen/Aquifer;DDDFDLnet/minecraft/world/level/chunk/CarvingMask;Ldmx$a;)V createRoom
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/CarvingMask;)Z carve
	a (Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z isStartChunk
	a (Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z isStartChunk
	b ()D getYScale
net/minecraft/world/level/levelgen/carver/WorldGenCavesHell net/minecraft/world/level/levelgen/carver/NetherWorldCarver
	a ()I getCaveBound
	a (Lnet/minecraft/util/RandomSource;)F getThickness
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
	b ()D getYScale
net/minecraft/world/level/levelgen/feature/WorldGenBonusChest net/minecraft/world/level/levelgen/feature/BonusChestFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenDesertWell net/minecraft/world/level/levelgen/feature/DesertWellFeature
	a IS_SAND
	an water
	b sand
	c sandSlab
	d sandstone
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)V placeSusSand
net/minecraft/world/level/levelgen/feature/WorldGenDungeons net/minecraft/world/level/levelgen/feature/MonsterRoomFeature
	a LOGGER
	b MOBS
	c AIR
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/EntityTypes; randomEntityId
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenEndGateway net/minecraft/world/level/levelgen/feature/EndGatewayFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenEndIsland net/minecraft/world/level/levelgen/feature/EndIslandFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenEndTrophy net/minecraft/world/level/levelgen/feature/EndPodiumFeature
	a PODIUM_RADIUS
	an END_PODIUM_LOCATION
	ao active
	b PODIUM_PILLAR_HEIGHT
	c RIM_RADIUS
	d CORNER_ROUNDING
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; getLocation
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenEnder net/minecraft/world/level/levelgen/feature/SpikeFeature
	a NUMBER_OF_SPIKES
	b SPIKE_DISTANCE
	c SPIKE_CACHE
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;)Ljava/util/List; getSpikesForLevel
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureEndSpikeConfiguration;Lnet/minecraft/world/level/levelgen/feature/WorldGenEnder$Spike;)V placeSpike
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenEnder$Spike net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike
	a CODEC
	b centerX
	c centerZ
	d radius
	e height
	f guarded
	g topBoundingBox
	a ()I getCenterX
	a (Lnet/minecraft/core/BlockPosition;)Z isCenterWithinChunk
	b ()I getCenterZ
	c ()I getRadius
	d ()I getHeight
	e ()Z isGuarded
	f ()Lnet/minecraft/world/phys/AxisAlignedBB; getTopBoundingBox
net/minecraft/world/level/levelgen/feature/WorldGenFeatureBamboo net/minecraft/world/level/levelgen/feature/BambooFeature
	a BAMBOO_TRUNK
	b BAMBOO_FINAL_LARGE
	c BAMBOO_TOP_LARGE
	d BAMBOO_TOP_SMALL
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureBasaltColumns net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature
	a CANNOT_PLACE_ON
	an UNCLUSTERED_SIZE
	b CLUSTERED_REACH
	c CLUSTERED_SIZE
	d UNCLUSTERED_REACH
	a (Lnet/minecraft/world/level/GeneratorAccess;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;)Z canPlaceAt
	a (Lnet/minecraft/world/level/GeneratorAccess;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;I)Lnet/minecraft/core/BlockPosition; findSurface
	a (Lnet/minecraft/world/level/GeneratorAccess;ILnet/minecraft/core/BlockPosition;)Z isAirOrLavaOcean
	a (Lnet/minecraft/world/level/GeneratorAccess;ILnet/minecraft/core/BlockPosition;II)Z placeColumn
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;I)Lnet/minecraft/core/BlockPosition; findAir
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureBasaltPillar net/minecraft/world/level/levelgen/feature/BasaltPillarFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)V placeBaseHangOff
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z placeHangOff
net/minecraft/world/level/levelgen/feature/WorldGenFeatureBlock net/minecraft/world/level/levelgen/feature/SimpleBlockFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureBlockPile net/minecraft/world/level/levelgen/feature/BlockPileFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z mayPlaceOn
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureBlockPileConfiguration;)V tryPlaceBlock
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureBlueIce net/minecraft/world/level/levelgen/feature/BlueIceFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureChoice net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureChorusPlant net/minecraft/world/level/levelgen/feature/ChorusPlantFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureConfigured net/minecraft/world/level/levelgen/feature/ConfiguredFeature
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	d feature
	e config
	a ()Ljava/util/stream/Stream; getFeatures
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z place
	b ()Lnet/minecraft/world/level/levelgen/feature/WorldGenerator; feature
	c ()Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration; config
net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoral net/minecraft/world/level/levelgen/feature/CoralFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeCoralBlock
net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoralClaw net/minecraft/world/level/levelgen/feature/CoralClawFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeFeature
net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoralMushroom net/minecraft/world/level/levelgen/feature/CoralMushroomFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeFeature
net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoralTree net/minecraft/world/level/levelgen/feature/CoralTreeFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeFeature
net/minecraft/world/level/levelgen/feature/WorldGenFeatureDelta net/minecraft/world/level/levelgen/feature/DeltaFeature
	a CANNOT_REPLACE
	b DIRECTIONS
	c RIM_SPAWN_CHANCE
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureDeltaConfiguration;)Z isClear
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureEmpty net/minecraft/world/level/levelgen/feature/NoOpFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureEndPlatform net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature
	a PLATFORM_OFFSET
	b PLATFORM_ORIGIN_CHUNK
	c PLATFORM_RADIUS
	d PLATFORM_RADIUS_CHUNKS
	a (IIII)I checkerboardDistance
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureFill net/minecraft/world/level/levelgen/feature/FillLayerFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungi net/minecraft/world/level/levelgen/feature/HugeFungusFeature
	a HUGE_PROBABILITY
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;)V tryPlaceWeepingVines
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V placeHatDropBlock
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungiConfiguration;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;FFF)V placeHatBlock
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungiConfiguration;Z)Z isReplaceable
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungiConfiguration;Lnet/minecraft/core/BlockPosition;IZ)V placeStem
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungiConfiguration;Lnet/minecraft/core/BlockPosition;IZ)V placeHat
net/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungiConfiguration net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration
	a CODEC
	b validBaseState
	c stemState
	d hatState
	e decorState
	f replaceableBlocks
	g planted
net/minecraft/world/level/levelgen/feature/WorldGenFeatureIceSnow net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureIceburg net/minecraft/world/level/levelgen/feature/IcebergFeature
	a (III)I getEllipseC
	a (IILnet/minecraft/core/BlockPosition;IID)D signedDistanceEllipse
	a (IILnet/minecraft/core/BlockPosition;ILnet/minecraft/util/RandomSource;)D signedDistanceCircle
	a (IILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/GeneratorAccess;ZDLnet/minecraft/core/BlockPosition;II)V carve
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;IIZZLnet/minecraft/world/level/block/state/IBlockData;)V setIcebergBlock
	a (Lnet/minecraft/util/RandomSource;III)I heightDependentRadiusRound
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/GeneratorAccess;IILnet/minecraft/core/BlockPosition;ZIDI)V generateCutOut
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V removeFloatingSnowLayer
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;IIZI)V smooth
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;IIIIIIZIDZLnet/minecraft/world/level/block/state/IBlockData;)V generateIcebergBlock
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z belowIsAir
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (III)I heightDependentRadiusEllipse
	b (Lnet/minecraft/util/RandomSource;III)I heightDependentRadiusSteep
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z isIcebergState
net/minecraft/world/level/levelgen/feature/WorldGenFeatureKelp net/minecraft/world/level/levelgen/feature/KelpFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureNetherForestVegetation net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureNetherrackReplaceBlobs net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/core/BlockPosition; findTarget
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureRandom2Configuration net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureRandomChoice net/minecraft/world/level/levelgen/feature/RandomSelectorFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureRandomPatch net/minecraft/world/level/levelgen/feature/RandomPatchFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureReplaceBlock net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureSeaGrass net/minecraft/world/level/levelgen/feature/SeagrassFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureSeaPickel net/minecraft/world/level/levelgen/feature/SeaPickleFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureTwistingVines net/minecraft/world/level/levelgen/feature/TwistingVinesFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)Z findFirstAirBlockAboveGround
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z isInvalidPlacementLocation
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;III)V placeWeepingVinesColumn
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureWeepingVines net/minecraft/world/level/levelgen/feature/WeepingVinesFeature
	a DIRECTIONS
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;III)V placeWeepingVinesColumn
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)V placeRoofNetherWart
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)V placeRoofWeepingVines
net/minecraft/world/level/levelgen/feature/WorldGenFossils net/minecraft/world/level/levelgen/feature/FossilFeature
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)I countEmptyCorners
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenHugeMushroomBrown net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature
	a (IIII)I getTreeRadiusForHeight
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureMushroomConfiguration;)V makeCap
net/minecraft/world/level/levelgen/feature/WorldGenHugeMushroomRed net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature
	a (IIII)I getTreeRadiusForHeight
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureMushroomConfiguration;)V makeCap
net/minecraft/world/level/levelgen/feature/WorldGenLakes net/minecraft/world/level/levelgen/feature/LakeFeature
	a AIR
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z canReplaceBlock
net/minecraft/world/level/levelgen/feature/WorldGenLightStone1 net/minecraft/world/level/levelgen/feature/GlowstoneFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenLiquids net/minecraft/world/level/levelgen/feature/SpringFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenMinable net/minecraft/world/level/levelgen/feature/OreFeature
	a (Lnet/minecraft/util/RandomSource;F)Z shouldSkipAirCheck
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureOreConfiguration;DDDDDDIIIII)Z doPlace
	a (Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureOreConfiguration;Ldqi$a;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)Z canPlaceOre
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenMushrooms net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature
	a (IIII)I getTreeRadiusForHeight
	a (Lnet/minecraft/util/RandomSource;)I getTreeHeight
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureMushroomConfiguration;)Z isValidPosition
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureMushroomConfiguration;)V makeCap
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureMushroomConfiguration;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;)V placeTrunk
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenPackedIce2 net/minecraft/world/level/levelgen/feature/IceSpikeFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenTaigaStructure net/minecraft/world/level/levelgen/feature/BlockBlobFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenTrees net/minecraft/world/level/levelgen/feature/TreeFeature
	a BLOCK_UPDATE_FLAGS
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete; updateLeaves
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Ldrm$b;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Z doPlace
	a (Lnet/minecraft/world/level/IWorldWriter;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlock
	a (Lnet/minecraft/world/level/VirtualLevelReadable;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I getMaxFreeTreeHeight
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/IWorldWriter;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlockKnownShape
	b (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z isAirOrLeaves
	c (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z validTreePos
	d (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z isVine
net/minecraft/world/level/levelgen/feature/WorldGenVines net/minecraft/world/level/levelgen/feature/VinesFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenerator net/minecraft/world/level/levelgen/feature/Feature
	A MULTIFACE_GROWTH
	B UNDERWATER_MAGMA
	C MONSTER_ROOM
	D BLUE_ICE
	E ICEBERG
	F FOREST_ROCK
	G DISK
	H LAKE
	I ORE
	J END_SPIKE
	K END_ISLAND
	L END_GATEWAY
	M SEAGRASS
	N KELP
	O CORAL_TREE
	P CORAL_MUSHROOM
	Q CORAL_CLAW
	R SEA_PICKLE
	S SIMPLE_BLOCK
	T BAMBOO
	U HUGE_FUNGUS
	V NETHER_FOREST_VEGETATION
	W WEEPING_VINES
	X TWISTING_VINES
	Y BASALT_COLUMNS
	Z DELTA_FEATURE
	a configuredCodec
	aa REPLACE_BLOBS
	ab FILL_LAYER
	ac BONUS_CHEST
	ad BASALT_PILLAR
	ae SCATTERED_ORE
	af RANDOM_SELECTOR
	ag SIMPLE_RANDOM_SELECTOR
	ah RANDOM_BOOLEAN_SELECTOR
	ai GEODE
	aj DRIPSTONE_CLUSTER
	ak LARGE_DRIPSTONE
	al POINTED_DRIPSTONE
	am SCULK_PATCH
	e NO_OP
	f TREE
	g FLOWER
	h NO_BONEMEAL_FLOWER
	i RANDOM_PATCH
	j BLOCK_PILE
	k SPRING
	l CHORUS_PLANT
	m REPLACE_SINGLE_BLOCK
	n VOID_START_PLATFORM
	o DESERT_WELL
	p FOSSIL
	q HUGE_RED_MUSHROOM
	r HUGE_BROWN_MUSHROOM
	s ICE_SPIKE
	t GLOWSTONE_BLOB
	u FREEZE_TOP_LAYER
	v VINES
	w BLOCK_COLUMN
	x VEGETATION_PATCH
	y WATERLOGGED_VEGETATION_PATCH
	z ROOT_SYSTEM
	a ()Lcom/mojang/serialization/Codec; configuredCodec
	a (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;)Lnet/minecraft/world/level/levelgen/feature/WorldGenerator; register
	a (Ljava/util/function/Function;Lnet/minecraft/core/BlockPosition;)Z isAdjacentToAir
	a (Ljava/util/function/Function;Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z checkNeighbors
	a (Lnet/minecraft/tags/TagKey;)Ljava/util/function/Predicate; isReplaceable
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)V markAboveForPostProcessing
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/function/Predicate;)V safeSetBlock
	a (Lnet/minecraft/world/level/IWorldWriter;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlock
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z isGrassOrDirt
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isStone
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	a (Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z place
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Z isDirt
net/minecraft/world/level/levelgen/feature/configurations/WorldGenDecoratorFrequencyConfiguration net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration
	a CODEC
	b count
	a ()Lnet/minecraft/util/valueproviders/IntProvider; count
net/minecraft/world/level/levelgen/feature/configurations/WorldGenEndGatewayConfiguration net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration
	a CODEC
	b exit
	c exact
	a ()Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenEndGatewayConfiguration; delayedExitSearch
	a (Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenEndGatewayConfiguration; knownExit
	b ()Ljava/util/Optional; getExit
	c ()Z isExitExact
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureBasaltColumnsConfiguration net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration
	a CODEC
	b reach
	c height
	a ()Lnet/minecraft/util/valueproviders/IntProvider; reach
	b ()Lnet/minecraft/util/valueproviders/IntProvider; height
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureBlockConfiguration net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration
	a CODEC
	b toPlace
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; toPlace
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureBlockPileConfiguration net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration
	a CODEC
	b stateProvider
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureChoiceConfiguration net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration
	a CODEC
	b featureTrue
	c featureFalse
	e ()Ljava/util/stream/Stream; getFeatures
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureCircleConfiguration net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration
	a CODEC
	b stateProvider
	c target
	d radius
	e halfHeight
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; stateProvider
	b ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; target
	c ()Lnet/minecraft/util/valueproviders/IntProvider; radius
	d ()I halfHeight
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration
	m NONE
	e ()Ljava/util/stream/Stream; getFeatures
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfigurationChance net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration
	k CODEC
	l probability
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureDeltaConfiguration net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration
	a CODEC
	b contents
	c rim
	d size
	e rimSize
	a ()Lnet/minecraft/world/level/block/state/IBlockData; contents
	b ()Lnet/minecraft/world/level/block/state/IBlockData; rim
	c ()Lnet/minecraft/util/valueproviders/IntProvider; size
	d ()Lnet/minecraft/util/valueproviders/IntProvider; rimSize
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureEmptyConfiguration net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration
	a CODEC
	b INSTANCE
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureEndSpikeConfiguration net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration
	a CODEC
	b crystalInvulnerable
	c spikes
	d crystalBeamTarget
	a ()Z isCrystalInvulnerable
	b ()Ljava/util/List; getSpikes
	c ()Lnet/minecraft/core/BlockPosition; getCrystalBeamTarget
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureFillConfiguration net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration
	a CODEC
	b height
	c state
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureHellFlowingLavaConfiguration net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration
	a CODEC
	b state
	c requiresBlockBelow
	d rockCount
	e holeCount
	f validBlocks
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureLakeConfiguration net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration
	a CODEC
	b state
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureMushroomConfiguration net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration
	a CODEC
	b capProvider
	c stemProvider
	d foliageRadius
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureOreConfiguration net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration
	a CODEC
	b targetStates
	c size
	d discardChanceOnAirExposure
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTest;Lnet/minecraft/world/level/block/state/IBlockData;)Ldqi$a; target
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRadiusConfiguration net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration
	a CODEC
	b targetState
	c replaceState
	d radius
	a ()Lnet/minecraft/util/valueproviders/IntProvider; radius
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandom2 net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration
	a CODEC
	b features
	e ()Ljava/util/stream/Stream; getFeatures
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomChoiceConfiguration net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration
	a CODEC
	b features
	c defaultFeature
	e ()Ljava/util/stream/Stream; getFeatures
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomPatchConfiguration net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration
	a CODEC
	b tries
	c xzSpread
	d ySpread
	e feature
	a ()I tries
	b ()I xzSpread
	c ()I ySpread
	d ()Lnet/minecraft/core/Holder; feature
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureReplaceBlockConfiguration net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration
	a CODEC
	b targetStates
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration
	a CODEC
	b trunkProvider
	c dirtProvider
	d trunkPlacer
	e foliageProvider
	f foliagePlacer
	g rootPlacer
	h minimumSize
	i decorators
	j ignoreVines
	k forceDirt
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeThreeLayers net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize
	d CODEC
	e limit
	f upperLimit
	g lowerSize
	h middleSize
	i upperSize
	a (II)I getSizeAtHeight
	b ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; type
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeTwoLayers net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize
	d CODEC
	e limit
	f lowerSize
	g upperSize
	a (II)I getSizeAtHeight
	b ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; type
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer
	d CODEC
	e radius
	f offset
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;)I offset
	a (Lnet/minecraft/util/RandomSource;I)I foliageRadius
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;FLnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)Z tryPlaceExtension
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdrm$a;II)V createFoliage
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdrm$a;III)V createFoliage
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;Lnet/minecraft/core/BlockPosition;)Z tryPlaceLeaf
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;Lnet/minecraft/core/BlockPosition;IIZ)V placeLeavesRow
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;Lnet/minecraft/core/BlockPosition;IIZFF)V placeLeavesRowWithHangingLeavesBelow
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2; foliagePlacerParts
	b (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocationSigned
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerAcacia net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdrm$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerBlob net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer
	a CODEC
	b height
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; blobParts
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdrm$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerBush net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer
	c CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdrm$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerDarkOak net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdrm$a;III)V createFoliage
	b (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocationSigned
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerFancy net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer
	c CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdrm$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerJungle net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer
	a CODEC
	b height
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdrm$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerMegaPine net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer
	a CODEC
	b crownHeight
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdrm$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerPine net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer
	a CODEC
	b height
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;I)I foliageRadius
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdrm$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerSpruce net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer
	a CODEC
	b trunkHeight
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdrm$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType
	a BLOB_FOLIAGE_PLACER
	b SPRUCE_FOLIAGE_PLACER
	c PINE_FOLIAGE_PLACER
	d ACACIA_FOLIAGE_PLACER
	e BUSH_FOLIAGE_PLACER
	f FANCY_FOLIAGE_PLACER
	g MEGA_JUNGLE_FOLIAGE_PLACER
	h MEGA_PINE_FOLIAGE_PLACER
	i DARK_OAK_FOLIAGE_PLACER
	j RANDOM_SPREAD_FOLIAGE_PLACER
	k CHERRY_FOLIAGE_PLACER
	l codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; register
net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderSimpl; simple
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderSimpl; simple
net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderRotatedBlock net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider
	b CODEC
	c block
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderSimpl net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider
	b CODEC
	c state
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderWeighted net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider
	b CODEC
	c weightedList
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
	a (Lnet/minecraft/util/random/SimpleWeightedRandomList;)Lcom/mojang/serialization/DataResult; create
net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType
	a SIMPLE_STATE_PROVIDER
	b WEIGHTED_STATE_PROVIDER
	c NOISE_THRESHOLD_PROVIDER
	d NOISE_PROVIDER
	e DUAL_NOISE_PROVIDER
	f ROTATED_BLOCK_PROVIDER
	g RANDOMIZED_INT_STATE_PROVIDER
	h codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; register
net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTree net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator
	h CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; type
	a (Ldss$a;)V place
net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeAlterGround net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator
	a CODEC
	b provider
	a ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; type
	a (Ldss$a;)V place
	a (Ldss$a;Lnet/minecraft/core/BlockPosition;)V placeCircle
	b (Ldss$a;Lnet/minecraft/core/BlockPosition;)V placeBlockAt
net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeBeehive net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator
	a CODEC
	b WORLDGEN_FACING
	c SPAWN_DIRECTIONS
	d probability
	a ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; type
	a (Ldss$a;)V place
net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeCocoa net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator
	a CODEC
	b probability
	a ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; type
	a (Ldss$a;)V place
net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeVineLeaves net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator
	a CODEC
	b probability
	a ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; type
	a (Ldss$a;)V place
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean;Ldss$a;)V addHangingVine
net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeVineTrunk net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; type
	a (Ldss$a;)V place
net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType
	a TRUNK_VINE
	b LEAVE_VINE
	c COCOA
	d BEEHIVE
	e ALTER_GROUND
	f ATTACHED_TO_LEAVES
	g codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; register
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerDarkOak net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerFancy net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer
	a CODEC
	b TRUNK_HEIGHT_SCALE
	h CLUSTER_DENSITY_MAGIC
	i BRANCH_SLOPE
	j BRANCH_LENGTH_MAGIC
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (II)Z trimBranches
	a (Lnet/minecraft/core/BlockPosition;)I getSteps
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/EnumDirection$EnumAxis; getLogAxis
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Ljava/util/List;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)V makeBranches
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Z makeLimb
	b (II)F treeShape
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerForking net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerGiant net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;Lnet/minecraft/core/BlockPosition;III)V placeLogIfFreeWithOffset
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerMegaJungle net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer
	b CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerStraight net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType
	a STRAIGHT_TRUNK_PLACER
	b FORKING_TRUNK_PLACER
	c GIANT_TRUNK_PLACER
	d MEGA_JUNGLE_TRUNK_PLACER
	e DARK_OAK_TRUNK_PLACER
	f FANCY_TRUNK_PLACER
	g BENDING_TRUNK_PLACER
	h UPWARDS_BRANCHING_TRUNK_PLACER
	i CHERRY_TRUNK_PLACER
	j codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; register
net/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings
	a CODEC
	b LOGGER
	c structureOverrides
	d layersInfo
	e biome
	f layers
	g voidGen
	h decoration
	i addLakes
	j lakes
	a ()V setDecoration
	a (Ljava/util/List;Ljava/util/Optional;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat; withBiomeAndLayers
	a (Ljava/util/Optional;Lnet/minecraft/core/Holder;)Lnet/minecraft/core/Holder; getBiome
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeSettingsGeneration; adjustGenerationSettings
	a (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/core/Holder; getDefaultBiome
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat; getDefault
	a (Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat;)Lcom/mojang/serialization/DataResult; validateHeight
	b ()V setAddLakes
	b (Lnet/minecraft/core/HolderGetter;)Ljava/util/List; createLakesList
	c ()Ljava/util/Optional; structureOverrides
	d ()Lnet/minecraft/core/Holder; getBiome
	e ()Ljava/util/List; getLayersInfo
	f ()Ljava/util/List; getLayers
	g ()V updateLayers
net/minecraft/world/level/levelgen/flat/WorldGenFlatLayerInfo net/minecraft/world/level/levelgen/flat/FlatLayerInfo
	a CODEC
	b block
	c height
	a ()I getHeight
	b ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
net/minecraft/world/level/levelgen/structure/DefinedStructurePiece net/minecraft/world/level/levelgen/structure/TemplateStructurePiece
	a templateName
	b template
	c placeSettings
	d templatePosition
	h LOGGER
	a ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	a (III)V move
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b ()Lnet/minecraft/resources/MinecraftKey; makeTemplateLocation
	c ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure; template
	d ()Lnet/minecraft/core/BlockPosition; templatePosition
	e ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; placeSettings
net/minecraft/world/level/levelgen/structure/PersistentIndexed net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData
	a TAG_REMAINING_INDEXES
	b TAG_All_INDEXES
	c all
	d remaining
	a ()Lebr$a; factory
	a (J)V addIndex
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	b ()Lit/unimi/dsi/fastutil/longs/LongSet; getAll
	b (J)Z hasStartIndex
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/levelgen/structure/PersistentIndexed; load
	c (J)Z hasUnhandledIndex
	d (J)V removeIndex
net/minecraft/world/level/levelgen/structure/PersistentStructureLegacy net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler
	a CURRENT_TO_LEGACY_MAP
	b LEGACY_TO_CURRENT_MAP
	c OLD_STRUCTURE_REGISTRY_KEYS
	d hasLegacyData
	e dataMap
	f indexMap
	g legacyKeys
	h currentKeys
	a (II)Z isUnhandledStructureStart
	a (IILjava/lang/String;)Z hasLegacyStart
	a (J)V removeIndex
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; updateFromLegacy
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/nbt/NBTTagCompound; updateStructureStart
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/storage/WorldPersistentData;)Lnet/minecraft/world/level/levelgen/structure/PersistentStructureLegacy; getLegacyStructureHandler
	a (Lnet/minecraft/world/level/storage/WorldPersistentData;)V populateCaches
net/minecraft/world/level/levelgen/structure/StructureBoundingBox net/minecraft/world/level/levelgen/structure/BoundingBox
	a CODEC
	b LOGGER
	c minX
	d minY
	e minZ
	f maxX
	g maxY
	h maxZ
	a ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; infinite
	a (I)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; inflatedBy
	a (III)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; move
	a (IIII)Z intersects
	a (IIIIIIIIILnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; orientBox
	a (Ljava/lang/Iterable;)Ljava/util/Optional; encapsulatingPositions
	a (Ljava/util/function/Consumer;)V forAllCorners
	a (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; move
	a (Lnet/minecraft/core/BaseBlockPosition;Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; fromCorners
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; encapsulate
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Z intersects
	b ()Lnet/minecraft/core/BaseBlockPosition; getLength
	b (III)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; moved
	b (Ljava/lang/Iterable;)Ljava/util/Optional; encapsulatingBoxes
	b (Lnet/minecraft/core/BaseBlockPosition;)Z isInside
	b (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; encapsulate
	c ()I getXSpan
	c (III)Z isInside
	d ()I getYSpan
	e ()I getZSpan
	f ()Lnet/minecraft/core/BlockPosition; getCenter
	g ()I minX
	h ()I minY
	i ()I minZ
	j ()I maxX
	k ()I maxY
	l ()I maxZ
net/minecraft/world/level/levelgen/structure/StructurePiece$StructurePieceBlockSelector net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector
	a next
	a ()Lnet/minecraft/world/level/block/state/IBlockData; getNext
	a (Lnet/minecraft/util/RandomSource;IIIZ)V next
net/minecraft/world/level/levelgen/structure/WorldGenFeaturePillagerOutpostPoolPiece net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece
	a element
	b position
	c rotation
	d LOGGER
	h groundLevelDelta
	i junctions
	j structureTemplateManager
	a ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	a (III)V move
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/core/BlockPosition;Z)V place
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructureJigsawJunction;)V addJunction
	b ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolStructure; getElement
	c ()Lnet/minecraft/core/BlockPosition; getPosition
	d ()I getGroundLevelDelta
	e ()Ljava/util/List; getJunctions
net/minecraft/world/level/levelgen/structure/WorldGenScatteredPiece net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece
	a width
	b height
	c depth
	d heightPosition
	a (Lnet/minecraft/world/level/GeneratorAccess;I)Z updateHeightPositionToLowestGroundHeight
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;I)Z updateAverageGroundHeight
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType
	A STRONGHOLD_RIGHT_TURN
	B STRONGHOLD_ROOM_CROSSING
	C STRONGHOLD_STAIRS_DOWN
	D STRONGHOLD_START
	E STRONGHOLD_STRAIGHT
	F STRONGHOLD_STRAIGHT_STAIRS_DOWN
	G JUNGLE_PYRAMID_PIECE
	H OCEAN_RUIN
	I IGLOO
	J RUINED_PORTAL
	K SWAMPLAND_HUT
	L DESERT_PYRAMID_PIECE
	M OCEAN_MONUMENT_BUILDING
	N OCEAN_MONUMENT_CORE_ROOM
	O OCEAN_MONUMENT_DOUBLE_X_ROOM
	P OCEAN_MONUMENT_DOUBLE_XY_ROOM
	Q OCEAN_MONUMENT_DOUBLE_Y_ROOM
	R OCEAN_MONUMENT_DOUBLE_YZ_ROOM
	S OCEAN_MONUMENT_DOUBLE_Z_ROOM
	T OCEAN_MONUMENT_ENTRY_ROOM
	U OCEAN_MONUMENT_PENTHOUSE
	V OCEAN_MONUMENT_SIMPLE_ROOM
	W OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	X OCEAN_MONUMENT_WING_ROOM
	Y END_CITY_PIECE
	Z WOODLAND_MANSION_PIECE
	a MINE_SHAFT_CORRIDOR
	aa BURIED_TREASURE_PIECE
	ab SHIPWRECK_PIECE
	ac NETHER_FOSSIL
	ad JIGSAW
	b MINE_SHAFT_CROSSING
	c MINE_SHAFT_ROOM
	d MINE_SHAFT_STAIRS
	e NETHER_FORTRESS_BRIDGE_CROSSING
	f NETHER_FORTRESS_BRIDGE_END_FILLER
	g NETHER_FORTRESS_BRIDGE_STRAIGHT
	h NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS
	i NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY
	j NETHER_FORTRESS_CASTLE_ENTRANCE
	k NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING
	l NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN
	m NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR
	n NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN
	o NETHER_FORTRESS_CASTLE_STALK_ROOM
	p NETHER_FORTRESS_MONSTER_THRONE
	q NETHER_FORTRESS_ROOM_CROSSING
	r NETHER_FORTRESS_STAIRS_ROOM
	s NETHER_FORTRESS_START
	t STRONGHOLD_CHEST_CORRIDOR
	u STRONGHOLD_FILLER_CORRIDOR
	v STRONGHOLD_FIVE_CROSSING
	w STRONGHOLD_LEFT_TURN
	x STRONGHOLD_LIBRARY
	y STRONGHOLD_PORTAL_ROOM
	z STRONGHOLD_PRISON_HALL
	a (Ldvz$a;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType; setPieceId
	a (Ldvz$b;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType; setTemplatePieceId
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType; setFullContextPieceId
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructureJigsawJunction net/minecraft/world/level/levelgen/structure/pools/JigsawJunction
	a sourceX
	b sourceGroundY
	c sourceZ
	d deltaY
	e destProjection
	a ()I getSourceX
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructureJigsawJunction; deserialize
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; serialize
	b ()I getSourceGroundY
	c ()I getSourceZ
	d ()I getDeltaY
	e ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching; getDestProjection
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructureJigsawPlacement net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement
	a LOGGER
	a (Ldvi$a;Lnet/minecraft/core/Holder;Ljava/util/Optional;ILnet/minecraft/core/BlockPosition;ZLjava/util/Optional;I)Ljava/util/Optional; addPieces
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/MinecraftKey;ILnet/minecraft/core/BlockPosition;Z)Z generateJigsaw
	a (Lnet/minecraft/world/level/levelgen/RandomState;IZLnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/IRegistry;Lnet/minecraft/world/level/levelgen/structure/WorldGenFeaturePillagerOutpostPoolPiece;Ljava/util/List;Lnet/minecraft/world/phys/shapes/VoxelShape;)V addPieces
	a (Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolStructure;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/SeededRandom;)Ljava/util/Optional; getRandomNamedJigsaw
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolEmpty net/minecraft/world/level/levelgen/structure/pools/EmptyPoolElement
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools; getType
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;Z)Z place
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BaseBlockPosition; getSize
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolFeature net/minecraft/world/level/levelgen/structure/pools/FeaturePoolElement
	a CODEC
	b feature
	c defaultJigsawNBT
	a ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools; getType
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;Z)Z place
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BaseBlockPosition; getSize
	b ()Lnet/minecraft/nbt/NBTTagCompound; fillDefaultJigsawNBT
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolLegacySingle net/minecraft/world/level/levelgen/structure/pools/LegacySinglePoolElement
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools; getType
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; getSettings
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolList net/minecraft/world/level/levelgen/structure/pools/ListPoolElement
	a CODEC
	b elements
	a ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools; getType
	a (Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolStructure; setProjection
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;Z)Z place
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BaseBlockPosition; getSize
	b (Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)V setProjectionOnEachElement
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolSingle net/minecraft/world/level/levelgen/structure/pools/SinglePoolElement
	a TEMPLATE_CODEC
	b CODEC
	c template
	d processors
	a ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encodeTemplate
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; getSettings
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure; getTemplate
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Z)Ljava/util/List; getDataMarkers
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;Z)Z place
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BaseBlockPosition; getSize
	b ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; processorsCodec
	c ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; templateCodec
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolStructure net/minecraft/world/level/levelgen/structure/pools/StructurePoolElement
	a EMPTY
	b projection
	e CODEC
	a ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools; getType
	a (Ljava/lang/String;)Ljava/util/function/Function; legacy
	a (Ljava/lang/String;Lnet/minecraft/core/Holder;)Ljava/util/function/Function; legacy
	a (Ljava/util/List;)Ljava/util/function/Function; list
	a (Lnet/minecraft/core/Holder;)Ljava/util/function/Function; feature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolStructure; setProjection
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;Z)Z place
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BaseBlockPosition; getSize
	b (Ljava/lang/String;)Ljava/util/function/Function; single
	b (Ljava/lang/String;Lnet/minecraft/core/Holder;)Ljava/util/function/Function; single
	d ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; projectionCodec
	e ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching; getProjection
	f ()I getGroundLevelDelta
	g ()Ljava/util/function/Function; empty
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool
	a DIRECT_CODEC
	b CODEC
	c SIZE_UNSET
	d CODEC_REFERENCE
	e rawTemplates
	f templates
	g fallback
	h maxSize
	a ()Lnet/minecraft/core/Holder; getFallback
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolStructure; getRandomTemplate
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;)I getMaxSize
	b ()I size
	b (Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffledTemplates
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection
	a TERRAIN_MATCHING
	b RIGID
	c CODEC
	d name
	e processors
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching; byName
	b ()Lcom/google/common/collect/ImmutableList; getProcessors
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching; $values
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools net/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType
	a SINGLE
	b LIST
	c FEATURE
	d EMPTY
	e LEGACY
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools; register
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate
	a PALETTE_TAG
	b PALETTE_LIST_TAG
	c ENTITIES_TAG
	d BLOCKS_TAG
	e BLOCK_TAG_POS
	f BLOCK_TAG_STATE
	g BLOCK_TAG_NBT
	h ENTITY_TAG_POS
	i ENTITY_TAG_BLOCKPOS
	j ENTITY_TAG_NBT
	k SIZE_TAG
	l palettes
	m entityInfoList
	n size
	o author
	a ()Lnet/minecraft/core/BaseBlockPosition; getSize
	a (Ljava/lang/String;)V setAuthor
	a (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List; buildInfoList
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BlockPosition; getZeroPositionWithTransform
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/world/level/block/EnumBlockRotation;II)Lnet/minecraft/core/BlockPosition; getZeroPositionWithTransform
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; transform
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; filterBlocks
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Lnet/minecraft/world/level/block/Block;Z)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; filterBlocks
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/nbt/NBTTagList;Lnet/minecraft/nbt/NBTTagList;)V loadPalette
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/world/level/GeneratorAccess;ILnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;III)V updateShapeAtEdge
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BaseBlockPosition;ZLnet/minecraft/world/level/block/Block;)V fillFromWorld
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)V fillEntityList
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Ljava/util/List;)Ljava/util/List; processBlockInfos
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Lnet/minecraft/util/RandomSource;I)Z placeInWorld
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Z)V placeEntities
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/Optional; createEntityIgnoreException
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BaseBlockPosition; getSize
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V addToLists
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; calculateRelativePosition
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; calculateConnectedPosition
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/Vec3D; transform
	a ([D)Lnet/minecraft/nbt/NBTTagList; newDoubleList
	a ([I)Lnet/minecraft/nbt/NBTTagList; newIntegerList
	b ()Ljava/lang/String; getAuthor
	b (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo
	a pos
	b state
	c nbt
	a ()Lnet/minecraft/core/BlockPosition; pos
	b ()Lnet/minecraft/world/level/block/state/IBlockData; state
	c ()Lnet/minecraft/nbt/NBTTagCompound; nbt
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$EntityInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo
	a pos
	b blockPos
	c nbt
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings
	a mirror
	b rotation
	c rotationPivot
	d ignoreEntities
	e boundingBox
	f keepLiquids
	g random
	h palette
	i processors
	j knownShape
	k finalizeEntities
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; copy
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;)Ldzb$a; getRandomPalette
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setRotationPivot
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setRandom
	a (Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setMirror
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setRotation
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setBoundingBox
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; addProcessor
	a (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setIgnoreEntities
	b ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; clearProcessors
	b (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/util/RandomSource; getRandom
	b (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; popProcessor
	b (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setKeepLiquids
	c ()Lnet/minecraft/world/level/block/EnumBlockMirror; getMirror
	c (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setKnownShape
	d ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	d (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setFinalizeEntities
	e ()Lnet/minecraft/core/BlockPosition; getRotationPivot
	f ()Z isIgnoreEntities
	g ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	h ()Z getKnownShape
	i ()Ljava/util/List; getProcessors
	j ()Z shouldKeepLiquids
	k ()Z shouldFinalizeEntities
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessor net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Ljava/util/List;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Ljava/util/List; finalizeProcessing
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorBlackstoneReplace net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor
	a CODEC
	b INSTANCE
	c replacements
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorBlockAge net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor
	a CODEC
	b PROBABILITY_OF_REPLACING_FULL_BLOCK
	c PROBABILITY_OF_REPLACING_STAIRS
	d PROBABILITY_OF_REPLACING_OBSIDIAN
	e NON_MOSSY_REPLACEMENTS
	f mossiness
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/IBlockData; maybeReplaceFullStoneBlock
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/IBlockData; getRandomFacingStairs
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; maybeReplaceStairs
	a (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; getRandomBlock
	a (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/IBlockData;[Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; getRandomBlock
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
	b (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/IBlockData; maybeReplaceSlab
	c (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/IBlockData; maybeReplaceWall
	d (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/IBlockData; maybeReplaceObsidian
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorBlockIgnore net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor
	a CODEC
	b STRUCTURE_BLOCK
	c AIR
	d STRUCTURE_AND_AIR
	e toIgnore
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorGravity net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor
	a CODEC
	b heightmap
	c offset
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorJigsawReplacement net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor
	a CODEC
	b INSTANCE
	c LOGGER
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorLavaSubmergedBlock net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorNop net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorPredicates net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule
	a DEFAULT_BLOCK_ENTITY_MODIFIER
	b CODEC
	c inputPredicate
	d locPredicate
	e posPredicate
	f outputState
	g blockEntityModifier
	a ()Lnet/minecraft/world/level/block/state/IBlockData; getOutputState
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; getOutputTag
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorRotation net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor
	a CODEC
	b rottableBlocks
	c integrity
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorRule net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor
	a CODEC
	b rules
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTest net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest
	c CODEC
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType
	a ALWAYS_TRUE_TEST
	b BLOCK_TEST
	c BLOCKSTATE_TEST
	d TAG_TEST
	e RANDOM_BLOCK_TEST
	f RANDOM_BLOCKSTATE_TEST
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; register
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType
	a SINGLE_CODEC
	b LIST_OBJECT_CODEC
	c DIRECT_CODEC
	d LIST_CODEC
	e BLOCK_IGNORE
	f BLOCK_ROT
	g GRAVITY
	h JIGSAW_REPLACEMENT
	i RULE
	j NOP
	k BLOCK_AGE
	l BLACKSTONE_REPLACE
	m LAVA_SUBMERGED_BLOCK
	n PROTECTED_BLOCKS
	o CAPPED
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; register
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestBlock net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest
	a CODEC
	b block
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestBlockState net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest
	a CODEC
	b blockState
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestRandomBlock net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest
	a CODEC
	b block
	d probability
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestRandomBlockState net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest
	a CODEC
	b blockState
	d probability
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestTag net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest
	a CODEC
	b tag
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestTrue net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestAxisAlignedLinear net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest
	a CODEC
	b minChance
	d maxChance
	e minDist
	f maxDist
	g axis
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; getType
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestLinear net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest
	a CODEC
	b minChance
	d maxChance
	e minDist
	f maxDist
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; getType
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestTrue net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; getType
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorList net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList
	a list
	a ()Ljava/util/List; list
net/minecraft/world/level/levelgen/synth/NoiseGenerator3 net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise
	a noiseLevels
	b highestFreqValueFactor
	c highestFreqInputFactor
	a (DDZ)D getValue
net/minecraft/world/level/levelgen/synth/NoiseGenerator3Handler net/minecraft/world/level/levelgen/synth/SimplexNoise
	a GRADIENT
	b xo
	c yo
	d zo
	e SQRT_3
	f F2
	g G2
	h p
	a (DD)D getValue
	a (DDD)D getValue
	a (I)I p
	a (IDDDD)D getCornerNoise3D
	a ([IDDD)D dot
net/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal net/minecraft/world/level/levelgen/synth/NormalNoise
	a INPUT_FACTOR
	b TARGET_DEVIATION
	c valueFactor
	d first
	e second
	f maxValue
	g parameters
	a ()D maxValue
	a (DDD)D getValue
	a (I)D expectedDeviation
	a (Ljava/lang/StringBuilder;)V parityConfigString
	a (Lnet/minecraft/util/RandomSource;I[D)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal; create
	a (Lnet/minecraft/util/RandomSource;Ldzp$a;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal; createLegacyNetherBiome
	b ()Ldzp$a; parameters
	b (Lnet/minecraft/util/RandomSource;Ldzp$a;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal; create
net/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves net/minecraft/world/level/levelgen/synth/PerlinNoise
	a ROUND_OFF
	b noiseLevels
	c firstOctave
	d amplitudes
	e lowestFreqValueFactor
	f lowestFreqInputFactor
	g maxValue
	a ()D maxValue
	a (D)D maxBrokenValue
	a (DDD)D getValue
	a (DDDDDZ)D getValue
	a (I)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorPerlin; getOctaveNoise
	a (Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair; makeAmplitudes
	a (Ljava/lang/StringBuilder;)V parityConfigString
	a (Lnet/minecraft/util/RandomSource;)V skipOctave
	a (Lnet/minecraft/util/RandomSource;ID[D)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves; create
	a (Lnet/minecraft/util/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves; createLegacyForLegacyNetherBiome
	a (Lnet/minecraft/util/RandomSource;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves; create
	a (Lnet/minecraft/util/RandomSource;Ljava/util/stream/IntStream;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves; createLegacyForBlendedNoise
	b ()I firstOctave
	b (D)D wrap
	b (Lnet/minecraft/util/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves; create
	b (Lnet/minecraft/util/RandomSource;Ljava/util/stream/IntStream;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves; create
	c ()Lit/unimi/dsi/fastutil/doubles/DoubleList; amplitudes
	c (D)D edgeValue
net/minecraft/world/level/levelgen/synth/NoiseGeneratorPerlin net/minecraft/world/level/levelgen/synth/ImprovedNoise
	a xo
	b yo
	c zo
	d SHIFT_UP_EPSILON
	e p
	a (DDD)D noise
	a (DDDDD)D noise
	a (DDD[D)D noiseWithDerivative
	a (I)I p
	a (IDDD)D gradDot
	a (IIIDDDD)D sampleAndLerp
	a (IIIDDD[D)D sampleWithDerivative
	a (Ljava/lang/StringBuilder;)V parityConfigString
net/minecraft/world/level/lighting/ILightEngine net/minecraft/world/level/lighting/LightEventListener
	J_ ()Z hasLightWork
	a ()I runLightUpdates
	a (Lnet/minecraft/core/BlockPosition;)V checkBlock
	a (Lnet/minecraft/core/BlockPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/core/SectionPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V setLightEnabled
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)V propagateLightSources
net/minecraft/world/level/lighting/LightEngineBlock net/minecraft/world/level/lighting/BlockLightEngine
	g mutablePos
	a (J)V checkNode
	a (JJ)V propagateDecrease
	a (JJI)V propagateIncrease
	a (JLnet/minecraft/world/level/block/state/IBlockData;)I getEmission
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)V propagateLightSources
net/minecraft/world/level/lighting/LightEngineGraph net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint
	a NO_COMPUTED_LEVEL
	b priorityQueue
	c computedLevels
	d hasWork
	e SOURCE
	f levelCount
	a (II)I calculatePriority
	a (J)Z isSource
	a (JI)V setLevel
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	a (JJIIIZ)V checkEdge
	a (JJIZ)V checkEdge
	a (Ljava/util/function/LongPredicate;)V removeIf
	b ()Z hasWork
	b (I)I runUpdates
	b (JJI)I computeLevelFromNeighbor
	b (JJIZ)V checkNeighbor
	c ()I getQueueSize
	c (J)I getLevel
	e (J)V removeFromQueue
	f (J)V checkNode
net/minecraft/world/level/lighting/LightEngineLayerEventListener net/minecraft/world/level/lighting/LayerLightEventListener
	a (Lnet/minecraft/core/SectionPosition;)Lnet/minecraft/world/level/chunk/NibbleArray; getDataLayerData
	b (Lnet/minecraft/core/BlockPosition;)I getLightValue
net/minecraft/world/level/lighting/LightEngineLayerEventListener$Void net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener
	a INSTANCE
	b $VALUES
	J_ ()Z hasLightWork
	a ()I runLightUpdates
	a (Lnet/minecraft/core/BlockPosition;)V checkBlock
	a (Lnet/minecraft/core/SectionPosition;)Lnet/minecraft/world/level/chunk/NibbleArray; getDataLayerData
	a (Lnet/minecraft/core/SectionPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V setLightEnabled
	b (Lnet/minecraft/core/BlockPosition;)I getLightValue
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)V propagateLightSources
	c ()[Lnet/minecraft/world/level/lighting/LightEngineLayerEventListener$Void; $values
net/minecraft/world/level/lighting/LightEngineSky net/minecraft/world/level/lighting/SkyLightEngine
	g REMOVE_TOP_SKY_SOURCE_ENTRY
	h REMOVE_SKY_SOURCE_ENTRY
	i ADD_SKY_SOURCE_ENTRY
	j mutablePos
	k emptyChunkSources
	a (I)Z isSourceLevel
	a (III)I getLowestSourceY
	a (IIII)V removeSourcesBelow
	a (J)V checkNode
	a (JJ)V propagateDecrease
	a (JJI)V propagateIncrease
	a (JLnet/minecraft/core/EnumDirection;IZI)V propagateFromEmptySections
	a (Lnet/minecraft/core/EnumDirection;II)Z crossedSectionEdge
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V setLightEnabled
	b (II)Lnet/minecraft/world/level/lighting/ChunkSkyLightSources; getChunkSources
	b (III)V updateSourcesInColumn
	b (IIII)V addSourcesAbove
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)V propagateLightSources
	d (J)I countEmptySectionsBelowIfAtBorder
net/minecraft/world/level/lighting/LightEngineStorage net/minecraft/world/level/lighting/LayerLightSectionStorage
	a chunkSource
	b sectionStates
	c visibleSectionData
	d updatingSectionData
	e changedSections
	f sectionsAffectedByLightUpdates
	g queuedSections
	h hasInconsistencies
	i layer
	j columnsWithSources
	k columnsToRetainQueuedDataFor
	l toRemove
	a ()Z hasInconsistencies
	a (J)I getLightValue
	a (JB)V putSectionState
	a (JI)V setStoredLevel
	a (JLnet/minecraft/world/level/chunk/NibbleArray;)V queueSectionData
	a (JZ)Lnet/minecraft/world/level/chunk/NibbleArray; getDataLayer
	a (Lnet/minecraft/world/level/lighting/LightEngine;)V markNewInconsistencies
	a (Lnet/minecraft/world/level/lighting/LightEngineStorageArray;J)Lnet/minecraft/world/level/chunk/NibbleArray; getDataLayer
	b ()V swapSectionMap
	b (J)Z storingLightForSection
	b (JZ)V setLightEnabled
	c (J)Lnet/minecraft/world/level/chunk/NibbleArray; getDataLayerToWrite
	c (JZ)V retainData
	d (J)Lnet/minecraft/world/level/chunk/NibbleArray; getDataLayerData
	d (JZ)V updateSectionStatus
	e (J)I getStoredLevel
	f (J)V markSectionAndNeighborsAsAffected
	g (J)Lnet/minecraft/world/level/chunk/NibbleArray; createDataLayer
	h (J)V onNodeAdded
	i (J)V onNodeRemoved
	j (J)Z lightOnInSection
	k (J)Leaa$b; getDebugSectionType
	l (J)V initializeSection
	m (J)V removeSection
net/minecraft/world/level/lighting/LightEngineStorageArray net/minecraft/world/level/lighting/DataLayerStorageMap
	a map
	b CACHE_SIZE
	c lastSectionKeys
	d lastSections
	e cacheEnabled
	a (J)Lnet/minecraft/world/level/chunk/NibbleArray; copyDataLayer
	a (JLnet/minecraft/world/level/chunk/NibbleArray;)V setLayer
	b ()Lnet/minecraft/world/level/lighting/LightEngineStorageArray; copy
	b (J)Z hasLayer
	c ()V clearCache
	c (J)Lnet/minecraft/world/level/chunk/NibbleArray; getLayer
	d ()V disableCache
	d (J)Lnet/minecraft/world/level/chunk/NibbleArray; removeLayer
net/minecraft/world/level/lighting/LightEngineStorageBlock net/minecraft/world/level/lighting/BlockLightSectionStorage
	a (J)I getLightValue
net/minecraft/world/level/lighting/LightEngineStorageSky net/minecraft/world/level/lighting/SkyLightSectionStorage
	a (I)Z hasLightDataAtOrBelow
	a (J)I getLightValue
	a (Lnet/minecraft/world/level/chunk/NibbleArray;)Lnet/minecraft/world/level/chunk/NibbleArray; repeatFirstLayer
	c ()I getBottomSectionY
	e (JZ)I getLightValue
	g (J)Lnet/minecraft/world/level/chunk/NibbleArray; createDataLayer
	h (J)V onNodeAdded
	i (J)V onNodeRemoved
	l (J)Z isAboveData
	m (J)I getTopSectionY
net/minecraft/world/level/material/EnumPistonReaction net/minecraft/world/level/material/PushReaction
	a NORMAL
	b DESTROY
	c BLOCK
	d IGNORE
	e PUSH_ONLY
	f $VALUES
	a ()[Lnet/minecraft/world/level/material/EnumPistonReaction; $values
net/minecraft/world/level/material/Fluid net/minecraft/world/level/material/FluidState
	a CODEC
	b AMOUNT_MAX
	g AMOUNT_FULL
	a ()Lnet/minecraft/world/level/material/FluidType; getType
	a (Lnet/minecraft/core/HolderSet;)Z is
	a (Lnet/minecraft/tags/TagKey;)Z is
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getHeight
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V tick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/material/FluidType;)Z isSourceOfType
	b ()Z isSource
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z shouldRenderBackwardUpFace
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/material/FluidType;)Z is
	c ()Z isEmpty
	c (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/Vec3D; getFlow
	d ()F getOwnHeight
	d (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	e ()I getAmount
	f ()Z isRandomlyTicking
	g ()Lnet/minecraft/world/level/block/state/IBlockData; createLegacyBlock
	h ()Lnet/minecraft/core/particles/ParticleParam; getDripParticle
	i ()F getExplosionResistance
	j ()Lnet/minecraft/core/Holder; holder
	k ()Ljava/util/stream/Stream; getTags
net/minecraft/world/level/material/FluidType net/minecraft/world/level/material/Fluid
	a defaultFluidState
	b builtInRegistryHolder
	c FLUID_STATE_REGISTRY
	d stateDefinition
	a ()Lnet/minecraft/world/item/Item; getBucket
	a (Ldfk$a;)V createFluidStateDefinition
	a (Lnet/minecraft/tags/TagKey;)Z is
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/phys/Vec3D; getFlow
	a (Lnet/minecraft/world/level/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/material/Fluid;)F getOwnHeight
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getHeight
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/world/level/material/FluidType;)Z isSame
	b ()Z isEmpty
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;)V tick
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/block/state/IBlockData; createLegacyBlock
	b (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c ()F getExplosionResistance
	c (Lnet/minecraft/world/level/material/Fluid;)Z isSource
	d (Lnet/minecraft/world/level/material/Fluid;)I getAmount
	f ()Lnet/minecraft/world/level/block/state/BlockStateList; getStateDefinition
	f (Lnet/minecraft/world/level/material/Fluid;)V registerDefaultState
	g ()Lnet/minecraft/world/level/material/Fluid; defaultFluidState
	h ()Lnet/minecraft/core/particles/ParticleParam; getDripParticle
	i ()Z isRandomlyTicking
	j ()Ljava/util/Optional; getPickupSound
	k ()Lhe$c; builtInRegistryHolder
net/minecraft/world/level/material/FluidTypeEmpty net/minecraft/world/level/material/EmptyFluid
	a ()Lnet/minecraft/world/item/Item; getBucket
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/phys/Vec3D; getFlow
	a (Lnet/minecraft/world/level/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/world/level/material/Fluid;)F getOwnHeight
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getHeight
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/EnumDirection;)Z canBeReplacedWith
	b ()Z isEmpty
	b (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/block/state/IBlockData; createLegacyBlock
	b (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c ()F getExplosionResistance
	c (Lnet/minecraft/world/level/material/Fluid;)Z isSource
	d (Lnet/minecraft/world/level/material/Fluid;)I getAmount
net/minecraft/world/level/material/FluidTypeFlowing net/minecraft/world/level/material/FlowingFluid
	a FALLING
	b LEVEL
	e CACHE_SIZE
	f OCCLUSION_CACHE
	g shapes
	a (IZ)Lnet/minecraft/world/level/material/Fluid; getFlowing
	a (Ldfk$a;)V createFluidStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)S getCacheKey
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canPassThroughWall
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/material/Fluid;)V spreadTo
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isSolidFace
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/material/FluidType;)Z canSpreadTo
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canHoldFluid
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/phys/Vec3D; getFlow
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isWaterHole
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z canPassThrough
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)I sourceNeighborCount
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I getSlopeDistance
	a (Lnet/minecraft/world/level/World;)Z canConvertToSource
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getNewLiquid
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;)V spread
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/block/state/IBlockData;)V spreadToSides
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/material/Fluid;)I getSpreadDelay
	a (Lnet/minecraft/world/level/material/Fluid;)F getOwnHeight
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getHeight
	a (Z)Lnet/minecraft/world/level/material/Fluid; getSource
	b (Lnet/minecraft/world/level/IWorldReader;)I getSlopeFindDistance
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Map; getSpread
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;)V tick
	b (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c (Lnet/minecraft/world/level/IWorldReader;)I getDropOff
	c (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z hasSameAbove
	d ()Lnet/minecraft/world/level/material/FluidType; getFlowing
	d (Lnet/minecraft/world/level/material/Fluid;)I getAmount
	e ()Lnet/minecraft/world/level/material/FluidType; getSource
	e (Lnet/minecraft/world/level/material/Fluid;)I getLegacyLevel
	g (Lnet/minecraft/world/level/material/Fluid;)Z affectsFlow
	h (Lnet/minecraft/world/level/material/Fluid;)Z isSourceBlockOfThisType
net/minecraft/world/level/material/FluidTypeLava net/minecraft/world/level/material/LavaFluid
	e MIN_LEVEL_CUTOFF
	a ()Lnet/minecraft/world/item/Item; getBucket
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V fizz
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/material/Fluid;)V spreadTo
	a (Lnet/minecraft/world/level/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z hasFlammableNeighbours
	a (Lnet/minecraft/world/level/World;)Z canConvertToSource
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/material/Fluid;)I getSpreadDelay
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/world/level/material/FluidType;)Z isSame
	b (Lnet/minecraft/world/level/IWorldReader;)I getSlopeFindDistance
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isFlammable
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/block/state/IBlockData; createLegacyBlock
	c ()F getExplosionResistance
	c (Lnet/minecraft/world/level/IWorldReader;)I getDropOff
	d ()Lnet/minecraft/world/level/material/FluidType; getFlowing
	e ()Lnet/minecraft/world/level/material/FluidType; getSource
	h ()Lnet/minecraft/core/particles/ParticleParam; getDripParticle
	i ()Z isRandomlyTicking
	j ()Ljava/util/Optional; getPickupSound
net/minecraft/world/level/material/FluidTypeWater net/minecraft/world/level/material/WaterFluid
	a ()Lnet/minecraft/world/item/Item; getBucket
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/world/level/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/world/level/World;)Z canConvertToSource
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/world/level/material/FluidType;)Z isSame
	b (Lnet/minecraft/world/level/IWorldReader;)I getSlopeFindDistance
	b (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/block/state/IBlockData; createLegacyBlock
	c ()F getExplosionResistance
	c (Lnet/minecraft/world/level/IWorldReader;)I getDropOff
	d ()Lnet/minecraft/world/level/material/FluidType; getFlowing
	e ()Lnet/minecraft/world/level/material/FluidType; getSource
	h ()Lnet/minecraft/core/particles/ParticleParam; getDripParticle
	j ()Ljava/util/Optional; getPickupSound
net/minecraft/world/level/material/FluidTypes net/minecraft/world/level/material/Fluids
	a EMPTY
	b FLOWING_WATER
	c WATER
	d FLOWING_LAVA
	e LAVA
	a (Ljava/lang/String;Lnet/minecraft/world/level/material/FluidType;)Lnet/minecraft/world/level/material/FluidType; register
net/minecraft/world/level/material/MaterialMapColor net/minecraft/world/level/material/MapColor
	A COLOR_BROWN
	B COLOR_GREEN
	C COLOR_RED
	D COLOR_BLACK
	E GOLD
	F DIAMOND
	G LAPIS
	H EMERALD
	I PODZOL
	J NETHER
	K TERRACOTTA_WHITE
	L TERRACOTTA_ORANGE
	M TERRACOTTA_MAGENTA
	N TERRACOTTA_LIGHT_BLUE
	O TERRACOTTA_YELLOW
	P TERRACOTTA_LIGHT_GREEN
	Q TERRACOTTA_PINK
	R TERRACOTTA_GRAY
	S TERRACOTTA_LIGHT_GRAY
	T TERRACOTTA_CYAN
	U TERRACOTTA_PURPLE
	V TERRACOTTA_BLUE
	W TERRACOTTA_BROWN
	X TERRACOTTA_GREEN
	Y TERRACOTTA_RED
	Z TERRACOTTA_BLACK
	a NONE
	aa CRIMSON_NYLIUM
	ab CRIMSON_STEM
	ac CRIMSON_HYPHAE
	ad WARPED_NYLIUM
	ae WARPED_STEM
	af WARPED_HYPHAE
	ag WARPED_WART_BLOCK
	ah DEEPSLATE
	ai RAW_IRON
	aj GLOW_LICHEN
	ak col
	al id
	am MATERIAL_COLORS
	b GRASS
	c SAND
	d WOOL
	e FIRE
	f ICE
	g METAL
	h PLANT
	i SNOW
	j CLAY
	k DIRT
	l STONE
	m WATER
	n WOOD
	o QUARTZ
	p COLOR_ORANGE
	q COLOR_MAGENTA
	r COLOR_LIGHT_BLUE
	s COLOR_YELLOW
	t COLOR_LIGHT_GREEN
	u COLOR_PINK
	v COLOR_GRAY
	w COLOR_LIGHT_GRAY
	x COLOR_CYAN
	y COLOR_PURPLE
	z COLOR_BLUE
	a (I)Lnet/minecraft/world/level/material/MaterialMapColor; byId
	a (Leaq$a;)I calculateRGBColor
	b (I)I getColorFromPackedId
	b (Leaq$a;)B getPackedId
	c (I)Lnet/minecraft/world/level/material/MaterialMapColor; byIdUnsafe
net/minecraft/world/level/pathfinder/Path net/minecraft/world/level/pathfinder/BinaryHeap
	a heap
	b size
	a ()V clear
	a (I)V upHeap
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;)Lnet/minecraft/world/level/pathfinder/PathPoint; insert
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;F)V changeCost
	b ()Lnet/minecraft/world/level/pathfinder/PathPoint; peek
	b (I)V downHeap
	b (Lnet/minecraft/world/level/pathfinder/PathPoint;)V remove
	c ()Lnet/minecraft/world/level/pathfinder/PathPoint; pop
	d ()I size
	e ()Z isEmpty
	f ()[Lnet/minecraft/world/level/pathfinder/PathPoint; getHeap
net/minecraft/world/level/pathfinder/PathDestination net/minecraft/world/level/pathfinder/Target
	m bestHeuristic
	n bestNode
	o reached
	a (FLnet/minecraft/world/level/pathfinder/PathPoint;)V updateBest
	c (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/pathfinder/PathDestination; createFromStream
	d ()Lnet/minecraft/world/level/pathfinder/PathPoint; getBestNode
	e ()V setReached
	f ()Z isReached
net/minecraft/world/level/pathfinder/PathEntity net/minecraft/world/level/pathfinder/Path
	a nodes
	b debugData
	c nextNodeIndex
	d target
	e distToTarget
	f reached
	a ()V advance
	a (I)Lnet/minecraft/world/level/pathfinder/PathPoint; getNode
	a (ILnet/minecraft/world/level/pathfinder/PathPoint;)V replaceNode
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToStream
	a (Lnet/minecraft/network/PacketDataSerializer;[Lnet/minecraft/world/level/pathfinder/PathPoint;)V writeNodeArray
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3D; getNextEntityPos
	a (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/phys/Vec3D; getEntityPosAtNode
	a (Lnet/minecraft/world/level/pathfinder/PathEntity;)Z sameAs
	a ([Lnet/minecraft/world/level/pathfinder/PathPoint;[Lnet/minecraft/world/level/pathfinder/PathPoint;Ljava/util/Set;)V setDebug
	b ()Z notStarted
	b (I)V truncateNodes
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/pathfinder/PathEntity; createFromStream
	c ()Z isDone
	c (I)V setNextNodeIndex
	c (Lnet/minecraft/network/PacketDataSerializer;)[Lnet/minecraft/world/level/pathfinder/PathPoint; readNodeArray
	d ()Lnet/minecraft/world/level/pathfinder/PathPoint; getEndNode
	d (I)Lnet/minecraft/core/BlockPosition; getNodePos
	e ()I getNodeCount
	f ()I getNextNodeIndex
	g ()Lnet/minecraft/core/BlockPosition; getNextNodePos
	h ()Lnet/minecraft/world/level/pathfinder/PathPoint; getNextNode
	i ()Lnet/minecraft/world/level/pathfinder/PathPoint; getPreviousNode
	j ()Z canReach
	k ()Lebb$a; debugData
	l ()Lnet/minecraft/core/BlockPosition; getTarget
	m ()F getDistToTarget
	n ()Lnet/minecraft/world/level/pathfinder/PathEntity; copy
net/minecraft/world/level/pathfinder/PathMode net/minecraft/world/level/pathfinder/PathComputationType
	a LAND
	b WATER
	c AIR
	d $VALUES
	a ()[Lnet/minecraft/world/level/pathfinder/PathMode; $values
net/minecraft/world/level/pathfinder/PathPoint net/minecraft/world/level/pathfinder/Node
	a x
	b y
	c z
	d heapIdx
	e g
	f h
	g f
	h cameFrom
	i closed
	j walkedDistance
	k costMalus
	l type
	m hash
	a ()Lnet/minecraft/core/BlockPosition; asBlockPos
	a (III)Lnet/minecraft/world/level/pathfinder/PathPoint; cloneAndMove
	a (Lnet/minecraft/core/BlockPosition;)F distanceTo
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToStream
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/pathfinder/PathPoint;)V readContents
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;)F distanceTo
	b ()Lnet/minecraft/world/phys/Vec3D; asVec3
	b (III)I createHash
	b (Lnet/minecraft/core/BlockPosition;)F distanceToSqr
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/pathfinder/PathPoint; createFromStream
	b (Lnet/minecraft/world/level/pathfinder/PathPoint;)F distanceToXZ
	c ()Z inOpenSet
	c (Lnet/minecraft/core/BlockPosition;)F distanceManhattan
	c (Lnet/minecraft/world/level/pathfinder/PathPoint;)F distanceToSqr
	d (Lnet/minecraft/world/level/pathfinder/PathPoint;)F distanceManhattan
net/minecraft/world/level/pathfinder/PathType net/minecraft/world/level/pathfinder/BlockPathTypes
	A $VALUES
	a BLOCKED
	b OPEN
	c WALKABLE
	d WALKABLE_DOOR
	e TRAPDOOR
	f POWDER_SNOW
	g DANGER_POWDER_SNOW
	h FENCE
	i LAVA
	j WATER
	k WATER_BORDER
	l RAIL
	m UNPASSABLE_RAIL
	n DANGER_FIRE
	o DAMAGE_FIRE
	p DANGER_OTHER
	q DAMAGE_OTHER
	r DOOR_OPEN
	s DOOR_WOOD_CLOSED
	t DOOR_IRON_CLOSED
	u BREACH
	v LEAVES
	w STICKY_HONEY
	x COCOA
	y DAMAGE_CAUTIOUS
	z malus
	a ()F getMalus
	b ()[Lnet/minecraft/world/level/pathfinder/PathType; $values
net/minecraft/world/level/pathfinder/Pathfinder net/minecraft/world/level/pathfinder/PathFinder
	a FUDGING
	b neighbors
	c maxVisitedNodes
	d nodeEvaluator
	e DEBUG
	f openSet
	a (Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/world/level/pathfinder/PathPoint;Ljava/util/Map;FIF)Lnet/minecraft/world/level/pathfinder/PathEntity; findPath
	a (Lnet/minecraft/world/level/ChunkCache;Lnet/minecraft/world/entity/EntityInsentient;Ljava/util/Set;FIF)Lnet/minecraft/world/level/pathfinder/PathEntity; findPath
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;Ljava/util/Set;)F getBestH
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/level/pathfinder/PathEntity; reconstructPath
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)F distance
net/minecraft/world/level/pathfinder/PathfinderAbstract net/minecraft/world/level/pathfinder/NodeEvaluator
	a level
	b mob
	c nodes
	d entityWidth
	e entityHeight
	f entityDepth
	g canPassDoors
	h canOpenDoors
	i canFloat
	j canWalkOverFences
	a ()Lnet/minecraft/world/level/pathfinder/PathPoint; getStart
	a (DDD)Lnet/minecraft/world/level/pathfinder/PathDestination; getGoal
	a (Lnet/minecraft/world/level/ChunkCache;Lnet/minecraft/world/entity/EntityInsentient;)V prepare
	a (Lnet/minecraft/world/level/IBlockAccess;III)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/IBlockAccess;IIILnet/minecraft/world/entity/EntityInsentient;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;)Lnet/minecraft/world/level/pathfinder/PathDestination; getTargetFromNode
	a (Z)V setCanPassDoors
	a ([Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)I getNeighbors
	b ()V done
	b (III)Lnet/minecraft/world/level/pathfinder/PathPoint; getNode
	b (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/pathfinder/PathPoint; getNode
	b (Z)V setCanOpenDoors
	c (Z)V setCanFloat
	d ()Z canPassDoors
	d (Z)V setCanWalkOverFences
	e ()Z canOpenDoors
	f ()Z canFloat
	g ()Z canWalkOverFences
net/minecraft/world/level/pathfinder/PathfinderFlying net/minecraft/world/level/pathfinder/FlyNodeEvaluator
	l pathTypeByPosCache
	m SMALL_MOB_INFLATED_START_NODE_BOUNDING_BOX
	n MAX_START_NODE_CANDIDATES
	a ()Lnet/minecraft/world/level/pathfinder/PathPoint; getStart
	a (DDD)Lnet/minecraft/world/level/pathfinder/PathDestination; getGoal
	a (III)Lnet/minecraft/world/level/pathfinder/PathPoint; findAcceptedNode
	a (Lnet/minecraft/core/BlockPosition;)Z canStartAt
	a (Lnet/minecraft/world/entity/EntityInsentient;)Ljava/lang/Iterable; iteratePathfindingStartNodeCandidatePositions
	a (Lnet/minecraft/world/level/ChunkCache;Lnet/minecraft/world/entity/EntityInsentient;)V prepare
	a (Lnet/minecraft/world/level/IBlockAccess;III)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/IBlockAccess;IIILnet/minecraft/world/entity/EntityInsentient;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a ([Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)I getNeighbors
	b ()V done
	b (Lnet/minecraft/world/level/pathfinder/PathPoint;)Z hasMalus
	c (III)Lnet/minecraft/world/level/pathfinder/PathType; getCachedBlockPathType
	c (Lnet/minecraft/world/level/pathfinder/PathPoint;)Z isOpen
net/minecraft/world/level/pathfinder/PathfinderNormal net/minecraft/world/level/pathfinder/WalkNodeEvaluator
	k SPACE_BETWEEN_WALL_POSTS
	l DEFAULT_MOB_JUMP_HEIGHT
	m pathTypesByPosCache
	n collisionCache
	a ()Lnet/minecraft/world/level/pathfinder/PathPoint; getStart
	a (DDD)Lnet/minecraft/world/level/pathfinder/PathDestination; getGoal
	a (III)Lnet/minecraft/world/level/pathfinder/PathPoint; getBlockedNode
	a (IIIIDLnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/pathfinder/PathType;)Lnet/minecraft/world/level/pathfinder/PathPoint; findAcceptedNode
	a (IIILnet/minecraft/world/level/pathfinder/PathType;F)Lnet/minecraft/world/level/pathfinder/PathPoint; getNodeAndUpdateCostToMax
	a (Lnet/minecraft/core/BlockPosition;)Z canStartAt
	a (Lnet/minecraft/world/entity/EntityInsentient;III)Lnet/minecraft/world/level/pathfinder/PathType; getCachedBlockType
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/ChunkCache;Lnet/minecraft/world/entity/EntityInsentient;)V prepare
	a (Lnet/minecraft/world/level/IBlockAccess;III)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/IBlockAccess;IIILjava/util/EnumSet;Lnet/minecraft/world/level/pathfinder/PathType;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathTypes
	a (Lnet/minecraft/world/level/IBlockAccess;IIILnet/minecraft/world/entity/EntityInsentient;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathTypeStatic
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/pathfinder/PathType;)Lnet/minecraft/world/level/pathfinder/PathType; checkNeighbourBlocks
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)D getFloorLevel
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathType;)Lnet/minecraft/world/level/pathfinder/PathType; evaluateBlockPathType
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isBurningBlock
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)Z isNeighborValid
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)Z isDiagonalValid
	a (Lnet/minecraft/world/level/pathfinder/PathType;)Z doesBlockHavePartialCollision
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)Z hasCollisions
	a ([Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)I getNeighbors
	b ()V done
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathTypeRaw
	b (Lnet/minecraft/world/level/pathfinder/PathPoint;)Z canReachWithoutCollision
	c ()Z isAmphibious
	c (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/pathfinder/PathPoint; getStartNode
	d (Lnet/minecraft/core/BlockPosition;)D getFloorLevel
	h ()D getMobJumpHeight
net/minecraft/world/level/pathfinder/PathfinderWater net/minecraft/world/level/pathfinder/SwimNodeEvaluator
	k allowBreaching
	l pathTypesByPosCache
	a ()Lnet/minecraft/world/level/pathfinder/PathPoint; getStart
	a (DDD)Lnet/minecraft/world/level/pathfinder/PathDestination; getGoal
	a (III)Lnet/minecraft/world/level/pathfinder/PathPoint; findAcceptedNode
	a (Lnet/minecraft/world/level/ChunkCache;Lnet/minecraft/world/entity/EntityInsentient;)V prepare
	a (Lnet/minecraft/world/level/IBlockAccess;III)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/IBlockAccess;IIILnet/minecraft/world/entity/EntityInsentient;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)Z isDiagonalNodeValid
	a ([Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)I getNeighbors
	b ()V done
	b (Lnet/minecraft/world/level/pathfinder/PathPoint;)Z isNodeValid
	c (III)Lnet/minecraft/world/level/pathfinder/PathType; getCachedBlockType
net/minecraft/world/level/portal/BlockPortalShape net/minecraft/world/level/portal/PortalShape
	a MAX_WIDTH
	b MAX_HEIGHT
	c MIN_WIDTH
	d MIN_HEIGHT
	e FRAME
	f SAFE_TRAVEL_MAX_ENTITY_XY
	g SAFE_TRAVEL_MAX_VERTICAL_DELTA
	h level
	i axis
	j rightDir
	k numPortalBlocks
	l bottomLeft
	m height
	n width
	a ()Z isValid
	a (Lnet/minecraft/BlockUtil$Rectangle;Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/EntitySize;)Lnet/minecraft/world/phys/Vec3D; getRelativePosition
	a (Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)I getDistanceUntilTop
	a (Lnet/minecraft/core/BlockPosition$MutableBlockPosition;I)Z hasTopFrame
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; calculateBottomLeft
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDistanceUntilEdgeAboveFrame
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/BlockUtil$Rectangle;Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3D;FF)Lnet/minecraft/world/level/portal/ShapeDetectorShape; createPortalInfo
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;Lnet/minecraft/core/EnumDirection$EnumAxis;)Ljava/util/Optional; findPortalShape
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection$EnumAxis;)Ljava/util/Optional; findEmptyPortalShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isEmpty
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;)Lnet/minecraft/world/phys/Vec3D; findCollisionFreePosition
	b ()V createPortalBlocks
	c ()Z isComplete
	d ()I calculateWidth
	e ()I calculateHeight
net/minecraft/world/level/portal/PortalTravelAgent net/minecraft/world/level/portal/PortalForcer
	a TICKET_RADIUS
	b SEARCH_RADIUS
	c CREATE_RADIUS
	d FRAME_HEIGHT
	e FRAME_WIDTH
	f FRAME_BOX
	g FRAME_HEIGHT_START
	h FRAME_HEIGHT_END
	i FRAME_WIDTH_START
	j FRAME_WIDTH_END
	k FRAME_BOX_START
	l FRAME_BOX_END
	m NOTHING_FOUND
	n level
	a (Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)Z canPortalReplaceBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/core/EnumDirection;I)Z canHostFrame
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection$EnumAxis;)Ljava/util/Optional; createPortal
	a (Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; findPortalAround
net/minecraft/world/level/portal/ShapeDetectorShape net/minecraft/world/level/portal/PortalInfo
	a pos
	b speed
	c yRot
	d xRot
net/minecraft/world/level/saveddata/PersistentBase net/minecraft/world/level/saveddata/SavedData
	a LOGGER
	b dirty
	a (Ljava/io/File;)V save
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Z)V setDirty
	c ()V setDirty
	d ()Z isDirty
net/minecraft/world/level/saveddata/maps/MapIcon net/minecraft/world/level/saveddata/maps/MapDecoration
	a type
	b x
	c y
	d rot
	e name
	a ()B getImage
	b ()Z renderOnFrame
	c ()Lnet/minecraft/world/level/saveddata/maps/MapIcon$Type; type
	d ()B x
	e ()B y
	f ()B rot
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; name
net/minecraft/world/level/saveddata/maps/MapIcon$Type net/minecraft/world/level/saveddata/maps/MapDecoration$Type
	A RED_X
	B DESERT_VILLAGE
	C PLAINS_VILLAGE
	D SAVANNA_VILLAGE
	E SNOWY_VILLAGE
	F TAIGA_VILLAGE
	G JUNGLE_TEMPLE
	H SWAMP_HUT
	I CODEC
	J name
	K icon
	L renderedOnFrame
	M mapColor
	N isExplorationMapElement
	O trackCount
	P $VALUES
	a PLAYER
	b FRAME
	c RED_MARKER
	d BLUE_MARKER
	e TARGET_X
	f TARGET_POINT
	g PLAYER_OFF_MAP
	h PLAYER_OFF_LIMITS
	i MANSION
	j MONUMENT
	k BANNER_WHITE
	l BANNER_ORANGE
	m BANNER_MAGENTA
	n BANNER_LIGHT_BLUE
	o BANNER_YELLOW
	p BANNER_LIME
	q BANNER_PINK
	r BANNER_GRAY
	s BANNER_LIGHT_GRAY
	t BANNER_CYAN
	u BANNER_PURPLE
	v BANNER_BLUE
	w BANNER_BROWN
	x BANNER_GREEN
	y BANNER_RED
	z BANNER_BLACK
	a ()B getIcon
	a (B)Lnet/minecraft/world/level/saveddata/maps/MapIcon$Type; byIcon
	b ()Z isExplorationMapElement
	c ()Ljava/lang/String; getSerializedName
	d ()Z isRenderedOnFrame
	e ()Z hasMapColor
	f ()I getMapColor
	g ()Z shouldTrackCount
	h ()[Lnet/minecraft/world/level/saveddata/maps/MapIcon$Type; $values
net/minecraft/world/level/saveddata/maps/MapIconBanner net/minecraft/world/level/saveddata/maps/MapBanner
	a pos
	b color
	c name
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/saveddata/maps/MapIconBanner; load
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/saveddata/maps/MapIconBanner; fromWorld
	b ()Lnet/minecraft/world/item/EnumColor; getColor
	c ()Lnet/minecraft/world/level/saveddata/maps/MapIcon$Type; getDecoration
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	e ()Lnet/minecraft/nbt/NBTTagCompound; save
	f ()Ljava/lang/String; getId
net/minecraft/world/level/saveddata/maps/PersistentIdCounts net/minecraft/world/level/saveddata/maps/MapIndex
	a FILE_NAME
	b usedAuxIds
	a ()Lebr$a; factory
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	b ()I getFreeAuxValueForMap
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/saveddata/maps/PersistentIdCounts; load
net/minecraft/world/level/saveddata/maps/WorldMap net/minecraft/world/level/saveddata/maps/MapItemSavedData
	a MAX_SCALE
	b TRACKED_DECORATION_LIMIT
	c centerX
	d centerZ
	e dimension
	f scale
	g colors
	h locked
	i LOGGER
	j MAP_SIZE
	k HALF_MAP_SIZE
	l trackingPosition
	m unlimitedTracking
	n carriedBy
	o carriedByPlayers
	p bannerMarkers
	q decorations
	r frameMarkers
	s trackedDecorationCount
	a ()Lebr$a; factory
	a (BZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; createForClient
	a (DDBZZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; createFresh
	a (I)Lnet/minecraft/world/level/saveddata/maps/WorldMap; scaled
	a (II)V setColorsDirty
	a (IIB)Z updateColor
	a (ILnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	a (Ljava/lang/String;)V removeDecoration
	a (Ljava/util/List;)V addClientSideDecorations
	a (Lnet/minecraft/core/BlockPosition;I)V removedFromFrame
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/level/saveddata/maps/WorldMap$WorldMapHumanTracker; getHoldingPlayer
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V tickCarriedBy
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapIcon$Type;)V addTargetDecoration
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z toggleBanner
	a (Lnet/minecraft/world/level/IBlockAccess;II)V checkBanners
	a (Lnet/minecraft/world/level/saveddata/maps/MapIcon$Type;Lnet/minecraft/world/level/GeneratorAccess;Ljava/lang/String;DDDLnet/minecraft/network/chat/IChatBaseComponent;)V addDecoration
	b ()Lnet/minecraft/world/level/saveddata/maps/WorldMap; locked
	b (I)Z isTrackedCountOverLimit
	b (IIB)V setColor
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; load
	e ()Ljava/util/Collection; getBanners
	f ()Z isExplorationMap
	g ()Ljava/lang/Iterable; getDecorations
	h ()V setDecorationsDirty
net/minecraft/world/level/saveddata/maps/WorldMap$WorldMapHumanTracker net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer
	a player
	b step
	d dirtyData
	e minDirtyX
	f minDirtyY
	g maxDirtyX
	h maxDirtyY
	i dirtyDecorations
	j tick
	a ()Lebw$b; createPatch
	a (I)Lnet/minecraft/network/protocol/Packet; nextUpdatePacket
	a (II)V markColorsDirty
	b ()V markDecorationsDirty
net/minecraft/world/level/saveddata/maps/WorldMapFrame net/minecraft/world/level/saveddata/maps/MapFrame
	a pos
	b rotation
	c entityId
	a ()Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/core/BlockPosition;)Ljava/lang/String; frameId
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/saveddata/maps/WorldMapFrame; load
	b ()Lnet/minecraft/core/BlockPosition; getPos
	c ()I getRotation
	d ()I getEntityId
	e ()Ljava/lang/String; getId
net/minecraft/world/level/storage/Convertable net/minecraft/world/level/storage/LevelStorageSource
	a ALLOWED_SYMLINKS_CONFIG_NAME
	b LOGGER
	c FORMATTER
	d OLD_SETTINGS_KEYS
	e TAG_DATA
	f NO_SYMLINKS_ALLOWED
	g SUMMARY_UNCOMPRESSED_NBT_QUOTA
	h baseDir
	i backupDir
	j fixerUpper
	k worldDirValidator
	a ()Ljava/lang/String; getName
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/WorldDataConfiguration; readDataConfig
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/serialization/DataResult; readWorldGenSettings
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/WorldDataConfiguration;Lnet/minecraft/core/IRegistry;Lcom/mojang/serialization/Lifecycle;)Ljava/util/function/BiFunction; getLevelData
	a (Lecg$a;)Ljava/util/concurrent/CompletableFuture; loadLevelSummaries
	a (Lecg$b;Ljava/util/function/BiFunction;)Ljava/lang/Object; readLevelData
	a (Lecg$b;Z)Ljava/util/function/BiFunction; levelSummaryReader
	a (Ljava/lang/String;)Z isNewLevelIdAcceptable
	a (Ljava/nio/file/Path;)Lnet/minecraft/world/level/validation/DirectoryValidator; parseValidator
	a (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/world/level/WorldDataConfiguration; getDataConfiguration
	b ()Lecg$a; findLevelCandidates
	b (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/flag/FeatureFlagSet; parseFeatureFlagsFromSummary
	b (Ljava/lang/String;)Z levelExists
	b (Ljava/nio/file/Path;)Lnet/minecraft/world/level/storage/Convertable; createDefault
	c ()Ljava/nio/file/Path; getBaseDir
	c (Ljava/lang/String;)Ljava/nio/file/Path; getLevelPath
	c (Ljava/nio/file/Path;)Lnet/minecraft/nbt/NBTBase; readLightweightData
	d ()Ljava/nio/file/Path; getBackupPath
	d (Ljava/lang/String;)Lnet/minecraft/world/level/storage/Convertable$ConversionSession; validateAndCreateAccess
	e ()Lnet/minecraft/world/level/validation/DirectoryValidator; getWorldDirValidator
	e (Ljava/lang/String;)Lnet/minecraft/world/level/storage/Convertable$ConversionSession; createAccess
	f ()I getStorageVersion
net/minecraft/world/level/storage/Convertable$ConversionSession net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess
	b lock
	c levelDirectory
	d levelId
	e resources
	a ()Lnet/minecraft/world/level/storage/Convertable; parent
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/WorldDataConfiguration;Lnet/minecraft/core/IRegistry;Lcom/mojang/serialization/Lifecycle;)Lcom/mojang/datafixers/util/Pair; getDataTag
	a (Ljava/lang/String;)V renameLevel
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/level/storage/SaveData;)V saveDataTag
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/level/storage/SaveData;Lnet/minecraft/nbt/NBTTagCompound;)V saveDataTag
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/nio/file/Path; getDimensionPath
	a (Lnet/minecraft/world/level/storage/SavedFile;)Ljava/nio/file/Path; getLevelPath
	b ()Ljava/lang/String; getLevelId
	c ()Lnet/minecraft/world/level/storage/WorldNBTStorage; createPlayerStorage
	d ()Lnet/minecraft/world/level/storage/WorldInfo; getSummary
	e ()Lnet/minecraft/world/level/WorldDataConfiguration; getDataConfiguration
	f ()Ljava/util/Optional; getIconFile
	g ()V deleteLevel
	h ()J makeWorldBackup
	i ()V checkLock
net/minecraft/world/level/storage/IWorldDataServer net/minecraft/world/level/storage/ServerLevelData
	a (I)V setClearWeatherTime
	a (J)V setGameTime
	a (Ldha$c;)V setWorldBorder
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Lnet/minecraft/CrashReportSystemDetails;Lnet/minecraft/world/level/LevelHeightAccessor;)V fillCrashReportCategory
	a (Lnet/minecraft/world/level/EnumGamemode;)V setGameType
	a (Z)V setThundering
	b (J)V setDayTime
	c (Z)V setInitialized
	e (I)V setThunderTime
	f (I)V setRainTime
	g ()Ljava/lang/String; getLevelName
	g (I)V setWanderingTraderSpawnDelay
	h ()I getClearWeatherTime
	h (I)V setWanderingTraderSpawnChance
	j ()I getThunderTime
	l ()I getRainTime
	m ()Lnet/minecraft/world/level/EnumGamemode; getGameType
	o ()Z getAllowCommands
	p ()Z isInitialized
	r ()Ldha$c; getWorldBorder
	u ()Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue; getScheduledEvents
	v ()I getWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
net/minecraft/world/level/storage/PersistentCommandStorage net/minecraft/world/level/storage/CommandStorage
	a ID_PREFIX
	b namespaces
	c storage
	a ()Ljava/util/stream/Stream; keys
	a (Ljava/lang/String;)Lebz$a; newStorage
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/nbt/NBTTagCompound; get
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/nbt/NBTTagCompound;)V set
	b (Ljava/lang/String;)Lebr$a; factory
	c (Ljava/lang/String;)Ljava/lang/String; createId
net/minecraft/world/level/storage/SaveData net/minecraft/world/level/storage/WorldData
	c ANVIL_VERSION_ID
	d MCREGION_VERSION_ID
	A ()Lnet/minecraft/world/level/levelgen/WorldOptions; worldGenOptions
	B ()Z isFlatWorld
	C ()Z isDebugWorld
	D ()Lcom/mojang/serialization/Lifecycle; worldGenSettingsLifecycle
	E ()Ldiv$a; endDragonFightData
	F ()Lnet/minecraft/world/level/WorldDataConfiguration; getDataConfiguration
	G ()Lnet/minecraft/nbt/NBTTagCompound; getCustomBossEvents
	H ()Z wasModded
	I ()Ljava/util/Set; getKnownServerBrands
	J ()Ljava/util/Set; getRemovedFeatureFlags
	K ()Lnet/minecraft/world/level/storage/IWorldDataServer; overworldData
	L ()Lnet/minecraft/world/level/WorldSettings; getLevelSettings
	M ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	a (Ldiv$a;)V setEndDragonFightData
	a (Ljava/lang/String;Z)V setModdedInfo
	a (Lnet/minecraft/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; createTag
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setCustomBossEvents
	a (Lnet/minecraft/world/EnumDifficulty;)V setDifficulty
	a (Lnet/minecraft/world/level/EnumGamemode;)V setGameType
	a (Lnet/minecraft/world/level/WorldDataConfiguration;)V setDataConfiguration
	d (Z)V setDifficultyLocked
	g ()Ljava/lang/String; getLevelName
	i (I)Ljava/lang/String; getStorageVersionName
	m ()Lnet/minecraft/world/level/EnumGamemode; getGameType
	n ()Z isHardcore
	o ()Z getAllowCommands
	q ()Lnet/minecraft/world/level/GameRules; getGameRules
	s ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	t ()Z isDifficultyLocked
	y ()Lnet/minecraft/nbt/NBTTagCompound; getLoadedPlayerTag
	z ()I getVersion
net/minecraft/world/level/storage/SavedFile net/minecraft/world/level/storage/LevelResource
	a PLAYER_ADVANCEMENTS_DIR
	b PLAYER_STATS_DIR
	c PLAYER_DATA_DIR
	d PLAYER_OLD_DATA_DIR
	e LEVEL_DATA_FILE
	f OLD_LEVEL_DATA_FILE
	g ICON_FILE
	h LOCK_FILE
	i GENERATED_DIR
	j DATAPACK_DIR
	k MAP_RESOURCE_FILE
	l ROOT
	m id
	a ()Ljava/lang/String; getId
net/minecraft/world/level/storage/SecondaryWorldData net/minecraft/world/level/storage/DerivedLevelData
	a worldData
	b wrapped
	a ()I getXSpawn
	a (F)V setSpawnAngle
	a (I)V setClearWeatherTime
	a (J)V setGameTime
	a (Ldha$c;)V setWorldBorder
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Lnet/minecraft/CrashReportSystemDetails;Lnet/minecraft/world/level/LevelHeightAccessor;)V fillCrashReportCategory
	a (Lnet/minecraft/core/BlockPosition;F)V setSpawn
	a (Lnet/minecraft/world/level/EnumGamemode;)V setGameType
	a (Z)V setThundering
	b ()I getYSpawn
	b (I)V setXSpawn
	b (J)V setDayTime
	b (Z)V setRaining
	c ()I getZSpawn
	c (I)V setYSpawn
	c (Z)V setInitialized
	d ()F getSpawnAngle
	d (I)V setZSpawn
	e ()J getGameTime
	e (I)V setThunderTime
	f ()J getDayTime
	f (I)V setRainTime
	g ()Ljava/lang/String; getLevelName
	g (I)V setWanderingTraderSpawnDelay
	h ()I getClearWeatherTime
	h (I)V setWanderingTraderSpawnChance
	i ()Z isThundering
	j ()I getThunderTime
	k ()Z isRaining
	l ()I getRainTime
	m ()Lnet/minecraft/world/level/EnumGamemode; getGameType
	n ()Z isHardcore
	o ()Z getAllowCommands
	p ()Z isInitialized
	q ()Lnet/minecraft/world/level/GameRules; getGameRules
	r ()Ldha$c; getWorldBorder
	s ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	t ()Z isDifficultyLocked
	u ()Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue; getScheduledEvents
	v ()I getWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
net/minecraft/world/level/storage/WorldData net/minecraft/world/level/storage/LevelData
	a ()I getXSpawn
	a (Lnet/minecraft/CrashReportSystemDetails;Lnet/minecraft/world/level/LevelHeightAccessor;)V fillCrashReportCategory
	b ()I getYSpawn
	b (Z)V setRaining
	c ()I getZSpawn
	d ()F getSpawnAngle
	e ()J getGameTime
	f ()J getDayTime
	i ()Z isThundering
	k ()Z isRaining
	n ()Z isHardcore
	q ()Lnet/minecraft/world/level/GameRules; getGameRules
	s ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	t ()Z isDifficultyLocked
net/minecraft/world/level/storage/WorldDataMutable net/minecraft/world/level/storage/WritableLevelData
	a (F)V setSpawnAngle
	a (Lnet/minecraft/core/BlockPosition;F)V setSpawn
	b (I)V setXSpawn
	c (I)V setYSpawn
	d (I)V setZSpawn
net/minecraft/world/level/storage/WorldDataServer net/minecraft/world/level/storage/PrimaryLevelData
	A difficultyLocked
	B worldBorder
	C endDragonFightData
	D customBossEvents
	E wanderingTraderSpawnDelay
	F wanderingTraderSpawnChance
	G wanderingTraderId
	H knownServerBrands
	I wasModded
	J removedFeatureFlags
	K scheduledEvents
	a PLAYER
	b WORLD_GEN_SETTINGS
	e LOGGER
	f settings
	g worldOptions
	h specialWorldProperty
	i worldGenSettingsLifecycle
	j xSpawn
	k ySpawn
	l zSpawn
	m spawnAngle
	n gameTime
	o dayTime
	p fixerUpper
	q playerDataVersion
	r upgradedPlayerTag
	s loadedPlayerTag
	t version
	u clearWeatherTime
	v raining
	w rainTime
	x thundering
	y thunderTime
	z initialized
	A ()Lnet/minecraft/world/level/levelgen/WorldOptions; worldGenOptions
	B ()Z isFlatWorld
	C ()Z isDebugWorld
	D ()Lcom/mojang/serialization/Lifecycle; worldGenSettingsLifecycle
	E ()Ldiv$a; endDragonFightData
	F ()Lnet/minecraft/world/level/WorldDataConfiguration; getDataConfiguration
	G ()Lnet/minecraft/nbt/NBTTagCompound; getCustomBossEvents
	H ()Z wasModded
	I ()Ljava/util/Set; getKnownServerBrands
	J ()Ljava/util/Set; getRemovedFeatureFlags
	K ()Lnet/minecraft/world/level/storage/IWorldDataServer; overworldData
	L ()Lnet/minecraft/world/level/WorldSettings; getLevelSettings
	N ()V updatePlayerTag
	a ()I getXSpawn
	a (F)V setSpawnAngle
	a (I)V setClearWeatherTime
	a (J)V setGameTime
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/WorldSettings;Lnet/minecraft/world/level/storage/LevelVersion;Leck$a;Lnet/minecraft/world/level/levelgen/WorldOptions;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/world/level/storage/WorldDataServer; parse
	a (Ldha$c;)V setWorldBorder
	a (Ldiv$a;)V setEndDragonFightData
	a (Ljava/lang/String;Z)V setModdedInfo
	a (Ljava/util/Set;)Lnet/minecraft/nbt/NBTTagList; stringCollectionToTag
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Lnet/minecraft/CrashReportSystemDetails;Lnet/minecraft/world/level/LevelHeightAccessor;)V fillCrashReportCategory
	a (Lnet/minecraft/core/BlockPosition;F)V setSpawn
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; createTag
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/nbt/NBTTagCompound;)V setTagData
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setCustomBossEvents
	a (Lnet/minecraft/world/EnumDifficulty;)V setDifficulty
	a (Lnet/minecraft/world/level/EnumGamemode;)V setGameType
	a (Lnet/minecraft/world/level/WorldDataConfiguration;)V setDataConfiguration
	a (Z)V setThundering
	b ()I getYSpawn
	b (I)V setXSpawn
	b (J)V setDayTime
	b (Z)V setRaining
	c ()I getZSpawn
	c (I)V setYSpawn
	c (Z)V setInitialized
	d ()F getSpawnAngle
	d (I)V setZSpawn
	d (Z)V setDifficultyLocked
	e ()J getGameTime
	e (I)V setThunderTime
	f ()J getDayTime
	f (I)V setRainTime
	g ()Ljava/lang/String; getLevelName
	g (I)V setWanderingTraderSpawnDelay
	h ()I getClearWeatherTime
	h (I)V setWanderingTraderSpawnChance
	i ()Z isThundering
	j ()I getThunderTime
	k ()Z isRaining
	l ()I getRainTime
	m ()Lnet/minecraft/world/level/EnumGamemode; getGameType
	n ()Z isHardcore
	o ()Z getAllowCommands
	p ()Z isInitialized
	q ()Lnet/minecraft/world/level/GameRules; getGameRules
	r ()Ldha$c; getWorldBorder
	s ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	t ()Z isDifficultyLocked
	u ()Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue; getScheduledEvents
	v ()I getWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
	y ()Lnet/minecraft/nbt/NBTTagCompound; getLoadedPlayerTag
	z ()I getVersion
net/minecraft/world/level/storage/WorldInfo net/minecraft/world/level/storage/LevelSummary
	a settings
	b levelVersion
	c levelId
	d requiresManualConversion
	e locked
	f experimental
	g icon
	h info
	a ()Ljava/lang/String; getLevelId
	a (Lnet/minecraft/world/level/storage/WorldInfo;)I compareTo
	b ()Ljava/lang/String; getLevelName
	c ()Ljava/nio/file/Path; getIcon
	d ()Z requiresManualConversion
	e ()Z isExperimental
	f ()J getLastPlayed
	g ()Lnet/minecraft/world/level/WorldSettings; getSettings
	h ()Lnet/minecraft/world/level/EnumGamemode; getGameMode
	i ()Z isHardcore
	j ()Z hasCheats
	k ()Lnet/minecraft/network/chat/IChatMutableComponent; getWorldVersionName
	l ()Lnet/minecraft/world/level/storage/LevelVersion; levelVersion
	m ()Z markVersionInList
	n ()Z askToOpenWorld
	o ()Lech$a; backupStatus
	p ()Z isLocked
	q ()Z isDisabled
	r ()Z isCompatible
	s ()Lnet/minecraft/network/chat/IChatBaseComponent; getInfo
	t ()Lnet/minecraft/network/chat/IChatBaseComponent; createInfo
net/minecraft/world/level/storage/WorldNBTStorage net/minecraft/world/level/storage/PlayerDataStorage
	a fixerUpper
	b LOGGER
	c playerDir
	a ()[Ljava/lang/String; getSeenPlayers
	a (Lnet/minecraft/world/entity/player/EntityHuman;)V save
	b (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/nbt/NBTTagCompound; load
net/minecraft/world/level/storage/WorldPersistentData net/minecraft/world/level/storage/DimensionDataStorage
	a LOGGER
	b cache
	c fixerUpper
	d dataFolder
	a ()V save
	a (Lebr$a;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/PersistentBase; computeIfAbsent
	a (Ljava/io/PushbackInputStream;)Z isGzip
	a (Ljava/lang/String;)Ljava/io/File; getDataFile
	a (Ljava/lang/String;Lnet/minecraft/util/datafix/DataFixTypes;I)Lnet/minecraft/nbt/NBTTagCompound; readTagFromDisk
	a (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/PersistentBase;)V set
	a (Ljava/util/function/Function;Lnet/minecraft/util/datafix/DataFixTypes;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/PersistentBase; readSavedData
	b (Lebr$a;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/PersistentBase; get
net/minecraft/world/level/storage/loot/LootCollector net/minecraft/world/level/storage/loot/ValidationContext
	a problems
	b context
	c params
	d resolver
	e visitedElements
	f contextCache
	a ()Lcom/google/common/collect/Multimap; getProblems
	a (Ljava/lang/String;)V reportProblem
	a (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/LootDataId;)Lnet/minecraft/world/level/storage/loot/LootCollector; enterElement
	a (Lnet/minecraft/world/level/storage/loot/LootDataId;)Z hasVisitedElement
	a (Lnet/minecraft/world/level/storage/loot/LootItemUser;)V validateUser
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet;)Lnet/minecraft/world/level/storage/loot/LootCollector; setParams
	b ()Lnet/minecraft/world/level/storage/loot/LootDataResolver; resolver
	b (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/LootCollector; forChild
	c ()Ljava/lang/String; getContext
net/minecraft/world/level/storage/loot/LootItemUser net/minecraft/world/level/storage/loot/LootContextUser
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
net/minecraft/world/level/storage/loot/LootSelector net/minecraft/world/level/storage/loot/LootPool
	a CODEC
	b entries
	c conditions
	d compositeCondition
	e functions
	f compositeFunction
	g rolls
	h bonusRolls
	a ()Lecx$a; lootPool
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V addRandomItems
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	b (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V addRandomItem
net/minecraft/world/level/storage/loot/LootTableInfo net/minecraft/world/level/storage/loot/LootContext
	a params
	b random
	c lootDataResolver
	d visitedElements
	a ()Lnet/minecraft/world/level/storage/loot/LootDataResolver; getResolver
	a (Lecq$c;)Z hasVisitedElement
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/util/function/Consumer;)V addDynamicDrops
	a (Lnet/minecraft/world/level/storage/loot/LootTable;)Lecq$c; createVisitedEntry
	a (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lecq$c; createVisitedEntry
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Z hasParam
	a (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lecq$c; createVisitedEntry
	b ()Lnet/minecraft/util/RandomSource; getRandom
	b (Lecq$c;)Z pushVisitedElement
	b (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Ljava/lang/Object; getParam
	c ()F getLuck
	c (Lecq$c;)V popVisitedElement
	c (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Ljava/lang/Object; getParamOrNull
	d ()Lnet/minecraft/server/level/WorldServer; getLevel
net/minecraft/world/level/storage/loot/LootTableInfo$Builder net/minecraft/world/level/storage/loot/LootContext$Builder
	a params
	b random
	a ()Lnet/minecraft/server/level/WorldServer; getLevel
	a (J)Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder; withOptionalRandomSeed
	a (Ljava/util/Optional;)Lnet/minecraft/world/level/storage/loot/LootTableInfo; create
net/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget net/minecraft/world/level/storage/loot/LootContext$EntityTarget
	a THIS
	b KILLER
	c DIRECT_KILLER
	d KILLER_PLAYER
	e CODEC
	f name
	g param
	h $VALUES
	a ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter; getParam
	a (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget; getByName
	b ()[Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/storage/loot/LootTables net/minecraft/world/level/storage/loot/BuiltInLootTables
	A JUNGLE_TEMPLE
	B JUNGLE_TEMPLE_DISPENSER
	C IGLOO_CHEST
	D WOODLAND_MANSION
	E UNDERWATER_RUIN_SMALL
	F UNDERWATER_RUIN_BIG
	G BURIED_TREASURE
	H SHIPWRECK_MAP
	I SHIPWRECK_SUPPLY
	J SHIPWRECK_TREASURE
	K PILLAGER_OUTPOST
	L BASTION_TREASURE
	M BASTION_OTHER
	N BASTION_BRIDGE
	O BASTION_HOGLIN_STABLE
	P ANCIENT_CITY
	Q ANCIENT_CITY_ICE_BOX
	R RUINED_PORTAL
	S SHEEP_WHITE
	T SHEEP_ORANGE
	U SHEEP_MAGENTA
	V SHEEP_LIGHT_BLUE
	W SHEEP_YELLOW
	X SHEEP_LIME
	Y SHEEP_PINK
	Z SHEEP_GRAY
	a EMPTY
	aA SNIFFER_DIGGING
	aB PIGLIN_BARTERING
	aC DESERT_WELL_ARCHAEOLOGY
	aD DESERT_PYRAMID_ARCHAEOLOGY
	aE TRAIL_RUINS_ARCHAEOLOGY_COMMON
	aF TRAIL_RUINS_ARCHAEOLOGY_RARE
	aG OCEAN_RUIN_WARM_ARCHAEOLOGY
	aH OCEAN_RUIN_COLD_ARCHAEOLOGY
	aI LOCATIONS
	aJ IMMUTABLE_LOCATIONS
	aa SHEEP_LIGHT_GRAY
	ab SHEEP_CYAN
	ac SHEEP_PURPLE
	ad SHEEP_BLUE
	ae SHEEP_BROWN
	af SHEEP_GREEN
	ag SHEEP_RED
	ah SHEEP_BLACK
	ai FISHING
	aj FISHING_JUNK
	ak FISHING_TREASURE
	al FISHING_FISH
	am CAT_MORNING_GIFT
	an ARMORER_GIFT
	ao BUTCHER_GIFT
	ap CARTOGRAPHER_GIFT
	aq CLERIC_GIFT
	ar FARMER_GIFT
	as FISHERMAN_GIFT
	at FLETCHER_GIFT
	au LEATHERWORKER_GIFT
	av LIBRARIAN_GIFT
	aw MASON_GIFT
	ax SHEPHERD_GIFT
	ay TOOLSMITH_GIFT
	az WEAPONSMITH_GIFT
	b SPAWN_BONUS_CHEST
	c END_CITY_TREASURE
	d SIMPLE_DUNGEON
	e VILLAGE_WEAPONSMITH
	f VILLAGE_TOOLSMITH
	g VILLAGE_ARMORER
	h VILLAGE_CARTOGRAPHER
	i VILLAGE_MASON
	j VILLAGE_SHEPHERD
	k VILLAGE_BUTCHER
	l VILLAGE_FLETCHER
	m VILLAGE_FISHER
	n VILLAGE_TANNERY
	o VILLAGE_TEMPLE
	p VILLAGE_DESERT_HOUSE
	q VILLAGE_PLAINS_HOUSE
	r VILLAGE_TAIGA_HOUSE
	s VILLAGE_SNOWY_HOUSE
	t VILLAGE_SAVANNA_HOUSE
	u ABANDONED_MINESHAFT
	v NETHER_BRIDGE
	w STRONGHOLD_LIBRARY
	x STRONGHOLD_CROSSING
	y STRONGHOLD_CORRIDOR
	z DESERT_PYRAMID
	a ()Ljava/util/Set; all
	a (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; register
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/MinecraftKey; register
net/minecraft/world/level/storage/loot/entries/LootEntries net/minecraft/world/level/storage/loot/entries/LootPoolEntries
	a CODEC
	b EMPTY
	c ITEM
	d REFERENCE
	e DYNAMIC
	f TAG
	g ALTERNATIVES
	h SEQUENCE
	i GROUP
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; register
net/minecraft/world/level/storage/loot/entries/LootEntry net/minecraft/world/level/storage/loot/entries/LootPoolEntry
	a (F)I getWeight
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V createItemStack
net/minecraft/world/level/storage/loot/entries/LootEntryAbstract net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer
	a compositeCondition
	e conditions
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1; commonFields
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z canRun
net/minecraft/world/level/storage/loot/entries/LootEntryAlternatives net/minecraft/world/level/storage/loot/entries/AlternativesEntry
	a CODEC
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Ljava/util/Collection;Ljava/util/function/Function;)Leda$a; alternatives
	a (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/entries/LootEntryChildren; compose
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	a ([Ledj$a;)Leda$a; alternatives
net/minecraft/world/level/storage/loot/entries/LootEntryChildren net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer
	b ALWAYS_FALSE
	c ALWAYS_TRUE
net/minecraft/world/level/storage/loot/entries/LootEntryChildrenAbstract net/minecraft/world/level/storage/loot/entries/CompositeEntryBase
	a composedChildren
	d children
	a (Ledc$a;)Lcom/mojang/serialization/Codec; createCodec
	a (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/entries/LootEntryChildren; compose
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
net/minecraft/world/level/storage/loot/entries/LootEntryGroup net/minecraft/world/level/storage/loot/entries/EntryGroup
	a CODEC
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/entries/LootEntryChildren; compose
	a ([Ledj$a;)Ledf$a; list
net/minecraft/world/level/storage/loot/entries/LootEntrySequence net/minecraft/world/level/storage/loot/entries/SequentialEntry
	a CODEC
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/entries/LootEntryChildren; compose
	a ([Ledj$a;)Ledn$a; sequential
net/minecraft/world/level/storage/loot/entries/LootEntryType net/minecraft/world/level/storage/loot/entries/LootPoolEntryType
	a codec
	a ()Lcom/mojang/serialization/Codec; codec
net/minecraft/world/level/storage/loot/entries/LootSelectorDynamic net/minecraft/world/level/storage/loot/entries/DynamicLoot
	a CODEC
	j name
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/resources/MinecraftKey;)Ledl$a; dynamicEntry
net/minecraft/world/level/storage/loot/entries/LootSelectorEmpty net/minecraft/world/level/storage/loot/entries/EmptyLootItem
	a CODEC
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V createItemStack
	b ()Ledl$a; emptyItem
net/minecraft/world/level/storage/loot/entries/LootSelectorEntry net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer
	a compositeFunction
	d DEFAULT_WEIGHT
	f DEFAULT_QUALITY
	g weight
	h quality
	i functions
	j entry
	a (Ledl$d;)Ledl$a; simpleBuilder
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4; singletonFields
net/minecraft/world/level/storage/loot/entries/LootSelectorLootTable net/minecraft/world/level/storage/loot/entries/LootTableReference
	a CODEC
	j name
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/resources/MinecraftKey;)Ledl$a; lootTableReference
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
net/minecraft/world/level/storage/loot/entries/LootSelectorTag net/minecraft/world/level/storage/loot/entries/TagEntry
	a CODEC
	j tag
	k expand
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/tags/TagKey;)Ledl$a; tagContents
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Ljava/util/function/Consumer;)Z expandTag
	b (Lnet/minecraft/tags/TagKey;)Ledl$a; expandTag
net/minecraft/world/level/storage/loot/functions/LootEnchantFunction net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction
	a NO_LIMIT
	b CODEC
	c value
	d limit
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Leeg$a; lootingMultiplier
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	c ()Z hasLimit
net/minecraft/world/level/storage/loot/functions/LootEnchantLevel net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction
	a CODEC
	b levels
	c treasure
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Ledw$a; enchantWithLevels
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/LootItemFunctionApplyBonus net/minecraft/world/level/storage/loot/functions/ApplyBonusCount
	a CODEC
	b FORMULAS
	c FORMULA_TYPE_CODEC
	d FORMULA_CODEC
	e enchantment
	f formula
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Leec$a; addOreBonusCount
	a (Lnet/minecraft/world/item/enchantment/Enchantment;FI)Leec$a; addBonusBinomialDistributionCount
	a (Lnet/minecraft/world/item/enchantment/Enchantment;I)Leec$a; addUniformBonusCount
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	b (Lnet/minecraft/world/item/enchantment/Enchantment;)Leec$a; addUniformBonusCount
net/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction
	a compositePredicates
	g predicates
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1; commonFields
	a (Ljava/util/function/Function;)Leec$a; simpleBuilder
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; apply
net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyNBT net/minecraft/world/level/storage/loot/functions/CopyNbtFunction
	a CODEC
	b source
	c operations
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Ledu$a; copyData
	a (Lnet/minecraft/world/level/storage/loot/providers/nbt/NbtProvider;)Ledu$a; copyData
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyNBT$Action net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy
	a REPLACE
	b APPEND
	c MERGE
	d CODEC
	e name
	f $VALUES
	a ()[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyNBT$Action; $values
	a (Lnet/minecraft/nbt/NBTBase;Lej$g;Ljava/util/List;)V merge
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName net/minecraft/world/level/storage/loot/functions/CopyNameFunction
	a CODEC
	b source
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName$Source;)Leec$a; copyName
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName$Source net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource
	a THIS
	b KILLER
	c KILLER_PLAYER
	d BLOCK_ENTITY
	e CODEC
	f name
	g param
	h $VALUES
	a ()[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName$Source; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyState net/minecraft/world/level/storage/loot/functions/CopyBlockState
	a CODEC
	b block
	c properties
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/block/Block;)Leds$a; copyState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Ljava/lang/String; serialize
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/LootItemFunctionEnchant net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction
	a CODEC
	b LOGGER
	c ENCHANTMENT_SET_CODEC
	d enchantments
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/ItemStack; enchantItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	c ()Ledv$a; randomEnchantment
	d ()Leec$a; randomApplicableEnchantment
net/minecraft/world/level/storage/loot/functions/LootItemFunctionExplorationMap net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction
	a DEFAULT_DESTINATION
	b DEFAULT_DECORATION
	c DEFAULT_ZOOM
	d DEFAULT_SEARCH_RADIUS
	e DEFAULT_SKIP_EXISTING
	f CODEC
	h destination
	i mapDecoration
	j zoom
	k searchRadius
	l skipKnownStructures
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	c ()Ledx$a; makeExplorationMap
net/minecraft/world/level/storage/loot/functions/LootItemFunctionExplosionDecay net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay
	a CODEC
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	c ()Leec$a; explosionDecay
net/minecraft/world/level/storage/loot/functions/LootItemFunctionFillPlayerHead net/minecraft/world/level/storage/loot/functions/FillPlayerHead
	a CODEC
	b entityTarget
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Leec$a; fillPlayerHead
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/LootItemFunctionLimitCount net/minecraft/world/level/storage/loot/functions/LimitCount
	a CODEC
	b limiter
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/IntRange;)Leec$a; limitCount
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetAttribute net/minecraft/world/level/storage/loot/functions/SetAttributesFunction
	a CODEC
	b modifiers
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ljava/lang/String;Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Leei$c; modifier
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	c ()Leei$a; setAttributes
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetContents net/minecraft/world/level/storage/loot/functions/SetContainerContents
	a CODEC
	b type
	c entries
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Leek$a; setContents
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetCount net/minecraft/world/level/storage/loot/functions/SetItemCountFunction
	a CODEC
	b value
	c add
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Leec$a; setCount
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Z)Leec$a; setCount
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetDamage net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction
	a CODEC
	b LOGGER
	c damage
	d add
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Leec$a; setDamage
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Z)Leec$a; setDamage
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetLore net/minecraft/world/level/storage/loot/functions/SetLoreFunction
	a CODEC
	b replace
	c lore
	d resolutionContext
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/nbt/NBTTagList; getLoreTag
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	c ()Leeq$a; setLore
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetName net/minecraft/world/level/storage/loot/functions/SetNameFunction
	a CODEC
	b LOGGER
	c name
	d resolutionContext
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Leec$a; setName
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Leec$a; setName
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Ljava/util/function/UnaryOperator; createResolver
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetStewEffect net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction
	a CODEC
	b EFFECTS_LIST
	c effects
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	c ()Leeu$a; stewEffect
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetTable net/minecraft/world/level/storage/loot/functions/SetContainerLootTable
	a CODEC
	b name
	c seed
	d type
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/block/entity/TileEntityTypes;Lnet/minecraft/resources/MinecraftKey;)Leec$a; withLootTable
	a (Lnet/minecraft/world/level/block/entity/TileEntityTypes;Lnet/minecraft/resources/MinecraftKey;J)Leec$a; withLootTable
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetTag net/minecraft/world/level/storage/loot/functions/SetNbtFunction
	a CODEC
	b tag
	a (Lnet/minecraft/nbt/NBTTagCompound;)Leec$a; setTag
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSmelt net/minecraft/world/level/storage/loot/functions/SmeltItemFunction
	a CODEC
	b LOGGER
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	c ()Leec$a; smelted
net/minecraft/world/level/storage/loot/functions/LootItemFunctionUser net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder
	a (Ljava/lang/Iterable;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; apply
	a ([Ljava/lang/Object;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; apply
	b (Leed$a;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; apply
	c ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; unwrap
net/minecraft/world/level/storage/loot/parameters/LootContextParameter net/minecraft/world/level/storage/loot/parameters/LootContextParam
	a name
	a ()Lnet/minecraft/resources/MinecraftKey; getName
net/minecraft/world/level/storage/loot/parameters/LootContextParameterSet net/minecraft/world/level/storage/loot/parameters/LootContextParamSet
	a required
	b all
	a ()Ljava/util/Set; getRequired
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;Lnet/minecraft/world/level/storage/loot/LootItemUser;)V validateUser
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Z isAllowed
	b ()Ljava/util/Set; getAllowed
	c ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet$Builder; builder
net/minecraft/world/level/storage/loot/parameters/LootContextParameterSet$Builder net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder
	a required
	b optional
	a ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet; build
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet$Builder; required
	b (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet$Builder; optional
net/minecraft/world/level/storage/loot/parameters/LootContextParameterSets net/minecraft/world/level/storage/loot/parameters/LootContextParamSets
	a CODEC
	b EMPTY
	c CHEST
	d COMMAND
	e SELECTOR
	f FISHING
	g ENTITY
	h ARCHAEOLOGY
	i GIFT
	j PIGLIN_BARTER
	k ADVANCEMENT_REWARD
	l ADVANCEMENT_ENTITY
	m ADVANCEMENT_LOCATION
	n ALL_PARAMS
	o BLOCK
	p REGISTRY
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet; register
net/minecraft/world/level/storage/loot/parameters/LootContextParameters net/minecraft/world/level/storage/loot/parameters/LootContextParams
	a THIS_ENTITY
	b LAST_DAMAGE_PLAYER
	c DAMAGE_SOURCE
	d KILLER_ENTITY
	e DIRECT_KILLER_ENTITY
	f ORIGIN
	g BLOCK_STATE
	h BLOCK_ENTITY
	i TOOL
	j EXPLOSION_RADIUS
	a (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter; create
net/minecraft/world/level/storage/loot/predicates/LootItemConditionBlockStateProperty net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition
	a CODEC
	b block
	c properties
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/level/block/Block;)Lefo$a; hasBlockStateProperties
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	a (Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionBlockStateProperty;)Lcom/mojang/serialization/DataResult; validate
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()Lnet/minecraft/core/Holder; block
	d ()Ljava/util/Optional; properties
net/minecraft/world/level/storage/loot/predicates/LootItemConditionDamageSourceProperties net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition
	a CODEC
	b predicate
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lbf$a;)Lefp$a; hasDamageSource
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()Ljava/util/Optional; predicate
net/minecraft/world/level/storage/loot/predicates/LootItemConditionEntityProperty net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition
	a CODEC
	b predicate
	c entityTarget
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Lefp$a; entityPresent
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;Lbq$a;)Lefp$a; hasProperties
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lefp$a; hasProperties
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()Ljava/util/Optional; predicate
	d ()Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget; entityTarget
net/minecraft/world/level/storage/loot/predicates/LootItemConditionEntityScore net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition
	a CODEC
	b scores
	c entityTarget
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Lefk$a; hasScores
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/scores/Scoreboard;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/IntRange;)Z hasScore
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()Ljava/util/Map; scores
	d ()Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget; entityTarget
net/minecraft/world/level/storage/loot/predicates/LootItemConditionInverted net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition
	a CODEC
	b term
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lefp$a;)Lefp$a; invert
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; term
net/minecraft/world/level/storage/loot/predicates/LootItemConditionKilledByPlayer net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition
	a CODEC
	b INSTANCE
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()Lefp$a; killedByPlayer
net/minecraft/world/level/storage/loot/predicates/LootItemConditionLocationCheck net/minecraft/world/level/storage/loot/predicates/LocationCheck
	a CODEC
	b predicate
	c offset
	d OFFSET_CODEC
	a (Lcj$a;)Lefp$a; checkLocation
	a (Lcj$a;Lnet/minecraft/core/BlockPosition;)Lefp$a; checkLocation
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()Ljava/util/Optional; predicate
	d ()Lnet/minecraft/core/BlockPosition; offset
net/minecraft/world/level/storage/loot/predicates/LootItemConditionMatchTool net/minecraft/world/level/storage/loot/predicates/MatchTool
	a CODEC
	b predicate
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcb$a;)Lefp$a; toolMatches
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()Ljava/util/Optional; predicate
net/minecraft/world/level/storage/loot/predicates/LootItemConditionRandomChance net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition
	a CODEC
	b probability
	a (F)Lefp$a; randomChance
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()F probability
net/minecraft/world/level/storage/loot/predicates/LootItemConditionRandomChanceWithLooting net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition
	a CODEC
	b percent
	c lootingMultiplier
	a ()Ljava/util/Set; getReferencedContextParams
	a (FF)Lefp$a; randomChanceAndLootingBoost
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()F percent
	d ()F lootingMultiplier
net/minecraft/world/level/storage/loot/predicates/LootItemConditionReference net/minecraft/world/level/storage/loot/predicates/ConditionReference
	a CODEC
	b name
	c LOGGER
	a (Lnet/minecraft/resources/MinecraftKey;)Lefp$a; conditionReference
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()Lnet/minecraft/resources/MinecraftKey; name
net/minecraft/world/level/storage/loot/predicates/LootItemConditionSurvivesExplosion net/minecraft/world/level/storage/loot/predicates/ExplosionCondition
	a CODEC
	b INSTANCE
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()Lefp$a; survivesExplosion
net/minecraft/world/level/storage/loot/predicates/LootItemConditionTableBonus net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition
	a CODEC
	b enchantment
	c values
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/item/enchantment/Enchantment;[F)Lefp$a; bonusLevelFlatChance
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()Lnet/minecraft/core/Holder; enchantment
	d ()Ljava/util/List; values
net/minecraft/world/level/storage/loot/predicates/LootItemConditionTimeCheck net/minecraft/world/level/storage/loot/predicates/TimeCheck
	a CODEC
	b period
	c value
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/level/storage/loot/IntRange;)Lefx$a; time
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()Ljava/util/Optional; period
	d ()Lnet/minecraft/world/level/storage/loot/IntRange; value
net/minecraft/world/level/storage/loot/predicates/LootItemConditionUser net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder
	a_ (Ljava/lang/Iterable;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; when
	b (Lefp$a;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; when
	d ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; unwrap
net/minecraft/world/level/storage/loot/predicates/LootItemConditionWeatherCheck net/minecraft/world/level/storage/loot/predicates/WeatherCheck
	a CODEC
	b isRaining
	c isThundering
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()Lefz$a; weather
	d ()Ljava/util/Optional; isRaining
	e ()Ljava/util/Optional; isThundering
net/minecraft/world/level/timers/CustomFunctionCallback net/minecraft/world/level/timers/FunctionCallback
	a functionId
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue;J)V handle
net/minecraft/world/level/timers/CustomFunctionCallbackTag net/minecraft/world/level/timers/FunctionTagCallback
	a tagId
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue;J)V handle
net/minecraft/world/level/timers/CustomFunctionCallbackTimer net/minecraft/world/level/timers/TimerCallback
net/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue net/minecraft/world/level/timers/TimerQueue
	a LOGGER
	b CALLBACK_DATA_TAG
	c TIMER_NAME_TAG
	d TIMER_TRIGGER_TIME_TAG
	e callbacksRegistry
	f queue
	g sequentialId
	h events
	a ()Ljava/util/Set; getEventsIds
	a (Leha$a;)Lnet/minecraft/nbt/NBTTagCompound; storeEvent
	a (Ljava/lang/Object;J)V tick
	a (Ljava/lang/String;)I remove
	a (Ljava/lang/String;JLnet/minecraft/world/level/timers/CustomFunctionCallbackTimer;)V schedule
	a (Lnet/minecraft/nbt/NBTTagCompound;)V loadEvent
	b ()Lnet/minecraft/nbt/NBTTagList; store
	c ()Ljava/util/Comparator; createComparator
net/minecraft/world/level/timers/CustomFunctionCallbackTimers net/minecraft/world/level/timers/TimerCallbacks
	a SERVER_CALLBACKS
	b LOGGER
	c idToSerializer
	d classToSerializer
	a (Legy$a;)Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimers; register
	a (Ljava/lang/Class;)Legy$a; getSerializer
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer; deserialize
	a (Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer;)Lnet/minecraft/nbt/NBTTagCompound; serialize
net/minecraft/world/phys/AxisAlignedBB net/minecraft/world/phys/AABB
	a minX
	b minY
	c minZ
	d maxX
	e maxY
	f maxZ
	g EPSILON
	a ()D getSize
	a (D)Lnet/minecraft/world/phys/AxisAlignedBB; setMinX
	a (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; contract
	a (DDDDDD)Z intersects
	a (Ljava/lang/Iterable;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; clip
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/AxisAlignedBB; move
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)D min
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/phys/AxisAlignedBB; of
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)Lnet/minecraft/world/phys/AxisAlignedBB; intersect
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/world/phys/Vec3D;[DLnet/minecraft/core/EnumDirection;DDD)Lnet/minecraft/core/EnumDirection; getDirection
	a (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/AxisAlignedBB; unitCubeFromLowerCorner
	a (Lnet/minecraft/world/phys/Vec3D;DDD)Lnet/minecraft/world/phys/AxisAlignedBB; ofSize
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z intersects
	a ([DLnet/minecraft/core/EnumDirection;DDDDDDDDLnet/minecraft/core/EnumDirection;DDD)Lnet/minecraft/core/EnumDirection; clipPoint
	b ()D getXsize
	b (D)Lnet/minecraft/world/phys/AxisAlignedBB; setMinY
	b (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; expandTowards
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;)D max
	b (Lnet/minecraft/world/phys/AxisAlignedBB;)Lnet/minecraft/world/phys/AxisAlignedBB; minmax
	b (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/AxisAlignedBB; expandTowards
	b (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Ljava/util/Optional; clip
	c ()D getYsize
	c (D)Lnet/minecraft/world/phys/AxisAlignedBB; setMinZ
	c (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; inflate
	c (Lnet/minecraft/world/phys/AxisAlignedBB;)Z intersects
	c (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/AxisAlignedBB; move
	d ()D getZsize
	d (D)Lnet/minecraft/world/phys/AxisAlignedBB; setMaxX
	d (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; move
	d (Lnet/minecraft/world/phys/Vec3D;)Z contains
	e ()Z hasNaN
	e (D)Lnet/minecraft/world/phys/AxisAlignedBB; setMaxY
	e (DDD)Z contains
	e (Lnet/minecraft/world/phys/Vec3D;)D distanceToSqr
	f ()Lnet/minecraft/world/phys/Vec3D; getCenter
	f (D)Lnet/minecraft/world/phys/AxisAlignedBB; setMaxZ
	f (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; deflate
	g (D)Lnet/minecraft/world/phys/AxisAlignedBB; inflate
	h (D)Lnet/minecraft/world/phys/AxisAlignedBB; deflate
net/minecraft/world/phys/MovingObjectPosition net/minecraft/world/phys/HitResult
	a location
	a (Lnet/minecraft/world/entity/Entity;)D distanceTo
	c ()Lnet/minecraft/world/phys/MovingObjectPosition$EnumMovingObjectType; getType
	e ()Lnet/minecraft/world/phys/Vec3D; getLocation
net/minecraft/world/phys/MovingObjectPosition$EnumMovingObjectType net/minecraft/world/phys/HitResult$Type
	a MISS
	b BLOCK
	c ENTITY
	d $VALUES
	a ()[Lnet/minecraft/world/phys/MovingObjectPosition$EnumMovingObjectType; $values
net/minecraft/world/phys/MovingObjectPositionBlock net/minecraft/world/phys/BlockHitResult
	b direction
	c blockPos
	d miss
	e inside
	a ()Lnet/minecraft/core/BlockPosition; getBlockPos
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; withPosition
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; withDirection
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; miss
	b ()Lnet/minecraft/core/EnumDirection; getDirection
	c ()Lnet/minecraft/world/phys/MovingObjectPosition$EnumMovingObjectType; getType
	d ()Z isInside
net/minecraft/world/phys/MovingObjectPositionEntity net/minecraft/world/phys/EntityHitResult
	b entity
	a ()Lnet/minecraft/world/entity/Entity; getEntity
	c ()Lnet/minecraft/world/phys/MovingObjectPosition$EnumMovingObjectType; getType
net/minecraft/world/phys/Vec2F net/minecraft/world/phys/Vec2
	a ZERO
	b ONE
	c UNIT_X
	d NEG_UNIT_X
	e UNIT_Y
	f NEG_UNIT_Y
	g MAX
	h MIN
	i x
	j y
	a ()Lnet/minecraft/world/phys/Vec2F; normalized
	a (F)Lnet/minecraft/world/phys/Vec2F; scale
	a (Lnet/minecraft/world/phys/Vec2F;)F dot
	b ()F length
	b (F)Lnet/minecraft/world/phys/Vec2F; add
	b (Lnet/minecraft/world/phys/Vec2F;)Lnet/minecraft/world/phys/Vec2F; add
	c ()F lengthSquared
	c (Lnet/minecraft/world/phys/Vec2F;)Z equals
	d ()Lnet/minecraft/world/phys/Vec2F; negated
	d (Lnet/minecraft/world/phys/Vec2F;)F distanceToSqr
net/minecraft/world/phys/Vec3D net/minecraft/world/phys/Vec3
	a CODEC
	b ZERO
	c x
	d y
	e z
	a ()D x
	a (D)Lnet/minecraft/world/phys/Vec3D; scale
	a (DDD)Lnet/minecraft/world/phys/Vec3D; subtract
	a (F)Lnet/minecraft/world/phys/Vec3D; xRot
	a (FF)Lnet/minecraft/world/phys/Vec3D; directionFromRotation
	a (I)Lnet/minecraft/world/phys/Vec3D; fromRGB24
	a (Ljava/util/EnumSet;)Lnet/minecraft/world/phys/Vec3D; align
	a (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/phys/Vec3D; atLowerCornerOf
	a (Lnet/minecraft/core/BaseBlockPosition;D)Lnet/minecraft/world/phys/Vec3D; upFromBottomCenterOf
	a (Lnet/minecraft/core/BaseBlockPosition;DDD)Lnet/minecraft/world/phys/Vec3D; atLowerCornerWithOffset
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)D get
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;D)Lnet/minecraft/world/phys/Vec3D; with
	a (Lnet/minecraft/core/EnumDirection;D)Lnet/minecraft/world/phys/Vec3D; relative
	a (Lnet/minecraft/core/IPosition;D)Z closerThan
	a (Lnet/minecraft/util/RandomSource;F)Lnet/minecraft/world/phys/Vec3D; offsetRandom
	a (Lnet/minecraft/world/phys/Vec2F;)Lnet/minecraft/world/phys/Vec3D; directionFromRotation
	a (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; vectorTo
	a (Lnet/minecraft/world/phys/Vec3D;D)Lnet/minecraft/world/phys/Vec3D; lerp
	b ()D y
	b (DDD)Lnet/minecraft/world/phys/Vec3D; add
	b (F)Lnet/minecraft/world/phys/Vec3D; yRot
	b (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/phys/Vec3D; atCenterOf
	b (Lnet/minecraft/world/phys/Vec3D;)D dot
	c ()D z
	c (DDD)D distanceToSqr
	c (F)Lnet/minecraft/world/phys/Vec3D; zRot
	c (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/phys/Vec3D; atBottomCenterOf
	c (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; cross
	d ()Lnet/minecraft/world/phys/Vec3D; normalize
	d (DDD)Lnet/minecraft/world/phys/Vec3D; multiply
	d (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; subtract
	e ()Lnet/minecraft/world/phys/Vec3D; reverse
	e (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; add
	f ()D length
	f (Lnet/minecraft/world/phys/Vec3D;)D distanceTo
	g ()D lengthSqr
	g (Lnet/minecraft/world/phys/Vec3D;)D distanceToSqr
	h ()D horizontalDistance
	h (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; multiply
	i ()D horizontalDistanceSqr
	j ()Lorg/joml/Vector3f; toVector3f
net/minecraft/world/phys/shapes/DoubleListOffset net/minecraft/world/phys/shapes/OffsetDoubleList
	a delegate
	b offset
net/minecraft/world/phys/shapes/OperatorBoolean net/minecraft/world/phys/shapes/BooleanOp
	a FALSE
	b NOT_OR
	c ONLY_SECOND
	d NOT_FIRST
	e ONLY_FIRST
	f NOT_SECOND
	g NOT_SAME
	h NOT_AND
	i AND
	j SAME
	k SECOND
	l CAUSES
	m FIRST
	n CAUSED_BY
	o OR
	p TRUE
net/minecraft/world/phys/shapes/VoxelShapeArray net/minecraft/world/phys/shapes/ArrayVoxelShape
	b xs
	c ys
	d zs
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
net/minecraft/world/phys/shapes/VoxelShapeBitSet net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape
	d storage
	e xMin
	f yMin
	g zMin
	h xMax
	i yMax
	j zMax
	a ()Z isEmpty
	a (III)I getIndex
	a (IIII)Z isZStripFull
	a (IIIII)Z isXZRectangleFull
	a (IIIIIIIII)Lnet/minecraft/world/phys/shapes/VoxelShapeBitSet; withFilledBounds
	a (IIIZ)V fillUpdateBounds
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)I firstFull
	a (Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;Lehw$b;Z)V forAllBoxes
	a (Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;Lnet/minecraft/world/phys/shapes/VoxelShapeMerger;Lnet/minecraft/world/phys/shapes/VoxelShapeMerger;Lnet/minecraft/world/phys/shapes/VoxelShapeMerger;Lnet/minecraft/world/phys/shapes/OperatorBoolean;)Lnet/minecraft/world/phys/shapes/VoxelShapeBitSet; join
	b (III)Z isFull
	b (IIII)V clearZStrip
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;)I lastFull
	c (III)V fill
net/minecraft/world/phys/shapes/VoxelShapeCollision net/minecraft/world/phys/shapes/CollisionContext
	a ()Lnet/minecraft/world/phys/shapes/VoxelShapeCollision; empty
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/shapes/VoxelShapeCollision; of
	a (Lnet/minecraft/world/item/Item;)Z isHoldingItem
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/material/Fluid;)Z canStandOnFluid
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPosition;Z)Z isAbove
	b ()Z isDescending
net/minecraft/world/phys/shapes/VoxelShapeCollisionEntity net/minecraft/world/phys/shapes/EntityCollisionContext
	a EMPTY
	b descending
	c entityBottom
	d heldItem
	e canStandOnFluid
	f entity
	a (Lnet/minecraft/world/item/Item;)Z isHoldingItem
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/material/Fluid;)Z canStandOnFluid
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPosition;Z)Z isAbove
	b ()Z isDescending
	c ()Lnet/minecraft/world/entity/Entity; getEntity
net/minecraft/world/phys/shapes/VoxelShapeCube net/minecraft/world/phys/shapes/CubeVoxelShape
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;D)I findIndex
net/minecraft/world/phys/shapes/VoxelShapeCubeMerger net/minecraft/world/phys/shapes/DiscreteCubeMerger
	a result
	b firstDiv
	c secondDiv
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lehz$a;)Z forMergedIndexes
net/minecraft/world/phys/shapes/VoxelShapeCubePoint net/minecraft/world/phys/shapes/CubePointRange
	a parts
net/minecraft/world/phys/shapes/VoxelShapeDiscrete net/minecraft/world/phys/shapes/DiscreteVoxelShape
	a xSize
	b ySize
	c zSize
	d AXIS_VALUES
	a ()Z isEmpty
	a (Lehw$a;)V forAllFaces
	a (Lehw$a;Lnet/minecraft/core/EnumAxisCycle;)V forAllAxisFaces
	a (Lehw$b;Lnet/minecraft/core/EnumAxisCycle;Z)V forAllAxisEdges
	a (Lehw$b;Z)V forAllEdges
	a (Lnet/minecraft/core/EnumAxisCycle;III)Z isFullWide
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)I firstFull
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;II)I firstFull
	b ()I getXSize
	b (III)Z isFull
	b (Lehw$b;Z)V forAllBoxes
	b (Lnet/minecraft/core/EnumAxisCycle;III)Z isFull
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;)I lastFull
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;II)I lastFull
	c ()I getYSize
	c (III)V fill
	c (Lnet/minecraft/core/EnumDirection$EnumAxis;)I getSize
	d ()I getZSize
	d (III)Z isFullWide
net/minecraft/world/phys/shapes/VoxelShapeDiscreteSlice net/minecraft/world/phys/shapes/SubShape
	d parent
	e startX
	f startY
	g startZ
	h endX
	i endY
	j endZ
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)I firstFull
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;I)I clampToShape
	b (III)Z isFull
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;)I lastFull
	c (III)V fill
net/minecraft/world/phys/shapes/VoxelShapeMerger net/minecraft/world/phys/shapes/IndexMerger
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lehz$a;)Z forMergedIndexes
net/minecraft/world/phys/shapes/VoxelShapeMergerDisjoint net/minecraft/world/phys/shapes/NonOverlappingMerger
	a lower
	b upper
	c swap
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lehz$a;)Z forMergedIndexes
	b (Lehz$a;)Z forNonSwappedIndexes
net/minecraft/world/phys/shapes/VoxelShapeMergerIdentical net/minecraft/world/phys/shapes/IdenticalMerger
	a coords
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lehz$a;)Z forMergedIndexes
net/minecraft/world/phys/shapes/VoxelShapeMergerList net/minecraft/world/phys/shapes/IndirectMerger
	a EMPTY
	b result
	c firstIndices
	d secondIndices
	e resultLength
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lehz$a;)Z forMergedIndexes
net/minecraft/world/phys/shapes/VoxelShapeSlice net/minecraft/world/phys/shapes/SliceShape
	b delegate
	c axis
	d SLICE_COORDS
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;Lnet/minecraft/core/EnumDirection$EnumAxis;I)Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete; makeSlice
net/minecraft/world/phys/shapes/VoxelShapes net/minecraft/world/phys/shapes/Shapes
	a EPSILON
	b BIG_EPSILON
	c INFINITY
	d BLOCK
	e EMPTY
	a ()Lnet/minecraft/world/phys/shapes/VoxelShape; empty
	a (DD)I findBits
	a (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; box
	a (II)J lcm
	a (ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lnet/minecraft/world/phys/shapes/VoxelShapeMerger; createIndexMerger
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/lang/Iterable;D)D collide
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)Lnet/minecraft/world/phys/shapes/VoxelShape; create
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/phys/shapes/VoxelShape; getFaceShape
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; or
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/EnumDirection;)Z blockOccudes
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/OperatorBoolean;)Lnet/minecraft/world/phys/shapes/VoxelShape; join
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;[Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; or
	a (Lnet/minecraft/world/phys/shapes/VoxelShapeMerger;Lnet/minecraft/world/phys/shapes/VoxelShapeMerger;Lnet/minecraft/world/phys/shapes/VoxelShapeMerger;Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;Lnet/minecraft/world/phys/shapes/OperatorBoolean;)Z joinIsNotEmpty
	b ()Lnet/minecraft/world/phys/shapes/VoxelShape; block
	b (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; create
	b (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z faceShapeOccludes
	b (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/EnumDirection;)Z mergedFaceOccludes
	b (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/OperatorBoolean;)Lnet/minecraft/world/phys/shapes/VoxelShape; joinUnoptimized
	c (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/OperatorBoolean;)Z joinIsNotEmpty
net/minecraft/world/scores/PersistentScoreboard net/minecraft/world/scores/ScoreboardSaveData
	a FILE_ID
	b LOGGER
	c scoreboard
	a ()Lnet/minecraft/nbt/NBTTagList; saveTeams
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/nbt/NBTTagList;)V loadTeams
	a (Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/nbt/NBTTagList;)V loadTeamPlayers
	b ()Lnet/minecraft/nbt/NBTTagList; saveObjectives
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/scores/PersistentScoreboard; load
	b (Lnet/minecraft/nbt/NBTTagList;)V loadObjectives
	c (Lnet/minecraft/nbt/NBTTagCompound;)V loadDisplaySlots
	d (Lnet/minecraft/nbt/NBTTagCompound;)V saveDisplaySlots
net/minecraft/world/scores/ScoreboardObjective net/minecraft/world/scores/Objective
	a scoreboard
	b name
	c criteria
	d displayName
	e formattedDisplayName
	f renderType
	a ()Lnet/minecraft/world/scores/Scoreboard; getScoreboard
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setDisplayName
	a (Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay;)V setRenderType
	b ()Ljava/lang/String; getName
	c ()Lnet/minecraft/world/scores/criteria/IScoreboardCriteria; getCriteria
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getFormattedDisplayName
	f ()Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; createFormattedDisplayName
net/minecraft/world/scores/ScoreboardScore net/minecraft/world/scores/Score
	a SCORE_COMPARATOR
	b scoreboard
	c objective
	d owner
	e count
	f locked
	g forceUpdate
	a ()V increment
	a (I)V add
	a (Z)V setLocked
	b ()I getScore
	b (I)V setScore
	c ()V reset
	d ()Lnet/minecraft/world/scores/ScoreboardObjective; getObjective
	e ()Ljava/lang/String; getOwner
	f ()Lnet/minecraft/world/scores/Scoreboard; getScoreboard
	g ()Z isLocked
net/minecraft/world/scores/ScoreboardTeam net/minecraft/world/scores/PlayerTeam
	a BIT_FRIENDLY_FIRE
	b BIT_SEE_INVISIBLES
	c scoreboard
	d name
	e players
	f displayName
	g playerPrefix
	h playerSuffix
	i allowFriendlyFire
	j seeFriendlyInvisibles
	k nameTagVisibility
	l deathMessageVisibility
	m color
	n collisionRule
	o displayNameStyle
	a ()Lnet/minecraft/world/scores/Scoreboard; getScoreboard
	a (I)V unpackOptions
	a (Lnet/minecraft/EnumChatFormat;)V setColor
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setDisplayName
	a (Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility;)V setNameTagVisibility
	a (Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush;)V setCollisionRule
	a (Lnet/minecraft/world/scores/ScoreboardTeamBase;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; formatNameForTeam
	a (Z)V setAllowFriendlyFire
	b ()Ljava/lang/String; getName
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setPlayerPrefix
	b (Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility;)V setDeathMessageVisibility
	b (Z)V setSeeFriendlyInvisibles
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V setPlayerSuffix
	d ()Lnet/minecraft/network/chat/IChatMutableComponent; getFormattedDisplayName
	d (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; getFormattedName
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getPlayerPrefix
	f ()Lnet/minecraft/network/chat/IChatBaseComponent; getPlayerSuffix
	g ()Ljava/util/Collection; getPlayers
	h ()Z isAllowFriendlyFire
	i ()Z canSeeFriendlyInvisibles
	j ()Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility; getNameTagVisibility
	k ()Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility; getDeathMessageVisibility
	l ()Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush; getCollisionRule
	m ()I packOptions
	n ()Lnet/minecraft/EnumChatFormat; getColor
net/minecraft/world/scores/ScoreboardTeamBase net/minecraft/world/scores/Team
	a (Lnet/minecraft/world/scores/ScoreboardTeamBase;)Z isAlliedTo
	b ()Ljava/lang/String; getName
	d (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; getFormattedName
	g ()Ljava/util/Collection; getPlayers
	h ()Z isAllowFriendlyFire
	i ()Z canSeeFriendlyInvisibles
	j ()Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility; getNameTagVisibility
	k ()Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility; getDeathMessageVisibility
	l ()Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush; getCollisionRule
	n ()Lnet/minecraft/EnumChatFormat; getColor
net/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility net/minecraft/world/scores/Team$Visibility
	a ALWAYS
	b NEVER
	c HIDE_FOR_OTHER_TEAMS
	d HIDE_FOR_OWN_TEAM
	e name
	f id
	g BY_NAME
	h $VALUES
	a ()[Ljava/lang/String; getAllNames
	a (Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility; byName
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	c ()[Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility; $values
net/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush net/minecraft/world/scores/Team$CollisionRule
	a ALWAYS
	b NEVER
	c PUSH_OTHER_TEAMS
	d PUSH_OWN_TEAM
	e name
	f id
	g BY_NAME
	h $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	a (Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush; byName
	b ()[Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush; $values
net/minecraft/world/scores/criteria/IScoreboardCriteria net/minecraft/world/scores/criteria/ObjectiveCriteria
	a DUMMY
	b TRIGGER
	c DEATH_COUNT
	d KILL_COUNT_PLAYERS
	e KILL_COUNT_ALL
	f HEALTH
	g FOOD
	h AIR
	i ARMOR
	j EXPERIENCE
	k LEVEL
	l TEAM_KILL
	m KILLED_BY_TEAM
	n CUSTOM_CRITERIA
	o CRITERIA_CACHE
	p name
	q readOnly
	r renderType
	a (Ljava/lang/String;)Ljava/util/Optional; byName
	a (Ljava/lang/String;ZLnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay;)Lnet/minecraft/world/scores/criteria/IScoreboardCriteria; registerCustom
	a (Lnet/minecraft/stats/StatisticWrapper;Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; getStat
	b (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/IScoreboardCriteria; registerCustom
	c ()Ljava/util/Set; getCustomCriteriaNames
	d ()Ljava/lang/String; getName
	e ()Z isReadOnly
	f ()Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay; getDefaultRenderType
net/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType
	a INTEGER
	b HEARTS
	c CODEC
	d id
	e $VALUES
	a ()Ljava/lang/String; getId
	a (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay; byId
	b ()[Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/ticks/NextTickListEntry net/minecraft/world/ticks/ScheduledTick
	a DRAIN_ORDER
	b INTRA_TICK_DRAIN_ORDER
	c UNIQUE_TICK_HASH
	d type
	e pos
	f triggerTick
	g priority
	h subTickOrder
	a ()Ljava/lang/Object; type
	a (Ljava/lang/Object;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ticks/NextTickListEntry; probe
	b ()Lnet/minecraft/core/BlockPosition; pos
	c ()J triggerTick
	d ()Lnet/minecraft/world/ticks/TickListPriority; priority
	e ()J subTickOrder
net/minecraft/world/ticks/ProtoChunkTickList net/minecraft/world/ticks/ProtoChunkTicks
	a ticks
	b ticksPerPosition
	a ()I count
	a (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/nbt/NBTTagList;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/world/ticks/ProtoChunkTickList; load
	a (Lnet/minecraft/world/ticks/NextTickListEntry;)V schedule
	a (Lnet/minecraft/world/ticks/TickListChunk;)V schedule
	b ()Ljava/util/List; scheduledTicks
	b (JLjava/util/function/Function;)Lnet/minecraft/nbt/NBTBase; save
net/minecraft/world/ticks/TickList net/minecraft/world/ticks/TickAccess
	a ()I count
	a (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/world/ticks/NextTickListEntry;)V schedule
net/minecraft/world/ticks/TickListChunk net/minecraft/world/ticks/SavedTick
	a UNIQUE_TICK_HASH
	b type
	c pos
	d delay
	e priority
	f TAG_ID
	g TAG_X
	h TAG_Y
	i TAG_Z
	j TAG_DELAY
	k TAG_PRIORITY
	a ()Ljava/lang/Object; type
	a (JJ)Lnet/minecraft/world/ticks/NextTickListEntry; unpack
	a (Ljava/lang/Object;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ticks/TickListChunk; probe
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/ticks/TickListPriority;)Lnet/minecraft/nbt/NBTTagCompound; saveTick
	a (Ljava/util/function/Function;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/function/Function;)Ljava/util/Optional; loadTick
	a (Lnet/minecraft/nbt/NBTTagList;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkCoordIntPair;Ljava/util/function/Consumer;)V loadTickList
	a (Lnet/minecraft/world/ticks/NextTickListEntry;Ljava/util/function/Function;J)Lnet/minecraft/nbt/NBTTagCompound; saveTick
	b ()Lnet/minecraft/core/BlockPosition; pos
	c ()I delay
	d ()Lnet/minecraft/world/ticks/TickListPriority; priority
net/minecraft/world/ticks/TickListEmpty net/minecraft/world/ticks/BlackholeTickAccess
	a CONTAINER_BLACKHOLE
	b LEVEL_BLACKHOLE
	a ()Lnet/minecraft/world/ticks/TickContainerAccess; emptyContainer
	b ()Lnet/minecraft/world/ticks/LevelTickAccess; emptyLevelList
net/minecraft/world/ticks/TickListPriority net/minecraft/world/ticks/TickPriority
	a EXTREMELY_HIGH
	b VERY_HIGH
	c HIGH
	d NORMAL
	e LOW
	f VERY_LOW
	g EXTREMELY_LOW
	h value
	i $VALUES
	a ()I getValue
	a (I)Lnet/minecraft/world/ticks/TickListPriority; byValue
	b ()[Lnet/minecraft/world/ticks/TickListPriority; $values
net/minecraft/world/ticks/TickListServer net/minecraft/world/ticks/LevelTicks
	a CONTAINER_DRAIN_ORDER
	b tickCheck
	c profiler
	d allContainers
	e nextTickForContainer
	f containersToTick
	g toRunThisTick
	h alreadyRunThisTick
	i toRunThisTickSet
	j chunkScheduleUpdater
	a ()I count
	a (I)Z canScheduleMoreTicks
	a (J)V sortContainersToTick
	a (JI)V drainContainers
	a (JILjava/util/function/BiConsumer;)V tick
	a (JILnet/minecraft/util/profiling/GameProfilerFiller;)V collectTicks
	a (Ljava/util/Queue;Lnet/minecraft/world/ticks/LevelChunkTicks;JI)V drainFromCurrentContainer
	a (Ljava/util/function/BiConsumer;)V runCollectedTicks
	a (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V removeContainer
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/ticks/LevelChunkTicks;)V addContainer
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V clearArea
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Leiw$a;)V forContainersInArea
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/core/BaseBlockPosition;)V copyArea
	a (Lnet/minecraft/world/ticks/NextTickListEntry;)V schedule
	a (Lnet/minecraft/world/ticks/TickListServer;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/core/BaseBlockPosition;)V copyAreaFrom
	b ()V rescheduleLeftoverContainers
	b (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
	b (Lnet/minecraft/world/ticks/NextTickListEntry;)V updateContainerScheduling
	c ()V cleanupAfterTick
	c (Lnet/minecraft/world/ticks/NextTickListEntry;)V scheduleForThisTick
	d ()V calculateTickSetIfNeeded
net/minecraft/world/ticks/TickListWorldGen net/minecraft/world/ticks/WorldGenTickAccess
	a containerGetter
	a ()I count
	a (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/world/ticks/NextTickListEntry;)V schedule
	b (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
nf net/minecraft/data/tags/VanillaItemTagsProvider
	a (Lhg$b;)V addTags
ng net/minecraft/data/tags/WorldPresetTagsProvider
	a (Lhg$b;)V addTags
qa$a net/minecraft/gametest/framework/GameTestSequence$Condition
	b NOT_TRIGGERED
	c triggerTime
	a ()V assertTriggeredThisTick
	a (J)V trigger
qb net/minecraft/gametest/framework/GameTestServer
	n LOGGER
	o PROGRESS_REPORT_INTERVAL
	p NO_SERVICES
	q testBatches
	r spawnPos
	s TEST_GAME_RULES
	t WORLD_OPTIONS
	u testTracker
	T_ ()Z shouldInformAdmins
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/lang/Thread;Lnet/minecraft/world/level/storage/Convertable$ConversionSession;Lnet/minecraft/server/packs/repository/ResourcePackRepository;Ljava/util/Collection;Lnet/minecraft/core/BlockPosition;)Lqb; create
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	a (Lnet/minecraft/CrashReport;)V onServerCrash
	a (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; fillServerSystemReport
	b (Lnet/minecraft/server/level/WorldServer;)V startTests
	bf ()Z haveTestsStarted
	e ()Z initServer
	g ()V onServerExit
	h ()Z isHardcore
	i ()I getOperatorUserPermissionLevel
	j ()I getFunctionCompilationLevel
	k ()Z shouldRconBroadcast
	l ()Z isDedicatedServer
	m ()I getRateLimitPacketsPerSecond
	n ()Z isEpollEnabled
	o ()Z isCommandBlockEnabled
	p ()Z isPublished
	u_ ()V waitUntilNextTick
qf net/minecraft/gametest/framework/JUnitLikeTestReporter
	a document
	b testSuite
	c stopwatch
	d destination
	a ()V finish
	a (Ljava/io/File;)V save
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestFailed
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Ljava/lang/String;)Lorg/w3c/dom/Element; createTestCase
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestSuccess
qk net/minecraft/gametest/framework/TeamcityTestReporter
	a LOGGER
	b ESCAPER
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestFailed
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestSuccess
qm$a net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer
	a level
	b tracker
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testStructureLoaded
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testPassed
	c (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testFailed
qu$a net/minecraft/nbt/ByteTag$Cache
	a cache
rb$a net/minecraft/nbt/IntTag$Cache
	a cache
	b HIGH
	c LOW
re$a net/minecraft/nbt/LongTag$Cache
	a cache
	b HIGH
	c LOW
ri$a net/minecraft/nbt/NbtOps$ByteListCollector
	a values
	a ()Lnet/minecraft/nbt/NBTBase; result
	a (Lnet/minecraft/nbt/NBTBase;)Lri$f; accept
ri$b net/minecraft/nbt/NbtOps$HeterogenousListCollector
	a result
	a ()Lnet/minecraft/nbt/NBTBase; result
	a (Lnet/minecraft/nbt/NBTBase;)Lri$f; accept
	a (Lnet/minecraft/nbt/NBTTagCompound;)Z isWrapper
	b (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTBase; wrapIfNeeded
	c (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTTagCompound; wrapElement
ri$c net/minecraft/nbt/NbtOps$HomogenousListCollector
	a result
	a ()Lnet/minecraft/nbt/NBTBase; result
	a (Lnet/minecraft/nbt/NBTBase;)Lri$f; accept
ri$d net/minecraft/nbt/NbtOps$InitialListCollector
	a INSTANCE
	a ()Lnet/minecraft/nbt/NBTBase; result
	a (Lnet/minecraft/nbt/NBTBase;)Lri$f; accept
ri$e net/minecraft/nbt/NbtOps$IntListCollector
	a values
	a ()Lnet/minecraft/nbt/NBTBase; result
	a (Lnet/minecraft/nbt/NBTBase;)Lri$f; accept
ri$f net/minecraft/nbt/NbtOps$ListCollector
	a ()Lnet/minecraft/nbt/NBTBase; result
	a (Ljava/lang/Iterable;)Lri$f; acceptAll
	a (Ljava/util/stream/Stream;)Lri$f; acceptAll
	a (Lnet/minecraft/nbt/NBTBase;)Lri$f; accept
ri$g net/minecraft/nbt/NbtOps$LongListCollector
	a values
	a ()Lnet/minecraft/nbt/NBTBase; result
	a (Lnet/minecraft/nbt/NBTBase;)Lri$f; accept
ri$h net/minecraft/nbt/NbtOps$NbtRecordBuilder
	a ()Lnet/minecraft/nbt/NBTTagCompound; initBuilder
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTBase;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; append
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; build
rl$a net/minecraft/nbt/ShortTag$Cache
	a cache
	b HIGH
	c LOW
rn$a net/minecraft/nbt/StreamTagVisitor$EntryResult
	a ENTER
	b SKIP
	c BREAK
	d HALT
	e $VALUES
	a ()[Lrn$a; $values
rn$b net/minecraft/nbt/StreamTagVisitor$ValueResult
	a CONTINUE
	b BREAK
	c HALT
	d $VALUES
	a ()[Lrn$b; $values
rs$a net/minecraft/nbt/TagType$StaticSize
	a (Ljava/io/DataInput;ILnet/minecraft/nbt/NBTReadLimiter;)V skip
	b (Ljava/io/DataInput;Lnet/minecraft/nbt/NBTReadLimiter;)V skip
	c ()I size
rs$b net/minecraft/nbt/TagType$VariableSize
	a (Ljava/io/DataInput;ILnet/minecraft/nbt/NBTReadLimiter;)V skip
sb net/minecraft/nbt/visitors/SkipAll
	a INSTANCE
	a ()Lrn$b; visitEnd
	a (B)Lrn$b; visit
	a (D)Lrn$b; visit
	a (F)Lrn$b; visit
	a (I)Lrn$b; visit
	a (J)Lrn$b; visit
	a (Ljava/lang/String;)Lrn$b; visit
	a (Lnet/minecraft/nbt/NBTTagType;)Lrn$a; visitEntry
	a (Lnet/minecraft/nbt/NBTTagType;I)Lrn$b; visitList
	a (Lnet/minecraft/nbt/NBTTagType;Ljava/lang/String;)Lrn$a; visitEntry
	a (S)Lrn$b; visit
	a ([B)Lrn$b; visit
	a ([I)Lrn$b; visit
	a ([J)Lrn$b; visit
	b ()Lrn$b; visitContainerEnd
	b (Lnet/minecraft/nbt/NBTTagType;)Lrn$b; visitRootEntry
	b (Lnet/minecraft/nbt/NBTTagType;I)Lrn$a; visitElement
sn$a net/minecraft/network/ConnectionProtocol$CodecData
	a protocol
	b flow
	c packetSet
	a ()Lnet/minecraft/network/EnumProtocol; protocol
	a (ILnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/Packet; createPacket
	a (Lnet/minecraft/network/protocol/Packet;)I packetId
	b ()Lnet/minecraft/network/protocol/EnumProtocolDirection; flow
	b (Lnet/minecraft/network/protocol/Packet;)Z isValidPacketType
	c ()Lnet/minecraft/network/protocol/BundlerInfo; bundlerInfo
	d ()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; packetsByIds
sn$b net/minecraft/network/ConnectionProtocol$PacketSet
	a LOGGER
	b classToId
	c idToDeserializer
	d bundlerInfo
	e extraClasses
	a ()Lnet/minecraft/network/protocol/BundlerInfo; bundlerInfo
	a (ILnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/Packet; createPacket
	a (Ljava/lang/Class;)I getId
	a (Ljava/lang/Class;Ljava/util/function/Function;)Lsn$b; addPacket
	b (Ljava/lang/Class;)Z isKnownPacket
	b (Ljava/lang/Class;Ljava/util/function/Function;)Lsn$b; withBundlePacket
sn$c net/minecraft/network/ConnectionProtocol$ProtocolBuilder
	a flows
	a (Lnet/minecraft/network/EnumProtocol;)Ljava/util/Map; buildCodecs
	a (Lnet/minecraft/network/protocol/EnumProtocolDirection;Lsn$b;)Lsn$c; addFlow
so$a net/minecraft/network/FriendlyByteBuf$Reader
so$b net/minecraft/network/FriendlyByteBuf$Writer
th$a net/minecraft/network/chat/ChatType$Bound
	a chatType
	b name
	c targetName
	a ()Lnet/minecraft/network/chat/ChatMessageType; chatType
	a (Lnet/minecraft/core/IRegistryCustom;)Lth$b; toNetwork
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; decorate
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; name
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; decorateNarration
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; targetName
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)Lth$a; withTargetName
th$b net/minecraft/network/chat/ChatType$BoundNetwork
	a chatType
	b name
	c targetName
	a ()I chatType
	a (Lnet/minecraft/core/IRegistryCustom;)Ljava/util/Optional; resolve
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; name
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; targetName
ti$a net/minecraft/network/chat/ChatTypeDecoration$Parameter
	a SENDER
	b TARGET
	c CONTENT
	d CODEC
	e name
	f selector
	g $VALUES
	a ()[Lti$a; $values
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lth$a;)Lnet/minecraft/network/chat/IChatBaseComponent; select
	c ()Ljava/lang/String; getSerializedName
ti$a$a net/minecraft/network/chat/ChatTypeDecoration$Parameter$Selector
to$a net/minecraft/network/chat/FilterMask$Type
	a PASS_THROUGH
	b FULLY_FILTERED
	c PARTIALLY_FILTERED
	d serializedName
	e codec
	f $VALUES
	a ()Lcom/mojang/serialization/Codec; codec
	c ()Ljava/lang/String; getSerializedName
	f ()[Lto$a; $values
tp$a net/minecraft/network/chat/FormattedText$ContentConsumer
tp$b net/minecraft/network/chat/FormattedText$StyledContentConsumer
tq$b net/minecraft/network/chat/HoverEvent$EntityTooltipInfo
	a type
	b id
	c name
	d linesCache
	a ()Lcom/google/gson/JsonElement; serialize
	a (Lcom/google/gson/JsonElement;)Ltq$b; create
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Ltq$b; create
	b ()Ljava/util/List; getTooltipLines
tq$c net/minecraft/network/chat/HoverEvent$ItemStackInfo
	a item
	b count
	c tag
	d itemStack
	a ()Lnet/minecraft/world/item/ItemStack; getItemStack
	a (Lcom/google/gson/JsonElement;)Ltq$c; create
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Ltq$c; create
	b ()Lcom/google/gson/JsonElement; serialize
tr$a net/minecraft/network/chat/LastSeenMessages$Packed
	a EMPTY
	b entries
	a ()Ljava/util/List; entries
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/chat/MessageSignatureCache;)Ljava/util/Optional; unpack
tr$b net/minecraft/network/chat/LastSeenMessages$Update
	a offset
	b acknowledged
	a ()I offset
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Ljava/util/BitSet; acknowledged
ts net/minecraft/network/chat/LastSeenMessagesTracker
	a trackedMessages
	b tail
	c offset
	d lastTrackedMessage
	a ()I getAndClearOffset
	a (Lnet/minecraft/network/chat/LastSeenTrackedEntry;)V addEntry
	a (Lnet/minecraft/network/chat/MessageSignature;)V ignorePending
	a (Lnet/minecraft/network/chat/MessageSignature;Z)Z addPending
	b ()Lts$a; generateAndApplyUpdate
	c ()I offset
ts$a net/minecraft/network/chat/LastSeenMessagesTracker$Update
	a lastSeen
	b update
	a ()Lnet/minecraft/network/chat/LastSeenMessages; lastSeen
	b ()Ltr$b; update
tv net/minecraft/network/chat/LocalChatSession
	a sessionId
	b keyPair
	a ()Lnet/minecraft/network/chat/RemoteChatSession; asRemote
	a (Lcbw;)Ltv; create
	a (Ljava/util/UUID;)Lue$c; createMessageEncoder
	b ()Ljava/util/UUID; sessionId
	c ()Lcbw; keyPair
tw$a net/minecraft/network/chat/MessageSignature$Packed
	a FULL_SIGNATURE
	b id
	c fullSignature
	a ()I id
	a (Lnet/minecraft/network/PacketDataSerializer;)Ltw$a; read
	a (Lnet/minecraft/network/PacketDataSerializer;Ltw$a;)V write
	a (Lnet/minecraft/network/chat/MessageSignatureCache;)Ljava/util/Optional; unpack
	b ()Lnet/minecraft/network/chat/MessageSignature; fullSignature
tz$a net/minecraft/network/chat/OutgoingChatMessage$Disguised
	a content
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; content
	a (Lnet/minecraft/server/level/EntityPlayer;ZLth$a;)V sendToPlayer
tz$b net/minecraft/network/chat/OutgoingChatMessage$Player
	a message
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; content
	a (Lnet/minecraft/server/level/EntityPlayer;ZLth$a;)V sendToPlayer
	b ()Lnet/minecraft/network/chat/PlayerChatMessage; message
u net/minecraft/FieldsAreNonnullByDefault
ub$a net/minecraft/network/chat/RemoteChatSession$Data
	a sessionId
	b profilePublicKey
	a ()Ljava/util/UUID; sessionId
	a (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/util/SignatureValidator;)Lnet/minecraft/network/chat/RemoteChatSession; validate
	a (Lnet/minecraft/network/PacketDataSerializer;)Lub$a; read
	a (Lnet/minecraft/network/PacketDataSerializer;Lub$a;)V write
	b ()Lcbx$a; profilePublicKey
uc$a net/minecraft/network/chat/SignableCommand$Argument
	a node
	b value
	a ()Ljava/lang/String; name
	b ()Lcom/mojang/brigadier/tree/ArgumentCommandNode; node
	c ()Ljava/lang/String; value
ud$a net/minecraft/network/chat/SignedMessageBody$Packed
	a content
	b timeStamp
	c salt
	d lastSeen
	a ()Ljava/lang/String; content
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/chat/MessageSignatureCache;)Ljava/util/Optional; unpack
	b ()Ljava/time/Instant; timeStamp
	c ()J salt
	d ()Ltr$a; lastSeen
ue$a net/minecraft/network/chat/SignedMessageChain$DecodeException
	a shouldDisconnect
	a ()Z shouldDisconnect
ue$b net/minecraft/network/chat/SignedMessageChain$Decoder
	a REJECT_ALL
ue$c net/minecraft/network/chat/SignedMessageChain$Encoder
	a UNSIGNED
ug$a net/minecraft/network/chat/SignedMessageValidator$KeyBased
	d validator
	e expired
	f lastMessage
	g isChainValid
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)Z validateChain
	b (Lnet/minecraft/network/chat/PlayerChatMessage;)Z validate
ui net/minecraft/network/chat/SubStringSource
	a plainText
	b charStyles
	c reverseCharModifier
	a ()Ljava/lang/String; getPlainText
	a (IIZ)Ljava/util/List; substring
	a (Lnet/minecraft/network/chat/IChatFormatted;)Lui; create
	a (Lnet/minecraft/network/chat/IChatFormatted;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Lui; create
vc$a net/minecraft/network/protocol/BundlerInfo$Bundler
	a (Lnet/minecraft/network/protocol/Packet;)Lnet/minecraft/network/protocol/Packet; addPacket
vc$b net/minecraft/network/protocol/BundlerInfo$Provider
	c ()Lnet/minecraft/network/protocol/BundlerInfo; bundlerInfo
vs$a net/minecraft/network/protocol/common/ServerboundResourcePackPacket$Action
	a SUCCESSFULLY_LOADED
	b DECLINED
	c FAILED_DOWNLOAD
	d ACCEPTED
	e $VALUES
	a ()[Lvs$a; $values
vt$a net/minecraft/network/protocol/common/custom/BeeDebugPayload$BeeInfo
	a uuid
	b id
	c pos
	d path
	e hivePos
	f flowerPos
	g travelTicks
	h goals
	i blacklistedHives
	a ()Ljava/lang/String; generateName
	a (Lnet/minecraft/core/BlockPosition;)Z hasHive
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Ljava/util/UUID; uuid
	c ()I id
	d ()Lnet/minecraft/world/phys/Vec3D; pos
	e ()Lnet/minecraft/world/level/pathfinder/PathEntity; path
	f ()Lnet/minecraft/core/BlockPosition; hivePos
	g ()Lnet/minecraft/core/BlockPosition; flowerPos
	h ()I travelTicks
	i ()Ljava/util/Set; goals
	j ()Ljava/util/List; blacklistedHives
vu$a net/minecraft/network/protocol/common/custom/BrainDebugPayload$BrainDump
	a uuid
	b id
	c name
	d profession
	e xp
	f health
	g maxHealth
	h pos
	i inventory
	j path
	k wantsGolem
	l angerLevel
	m activities
	n behaviors
	o memories
	p gossips
	q pois
	r potentialPois
	a ()Ljava/util/UUID; uuid
	a (Lnet/minecraft/core/BlockPosition;)Z hasPoi
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()I id
	b (Lnet/minecraft/core/BlockPosition;)Z hasPotentialPoi
	c ()Ljava/lang/String; name
	d ()Ljava/lang/String; profession
	e ()I xp
	f ()F health
	g ()F maxHealth
	h ()Lnet/minecraft/world/phys/Vec3D; pos
	i ()Ljava/lang/String; inventory
	j ()Lnet/minecraft/world/level/pathfinder/PathEntity; path
	k ()Z wantsGolem
	l ()I angerLevel
	m ()Ljava/util/List; activities
	n ()Ljava/util/List; behaviors
	o ()Ljava/util/List; memories
	p ()Ljava/util/List; gossips
	q ()Ljava/util/Set; pois
	r ()Ljava/util/Set; potentialPois
w net/minecraft/MethodsReturnNonnullByDefault
wc$a net/minecraft/network/protocol/common/custom/GoalDebugPayload$DebugGoal
	a priority
	b isRunning
	c name
	a ()I priority
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Z isRunning
	c ()Ljava/lang/String; name
wd$a net/minecraft/network/protocol/common/custom/HiveDebugPayload$HiveInfo
	a pos
	b hiveType
	c occupantCount
	d honeyLevel
	e sedated
	a ()Lnet/minecraft/core/BlockPosition; pos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Ljava/lang/String; hiveType
	c ()I occupantCount
	d ()I honeyLevel
	e ()Z sedated
wk$a net/minecraft/network/protocol/common/custom/StructuresDebugPayload$PieceInfo
	a boundingBox
	b isStart
	a ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; boundingBox
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Z isStart
xg$a net/minecraft/network/protocol/game/ClientboundBossEventPacket$AddOperation
	a name
	b progress
	c color
	d overlay
	e darkenScreen
	f playMusic
	g createWorldFog
	a ()Lxg$d; getType
	a (Ljava/util/UUID;Lxg$b;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
xg$b net/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler
	a (Ljava/util/UUID;)V remove
	a (Ljava/util/UUID;F)V updateProgress
	a (Ljava/util/UUID;Lnet/minecraft/network/chat/IChatBaseComponent;)V updateName
	a (Ljava/util/UUID;Lnet/minecraft/network/chat/IChatBaseComponent;FLnet/minecraft/world/BossBattle$BarColor;Lnet/minecraft/world/BossBattle$BarStyle;ZZZ)V add
	a (Ljava/util/UUID;Lnet/minecraft/world/BossBattle$BarColor;Lnet/minecraft/world/BossBattle$BarStyle;)V updateStyle
	a (Ljava/util/UUID;ZZZ)V updateProperties
xg$d net/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType
	a ADD
	b REMOVE
	c UPDATE_PROGRESS
	d UPDATE_NAME
	e UPDATE_STYLE
	f UPDATE_PROPERTIES
	g reader
	h $VALUES
	a ()[Lxg$d; $values
xg$e net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateNameOperation
	a name
	a ()Lxg$d; getType
	a (Ljava/util/UUID;Lxg$b;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
xg$f net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateProgressOperation
	a progress
	a ()Lxg$d; getType
	a (Ljava/util/UUID;Lxg$b;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
xg$g net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdatePropertiesOperation
	a darkenScreen
	b playMusic
	c createWorldFog
	a ()Lxg$d; getType
	a (Ljava/util/UUID;Lxg$b;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
xg$h net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateStyleOperation
	a color
	b overlay
	a ()Lxg$d; getType
	a (Ljava/util/UUID;Lxg$b;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
xl$a net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket$ChunkBiomeData
	a pos
	b buffer
	a ()Lnet/minecraft/network/PacketDataSerializer; getReadBuffer
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/chunk/Chunk;)V extractChunkData
	a (Lnet/minecraft/world/level/chunk/Chunk;)I calculateChunkSize
	b ()Lnet/minecraft/world/level/ChunkCoordIntPair; pos
	c ()[B buffer
	d ()Lio/netty/buffer/ByteBuf; getWriteBuffer
xo$a net/minecraft/network/protocol/game/ClientboundCommandsPacket$ArgumentNodeStub
	a id
	b argumentType
	c suggestionId
	a (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/resources/MinecraftKey; getSuggestionId
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; build
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lgi$a;)V serializeCap
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;Lgi$a;)V serializeCap
xo$b net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry
	a stub
	b flags
	c redirect
	d children
	a (Lit/unimi/dsi/fastutil/ints/IntSet;)Z canBuild
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b (Lit/unimi/dsi/fastutil/ints/IntSet;)Z canResolve
xo$c net/minecraft/network/protocol/game/ClientboundCommandsPacket$LiteralNodeStub
	a id
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; build
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
xo$d net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeResolver
	a context
	b entries
	c nodes
	a (I)Lcom/mojang/brigadier/tree/CommandNode; resolve
xo$e net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeStub
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; build
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
yb$a net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type
	a TYPES
	b id
yf$a net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo
	a packedXZ
	b y
	c type
	d tag
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)Lyf$a; create
yf$b net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput
za$a net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action
	a ADD_PLAYER
	b INITIALIZE_CHAT
	c UPDATE_GAME_MODE
	d UPDATE_LISTED
	e UPDATE_LATENCY
	f UPDATE_DISPLAY_NAME
	g reader
	h writer
	i $VALUES
	a ()[Lza$a; $values
za$a$a net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Reader
za$a$b net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Writer
za$b net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Entry
	a profileId
	b profile
	c listed
	d latency
	e gameMode
	f displayName
	g chatSession
	a ()Ljava/util/UUID; profileId
	b ()Lcom/mojang/authlib/GameProfile; profile
	c ()Z listed
	d ()I latency
	e ()Lnet/minecraft/world/level/EnumGamemode; gameMode
	f ()Lnet/minecraft/network/chat/IChatBaseComponent; displayName
	g ()Lub$a; chatSession
za$c net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$EntryBuilder
	a profileId
	b profile
	c listed
	d latency
	e gameMode
	f displayName
	g chatSession
	a ()Lza$b; build
com/mojang/math/GivensParameters com/mojang/math/GivensParameters
	a sinHalf
	b cosHalf
	a ()Lcom/mojang/math/GivensParameters; inverse
	a (F)Lcom/mojang/math/GivensParameters; fromPositiveAngle
	a (FF)Lcom/mojang/math/GivensParameters; fromUnnormalized
	a (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; aroundX
	a (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; aroundX
	b ()F cos
	b (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; aroundY
	b (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; aroundY
	c ()F sin
	c (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; aroundZ
	c (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; aroundZ
	d ()F sinHalf
	e ()F cosHalf
com/mojang/math/MatrixUtil com/mojang/math/MatrixUtil
	a G
	b PI_4
	a (FF)Lcom/mojang/math/GivensParameters; qrGivensQuat
	a (FFF)Lcom/mojang/math/GivensParameters; approxGivensQuat
	a (Lorg/joml/Matrix3f;)Lorg/apache/commons/lang3/tuple/Triple; svdDecompose
	a (Lorg/joml/Matrix3f;I)Lorg/joml/Quaternionf; eigenvalueJacobi
	a (Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;)V similarityTransform
	a (Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;)V stepJacobi
	a (Lorg/joml/Matrix4f;F)Lorg/joml/Matrix4f; mulComponentWise
com/mojang/math/Transformation com/mojang/math/Transformation
	a CODEC
	b EXTENDED_CODEC
	c matrix
	d decomposed
	e translation
	f leftRotation
	g scale
	h rightRotation
	i IDENTITY
	a ()Lcom/mojang/math/Transformation; identity
	a (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; compose
	a (Lcom/mojang/math/Transformation;F)Lcom/mojang/math/Transformation; slerp
	a (Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Vector3f;Lorg/joml/Quaternionf;)Lorg/joml/Matrix4f; compose
	b ()Lcom/mojang/math/Transformation; inverse
	c ()Lorg/joml/Matrix4f; getMatrix
	d ()Lorg/joml/Vector3f; getTranslation
	e ()Lorg/joml/Quaternionf; getLeftRotation
	f ()Lorg/joml/Vector3f; getScale
	g ()Lorg/joml/Quaternionf; getRightRotation
	h ()V ensureDecomposed
net/minecraft/BlockUtil$IntBounds net/minecraft/BlockUtil$IntBounds
	a min
	b max
net/minecraft/CrashReport net/minecraft/CrashReport
	a LOGGER
	b DATE_TIME_FORMATTER
	c title
	d exception
	e details
	f saveFile
	g trackingStackTrace
	h uncategorizedStackTrace
	i systemReport
	a ()Ljava/lang/String; getTitle
	a (Ljava/io/File;)Z saveToFile
	a (Ljava/lang/String;)Lnet/minecraft/CrashReportSystemDetails; addCategory
	a (Ljava/lang/String;I)Lnet/minecraft/CrashReportSystemDetails; addCategory
	a (Ljava/lang/StringBuilder;)V getDetails
	a (Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/CrashReport; forThrowable
	b ()Ljava/lang/Throwable; getException
	c ()Ljava/lang/String; getDetails
	d ()Ljava/lang/String; getExceptionMessage
	e ()Ljava/lang/String; getFriendlyReport
	f ()Ljava/io/File; getSaveFile
	g ()Lnet/minecraft/SystemReport; getSystemReport
	h ()V preload
	i ()Ljava/lang/String; getErrorComment
net/minecraft/DefaultUncaughtExceptionHandler net/minecraft/DefaultUncaughtExceptionHandler
	a logger
net/minecraft/ReportedException net/minecraft/ReportedException
	a report
	a ()Lnet/minecraft/CrashReport; getReport
net/minecraft/SharedConstants net/minecraft/SharedConstants
	A DEBUG_COLLISION
	B DEBUG_SUPPORT_BLOCKS
	C DEBUG_SHAPES
	D DEBUG_NEIGHBORSUPDATE
	E DEBUG_STRUCTURES
	F DEBUG_LIGHT
	G DEBUG_SKY_LIGHT_SECTIONS
	H DEBUG_WORLDGENATTEMPT
	I DEBUG_SOLID_FACE
	J DEBUG_CHUNKS
	K DEBUG_GAME_EVENT_LISTENERS
	L DEBUG_DUMP_TEXTURE_ATLAS
	M DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES
	N DEBUG_STRUCTURE_EDIT_MODE
	O DEBUG_SAVE_STRUCTURES_AS_SNBT
	P DEBUG_SYNCHRONOUS_GL_LOGS
	Q DEBUG_VERBOSE_SERVER_EVENTS
	R DEBUG_NAMED_RUNNABLES
	S DEBUG_GOAL_SELECTOR
	T DEBUG_VILLAGE_SECTIONS
	U DEBUG_BRAIN
	V DEBUG_BEES
	W DEBUG_RAIDS
	X DEBUG_BLOCK_BREAK
	Y DEBUG_RESOURCE_LOAD_TIMES
	Z DEBUG_MONITOR_TICK_TIMES
	a SNAPSHOT
	aA DEBUG_DISABLE_BLENDING
	aB DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION
	aC DEFAULT_MINECRAFT_PORT
	aD INGAME_DEBUG_OUTPUT
	aE DEBUG_SUBTITLES
	aF FAKE_MS_LATENCY
	aG FAKE_MS_JITTER
	aH NETTY_LEAK_DETECTION
	aI COMMAND_STACK_TRACES
	aJ DEBUG_WORLD_RECREATE
	aK DEBUG_SHOW_SERVER_DEBUG_VALUES
	aL DEBUG_STORE_CHUNK_STACKTRACES
	aM DEBUG_FEATURE_COUNT
	aN DEBUG_RESOURCE_GENERATION_OVERRIDE
	aO DEBUG_FORCE_TELEMETRY
	aP DEBUG_DONT_SEND_TELEMETRY_TO_BACKEND
	aQ MAXIMUM_TICK_TIME_NANOS
	aR USE_WORKFLOWS_HOOKS
	aS CHECK_DATA_FIXER_SCHEMA
	aT IS_RUNNING_IN_IDE
	aU DATA_FIX_TYPES_TO_OPTIMIZE
	aV WORLD_RESOLUTION
	aW MAX_CHAT_LENGTH
	aX MAX_COMMAND_LENGTH
	aY MAX_CHAINED_NEIGHBOR_UPDATES
	aZ MAX_RENDER_DISTANCE
	aa DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN
	ab DEBUG_DONT_SAVE_WORLD
	ac DEBUG_LARGE_DRIPSTONE
	ad DEBUG_PACKET_SERIALIZATION
	ae DEBUG_CARVERS
	af DEBUG_ORE_VEINS
	ag DEBUG_SCULK_CATALYST
	ah DEBUG_BYPASS_REALMS_VERSION_CHECK
	ai DEBUG_SOCIAL_INTERACTIONS
	aj DEBUG_VALIDATE_RESOURCE_PATH_CASE
	ak DEBUG_UNLOCK_ALL_TRADES
	al DEBUG_IGNORE_LOCAL_MOB_CAP
	am DEBUG_SMALL_SPAWN
	an DEBUG_DISABLE_LIQUID_SPREADING
	ao DEBUG_AQUIFERS
	ap DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING
	aq debugGenerateSquareTerrainWithoutNoise
	ar debugGenerateStripedTerrainWithoutNoise
	as DEBUG_ONLY_GENERATE_HALF_THE_WORLD
	at DEBUG_DISABLE_FLUID_GENERATION
	au DEBUG_DISABLE_AQUIFERS
	av DEBUG_DISABLE_SURFACE
	aw DEBUG_DISABLE_CARVERS
	ax DEBUG_DISABLE_STRUCTURES
	ay DEBUG_DISABLE_FEATURES
	az DEBUG_DISABLE_ORE_VEINS
	b WORLD_VERSION
	ba ILLEGAL_FILE_CHARACTERS
	bb TICKS_PER_SECOND
	bc MILLIS_PER_TICK
	bd TICKS_PER_MINUTE
	be TICKS_PER_GAME_DAY
	bf AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK
	bg AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE
	bh AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY
	bi WORLD_ICON_SIZE
	bj SNAPSHOT_PROTOCOL_BIT
	bk CURRENT_VERSION
	c SERIES
	d VERSION_STRING
	e RELEASE_NETWORK_PROTOCOL_VERSION
	f SNAPSHOT_NETWORK_PROTOCOL_VERSION
	g SNBT_NAG_VERSION
	h THROW_ON_TASK_FAILURE
	i RESOURCE_PACK_FORMAT
	j DATA_PACK_FORMAT
	k LANGUAGE_FORMAT
	l REPORT_FORMAT_VERSION
	m DATA_VERSION_TAG
	n USE_NEW_RENDERSYSTEM
	o MULTITHREADED_RENDERING
	p FIX_TNT_DUPE
	q FIX_SAND_DUPE
	r USE_DEBUG_FEATURES
	s DEBUG_OPEN_INCOMPATIBLE_WORLDS
	t DEBUG_ALLOW_LOW_SIM_DISTANCE
	u DEBUG_HOTKEYS
	v DEBUG_UI_NARRATION
	w DEBUG_RENDER
	x DEBUG_PATHFINDING
	y DEBUG_WATER
	z DEBUG_HEIGHTMAP
	a ()V tryDetectVersion
	a (C)Z isAllowedChatCharacter
	a (Ljava/lang/String;)Ljava/lang/String; filterText
	a (Ljava/lang/String;Z)Ljava/lang/String; filterText
	a (Lnet/minecraft/WorldVersion;)V setVersion
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z debugVoidTerrain
	b ()Lnet/minecraft/WorldVersion; getCurrentVersion
	c ()I getProtocolVersion
	d ()V enableDataFixerOptimizations
net/minecraft/SystemReport net/minecraft/SystemReport
	a BYTES_PER_MEBIBYTE
	b ONE_GIGA
	c LOGGER
	d OPERATING_SYSTEM
	e JAVA_VERSION
	f JAVA_VM_VERSION
	g entries
	a ()Ljava/lang/String; toLineSeparatedString
	a (Ljava/lang/String;Ljava/lang/Runnable;)V ignoreErrors
	a (Ljava/lang/String;Ljava/lang/String;)V setDetail
	a (Ljava/lang/String;Ljava/util/function/Supplier;)V setDetail
	a (Ljava/lang/StringBuilder;)V appendToCrashReportString
	a (Ljava/util/List;)V putPhysicalMemory
	a (Loshi/SystemInfo;)V putHardware
	a (Loshi/hardware/CentralProcessor;)V putProcessor
	a (Loshi/hardware/GlobalMemory;)V putMemory
	a (Loshi/hardware/VirtualMemory;)V putVirtualMemory
	b (Ljava/util/List;)V putGraphics
net/minecraft/advancements/Advancement net/minecraft/advancements/Advancement
	a parent
	b display
	c rewards
	d criteria
	e requirements
	f sendsTelemetryEvent
	g name
	a ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/Advancement; fromJson
	a (Lnet/minecraft/advancements/AdvancementDisplay;)Lnet/minecraft/network/chat/IChatBaseComponent; decorateName
	a (Lnet/minecraft/advancements/AdvancementHolder;)Lnet/minecraft/network/chat/IChatBaseComponent; name
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Z isRoot
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/advancements/Advancement; read
	c ()Ljava/util/Optional; parent
	d ()Ljava/util/Optional; display
	e ()Lnet/minecraft/advancements/AdvancementRewards; rewards
	f ()Ljava/util/Map; criteria
	g ()Lnet/minecraft/advancements/AdvancementRequirements; requirements
	h ()Z sendsTelemetryEvent
	i ()Ljava/util/Optional; name
net/minecraft/advancements/AdvancementHolder net/minecraft/advancements/AdvancementHolder
	a id
	b value
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lnet/minecraft/advancements/Advancement; value
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/advancements/AdvancementHolder; read
net/minecraft/advancements/AdvancementNode net/minecraft/advancements/AdvancementNode
	a holder
	b parent
	c children
	a ()Lnet/minecraft/advancements/Advancement; advancement
	a (Lnet/minecraft/advancements/AdvancementNode;)Lnet/minecraft/advancements/AdvancementNode; getRoot
	b ()Lnet/minecraft/advancements/AdvancementHolder; holder
	b (Lnet/minecraft/advancements/AdvancementNode;)V addChild
	c ()Lnet/minecraft/advancements/AdvancementNode; parent
	d ()Lnet/minecraft/advancements/AdvancementNode; root
	e ()Ljava/lang/Iterable; children
net/minecraft/advancements/AdvancementProgress net/minecraft/advancements/AdvancementProgress
	a CODEC
	b OBTAINED_TIME_FORMAT
	c OBTAINED_TIME_CODEC
	d CRITERIA_CODEC
	e criteria
	f requirements
	a ()Z isDone
	a (Ljava/lang/String;)Z grantProgress
	a (Lnet/minecraft/advancements/AdvancementProgress;)I compareTo
	a (Lnet/minecraft/advancements/AdvancementRequirements;)V update
	a (Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	b ()Z hasProgress
	b (Ljava/lang/String;)Z revokeProgress
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/advancements/AdvancementProgress; fromNetwork
	c ()F getPercent
	c (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; getCriterion
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getProgressText
	d (Ljava/lang/String;)Z isCriterionDone
	e ()Ljava/lang/Iterable; getRemainingCriteria
	f ()Ljava/lang/Iterable; getCompletedCriteria
	g ()Ljava/time/Instant; getFirstProgressDate
	h ()I countCompletedRequirements
net/minecraft/advancements/AdvancementRequirements net/minecraft/advancements/AdvancementRequirements
	a EMPTY
	b requirements
	a ()I size
	a (Lcom/google/gson/JsonArray;Ljava/util/Set;)Lnet/minecraft/advancements/AdvancementRequirements; fromJson
	a (Ljava/util/Collection;)Lnet/minecraft/advancements/AdvancementRequirements; allOf
	a (Ljava/util/function/Predicate;)Z test
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a ([Ljava/lang/String;Ljava/util/function/Predicate;)Z anyMatch
	b ()Lcom/google/gson/JsonArray; toJson
	b (Ljava/util/Collection;)Lnet/minecraft/advancements/AdvancementRequirements; anyOf
	b (Ljava/util/function/Predicate;)I count
	b (Lnet/minecraft/network/PacketDataSerializer;)[[Ljava/lang/String; read
	c ()Z isEmpty
	d ()Ljava/util/Set; names
	e ()[[Ljava/lang/String; requirements
net/minecraft/advancements/AdvancementRewards net/minecraft/advancements/AdvancementRewards
	a EMPTY
	b experience
	c loot
	d recipes
	e function
	a ()[Lnet/minecraft/resources/MinecraftKey; getRecipes
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/AdvancementRewards; deserialize
	a (Lnet/minecraft/server/level/EntityPlayer;)V grant
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/advancements/AdvancementTree net/minecraft/advancements/AdvancementTree
	a LOGGER
	b nodes
	c roots
	d tasks
	e listener
	a ()V clear
	a (Lak$a;)V setListener
	a (Ljava/util/Collection;)V addAll
	a (Ljava/util/Set;)V remove
	a (Lnet/minecraft/advancements/AdvancementHolder;)Lnet/minecraft/advancements/AdvancementNode; get
	a (Lnet/minecraft/advancements/AdvancementNode;)V remove
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/advancements/AdvancementNode; get
	b ()Ljava/lang/Iterable; roots
	b (Lnet/minecraft/advancements/AdvancementHolder;)Z tryInsert
	c ()Ljava/util/Collection; nodes
net/minecraft/advancements/Criterion net/minecraft/advancements/Criterion
	a trigger
	b triggerInstance
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/Criterion; criterionFromJson
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;Lnet/minecraft/advancements/CriterionTrigger;)Lnet/minecraft/advancements/Criterion; criterionFromJson
	b ()Lnet/minecraft/advancements/CriterionTrigger; trigger
	b (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ljava/util/Map; criteriaFromJson
	c ()Lnet/minecraft/advancements/CriterionInstance; triggerInstance
net/minecraft/advancements/CriterionProgress net/minecraft/advancements/CriterionProgress
	a obtained
	a ()Z isDone
	a (Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	b ()V grant
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/advancements/CriterionProgress; fromNetwork
	c ()V revoke
	d ()Ljava/time/Instant; getObtained
net/minecraft/advancements/TreeNodePosition net/minecraft/advancements/TreeNodePosition
	a node
	b parent
	c previousSibling
	d childIndex
	e children
	f ancestor
	g thread
	h x
	i y
	j mod
	k change
	l shift
	a ()V firstWalk
	a (F)V thirdWalk
	a (FIF)F secondWalk
	a (Lnet/minecraft/advancements/AdvancementNode;)V run
	a (Lnet/minecraft/advancements/AdvancementNode;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; addChild
	a (Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; apportion
	a (Lnet/minecraft/advancements/TreeNodePosition;F)V moveSubtree
	a (Lnet/minecraft/advancements/TreeNodePosition;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; getAncestor
	b ()V executeShifts
	c ()Lnet/minecraft/advancements/TreeNodePosition; previousOrThread
	d ()Lnet/minecraft/advancements/TreeNodePosition; nextOrThread
	e ()V finalizePosition
net/minecraft/advancements/critereon/ContextAwarePredicate net/minecraft/advancements/critereon/ContextAwarePredicate
	a conditions
	b compositePredicates
	a ()Lcom/google/gson/JsonElement; toJson
	a (Ljava/lang/String;Lnet/minecraft/advancements/critereon/LootDeserializationContext;Lcom/google/gson/JsonElement;Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet;)Ljava/util/Optional; fromElement
	a (Ljava/util/List;)Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
	a ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/advancements/critereon/ContextAwarePredicate; create
net/minecraft/advancements/critereon/EntitySubPredicate net/minecraft/advancements/critereon/EntitySubPredicate
	a CODEC
	a ()Lbr$a; type
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Z matches
	a (Lnet/minecraft/world/entity/animal/CatVariant;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; variant
	a (Lnet/minecraft/world/entity/animal/FrogVariant;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; variant
net/minecraft/advancements/critereon/EntityVariantPredicate net/minecraft/advancements/critereon/EntityVariantPredicate
	a getter
	b type
	a ()Lbr$a; type
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/EntityVariantPredicate; create
	a (Ljava/lang/Object;)Lbt$a; createPredicate
	a (Lnet/minecraft/core/IRegistry;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/EntityVariantPredicate; create
net/minecraft/advancements/critereon/LightningBoltPredicate net/minecraft/advancements/critereon/LightningBoltPredicate
	b CODEC
	c blocksSetOnFire
	d entityStruck
	a ()Lbr$a; type
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lnet/minecraft/advancements/critereon/LightningBoltPredicate; blockSetOnFire
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Z matches
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; blocksSetOnFire
	c ()Ljava/util/Optional; entityStruck
net/minecraft/advancements/critereon/SlimePredicate net/minecraft/advancements/critereon/SlimePredicate
	b CODEC
	c size
	a ()Lbr$a; type
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lnet/minecraft/advancements/critereon/SlimePredicate; sized
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Z matches
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; size
net/minecraft/advancements/critereon/TagPredicate net/minecraft/advancements/critereon/TagPredicate
	a tag
	b expected
	a ()Lnet/minecraft/tags/TagKey; tag
	a (Lnet/minecraft/core/Holder;)Z matches
	a (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/TagPredicate; is
	b ()Z expected
	b (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/TagPredicate; isNot
net/minecraft/client/ClientBrandRetriever net/minecraft/client/ClientBrandRetriever
	a VANILLA_NAME
net/minecraft/client/main/Main net/minecraft/client/main/Main
	a LOGGER
	a (Ljava/lang/Integer;)Ljava/util/OptionalInt; ofNullable
	a (Ljava/lang/String;)Ljava/lang/String; unescapeJavaArgument
	a (Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object; parseArgument
	b (Ljava/lang/String;)Ljava/util/Optional; emptyStringToEmptyOptional
	c (Ljava/lang/String;)Z stringHasValue
net/minecraft/commands/CommandSigningContext net/minecraft/commands/CommandSigningContext
	a ANONYMOUS
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; getArgument
net/minecraft/commands/FunctionInstantiationException net/minecraft/commands/FunctionInstantiationException
	a messageComponent
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; messageComponent
net/minecraft/commands/arguments/ArgumentSignatures net/minecraft/commands/arguments/ArgumentSignatures
	a EMPTY
	b entries
	c MAX_ARGUMENT_COUNT
	d MAX_ARGUMENT_NAME_LENGTH
	a ()Ljava/util/List; entries
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/MessageSignature; get
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/chat/SignableCommand;Ldy$b;)Lnet/minecraft/commands/arguments/ArgumentSignatures; signCommand
net/minecraft/commands/arguments/GameModeArgument net/minecraft/commands/arguments/GameModeArgument
	a EXAMPLES
	b VALUES
	c ERROR_INVALID
	a ()Lnet/minecraft/commands/arguments/GameModeArgument; gameMode
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/level/EnumGamemode; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/EnumGamemode; getGameMode
net/minecraft/commands/arguments/HeightmapTypeArgument net/minecraft/commands/arguments/HeightmapTypeArgument
	a LOWER_CASE_CODEC
	a ()Lnet/minecraft/commands/arguments/HeightmapTypeArgument; heightmap
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/HeightMap$Type; getHeightmap
	a (Ljava/lang/String;)Ljava/lang/String; convertId
	b ()[Lnet/minecraft/world/level/levelgen/HeightMap$Type; keptTypes
net/minecraft/commands/arguments/ResourceArgument net/minecraft/commands/arguments/ResourceArgument
	a ERROR_UNKNOWN_RESOURCE
	b ERROR_INVALID_RESOURCE_TYPE
	c EXAMPLES
	d ERROR_NOT_SUMMONABLE_ENTITY
	e registryKey
	f registryLookup
	a (Lcom/mojang/brigadier/StringReader;)Lhe$c; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getAttribute
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;)Lhe$c; getResource
	a (Lnet/minecraft/commands/CommandBuildContext;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceArgument; resource
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getConfiguredFeature
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getStructure
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getEntityType
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getSummonableEntityType
	f (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getMobEffect
	g (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getEnchantment
net/minecraft/commands/arguments/ResourceKeyArgument net/minecraft/commands/arguments/ResourceKeyArgument
	a EXAMPLES
	b ERROR_INVALID_FEATURE
	c ERROR_INVALID_STRUCTURE
	d ERROR_INVALID_TEMPLATE_POOL
	e registryKey
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceKey; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getConfiguredFeature
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lnet/minecraft/resources/ResourceKey; getRegistryKey
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/IRegistry; getRegistry
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceKeyArgument; key
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getStructure
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lhe$c; resolveKey
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getStructureTemplatePool
net/minecraft/commands/arguments/ResourceOrTagArgument net/minecraft/commands/arguments/ResourceOrTagArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	c ERROR_INVALID_TAG_TYPE
	d registryLookup
	e registryKey
	a (Lcom/mojang/brigadier/StringReader;)Let$c; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;)Let$c; getResourceOrTag
	a (Lnet/minecraft/commands/CommandBuildContext;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument; resourceOrTag
net/minecraft/commands/arguments/ResourceOrTagKeyArgument net/minecraft/commands/arguments/ResourceOrTagKeyArgument
	a EXAMPLES
	b registryKey
	a (Lcom/mojang/brigadier/StringReader;)Leu$c; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Leu$c; getResourceOrTagKey
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument; resourceOrTagKey
net/minecraft/commands/arguments/StringRepresentableArgument net/minecraft/commands/arguments/StringRepresentableArgument
	a ERROR_INVALID_VALUE
	b codec
	c values
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Enum; parse
	a (Ljava/lang/String;)Ljava/lang/String; convertId
net/minecraft/commands/arguments/selector/EntitySelector net/minecraft/commands/arguments/selector/EntitySelector
	a INFINITE
	b ORDER_ARBITRARY
	c ANY_TYPE
	d maxResults
	e includesEntities
	f worldLimited
	g predicate
	h range
	i position
	j aabb
	k order
	l currentEntity
	m playerName
	n entityUUID
	o type
	p usesSelector
	a ()I getMaxResults
	a (Ljava/util/List;)Lnet/minecraft/network/chat/IChatBaseComponent; joinNames
	a (Ljava/util/List;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;Ljava/util/function/Predicate;)V addEntities
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/entity/Entity; findSingleEntity
	a (Lnet/minecraft/world/phys/Vec3D;)Ljava/util/function/Predicate; getPredicate
	a (Lnet/minecraft/world/phys/Vec3D;Ljava/util/List;)Ljava/util/List; sortAndLimit
	b ()Z includesEntities
	b (Lnet/minecraft/commands/CommandListenerWrapper;)Ljava/util/List; findEntities
	c ()Z isSelfSelector
	c (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/server/level/EntityPlayer; findSinglePlayer
	d ()Z isWorldLimited
	d (Lnet/minecraft/commands/CommandListenerWrapper;)Ljava/util/List; findPlayers
	e ()Z usesSelector
	e (Lnet/minecraft/commands/CommandListenerWrapper;)V checkPermissions
	f ()I getResultLimit
	f (Lnet/minecraft/commands/CommandListenerWrapper;)Ljava/util/List; findEntitiesRaw
net/minecraft/commands/synchronization/ArgumentTypeInfos net/minecraft/commands/synchronization/ArgumentTypeInfos
	a BY_CLASS
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; byClass
	a (Ljava/lang/Class;)Z isClassRecognized
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; bootstrap
	a (Lnet/minecraft/core/IRegistry;Ljava/lang/String;Ljava/lang/Class;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; register
	b (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	b (Ljava/lang/Class;)Ljava/lang/Class; fixClassType
net/minecraft/commands/synchronization/ArgumentUtils net/minecraft/commands/synchronization/ArgumentUtils
	a LOGGER
	b NUMBER_FLAG_MIN
	c NUMBER_FLAG_MAX
	a (B)Z numberHasMin
	a (Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V serializeArgumentToJson
	a (Lcom/google/gson/JsonObject;Lgi$a;)V serializeCap
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;Lgi$a;)V serializeCap
	a (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject; serializeNodeToJson
	a (Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set; findUsedArgumentTypes
	a (Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V findUsedArgumentTypes
	a (ZZ)I createNumberFlags
	b (B)Z numberHasMax
net/minecraft/commands/synchronization/SingletonArgumentInfo net/minecraft/commands/synchronization/SingletonArgumentInfo
	a template
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgl$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgl$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Ljava/util/function/Function;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo; contextAware
	a (Ljava/util/function/Supplier;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo; contextFree
	a (Lnet/minecraft/network/PacketDataSerializer;)Lgl$a; deserializeFromNetwork
	b (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgl$a; unpack
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
net/minecraft/core/DefaultedMappedRegistry net/minecraft/core/DefaultedMappedRegistry
	b defaultKey
	c defaultValue
	a ()Lnet/minecraft/resources/MinecraftKey; getDefaultKey
	a (I)Ljava/lang/Object; byId
	a (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c; registerMapping
	a (Ljava/lang/Object;)I getId
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandom
	b (Ljava/lang/Object;)Lnet/minecraft/resources/MinecraftKey; getKey
	b (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; getOptional
net/minecraft/core/GlobalPos net/minecraft/core/GlobalPos
	a CODEC
	b dimension
	c pos
	a ()Lnet/minecraft/resources/ResourceKey; dimension
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/GlobalPos; of
	b ()Lnet/minecraft/core/BlockPosition; pos
net/minecraft/core/HolderSet$Named net/minecraft/core/HolderSet$Named
	a owner
	b key
	c contents
	a (Lnet/minecraft/core/Holder;)Z contains
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
	b (Ljava/util/List;)V bind
	c ()Lcom/mojang/datafixers/util/Either; unwrap
	d ()Ljava/util/Optional; unwrapKey
	e ()Ljava/util/List; contents
	f ()Lnet/minecraft/tags/TagKey; key
net/minecraft/core/LayeredRegistryAccess net/minecraft/core/LayeredRegistryAccess
	a keys
	b values
	c composite
	a ()Lnet/minecraft/core/IRegistryCustom$Dimension; compositeAccess
	a (II)Lnet/minecraft/core/IRegistryCustom$Dimension; getCompositeAccessForLayers
	a (Ljava/lang/Object;)Lnet/minecraft/core/IRegistryCustom$Dimension; getLayer
	a (Ljava/lang/Object;Ljava/util/List;)Lnet/minecraft/core/LayeredRegistryAccess; replaceFrom
	a (Ljava/lang/Object;[Lnet/minecraft/core/IRegistryCustom$Dimension;)Lnet/minecraft/core/LayeredRegistryAccess; replaceFrom
	a (Ljava/util/stream/Stream;)Ljava/util/Map; collectRegistries
	b (Ljava/lang/Object;)Lnet/minecraft/core/IRegistryCustom$Dimension; getAccessForLoading
	c (Ljava/lang/Object;)Lnet/minecraft/core/IRegistryCustom$Dimension; getAccessFrom
	d (Ljava/lang/Object;)I getLayerIndexOrThrow
net/minecraft/core/NonNullList net/minecraft/core/NonNullList
	a list
	b defaultValue
	a ()Lnet/minecraft/core/NonNullList; create
	a (I)Lnet/minecraft/core/NonNullList; createWithCapacity
	a (ILjava/lang/Object;)Lnet/minecraft/core/NonNullList; withSize
	a (Ljava/lang/Object;[Ljava/lang/Object;)Lnet/minecraft/core/NonNullList; of
net/minecraft/core/QuartPos net/minecraft/core/QuartPos
	a BITS
	b SIZE
	c MASK
	d SECTION_TO_QUARTS_BITS
	a (I)I fromBlock
	b (I)I quartLocal
	c (I)I toBlock
	d (I)I fromSection
	e (I)I toSection
net/minecraft/core/RegistrySetBuilder net/minecraft/core/RegistrySetBuilder
	a entries
	a (Lhg$c;)Lnet/minecraft/core/HolderGetter; wrapContextLookup
	a (Lnet/minecraft/core/IRegistryCustom;)Lhg$b; build
	a (Lnet/minecraft/core/IRegistryCustom;Lhg$b;)Lhg$b; buildPatch
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lht$e;)Lnet/minecraft/core/RegistrySetBuilder; add
	a (Lnet/minecraft/resources/ResourceKey;Lht$e;)Lnet/minecraft/core/RegistrySetBuilder; add
	b (Lnet/minecraft/core/IRegistryCustom;)Lht$a; createState
net/minecraft/core/RegistrySynchronization net/minecraft/core/RegistrySynchronization
	a NETWORK_CODEC
	b NETWORKABLE_REGISTRIES
	a ()Lcom/mojang/serialization/Codec; makeNetworkCodec
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)V put
	a (Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec; captureMap
	a (Lnet/minecraft/core/IRegistryCustom;)Ljava/util/stream/Stream; ownedNetworkableRegistries
	a (Lnet/minecraft/core/LayeredRegistryAccess;)Ljava/util/stream/Stream; networkedRegistries
	a (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/DataResult; getNetworkCodec
	b (Lnet/minecraft/core/LayeredRegistryAccess;)Ljava/util/stream/Stream; networkSafeRegistries
net/minecraft/core/UUIDUtil net/minecraft/core/UUIDUtil
	a CODEC
	b STRING_CODEC
	c AUTHLIB_CODEC
	d UUID_BYTES
	e UUID_PREFIX_OFFLINE_PLAYER
	a (JJ)[I leastMostToIntArray
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID; readUUID
	a (Ljava/lang/String;)Ljava/util/UUID; createOfflinePlayerUUID
	a (Ljava/util/UUID;)[I uuidToIntArray
	a ([I)Ljava/util/UUID; uuidFromIntArray
	b (Ljava/util/UUID;)[B uuidToByteArray
net/minecraft/core/cauldron/CauldronInteraction net/minecraft/core/cauldron/CauldronInteraction
	a EMPTY
	b WATER
	c LAVA
	d POWDER_SNOW
	e FILL_WATER
	f FILL_LAVA
	g FILL_POWDER_SNOW
	h SHULKER_BOX
	i BANNER
	j DYED_ITEM
	a ()Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap; newInteractionMap
	a (Ljava/util/Map;)V addDefaultInteractions
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/sounds/SoundEffect;)Lnet/minecraft/world/EnumInteractionResult; emptyBucket
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;Lnet/minecraft/sounds/SoundEffect;)Lnet/minecraft/world/EnumInteractionResult; fillBucket
	b ()V bootStrap
net/minecraft/core/particles/DustColorTransitionOptions net/minecraft/core/particles/DustColorTransitionOptions
	a SCULK_PARTICLE_COLOR
	b SCULK_TO_REDSTONE
	c CODEC
	d DESERIALIZER
	i toColor
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
	c ()Lorg/joml/Vector3f; getFromColor
	d ()Lorg/joml/Vector3f; getToColor
net/minecraft/core/particles/DustParticleOptionsBase net/minecraft/core/particles/DustParticleOptionsBase
	e MIN_SCALE
	f MAX_SCALE
	g color
	h scale
	a ()Ljava/lang/String; writeToString
	a (Lcom/mojang/brigadier/StringReader;)Lorg/joml/Vector3f; readVector3f
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lorg/joml/Vector3f; readVector3f
	e ()Lorg/joml/Vector3f; getColor
	f ()F getScale
net/minecraft/core/particles/SculkChargeParticleOptions net/minecraft/core/particles/SculkChargeParticleOptions
	a CODEC
	b DESERIALIZER
	c roll
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
	c ()F roll
net/minecraft/core/particles/ShriekParticleOption net/minecraft/core/particles/ShriekParticleOption
	a CODEC
	b DESERIALIZER
	c delay
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
	c ()I getDelay
net/minecraft/core/particles/VibrationParticleOption net/minecraft/core/particles/VibrationParticleOption
	a CODEC
	b DESERIALIZER
	c destination
	d arrivalInTicks
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
	c ()Lnet/minecraft/world/level/gameevent/PositionSource; getDestination
	d ()I getArrivalInTicks
net/minecraft/core/registries/BuiltInRegistries net/minecraft/core/registries/BuiltInRegistries
	A VILLAGER_PROFESSION
	B POINT_OF_INTEREST_TYPE
	C MEMORY_MODULE_TYPE
	D SENSOR_TYPE
	E SCHEDULE
	F ACTIVITY
	G LOOT_POOL_ENTRY_TYPE
	H LOOT_FUNCTION_TYPE
	I LOOT_CONDITION_TYPE
	J LOOT_NUMBER_PROVIDER_TYPE
	K LOOT_NBT_PROVIDER_TYPE
	L LOOT_SCORE_PROVIDER_TYPE
	M FLOAT_PROVIDER_TYPE
	N INT_PROVIDER_TYPE
	O HEIGHT_PROVIDER_TYPE
	P BLOCK_PREDICATE_TYPE
	Q CARVER
	R FEATURE
	S STRUCTURE_PLACEMENT
	T STRUCTURE_PIECE
	U STRUCTURE_TYPE
	V PLACEMENT_MODIFIER_TYPE
	W BLOCKSTATE_PROVIDER_TYPE
	X FOLIAGE_PLACER_TYPE
	Y TRUNK_PLACER_TYPE
	Z ROOT_PLACER_TYPE
	a ROOT_REGISTRY_NAME
	aa TREE_DECORATOR_TYPE
	ab FEATURE_SIZE_TYPE
	ac BIOME_SOURCE
	ad CHUNK_GENERATOR
	ae MATERIAL_CONDITION
	af MATERIAL_RULE
	ag DENSITY_FUNCTION_TYPE
	ah STRUCTURE_PROCESSOR
	ai STRUCTURE_POOL_ELEMENT
	aj CAT_VARIANT
	ak FROG_VARIANT
	al BANNER_PATTERN
	am INSTRUMENT
	an DECORATED_POT_PATTERNS
	ao CREATIVE_MODE_TAB
	ap REGISTRY
	aq LOGGER
	ar LOADERS
	as WRITABLE_REGISTRY
	b GAME_EVENT
	c SOUND_EVENT
	d FLUID
	e MOB_EFFECT
	f BLOCK
	g ENCHANTMENT
	h ENTITY_TYPE
	i ITEM
	j POTION
	k PARTICLE_TYPE
	l BLOCK_ENTITY_TYPE
	m PAINTING_VARIANT
	n CUSTOM_STAT
	o CHUNK_STATUS
	p RULE_TEST
	q RULE_BLOCK_ENTITY_MODIFIER
	r POS_RULE_TEST
	s MENU
	t RECIPE_TYPE
	u RECIPE_SERIALIZER
	v ATTRIBUTE
	w POSITION_SOURCE_TYPE
	x COMMAND_ARGUMENT_TYPE
	y STAT_TYPE
	z VILLAGER_TYPE
	a ()V bootStrap
	a (Lnet/minecraft/core/IRegistry;)V validate
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Ljb$a;)Lnet/minecraft/core/IRegistry; registerSimple
	a (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljb$a;)Lnet/minecraft/core/RegistryBlocks; registerDefaulted
	a (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Ljb$a;)Lnet/minecraft/core/RegistryBlocks; registerDefaulted
	a (Lnet/minecraft/resources/ResourceKey;Ljb$a;)Lnet/minecraft/core/IRegistry; registerSimple
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/IRegistryWritable;Ljb$a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/IRegistryWritable; internalRegister
	b ()V createContents
	b (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljb$a;)Lnet/minecraft/core/RegistryBlocks; registerDefaultedWithIntrusiveHolders
	b (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Ljb$a;)Lnet/minecraft/core/RegistryBlocks; registerDefaultedWithIntrusiveHolders
	b (Lnet/minecraft/resources/ResourceKey;Ljb$a;)Lnet/minecraft/core/IRegistry; registerSimpleWithIntrusiveHolders
	c ()V freeze
net/minecraft/core/registries/Registries net/minecraft/core/registries/Registries
	A HEIGHT_PROVIDER_TYPE
	B INSTRUMENT
	C INT_PROVIDER_TYPE
	D ITEM
	E LOOT_CONDITION_TYPE
	F LOOT_FUNCTION_TYPE
	G LOOT_NBT_PROVIDER_TYPE
	H LOOT_NUMBER_PROVIDER_TYPE
	I LOOT_POOL_ENTRY_TYPE
	J LOOT_SCORE_PROVIDER_TYPE
	K MATERIAL_CONDITION
	L MATERIAL_RULE
	M MEMORY_MODULE_TYPE
	N MENU
	O MOB_EFFECT
	P PAINTING_VARIANT
	Q PARTICLE_TYPE
	R PLACEMENT_MODIFIER_TYPE
	S POINT_OF_INTEREST_TYPE
	T POSITION_SOURCE_TYPE
	U POS_RULE_TEST
	V POTION
	W RECIPE_SERIALIZER
	X RECIPE_TYPE
	Y ROOT_PLACER_TYPE
	Z RULE_TEST
	a ACTIVITY
	aA PROCESSOR_LIST
	aB STRUCTURE_SET
	aC TEMPLATE_POOL
	aD TRIM_MATERIAL
	aE TRIM_PATTERN
	aF WORLD_PRESET
	aG MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST
	aH DIMENSION
	aI LEVEL_STEM
	aa RULE_BLOCK_ENTITY_MODIFIER
	ab SCHEDULE
	ac SENSOR_TYPE
	ad SOUND_EVENT
	ae STAT_TYPE
	af STRUCTURE_PIECE
	ag STRUCTURE_PLACEMENT
	ah STRUCTURE_POOL_ELEMENT
	ai STRUCTURE_PROCESSOR
	aj STRUCTURE_TYPE
	ak TREE_DECORATOR_TYPE
	al TRUNK_PLACER_TYPE
	am VILLAGER_PROFESSION
	an VILLAGER_TYPE
	ao DECORATED_POT_PATTERNS
	ap BIOME
	aq CHAT_TYPE
	ar CONFIGURED_CARVER
	as CONFIGURED_FEATURE
	at DENSITY_FUNCTION
	au DIMENSION_TYPE
	av FLAT_LEVEL_GENERATOR_PRESET
	aw NOISE_SETTINGS
	ax NOISE
	ay PLACED_FEATURE
	az STRUCTURE
	b ATTRIBUTE
	c BANNER_PATTERN
	d BIOME_SOURCE
	e BLOCK
	f BLOCK_ENTITY_TYPE
	g BLOCK_PREDICATE_TYPE
	h BLOCK_STATE_PROVIDER_TYPE
	i CARVER
	j CAT_VARIANT
	k CHUNK_GENERATOR
	l CHUNK_STATUS
	m COMMAND_ARGUMENT_TYPE
	n CREATIVE_MODE_TAB
	o CUSTOM_STAT
	p DAMAGE_TYPE
	q DENSITY_FUNCTION_TYPE
	r ENCHANTMENT
	s ENTITY_TYPE
	t FEATURE
	u FEATURE_SIZE_TYPE
	v FLOAT_PROVIDER_TYPE
	w FLUID
	x FOLIAGE_PLACER_TYPE
	y FROG_VARIANT
	z GAME_EVENT
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createRegistryKey
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; levelStemToLevel
	b (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; levelToLevelStem
net/minecraft/data/CachedOutput net/minecraft/data/CachedOutput
	a NO_CACHE
net/minecraft/data/PackOutput net/minecraft/data/PackOutput
	a outputFolder
	a ()Ljava/nio/file/Path; getOutputFolder
	a (Ljk$b;)Ljava/nio/file/Path; getOutputFolder
	a (Ljk$b;Ljava/lang/String;)Ljk$a; createPathProvider
net/minecraft/data/registries/VanillaRegistries net/minecraft/data/registries/VanillaRegistries
	a BUILDER
	a ()Lhg$b; createLookup
	a (Lhg$b;)V validateThatAllBiomeFeaturesHaveBiomeFilter
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderLookup;)V validateThatAllBiomeFeaturesHaveBiomeFilter
	a (Lnet/minecraft/world/level/levelgen/placement/PlacedFeature;)Z validatePlacedFeature
net/minecraft/data/worldgen/AncientCityStructurePieces net/minecraft/data/worldgen/AncientCityStructurePieces
	a START
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/NoiseData net/minecraft/data/worldgen/NoiseData
	a DEFAULT_SHIFT
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;ILnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V registerBiomeNoises
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;ID[D)V register
net/minecraft/data/worldgen/ProcessorLists net/minecraft/data/worldgen/ProcessorLists
	A ROOF
	B HIGH_WALL
	C HIGH_RAMPART
	D FOSSIL_ROT
	E FOSSIL_COAL
	F FOSSIL_DIAMONDS
	G ANCIENT_CITY_START_DEGRADATION
	H ANCIENT_CITY_GENERIC_DEGRADATION
	I ANCIENT_CITY_WALLS_DEGRADATION
	J TRAIL_RUINS_HOUSES_ARCHAEOLOGY
	K TRAIL_RUINS_ROADS_ARCHAEOLOGY
	L TRAIL_RUINS_TOWER_TOP_ARCHAEOLOGY
	M EMPTY
	a ZOMBIE_PLAINS
	b ZOMBIE_SAVANNA
	c ZOMBIE_SNOWY
	d ZOMBIE_TAIGA
	e ZOMBIE_DESERT
	f MOSSIFY_10_PERCENT
	g MOSSIFY_20_PERCENT
	h MOSSIFY_70_PERCENT
	i STREET_PLAINS
	j STREET_SAVANNA
	k STREET_SNOWY_OR_TAIGA
	l FARM_PLAINS
	m FARM_SAVANNA
	n FARM_SNOWY
	o FARM_TAIGA
	p FARM_DESERT
	q OUTPOST_ROT
	r BOTTOM_RAMPART
	s TREASURE_ROOMS
	t HOUSING
	u SIDE_WALL_DEGRADATION
	v STABLE_DEGRADATION
	w BASTION_GENERIC_DEGRADATION
	x RAMPART_DEGRADATION
	y ENTRANCE_REPLACEMENT
	z BRIDGE
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Ljava/util/List;)V register
	a (Lnet/minecraft/resources/MinecraftKey;I)Lnet/minecraft/world/level/levelgen/structure/templatesystem/CappedProcessor; trailsArchyLootProcessor
net/minecraft/data/worldgen/SurfaceRuleData net/minecraft/data/worldgen/SurfaceRuleData
	A SOUL_SAND
	B SOUL_SOIL
	C BASALT
	D BLACKSTONE
	E WARPED_WART_BLOCK
	F WARPED_NYLIUM
	G NETHER_WART_BLOCK
	H CRIMSON_NYLIUM
	I ENDSTONE
	a AIR
	b BEDROCK
	c WHITE_TERRACOTTA
	d ORANGE_TERRACOTTA
	e TERRACOTTA
	f RED_SAND
	g RED_SANDSTONE
	h STONE
	i DEEPSLATE
	j DIRT
	k PODZOL
	l COARSE_DIRT
	m MYCELIUM
	n GRASS_BLOCK
	o CALCITE
	p GRAVEL
	q SAND
	r SANDSTONE
	s PACKED_ICE
	t SNOW_BLOCK
	u MUD
	v POWDER_SNOW
	w ICE
	x WATER
	y LAVA
	z NETHERRACK
	a ()Ldlj$o; overworld
	a (D)Ldlj$f; surfaceNoiseAbove
	a (Lnet/minecraft/world/level/block/Block;)Ldlj$o; makeStateRule
	a (ZZZ)Ldlj$o; overworldLike
	b ()Ldlj$o; nether
	c ()Ldlj$o; end
	d ()Ldlj$o; air
net/minecraft/data/worldgen/TerrainProvider net/minecraft/data/worldgen/TerrainProvider
	a DEEP_OCEAN_CONTINENTALNESS
	b OCEAN_CONTINENTALNESS
	c PLAINS_CONTINENTALNESS
	d BEACH_CONTINENTALNESS
	e NO_TRANSFORM
	f AMPLIFIED_OFFSET
	g AMPLIFIED_FACTOR
	h AMPLIFIED_JAGGEDNESS
	a (F)F calculateMountainRidgeZeroContinentalnessPoint
	a (FFF)F mountainContinentalness
	a (FFFF)F calculateSlope
	a (Lnet/minecraft/util/ToFloatFunction;FFFFFFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; ridgeSpline
	a (Lnet/minecraft/util/ToFloatFunction;FLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; buildWeirdnessJaggednessSpline
	a (Lnet/minecraft/util/ToFloatFunction;FZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; buildMountainRidgeSplineWithPoints
	a (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFFFFFZZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; buildErosionOffsetSpline
	a (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; buildRidgeJaggednessSpline
	a (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFFFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; buildErosionJaggednessSpline
	a (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; getErosionFactor
	a (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; overworldFactor
	a (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; overworldOffset
	b (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; overworldJaggedness
net/minecraft/data/worldgen/TrailRuinsStructurePools net/minecraft/data/worldgen/TrailRuinsStructurePools
	a START
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/biome/OverworldBiomes net/minecraft/data/worldgen/biome/OverworldBiomes
	a NORMAL_WATER_COLOR
	b NORMAL_WATER_FOG_COLOR
	c OVERWORLD_FOG_COLOR
	d NORMAL_MUSIC
	a (F)I calculateSkyColor
	a (Lcqu$a;)V globalOverworldGeneration
	a (Lcrf$a;IILcqu$a;)Lnet/minecraft/world/level/biome/BiomeBase; baseOcean
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; sparseJungle
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;FZZZLcrf$a;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/BiomeBase; baseJungle
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; oldGrowthTaiga
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZ)Lnet/minecraft/world/level/biome/BiomeBase; savanna
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZZ)Lnet/minecraft/world/level/biome/BiomeBase; plains
	a (ZFFIILjava/lang/Integer;Ljava/lang/Integer;Lcrf$a;Lcqu$a;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/BiomeBase; biome
	a (ZFFLcrf$a;Lcqu$a;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/BiomeBase; biome
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; jungle
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; windsweptHills
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZ)Lnet/minecraft/world/level/biome/BiomeBase; beach
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZZ)Lnet/minecraft/world/level/biome/BiomeBase; forest
	c (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; bambooJungle
	c (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; badlands
	d (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; desert
	d (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; coldOcean
	e (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; mushroomFields
	e (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; ocean
	f (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; warmOcean
	f (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; lukeWarmOcean
	g (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; darkForest
	g (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; frozenOcean
	h (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; swamp
	h (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; taiga
	i (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; mangroveSwamp
	i (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; river
	j (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; theVoid
	j (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; meadowOrCherryGrove
	k (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; frozenPeaks
	l (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; jaggedPeaks
	m (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; stonyPeaks
	n (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; snowySlopes
	o (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; grove
	p (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; lushCaves
	q (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; dripstoneCaves
	r (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; deepDark
	s (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lcqu$a; baseOceanGeneration
net/minecraft/data/worldgen/features/AquaticFeatures net/minecraft/data/worldgen/features/AquaticFeatures
	a SEAGRASS_SHORT
	b SEAGRASS_SLIGHTLY_LESS_SHORT
	c SEAGRASS_MID
	d SEAGRASS_TALL
	e SEA_PICKLE
	f SEAGRASS_SIMPLE
	g KELP
	h WARM_OCEAN_VEGETATION
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/features/CaveFeatures net/minecraft/data/worldgen/features/CaveFeatures
	a MONSTER_ROOM
	b FOSSIL_COAL
	c FOSSIL_DIAMONDS
	d DRIPSTONE_CLUSTER
	e LARGE_DRIPSTONE
	f POINTED_DRIPSTONE
	g UNDERWATER_MAGMA
	h GLOW_LICHEN
	i ROOTED_AZALEA_TREE
	j CAVE_VINE
	k CAVE_VINE_IN_MOSS
	l MOSS_VEGETATION
	m MOSS_PATCH
	n MOSS_PATCH_BONEMEAL
	o DRIPLEAF
	p CLAY_WITH_DRIPLEAVES
	q CLAY_POOL_WITH_DRIPLEAVES
	r LUSH_CAVES_CLAY
	s MOSS_PATCH_CEILING
	t SPORE_BLOSSOM
	u AMETHYST_GEODE
	v SCULK_PATCH_DEEP_DARK
	w SCULK_PATCH_ANCIENT_CITY
	x SCULK_VEIN
	a ()Lnet/minecraft/core/Holder; makeSmallDripleaf
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/Holder; makeDripleaf
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/features/EndFeatures net/minecraft/data/worldgen/features/EndFeatures
	a END_SPIKE
	b END_GATEWAY_RETURN
	c END_GATEWAY_DELAYED
	d CHORUS_PLANT
	e END_ISLAND
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/features/MiscOverworldFeatures net/minecraft/data/worldgen/features/MiscOverworldFeatures
	a ICE_SPIKE
	b ICE_PATCH
	c FOREST_ROCK
	d ICEBERG_PACKED
	e ICEBERG_BLUE
	f BLUE_ICE
	g LAKE_LAVA
	h DISK_CLAY
	i DISK_GRAVEL
	j DISK_SAND
	k FREEZE_TOP_LAYER
	l DISK_GRASS
	m BONUS_CHEST
	n VOID_START_PLATFORM
	o DESERT_WELL
	p SPRING_LAVA_OVERWORLD
	q SPRING_LAVA_FROZEN
	r SPRING_WATER
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/features/NetherFeatures net/minecraft/data/worldgen/features/NetherFeatures
	a DELTA
	b SMALL_BASALT_COLUMNS
	c LARGE_BASALT_COLUMNS
	d BASALT_BLOBS
	e BLACKSTONE_BLOBS
	f GLOWSTONE_EXTRA
	g CRIMSON_FOREST_VEGETATION
	h CRIMSON_FOREST_VEGETATION_BONEMEAL
	i WARPED_FOREST_VEGETION
	j WARPED_FOREST_VEGETATION_BONEMEAL
	k NETHER_SPROUTS
	l NETHER_SPROUTS_BONEMEAL
	m TWISTING_VINES
	n TWISTING_VINES_BONEMEAL
	o WEEPING_VINES
	p PATCH_CRIMSON_ROOTS
	q BASALT_PILLAR
	r SPRING_LAVA_NETHER
	s SPRING_NETHER_CLOSED
	t SPRING_NETHER_OPEN
	u PATCH_FIRE
	v PATCH_SOUL_FIRE
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/features/OreFeatures net/minecraft/data/worldgen/features/OreFeatures
	A ORE_EMERALD
	B ORE_ANCIENT_DEBRIS_LARGE
	C ORE_ANCIENT_DEBRIS_SMALL
	D ORE_COPPPER_SMALL
	E ORE_COPPER_LARGE
	F ORE_CLAY
	a ORE_MAGMA
	b ORE_SOUL_SAND
	c ORE_NETHER_GOLD
	d ORE_QUARTZ
	e ORE_GRAVEL_NETHER
	f ORE_BLACKSTONE
	g ORE_DIRT
	h ORE_GRAVEL
	i ORE_GRANITE
	j ORE_DIORITE
	k ORE_ANDESITE
	l ORE_TUFF
	m ORE_COAL
	n ORE_COAL_BURIED
	o ORE_IRON
	p ORE_IRON_SMALL
	q ORE_GOLD
	r ORE_GOLD_BURIED
	s ORE_REDSTONE
	t ORE_DIAMOND_SMALL
	u ORE_DIAMOND_MEDIUM
	v ORE_DIAMOND_LARGE
	w ORE_DIAMOND_BURIED
	x ORE_LAPIS
	y ORE_LAPIS_BURIED
	z ORE_INFESTED
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/features/PileFeatures net/minecraft/data/worldgen/features/PileFeatures
	a PILE_HAY
	b PILE_MELON
	c PILE_SNOW
	d PILE_ICE
	e PILE_PUMPKIN
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/features/TreeFeatures net/minecraft/data/worldgen/features/TreeFeatures
	A OAK_BEES_0002
	B OAK_BEES_002
	C OAK_BEES_005
	D BIRCH_BEES_0002
	E BIRCH_BEES_002
	F BIRCH_BEES_005
	G FANCY_OAK_BEES_0002
	H FANCY_OAK_BEES_002
	I FANCY_OAK_BEES_005
	J FANCY_OAK_BEES
	K CHERRY_BEES_005
	a CRIMSON_FUNGUS
	b CRIMSON_FUNGUS_PLANTED
	c WARPED_FUNGUS
	d WARPED_FUNGUS_PLANTED
	e HUGE_BROWN_MUSHROOM
	f HUGE_RED_MUSHROOM
	g OAK
	h DARK_OAK
	i BIRCH
	j ACACIA
	k SPRUCE
	l PINE
	m JUNGLE_TREE
	n FANCY_OAK
	o JUNGLE_TREE_NO_VINE
	p MEGA_JUNGLE_TREE
	q MEGA_SPRUCE
	r MEGA_PINE
	s SUPER_BIRCH_BEES_0002
	t SUPER_BIRCH_BEES
	u SWAMP_OAK
	v JUNGLE_BUSH
	w AZALEA_TREE
	x MANGROVE
	y TALL_MANGROVE
	z CHERRY
	a ()Ldqw$a; createOak
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;IIII)Ldqw$a; createStraightBlobTree
	b ()Ldqw$a; createBirch
	c ()Ldqw$a; createSuperBirch
	d ()Ldqw$a; createJungleTree
	e ()Ldqw$a; createFancyOak
	f ()Ldqw$a; cherry
net/minecraft/data/worldgen/features/VegetationFeatures net/minecraft/data/worldgen/features/VegetationFeatures
	A DARK_FOREST_VEGETATION
	B TREES_FLOWER_FOREST
	C MEADOW_TREES
	D TREES_TAIGA
	E TREES_GROVE
	F TREES_SAVANNA
	G BIRCH_TALL
	H TREES_WINDSWEPT_HILLS
	I TREES_WATER
	J TREES_BIRCH_AND_OAK
	K TREES_PLAINS
	L TREES_SPARSE_JUNGLE
	M TREES_OLD_GROWTH_SPRUCE_TAIGA
	N TREES_OLD_GROWTH_PINE_TAIGA
	O TREES_JUNGLE
	P BAMBOO_VEGETATION
	Q MUSHROOM_ISLAND_VEGETATION
	R MANGROVE_VEGETATION
	a BAMBOO_NO_PODZOL
	b BAMBOO_SOME_PODZOL
	c VINES
	d PATCH_BROWN_MUSHROOM
	e PATCH_RED_MUSHROOM
	f PATCH_SUNFLOWER
	g PATCH_PUMPKIN
	h PATCH_BERRY_BUSH
	i PATCH_TAIGA_GRASS
	j PATCH_GRASS
	k PATCH_GRASS_JUNGLE
	l SINGLE_PIECE_OF_GRASS
	m PATCH_DEAD_BUSH
	n PATCH_MELON
	o PATCH_WATERLILY
	p PATCH_TALL_GRASS
	q PATCH_LARGE_FERN
	r PATCH_CACTUS
	s PATCH_SUGAR_CANE
	t FLOWER_DEFAULT
	u FLOWER_FLOWER_FOREST
	v FLOWER_SWAMP
	w FLOWER_PLAIN
	x FLOWER_MEADOW
	y FLOWER_CHERRY
	z FOREST_FLOWERS
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider;I)Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomPatchConfiguration; grassPatch
net/minecraft/data/worldgen/placement/AquaticPlacements net/minecraft/data/worldgen/placement/AquaticPlacements
	a SEAGRASS_WARM
	b SEAGRASS_NORMAL
	c SEAGRASS_COLD
	d SEAGRASS_RIVER
	e SEAGRASS_SWAMP
	f SEAGRASS_DEEP_WARM
	g SEAGRASS_DEEP
	h SEAGRASS_DEEP_COLD
	i SEAGRASS_SIMPLE
	j SEA_PICKLE
	k KELP_COLD
	l KELP_WARM
	m WARM_OCEAN_VEGETATION
	a (I)Ljava/util/List; seagrassPlacement
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/placement/CavePlacements net/minecraft/data/worldgen/placement/CavePlacements
	a MONSTER_ROOM
	b MONSTER_ROOM_DEEP
	c FOSSIL_UPPER
	d FOSSIL_LOWER
	e DRIPSTONE_CLUSTER
	f LARGE_DRIPSTONE
	g POINTED_DRIPSTONE
	h UNDERWATER_MAGMA
	i GLOW_LICHEN
	j ROOTED_AZALEA_TREE
	k CAVE_VINES
	l LUSH_CAVES_VEGETATION
	m LUSH_CAVES_CLAY
	n LUSH_CAVES_CEILING_VEGETATION
	o SPORE_BLOSSOM
	p CLASSIC_VINES
	q AMETHYST_GEODE
	r SCULK_PATCH_DEEP_DARK
	s SCULK_PATCH_ANCIENT_CITY
	t SCULK_VEIN
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/placement/EndPlacements net/minecraft/data/worldgen/placement/EndPlacements
	a END_SPIKE
	b END_GATEWAY_RETURN
	c CHORUS_PLANT
	d END_ISLAND_DECORATED
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/placement/MiscOverworldPlacements net/minecraft/data/worldgen/placement/MiscOverworldPlacements
	a ICE_SPIKE
	b ICE_PATCH
	c FOREST_ROCK
	d ICEBERG_PACKED
	e ICEBERG_BLUE
	f BLUE_ICE
	g LAKE_LAVA_UNDERGROUND
	h LAKE_LAVA_SURFACE
	i DISK_CLAY
	j DISK_GRAVEL
	k DISK_SAND
	l DISK_GRASS
	m FREEZE_TOP_LAYER
	n VOID_START_PLATFORM
	o DESERT_WELL
	p SPRING_LAVA
	q SPRING_LAVA_FROZEN
	r SPRING_WATER
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/placement/NetherPlacements net/minecraft/data/worldgen/placement/NetherPlacements
	a DELTA
	b SMALL_BASALT_COLUMNS
	c LARGE_BASALT_COLUMNS
	d BASALT_BLOBS
	e BLACKSTONE_BLOBS
	f GLOWSTONE_EXTRA
	g GLOWSTONE
	h CRIMSON_FOREST_VEGETATION
	i WARPED_FOREST_VEGETATION
	j NETHER_SPROUTS
	k TWISTING_VINES
	l WEEPING_VINES
	m PATCH_CRIMSON_ROOTS
	n BASALT_PILLAR
	o SPRING_DELTA
	p SPRING_CLOSED
	q SPRING_CLOSED_DOUBLE
	r SPRING_OPEN
	s PATCH_SOUL_FIRE
	t PATCH_FIRE
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/placement/OrePlacements net/minecraft/data/worldgen/placement/OrePlacements
	A ORE_REDSTONE_LOWER
	B ORE_DIAMOND
	C ORE_DIAMOND_MEDIUM
	D ORE_DIAMOND_LARGE
	E ORE_DIAMOND_BURIED
	F ORE_LAPIS
	G ORE_LAPIS_BURIED
	H ORE_INFESTED
	I ORE_EMERALD
	J ORE_ANCIENT_DEBRIS_LARGE
	K ORE_ANCIENT_DEBRIS_SMALL
	L ORE_COPPER
	M ORE_COPPER_LARGE
	N ORE_CLAY
	a ORE_MAGMA
	b ORE_SOUL_SAND
	c ORE_GOLD_DELTAS
	d ORE_QUARTZ_DELTAS
	e ORE_GOLD_NETHER
	f ORE_QUARTZ_NETHER
	g ORE_GRAVEL_NETHER
	h ORE_BLACKSTONE
	i ORE_DIRT
	j ORE_GRAVEL
	k ORE_GRANITE_UPPER
	l ORE_GRANITE_LOWER
	m ORE_DIORITE_UPPER
	n ORE_DIORITE_LOWER
	o ORE_ANDESITE_UPPER
	p ORE_ANDESITE_LOWER
	q ORE_TUFF
	r ORE_COAL_UPPER
	s ORE_COAL_LOWER
	t ORE_IRON_UPPER
	u ORE_IRON_MIDDLE
	v ORE_IRON_SMALL
	w ORE_GOLD_EXTRA
	x ORE_GOLD
	y ORE_GOLD_LOWER
	z ORE_REDSTONE
	a (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; commonOrePlacement
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; orePlacement
	b (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; rareOrePlacement
net/minecraft/data/worldgen/placement/PlacementUtils net/minecraft/data/worldgen/placement/PlacementUtils
	a HEIGHTMAP
	b HEIGHTMAP_TOP_SOLID
	c HEIGHTMAP_WORLD_SURFACE
	d HEIGHTMAP_OCEAN_FLOOR
	e FULL_RANGE
	f RANGE_10_10
	g RANGE_8_8
	h RANGE_4_4
	i RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT
	a ()Lnet/minecraft/world/level/levelgen/placement/PlacementFilter; isEmpty
	a (IFI)Lnet/minecraft/world/level/levelgen/placement/PlacementModifier; countExtra
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/core/Holder;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lnet/minecraft/core/Holder; inlinePlaced
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Holder;Ljava/util/List;)V register
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Holder;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)V register
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/placement/BlockPredicateFilter; filteredByBlockSurvival
	a (Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;)Lnet/minecraft/core/Holder; onlyWhenEmpty
	a (Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/core/Holder; filtered
	a (Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lnet/minecraft/core/Holder; inlinePlaced
net/minecraft/data/worldgen/placement/TreePlacements net/minecraft/data/worldgen/placement/TreePlacements
	A FANCY_OAK_BEES_002
	B FANCY_OAK_BEES
	C CHERRY_BEES_005
	a CRIMSON_FUNGI
	b WARPED_FUNGI
	c OAK_CHECKED
	d DARK_OAK_CHECKED
	e BIRCH_CHECKED
	f ACACIA_CHECKED
	g SPRUCE_CHECKED
	h MANGROVE_CHECKED
	i CHERRY_CHECKED
	j PINE_ON_SNOW
	k SPRUCE_ON_SNOW
	l PINE_CHECKED
	m JUNGLE_TREE_CHECKED
	n FANCY_OAK_CHECKED
	o MEGA_JUNGLE_TREE_CHECKED
	p MEGA_SPRUCE_CHECKED
	q MEGA_PINE_CHECKED
	r TALL_MANGROVE_CHECKED
	s JUNGLE_BUSH
	t SUPER_BIRCH_BEES_0002
	u SUPER_BIRCH_BEES
	v OAK_BEES_0002
	w OAK_BEES_002
	x BIRCH_BEES_0002_PLACED
	y BIRCH_BEES_002
	z FANCY_OAK_BEES_0002
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/placement/VegetationPlacements net/minecraft/data/worldgen/placement/VegetationPlacements
	A PATCH_CACTUS_DECORATED
	B PATCH_SUGAR_CANE_SWAMP
	C PATCH_SUGAR_CANE_DESERT
	D PATCH_SUGAR_CANE_BADLANDS
	E PATCH_SUGAR_CANE
	F BROWN_MUSHROOM_NETHER
	G RED_MUSHROOM_NETHER
	H BROWN_MUSHROOM_NORMAL
	I RED_MUSHROOM_NORMAL
	J BROWN_MUSHROOM_TAIGA
	K RED_MUSHROOM_TAIGA
	L BROWN_MUSHROOM_OLD_GROWTH
	M RED_MUSHROOM_OLD_GROWTH
	N BROWN_MUSHROOM_SWAMP
	O RED_MUSHROOM_SWAMP
	P FLOWER_WARM
	Q FLOWER_DEFAULT
	R FLOWER_FLOWER_FOREST
	S FLOWER_SWAMP
	T FLOWER_PLAINS
	U FLOWER_MEADOW
	V FLOWER_CHERRY
	W TREES_PLAINS
	X DARK_FOREST_VEGETATION
	Y FLOWER_FOREST_FLOWERS
	Z FOREST_FLOWERS
	a BAMBOO_LIGHT
	aa TREES_FLOWER_FOREST
	ab TREES_MEADOW
	ac TREES_CHERRY
	ad TREES_TAIGA
	ae TREES_GROVE
	af TREES_BADLANDS
	ag TREES_SNOWY
	ah TREES_SWAMP
	ai TREES_WINDSWEPT_SAVANNA
	aj TREES_SAVANNA
	ak BIRCH_TALL
	al TREES_BIRCH
	am TREES_WINDSWEPT_FOREST
	an TREES_WINDSWEPT_HILLS
	ao TREES_WATER
	ap TREES_BIRCH_AND_OAK
	aq TREES_SPARSE_JUNGLE
	ar TREES_OLD_GROWTH_SPRUCE_TAIGA
	as TREES_OLD_GROWTH_PINE_TAIGA
	at TREES_JUNGLE
	au BAMBOO_VEGETATION
	av MUSHROOM_ISLAND_VEGETATION
	aw TREES_MANGROVE
	ax TREE_THRESHOLD
	b BAMBOO
	c VINES
	d PATCH_SUNFLOWER
	e PATCH_PUMPKIN
	f PATCH_GRASS_PLAIN
	g PATCH_GRASS_FOREST
	h PATCH_GRASS_BADLANDS
	i PATCH_GRASS_SAVANNA
	j PATCH_GRASS_NORMAL
	k PATCH_GRASS_TAIGA_2
	l PATCH_GRASS_TAIGA
	m PATCH_GRASS_JUNGLE
	n GRASS_BONEMEAL
	o PATCH_DEAD_BUSH_2
	p PATCH_DEAD_BUSH
	q PATCH_DEAD_BUSH_BADLANDS
	r PATCH_MELON
	s PATCH_MELON_SPARSE
	t PATCH_BERRY_COMMON
	u PATCH_BERRY_RARE
	v PATCH_WATERLILY
	w PATCH_TALL_GRASS_2
	x PATCH_TALL_GRASS
	y PATCH_LARGE_FERN
	z PATCH_CACTUS_DESERT
	a (I)Ljava/util/List; worldSurfaceSquaredWithCount
	a (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; getMushroomPlacement
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; treePlacement
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; treePlacement
	b (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lcom/google/common/collect/ImmutableList$Builder; treePlacementBase
net/minecraft/data/worldgen/placement/VillagePlacements net/minecraft/data/worldgen/placement/VillagePlacements
	a PILE_HAY_VILLAGE
	b PILE_MELON_VILLAGE
	c PILE_SNOW_VILLAGE
	d PILE_ICE_VILLAGE
	e PILE_PUMPKIN_VILLAGE
	f OAK_VILLAGE
	g ACACIA_VILLAGE
	h SPRUCE_VILLAGE
	i PINE_VILLAGE
	j PATCH_CACTUS_VILLAGE
	k FLOWER_PLAIN_VILLAGE
	l PATCH_TAIGA_GRASS_VILLAGE
	m PATCH_BERRY_BUSH_VILLAGE
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/gametest/framework/GlobalTestReporter net/minecraft/gametest/framework/GlobalTestReporter
	a DELEGATE
	a ()V finish
	a (Lnet/minecraft/gametest/framework/GameTestHarnessITestReporter;)V replaceWith
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestFailed
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestSuccess
net/minecraft/gametest/framework/ReportGameListener net/minecraft/gametest/framework/ReportGameListener
	a attempts
	b successes
	c originalTestInfo
	d testTicker
	e structurePos
	a ()V rerunTest
	a (Ljava/lang/String;ZLjava/lang/String;)Lnet/minecraft/world/item/ItemStack; createBook
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testStructureLoaded
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Ljava/lang/String;)V reportPassed
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Ljava/lang/Throwable;)V reportFailure
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Lnet/minecraft/world/level/block/Block;)V spawnBeacon
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/EnumChatFormat;Ljava/lang/String;)V say
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Ljava/lang/String;)V showRedBox
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testPassed
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Ljava/lang/String;)V visualizePassedTest
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Ljava/lang/Throwable;)V visualizeFailedTest
	c (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testFailed
	c (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Ljava/lang/String;)V spawnLectern
net/minecraft/nbt/SnbtPrinterTagVisitor net/minecraft/nbt/SnbtPrinterTagVisitor
	a KEY_ORDER
	b NO_INDENTATION
	c SIMPLE_VALUE
	d NAME_VALUE_SEPARATOR
	e ELEMENT_SEPARATOR
	f LIST_OPEN
	g LIST_CLOSE
	h LIST_TYPE_SEPARATOR
	i ELEMENT_SPACING
	j STRUCT_OPEN
	k STRUCT_CLOSE
	l NEWLINE
	m indentation
	n depth
	o path
	p result
	a ()Ljava/lang/String; pathString
	a (Ljava/lang/String;)Ljava/lang/String; handleEscapePretty
	a (Lnet/minecraft/nbt/NBTBase;)Ljava/lang/String; visit
	a (Lnet/minecraft/nbt/NBTTagByte;)V visitByte
	a (Lnet/minecraft/nbt/NBTTagByteArray;)V visitByteArray
	a (Lnet/minecraft/nbt/NBTTagCompound;)V visitCompound
	a (Lnet/minecraft/nbt/NBTTagDouble;)V visitDouble
	a (Lnet/minecraft/nbt/NBTTagEnd;)V visitEnd
	a (Lnet/minecraft/nbt/NBTTagFloat;)V visitFloat
	a (Lnet/minecraft/nbt/NBTTagInt;)V visitInt
	a (Lnet/minecraft/nbt/NBTTagIntArray;)V visitIntArray
	a (Lnet/minecraft/nbt/NBTTagList;)V visitList
	a (Lnet/minecraft/nbt/NBTTagLong;)V visitLong
	a (Lnet/minecraft/nbt/NBTTagLongArray;)V visitLongArray
	a (Lnet/minecraft/nbt/NBTTagShort;)V visitShort
	a (Lnet/minecraft/nbt/NBTTagString;)V visitString
	b ()V popPath
	b (Ljava/lang/String;)V pushPath
	b (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/List; getKeys
net/minecraft/nbt/StringTagVisitor net/minecraft/nbt/StringTagVisitor
	a SIMPLE_VALUE
	b builder
	a (Ljava/lang/String;)Ljava/lang/String; handleEscape
	a (Lnet/minecraft/nbt/NBTBase;)Ljava/lang/String; visit
	a (Lnet/minecraft/nbt/NBTTagByte;)V visitByte
	a (Lnet/minecraft/nbt/NBTTagByteArray;)V visitByteArray
	a (Lnet/minecraft/nbt/NBTTagCompound;)V visitCompound
	a (Lnet/minecraft/nbt/NBTTagDouble;)V visitDouble
	a (Lnet/minecraft/nbt/NBTTagEnd;)V visitEnd
	a (Lnet/minecraft/nbt/NBTTagFloat;)V visitFloat
	a (Lnet/minecraft/nbt/NBTTagInt;)V visitInt
	a (Lnet/minecraft/nbt/NBTTagIntArray;)V visitIntArray
	a (Lnet/minecraft/nbt/NBTTagList;)V visitList
	a (Lnet/minecraft/nbt/NBTTagLong;)V visitLong
	a (Lnet/minecraft/nbt/NBTTagLongArray;)V visitLongArray
	a (Lnet/minecraft/nbt/NBTTagShort;)V visitShort
	a (Lnet/minecraft/nbt/NBTTagString;)V visitString
net/minecraft/nbt/TextComponentTagVisitor net/minecraft/nbt/TextComponentTagVisitor
	a LOGGER
	b INLINE_LIST_THRESHOLD
	c INLINE_ELEMENT_TYPES
	d SYNTAX_HIGHLIGHTING_KEY
	e SYNTAX_HIGHLIGHTING_STRING
	f SYNTAX_HIGHLIGHTING_NUMBER
	g SYNTAX_HIGHLIGHTING_NUMBER_TYPE
	h SIMPLE_VALUE
	i NAME_VALUE_SEPARATOR
	j ELEMENT_SEPARATOR
	k LIST_OPEN
	l LIST_CLOSE
	m LIST_TYPE_SEPARATOR
	n ELEMENT_SPACING
	o STRUCT_OPEN
	p STRUCT_CLOSE
	q NEWLINE
	r indentation
	s depth
	t result
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; handleEscapePretty
	a (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/network/chat/IChatBaseComponent; visit
	a (Lnet/minecraft/nbt/NBTTagByte;)V visitByte
	a (Lnet/minecraft/nbt/NBTTagByteArray;)V visitByteArray
	a (Lnet/minecraft/nbt/NBTTagCompound;)V visitCompound
	a (Lnet/minecraft/nbt/NBTTagDouble;)V visitDouble
	a (Lnet/minecraft/nbt/NBTTagEnd;)V visitEnd
	a (Lnet/minecraft/nbt/NBTTagFloat;)V visitFloat
	a (Lnet/minecraft/nbt/NBTTagInt;)V visitInt
	a (Lnet/minecraft/nbt/NBTTagIntArray;)V visitIntArray
	a (Lnet/minecraft/nbt/NBTTagList;)V visitList
	a (Lnet/minecraft/nbt/NBTTagLong;)V visitLong
	a (Lnet/minecraft/nbt/NBTTagLongArray;)V visitLongArray
	a (Lnet/minecraft/nbt/NBTTagShort;)V visitShort
	a (Lnet/minecraft/nbt/NBTTagString;)V visitString
net/minecraft/nbt/visitors/CollectFields net/minecraft/nbt/visitors/CollectFields
	a fieldsToGetCount
	b wantedTypes
	c stack
	a (Lnet/minecraft/nbt/NBTTagType;)Lrn$a; visitEntry
	a (Lnet/minecraft/nbt/NBTTagType;Ljava/lang/String;)Lrn$a; visitEntry
	b ()Lrn$b; visitContainerEnd
	b (Lnet/minecraft/nbt/NBTTagType;)Lrn$b; visitRootEntry
	c ()I getMissingFieldCount
net/minecraft/nbt/visitors/CollectToTag net/minecraft/nbt/visitors/CollectToTag
	a lastId
	b rootTag
	c consumerStack
	a ()Lrn$b; visitEnd
	a (B)Lrn$b; visit
	a (D)Lrn$b; visit
	a (F)Lrn$b; visit
	a (I)Lrn$b; visit
	a (J)Lrn$b; visit
	a (Ljava/lang/String;)Lrn$b; visit
	a (Lnet/minecraft/nbt/NBTBase;)V appendEntry
	a (Lnet/minecraft/nbt/NBTTagType;)Lrn$a; visitEntry
	a (Lnet/minecraft/nbt/NBTTagType;I)Lrn$b; visitList
	a (Lnet/minecraft/nbt/NBTTagType;Ljava/lang/String;)Lrn$a; visitEntry
	a (S)Lrn$b; visit
	a ([B)Lrn$b; visit
	a ([I)Lrn$b; visit
	a ([J)Lrn$b; visit
	b ()Lrn$b; visitContainerEnd
	b (Lnet/minecraft/nbt/NBTTagType;)Lrn$b; visitRootEntry
	b (Lnet/minecraft/nbt/NBTTagType;I)Lrn$a; visitElement
	c (Lnet/minecraft/nbt/NBTTagType;)V enterContainerIfNeeded
	d ()Lnet/minecraft/nbt/NBTBase; getResult
	e ()I depth
net/minecraft/nbt/visitors/FieldSelector net/minecraft/nbt/visitors/FieldSelector
	a path
	b type
	c name
	a ()Ljava/util/List; path
	b ()Lnet/minecraft/nbt/NBTTagType; type
	c ()Ljava/lang/String; name
net/minecraft/nbt/visitors/FieldTree net/minecraft/nbt/visitors/FieldTree
	a depth
	b selectedFields
	c fieldsToRecurse
	a ()Lnet/minecraft/nbt/visitors/FieldTree; createRoot
	a (Lnet/minecraft/nbt/NBTTagType;Ljava/lang/String;)Z isSelected
	a (Lnet/minecraft/nbt/visitors/FieldSelector;)V addEntry
	b ()I depth
	c ()Ljava/util/Map; selectedFields
	d ()Ljava/util/Map; fieldsToRecurse
net/minecraft/nbt/visitors/SkipFields net/minecraft/nbt/visitors/SkipFields
	a stack
	a (Lnet/minecraft/nbt/NBTTagType;Ljava/lang/String;)Lrn$a; visitEntry
	b ()Lrn$b; visitContainerEnd
net/minecraft/network/BandwidthDebugMonitor net/minecraft/network/BandwidthDebugMonitor
	a bytesReceived
	b bandwidthLogger
	a ()V tick
	a (I)V onReceive
net/minecraft/network/PacketBundlePacker net/minecraft/network/PacketBundlePacker
	a currentBundler
	b infoForCurrentBundler
	c bundlerAttributeKey
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;)V decode
net/minecraft/network/PacketBundleUnpacker net/minecraft/network/PacketBundleUnpacker
	a bundlerAttributeKey
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;)V encode
net/minecraft/network/PacketDecoder net/minecraft/network/PacketDecoder
	a LOGGER
	b codecKey
net/minecraft/network/PacketEncoder net/minecraft/network/PacketEncoder
	a LOGGER
	b codecKey
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/network/PacketFlowValidator net/minecraft/network/PacketFlowValidator
	a LOGGER
	b decoderKey
	c encoderKey
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;)V decode
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;Lio/netty/util/AttributeKey;)V validatePacket
	b (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;)V encode
net/minecraft/network/VarInt net/minecraft/network/VarInt
	a MAX_VARINT_SIZE
	b DATA_BITS_MASK
	c CONTINUATION_BIT_MASK
	d DATA_BITS_PER_BYTE
	a (B)Z hasContinuationBit
	a (I)I getByteSize
	a (Lio/netty/buffer/ByteBuf;)I read
	a (Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf; write
net/minecraft/network/VarLong net/minecraft/network/VarLong
	a MAX_VARLONG_SIZE
	b DATA_BITS_MASK
	c CONTINUATION_BIT_MASK
	d DATA_BITS_PER_BYTE
	a (B)Z hasContinuationBit
	a (J)I getByteSize
	a (Lio/netty/buffer/ByteBuf;)J read
	a (Lio/netty/buffer/ByteBuf;J)Lio/netty/buffer/ByteBuf; write
net/minecraft/network/chat/ChatDecorator net/minecraft/network/chat/ChatDecorator
	a PLAIN
net/minecraft/network/chat/CommonComponents net/minecraft/network/chat/CommonComponents
	a EMPTY
	b OPTION_ON
	c OPTION_OFF
	d GUI_DONE
	e GUI_CANCEL
	f GUI_YES
	g GUI_NO
	h GUI_OK
	i GUI_PROCEED
	j GUI_CONTINUE
	k GUI_BACK
	l GUI_TO_TITLE
	m GUI_ACKNOWLEDGE
	n GUI_OPEN_IN_BROWSER
	o GUI_COPY_LINK_TO_CLIPBOARD
	p GUI_DISCONNECT
	q CONNECT_FAILED
	r NEW_LINE
	s NARRATION_SEPARATOR
	t ELLIPSIS
	u SPACE
	a ()Lnet/minecraft/network/chat/IChatMutableComponent; space
	a (J)Lnet/minecraft/network/chat/IChatMutableComponent; days
	a (Ljava/util/Collection;)Lnet/minecraft/network/chat/IChatBaseComponent; joinLines
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; optionNameValue
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)Lnet/minecraft/network/chat/IChatMutableComponent; optionStatus
	a (Z)Lnet/minecraft/network/chat/IChatBaseComponent; optionStatus
	a ([Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; joinForNarration
	b (J)Lnet/minecraft/network/chat/IChatMutableComponent; hours
	b ([Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; joinLines
	c (J)Lnet/minecraft/network/chat/IChatMutableComponent; minutes
net/minecraft/network/chat/ComponentContents net/minecraft/network/chat/ComponentContents
	a EMPTY
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/IChatMutableComponent; resolve
	a (Ltp$a;)Ljava/util/Optional; visit
	a (Ltp$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
net/minecraft/network/chat/FilterMask net/minecraft/network/chat/FilterMask
	a CODEC
	b FULLY_FILTERED
	c PASS_THROUGH
	d FILTERED_STYLE
	e PASS_THROUGH_CODEC
	f FULLY_FILTERED_CODEC
	g PARTIALLY_FILTERED_CODEC
	h HASH
	i mask
	j type
	a ()Z isEmpty
	a (I)V setFiltered
	a (Ljava/lang/String;)Ljava/lang/String; apply
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/chat/FilterMask; read
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/network/chat/FilterMask;)V write
	b ()Z isFullyFiltered
	b (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; applyWithFormatting
	c ()Lto$a; type
	d ()Ljava/util/BitSet; mask
net/minecraft/network/chat/LastSeenMessages net/minecraft/network/chat/LastSeenMessages
	a CODEC
	b EMPTY
	c LAST_SEEN_MESSAGES_MAX_LENGTH
	d entries
	a ()Ljava/util/List; entries
	a (Lasg$a;)V updateSignature
	a (Lnet/minecraft/network/chat/MessageSignatureCache;)Ltr$a; pack
net/minecraft/network/chat/LastSeenMessagesValidator net/minecraft/network/chat/LastSeenMessagesValidator
	a lastSeenCount
	b trackedMessages
	c lastPendingMessage
	a ()I trackedMessagesCount
	a (I)Z applyOffset
	a (Lnet/minecraft/network/chat/MessageSignature;)V addPending
	a (Ltr$b;)Ljava/util/Optional; applyUpdate
net/minecraft/network/chat/LastSeenTrackedEntry net/minecraft/network/chat/LastSeenTrackedEntry
	a signature
	b pending
	a ()Lnet/minecraft/network/chat/LastSeenTrackedEntry; acknowledge
	b ()Lnet/minecraft/network/chat/MessageSignature; signature
	c ()Z pending
net/minecraft/network/chat/MessageSignature net/minecraft/network/chat/MessageSignature
	a CODEC
	b BYTES
	c bytes
	a ()Ljava/nio/ByteBuffer; asByteBuffer
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/chat/MessageSignature; read
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/network/chat/MessageSignature;)V write
	a (Lnet/minecraft/network/chat/MessageSignatureCache;)Ltw$a; pack
	a (Lnet/minecraft/util/SignatureValidator;Lnet/minecraft/util/SignatureUpdater;)Z verify
	b ()[B bytes
net/minecraft/network/chat/MessageSignatureCache net/minecraft/network/chat/MessageSignatureCache
	a NOT_FOUND
	b DEFAULT_CAPACITY
	c entries
	a ()Lnet/minecraft/network/chat/MessageSignatureCache; createDefault
	a (I)Lnet/minecraft/network/chat/MessageSignature; unpack
	a (Ljava/util/ArrayDeque;)V push
	a (Ljava/util/List;)V push
	a (Lnet/minecraft/network/chat/MessageSignature;)I pack
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)V push
net/minecraft/network/chat/PlayerChatMessage net/minecraft/network/chat/PlayerChatMessage
	a MAP_CODEC
	b MESSAGE_EXPIRES_AFTER_SERVER
	c MESSAGE_EXPIRES_AFTER_CLIENT
	d link
	e signature
	f signedBody
	g unsignedContent
	h filterMask
	i SYSTEM_SENDER
	a ()Lnet/minecraft/network/chat/PlayerChatMessage; removeUnsignedContent
	a (Lasg$a;Lnet/minecraft/network/chat/SignedMessageLink;Lnet/minecraft/network/chat/SignedMessageBody;)V updateSignature
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; system
	a (Ljava/time/Instant;)Z hasExpiredServer
	a (Ljava/util/UUID;)Z hasSignatureFrom
	a (Ljava/util/UUID;Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; unsigned
	a (Lnet/minecraft/network/chat/FilterMask;)Lnet/minecraft/network/chat/PlayerChatMessage; filter
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/PlayerChatMessage; withUnsignedContent
	a (Lnet/minecraft/util/SignatureValidator;)Z verify
	a (Z)Lnet/minecraft/network/chat/PlayerChatMessage; filter
	b ()Ljava/lang/String; signedContent
	b (Ljava/time/Instant;)Z hasExpiredClient
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; decoratedContent
	d ()Ljava/time/Instant; timeStamp
	e ()J salt
	f ()Ljava/util/UUID; sender
	g ()Z isSystem
	h ()Z hasSignature
	i ()Z isFullyFiltered
	j ()Lnet/minecraft/network/chat/SignedMessageLink; link
	k ()Lnet/minecraft/network/chat/MessageSignature; signature
	l ()Lnet/minecraft/network/chat/SignedMessageBody; signedBody
	m ()Lnet/minecraft/network/chat/IChatBaseComponent; unsignedContent
	n ()Lnet/minecraft/network/chat/FilterMask; filterMask
net/minecraft/network/chat/RemoteChatSession net/minecraft/network/chat/RemoteChatSession
	a sessionId
	b profilePublicKey
	a ()Lub$a; asData
	a (Ljava/time/Duration;)Lnet/minecraft/network/chat/SignedMessageValidator; createMessageValidator
	a (Ljava/util/UUID;)Lue$b; createMessageDecoder
	b ()Z hasExpired
	c ()Ljava/util/UUID; sessionId
	d ()Lnet/minecraft/world/entity/player/ProfilePublicKey; profilePublicKey
net/minecraft/network/chat/SignableCommand net/minecraft/network/chat/SignableCommand
	a arguments
	a ()Ljava/util/List; arguments
	a (Lcom/mojang/brigadier/ParseResults;)Lnet/minecraft/network/chat/SignableCommand; of
	a (Ljava/lang/String;Lcom/mojang/brigadier/context/CommandContextBuilder;)Ljava/util/List; collectArguments
net/minecraft/network/chat/SignedMessageBody net/minecraft/network/chat/SignedMessageBody
	a MAP_CODEC
	b content
	c timeStamp
	d salt
	e lastSeen
	a ()Ljava/lang/String; content
	a (Lasg$a;)V updateSignature
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/SignedMessageBody; unsigned
	a (Lnet/minecraft/network/chat/MessageSignatureCache;)Lud$a; pack
	b ()Ljava/time/Instant; timeStamp
	c ()J salt
	d ()Lnet/minecraft/network/chat/LastSeenMessages; lastSeen
net/minecraft/network/chat/SignedMessageChain net/minecraft/network/chat/SignedMessageChain
	a LOGGER
	b nextLink
	a ()Lnet/minecraft/network/chat/SignedMessageLink; advanceLink
	a (Lnet/minecraft/util/Signer;)Lue$c; encoder
	a (Lnet/minecraft/world/entity/player/ProfilePublicKey;)Lue$b; decoder
net/minecraft/network/chat/SignedMessageLink net/minecraft/network/chat/SignedMessageLink
	a CODEC
	b index
	c sender
	d sessionId
	a ()Lnet/minecraft/network/chat/SignedMessageLink; advance
	a (Lasg$a;)V updateSignature
	a (Ljava/util/UUID;)Lnet/minecraft/network/chat/SignedMessageLink; unsigned
	a (Ljava/util/UUID;Ljava/util/UUID;)Lnet/minecraft/network/chat/SignedMessageLink; root
	a (Lnet/minecraft/network/chat/SignedMessageLink;)Z isDescendantOf
	b ()I index
	c ()Ljava/util/UUID; sender
	d ()Ljava/util/UUID; sessionId
net/minecraft/network/chat/SignedMessageValidator net/minecraft/network/chat/SignedMessageValidator
	a LOGGER
	b ACCEPT_UNSIGNED
	c REJECT_ALL
net/minecraft/network/chat/ThrowingComponent net/minecraft/network/chat/ThrowingComponent
	a component
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getComponent
net/minecraft/network/chat/contents/BlockDataSource net/minecraft/network/chat/contents/BlockDataSource
	a posPattern
	b compiledPos
	a ()Ljava/lang/String; posPattern
	a (Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; compilePos
	b ()Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; compiledPos
net/minecraft/network/chat/contents/EntityDataSource net/minecraft/network/chat/contents/EntityDataSource
	a selectorPattern
	b compiledSelector
	a ()Ljava/lang/String; selectorPattern
	a (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; compileSelector
	b ()Lnet/minecraft/commands/arguments/selector/EntitySelector; compiledSelector
net/minecraft/network/chat/contents/KeybindContents net/minecraft/network/chat/contents/KeybindContents
	b name
	c nameResolver
	a ()Ljava/lang/String; getName
	a (Ltp$a;)Ljava/util/Optional; visit
	a (Ltp$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getNestedComponent
net/minecraft/network/chat/contents/KeybindResolver net/minecraft/network/chat/contents/KeybindResolver
	a keyResolver
	a (Ljava/util/function/Function;)V setKeyResolver
net/minecraft/network/chat/contents/LiteralContents net/minecraft/network/chat/contents/LiteralContents
	b text
	a ()Ljava/lang/String; text
	a (Ltp$a;)Ljava/util/Optional; visit
	a (Ltp$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
net/minecraft/network/chat/contents/NbtContents net/minecraft/network/chat/contents/NbtContents
	b compiledNbtPath
	c LOGGER
	d interpreting
	e separator
	f nbtPathPattern
	g dataSource
	a ()Ljava/lang/String; getNbtPath
	a (Ljava/lang/String;)Lej$g; compileNbtPath
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/IChatMutableComponent; resolve
	b ()Z isInterpreting
	c ()Ljava/util/Optional; getSeparator
	d ()Lnet/minecraft/network/chat/contents/DataSource; getDataSource
net/minecraft/network/chat/contents/ScoreContents net/minecraft/network/chat/contents/ScoreContents
	b SCORER_PLACEHOLDER
	c name
	d selector
	e objective
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; parseSelector
	a (Ljava/lang/String;Lnet/minecraft/commands/CommandListenerWrapper;)Ljava/lang/String; getScore
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Ljava/lang/String; findTargetName
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/IChatMutableComponent; resolve
	b ()Lnet/minecraft/commands/arguments/selector/EntitySelector; getSelector
	c ()Ljava/lang/String; getObjective
net/minecraft/network/chat/contents/SelectorContents net/minecraft/network/chat/contents/SelectorContents
	b separator
	c LOGGER
	d pattern
	e selector
	a ()Ljava/lang/String; getPattern
	a (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; parseSelector
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/IChatMutableComponent; resolve
	a (Ltp$a;)Ljava/util/Optional; visit
	a (Ltp$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
	b ()Lnet/minecraft/commands/arguments/selector/EntitySelector; getSelector
	c ()Ljava/util/Optional; getSeparator
net/minecraft/network/chat/contents/StorageDataSource net/minecraft/network/chat/contents/StorageDataSource
	a id
	a ()Lnet/minecraft/resources/MinecraftKey; id
net/minecraft/network/chat/contents/TranslatableContents net/minecraft/network/chat/contents/TranslatableContents
	b NO_ARGS
	c TEXT_PERCENT
	d TEXT_NULL
	e key
	f fallback
	g args
	h decomposedWith
	i decomposedParts
	j FORMAT_PATTERN
	a ()Ljava/lang/String; getKey
	a (I)Lnet/minecraft/network/chat/IChatFormatted; getArgument
	a (Ljava/lang/String;Ljava/util/function/Consumer;)V decomposeTemplate
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/IChatMutableComponent; resolve
	a (Ltp$a;)Ljava/util/Optional; visit
	a (Ltp$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
	b ()Ljava/lang/String; getFallback
	c ()[Ljava/lang/Object; getArgs
	d ()V decompose
net/minecraft/network/protocol/BundlePacket net/minecraft/network/protocol/BundlePacket
	a packets
	a ()Ljava/lang/Iterable; subPackets
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
net/minecraft/network/protocol/BundlerInfo net/minecraft/network/protocol/BundlerInfo
	a BUNDLE_SIZE_LIMIT
	b EMPTY
	a (Ljava/lang/Class;Ljava/util/function/Function;Lnet/minecraft/network/protocol/BundleDelimiterPacket;)Lnet/minecraft/network/protocol/BundlerInfo; createForPacket
	a (Lnet/minecraft/network/protocol/Packet;)Lvc$a; startPacketBundling
	a (Lnet/minecraft/network/protocol/Packet;Ljava/util/function/Consumer;)V unbundlePacket
net/minecraft/network/protocol/common/ClientboundCustomPayloadPacket net/minecraft/network/protocol/common/ClientboundCustomPayloadPacket
	a payload
	b MAX_PAYLOAD_SIZE
	c KNOWN_TYPES
	a ()Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload; payload
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/common/ClientCommonPacketListener;)V handle
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload; readPayload
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/common/custom/DiscardedPayload; readUnknownPayload
net/minecraft/network/protocol/common/ClientboundDisconnectPacket net/minecraft/network/protocol/common/ClientboundDisconnectPacket
	a reason
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getReason
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/common/ClientCommonPacketListener;)V handle
net/minecraft/network/protocol/common/ClientboundKeepAlivePacket net/minecraft/network/protocol/common/ClientboundKeepAlivePacket
	a id
	a ()J getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/common/ClientCommonPacketListener;)V handle
net/minecraft/network/protocol/common/ClientboundPingPacket net/minecraft/network/protocol/common/ClientboundPingPacket
	a id
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/common/ClientCommonPacketListener;)V handle
net/minecraft/network/protocol/common/ClientboundResourcePackPacket net/minecraft/network/protocol/common/ClientboundResourcePackPacket
	a MAX_HASH_LENGTH
	b url
	c hash
	d required
	e prompt
	a ()Ljava/lang/String; getUrl
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/common/ClientCommonPacketListener;)V handle
	d ()Ljava/lang/String; getHash
	e ()Z isRequired
	f ()Lnet/minecraft/network/chat/IChatBaseComponent; getPrompt
net/minecraft/network/protocol/common/ClientboundUpdateTagsPacket net/minecraft/network/protocol/common/ClientboundUpdateTagsPacket
	a tags
	a ()Ljava/util/Map; getTags
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/common/ClientCommonPacketListener;)V handle
net/minecraft/network/protocol/common/ServerboundClientInformationPacket net/minecraft/network/protocol/common/ServerboundClientInformationPacket
	a information
	a ()Lnet/minecraft/server/level/ClientInformation; information
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/common/ServerCommonPacketListener;)V handle
net/minecraft/network/protocol/common/ServerboundCustomPayloadPacket net/minecraft/network/protocol/common/ServerboundCustomPayloadPacket
	a payload
	b MAX_PAYLOAD_SIZE
	c KNOWN_TYPES
	a ()Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload; payload
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/common/ServerCommonPacketListener;)V handle
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload; readPayload
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/common/custom/DiscardedPayload; readUnknownPayload
net/minecraft/network/protocol/common/ServerboundKeepAlivePacket net/minecraft/network/protocol/common/ServerboundKeepAlivePacket
	a id
	a ()J getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/common/ServerCommonPacketListener;)V handle
net/minecraft/network/protocol/common/ServerboundPongPacket net/minecraft/network/protocol/common/ServerboundPongPacket
	a id
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/common/ServerCommonPacketListener;)V handle
net/minecraft/network/protocol/common/ServerboundResourcePackPacket net/minecraft/network/protocol/common/ServerboundResourcePackPacket
	a action
	a ()Lvs$a; getAction
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/common/ServerCommonPacketListener;)V handle
net/minecraft/network/protocol/common/custom/BeeDebugPayload net/minecraft/network/protocol/common/custom/BeeDebugPayload
	a ID
	b beeInfo
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lvt$a; beeInfo
net/minecraft/network/protocol/common/custom/BrainDebugPayload net/minecraft/network/protocol/common/custom/BrainDebugPayload
	a ID
	b brainDump
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lvu$a; brainDump
net/minecraft/network/protocol/common/custom/BrandPayload net/minecraft/network/protocol/common/custom/BrandPayload
	a ID
	b brand
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Ljava/lang/String; brand
net/minecraft/network/protocol/common/custom/DiscardedPayload net/minecraft/network/protocol/common/custom/DiscardedPayload
	a id
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
net/minecraft/network/protocol/common/custom/GameEventDebugPayload net/minecraft/network/protocol/common/custom/GameEventDebugPayload
	a ID
	b type
	c pos
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lnet/minecraft/resources/ResourceKey; type
	c ()Lnet/minecraft/world/phys/Vec3D; pos
net/minecraft/network/protocol/common/custom/GameEventListenerDebugPayload net/minecraft/network/protocol/common/custom/GameEventListenerDebugPayload
	a ID
	b listenerPos
	c listenerRange
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lnet/minecraft/world/level/gameevent/PositionSource; listenerPos
	c ()I listenerRange
net/minecraft/network/protocol/common/custom/GameTestAddMarkerDebugPayload net/minecraft/network/protocol/common/custom/GameTestAddMarkerDebugPayload
	a ID
	b pos
	c color
	d text
	e durationMs
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lnet/minecraft/core/BlockPosition; pos
	c ()I color
	d ()Ljava/lang/String; text
	e ()I durationMs
net/minecraft/network/protocol/common/custom/GameTestClearMarkersDebugPayload net/minecraft/network/protocol/common/custom/GameTestClearMarkersDebugPayload
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
net/minecraft/network/protocol/common/custom/GoalDebugPayload net/minecraft/network/protocol/common/custom/GoalDebugPayload
	a ID
	b entityId
	c pos
	d goals
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()I entityId
	c ()Lnet/minecraft/core/BlockPosition; pos
	d ()Ljava/util/List; goals
net/minecraft/network/protocol/common/custom/HiveDebugPayload net/minecraft/network/protocol/common/custom/HiveDebugPayload
	a ID
	b hiveInfo
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lwd$a; hiveInfo
net/minecraft/network/protocol/common/custom/NeighborUpdatesDebugPayload net/minecraft/network/protocol/common/custom/NeighborUpdatesDebugPayload
	a ID
	b time
	c pos
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()J time
	c ()Lnet/minecraft/core/BlockPosition; pos
net/minecraft/network/protocol/common/custom/PathfindingDebugPayload net/minecraft/network/protocol/common/custom/PathfindingDebugPayload
	a ID
	b entityId
	c path
	d maxNodeDistance
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()I entityId
	c ()Lnet/minecraft/world/level/pathfinder/PathEntity; path
	d ()F maxNodeDistance
net/minecraft/network/protocol/common/custom/PoiAddedDebugPayload net/minecraft/network/protocol/common/custom/PoiAddedDebugPayload
	a ID
	b pos
	c type
	d freeTicketCount
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lnet/minecraft/core/BlockPosition; pos
	c ()Ljava/lang/String; type
	d ()I freeTicketCount
net/minecraft/network/protocol/common/custom/PoiRemovedDebugPayload net/minecraft/network/protocol/common/custom/PoiRemovedDebugPayload
	a ID
	b pos
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lnet/minecraft/core/BlockPosition; pos
net/minecraft/network/protocol/common/custom/PoiTicketCountDebugPayload net/minecraft/network/protocol/common/custom/PoiTicketCountDebugPayload
	a ID
	b pos
	c freeTicketCount
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lnet/minecraft/core/BlockPosition; pos
	c ()I freeTicketCount
net/minecraft/network/protocol/common/custom/RaidsDebugPayload net/minecraft/network/protocol/common/custom/RaidsDebugPayload
	a ID
	b raidCenters
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Ljava/util/List; raidCenters
net/minecraft/network/protocol/common/custom/StructuresDebugPayload net/minecraft/network/protocol/common/custom/StructuresDebugPayload
	a ID
	b dimension
	c mainBB
	d pieces
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V writeBoundingBox
	b ()Lnet/minecraft/resources/ResourceKey; dimension
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; readBoundingBox
	c ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; mainBB
	d ()Ljava/util/List; pieces
net/minecraft/network/protocol/common/custom/VillageSectionsDebugPayload net/minecraft/network/protocol/common/custom/VillageSectionsDebugPayload
	a ID
	b villageChunks
	c notVillageChunks
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Ljava/util/Set; villageChunks
	c ()Ljava/util/Set; notVillageChunks
net/minecraft/network/protocol/common/custom/WorldGenAttemptDebugPayload net/minecraft/network/protocol/common/custom/WorldGenAttemptDebugPayload
	a ID
	b pos
	c scale
	d red
	e green
	f blue
	g alpha
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lnet/minecraft/core/BlockPosition; pos
	c ()F scale
	d ()F red
	e ()F green
	f ()F blue
	g ()F alpha
net/minecraft/network/protocol/configuration/ClientboundRegistryDataPacket net/minecraft/network/protocol/configuration/ClientboundRegistryDataPacket
	a registryHolder
	b BUILTIN_CONTEXT_OPS
	a ()Lnet/minecraft/core/IRegistryCustom$Dimension; registryHolder
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/configuration/ClientConfigurationPacketListener;)V handle
net/minecraft/network/protocol/configuration/ClientboundUpdateEnabledFeaturesPacket net/minecraft/network/protocol/configuration/ClientboundUpdateEnabledFeaturesPacket
	a features
	a ()Ljava/util/Set; features
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/configuration/ClientConfigurationPacketListener;)V handle
net/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket net/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket
	a sequence
	a ()I sequence
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundChunkBatchFinishedPacket net/minecraft/network/protocol/game/ClientboundChunkBatchFinishedPacket
	a batchSize
	a ()I batchSize
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket
	a chunkBiomeData
	b TWO_MEGABYTES
	a ()Ljava/util/List; chunkBiomeData
	a (Ljava/util/List;)Lnet/minecraft/network/protocol/game/ClientboundChunksBiomesPacket; forChunks
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundClearTitlesPacket net/minecraft/network/protocol/game/ClientboundClearTitlesPacket
	a resetTimes
	a ()Z shouldResetTimes
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action
	a ADD
	b REMOVE
	c SET
	d $VALUES
	a ()[Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action; $values
net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket
	a action
	b entries
	a ()Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action; action
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Ljava/util/List; entries
net/minecraft/network/protocol/game/ClientboundDamageEventPacket net/minecraft/network/protocol/game/ClientboundDamageEventPacket
	a entityId
	b sourceTypeId
	c sourceCauseId
	d sourceDirectId
	e sourcePosition
	a ()I entityId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;I)V writeOptionalEntityId
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/damagesource/DamageSource; getSource
	b (Lnet/minecraft/network/PacketDataSerializer;)I readOptionalEntityId
	d ()I sourceTypeId
	e ()I sourceCauseId
	f ()I sourceDirectId
	g ()Ljava/util/Optional; sourcePosition
net/minecraft/network/protocol/game/ClientboundDeleteChatPacket net/minecraft/network/protocol/game/ClientboundDeleteChatPacket
	a messageSignature
	a ()Ltw$a; messageSignature
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundDisguisedChatPacket net/minecraft/network/protocol/game/ClientboundDisguisedChatPacket
	a message
	b chatType
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; message
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b ()Z isSkippable
	d ()Lth$b; chatType
net/minecraft/network/protocol/game/ClientboundHurtAnimationPacket net/minecraft/network/protocol/game/ClientboundHurtAnimationPacket
	a id
	b yaw
	a ()I id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()F yaw
net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket
	a newCenterX
	b newCenterZ
	c oldSize
	d newSize
	e lerpTime
	f newAbsoluteMaxSize
	g warningBlocks
	h warningTime
	a ()D getNewCenterX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()D getNewCenterZ
	e ()D getNewSize
	f ()D getOldSize
	g ()J getLerpTime
	h ()I getNewAbsoluteMaxSize
	i ()I getWarningTime
	j ()I getWarningBlocks
net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData
	a TWO_MEGABYTES
	b heightmaps
	c buffer
	d blockEntitiesData
	a ()Lnet/minecraft/network/PacketDataSerializer; getReadBuffer
	a (II)Ljava/util/function/Consumer; getBlockEntitiesTagsConsumer
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/chunk/Chunk;)V extractChunkData
	a (Lnet/minecraft/world/level/chunk/Chunk;)I calculateChunkSize
	a (Lyf$b;II)V getBlockEntitiesTags
	b ()Lnet/minecraft/nbt/NBTTagCompound; getHeightmaps
	c ()Lio/netty/buffer/ByteBuf; getWriteBuffer
net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket
	a x
	b z
	c chunkData
	d lightData
	a ()I getX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getZ
	e ()Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData; getChunkData
	f ()Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData; getLightData
net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData
	a skyYMask
	b blockYMask
	c emptySkyYMask
	d emptyBlockYMask
	e skyUpdates
	f blockUpdates
	a ()Ljava/util/BitSet; getSkyYMask
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/lighting/LevelLightEngine;Lnet/minecraft/world/level/EnumSkyBlock;ILjava/util/BitSet;Ljava/util/BitSet;Ljava/util/List;)V prepareSectionData
	b ()Ljava/util/BitSet; getEmptySkyYMask
	c ()Ljava/util/List; getSkyUpdates
	d ()Ljava/util/BitSet; getBlockYMask
	e ()Ljava/util/BitSet; getEmptyBlockYMask
	f ()Ljava/util/List; getBlockUpdates
net/minecraft/network/protocol/game/ClientboundPlayerChatPacket net/minecraft/network/protocol/game/ClientboundPlayerChatPacket
	a sender
	b index
	c signature
	d body
	e unsignedContent
	f filterMask
	g chatType
	a ()Ljava/util/UUID; sender
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b ()Z isSkippable
	d ()I index
	e ()Lnet/minecraft/network/chat/MessageSignature; signature
	f ()Lud$a; body
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; unsignedContent
	h ()Lnet/minecraft/network/chat/FilterMask; filterMask
	i ()Lth$b; chatType
net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket
	a duration
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket
	a playerId
	b message
	a ()I getPlayerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b ()Z isSkippable
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getMessage
net/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket net/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket
	a profileIds
	a ()Ljava/util/List; profileIds
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket
	a actions
	b entries
	a ()Ljava/util/EnumSet; actions
	a (Ljava/util/Collection;)Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket; createPlayerInitializing
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Ljava/util/List; entries
	e ()Ljava/util/List; newEntries
net/minecraft/network/protocol/game/ClientboundServerDataPacket net/minecraft/network/protocol/game/ClientboundServerDataPacket
	a motd
	b iconBytes
	c enforcesSecureChat
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getMotd
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()Ljava/util/Optional; getIconBytes
	e ()Z enforcesSecureChat
net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket
	a text
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getText
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket
	a newCenterX
	b newCenterZ
	a ()D getNewCenterZ
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()D getNewCenterX
net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket
	a oldSize
	b newSize
	c lerpTime
	a ()D getOldSize
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()D getNewSize
	e ()J getLerpTime
net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket
	a size
	a ()D getSize
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket
	a warningDelay
	a ()I getWarningDelay
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket
	a warningBlocks
	a ()I getWarningBlocks
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket
	a simulationDistance
	a ()I simulationDistance
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket
	a text
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getText
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket
	a text
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getText
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket
	a fadeIn
	b stay
	c fadeOut
	a ()I getFadeIn
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	d ()I getStay
	e ()I getFadeOut
net/minecraft/network/protocol/game/ClientboundSystemChatPacket net/minecraft/network/protocol/game/ClientboundSystemChatPacket
	a content
	b overlay
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; content
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b ()Z isSkippable
	d ()Z overlay
net/minecraft/network/protocol/game/CommonPlayerSpawnInfo net/minecraft/network/protocol/game/CommonPlayerSpawnInfo
	a dimensionType
	b dimension
	c seed
	d gameType
	e previousGameType
	f isDebug
	g isFlat
	h lastDeathLocation
	i portalCooldown
	a ()Lnet/minecraft/resources/ResourceKey; dimensionType
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lnet/minecraft/resources/ResourceKey; dimension
	c ()J seed
	d ()Lnet/minecraft/world/level/EnumGamemode; gameType
	e ()Lnet/minecraft/world/level/EnumGamemode; previousGameType
	f ()Z isDebug
	g ()Z isFlat
	h ()Ljava/util/Optional; lastDeathLocation
	i ()I portalCooldown
net/minecraft/network/protocol/game/DebugEntityNameGenerator net/minecraft/network/protocol/game/DebugEntityNameGenerator
	a NAMES_FIRST_PART
	b NAMES_SECOND_PART
	a (Ljava/util/UUID;)Ljava/lang/String; getEntityName
	a (Lnet/minecraft/util/RandomSource;[Ljava/lang/String;)Ljava/lang/String; getRandomString
	a (Lnet/minecraft/world/entity/Entity;)Ljava/lang/String; getEntityName
	b (Ljava/util/UUID;)Lnet/minecraft/util/RandomSource; getRandom
net/minecraft/network/protocol/game/ServerboundChatAckPacket net/minecraft/network/protocol/game/ServerboundChatAckPacket
	a offset
	a ()I offset
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/ServerboundChatCommandPacket net/minecraft/network/protocol/game/ServerboundChatCommandPacket
	a command
	b timeStamp
	c salt
	d argumentSignatures
	e lastSeenMessages
	a ()Ljava/lang/String; command
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	d ()Ljava/time/Instant; timeStamp
	e ()J salt
	f ()Lnet/minecraft/commands/arguments/ArgumentSignatures; argumentSignatures
	g ()Ltr$b; lastSeenMessages
net/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket net/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket
	a chatSession
	a ()Lub$a; chatSession
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/ServerboundChunkBatchReceivedPacket net/minecraft/network/protocol/game/ServerboundChunkBatchReceivedPacket
	a desiredChunksPerTick
	a ()F desiredChunksPerTick
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/VecDeltaCodec net/minecraft/network/protocol/game/VecDeltaCodec
	a TRUNCATION_STEPS
	b base
	a (D)J encode
	a (J)D decode
	a (JJJ)Lnet/minecraft/world/phys/Vec3D; decode
	a (Lnet/minecraft/world/phys/Vec3D;)J encodeX
	b (Lnet/minecraft/world/phys/Vec3D;)J encodeY
	c (Lnet/minecraft/world/phys/Vec3D;)J encodeZ
	d (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; delta
	e (Lnet/minecraft/world/phys/Vec3D;)V setBase
net/minecraft/network/protocol/handshake/ClientIntent net/minecraft/network/protocol/handshake/ClientIntent
	a STATUS
	b LOGIN
	c STATUS_ID
	d LOGIN_ID
	e $VALUES
	a ()I id
	a (I)Lnet/minecraft/network/protocol/handshake/ClientIntent; byId
	b ()Lnet/minecraft/network/EnumProtocol; protocol
	c ()[Lnet/minecraft/network/protocol/handshake/ClientIntent; $values
net/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket net/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket
	a transactionId
	b payload
	c MAX_PAYLOAD_SIZE
	a ()I transactionId
	a (ILnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/login/custom/CustomQueryAnswerPayload; readPayload
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginInListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket; read
	c (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/login/custom/CustomQueryAnswerPayload; readUnknownPayload
	d ()Lnet/minecraft/network/protocol/login/custom/CustomQueryAnswerPayload; payload
net/minecraft/network/protocol/login/custom/DiscardedQueryAnswerPayload net/minecraft/network/protocol/login/custom/DiscardedQueryAnswerPayload
	a INSTANCE
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
net/minecraft/network/protocol/login/custom/DiscardedQueryPayload net/minecraft/network/protocol/login/custom/DiscardedQueryPayload
	a id
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
net/minecraft/resources/FileToIdConverter net/minecraft/resources/FileToIdConverter
	a prefix
	b extension
	a (Ljava/lang/String;)Lnet/minecraft/resources/FileToIdConverter; json
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/MinecraftKey; idToFile
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)Ljava/util/Map; listMatchingResources
	b (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/MinecraftKey; fileToId
	b (Lnet/minecraft/server/packs/resources/IResourceManager;)Ljava/util/Map; listMatchingResourceStacks
net/minecraft/resources/HolderSetCodec net/minecraft/resources/HolderSetCodec
	a registryKey
	b elementCodec
	c homogenousListCodec
	d registryAwareCodec
	a (Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; homogenousList
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decodeWithoutRegistry
	a (Lnet/minecraft/core/HolderSet;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; create
	b (Lnet/minecraft/core/HolderSet;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encodeWithoutRegistry
net/minecraft/resources/RegistryDataLoader net/minecraft/resources/RegistryDataLoader
	a WORLDGEN_REGISTRIES
	b DIMENSION_REGISTRIES
	c LOGGER
	a (Laeu$b;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/IRegistryWritable;Lcom/mojang/serialization/Decoder;Ljava/util/Map;)V loadRegistryContents
	a (Ljava/util/Map;)V logErrors
	a (Lnet/minecraft/core/IRegistry;)Laeu$a; createInfoForContextRegistry
	a (Lnet/minecraft/core/IRegistryCustom;Ljava/util/List;)Laeu$b; createContext
	a (Lnet/minecraft/core/IRegistryWritable;)Laeu$a; createInfoForNewRegistry
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/String; registryDirPath
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/core/IRegistryCustom;Ljava/util/List;)Lnet/minecraft/core/IRegistryCustom$Dimension; load
net/minecraft/resources/RegistryFileCodec net/minecraft/resources/RegistryFileCodec
	a registryKey
	b elementCodec
	c allowInline
	a (Lnet/minecraft/core/Holder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lnet/minecraft/resources/RegistryFileCodec; create
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lnet/minecraft/resources/RegistryFileCodec; create
net/minecraft/resources/RegistryFixedCodec net/minecraft/resources/RegistryFixedCodec
	a registryKey
	a (Lnet/minecraft/core/Holder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/RegistryFixedCodec; create
net/minecraft/resources/RegistryOps net/minecraft/resources/RegistryOps
	b lookupProvider
	a (Laeu$b;)Laeu$b; memoizeLookup
	a (Lcom/mojang/serialization/DynamicOps;Laeu$b;)Lnet/minecraft/resources/RegistryOps; create
	a (Lcom/mojang/serialization/DynamicOps;Lhg$b;)Lnet/minecraft/resources/RegistryOps; create
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; owner
	b (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; getter
	c (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; retrieveGetter
	d (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; retrieveElement
net/minecraft/resources/ResourceKey net/minecraft/resources/ResourceKey
	a VALUES
	b registryName
	c location
	a ()Lnet/minecraft/resources/MinecraftKey; location
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/ResourceKey; createRegistryKey
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/ResourceKey; create
	a (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/ResourceKey; create
	b ()Lnet/minecraft/resources/MinecraftKey; registry
	b (Lnet/minecraft/resources/ResourceKey;)Z isFor
	c (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
net/minecraft/server/Main net/minecraft/server/Main
	a LOGGER
	a (Ljava/nio/file/Path;)V writePidFile
	a (Lnet/minecraft/server/dedicated/DedicatedServerProperties;Lnet/minecraft/world/level/storage/Convertable$ConversionSession;ZLnet/minecraft/server/packs/repository/ResourcePackRepository;)Lafq$c; loadOrCreateConfig
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lnet/minecraft/core/IRegistry;)V forceUpgrade
net/minecraft/server/MinecraftServer$ReloadableResources net/minecraft/server/MinecraftServer$ReloadableResources
	a resourceManager
	b managers
	a ()Lnet/minecraft/server/packs/resources/IReloadableResourceManager; resourceManager
	b ()Lnet/minecraft/server/DataPackResources; managers
net/minecraft/server/MinecraftServer$ServerResourcePackInfo net/minecraft/server/MinecraftServer$ServerResourcePackInfo
	a url
	b hash
	c isRequired
	d prompt
	a ()Ljava/lang/String; url
	b ()Ljava/lang/String; hash
	c ()Z isRequired
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; prompt
net/minecraft/server/MinecraftServer$TimeProfiler net/minecraft/server/MinecraftServer$TimeProfiler
	a startNanos
	b startTick
	a (JI)Lnet/minecraft/util/profiling/MethodProfilerResults; stop
net/minecraft/server/MinecraftServer net/minecraft/server/MinecraftServer
	A profiler
	B onMetricsRecordingStopped
	C onMetricsRecordingFinished
	D willStartRecordingMetrics
	E debugCommandProfiler
	F debugCommandProfilerDelayStart
	G connection
	H progressListenerFactory
	I status
	J statusIcon
	K random
	L fixerUpper
	M localIp
	N port
	O registries
	P levels
	Q playerList
	R running
	S stopped
	T tickCount
	U onlineMode
	V preventProxyConnections
	W pvp
	X allowFlight
	Y motd
	Z playerIdleTimeout
	aa keyPair
	ab singleplayerProfile
	ac isDemo
	ad isReady
	ae lastOverloadWarning
	af lastServerStatus
	ag serverThread
	ah nextTickTime
	ai delayedTasksMaxNextTickTime
	aj mayHaveDelayedTasks
	ak packRepository
	al scoreboard
	am commandStorage
	an customBossEvents
	ao functionManager
	ap enforceWhitelist
	aq averageTickTime
	ar executor
	as serverId
	at resources
	au structureTemplateManager
	av isSaving
	b VANILLA_BRAND
	c MS_PER_TICK
	d START_CHUNK_RADIUS
	e ABSOLUTE_MAX_WORLD_SIZE
	f DEMO_SETTINGS
	g ANONYMOUS_PLAYER_PROFILE
	h storageSource
	i playerDataStorage
	j proxy
	k tickTimes
	l services
	m worldData
	n LOGGER
	o AVERAGE_TICK_TIME_SMOOTHING
	p TICK_STATS_SPAN
	q OVERLOADED_THRESHOLD
	r OVERLOADED_WARNING_INTERVAL
	s STATUS_EXPIRE_TIME_NS
	t MAX_STATUS_PLAYER_SAMPLE
	u START_TICKING_CHUNK_COUNT
	v AUTOSAVE_INTERVAL
	w MAX_TICK_LATENCY
	x DELAYED_TASKS_TICK_EXTENSION
	y tickables
	z metricsRecorder
	A ()V forceTimeSynchronization
	B ()Z isNetherEnabled
	C ()Z isShutdown
	D ()Lnet/minecraft/server/level/WorldServer; overworld
	E ()Ljava/util/Set; levelKeys
	F ()Ljava/lang/Iterable; getAllLevels
	G ()Ljava/lang/String; getServerVersion
	H ()I getPlayerCount
	I ()I getMaxPlayers
	J ()[Ljava/lang/String; getPlayerNames
	K ()Lnet/minecraft/util/ModCheck; getModdedStatus
	L ()Ljava/security/KeyPair; getKeyPair
	M ()I getPort
	N ()Lcom/mojang/authlib/GameProfile; getSingleplayerProfile
	O ()Z isSingleplayer
	P ()V initializeKeyPair
	Q ()Z isSpawningMonsters
	R ()Z isDemo
	S ()Ljava/util/Optional; getServerResourcePack
	T ()Z isResourcePackRequired
	T_ ()Z shouldInformAdmins
	U ()Z usesAuthentication
	V ()Z getPreventProxyConnections
	W ()Z isSpawningAnimals
	X ()Z areNpcsEnabled
	Y ()Z isPvpAllowed
	Z ()Z isFlightAllowed
	a (I)V setPort
	a (J)V logTickTime
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/lang/Runnable;)Lnet/minecraft/server/TickTask; wrapRunnable
	a (Ljava/lang/Throwable;)Lnet/minecraft/CrashReport; constructOrExtractCrashReport
	a (Ljava/nio/file/Path;)V dumpServerProperties
	a (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; reloadResources
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	a (Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V startRecordingMetrics
	a (Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer; spin
	a (Lnet/minecraft/CrashReport;)V onServerCrash
	a (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; fillServerSystemReport
	a (Lnet/minecraft/commands/CommandListenerWrapper;)V kickUnlistedPlayers
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lth$a;Ljava/lang/String;)V logChatMessage
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/server/level/WorldServer; getLevel
	a (Lnet/minecraft/server/TickTask;)Z shouldRun
	a (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/server/network/ITextFilter; createTextFilterForPlayer
	a (Lnet/minecraft/server/level/WorldServer;)I getSpawnRadius
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)Z isUnderSpawnProtection
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/storage/IWorldDataServer;ZZ)V setInitialSpawn
	a (Lnet/minecraft/server/level/progress/WorldLoadListener;)V createLevels
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;)Lnet/minecraft/world/level/DataPackConfiguration; getSelectedPacks
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;Lnet/minecraft/world/level/DataPackConfiguration;ZLnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/world/level/WorldDataConfiguration; configurePackRepository
	a (Lnet/minecraft/server/players/PlayerList;)V setPlayerList
	a (Lnet/minecraft/world/EnumDifficulty;Z)V setDifficulty
	a (Lnet/minecraft/world/level/EnumGamemode;)V setDefaultGameType
	a (Lnet/minecraft/world/level/EnumGamemode;ZI)Z publishServer
	a (Lnet/minecraft/world/level/storage/SaveData;)V setupDebugLevel
	a (Lnet/minecraft/world/level/storage/SavedFile;)Ljava/nio/file/Path; getWorldPath
	a (Lnet/minecraft/world/level/storage/WorldPersistentData;)V readScoreboard
	a (Z)V halt
	a (ZZZ)Z saveAllChunks
	aA ()Lnet/minecraft/server/CustomFunctionData; getFunctions
	aB ()Lnet/minecraft/server/packs/repository/ResourcePackRepository; getPackRepository
	aC ()Lnet/minecraft/commands/CommandDispatcher; getCommands
	aD ()Lnet/minecraft/commands/CommandListenerWrapper; createCommandSourceStack
	aE ()Lnet/minecraft/world/item/crafting/CraftingManager; getRecipeManager
	aF ()Lnet/minecraft/server/ScoreboardServer; getScoreboard
	aG ()Lnet/minecraft/world/level/storage/PersistentCommandStorage; getCommandStorage
	aH ()Lnet/minecraft/world/level/storage/loot/LootDataManager; getLootData
	aI ()Lnet/minecraft/world/level/GameRules; getGameRules
	aJ ()Lnet/minecraft/server/bossevents/BossBattleCustomData; getCustomBossEvents
	aK ()Z isEnforceWhitelist
	aL ()F getAverageTickTime
	aM ()Lnet/minecraft/util/profiling/GameProfilerFiller; getProfiler
	aN ()Z isRecordingMetrics
	aO ()V stopRecordingMetrics
	aP ()V finishRecordingMetrics
	aQ ()V cancelRecordingMetrics
	aR ()Z forceSynchronousWrites
	aS ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; getStructureManager
	aT ()Lnet/minecraft/world/level/storage/SaveData; getWorldData
	aU ()Lnet/minecraft/core/IRegistryCustom$Dimension; registryAccess
	aV ()Lnet/minecraft/core/LayeredRegistryAccess; registries
	aW ()Lnet/minecraft/world/level/EnumGamemode; getForcedGameType
	aX ()Lnet/minecraft/server/packs/resources/IResourceManager; getResourceManager
	aY ()Z isCurrentlySaving
	aZ ()Z isTimeProfilerRunning
	a_ (Ljava/lang/String;)V setLocalIp
	aa ()Ljava/lang/String; getMotd
	ab ()Z isStopped
	ac ()Lnet/minecraft/server/players/PlayerList; getPlayerList
	ad ()Lnet/minecraft/server/network/ServerConnection; getConnection
	ae ()Z isReady
	af ()Z hasGui
	ag ()I getTickCount
	ah ()I getSpawnProtectionRadius
	ai ()Z repliesToStatus
	aj ()Z hidesOnlinePlayers
	ak ()Ljava/net/Proxy; getProxy
	al ()I getPlayerIdleTimeout
	am ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getSessionService
	an ()Lnet/minecraft/util/SignatureValidator; getProfileKeySignatureValidator
	ao ()Lcom/mojang/authlib/GameProfileRepository; getProfileRepository
	ap ()Lnet/minecraft/server/players/UserCache; getProfileCache
	aq ()Lnet/minecraft/network/protocol/status/ServerPing; getStatus
	ar ()V invalidateStatus
	as ()I getAbsoluteMaxWorldSize
	at ()Z scheduleExecutables
	au ()Ljava/lang/Thread; getRunningThread
	av ()I getCompressionThreshold
	aw ()Z enforceSecureProfile
	ax ()J getNextTickTime
	ay ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
	az ()Lnet/minecraft/server/AdvancementDataWorld; getAdvancements
	b (I)I getScaledTrackingDistance
	b (Lcom/mojang/authlib/GameProfile;)V setSingleplayerProfile
	b (Ljava/lang/Runnable;)V addTickable
	b (Ljava/lang/String;)V setId
	b (Ljava/nio/file/Path;)V saveDebugReport
	b (Ljava/util/function/BooleanSupplier;)V tickChildren
	b (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; fillSystemReport
	b (Lnet/minecraft/server/TickTask;)V doRunTask
	b (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/server/level/PlayerInteractManager; createGameModeForPlayer
	b (Lnet/minecraft/server/level/WorldServer;)V synchronizeTime
	b (Lnet/minecraft/server/level/progress/WorldLoadListener;)V prepareLevels
	b (Z)V setDifficultyLocked
	b (ZZZ)Z saveEverything
	ba ()V startTimeProfiler
	bb ()Lnet/minecraft/util/profiling/MethodProfilerResults; stopTimeProfiler
	bc ()I getMaxChainedNeighborUpdates
	bd ()Lnet/minecraft/network/chat/ChatDecorator; getChatDecorator
	be ()Z logIPs
	bf ()Z haveTime
	bg ()Z pollTaskInternal
	bh ()Ljava/util/Optional; loadStatusIcon
	bi ()Lnet/minecraft/network/protocol/status/ServerPing; buildServerStatus
	bj ()Lnet/minecraft/network/protocol/status/ServerPing$ServerPingPlayerSample; buildPlayerStatus
	bs ()V updateMobSpawningFlags
	bt ()V startMetricsRecordingTick
	bu ()V endMetricsRecordingTick
	c (I)V setPlayerIdleTimeout
	c (Lcom/mojang/authlib/GameProfile;)I getProfilePermissions
	c (Ljava/lang/Runnable;)V executeIfPossible
	c (Ljava/lang/String;)Ljava/io/File; getFile
	c (Ljava/nio/file/Path;)V dumpMiscStats
	c (Lnet/minecraft/server/level/EntityPlayer;)V sendDifficultyUpdate
	c (Z)V setDemo
	d (Ljava/lang/Runnable;)V doRunTask
	d (Ljava/lang/String;)V setMotd
	d (Ljava/nio/file/Path;)V dumpGameRules
	d (Z)V setUsesAuthentication
	e ()Z initServer
	e (Ljava/lang/Runnable;)Z shouldRun
	e (Ljava/nio/file/Path;)V dumpClasspath
	e (Z)V setPreventProxyConnections
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	f (Ljava/nio/file/Path;)V dumpThreads
	f (Z)V setPvpAllowed
	g ()V onServerExit
	g (Ljava/nio/file/Path;)V dumpNativeModules
	g (Z)V setFlightAllowed
	h ()Z isHardcore
	h (Z)V setEnforceWhitelist
	i ()I getOperatorUserPermissionLevel
	j ()I getFunctionCompilationLevel
	j_ ()Z acceptsSuccess
	k ()Z shouldRconBroadcast
	l ()Z isDedicatedServer
	m ()I getRateLimitPacketsPerSecond
	n ()Z isEpollEnabled
	o ()Z isCommandBlockEnabled
	p ()Z isPublished
	r ()V forceDifficulty
	s_ ()V loadLevel
	t ()V stopServer
	t_ ()Lnet/minecraft/world/level/EnumGamemode; getDefaultGameType
	u ()Ljava/lang/String; getLocalIp
	u_ ()V waitUntilNextTick
	v ()Z isRunning
	v_ ()Z acceptsFailure
	w ()V runServer
	x ()Z pollTask
	y ()Ljava/util/Optional; getWorldScreenshotFile
	z ()Ljava/io/File; getServerDirectory
net/minecraft/server/RegistryLayer net/minecraft/server/RegistryLayer
	a STATIC
	b WORLDGEN
	c DIMENSIONS
	d RELOADABLE
	e VALUES
	f STATIC_ACCESS
	g $VALUES
	a ()Lnet/minecraft/core/LayeredRegistryAccess; createRegistryAccess
	b ()[Lnet/minecraft/server/RegistryLayer; $values
net/minecraft/server/Services net/minecraft/server/Services
	a sessionService
	b servicesKeySet
	c profileRepository
	d profileCache
	e USERID_CACHE_FILE
	a ()Lnet/minecraft/util/SignatureValidator; profileKeySignatureValidator
	a (Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Ljava/io/File;)Lnet/minecraft/server/Services; create
	b ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; sessionService
	c ()Lcom/mojang/authlib/yggdrasil/ServicesKeySet; servicesKeySet
	d ()Lcom/mojang/authlib/GameProfileRepository; profileRepository
	e ()Lnet/minecraft/server/players/UserCache; profileCache
net/minecraft/server/TickTask net/minecraft/server/TickTask
	a tick
	b runnable
	a ()I getTick
net/minecraft/server/WorldLoader net/minecraft/server/WorldLoader
	a LOGGER
	a (Lafq$c;Lafq$f;Lafq$e;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; load
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/server/RegistryLayer;Ljava/util/List;)Lnet/minecraft/core/IRegistryCustom$Dimension; loadLayer
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/server/RegistryLayer;Ljava/util/List;)Lnet/minecraft/core/LayeredRegistryAccess; loadAndReplaceLayer
net/minecraft/server/WorldStem net/minecraft/server/WorldStem
	a resourceManager
	b dataPackResources
	c registries
	d worldData
	a ()Lnet/minecraft/server/packs/resources/IReloadableResourceManager; resourceManager
	b ()Lnet/minecraft/server/DataPackResources; dataPackResources
	c ()Lnet/minecraft/core/LayeredRegistryAccess; registries
	d ()Lnet/minecraft/world/level/storage/SaveData; worldData
net/minecraft/server/advancements/AdvancementVisibilityEvaluator net/minecraft/server/advancements/AdvancementVisibilityEvaluator
	a VISIBILITY_DEPTH
	a (Lit/unimi/dsi/fastutil/Stack;)Z evaluateVisiblityForUnfinishedNode
	a (Lnet/minecraft/advancements/Advancement;Z)Lafs$b; evaluateVisibilityRule
	a (Lnet/minecraft/advancements/AdvancementNode;Lit/unimi/dsi/fastutil/Stack;Ljava/util/function/Predicate;Lafs$a;)Z evaluateVisibility
	a (Lnet/minecraft/advancements/AdvancementNode;Ljava/util/function/Predicate;Lafs$a;)V evaluateVisibility
net/minecraft/server/commands/DamageCommand net/minecraft/server/commands/DamageCommand
	a ERROR_INVULNERABLE
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;FLnet/minecraft/world/damagesource/DamageSource;)I damage
net/minecraft/server/commands/FillBiomeCommand net/minecraft/server/commands/FillBiomeCommand
	a ERROR_NOT_LOADED
	b ERROR_VOLUME_TOO_LARGE
	a (I)I quantize
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lhe$c;Ljava/util/function/Predicate;)I fill
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; quantize
	a (Lorg/apache/commons/lang3/mutable/MutableInt;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/core/Holder;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/biome/BiomeResolver; makeResolver
net/minecraft/server/commands/ItemCommands net/minecraft/server/commands/ItemCommands
	a ERROR_TARGET_NOT_A_CONTAINER
	b ERROR_TARGET_INAPPLICABLE_SLOT
	c ERROR_SOURCE_NOT_A_CONTAINER
	d ERROR_SOURCE_INAPPLICABLE_SLOT
	e ERROR_TARGET_NO_CHANGES
	f ERROR_TARGET_NO_CHANGES_KNOWN_ITEM
	g SUGGEST_MODIFIER
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/world/item/ItemStack;)I setEntityItem
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I modifyEntityItem
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/world/item/ItemStack; getBlockItem
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;ILjava/util/Collection;I)I blockToEntities
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;ILjava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I blockToEntities
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/BlockPosition;I)I blockToBlock
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/BlockPosition;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I blockToBlock
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/item/ItemStack;)I setBlockItem
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I modifyBlockItem
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;)Lnet/minecraft/world/IInventory; getContainer
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;ILjava/util/Collection;I)I entityToEntities
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;ILjava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I entityToEntities
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;ILnet/minecraft/core/BlockPosition;I)I entityToBlock
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;ILnet/minecraft/core/BlockPosition;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I entityToBlock
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; applyModifier
	a (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/item/ItemStack; getEntityItem
net/minecraft/server/commands/JfrCommand net/minecraft/server/commands/JfrCommand
	a START_FAILED
	b DUMP_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I startJfr
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I stopJfr
net/minecraft/server/commands/PerfCommand net/minecraft/server/commands/PerfCommand
	a LOGGER
	b ERROR_NOT_RUNNING
	c ERROR_ALREADY_RUNNING
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I startProfilingDedicatedServer
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftServer;)V saveResults
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/util/profiling/MethodProfilerResults;)V whenStopped
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I stopProfilingDedicatedServer
net/minecraft/server/commands/PlaceCommand net/minecraft/server/commands/PlaceCommand
	a ERROR_FEATURE_FAILED
	b ERROR_JIGSAW_FAILED
	c ERROR_STRUCTURE_FAILED
	d ERROR_TEMPLATE_INVALID
	e ERROR_TEMPLATE_FAILED
	f SUGGEST_TEMPLATES
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lhe$c;Lnet/minecraft/core/BlockPosition;)I placeFeature
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/MinecraftKey;ILnet/minecraft/core/BlockPosition;)I placeJigsaw
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/block/EnumBlockMirror;FI)I placeTemplate
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/ChunkCoordIntPair;)V checkLoaded
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lhe$c;Lnet/minecraft/core/BlockPosition;)I placeStructure
net/minecraft/server/commands/RandomCommand net/minecraft/server/commands/RandomCommand
	a ERROR_RANGE_TOO_LARGE
	b ERROR_RANGE_TOO_SMALL
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestRandomSequence
	a (Ljava/lang/String;Z)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; drawRandomValueTree
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I resetAllSequences
	a (Lnet/minecraft/commands/CommandListenerWrapper;IZZ)I resetAllSequencesAndSetNewDefaults
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;Lnet/minecraft/resources/MinecraftKey;Z)I randomSample
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/resources/MinecraftKey;)I resetSequence
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/resources/MinecraftKey;IZZ)I resetSequence
net/minecraft/server/commands/RideCommand net/minecraft/server/commands/RideCommand
	a ERROR_NOT_RIDING
	b ERROR_ALREADY_RIDING
	c ERROR_MOUNT_FAILED
	d ERROR_MOUNTING_PLAYER
	e ERROR_MOUNTING_LOOP
	f ERROR_WRONG_DIMENSION
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;)I dismount
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)I mount
net/minecraft/server/commands/SpawnArmorTrimsCommand net/minecraft/server/commands/SpawnArmorTrimsCommand
	a MATERIAL_AND_SLOT_TO_ITEM
	b VANILLA_TRIM_PATTERNS
	c VANILLA_TRIM_MATERIALS
	d TRIM_PATTERN_ORDER
	e TRIM_MATERIAL_ORDER
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/player/EntityHuman;)I spawnArmorTrims
net/minecraft/server/dedicated/DedicatedPlayerList net/minecraft/server/dedicated/DedicatedPlayerList
	a LOGGER
	A ()V loadOps
	B ()V saveOps
	C ()V loadWhiteList
	D ()V saveWhiteList
	a ()V reloadWhiteList
	a (Lcom/mojang/authlib/GameProfile;)V op
	a (Z)V setUsingWhiteList
	b ()Lnet/minecraft/server/dedicated/DedicatedServer; getServer
	b (Lcom/mojang/authlib/GameProfile;)V deop
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	c (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	d (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	w ()V saveIpBanList
	x ()V saveUserBanList
	y ()V loadIpBanList
	z ()V loadUserBanList
net/minecraft/server/dedicated/DedicatedServer net/minecraft/server/dedicated/DedicatedServer
	n LOGGER
	o CONVERSION_RETRY_DELAY_MS
	p CONVERSION_RETRIES
	q consoleInput
	r queryThreadGs4
	s rconConsoleSource
	t rconThread
	u settings
	v gui
	w textFilterClient
	B ()Z isNetherEnabled
	Q ()Z isSpawningMonsters
	S ()Ljava/util/Optional; getServerResourcePack
	T_ ()Z shouldInformAdmins
	W ()Z isSpawningAnimals
	X ()Z areNpcsEnabled
	a ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; getProperties
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/lang/String;)Ljava/lang/String; runCommand
	a (Ljava/lang/String;Lnet/minecraft/commands/CommandListenerWrapper;)V handleConsoleInput
	a (Ljava/nio/file/Path;)V dumpServerProperties
	a (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; fillServerSystemReport
	a (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/server/network/ITextFilter; createTextFilterForPlayer
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)Z isUnderSpawnProtection
	aR ()Z forceSynchronousWrites
	aW ()Lnet/minecraft/world/level/EnumGamemode; getForcedGameType
	ac ()Lnet/minecraft/server/players/PlayerList; getPlayerList
	af ()Z hasGui
	ah ()I getSpawnProtectionRadius
	ai ()Z repliesToStatus
	aj ()Z hidesOnlinePlayers
	as ()I getAbsoluteMaxWorldSize
	av ()I getCompressionThreshold
	aw ()Z enforceSecureProfile
	b ()Ljava/lang/String; getServerIp
	b (I)I getScaledTrackingDistance
	b (Ljava/util/function/BooleanSupplier;)V tickChildren
	bc ()I getMaxChainedNeighborUpdates
	be ()Z logIPs
	bf ()V handleConsoleInputs
	bg ()Lnet/minecraft/server/dedicated/DedicatedPlayerList; getPlayerList
	bh ()V showGui
	bi ()Z convertOldUsers
	bj ()J getMaxTickLength
	bs ()V waitForRetry
	c (I)V setPlayerIdleTimeout
	d ()I getServerPort
	e ()Z initServer
	f ()Ljava/lang/String; getServerName
	g ()V onServerExit
	h ()Z isHardcore
	i ()I getOperatorUserPermissionLevel
	i (Z)V storeUsingWhiteList
	j ()I getFunctionCompilationLevel
	k ()Z shouldRconBroadcast
	l ()Z isDedicatedServer
	m ()I getRateLimitPacketsPerSecond
	n ()Z isEpollEnabled
	o ()Z isCommandBlockEnabled
	p ()Z isPublished
	q ()Ljava/lang/String; getLevelIdName
	r ()V forceDifficulty
	s ()Ljava/lang/String; getPluginNames
	t ()V stopServer
net/minecraft/server/dedicated/DedicatedServerProperties$WorldDimensionData net/minecraft/server/dedicated/DedicatedServerProperties$WorldDimensionData
	a generatorSettings
	b levelType
	c LEGACY_PRESET_NAMES
	a ()Lcom/google/gson/JsonObject; generatorSettings
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/level/levelgen/WorldDimensions; create
	b ()Ljava/lang/String; levelType
net/minecraft/server/dedicated/DedicatedServerProperties net/minecraft/server/dedicated/DedicatedServerProperties
	A opPermissionLevel
	B functionPermissionLevel
	C maxTickTime
	D maxChainedNeighborUpdates
	E rateLimitPacketsPerSecond
	F viewDistance
	G simulationDistance
	H maxPlayers
	I networkCompressionThreshold
	J broadcastRconToOps
	K broadcastConsoleToOps
	L maxWorldSize
	M syncChunkWrites
	N enableJmxMonitoring
	O enableStatus
	P hideOnlinePlayers
	Q entityBroadcastRangePercentage
	R textFilteringConfig
	S serverResourcePackInfo
	T initialDataPackConfiguration
	U playerIdleTimeout
	V whiteList
	W enforceSecureProfile
	X logIPs
	Y worldOptions
	a onlineMode
	aa LOGGER
	ab SHA1
	ac COMMA_SPLITTER
	ad worldDimensionData
	b preventProxyConnections
	c serverIp
	d spawnAnimals
	e spawnNpcs
	f pvp
	g allowFlight
	h motd
	i forceGameMode
	j enforceWhitelist
	k difficulty
	l gamemode
	m levelName
	n serverPort
	o announcePlayerAchievements
	p enableQuery
	q queryPort
	r enableRcon
	s rconPort
	t rconPassword
	u hardcore
	v allowNether
	w spawnMonsters
	x useNativeTransport
	y enableCommandBlock
	z spawnProtection
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Ljava/util/Optional; getServerPackInfo
	a (Ljava/nio/file/Path;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; fromFile
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/level/levelgen/WorldDimensions; createDimensions
	a (Lnet/minecraft/core/IRegistryCustom;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; reload
	b (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/level/DataPackConfiguration; getDatapackConfig
	b (Lnet/minecraft/core/IRegistryCustom;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/PropertyManager; reload
	c (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; parseResourcePackPrompt
	d (Ljava/lang/String;)Lnet/minecraft/world/flag/FeatureFlagSet; getFeatures
net/minecraft/server/dedicated/DedicatedServerSettings net/minecraft/server/dedicated/DedicatedServerSettings
	a source
	b properties
	a ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; getProperties
	a (Ljava/util/function/UnaryOperator;)Lnet/minecraft/server/dedicated/DedicatedServerSettings; update
	b ()V forceSave
net/minecraft/server/level/ChunkLevel net/minecraft/server/level/ChunkLevel
	a MAX_LEVEL
	b FULL_CHUNK_LEVEL
	c BLOCK_TICKING_LEVEL
	d ENTITY_TICKING_LEVEL
	a (I)Lnet/minecraft/world/level/chunk/ChunkStatus; generationStatus
	a (Lnet/minecraft/server/level/FullChunkStatus;)I byStatus
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;)I byStatus
	b (I)Lnet/minecraft/server/level/FullChunkStatus; fullStatus
	c (I)Z isEntityTicking
	d (I)Z isBlockTicking
	e (I)Z isLoaded
net/minecraft/server/level/ChunkTrackingView net/minecraft/server/level/ChunkTrackingView
	a EMPTY
	a (II)Z contains
	a (IIIII)Z isInViewDistance
	a (IIIIIZ)Z isWithinDistance
	a (IIZ)Z contains
	a (Ljava/util/function/Consumer;)V forEach
	a (Lnet/minecraft/server/level/ChunkTrackingView;Lnet/minecraft/server/level/ChunkTrackingView;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V difference
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z contains
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)Lnet/minecraft/server/level/ChunkTrackingView; of
	b (II)Z isInViewDistance
net/minecraft/server/level/ClientInformation net/minecraft/server/level/ClientInformation
	a MAX_LANGUAGE_LENGTH
	b language
	c viewDistance
	d chatVisibility
	e chatColors
	f modelCustomisation
	g mainHand
	h textFilteringEnabled
	i allowsListing
	a ()Lnet/minecraft/server/level/ClientInformation; createDefault
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Ljava/lang/String; language
	c ()I viewDistance
	d ()Lnet/minecraft/world/entity/player/EnumChatVisibility; chatVisibility
	e ()Z chatColors
	f ()I modelCustomisation
	g ()Lnet/minecraft/world/entity/EnumMainHand; mainHand
	h ()Z textFilteringEnabled
	i ()Z allowsListing
net/minecraft/server/level/FullChunkStatus net/minecraft/server/level/FullChunkStatus
	a INACCESSIBLE
	b FULL
	c BLOCK_TICKING
	d ENTITY_TICKING
	e $VALUES
	a ()[Lnet/minecraft/server/level/FullChunkStatus; $values
	a (Lnet/minecraft/server/level/FullChunkStatus;)Z isOrAfter
net/minecraft/server/level/PlayerMap net/minecraft/server/level/PlayerMap
	a players
	a ()Ljava/util/Set; getAllPlayers
	a (Lnet/minecraft/server/level/EntityPlayer;)V removePlayer
	a (Lnet/minecraft/server/level/EntityPlayer;Z)V addPlayer
	b (Lnet/minecraft/server/level/EntityPlayer;)V ignorePlayer
	c (Lnet/minecraft/server/level/EntityPlayer;)V unIgnorePlayer
	d (Lnet/minecraft/server/level/EntityPlayer;)Z ignoredOrUnknown
	e (Lnet/minecraft/server/level/EntityPlayer;)Z ignored
net/minecraft/server/level/Ticket net/minecraft/server/level/Ticket
	a type
	b ticketLevel
	c key
	d createdTick
	a ()Lnet/minecraft/server/level/TicketType; getType
	a (J)V setCreatedTick
	a (Lnet/minecraft/server/level/Ticket;)I compareTo
	b ()I getTicketLevel
	b (J)Z timedOut
net/minecraft/server/level/TicketType net/minecraft/server/level/TicketType
	a START
	b DRAGON
	c PLAYER
	d FORCED
	e LIGHT
	f PORTAL
	g POST_TELEPORT
	h UNKNOWN
	i name
	j comparator
	k timeout
	a ()Ljava/util/Comparator; getComparator
	a (Ljava/lang/String;Ljava/util/Comparator;)Lnet/minecraft/server/level/TicketType; create
	a (Ljava/lang/String;Ljava/util/Comparator;I)Lnet/minecraft/server/level/TicketType; create
	b ()J timeout
net/minecraft/server/level/TickingTracker net/minecraft/server/level/TickingTracker
	a MAX_LEVEL
	b chunks
	c INITIAL_TICKET_LIST_CAPACITY
	d tickets
	a ()V runAllUpdates
	a (I)V replacePlayerTicketsLevel
	a (JI)V setLevel
	a (JLnet/minecraft/server/level/Ticket;)V addTicket
	a (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V addTicket
	a (Lnet/minecraft/util/ArraySetSorted;)I getTicketLevelAt
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)I getLevel
	b (J)I getLevelFromSource
	b (JLnet/minecraft/server/level/Ticket;)V removeTicket
	b (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
	c (J)I getLevel
	d (J)Ljava/lang/String; getTicketDebugString
	g (J)Lnet/minecraft/util/ArraySetSorted; getTickets
net/minecraft/server/network/CommonListenerCookie net/minecraft/server/network/CommonListenerCookie
	a gameProfile
	b latency
	c clientInformation
	a ()Lcom/mojang/authlib/GameProfile; gameProfile
	a (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/network/CommonListenerCookie; createInitial
	b ()I latency
	c ()Lnet/minecraft/server/level/ClientInformation; clientInformation
net/minecraft/server/network/FilteredText net/minecraft/server/network/FilteredText
	a EMPTY
	b raw
	c mask
	a ()Ljava/lang/String; filtered
	a (Ljava/lang/String;)Lnet/minecraft/server/network/FilteredText; passThrough
	b ()Ljava/lang/String; filteredOrEmpty
	b (Ljava/lang/String;)Lnet/minecraft/server/network/FilteredText; fullyFiltered
	c ()Z isFiltered
	d ()Ljava/lang/String; raw
	e ()Lnet/minecraft/network/chat/FilterMask; mask
net/minecraft/server/network/LegacyProtocolUtils net/minecraft/server/network/LegacyProtocolUtils
	a CUSTOM_PAYLOAD_PACKET_ID
	b CUSTOM_PAYLOAD_PACKET_PING_CHANNEL
	c GET_INFO_PACKET_ID
	d GET_INFO_PACKET_VERSION_1
	e DISCONNECT_PACKET_ID
	f FAKE_PROTOCOL_VERSION
	a (Lio/netty/buffer/ByteBuf;)Ljava/lang/String; readLegacyString
	a (Lio/netty/buffer/ByteBuf;Ljava/lang/String;)V writeLegacyString
net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl
	a server
	b connection
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/protocol/handshake/PacketHandshakingInSetProtocol;)V handleIntention
	c ()Z isAcceptingMessages
net/minecraft/server/network/PlayerChunkSender net/minecraft/server/network/PlayerChunkSender
	a MIN_CHUNKS_PER_TICK
	b MAX_CHUNKS_PER_TICK
	c LOGGER
	d START_CHUNKS_PER_TICK
	e MAX_UNACKNOWLEDGED_BATCHES
	f pendingChunks
	g memoryConnection
	h desiredChunksPerTick
	i batchQuota
	j unacknowledgedBatches
	k maxUnacknowledgedBatches
	a (F)V onChunkBatchReceivedByClient
	a (J)Z isPending
	a (Lnet/minecraft/server/level/EntityPlayer;)V sendNextChunks
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/ChunkCoordIntPair;)V dropChunk
	a (Lnet/minecraft/server/level/PlayerChunkMap;Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/List; collectChunksToSend
	a (Lnet/minecraft/server/network/PlayerConnection;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/Chunk;)V sendChunk
	a (Lnet/minecraft/world/level/chunk/Chunk;)V markChunkPendingToSend
net/minecraft/server/network/ServerCommonPacketListenerImpl net/minecraft/server/network/ServerCommonPacketListenerImpl
	a LATENCY_CHECK_INTERVAL
	b server
	c connection
	d LOGGER
	e TIMEOUT_DISCONNECTION_MESSAGE
	f keepAliveTime
	g keepAlivePending
	h keepAliveChallenge
	i latency
	j suspendFlushingOnServerThread
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V send
	a (Lnet/minecraft/network/protocol/common/ServerboundCustomPayloadPacket;)V handleCustomPayload
	a (Lnet/minecraft/network/protocol/common/ServerboundKeepAlivePacket;)V handleKeepAlive
	a (Lnet/minecraft/network/protocol/common/ServerboundPongPacket;)V handlePong
	a (Lnet/minecraft/network/protocol/common/ServerboundResourcePackPacket;)V handleResourcePackResponse
	a (Lnet/minecraft/server/level/ClientInformation;)Lnet/minecraft/server/network/CommonListenerCookie; createCookie
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V disconnect
	b (Lnet/minecraft/network/protocol/Packet;)V send
	f ()V keepConnectionAlive
	g ()V suspendFlushing
	h ()V resumeFlushing
	i ()Z isSingleplayerOwner
	j ()Lcom/mojang/authlib/GameProfile; playerProfile
	k ()Lcom/mojang/authlib/GameProfile; getOwner
	l ()I latency
net/minecraft/server/network/ServerConfigurationPacketListenerImpl net/minecraft/server/network/ServerConfigurationPacketListenerImpl
	d LOGGER
	e DISCONNECT_REASON_INVALID_DATA
	f gameProfile
	g configurationTasks
	h currentTask
	i clientInformation
	a (Lalg$a;)V finishCurrentTask
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/protocol/common/ServerboundClientInformationPacket;)V handleClientInformation
	a (Lnet/minecraft/network/protocol/common/ServerboundResourcePackPacket;)V handleResourcePackResponse
	a (Lnet/minecraft/network/protocol/configuration/ServerboundFinishConfigurationPacket;)V handleConfigurationFinished
	c ()Z isAcceptingMessages
	e ()V tick
	j ()Lcom/mojang/authlib/GameProfile; playerProfile
	m ()V startConfiguration
	n ()V returnToWorld
	o ()V addOptionalTasks
	p ()V startNextTask
net/minecraft/server/network/config/JoinWorldTask net/minecraft/server/network/config/JoinWorldTask
	a TYPE
	a ()Lalg$a; type
	a (Ljava/util/function/Consumer;)V start
net/minecraft/server/network/config/ServerResourcePackConfigurationTask net/minecraft/server/network/config/ServerResourcePackConfigurationTask
	a TYPE
	b info
	a ()Lalg$a; type
	a (Ljava/util/function/Consumer;)V start
net/minecraft/server/packs/BuiltInMetadata net/minecraft/server/packs/BuiltInMetadata
	a EMPTY
	b values
	a ()Lnet/minecraft/server/packs/BuiltInMetadata; of
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;)Ljava/lang/Object; get
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;Ljava/lang/Object;)Lnet/minecraft/server/packs/BuiltInMetadata; of
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;Ljava/lang/Object;Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;Ljava/lang/Object;)Lnet/minecraft/server/packs/BuiltInMetadata; of
net/minecraft/server/packs/CompositePackResources net/minecraft/server/packs/CompositePackResources
	c primaryPackResources
	d packResourcesStack
	a ()Ljava/lang/String; packId
	a (Lnet/minecraft/server/packs/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;Lamh$a;)V listResources
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/server/packs/resources/IoSupplier; getResource
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	a ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; getRootResource
	b ()Z isBuiltin
net/minecraft/server/packs/FeatureFlagsMetadataSection net/minecraft/server/packs/FeatureFlagsMetadataSection
	a TYPE
	b flags
	c CODEC
	a ()Lnet/minecraft/world/flag/FeatureFlagSet; flags
net/minecraft/server/packs/OverlayMetadataSection net/minecraft/server/packs/OverlayMetadataSection
	a TYPE
	b overlays
	c DIR_VALIDATOR
	d CODEC
	a ()Ljava/util/List; overlays
	a (I)Ljava/util/List; overlaysForVersion
	a (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; validateOverlayDir
net/minecraft/server/packs/PathPackResources net/minecraft/server/packs/PathPackResources
	c LOGGER
	d PATH_JOINER
	e root
	a (Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;Lamh$a;)V listPath
	a (Ljava/nio/file/Path;)Z validatePath
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/nio/file/Path;)Lnet/minecraft/server/packs/resources/IoSupplier; getResource
	a (Lnet/minecraft/server/packs/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;Lamh$a;)V listResources
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/server/packs/resources/IoSupplier; getResource
	a ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; getRootResource
	b (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/resources/IoSupplier; returnFileIfExists
net/minecraft/server/packs/VanillaPackResourcesBuilder net/minecraft/server/packs/VanillaPackResourcesBuilder
	a developmentConfig
	b LOGGER
	c ROOT_DIR_BY_TYPE
	d rootPaths
	e pathsForType
	f metadata
	g namespaces
	a ()Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; pushJarResources
	a (Ljava/net/URI;)Ljava/nio/file/Path; safeGetPath
	a (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; pushUniversalPath
	a (Ljava/util/Collection;)Ljava/util/List; copyAndReverse
	a (Lnet/minecraft/server/packs/BuiltInMetadata;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; setMetadata
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/lang/Class;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; pushClasspathResources
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/nio/file/Path;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; pushAssetPath
	a ([Ljava/lang/String;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; exposeNamespace
	b ()Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; applyDevelopmentConfig
	b (Ljava/nio/file/Path;)Z validateDirPath
	b (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/nio/file/Path;)V pushPathForType
	c ()Lnet/minecraft/server/packs/ResourcePackVanilla; build
	c (Ljava/nio/file/Path;)V pushRootPath
net/minecraft/server/packs/linkfs/DummyFileAttributes net/minecraft/server/packs/linkfs/DummyFileAttributes
	a EPOCH
net/minecraft/server/packs/linkfs/LinkFSFileStore net/minecraft/server/packs/linkfs/LinkFSFileStore
	a name
net/minecraft/server/packs/linkfs/LinkFSPath net/minecraft/server/packs/linkfs/LinkFSPath
	a DIRECTORY_ATTRIBUTES
	b FILE_ATTRIBUTES
	c PATH_COMPARATOR
	d name
	e fileSystem
	f parent
	g pathToRoot
	h pathString
	i pathContents
	a ()Lnet/minecraft/server/packs/linkfs/LinkFileSystem; getFileSystem
	a (I)Lnet/minecraft/server/packs/linkfs/LinkFSPath; getName
	a (II)Lnet/minecraft/server/packs/linkfs/LinkFSPath; subpath
	a (Ljava/lang/String;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; resolveName
	a (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; resolve
	a (Ljava/util/List;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; resolve
	a (Lnet/minecraft/server/packs/linkfs/LinkFSPath;Ljava/lang/String;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; createRelativePath
	a (Lnet/minecraft/server/packs/linkfs/PathContents;)Z isRelativeOrMissing
	a ([Ljava/nio/file/LinkOption;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; toRealPath
	b ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; getRoot
	b (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; relativize
	c ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; getFileName
	c (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; toLinkPath
	d ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; getParent
	e ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; normalize
	f ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; toAbsolutePath
	g ()Z exists
	h ()Ljava/nio/file/Path; getTargetPath
	i ()Lamr$a; getDirectoryContents
	j ()Ljava/nio/file/attribute/BasicFileAttributeView; getBasicAttributeView
	k ()Ljava/nio/file/attribute/BasicFileAttributes; getBasicAttributes
	l ()Ljava/util/List; pathToRoot
	m ()Z hasRealContents
	n ()Ljava/lang/String; pathToString
net/minecraft/server/packs/linkfs/LinkFSProvider net/minecraft/server/packs/linkfs/LinkFSProvider
	a SCHEME
	a (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; toLinkPath
net/minecraft/server/packs/linkfs/LinkFileSystem net/minecraft/server/packs/linkfs/LinkFileSystem
	a PATH_SEPARATOR
	b VIEWS
	c PATH_SPLITTER
	d store
	e provider
	f root
	a ()Ljava/nio/file/FileStore; store
	a (Lamq$b;Lnet/minecraft/server/packs/linkfs/LinkFileSystem;Ljava/lang/String;Lnet/minecraft/server/packs/linkfs/LinkFSPath;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; buildPath
	b ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; rootPath
	c ()Lamq$a; builder
net/minecraft/server/packs/linkfs/PathContents net/minecraft/server/packs/linkfs/PathContents
	a MISSING
	b RELATIVE
net/minecraft/server/packs/repository/BuiltInPackSource net/minecraft/server/packs/repository/BuiltInPackSource
	a VANILLA_ID
	b LOGGER
	c packType
	d vanillaPack
	e packDir
	f validator
	a ()Lnet/minecraft/server/packs/ResourcePackVanilla; getVanillaPack
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; getPackTitle
	a (Ljava/lang/String;Lanb$c;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; createBuiltinPack
	a (Ljava/nio/file/Path;)Ljava/lang/String; pathToId
	a (Ljava/nio/file/Path;Ljava/util/function/BiConsumer;)V discoverPacksInPath
	a (Ljava/util/function/BiConsumer;)V populatePackList
	a (Ljava/util/function/Consumer;)V loadPacks
	a (Lnet/minecraft/server/packs/IResourcePack;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; createVanillaPack
	b (Ljava/util/function/Consumer;)V listBundledPacks
	b (Lnet/minecraft/server/packs/IResourcePack;)Lanb$c; fixedResources
net/minecraft/server/packs/repository/PackDetector net/minecraft/server/packs/repository/PackDetector
	a validator
	a (Ljava/nio/file/Path;Ljava/util/List;)Ljava/lang/Object; detectPackResources
	c (Ljava/nio/file/Path;)Ljava/lang/Object; createDirectoryPack
	d (Ljava/nio/file/Path;)Ljava/lang/Object; createZipPack
net/minecraft/server/packs/repository/PackSource net/minecraft/server/packs/repository/PackSource
	a NO_DECORATION
	b DEFAULT
	c BUILT_IN
	d FEATURE
	e WORLD
	f SERVER
	a ()Z shouldAddAutomatically
	a (Ljava/lang/String;)Ljava/util/function/UnaryOperator; decorateWithSource
	a (Ljava/util/function/UnaryOperator;Z)Lnet/minecraft/server/packs/repository/PackSource; create
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; decorate
net/minecraft/server/packs/resources/ResourceFilterSection net/minecraft/server/packs/resources/ResourceFilterSection
	a TYPE
	b CODEC
	c blockList
	a (Ljava/lang/String;)Z isNamespaceFiltered
	b (Ljava/lang/String;)Z isPathFiltered
net/minecraft/server/packs/resources/ResourceMetadata net/minecraft/server/packs/resources/ResourceMetadata
	a EMPTY
	b EMPTY_SUPPLIER
	a (Lanv$a;Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;)V copySection
	a (Ljava/io/InputStream;)Lnet/minecraft/server/packs/resources/ResourceMetadata; fromJsonStream
	a (Ljava/util/Collection;)Lnet/minecraft/server/packs/resources/ResourceMetadata; copySections
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;)Ljava/util/Optional; getSection
net/minecraft/server/players/PlayerList net/minecraft/server/players/PlayerList
	A sendAllPlayerInfoIn
	a LOGGER
	b USERBANLIST_FILE
	c IPBANLIST_FILE
	d OPLIST_FILE
	e WHITELIST_FILE
	f CHAT_FILTERED_FULL
	g DUPLICATE_LOGIN_DISCONNECT_MESSAGE
	h maxPlayers
	i SEND_PLAYER_INFO_INTERVAL
	j BAN_DATE_FORMAT
	k server
	l players
	m playersByUUID
	n bans
	o ipBans
	p ops
	q whitelist
	r stats
	s advancements
	t playerIo
	u doWhiteList
	v registries
	w viewDistance
	x simulationDistance
	y allowCheatsForAllPlayers
	z ALLOW_LOGOUTIVATOR
	a ()V reloadWhiteList
	a (I)V setViewDistance
	a (Lcom/mojang/authlib/GameProfile;)V op
	a (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/server/level/ClientInformation;)Lnet/minecraft/server/level/EntityPlayer; getPlayerForLogin
	a (Ljava/lang/String;)Lnet/minecraft/server/level/EntityPlayer; getPlayerByName
	a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/IChatBaseComponent; canPlayerLogin
	a (Ljava/util/UUID;)Lnet/minecraft/server/level/EntityPlayer; getPlayer
	a (Lnet/minecraft/network/NetworkManager;Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/server/network/CommonListenerCookie;)V placeNewPlayer
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/function/Function;Z)V broadcastSystemMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V broadcastSystemMessage
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)Z verifyChatTrusted
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Ljava/util/function/Predicate;Lnet/minecraft/server/level/EntityPlayer;Lth$a;)V broadcastChatMessage
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/commands/CommandListenerWrapper;Lth$a;)V broadcastChatMessage
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/server/level/EntityPlayer;Lth$a;)V broadcastChatMessage
	a (Lnet/minecraft/network/protocol/Packet;)V broadcastAll
	a (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/resources/ResourceKey;)V broadcastAll
	a (Lnet/minecraft/server/ScoreboardServer;Lnet/minecraft/server/level/EntityPlayer;)V updateEntireScoreboard
	a (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/nbt/NBTTagCompound; load
	a (Lnet/minecraft/server/level/EntityPlayer;I)V sendPlayerPermissionLevel
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/server/level/WorldServer;)V sendLevelInfo
	a (Lnet/minecraft/server/level/EntityPlayer;Z)Lnet/minecraft/server/level/EntityPlayer; respawn
	a (Lnet/minecraft/server/level/WorldServer;)V addWorldborderListener
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/stats/ServerStatisticManager; getPlayerStats
	a (Lnet/minecraft/world/entity/player/EntityHuman;DDDDLnet/minecraft/resources/ResourceKey;Lnet/minecraft/network/protocol/Packet;)V broadcast
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/network/chat/IChatBaseComponent;)V broadcastSystemToTeam
	a (Z)V setUsingWhiteList
	b (I)V setSimulationDistance
	b (Lcom/mojang/authlib/GameProfile;)V deop
	b (Ljava/lang/String;)Ljava/util/List; getPlayersWithAddress
	b (Lnet/minecraft/server/level/EntityPlayer;)V save
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/network/chat/IChatBaseComponent;)V broadcastSystemToAllExceptTeam
	b (Z)V setAllowCheatsForAllPlayers
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	c (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	c (Lnet/minecraft/server/level/EntityPlayer;)V remove
	d ()V tick
	d (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	d (Lnet/minecraft/server/level/EntityPlayer;)V sendPlayerPermissionLevel
	e ()[Ljava/lang/String; getPlayerNamesArray
	e (Lcom/mojang/authlib/GameProfile;)Z disconnectAllPlayersWithProfile
	e (Lnet/minecraft/server/level/EntityPlayer;)V sendAllPlayerInfo
	f ()Lnet/minecraft/server/players/GameProfileBanList; getBans
	f (Lcom/mojang/authlib/GameProfile;)Z isOp
	f (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/server/AdvancementDataPlayer; getPlayerAdvancements
	g ()Lnet/minecraft/server/players/IpBanList; getIpBans
	h ()V saveAll
	i ()Lnet/minecraft/server/players/WhiteList; getWhiteList
	j ()[Ljava/lang/String; getWhiteListNames
	k ()Lnet/minecraft/server/players/OpList; getOps
	l ()[Ljava/lang/String; getOpNames
	m ()I getPlayerCount
	n ()I getMaxPlayers
	o ()Z isUsingWhitelist
	p ()I getViewDistance
	q ()I getSimulationDistance
	r ()Lnet/minecraft/nbt/NBTTagCompound; getSingleplayerData
	s ()V removeAll
	t ()Ljava/util/List; getPlayers
	u ()V reloadResources
	v ()Z isAllowCheatsForAllPlayers
net/minecraft/server/players/SleepStatus net/minecraft/server/players/SleepStatus
	a activePlayers
	b sleepingPlayers
	a ()V removeAllSleepers
	a (I)Z areEnoughSleeping
	a (ILjava/util/List;)Z areEnoughDeepSleeping
	a (Ljava/util/List;)Z update
	b ()I amountSleeping
	b (I)I sleepersNeeded
net/minecraft/sounds/Music net/minecraft/sounds/Music
	a CODEC
	b event
	c minDelay
	d maxDelay
	e replaceCurrentMusic
	a ()Lnet/minecraft/core/Holder; getEvent
	b ()I getMinDelay
	c ()I getMaxDelay
	d ()Z replaceCurrentMusic
net/minecraft/sounds/Musics net/minecraft/sounds/Musics
	a MENU
	b CREATIVE
	c CREDITS
	d END_BOSS
	e END
	f UNDER_WATER
	g GAME
	h ONE_SECOND
	i THIRTY_SECONDS
	j TEN_MINUTES
	k TWENTY_MINUTES
	l FIVE_MINUTES
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/sounds/Music; createGameMusic
net/minecraft/stats/RecipeBook net/minecraft/stats/RecipeBook
	a known
	b highlight
	c bookSettings
	a ()Lnet/minecraft/stats/RecipeBookSettings; getBookSettings
	a (Lnet/minecraft/resources/MinecraftKey;)V add
	a (Lnet/minecraft/stats/RecipeBook;)V copyOverData
	a (Lnet/minecraft/stats/RecipeBookSettings;)V setBookSettings
	a (Lnet/minecraft/world/inventory/ContainerRecipeBook;)Z isFiltering
	a (Lnet/minecraft/world/inventory/RecipeBookType;)Z isOpen
	a (Lnet/minecraft/world/inventory/RecipeBookType;Z)V setOpen
	a (Lnet/minecraft/world/inventory/RecipeBookType;ZZ)V setBookSetting
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)V add
	b (Lnet/minecraft/resources/MinecraftKey;)Z contains
	b (Lnet/minecraft/world/inventory/RecipeBookType;)Z isFiltering
	b (Lnet/minecraft/world/inventory/RecipeBookType;Z)V setFiltering
	b (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z contains
	c (Lnet/minecraft/resources/MinecraftKey;)V remove
	c (Lnet/minecraft/world/item/crafting/RecipeHolder;)V remove
	d (Lnet/minecraft/resources/MinecraftKey;)V addHighlight
	d (Lnet/minecraft/world/item/crafting/RecipeHolder;)Z willHighlight
	e (Lnet/minecraft/world/item/crafting/RecipeHolder;)V removeHighlight
	f (Lnet/minecraft/world/item/crafting/RecipeHolder;)V addHighlight
net/minecraft/stats/RecipeBookSettings net/minecraft/stats/RecipeBookSettings
	a TAG_FIELDS
	b states
	a ()Lnet/minecraft/stats/RecipeBookSettings; copy
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/stats/RecipeBookSettings; read
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/stats/RecipeBookSettings; read
	a (Lnet/minecraft/stats/RecipeBookSettings;)V replaceFrom
	a (Lnet/minecraft/world/inventory/RecipeBookType;)Z isOpen
	a (Lnet/minecraft/world/inventory/RecipeBookType;Z)V setOpen
	b (Lnet/minecraft/nbt/NBTTagCompound;)V write
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	b (Lnet/minecraft/world/inventory/RecipeBookType;)Z isFiltering
	b (Lnet/minecraft/world/inventory/RecipeBookType;Z)V setFiltering
net/minecraft/tags/BannerPatternTags net/minecraft/tags/BannerPatternTags
	a NO_ITEM_REQUIRED
	b PATTERN_ITEM_FLOWER
	c PATTERN_ITEM_CREEPER
	d PATTERN_ITEM_SKULL
	e PATTERN_ITEM_MOJANG
	f PATTERN_ITEM_GLOBE
	g PATTERN_ITEM_PIGLIN
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/BiomeTags net/minecraft/tags/BiomeTags
	A HAS_RUINED_PORTAL_JUNGLE
	B HAS_RUINED_PORTAL_OCEAN
	C HAS_RUINED_PORTAL_SWAMP
	D HAS_RUINED_PORTAL_MOUNTAIN
	E HAS_RUINED_PORTAL_STANDARD
	F HAS_SHIPWRECK_BEACHED
	G HAS_SHIPWRECK
	H HAS_STRONGHOLD
	I HAS_SWAMP_HUT
	J HAS_VILLAGE_DESERT
	K HAS_VILLAGE_PLAINS
	L HAS_VILLAGE_SAVANNA
	M HAS_VILLAGE_SNOWY
	N HAS_VILLAGE_TAIGA
	O HAS_TRAIL_RUINS
	P HAS_WOODLAND_MANSION
	Q HAS_NETHER_FORTRESS
	R HAS_NETHER_FOSSIL
	S HAS_BASTION_REMNANT
	T HAS_ANCIENT_CITY
	U HAS_RUINED_PORTAL_NETHER
	V HAS_END_CITY
	W REQUIRED_OCEAN_MONUMENT_SURROUNDING
	X MINESHAFT_BLOCKING
	Y PLAYS_UNDERWATER_MUSIC
	Z HAS_CLOSER_WATER_FOG
	a IS_DEEP_OCEAN
	aa WATER_ON_MAP_OUTLINES
	ab PRODUCES_CORALS_FROM_BONEMEAL
	ac INCREASED_FIRE_BURNOUT
	ad SNOW_GOLEM_MELTS
	ae WITHOUT_ZOMBIE_SIEGES
	af WITHOUT_PATROL_SPAWNS
	ag WITHOUT_WANDERING_TRADER_SPAWNS
	ah SPAWNS_COLD_VARIANT_FROGS
	ai SPAWNS_WARM_VARIANT_FROGS
	aj SPAWNS_GOLD_RABBITS
	ak SPAWNS_WHITE_RABBITS
	al REDUCED_WATER_AMBIENT_SPAWNS
	am ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT
	an POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS
	ao MORE_FREQUENT_DROWNED_SPAWNS
	ap ALLOWS_SURFACE_SLIME_SPAWNS
	aq SPAWNS_SNOW_FOXES
	b IS_OCEAN
	c IS_BEACH
	d IS_RIVER
	e IS_MOUNTAIN
	f IS_BADLANDS
	g IS_HILL
	h IS_TAIGA
	i IS_JUNGLE
	j IS_FOREST
	k IS_SAVANNA
	l IS_OVERWORLD
	m IS_NETHER
	n IS_END
	o STRONGHOLD_BIASED_TO
	p HAS_BURIED_TREASURE
	q HAS_DESERT_PYRAMID
	r HAS_IGLOO
	s HAS_JUNGLE_TEMPLE
	t HAS_MINESHAFT
	u HAS_MINESHAFT_MESA
	v HAS_OCEAN_MONUMENT
	w HAS_OCEAN_RUIN_COLD
	x HAS_OCEAN_RUIN_WARM
	y HAS_PILLAGER_OUTPOST
	z HAS_RUINED_PORTAL_DESERT
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/CatVariantTags net/minecraft/tags/CatVariantTags
	a DEFAULT_SPAWNS
	b FULL_MOON_SPAWNS
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/DamageTypeTags net/minecraft/tags/DamageTypeTags
	A ALWAYS_KILLS_ARMOR_STANDS
	a DAMAGES_HELMET
	b BYPASSES_ARMOR
	c BYPASSES_SHIELD
	d BYPASSES_INVULNERABILITY
	e BYPASSES_COOLDOWN
	f BYPASSES_EFFECTS
	g BYPASSES_RESISTANCE
	h BYPASSES_ENCHANTMENTS
	i IS_FIRE
	j IS_PROJECTILE
	k WITCH_RESISTANT_TO
	l IS_EXPLOSION
	m IS_FALL
	n IS_DROWNING
	o IS_FREEZING
	p IS_LIGHTNING
	q NO_ANGER
	r NO_IMPACT
	s ALWAYS_MOST_SIGNIFICANT_FALL
	t WITHER_IMMUNE_TO
	u IGNITES_ARMOR_STANDS
	v BURNS_ARMOR_STANDS
	w AVOIDS_GUARDIAN_THORNS
	x ALWAYS_TRIGGERS_SILVERFISH
	y ALWAYS_HURTS_ENDER_DRAGONS
	z NO_KNOCKBACK
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/GameEventTags net/minecraft/tags/GameEventTags
	a VIBRATIONS
	b WARDEN_CAN_LISTEN
	c SHRIEKER_CAN_LISTEN
	d IGNORE_VIBRATIONS_SNEAKING
	e ALLAY_CAN_LISTEN
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/InstrumentTags net/minecraft/tags/InstrumentTags
	a REGULAR_GOAT_HORNS
	b SCREAMING_GOAT_HORNS
	c GOAT_HORNS
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/PaintingVariantTags net/minecraft/tags/PaintingVariantTags
	a PLACEABLE
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/PoiTypeTags net/minecraft/tags/PoiTypeTags
	a ACQUIRABLE_JOB_SITE
	b VILLAGE
	c BEE_HOME
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/StructureTags net/minecraft/tags/StructureTags
	a EYE_OF_ENDER_LOCATED
	b DOLPHIN_LOCATED
	c ON_WOODLAND_EXPLORER_MAPS
	d ON_OCEAN_EXPLORER_MAPS
	e ON_SAVANNA_VILLAGE_MAPS
	f ON_DESERT_VILLAGE_MAPS
	g ON_PLAINS_VILLAGE_MAPS
	h ON_TAIGA_VILLAGE_MAPS
	i ON_SNOWY_VILLAGE_MAPS
	j ON_JUNGLE_EXPLORER_MAPS
	k ON_SWAMP_EXPLORER_MAPS
	l ON_TREASURE_MAPS
	m CATS_SPAWN_IN
	n CATS_SPAWN_AS_BLACK
	o VILLAGE
	p MINESHAFT
	q SHIPWRECK
	r RUINED_PORTAL
	s OCEAN_RUIN
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/TagEntry net/minecraft/tags/TagEntry
	a CODEC
	b FULL_CODEC
	c id
	d tag
	e required
	a ()Larf$f; elementOrTag
	a (Laqf$a;Ljava/util/function/Consumer;)Z build
	a (Ljava/util/function/Consumer;)V visitRequiredDependencies
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z verifyIfPresent
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/tags/TagEntry; element
	b (Ljava/util/function/Consumer;)V visitOptionalDependencies
	b (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/tags/TagEntry; optionalElement
	c (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/tags/TagEntry; tag
	d (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/tags/TagEntry; optionalTag
net/minecraft/tags/TagFile net/minecraft/tags/TagFile
	a CODEC
	b entries
	c replace
	a ()Ljava/util/List; entries
	b ()Z replace
net/minecraft/tags/TagKey net/minecraft/tags/TagKey
	a registry
	b location
	c VALUES
	a ()Lnet/minecraft/resources/ResourceKey; registry
	a (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/tags/TagKey; create
	b ()Lnet/minecraft/resources/MinecraftKey; location
	b (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; hashedCodec
	c (Lnet/minecraft/resources/ResourceKey;)Z isFor
	d (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
net/minecraft/util/Brightness net/minecraft/util/Brightness
	a LIGHT_VALUE_CODEC
	b CODEC
	c FULL_BRIGHT
	d block
	e sky
	a ()I pack
	a (I)Lnet/minecraft/util/Brightness; unpack
	b ()I block
	c ()I sky
net/minecraft/util/DebugBuffer net/minecraft/util/DebugBuffer
	a data
	b index
	a ()Ljava/util/List; dump
	a (Ljava/lang/Object;)V push
net/minecraft/util/DependencySorter net/minecraft/util/DependencySorter
	a contents
	a (Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)Z isCyclic
	a (Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V visitDependenciesAndElement
	a (Ljava/lang/Object;Larc$a;)Lnet/minecraft/util/DependencySorter; addEntry
	a (Ljava/util/function/BiConsumer;)V orderByDependencies
	b (Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V addDependencyIfNotCyclic
net/minecraft/util/ExtraCodecs net/minecraft/util/ExtraCodecs
	a JSON
	b COMPONENT
	c FLAT_COMPONENT
	d VECTOR3F
	e QUATERNIONF_COMPONENTS
	f AXISANGLE4F
	g QUATERNIONF
	h MATRIX4F
	i NON_NEGATIVE_INT
	j POSITIVE_INT
	k POSITIVE_FLOAT
	l PATTERN
	m INSTANT_ISO8601
	n BASE64_STRING
	o ESCAPED_STRING
	p TAG_OR_ELEMENT_ID
	q toOptionalLong
	r fromOptionalLong
	s BIT_SET
	t PROPERTY_MAP
	u GAME_PROFILE
	v NON_EMPTY_STRING
	w CODEPOINT
	x RESOURCE_PATH_CODEC
	y PROPERTY
	z GAME_PROFILE_WITHOUT_PROPERTIES
	a (FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec; floatRangeMinExclusiveWithMessage
	a (II)Lcom/mojang/serialization/Codec; intRange
	a (IILjava/util/function/Function;)Lcom/mojang/serialization/Codec; intRangeWithMessage
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; nonEmptyList
	a (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; xor
	a (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; withAlternative
	a (Lcom/mojang/serialization/Codec;Ljava/lang/String;)Lcom/mojang/serialization/MapCodec; strictOptionalField
	a (Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/Object;)Lcom/mojang/serialization/MapCodec; strictOptionalField
	a (Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; intervalCodec
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; validate
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; overrideLifecycle
	a (Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; asOptionalLong
	a (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec; validate
	a (Ljava/lang/Object;)Lcom/mojang/serialization/Codec$ResultFunction; orElsePartial
	a (Ljava/time/format/DateTimeFormatter;)Lcom/mojang/serialization/Codec; temporalCodec
	a (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; recursive
	a (Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; adaptJsonSerializer
	a (Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec; lazyInitializedCodec
	a (Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;I)Lcom/mojang/serialization/Codec; idResolverCodec
	b (II)Lcom/mojang/serialization/Codec; sizeLimitedString
	b (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; nonEmptyHolderSet
	b (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; orCompressed
	b (Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec; retrieveContext
	b (Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; stringResolverCodec
	c (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; catchDecoderException
	c (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Larf$b; either
	c (Ljava/util/function/Function;)Ljava/util/function/Function; ensureHomogenous
	d (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; object2BooleanMap
	d (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Larf$e; strictUnboundedMap
	e (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; withAlternative
net/minecraft/util/FastBufferedInputStream net/minecraft/util/FastBufferedInputStream
	a DEFAULT_BUFFER_SIZE
	b in
	c buffer
	d limit
	e position
	a ()I bytesInBuffer
	b ()V fill
net/minecraft/util/FileZipper net/minecraft/util/FileZipper
	a LOGGER
	b outputFile
	c tempFile
	d fs
	a (Ljava/nio/file/Path;)V add
	a (Ljava/nio/file/Path;Ljava/io/File;)V add
	a (Ljava/nio/file/Path;Ljava/lang/String;)V add
net/minecraft/util/FutureChain net/minecraft/util/FutureChain
	b LOGGER
	c head
	d checkedExecutor
	e closed
net/minecraft/util/InclusiveRange net/minecraft/util/InclusiveRange
	a INT
	b minInclusive
	c maxInclusive
	a ()Ljava/lang/Comparable; minInclusive
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Lcom/mojang/serialization/Codec;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/Comparable;)Z isValueInRange
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/DataResult; create
	a (Lnet/minecraft/util/InclusiveRange;)Z contains
	b ()Ljava/lang/Comparable; maxInclusive
net/minecraft/util/KeyDispatchDataCodec net/minecraft/util/KeyDispatchDataCodec
	a codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/KeyDispatchDataCodec; of
	a (Lcom/mojang/serialization/MapCodec;)Lnet/minecraft/util/KeyDispatchDataCodec; of
net/minecraft/util/LinearCongruentialGenerator net/minecraft/util/LinearCongruentialGenerator
	a MULTIPLIER
	b INCREMENT
	a (JJ)J next
net/minecraft/util/MemoryReserve net/minecraft/util/MemoryReserve
	a reserve
	a ()V allocate
	b ()V release
net/minecraft/util/ModCheck net/minecraft/util/ModCheck
	a confidence
	b description
	a ()Z shouldReportAsModified
	a (Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/util/ModCheck; identify
	a (Lnet/minecraft/util/ModCheck;)Lnet/minecraft/util/ModCheck; merge
	b ()Ljava/lang/String; fullDescription
	c ()Larv$a; confidence
	d ()Ljava/lang/String; description
net/minecraft/util/NativeModuleLister net/minecraft/util/NativeModuleLister
	a LOGGER
	b LANG_MASK
	c DEFAULT_LANG
	d CODEPAGE_MASK
	e DEFAULT_CODEPAGE
	a ()Ljava/util/List; listModules
	a (Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Lcom/sun/jna/Pointer; queryVersionValue
	a (Ljava/lang/String;)Ljava/util/Optional; tryGetVersion
	a (Ljava/lang/String;II)Ljava/lang/String; langTableKey
	a (Lnet/minecraft/CrashReportSystemDetails;)V addCrashSection
	a ([I)Ljava/util/OptionalInt; findLangAndCodepage
	b (Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Ljava/lang/String; queryVersionString
net/minecraft/util/RandomSource net/minecraft/util/RandomSource
	a GAUSSIAN_SPREAD_FACTOR
	a ()Lnet/minecraft/util/RandomSource; create
	a (DD)D triangle
	a (I)I nextInt
	a (II)I nextIntBetweenInclusive
	a (J)Lnet/minecraft/util/RandomSource; create
	b ()Lnet/minecraft/util/RandomSource; createThreadSafe
	b (I)V consumeCount
	b (II)I nextInt
	b (J)V setSeed
	c ()Lnet/minecraft/util/RandomSource; createNewThreadLocalInstance
	d ()Lnet/minecraft/util/RandomSource; fork
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; forkPositional
	f ()I nextInt
	g ()J nextLong
	h ()Z nextBoolean
	i ()F nextFloat
	j ()D nextDouble
	k ()D nextGaussian
net/minecraft/util/ResourceLocationPattern net/minecraft/util/ResourceLocationPattern
	a CODEC
	b namespacePattern
	c namespacePredicate
	d pathPattern
	e pathPredicate
	f locationPredicate
	a ()Ljava/util/function/Predicate; namespacePredicate
	b ()Ljava/util/function/Predicate; pathPredicate
	c ()Ljava/util/function/Predicate; locationPredicate
net/minecraft/util/SampleLogger net/minecraft/util/SampleLogger
	a CAPACITY
	b samples
	c start
	d size
	a ()I capacity
	a (I)J get
	a (J)V logSample
	b ()I size
	b (I)I wrapIndex
	c ()V reset
net/minecraft/util/SegmentedAnglePrecision net/minecraft/util/SegmentedAnglePrecision
	a mask
	b precision
	c degreeToAngle
	d angleToDegree
	a ()I getMask
	a (F)I fromDegreesWithTurns
	a (I)F toDegreesWithTurns
	a (II)Z isSameAxis
	a (Lnet/minecraft/core/EnumDirection;)I fromDirection
	b (F)I fromDegrees
	b (I)F toDegrees
	c (I)I normalize
net/minecraft/util/SignatureValidator net/minecraft/util/SignatureValidator
	a NO_VALIDATION
	b LOGGER
	a (Lcom/mojang/authlib/yggdrasil/ServicesKeySet;Lcom/mojang/authlib/yggdrasil/ServicesKeyType;)Lnet/minecraft/util/SignatureValidator; from
	a (Ljava/security/PublicKey;Ljava/lang/String;)Lnet/minecraft/util/SignatureValidator; from
	a (Lnet/minecraft/util/SignatureUpdater;[BLjava/security/Signature;)Z verifySignature
	a ([B[B)Z validate
net/minecraft/util/Signer net/minecraft/util/Signer
	a LOGGER
	a (Ljava/security/PrivateKey;Ljava/lang/String;)Lnet/minecraft/util/Signer; from
	a ([B)[B sign
net/minecraft/util/SimpleBitStorage net/minecraft/util/SimpleBitStorage
	a MAGIC
	b data
	c bits
	d mask
	e size
	f valuesPerLong
	g divideMul
	h divideAdd
	i divideShift
	a ()[J getRaw
	a (I)I get
	a (II)I getAndSet
	a (Ljava/util/function/IntConsumer;)V getAll
	a ([I)V unpack
	b ()I getSize
	b (I)I cellIndex
	b (II)V set
	c ()I getBits
	d ()Lnet/minecraft/util/DataBits; copy
net/minecraft/util/SingleKeyCache net/minecraft/util/SingleKeyCache
	a computeValue
	b cacheKey
	c cachedValue
	a (Ljava/lang/Object;)Ljava/lang/Object; getValue
net/minecraft/util/StringDecomposer net/minecraft/util/StringDecomposer
	a REPLACEMENT_CHAR
	b STOP_ITERATION
	a (Ljava/lang/String;)Ljava/lang/String; filterBrokenSurrogates
	a (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/util/FormattedStringEmpty;)Z iterateFormatted
	a (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/util/FormattedStringEmpty;)Z iterateFormatted
	a (Ljava/lang/String;Lnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/util/FormattedStringEmpty;)Z iterate
	a (Lnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/util/FormattedStringEmpty;IC)Z feedChar
	a (Lnet/minecraft/network/chat/IChatFormatted;)Ljava/lang/String; getPlainText
	a (Lnet/minecraft/network/chat/IChatFormatted;Lnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/util/FormattedStringEmpty;)Z iterateFormatted
	b (Ljava/lang/String;Lnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/util/FormattedStringEmpty;)Z iterateBackwards
	c (Ljava/lang/String;Lnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/util/FormattedStringEmpty;)Z iterateFormatted
net/minecraft/util/TaskChainer net/minecraft/util/TaskChainer
	a LOGGER
net/minecraft/util/ThreadingDetector net/minecraft/util/ThreadingDetector
	a LOGGER
	b name
	c lock
	d stackTraceLock
	e threadThatFailedToAcquire
	f fullException
	a ()V checkAndLock
	a (Ljava/lang/String;Ljava/lang/Thread;)Lnet/minecraft/ReportedException; makeThreadingException
	a (Ljava/lang/Thread;)Ljava/lang/String; stackTrace
	b ()V checkAndUnlock
net/minecraft/util/ToFloatFunction net/minecraft/util/ToFloatFunction
	a IDENTITY
	a (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)Lnet/minecraft/util/ToFloatFunction; createUnlimited
	a (Ljava/lang/Object;)F apply
	a (Ljava/util/function/Function;)Lnet/minecraft/util/ToFloatFunction; comap
	b ()F minValue
	c ()F maxValue
net/minecraft/util/Unit net/minecraft/util/Unit
	a INSTANCE
	b $VALUES
	a ()[Lnet/minecraft/util/Unit; $values
net/minecraft/util/ZeroBitStorage net/minecraft/util/ZeroBitStorage
	a RAW
	b size
	a ()[J getRaw
	a (I)I get
	a (II)I getAndSet
	a (Ljava/util/function/IntConsumer;)V getAll
	a ([I)V unpack
	b ()I getSize
	b (II)V set
	c ()I getBits
	d ()Lnet/minecraft/util/DataBits; copy
net/minecraft/util/datafix/DataFixTypes net/minecraft/util/datafix/DataFixTypes
	a LEVEL
	b PLAYER
	c CHUNK
	d HOTBAR
	e OPTIONS
	f STRUCTURE
	g STATS
	h SAVED_DATA_COMMAND_STORAGE
	i SAVED_DATA_FORCED_CHUNKS
	j SAVED_DATA_MAP_DATA
	k SAVED_DATA_MAP_INDEX
	l SAVED_DATA_RAIDS
	m SAVED_DATA_RANDOM_SEQUENCES
	n SAVED_DATA_SCOREBOARD
	o SAVED_DATA_STRUCTURE_FEATURE_INDICES
	p ADVANCEMENTS
	q POI_CHUNK
	r WORLD_GEN_SETTINGS
	s ENTITY_CHUNK
	t TYPES_FOR_LEVEL_LIST
	u type
	v $VALUES
	a ()I currentVersion
	a (Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic; updateToCurrentVersion
	a (Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; update
	a (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/nbt/NBTTagCompound;I)Lnet/minecraft/nbt/NBTTagCompound; updateToCurrentVersion
	a (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/nbt/NBTTagCompound;II)Lnet/minecraft/nbt/NBTTagCompound; update
	a (Lcom/mojang/serialization/Codec;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/serialization/Codec; wrapCodec
	b ()[Lnet/minecraft/util/datafix/DataFixTypes; $values
net/minecraft/util/datafix/fixes/AbstractPoiSectionFix net/minecraft/util/datafix/fixes/AbstractPoiSectionFix
	a name
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; processRecords
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; processSection
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; processSectionRecords
net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix
	a name
	b flagValue
	c flagKey
	d typeReference
net/minecraft/util/datafix/fixes/BlendingDataFix net/minecraft/util/datafix/fixes/BlendingDataFix
	a name
	b STATUSES_TO_SKIP_BLENDING
	a (Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; updateBlendingData
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic; updateChunkTag
net/minecraft/util/datafix/fixes/BlockEntityRenameFix net/minecraft/util/datafix/fixes/BlockEntityRenameFix
	a name
	b nameChangeLookup
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lcom/mojang/datafixers/DataFix; create
net/minecraft/util/datafix/fixes/BlockEntitySignDoubleSidedEditableTextFix net/minecraft/util/datafix/fixes/BlockEntitySignDoubleSidedEditableTextFix
	a FILTERED_CORRECT
	b DEFAULT_COLOR
	c EMPTY_COMPONENT
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/stream/Stream; getLines
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixFrontTextTag
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; createDefaultText
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; createEmptyLines
net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw
	a name
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
net/minecraft/util/datafix/fixes/CavesAndCliffsRenames net/minecraft/util/datafix/fixes/CavesAndCliffsRenames
	a RENAMES
net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix
	a DATAFIXER_CONTEXT_TAG
	b BLOCKS_PER_SECTION
	c DEFAULT_BIOME
	d NAME
	e OLD_SECTION_COUNT
	f NEW_SECTION_COUNT
	g NEW_MIN_SECTION_Y
	h LONGS_PER_SECTION
	i HEIGHTMAP_BITS
	j HEIGHTMAP_MASK
	k HEIGHTMAP_OFFSET
	l HEIGHTMAP_TYPES
	m STATUS_IS_OR_AFTER_SURFACE
	n STATUS_IS_OR_AFTER_NOISE
	o BLOCKS_BEFORE_FEATURE_STATUS
	p BIOME_CONTAINER_LAYER_SIZE
	q BIOME_CONTAINER_SIZE
	r BIOME_CONTAINER_TOP_LAYER_OFFSET
	s BIOMES_BY_ID
	a (I)I ceillog2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; shiftUpgradeData
	a (Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; updateCarvingMasks
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; makePalettedContainer
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/util/List;)Lcom/mojang/serialization/Dynamic; padPaletteEntries
	a (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lcom/mojang/serialization/Dynamic; makeBiomeContainer
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; addPaddingEntries
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic; predictChunkStatusBeforeSurface
	a (Lcom/mojang/serialization/Dynamic;ZILorg/apache/commons/lang3/mutable/MutableBoolean;)[Lcom/mojang/serialization/Dynamic; getBiomeContainers
	a (Lcom/mojang/serialization/Dynamic;ZZZLjava/util/function/Supplier;)Lcom/mojang/serialization/Dynamic; updateChunkTag
	a ([II)I getOldBiome
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateHeightmaps
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; makeOptimizedPalettedContainer
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; getFixedHeightmap
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; makePalettedContainer
net/minecraft/util/datafix/fixes/ChunkProtoTickListFix net/minecraft/util/datafix/fixes/ChunkProtoTickListFix
	a SECTION_WIDTH
	b ALWAYS_WATERLOGGED
	a (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; getBlock
	a (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;BIILjava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic; makeTickList
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIIILjava/util/function/Function;)Lcom/mojang/serialization/Dynamic; createTick
	b (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; getLiquid
net/minecraft/util/datafix/fixes/CriteriaRenameFix net/minecraft/util/datafix/fixes/CriteriaRenameFix
	a name
	b advancementId
	c conversions
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixAdvancements
net/minecraft/util/datafix/fixes/DecoratedPotFieldRenameFix net/minecraft/util/datafix/fixes/DecoratedPotFieldRenameFix
	a DECORATED_POT_ID
net/minecraft/util/datafix/fixes/DropInvalidSignDataFix net/minecraft/util/datafix/fixes/DropInvalidSignDataFix
	a EMPTY_COMPONENT
	b FIELDS_TO_DROP
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixText
net/minecraft/util/datafix/fixes/EffectDurationFix net/minecraft/util/datafix/fixes/EffectDurationFix
	a ITEM_TYPES
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixEffect
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateEntity
net/minecraft/util/datafix/fixes/EntityVariantFix net/minecraft/util/datafix/fixes/EntityVariantFix
	a fieldName
	b idConversions
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic; updateAndRename
net/minecraft/util/datafix/fixes/FeatureFlagRemoveFix net/minecraft/util/datafix/fixes/FeatureFlagRemoveFix
	a name
	b flagsToRemove
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/GoatHornIdFix net/minecraft/util/datafix/fixes/GoatHornIdFix
	a INSTRUMENTS
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixItemStackTag
net/minecraft/util/datafix/fixes/ItemRemoveBlockEntityTagFix net/minecraft/util/datafix/fixes/ItemRemoveBlockEntityTagFix
	a items
net/minecraft/util/datafix/fixes/ItemStackTagFix net/minecraft/util/datafix/fixes/ItemStackTagFix
	a name
	b idFilter
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixItemStackTag
net/minecraft/util/datafix/fixes/MobEffectIdFix net/minecraft/util/datafix/fixes/MobEffectIdFix
	a ID_MAP
	b MOB_EFFECT_INSTANCE_CARRIER_ITEMS
	a ()Lcom/mojang/datafixers/TypeRewriteRule; blockEntityFixer
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateNamedChoice
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateMobEffectInstance
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateSuspiciousStewEntry
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional; getAndConvertMobEffectId
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; updateMobEffectIdField
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; renameField
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;)Lcom/mojang/serialization/Dynamic; replaceField
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/util/Optional;)Lcom/mojang/serialization/Dynamic; setFieldIfPresent
	b ()Lcom/mojang/datafixers/TypeRewriteRule; entityFixer
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateSuspiciousStewEntry
	b (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; updateMobEffectIdField
	c ()Lcom/mojang/datafixers/TypeRewriteRule; playerFixer
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixMooshroomTag
	c (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; updateMobEffectInstanceList
	d ()Lcom/mojang/datafixers/TypeRewriteRule; itemStackFixer
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixArrowTag
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixAreaEffectCloudTag
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateLivingEntityTag
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixSuspiciousStewTag
net/minecraft/util/datafix/fixes/NamespacedTypeRenameFix net/minecraft/util/datafix/fixes/NamespacedTypeRenameFix
	a name
	b type
	c renamer
net/minecraft/util/datafix/fixes/PoiTypeRemoveFix net/minecraft/util/datafix/fixes/PoiTypeRemoveFix
	a typesToKeep
	a (Lcom/mojang/serialization/Dynamic;)Z shouldKeepRecord
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; processRecords
net/minecraft/util/datafix/fixes/PoiTypeRenameFix net/minecraft/util/datafix/fixes/PoiTypeRenameFix
	a renamer
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; processRecords
net/minecraft/util/datafix/fixes/RemapChunkStatusFix net/minecraft/util/datafix/fixes/RemapChunkStatusFix
	a name
	b mapper
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixStatus
net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix
	a INDEX_PATTERN
	b PIECE_TYPE
	c FEATURES
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixFeature
	a (Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic; get
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; getReplacement
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; updateChildren
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateChildren
net/minecraft/util/datafix/fixes/ScoreboardDisplaySlotFix net/minecraft/util/datafix/fixes/ScoreboardDisplaySlotFix
	a SLOT_RENAMES
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/StatsRenameFix net/minecraft/util/datafix/fixes/StatsRenameFix
	a name
	b renames
	a ()Lcom/mojang/datafixers/TypeRewriteRule; createCriteriaRule
	b ()Lcom/mojang/datafixers/TypeRewriteRule; createStatRule
net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix
	a CONVERSION_MAP
	a (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; updateStart
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Lcom/mojang/serialization/Dynamic;Lazo$a;)Ljava/util/Optional; guessConfiguration
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateStarts
	b (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; updateReference
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateReferences
	c (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; findUpdatedStructureType
net/minecraft/util/datafix/fixes/VariantRenameFix net/minecraft/util/datafix/fixes/VariantRenameFix
	a renames
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix
	a WAS_PREVIOUSLY_INCREASED_KEY
	b NAME
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateLayers
net/minecraft/util/profiling/jfr/Environment net/minecraft/util/profiling/jfr/Environment
	a CLIENT
	b SERVER
	c description
	d $VALUES
	a ()Ljava/lang/String; getDescription
	a (Lnet/minecraft/server/MinecraftServer;)Lnet/minecraft/util/profiling/jfr/Environment; from
	b ()[Lnet/minecraft/util/profiling/jfr/Environment; $values
net/minecraft/util/profiling/jfr/JfrProfiler net/minecraft/util/profiling/jfr/JfrProfiler
	a ROOT_CATEGORY
	b WORLD_GEN_CATEGORY
	c TICK_CATEGORY
	d NETWORK_CATEGORY
	f LOGGER
	g CUSTOM_EVENTS
	h FLIGHT_RECORDER_CONFIG
	i DATE_TIME_FORMATTER
	j INSTANCE
	k recording
	l currentAverageTickTime
	m networkTrafficByAddress
	a ()Lnet/minecraft/util/profiling/jfr/JfrProfiler; getInstance
	a (F)V onServerTick
	a (Ljava/io/Reader;Lnet/minecraft/util/profiling/jfr/Environment;)Z start
	a (Ljava/net/SocketAddress;)Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b; networkStatFor
	a (Lnet/minecraft/network/EnumProtocol;ILjava/net/SocketAddress;I)V onPacketReceived
	a (Lnet/minecraft/util/profiling/jfr/Environment;)Z start
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; onChunkGenerate
	b ()Ljava/nio/file/Path; stop
	b (Lnet/minecraft/network/EnumProtocol;ILjava/net/SocketAddress;I)V onPacketSent
	c ()Z isRunning
	d ()Z isAvailable
	e ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; onWorldLoadedStarted
	f ()V setupSummaryListener
net/minecraft/util/profiling/jfr/JvmProfiler net/minecraft/util/profiling/jfr/JvmProfiler
	e INSTANCE
	a (F)V onServerTick
	a (Lnet/minecraft/network/EnumProtocol;ILjava/net/SocketAddress;I)V onPacketReceived
	a (Lnet/minecraft/util/profiling/jfr/Environment;)Z start
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; onChunkGenerate
	b ()Ljava/nio/file/Path; stop
	b (Lnet/minecraft/network/EnumProtocol;ILjava/net/SocketAddress;I)V onPacketSent
	c ()Z isRunning
	d ()Z isAvailable
	e ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; onWorldLoadedStarted
net/minecraft/util/profiling/jfr/Percentiles net/minecraft/util/profiling/jfr/Percentiles
	a DEFAULT_INDEXES
	a (Ljava/util/Map;)Ljava/util/Map; sorted
	a ([D)Ljava/util/Map; evaluate
	a ([J)Ljava/util/Map; evaluate
net/minecraft/util/profiling/jfr/SummaryReporter net/minecraft/util/profiling/jfr/SummaryReporter
	a LOGGER
	b onDeregistration
	a (Ljava/nio/file/Path;)V recordingStopped
	a (Ljava/util/function/Supplier;)V infoWithFallback
	a (Ljava/util/function/Supplier;Ljava/lang/Throwable;)V warnWithFallback
net/minecraft/util/profiling/jfr/parse/JfrStatsParser net/minecraft/util/profiling/jfr/parse/JfrStatsParser
	a recordingStarted
	b recordingEnded
	c chunkGenStats
	d cpuLoadStat
	e receivedPackets
	f sentPackets
	g fileWrites
	h fileReads
	i garbageCollections
	j gcTotalDuration
	k gcHeapStats
	l threadAllocationStats
	m tickTimes
	n worldCreationDuration
	a ()Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult; results
	a (Ljava/nio/file/Path;)Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult; parse
	a (Ljava/time/Duration;Ljava/util/Map;)Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; collectPacketStats
	a (Ljava/util/stream/Stream;)V capture
	a (Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V incrementPacket
	a (Ljdk/jfr/consumer/RecordedEvent;Ljava/util/List;Ljava/lang/String;)V appendFileIO
net/minecraft/util/profiling/jfr/parse/JfrStatsResult net/minecraft/util/profiling/jfr/parse/JfrStatsResult
	a recordingStarted
	b recordingEnded
	c recordingDuration
	d worldCreationDuration
	e tickTimes
	f cpuLoadStats
	g heapSummary
	h threadAllocationSummary
	i receivedPacketsSummary
	j sentPacketsSummary
	k fileWrites
	l fileReads
	m chunkGenStats
	a ()Ljava/util/List; chunkGenSummary
	b ()Ljava/lang/String; asJson
	c ()Ljava/time/Instant; recordingStarted
	d ()Ljava/time/Instant; recordingEnded
	e ()Ljava/time/Duration; recordingDuration
	f ()Ljava/time/Duration; worldCreationDuration
	g ()Ljava/util/List; tickTimes
	h ()Ljava/util/List; cpuLoadStats
	i ()Lbel$a; heapSummary
	j ()Lben$a; threadAllocationSummary
	k ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; receivedPacketsSummary
	l ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; sentPacketsSummary
	m ()Lbek$a; fileWrites
	n ()Lbek$a; fileReads
	o ()Ljava/util/List; chunkGenStats
net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer
	a gson
	b BYTES_PER_SECOND
	c COUNT
	d DURATION_NANOS_TOTAL
	e TOTAL_BYTES
	f COUNT_PER_SECOND
	a (Lbek$a;)Lcom/google/gson/JsonElement; fileIoSummary
	a (Lbel$a;)Lcom/google/gson/JsonElement; heap
	a (Lben$a;)Lcom/google/gson/JsonElement; threadAllocations
	a (Ljava/util/List;)Lcom/google/gson/JsonElement; chunkGen
	a (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Ljava/lang/String; format
	a (Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary;)Lcom/google/gson/JsonElement; packets
	b (Ljava/util/List;)Lcom/google/gson/JsonElement; serverTicks
	b (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Lcom/google/gson/JsonElement; fileIO
	c (Ljava/util/List;)Lcom/google/gson/JsonElement; cpu
	c (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Lcom/google/gson/JsonElement; network
net/minecraft/util/profiling/jfr/stats/ChunkGenStat net/minecraft/util/profiling/jfr/stats/ChunkGenStat
	a duration
	b chunkPos
	c worldPos
	d status
	e level
	a ()Ljava/time/Duration; duration
	a (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/ChunkGenStat; from
	b ()Lnet/minecraft/world/level/ChunkCoordIntPair; chunkPos
	c ()Lnet/minecraft/server/level/BlockPosition2D; worldPos
	d ()Lnet/minecraft/world/level/chunk/ChunkStatus; status
	e ()Ljava/lang/String; level
net/minecraft/util/profiling/jfr/stats/CpuLoadStat net/minecraft/util/profiling/jfr/stats/CpuLoadStat
	a jvm
	b userJvm
	c system
	a ()D jvm
	a (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/CpuLoadStat; from
	b ()D userJvm
	c ()D system
net/minecraft/util/profiling/jfr/stats/FileIOStat net/minecraft/util/profiling/jfr/stats/FileIOStat
	a duration
	b path
	c bytes
	a ()Ljava/time/Duration; duration
	a (Ljava/time/Duration;Ljava/util/List;)Lbek$a; summary
	b ()Ljava/lang/String; path
	c ()J bytes
net/minecraft/util/profiling/jfr/stats/GcHeapStat net/minecraft/util/profiling/jfr/stats/GcHeapStat
	a timestamp
	b heapUsed
	c timing
	a ()Ljava/time/Instant; timestamp
	a (Ljava/time/Duration;Ljava/util/List;Ljava/time/Duration;I)Lbel$a; summary
	a (Ljava/util/List;)D calculateAllocationRatePerSecond
	a (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat; from
	b ()J heapUsed
	c ()Lbel$b; timing
net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary
	a totalPacketCountAndSize
	b largestSizeContributors
	c recordingDuration
	a ()D getCountsPerSecond
	b ()D getSizePerSecond
	c ()J getTotalCount
	d ()J getTotalSize
	e ()Ljava/util/List; largestSizeContributors
net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat
	a timestamp
	b threadName
	c totalBytes
	d UNKNOWN_THREAD
	a ()Ljava/time/Instant; timestamp
	a (Ljava/util/List;)Lben$a; summary
	a (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat; from
	b ()Ljava/lang/String; threadName
	c ()J totalBytes
net/minecraft/util/profiling/jfr/stats/TickTimeStat net/minecraft/util/profiling/jfr/stats/TickTimeStat
	a timestamp
	b currentAverage
	a ()Ljava/time/Instant; timestamp
	a (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/TickTimeStat; from
	b ()Ljava/time/Duration; currentAverage
net/minecraft/util/profiling/jfr/stats/TimedStatSummary net/minecraft/util/profiling/jfr/stats/TimedStatSummary
	a fastest
	b slowest
	c secondSlowest
	d count
	e percentilesNanos
	f totalDuration
	a ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; fastest
	a (Ljava/util/List;)Lnet/minecraft/util/profiling/jfr/stats/TimedStatSummary; summary
	b ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; slowest
	c ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; secondSlowest
	d ()I count
	e ()Ljava/util/Map; percentilesNanos
	f ()Ljava/time/Duration; totalDuration
net/minecraft/util/profiling/metrics/MetricCategory net/minecraft/util/profiling/metrics/MetricCategory
	a PATH_FINDING
	b EVENT_LOOPS
	c MAIL_BOXES
	d TICK_LOOP
	e JVM
	f CHUNK_RENDERING
	g CHUNK_RENDERING_DISPATCHING
	h CPU
	i GPU
	j description
	k $VALUES
	a ()Ljava/lang/String; getDescription
	b ()[Lnet/minecraft/util/profiling/metrics/MetricCategory; $values
net/minecraft/util/profiling/metrics/MetricSampler net/minecraft/util/profiling/metrics/MetricSampler
	a thresholdTest
	b name
	c category
	d sampler
	e ticks
	f values
	g isRunning
	h beforeTick
	i currentValue
	a ()V onStartTick
	a (I)V onEndTick
	a (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/util/profiling/metrics/MetricSampler; create
	a (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/function/DoubleSupplier;)Lnet/minecraft/util/profiling/metrics/MetricSampler; create
	a (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)Lbet$a; builder
	b ()V onFinished
	c ()Ljava/util/function/DoubleSupplier; getSampler
	d ()Ljava/lang/String; getName
	e ()Lnet/minecraft/util/profiling/metrics/MetricCategory; getCategory
	f ()Lbet$b; result
	g ()Z triggersThreshold
	h ()V verifyRunning
net/minecraft/util/profiling/metrics/MetricsRegistry net/minecraft/util/profiling/metrics/MetricsRegistry
	a INSTANCE
	b measuredInstances
	a ()Ljava/util/List; getRegisteredSamplers
	a (Ljava/util/Map;)Ljava/util/List; aggregateDuplicates
	a (Lnet/minecraft/util/profiling/metrics/ProfilerMeasured;)V add
net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder
	a PROFILING_MAX_DURATION_SECONDS
	b globalOnReportFinished
	c deviationsBySampler
	d taskProfiler
	e ioExecutor
	f metricsPersister
	g onProfilingEnd
	h onReportFinished
	i metricsSamplerProvider
	j wallTimeSource
	k deadlineNano
	l currentTick
	m singleTickProfiler
	n killSwitch
	o thisTickSamplers
	a ()V end
	a (Ljava/util/Collection;)V cleanup
	a (Ljava/util/function/Consumer;)V registerGlobalCompletionCallback
	a (Lnet/minecraft/util/profiling/MethodProfilerResults;)V scheduleSaveResults
	a (Lnet/minecraft/util/profiling/metrics/MetricsSamplerProvider;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lnet/minecraft/util/profiling/metrics/storage/MetricsPersister;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lnet/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder; createStarted
	b ()V cancel
	c ()V startTick
	d ()V endTick
	e ()Z isRecording
	f ()Lnet/minecraft/util/profiling/GameProfilerFiller; getProfiler
	g ()V verifyStarted
net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder
	a INSTANCE
	a ()V end
	b ()V cancel
	c ()V startTick
	d ()V endTick
	e ()Z isRecording
	f ()Lnet/minecraft/util/profiling/GameProfilerFiller; getProfiler
net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter
	a previouslyFoundSamplerNames
	a (Ljava/util/function/Supplier;)Ljava/util/Set; newSamplersFoundInProfiler
	a (Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;)Lnet/minecraft/util/profiling/metrics/MetricSampler; samplerForProfilingPath
net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider
	a LOGGER
	b samplers
	c samplerFactory
	a ()Ljava/util/Set; runtimeIndependentSamplers
	a (Ljava/util/function/LongSupplier;)Lnet/minecraft/util/profiling/metrics/MetricSampler; tickTimeSampler
	a (Ljava/util/function/Supplier;)Ljava/util/Set; samplers
net/minecraft/util/profiling/metrics/storage/MetricsPersister net/minecraft/util/profiling/metrics/storage/MetricsPersister
	a PROFILING_RESULTS_DIR
	b METRICS_DIR_NAME
	c DEVIATIONS_DIR_NAME
	d PROFILING_RESULT_FILENAME
	e LOGGER
	f rootFolderName
	a (Ljava/util/Map;Ljava/nio/file/Path;)V saveDeviations
	a (Ljava/util/Set;Ljava/nio/file/Path;)V saveMetrics
	a (Ljava/util/Set;Ljava/util/Map;Lnet/minecraft/util/profiling/MethodProfilerResults;)Ljava/nio/file/Path; saveReports
	a (Lnet/minecraft/util/profiling/MethodProfilerResults;Ljava/nio/file/Path;)V saveProfilingTaskExecutionResult
	a (Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/List;Ljava/nio/file/Path;)V saveCategory
net/minecraft/util/profiling/metrics/storage/RecordedDeviation net/minecraft/util/profiling/metrics/storage/RecordedDeviation
	a timestamp
	b tick
	c profilerResultAtTick
net/minecraft/util/random/Weight net/minecraft/util/random/Weight
	a CODEC
	b ONE
	c LOGGER
	d value
	a ()I asInt
	a (I)Lnet/minecraft/util/random/Weight; of
	b (I)V validateWeight
net/minecraft/util/random/WeightedRandomList net/minecraft/util/random/WeightedRandomList
	a totalWeight
	b items
	a (Ljava/util/List;)Lnet/minecraft/util/random/WeightedRandomList; create
	a ([Lnet/minecraft/util/random/WeightedEntry;)Lnet/minecraft/util/random/WeightedRandomList; create
	b (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandom
	c ()Lnet/minecraft/util/random/WeightedRandomList; create
	c (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	d ()Z isEmpty
	e ()Ljava/util/List; unwrap
net/minecraft/util/valueproviders/BiasedToBottomInt net/minecraft/util/valueproviders/BiasedToBottomInt
	a CODEC
	b minInclusive
	f maxInclusive
	a ()I getMinValue
	a (II)Lnet/minecraft/util/valueproviders/BiasedToBottomInt; of
	a (Lnet/minecraft/util/RandomSource;)I sample
	b ()I getMaxValue
	c ()Lnet/minecraft/util/valueproviders/IntProviderType; getType
net/minecraft/util/valueproviders/ClampedInt net/minecraft/util/valueproviders/ClampedInt
	a CODEC
	b source
	f minInclusive
	g maxInclusive
	a ()I getMinValue
	a (Lnet/minecraft/util/RandomSource;)I sample
	a (Lnet/minecraft/util/valueproviders/IntProvider;II)Lnet/minecraft/util/valueproviders/ClampedInt; of
	b ()I getMaxValue
	c ()Lnet/minecraft/util/valueproviders/IntProviderType; getType
net/minecraft/util/valueproviders/ClampedNormalFloat net/minecraft/util/valueproviders/ClampedNormalFloat
	a CODEC
	b mean
	d deviation
	e min
	f max
	a ()F getMinValue
	a (FFFF)Lnet/minecraft/util/valueproviders/ClampedNormalFloat; of
	a (Lnet/minecraft/util/RandomSource;)F sample
	a (Lnet/minecraft/util/RandomSource;FFFF)F sample
	b ()F getMaxValue
	c ()Lnet/minecraft/util/valueproviders/FloatProviderType; getType
net/minecraft/util/valueproviders/ClampedNormalInt net/minecraft/util/valueproviders/ClampedNormalInt
	a CODEC
	b mean
	f deviation
	g min_inclusive
	h max_inclusive
	a ()I getMinValue
	a (FFII)Lnet/minecraft/util/valueproviders/ClampedNormalInt; of
	a (Lnet/minecraft/util/RandomSource;)I sample
	a (Lnet/minecraft/util/RandomSource;FFFF)I sample
	b ()I getMaxValue
	c ()Lnet/minecraft/util/valueproviders/IntProviderType; getType
net/minecraft/util/valueproviders/ConstantFloat net/minecraft/util/valueproviders/ConstantFloat
	a ZERO
	b CODEC
	d value
	a ()F getMinValue
	a (F)Lnet/minecraft/util/valueproviders/ConstantFloat; of
	a (Lnet/minecraft/util/RandomSource;)F sample
	b ()F getMaxValue
	c ()Lnet/minecraft/util/valueproviders/FloatProviderType; getType
	d ()F getValue
net/minecraft/util/valueproviders/ConstantInt net/minecraft/util/valueproviders/ConstantInt
	a ZERO
	b CODEC
	f value
	a ()I getMinValue
	a (I)Lnet/minecraft/util/valueproviders/ConstantInt; of
	a (Lnet/minecraft/util/RandomSource;)I sample
	b ()I getMaxValue
	c ()Lnet/minecraft/util/valueproviders/IntProviderType; getType
	d ()I getValue
net/minecraft/util/valueproviders/FloatProvider net/minecraft/util/valueproviders/FloatProvider
	a CONSTANT_OR_DISPATCH_CODEC
	c CODEC
	a ()F getMinValue
	a (FF)Lcom/mojang/serialization/Codec; codec
	b ()F getMaxValue
	c ()Lnet/minecraft/util/valueproviders/FloatProviderType; getType
net/minecraft/util/valueproviders/FloatProviderType net/minecraft/util/valueproviders/FloatProviderType
	a CONSTANT
	b UNIFORM
	c CLAMPED_NORMAL
	d TRAPEZOID
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/valueproviders/FloatProviderType; register
net/minecraft/util/valueproviders/IntProvider net/minecraft/util/valueproviders/IntProvider
	a CONSTANT_OR_DISPATCH_CODEC
	c CODEC
	d NON_NEGATIVE_CODEC
	e POSITIVE_CODEC
	a ()I getMinValue
	a (IILcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/util/RandomSource;)I sample
	b ()I getMaxValue
	b (II)Lcom/mojang/serialization/Codec; codec
	c ()Lnet/minecraft/util/valueproviders/IntProviderType; getType
net/minecraft/util/valueproviders/IntProviderType net/minecraft/util/valueproviders/IntProviderType
	a CONSTANT
	b UNIFORM
	c BIASED_TO_BOTTOM
	d CLAMPED
	e WEIGHTED_LIST
	f CLAMPED_NORMAL
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/valueproviders/IntProviderType; register
net/minecraft/util/valueproviders/TrapezoidFloat net/minecraft/util/valueproviders/TrapezoidFloat
	a CODEC
	b min
	d max
	e plateau
	a ()F getMinValue
	a (FFF)Lnet/minecraft/util/valueproviders/TrapezoidFloat; of
	a (Lnet/minecraft/util/RandomSource;)F sample
	b ()F getMaxValue
	c ()Lnet/minecraft/util/valueproviders/FloatProviderType; getType
net/minecraft/util/valueproviders/UniformFloat net/minecraft/util/valueproviders/UniformFloat
	a CODEC
	b minInclusive
	d maxExclusive
	a ()F getMinValue
	a (Lnet/minecraft/util/RandomSource;)F sample
	b ()F getMaxValue
	b (FF)Lnet/minecraft/util/valueproviders/UniformFloat; of
	c ()Lnet/minecraft/util/valueproviders/FloatProviderType; getType
net/minecraft/util/valueproviders/UniformInt net/minecraft/util/valueproviders/UniformInt
	a CODEC
	b minInclusive
	f maxInclusive
	a ()I getMinValue
	a (II)Lnet/minecraft/util/valueproviders/UniformInt; of
	a (Lnet/minecraft/util/RandomSource;)I sample
	b ()I getMaxValue
	c ()Lnet/minecraft/util/valueproviders/IntProviderType; getType
net/minecraft/util/valueproviders/WeightedListInt net/minecraft/util/valueproviders/WeightedListInt
	a CODEC
	b distribution
	f minValue
	g maxValue
	a ()I getMinValue
	a (Lnet/minecraft/util/RandomSource;)I sample
	b ()I getMaxValue
	c ()Lnet/minecraft/util/valueproviders/IntProviderType; getType
net/minecraft/util/worldupdate/WorldUpgrader net/minecraft/util/worldupdate/WorldUpgrader
	a LOGGER
	b THREAD_FACTORY
	c dimensions
	d levels
	e eraseCache
	f levelStorage
	g thread
	h dataFixer
	i running
	j finished
	k progress
	l totalChunks
	m converted
	n skipped
	o progressMap
	p status
	q REGEX
	r overworldDataStorage
	a ()V cancel
	a (Lnet/minecraft/resources/ResourceKey;)F dimensionProgress
	b ()Z isFinished
	b (Lnet/minecraft/resources/ResourceKey;)Ljava/util/List; getAllChunkPos
	c ()Ljava/util/Set; levels
	d ()F getProgress
	e ()I getTotalChunks
	f ()I getConverted
	g ()I getSkipped
	h ()Lnet/minecraft/network/chat/IChatBaseComponent; getStatus
	i ()V work
net/minecraft/world/RandomSequence net/minecraft/world/RandomSequence
	a CODEC
	b source
	a ()Lnet/minecraft/util/RandomSource; random
	a (JLjava/util/Optional;)Lnet/minecraft/world/level/levelgen/XoroshiroRandomSource; createSequence
	a (Lnet/minecraft/resources/MinecraftKey;)Ldlh$a; seedForKey
net/minecraft/world/RandomSequences net/minecraft/world/RandomSequences
	a LOGGER
	b worldSeed
	c salt
	d includeWorldSeed
	e includeSequenceId
	f sequences
	a ()I clear
	a (IZZ)V setSeedDefaults
	a (J)Lebr$a; factory
	a (JLnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/RandomSequences; load
	a (Ljava/util/function/BiConsumer;)V forAllSequences
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/lang/String;Z)Z getBooleanWithDefault
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/util/RandomSource; get
	a (Lnet/minecraft/resources/MinecraftKey;IZZ)V reset
	b (Lnet/minecraft/resources/MinecraftKey;)V reset
	b (Lnet/minecraft/resources/MinecraftKey;IZZ)Lnet/minecraft/world/RandomSequence; createSequence
	c (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/RandomSequence; createSequence
net/minecraft/world/damagesource/CombatEntry net/minecraft/world/damagesource/CombatEntry
	a source
	b damage
	c fallLocation
	d fallDistance
	a ()Lnet/minecraft/world/damagesource/DamageSource; source
	b ()F damage
	c ()Lnet/minecraft/world/damagesource/FallLocation; fallLocation
	d ()F fallDistance
net/minecraft/world/damagesource/CombatTracker net/minecraft/world/damagesource/CombatTracker
	a RESET_DAMAGE_STATUS_TIME
	b RESET_COMBAT_STATUS_TIME
	c INTENTIONAL_GAME_DESIGN_STYLE
	d entries
	e mob
	f lastDamageTime
	g combatStartTime
	h combatEndTime
	i inCombat
	j takingDamage
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getDeathMessage
	a (Lnet/minecraft/world/damagesource/CombatEntry;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/network/chat/IChatBaseComponent; getFallMessage
	a (Lnet/minecraft/world/damagesource/DamageSource;)Z shouldEnterCombat
	a (Lnet/minecraft/world/damagesource/DamageSource;F)V recordDamage
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; getMessageForAssistedFall
	b ()I getCombatDuration
	c ()V recheckStatus
	d ()Lnet/minecraft/world/damagesource/CombatEntry; getMostSignificantFall
net/minecraft/world/damagesource/DamageEffects net/minecraft/world/damagesource/DamageEffects
	a HURT
	b THORNS
	c DROWNING
	d BURNING
	e POKING
	f FREEZING
	g CODEC
	h id
	i sound
	j $VALUES
	a ()Lnet/minecraft/sounds/SoundEffect; sound
	b ()[Lnet/minecraft/world/damagesource/DamageEffects; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/damagesource/DamageScaling net/minecraft/world/damagesource/DamageScaling
	a NEVER
	b WHEN_CAUSED_BY_LIVING_NON_PLAYER
	c ALWAYS
	d CODEC
	e id
	f $VALUES
	a ()[Lnet/minecraft/world/damagesource/DamageScaling; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/damagesource/DamageSource net/minecraft/world/damagesource/DamageSource
	a type
	b causingEntity
	c directEntity
	d damageSourcePosition
	a ()F getFoodExhaustion
	a (Lnet/minecraft/resources/ResourceKey;)Z is
	a (Lnet/minecraft/tags/TagKey;)Z is
	a (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/network/chat/IChatBaseComponent; getLocalizedDeathMessage
	b ()Z isIndirect
	c ()Lnet/minecraft/world/entity/Entity; getDirectEntity
	d ()Lnet/minecraft/world/entity/Entity; getEntity
	e ()Ljava/lang/String; getMsgId
	f ()Z scalesWithDifficulty
	g ()Z isCreativePlayer
	h ()Lnet/minecraft/world/phys/Vec3D; getSourcePosition
	i ()Lnet/minecraft/world/phys/Vec3D; sourcePositionRaw
	j ()Lnet/minecraft/world/damagesource/DamageType; type
	k ()Lnet/minecraft/core/Holder; typeHolder
net/minecraft/world/damagesource/DamageSources net/minecraft/world/damagesource/DamageSources
	a damageTypes
	b inFire
	c lightningBolt
	d onFire
	e lava
	f hotFloor
	g inWall
	h cramming
	i drown
	j starve
	k cactus
	l fall
	m flyIntoWall
	n fellOutOfWorld
	o generic
	p magic
	q wither
	r dragonBreath
	s dryOut
	t sweetBerryBush
	u freeze
	v stalagmite
	w outsideBorder
	x genericKill
	a ()Lnet/minecraft/world/damagesource/DamageSource; inFire
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/damagesource/DamageSource; source
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; source
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; source
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; fallingBlock
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; trident
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/damagesource/DamageSource; mobProjectile
	a (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/damagesource/DamageSource; sting
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/damagesource/DamageSource; playerAttack
	a (Lnet/minecraft/world/entity/projectile/EntityArrow;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; arrow
	a (Lnet/minecraft/world/entity/projectile/EntityFireballFireball;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; fireball
	a (Lnet/minecraft/world/entity/projectile/EntityFireworks;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; fireworks
	a (Lnet/minecraft/world/entity/projectile/EntityWitherSkull;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; witherSkull
	a (Lnet/minecraft/world/level/Explosion;)Lnet/minecraft/world/damagesource/DamageSource; explosion
	a (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/damagesource/DamageSource; badRespawnPointExplosion
	b ()Lnet/minecraft/world/damagesource/DamageSource; lightningBolt
	b (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; anvil
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; thrown
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/damagesource/DamageSource; mobAttack
	c ()Lnet/minecraft/world/damagesource/DamageSource; onFire
	c (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; fallingStalactite
	c (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; indirectMagic
	c (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/damagesource/DamageSource; noAggroMobAttack
	d ()Lnet/minecraft/world/damagesource/DamageSource; lava
	d (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; thorns
	d (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; explosion
	e ()Lnet/minecraft/world/damagesource/DamageSource; hotFloor
	e (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; sonicBoom
	f ()Lnet/minecraft/world/damagesource/DamageSource; inWall
	g ()Lnet/minecraft/world/damagesource/DamageSource; cramming
	h ()Lnet/minecraft/world/damagesource/DamageSource; drown
	i ()Lnet/minecraft/world/damagesource/DamageSource; starve
	j ()Lnet/minecraft/world/damagesource/DamageSource; cactus
	k ()Lnet/minecraft/world/damagesource/DamageSource; fall
	l ()Lnet/minecraft/world/damagesource/DamageSource; flyIntoWall
	m ()Lnet/minecraft/world/damagesource/DamageSource; fellOutOfWorld
	n ()Lnet/minecraft/world/damagesource/DamageSource; generic
	o ()Lnet/minecraft/world/damagesource/DamageSource; magic
	p ()Lnet/minecraft/world/damagesource/DamageSource; wither
	q ()Lnet/minecraft/world/damagesource/DamageSource; dragonBreath
	r ()Lnet/minecraft/world/damagesource/DamageSource; dryOut
	s ()Lnet/minecraft/world/damagesource/DamageSource; sweetBerryBush
	t ()Lnet/minecraft/world/damagesource/DamageSource; freeze
	u ()Lnet/minecraft/world/damagesource/DamageSource; stalagmite
	v ()Lnet/minecraft/world/damagesource/DamageSource; outOfBorder
	w ()Lnet/minecraft/world/damagesource/DamageSource; genericKill
net/minecraft/world/damagesource/DamageType net/minecraft/world/damagesource/DamageType
	a CODEC
	b msgId
	c scaling
	d exhaustion
	e effects
	f deathMessageType
	a ()Ljava/lang/String; msgId
	b ()Lnet/minecraft/world/damagesource/DamageScaling; scaling
	c ()F exhaustion
	d ()Lnet/minecraft/world/damagesource/DamageEffects; effects
	e ()Lnet/minecraft/world/damagesource/DeathMessageType; deathMessageType
net/minecraft/world/damagesource/DamageTypes net/minecraft/world/damagesource/DamageTypes
	A MOB_ATTACK_NO_AGGRO
	B PLAYER_ATTACK
	C ARROW
	D TRIDENT
	E MOB_PROJECTILE
	F FIREWORKS
	G FIREBALL
	H UNATTRIBUTED_FIREBALL
	I WITHER_SKULL
	J THROWN
	K INDIRECT_MAGIC
	L THORNS
	M EXPLOSION
	N PLAYER_EXPLOSION
	O SONIC_BOOM
	P BAD_RESPAWN_POINT
	Q OUTSIDE_BORDER
	R GENERIC_KILL
	a IN_FIRE
	b LIGHTNING_BOLT
	c ON_FIRE
	d LAVA
	e HOT_FLOOR
	f IN_WALL
	g CRAMMING
	h DROWN
	i STARVE
	j CACTUS
	k FALL
	l FLY_INTO_WALL
	m FELL_OUT_OF_WORLD
	n GENERIC
	o MAGIC
	p WITHER
	q DRAGON_BREATH
	r DRY_OUT
	s SWEET_BERRY_BUSH
	t FREEZE
	u STALAGMITE
	v FALLING_BLOCK
	w FALLING_ANVIL
	x FALLING_STALACTITE
	y STING
	z MOB_ATTACK
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/world/damagesource/DeathMessageType net/minecraft/world/damagesource/DeathMessageType
	a DEFAULT
	b FALL_VARIANTS
	c INTENTIONAL_GAME_DESIGN
	d CODEC
	e id
	f $VALUES
	a ()[Lnet/minecraft/world/damagesource/DeathMessageType; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/damagesource/FallLocation net/minecraft/world/damagesource/FallLocation
	a GENERIC
	b LADDER
	c VINES
	d WEEPING_VINES
	e TWISTING_VINES
	f SCAFFOLDING
	g OTHER_CLIMBABLE
	h WATER
	i id
	a ()Ljava/lang/String; languageKey
	a (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/damagesource/FallLocation; getCurrentFallLocation
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/damagesource/FallLocation; blockToFallLocation
	b ()Ljava/lang/String; id
net/minecraft/world/effect/HealOrHarmMobEffect net/minecraft/world/effect/HealOrHarmMobEffect
	a isHarm
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityLiving;ID)V applyInstantenousEffect
	a (Lnet/minecraft/world/entity/EntityLiving;I)V applyEffectTick
net/minecraft/world/effect/MobEffects net/minecraft/world/effect/MobEffects
	A UNLUCK
	B SLOW_FALLING
	C CONDUIT_POWER
	D DOLPHINS_GRACE
	E BAD_OMEN
	F HERO_OF_THE_VILLAGE
	G DARKNESS
	H DARKNESS_EFFECT_FACTOR_PADDING_DURATION_TICKS
	a MOVEMENT_SPEED
	b MOVEMENT_SLOWDOWN
	c DIG_SPEED
	d DIG_SLOWDOWN
	e DAMAGE_BOOST
	f HEAL
	g HARM
	h JUMP
	i CONFUSION
	j REGENERATION
	k DAMAGE_RESISTANCE
	l FIRE_RESISTANCE
	m WATER_BREATHING
	n INVISIBILITY
	o BLINDNESS
	p NIGHT_VISION
	q HUNGER
	r WEAKNESS
	s POISON
	t WITHER
	u HEALTH_BOOST
	v ABSORPTION
	w SATURATION
	x GLOWING
	y LEVITATION
	z LUCK
	a (Ljava/lang/String;Lnet/minecraft/world/effect/MobEffectList;)Lnet/minecraft/world/effect/MobEffectList; register
net/minecraft/world/entity/AnimationState net/minecraft/world/entity/AnimationState
	a STOPPED
	b lastTime
	c accumulatedTime
	a ()V stop
	a (FF)V updateTime
	a (I)V start
	a (Ljava/util/function/Consumer;)V ifStarted
	a (ZI)V animateWhen
	b ()J getAccumulatedTime
	b (I)V startIfStopped
	c ()Z isStarted
net/minecraft/world/entity/Display$BillboardConstraints net/minecraft/world/entity/Display$BillboardConstraints
	a FIXED
	b VERTICAL
	c HORIZONTAL
	d CENTER
	e CODEC
	f BY_ID
	g id
	h name
	i $VALUES
	a ()B getId
	b ()[Lnet/minecraft/world/entity/Display$BillboardConstraints; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/Display$BlockDisplay net/minecraft/world/entity/Display$BlockDisplay
	p TAG_BLOCK_STATE
	q DATA_BLOCK_STATE_ID
	r blockRenderState
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (ZF)V updateRenderSubState
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/world/level/block/state/IBlockData;)V setBlockState
	s ()Lbip$b$a; blockRenderState
	t ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
net/minecraft/world/entity/Display$ColorInterpolator net/minecraft/world/entity/Display$ColorInterpolator
	a previous
	b current
	a ()I previous
	b ()I current
net/minecraft/world/entity/Display$ItemDisplay net/minecraft/world/entity/Display$ItemDisplay
	p TAG_ITEM
	q TAG_ITEM_DISPLAY
	r DATA_ITEM_STACK_ID
	s DATA_ITEM_DISPLAY_ID
	t slot
	u itemRenderState
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/item/ItemDisplayContext;)V setItemTransform
	a (Lnet/minecraft/world/item/ItemStack;)V setItemStack
	a (ZF)V updateRenderSubState
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	s ()Lbip$g$a; itemRenderState
	t ()Lnet/minecraft/world/item/ItemStack; getItemStack
	v ()Lnet/minecraft/world/item/ItemDisplayContext; getItemTransform
net/minecraft/world/entity/Display$TextDisplay$Align net/minecraft/world/entity/Display$TextDisplay$Align
	a CENTER
	b LEFT
	c RIGHT
	d CODEC
	e name
	f $VALUES
	a ()[Lnet/minecraft/world/entity/Display$TextDisplay$Align; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/Display$TextDisplay$CachedInfo net/minecraft/world/entity/Display$TextDisplay$CachedInfo
	a lines
	b width
	a ()Ljava/util/List; lines
	b ()I width
net/minecraft/world/entity/Display$TextDisplay$CachedLine net/minecraft/world/entity/Display$TextDisplay$CachedLine
	a contents
	b width
	a ()Lnet/minecraft/util/FormattedString; contents
	b ()I width
net/minecraft/world/entity/Display$TextDisplay net/minecraft/world/entity/Display$TextDisplay
	aE TAG_LINE_WIDTH
	aF TAG_TEXT_OPACITY
	aG TAG_BACKGROUND_COLOR
	aH TAG_SHADOW
	aI TAG_SEE_THROUGH
	aJ TAG_USE_DEFAULT_BACKGROUND
	aK TAG_ALIGNMENT
	aL INITIAL_TEXT_OPACITY
	aM DATA_TEXT_ID
	aN DATA_LINE_WIDTH_ID
	aO DATA_BACKGROUND_COLOR_ID
	aP DATA_TEXT_OPACITY_ID
	aQ DATA_STYLE_FLAGS_ID
	aR TEXT_RENDER_STATE_IDS
	aS clientDisplayCache
	aT textRenderState
	p TAG_TEXT
	q FLAG_SHADOW
	r FLAG_SEE_THROUGH
	s FLAG_USE_DEFAULT_BACKGROUND
	t FLAG_ALIGN_LEFT
	u FLAG_ALIGN_RIGHT
	v INITIAL_BACKGROUND
	a (B)Lnet/minecraft/world/entity/Display$TextDisplay$Align; getAlign
	a (BLnet/minecraft/nbt/NBTTagCompound;Ljava/lang/String;B)B loadFlag
	a (Lbip$l$e;F)Lbip$l$e; createInterpolatedTextRenderState
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/Display$TextDisplay$LineSplitter;)Lnet/minecraft/world/entity/Display$TextDisplay$CachedInfo; cacheDisplay
	a (ZF)V updateRenderSubState
	a_ ()V defineSynchedData
	b (BLnet/minecraft/nbt/NBTTagCompound;Ljava/lang/String;B)V storeFlag
	b (I)V setLineWidth
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (B)V setTextOpacity
	c (I)V setBackgroundColor
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V setText
	d (B)V setFlags
	s ()Lbip$l$e; textRenderState
	t ()Lnet/minecraft/network/chat/IChatBaseComponent; getText
	v ()I getLineWidth
	w ()B getTextOpacity
	x ()I getBackgroundColor
	y ()B getFlags
	z ()Lbip$l$e; createFreshTextRenderState
net/minecraft/world/entity/Display net/minecraft/world/entity/Display
	aE DATA_RIGHT_ROTATION_ID
	aF DATA_BILLBOARD_RENDER_CONSTRAINTS_ID
	aG DATA_BRIGHTNESS_OVERRIDE_ID
	aH DATA_VIEW_RANGE_ID
	aI DATA_SHADOW_RADIUS_ID
	aJ DATA_SHADOW_STRENGTH_ID
	aK DATA_WIDTH_ID
	aL DATA_HEIGHT_ID
	aM DATA_GLOW_COLOR_OVERRIDE_ID
	aN RENDER_STATE_IDS
	aO INITIAL_SHADOW_RADIUS
	aP INITIAL_SHADOW_STRENGTH
	aQ NO_GLOW_COLOR_OVERRIDE
	aR interpolationStartClientTick
	aS interpolationDuration
	aT lastProgress
	aU cullingBoundingBox
	aV updateStartTick
	aW updateInterpolationDuration
	aX renderState
	aY posRotInterpolationTarget
	b NO_BRIGHTNESS_OVERRIDE
	c TAG_POS_ROT_INTERPOLATION_DURATION
	d TAG_TRANSFORMATION_INTERPOLATION_DURATION
	e TAG_TRANSFORMATION_START_INTERPOLATION
	f TAG_TRANSFORMATION
	g TAG_BILLBOARD
	h TAG_BRIGHTNESS
	i TAG_VIEW_RANGE
	j TAG_SHADOW_RADIUS
	k TAG_SHADOW_STRENGTH
	l TAG_WIDTH
	m TAG_HEIGHT
	n TAG_GLOW_COLOR_OVERRIDE
	o updateRenderState
	p LOGGER
	q DATA_TRANSFORMATION_INTERPOLATION_START_DELTA_TICKS_ID
	r DATA_TRANSFORMATION_INTERPOLATION_DURATION_ID
	s DATA_POS_ROT_INTERPOLATION_DURATION_ID
	t DATA_TRANSLATION_ID
	u DATA_SCALE_ID
	v DATA_LEFT_ROTATION_ID
	A ()F getShadowRadius
	B ()F getShadowStrength
	C ()F getWidth
	E ()I getGlowColorOverride
	F ()F getHeight
	G ()V updateCulling
	H ()Lbip$k; createFreshRenderState
	K_ ()D lerpTargetY
	L_ ()D lerpTargetZ
	a (D)Z shouldRenderAtSqrDistance
	a (DDDFFI)V lerpTo
	a (F)F calculateInterpolationProgress
	a (Lbip$k;F)Lbip$k; createInterpolatedRenderState
	a (Lcom/mojang/math/Transformation;)V setTransformation
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcher;)Lcom/mojang/math/Transformation; createTransformation
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/util/Brightness;)V setBrightnessOverride
	a (Lnet/minecraft/world/entity/Display$BillboardConstraints;)V setBillboardConstraints
	a (ZF)V updateRenderSubState
	a_ ()V defineSynchedData
	b (F)V setViewRange
	b (I)V setTransformationInterpolationDuration
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (F)V setShadowRadius
	c (I)V setTransformationInterpolationDelay
	d (I)V setPosRotInterpolationDuration
	d_ ()F lerpTargetXRot
	e (DDD)V setPos
	g_ ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBoxForCulling
	h_ ()I getTeamColor
	l ()V tick
	m (I)V setGlowColorOverride
	n_ ()D lerpTargetX
	o_ ()F lerpTargetYRot
	p_ ()Z isIgnoringBlockTriggers
	q ()Lbip$k; renderState
	q_ ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	s ()I getTransformationInterpolationDuration
	t ()I getTransformationInterpolationDelay
	u (F)V setShadowStrength
	v ()I getPosRotInterpolationDuration
	v (F)V setWidth
	w ()Lnet/minecraft/world/entity/Display$BillboardConstraints; getBillboardConstraints
	w (F)V setHeight
	x ()Lnet/minecraft/util/Brightness; getBrightnessOverride
	y ()I getPackedBrightnessOverride
	z ()F getViewRange
net/minecraft/world/entity/Entity$MovementEmission net/minecraft/world/entity/Entity$MovementEmission
	a NONE
	b SOUNDS
	c EVENTS
	d ALL
	e sounds
	f events
	g $VALUES
	a ()Z emitsAnything
	b ()Z emitsEvents
	c ()Z emitsSounds
	d ()[Lnet/minecraft/world/entity/Entity$MovementEmission; $values
net/minecraft/world/entity/Entity$RemovalReason net/minecraft/world/entity/Entity$RemovalReason
	a KILLED
	b DISCARDED
	c UNLOADED_TO_CHUNK
	d UNLOADED_WITH_PLAYER
	e CHANGED_DIMENSION
	f destroy
	g save
	h $VALUES
	a ()Z shouldDestroy
	b ()Z shouldSave
	c ()[Lnet/minecraft/world/entity/Entity$RemovalReason; $values
net/minecraft/world/entity/Entity net/minecraft/world/entity/Entity
	A MAX_ENTITY_TAG_COUNT
	B DELTA_AFFECTED_BY_BLOCKS_BELOW_0_2
	C DELTA_AFFECTED_BY_BLOCKS_BELOW_0_5
	D DELTA_AFFECTED_BY_BLOCKS_BELOW_1_0
	E BREATHING_DISTANCE_BELOW_EYES
	F BASE_TICKS_REQUIRED_TO_FREEZE
	G FREEZE_HURT_FREQUENCY
	H UUID_TAG
	I blocksBuilding
	J boardingCooldown
	K xo
	L yo
	M zo
	N yRotO
	O xRotO
	P horizontalCollision
	Q verticalCollision
	R verticalCollisionBelow
	S minorHorizontalCollision
	T hurtMarked
	U stuckSpeedMultiplier
	V DEFAULT_BB_WIDTH
	W DEFAULT_BB_HEIGHT
	X walkDistO
	Y walkDist
	Z moveDist
	aA isInPowderSnow
	aB wasInPowderSnow
	aC wasOnFire
	aD mainSupportingBlockPos
	aE chunkPosition
	aF deltaMovement
	aG yRot
	aH xRot
	aI bb
	aJ onGround
	aK removalReason
	aL nextStep
	aM maxUpStep
	aN remainingFireTicks
	aO fluidOnEyes
	aP FLAG_SHIFT_KEY_DOWN
	aQ FLAG_SPRINTING
	aR FLAG_SWIMMING
	aS FLAG_INVISIBLE
	aT DATA_AIR_SUPPLY_ID
	aU DATA_CUSTOM_NAME
	aV DATA_CUSTOM_NAME_VISIBLE
	aW DATA_SILENT
	aX DATA_NO_GRAVITY
	aY DATA_TICKS_FROZEN
	aZ levelCallback
	aa flyDist
	ab fallDistance
	ac xOld
	ad yOld
	ae zOld
	af noPhysics
	ag random
	ah tickCount
	ai wasTouchingWater
	aj fluidHeight
	ak wasEyeInWater
	al invulnerableTime
	am firstTick
	an entityData
	ao DATA_SHARED_FLAGS_ID
	ap FLAG_ONFIRE
	aq FLAG_GLOWING
	ar FLAG_FALL_FLYING
	as DATA_POSE
	at noCulling
	au hasImpulse
	av isInsidePortal
	aw portalTime
	ax portalEntrancePos
	ay uuid
	az stringUUID
	ba packetPositionCodec
	bb portalCooldown
	bc invulnerable
	bd hasGlowingTag
	be tags
	bf pistonDeltas
	bg pistonDeltasGameTime
	bh dimensions
	bi eyeHeight
	bj onGroundNoBlocks
	bk crystalSoundIntensity
	bl lastCrystalSoundPlayTick
	bm hasVisualFire
	bn feetBlockState
	c LOGGER
	d ENTITY_COUNTER
	e EMPTY_LIST
	k INITIAL_AABB
	l WATER_FLOW_SCALE
	m LAVA_FAST_FLOW_SCALE
	n LAVA_SLOW_FLOW_SCALE
	o viewScale
	p type
	q id
	r passengers
	s vehicle
	t level
	u position
	v blockPosition
	w ID_TAG
	x PASSENGERS_TAG
	y BOARDING_COOLDOWN
	z TOTAL_AIR_SUPPLY
	A ()V teleportPassengers
	B ()Ljava/util/stream/Stream; getIndirectPassengersStream
	D ()I getPermissionLevel
	J ()V processPortalCooldown
	K_ ()D lerpTargetY
	L_ ()D lerpTargetZ
	M_ ()Z isSpectator
	N_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	T_ ()Z shouldInformAdmins
	a (D)Z shouldRenderAtSqrDistance
	a (DDD)V dismountTo
	a (DDDFF)V absMoveTo
	a (DDDFFI)V lerpTo
	a (DDF)Lnet/minecraft/world/phys/Vec3D; getCollisionHorizontalEscapeVector
	a (DFZ)Lnet/minecraft/world/phys/MovingObjectPosition; pick
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (FF)V setRot
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (FI)V lerpHeadTo
	a (FLnet/minecraft/world/phys/Vec3D;)V moveRelative
	a (IDDDDD)V lerpPositionAndRotationStep
	a (Ljava/lang/String;)Z addTag
	a (Ljava/util/List;)V onSyncedDataUpdated
	a (Ljava/util/function/BiConsumer;)V updateDynamicGameEventListener
	a (Ljava/util/function/Predicate;)Z hasPassenger
	a (Lnet/minecraft/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor;Lnet/minecraft/world/phys/Vec3D;)V lookAt
	a (Lnet/minecraft/core/BlockPosition;FF)V moveTo
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isColliding
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;ZZLnet/minecraft/world/phys/Vec3D;)Z vibrationAndSoundEffectsFromBlock
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;D)D applyPistonMovementRestriction
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/BlockUtil$Rectangle;)Lnet/minecraft/world/phys/Vec3D; getRelativePortalPosition
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/EntityPlayer;)Z broadcastToPlayer
	a (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/level/portal/ShapeDetectorShape; findDimensionEntryPoint
	a (Lnet/minecraft/server/level/WorldServer;DDDLjava/util/Set;FF)Z teleportTo
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; getExitPortal
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z killedEntity
	a (Lnet/minecraft/sounds/SoundEffect;)V playSound
	a (Lnet/minecraft/sounds/SoundEffect;FF)V playSound
	a (Lnet/minecraft/tags/TagKey;)Z isEyeInFluid
	a (Lnet/minecraft/tags/TagKey;D)Z updateFluidHeightAndDoFluidPushing
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V remove
	a (Lnet/minecraft/world/entity/Entity;D)Z closerThan
	a (Lnet/minecraft/world/entity/Entity;DD)Z closerThan
	a (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V awardKillScore
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V positionRider
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/world/level/World;Ljava/util/List;)Lnet/minecraft/world/phys/Vec3D; collideBoundingBox
	a (Lnet/minecraft/world/entity/Entity;Z)Z startRiding
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;)V doEnchantDamageEffects
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setItemSlot
	a (Lnet/minecraft/world/entity/EnumMoveType;Lnet/minecraft/world/phys/Vec3D;)V move
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactAt
	a (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/phys/Vec3D; getHandHoldingItemAngle
	a (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/EntityItem; spawnAtLocation
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;F)F getBlockExplosionResistance
	a (Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/world/entity/item/EntityItem; spawnAtLocation
	a (Lnet/minecraft/world/level/IMaterial;I)Lnet/minecraft/world/entity/item/EntityItem; spawnAtLocation
	a (Lnet/minecraft/world/level/World;)V setLevel
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/world/level/block/EnumBlockMirror;)F mirror
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)F rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;)V onInsideBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V playCombinationStepSounds
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/Vec3D;)V makeStuckInBlock
	a (Lnet/minecraft/world/level/entity/EntityInLevelCallback;)V setLevelCallback
	a (Lnet/minecraft/world/level/gameevent/GameEvent;)V gameEvent
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)V gameEvent
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)V setBoundingBox
	a (Lnet/minecraft/world/phys/Vec3D;)V setPos
	a (Lnet/minecraft/world/phys/Vec3D;FF)Lnet/minecraft/world/phys/Vec3D; getInputVector
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/EnumMoveType;)Lnet/minecraft/world/phys/Vec3D; maybeBackOffFromEdge
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/List;)Lnet/minecraft/world/phys/Vec3D; collideWithShapes
	a (Lnet/minecraft/world/scores/ScoreboardTeamBase;)Z isAlliedTo
	a (ZLnet/minecraft/world/phys/Vec3D;)V setOnGroundWithKnownMovement
	a ([D)Lnet/minecraft/nbt/NBTTagList; newDoubleList
	a ([F)Lnet/minecraft/nbt/NBTTagList; newFloatList
	aA ()Z onGround
	aB ()V tryCheckInsideBlocks
	aC ()V playEntityOnFireExtinguishedSound
	aD ()V extinguishFire
	aE ()V processFlappingMovement
	aF ()Lnet/minecraft/core/BlockPosition; getOnPosLegacy
	aG ()Lnet/minecraft/core/BlockPosition; getBlockPosBelowThatAffectsMyMovement
	aH ()Lnet/minecraft/core/BlockPosition; getOnPos
	aI ()F getBlockJumpFactor
	aJ ()F getBlockSpeedFactor
	aK ()F nextStep
	aL ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	aM ()Lnet/minecraft/sounds/SoundEffect; getSwimSplashSound
	aN ()Lnet/minecraft/sounds/SoundEffect; getSwimHighSpeedSplashSound
	aO ()V checkInsideBlocks
	aP ()V waterSwimSound
	aQ ()V onFlap
	aR ()Z isFlapping
	aS ()Z isSilent
	aT ()Z isNoGravity
	aU ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	aV ()Z dampensVibrations
	aW ()Z fireImmune
	aX ()Z isInWater
	aY ()Z isInWaterOrRain
	aZ ()Z isInWaterRainOrBubble
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	a_ (Ljava/util/UUID;)V setUUID
	a_ (Z)V setSharedFlagOnFire
	aa ()V stopRiding
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	ac ()Z hasCustomName
	ad ()Lnet/minecraft/network/chat/IChatBaseComponent; getCustomName
	ae ()V unRide
	af ()Lnet/minecraft/network/protocol/game/VecDeltaCodec; getPositionCodec
	ag ()Lnet/minecraft/world/entity/EntityTypes; getType
	ah ()I getId
	ai ()Ljava/util/Set; getTags
	aj ()V kill
	ak ()V discard
	al ()Lnet/minecraft/network/syncher/DataWatcher; getEntityData
	am ()V onClientRemoval
	an ()Lnet/minecraft/world/entity/EntityPose; getPose
	ao ()Lnet/minecraft/world/phys/AxisAlignedBB; makeBoundingBox
	ap ()V reapplyPosition
	aq ()V baseTick
	ar ()V checkBelowWorld
	as ()V setPortalCooldown
	at ()I getPortalCooldown
	au ()Z isOnPortalCooldown
	av ()I getPortalWaitTime
	aw ()V lavaHurt
	ax ()I getRemainingFireTicks
	ay ()V clearFire
	az ()V onBelowWorld
	b (B)V handleEntityEvent
	b (D)V setViewScale
	b (DD)V turn
	b (DDD)V teleportTo
	b (DDDFF)V moveTo
	b (FF)Lnet/minecraft/world/phys/Vec3D; calculateViewVector
	b (IZ)V setSharedFlag
	b (Ljava/lang/String;)Z removeTag
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setCustomName
	b (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/entity/Entity; changeDimension
	b (Lnet/minecraft/tags/TagKey;)D getFluidHeight
	b (Lnet/minecraft/world/damagesource/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/world/entity/Entity$RemovalReason;)V setRemoved
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/world/entity/EntityPose;)V setPose
	b (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/item/EntityItem; spawnAtLocation
	b (Lnet/minecraft/world/level/block/state/IBlockData;)V playMuffledStepSound
	b (Lnet/minecraft/world/phys/AxisAlignedBB;)Z isFree
	b (Lnet/minecraft/world/phys/Vec3D;)Z isHorizontalCollisionMinor
	b (ZLnet/minecraft/world/phys/Vec3D;)V checkSupportingBlock
	bA ()V ejectPassengers
	bB ()V removeVehicle
	bC ()Z couldAcceptPassenger
	bD ()F getPickRadius
	bE ()Lnet/minecraft/world/phys/Vec3D; getLookAngle
	bF ()Lnet/minecraft/world/phys/Vec2F; getRotationVector
	bG ()Lnet/minecraft/world/phys/Vec3D; getForward
	bH ()V handleNetherPortal
	bI ()I getDimensionChangingDelay
	bJ ()Ljava/lang/Iterable; getHandSlots
	bK ()Ljava/lang/Iterable; getArmorSlots
	bL ()Ljava/lang/Iterable; getAllSlots
	bM ()Z isOnFire
	bN ()Z isPassenger
	bO ()Z isVehicle
	bP ()Z dismountsUnderwater
	bQ ()Z canControlVehicle
	bR ()Z isShiftKeyDown
	bS ()Z isSteppingCarefully
	bT ()Z isSuppressingBounce
	bU ()Z isDiscrete
	bV ()Z isDescending
	bW ()Z isCrouching
	bX ()Z isSprinting
	bY ()Z isSwimming
	bZ ()Z isVisuallySwimming
	b_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerTouch
	ba ()Z isInWaterOrBubble
	bb ()Z isInLiquid
	bc ()Z isUnderWater
	bd ()V updateSwimming
	be ()Z updateInWaterStateAndDoFluidPushing
	bf ()V updateInWaterStateAndDoWaterCurrentPushing
	bg ()V doWaterSplashEffect
	bh ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockStateOnLegacy
	bi ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockStateOn
	bj ()Z canSpawnSprintParticle
	bk ()V spawnSprintParticle
	bl ()Z isInLava
	bm ()F getLightLevelDependentMagicValue
	bn ()V setOldPosAndRot
	bo ()V markHurt
	bp ()Lnet/minecraft/world/phys/Vec3D; getEyePosition
	bq ()Z canBeHitByProjectile
	br ()Z isPickable
	bs ()Z isPushable
	bt ()Z repositionEntityAfterLoad
	bu ()Ljava/lang/String; getEncodeId
	bv ()Z isAlive
	bw ()Z isInWall
	bx ()Z canBeCollidedWith
	by ()V rideTick
	bz ()Z showVehicleHealth
	c (D)D getX
	c (DDD)V teleportRelative
	c (FF)Lnet/minecraft/world/phys/Vec3D; calculateUpVector
	c (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V walkingStepSound
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; removeAction
	c (Lnet/minecraft/server/level/EntityPlayer;)V startSeenByPlayer
	c (Lnet/minecraft/world/damagesource/DamageSource;)V handleDamageEvent
	c (Lnet/minecraft/world/entity/EntityPose;)Z hasPose
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z isStateClimbable
	c (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; limitPistonMovement
	c (Z)V setOnGround
	cA ()Z isCustomNameVisible
	cB ()Z shouldShowName
	cC ()V fixupDimensions
	cD ()Lnet/minecraft/core/EnumDirection; getDirection
	cE ()Lnet/minecraft/core/EnumDirection; getMotionDirection
	cF ()Lnet/minecraft/network/chat/ChatHoverable; createHoverEvent
	cG ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBox
	cH ()F getEyeHeight
	cI ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	cJ ()Lnet/minecraft/world/level/World; getCommandSenderWorld
	cK ()Lnet/minecraft/server/MinecraftServer; getServer
	cL ()Z ignoreExplosion
	cM ()Z onlyOpCanSetNbt
	cN ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	cO ()Z hasControllingPassenger
	cP ()Ljava/util/List; getPassengers
	cQ ()Lnet/minecraft/world/entity/Entity; getFirstPassenger
	cR ()Ljava/util/stream/Stream; getSelfAndPassengers
	cS ()Ljava/util/stream/Stream; getPassengersAndSelf
	cT ()Ljava/lang/Iterable; getIndirectPassengers
	cU ()Z hasExactlyOnePlayerPassenger
	cV ()Lnet/minecraft/world/entity/Entity; getRootVehicle
	cW ()Z isControlledByLocalInstance
	cX ()Z isEffectiveAi
	cY ()Lnet/minecraft/world/entity/Entity; getVehicle
	cZ ()Lnet/minecraft/world/entity/Entity; getControlledVehicle
	ca ()Z isVisuallyCrawling
	cb ()Z hasGlowingTag
	cc ()Z isCurrentlyGlowing
	cd ()Z isInvisible
	ce ()Z isOnRails
	cf ()Lnet/minecraft/world/scores/ScoreboardTeamBase; getTeam
	cg ()I getMaxAirSupply
	ch ()I getAirSupply
	ci ()I getTicksFrozen
	cj ()F getPercentFrozen
	ck ()Z isFullyFrozen
	cl ()I getTicksRequiredToFreeze
	cm ()V checkSlowFallDistance
	cn ()Lnet/minecraft/network/chat/IChatBaseComponent; getTypeName
	co ()F getYHeadRot
	cp ()Z isAttackable
	cq ()Z isInvulnerable
	cr ()V removeAfterChangingDimensions
	cs ()Z canChangeDimensions
	ct ()I getMaxFallDistance
	cu ()Z displayFireAnimation
	cv ()Ljava/util/UUID; getUUID
	cw ()Ljava/lang/String; getStringUUID
	cx ()Ljava/lang/String; getScoreboardName
	cy ()Z isPushedByFluid
	cz ()D getViewScale
	d (D)D getRandomX
	d (DDD)V moveTo
	d (F)Lnet/minecraft/core/BlockPosition; getOnPos
	d (Lnet/minecraft/core/BlockPosition;)Z isSupportedBy
	d (Lnet/minecraft/nbt/NBTTagCompound;)Z saveAsPassenger
	d (Lnet/minecraft/server/level/EntityPlayer;)V stopSeenByPlayer
	d (Lnet/minecraft/world/entity/EntityPose;)F getEyeHeight
	d (Lnet/minecraft/world/entity/player/EntityHuman;)Z isInvisibleTo
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldPlayAmethystStepSound
	d (Lnet/minecraft/world/phys/Vec3D;)V moveTo
	d (Z)V setSilent
	dA ()Z isFreezing
	dB ()F getYRot
	dC ()F getVisualRotationYInDegrees
	dD ()F getXRot
	dE ()Z canSprint
	dF ()F maxUpStep
	dG ()Z isRemoved
	dH ()Lnet/minecraft/world/entity/Entity$RemovalReason; getRemovalReason
	dI ()V unsetRemoved
	dJ ()Z shouldBeSaved
	dK ()Z isAlwaysTicking
	dL ()Lnet/minecraft/world/level/World; level
	dM ()Lnet/minecraft/world/damagesource/DamageSources; damageSources
	d_ ()F lerpTargetXRot
	da ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	db ()I getFireImmuneTicks
	dc ()Lnet/minecraft/commands/CommandListenerWrapper; createCommandSourceStack
	dd ()Z touchingUnloadedChunk
	de ()D getFluidJumpThreshold
	df ()F getBbWidth
	dg ()F getBbHeight
	dh ()F getNameTagOffsetY
	di ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	dj ()Lnet/minecraft/world/phys/Vec3D; position
	dk ()Lnet/minecraft/world/phys/Vec3D; trackingPosition
	dl ()Lnet/minecraft/core/BlockPosition; blockPosition
	dm ()Lnet/minecraft/world/level/block/state/IBlockData; getFeetBlockState
	dn ()Lnet/minecraft/world/level/ChunkCoordIntPair; chunkPosition
	do ()Lnet/minecraft/world/phys/Vec3D; getDeltaMovement
	dp ()I getBlockX
	dq ()D getX
	dr ()I getBlockY
	ds ()D getY
	dt ()D getRandomY
	du ()D getEyeY
	dv ()I getBlockZ
	dw ()D getZ
	dx ()V checkDespawn
	dy ()Lnet/minecraft/world/item/ItemStack; getPickResult
	dz ()Z canFreeze
	e (D)D getY
	e (DDD)V setPos
	e (F)V playSwimSound
	e (I)V setId
	e (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; getPrimaryStepSoundBlockPos
	e (Lnet/minecraft/nbt/NBTTagCompound;)Z save
	e (Lnet/minecraft/world/entity/Entity;)F distanceTo
	e (Lnet/minecraft/world/phys/Vec3D;)D distanceToSqr
	e (Z)V setNoGravity
	f (D)D getZ
	f (DDD)V syncPacketPositionCodec
	f (F)Lnet/minecraft/world/phys/Vec3D; getViewVector
	f (I)V setPortalCooldown
	f (Lnet/minecraft/core/BlockPosition;)V handleInsidePortal
	f (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; saveWithoutId
	f (Lnet/minecraft/world/entity/Entity;)D distanceToSqr
	f (Lnet/minecraft/world/phys/Vec3D;)V setDeltaMovement
	f (Z)V setShiftKeyDown
	g (D)D getRandomZ
	g (DDD)Z isFree
	g (F)F getViewXRot
	g (I)V setSecondsOnFire
	g (Lnet/minecraft/nbt/NBTTagCompound;)V load
	g (Lnet/minecraft/world/entity/Entity;)V push
	g (Lnet/minecraft/world/phys/Vec3D;)V addDeltaMovement
	g (Z)V setSprinting
	g_ ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBoxForCulling
	h (DDD)V absMoveTo
	h (F)F getViewYRot
	h (I)V setRemainingFireTicks
	h (Lnet/minecraft/world/entity/Entity;)Z canCollideWith
	h (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; collide
	h (Z)V setSwimming
	h_ ()I getTeamColor
	i (DDD)D distanceToSqr
	i (F)Lnet/minecraft/world/phys/Vec3D; getUpVector
	i (I)Z getSharedFlag
	i (Lnet/minecraft/world/entity/Entity;)V positionRider
	i (Z)V setGlowingTag
	i_ ()V refreshDimensions
	j (DDD)V push
	j (F)Lnet/minecraft/world/phys/Vec3D; getEyePosition
	j (I)V setAirSupply
	j (Lnet/minecraft/world/entity/Entity;)V onPassengerTurned
	j (Z)V setInvisible
	j_ ()Z acceptsSuccess
	k (DDD)Z shouldRender
	k (F)Lnet/minecraft/world/phys/Vec3D; getLightProbePosition
	k (I)V setTicksFrozen
	k (Lnet/minecraft/world/entity/Entity;)F getMyRidingOffset
	k (Z)V onAboveBubbleCol
	l ()V tick
	l (DDD)V lerpMotion
	l (F)Lnet/minecraft/world/phys/Vec3D; getPosition
	l (I)Z hasPermissions
	l (Lnet/minecraft/world/entity/Entity;)F ridingOffset
	l (Z)V onInsideBubbleColumn
	m (DDD)V moveTowardsClosestSpace
	m (F)V animateHurt
	m (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3D; getPassengerRidingPosition
	m (Z)V setInvulnerable
	n ()V resetFallDistance
	n (DDD)V teleportToWithTicket
	n (F)V setYHeadRot
	n (Lnet/minecraft/world/entity/Entity;)Z startRiding
	n (Z)V setCustomNameVisible
	n_ ()D lerpTargetX
	o (DDD)V setDeltaMovement
	o (F)V setYBodyRot
	o (Lnet/minecraft/world/entity/Entity;)Z canRide
	o (Z)V setIsInPowderSnow
	o_ ()F lerpTargetYRot
	p (DDD)V setPosRaw
	p (F)Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	p (Lnet/minecraft/world/entity/Entity;)V addPassenger
	p_ ()Z isIgnoringBlockTriggers
	q (F)Lnet/minecraft/world/phys/Vec3D; getRopeHoldPosition
	q (Lnet/minecraft/world/entity/Entity;)V removePassenger
	q_ ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	r (F)V setYRot
	r (Lnet/minecraft/world/entity/Entity;)Z canAddPassenger
	s ()V playAmethystStepSound
	s (F)V setXRot
	s (Lnet/minecraft/world/entity/Entity;)Z isAlliedTo
	t (F)V setMaxUpStep
	t (Lnet/minecraft/world/entity/Entity;)Z is
	u (Lnet/minecraft/world/entity/Entity;)Z skipAttackInteraction
	v (Lnet/minecraft/world/entity/Entity;)V copyPosition
	v_ ()Z acceptsFailure
	w ()Z isInRain
	w (Lnet/minecraft/world/entity/Entity;)V restoreFrom
	x ()Z isInBubbleColumn
	x (Lnet/minecraft/world/entity/Entity;)Z hasPassenger
	y (Lnet/minecraft/world/entity/Entity;)Z isPassengerOfSameVehicle
	z ()V updateFluidOnEyes
	z (Lnet/minecraft/world/entity/Entity;)Z hasIndirectPassenger
net/minecraft/world/entity/GlowSquid net/minecraft/world/entity/GlowSquid
	bX DATA_DARK_TICKS_REMAINING
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkGlowSquidSpawnRules
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b_ ()V aiStep
	c (I)V setDarkTicks
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/core/particles/ParticleParam; getInkParticle
	t ()Lnet/minecraft/sounds/SoundEffect; getSquirtSound
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()I getDarkTicksRemaining
net/minecraft/world/entity/Interaction$PlayerAction net/minecraft/world/entity/Interaction$PlayerAction
	a CODEC
	b player
	c timestamp
	a ()Ljava/util/UUID; player
	b ()J timestamp
net/minecraft/world/entity/Interaction net/minecraft/world/entity/Interaction
	b LOGGER
	c DATA_WIDTH_ID
	d DATA_HEIGHT_ID
	e DATA_RESPONSE_ID
	f TAG_WIDTH
	g TAG_HEIGHT
	h TAG_ATTACK
	i TAG_INTERACTION
	j TAG_RESPONSE
	k attack
	l interaction
	S_ ()Lnet/minecraft/world/entity/EntityLiving; getLastAttacker
	a (F)V setWidth
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a (Z)V setResponse
	a_ ()V defineSynchedData
	ao ()Lnet/minecraft/world/phys/AxisAlignedBB; makeBoundingBox
	b (F)V setHeight
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bq ()Z canBeHitByProjectile
	br ()Z isPickable
	l ()V tick
	p_ ()Z isIgnoringBlockTriggers
	q ()Lnet/minecraft/world/entity/EntityLiving; getTarget
	q_ ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	s ()F getWidth
	t ()F getHeight
	u (Lnet/minecraft/world/entity/Entity;)Z skipAttackInteraction
	v ()Z getResponse
	w ()Lnet/minecraft/world/entity/EntitySize; getDimensions
net/minecraft/world/entity/Marker net/minecraft/world/entity/Marker
	b DATA_TAG
	c data
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bC ()Z couldAcceptPassenger
	di ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	l ()V tick
	p (Lnet/minecraft/world/entity/Entity;)V addPassenger
	p_ ()Z isIgnoringBlockTriggers
	q_ ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	r (Lnet/minecraft/world/entity/Entity;)Z canAddPassenger
net/minecraft/world/entity/RelativeMovement net/minecraft/world/entity/RelativeMovement
	a X
	b Y
	c Z
	d Y_ROT
	e X_ROT
	f ALL
	g ROTATION
	h bit
	i $VALUES
	a ()I getMask
	a (I)Ljava/util/Set; unpack
	a (Ljava/util/Set;)I pack
	b ()[Lnet/minecraft/world/entity/RelativeMovement; $values
	b (I)Z isSet
net/minecraft/world/entity/SlotAccess net/minecraft/world/entity/SlotAccess
	b NULL
	a ()Lnet/minecraft/world/item/ItemStack; get
	a (Lnet/minecraft/world/IInventory;I)Lnet/minecraft/world/entity/SlotAccess; forContainer
	a (Lnet/minecraft/world/IInventory;ILjava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; forContainer
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/entity/SlotAccess; forEquipmentSlot
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EnumItemSlot;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; forEquipmentSlot
	a (Lnet/minecraft/world/item/ItemStack;)Z set
net/minecraft/world/entity/WalkAnimationState net/minecraft/world/entity/WalkAnimationState
	a speedOld
	b speed
	c position
	a ()F speed
	a (F)V setSpeed
	a (FF)V update
	b ()F position
	b (F)F speed
	c ()Z isMoving
	c (F)F position
net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation
	a ADDITION
	b MULTIPLY_BASE
	c MULTIPLY_TOTAL
	d CODEC
	e OPERATIONS
	f name
	g value
	h $VALUES
	a ()I toValue
	a (I)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; fromValue
	b ()[Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/ai/attributes/AttributeModifier net/minecraft/world/entity/ai/attributes/AttributeModifier
	a LOGGER
	b amount
	c operation
	d nameGetter
	e id
	a ()Ljava/util/UUID; getId
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; load
	b ()Ljava/lang/String; getName
	c ()Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; getOperation
	d ()D getAmount
	e ()Lnet/minecraft/nbt/NBTTagCompound; save
net/minecraft/world/entity/ai/behavior/AnimalPanic net/minecraft/world/entity/ai/behavior/AnimalPanic
	c PANIC_MIN_DURATION
	d PANIC_MAX_DURATION
	e PANIC_DISTANCE_HORIZONTAL
	f PANIC_DISTANCE_VERTICAL
	g DEFAULT_SHOULD_PANIC_PREDICATE
	h speedMultiplier
	i shouldPanic
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/phys/Vec3D; getPanicPos
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/entity/Entity;)Ljava/util/Optional; lookForWater
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V start
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/Behavior$Status net/minecraft/world/entity/ai/behavior/Behavior$Status
	a STOPPED
	b RUNNING
	c $VALUES
	a ()[Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; $values
net/minecraft/world/entity/ai/behavior/Behavior net/minecraft/world/entity/ai/behavior/Behavior
	a DEFAULT_DURATION
	b entryCondition
	c status
	d endTimestamp
	e minDuration
	f maxDuration
	a ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; getStatus
	a (J)Z timedOut
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityLiving;)Z hasRequiredMemories
	b ()Ljava/lang/String; debugString
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	e (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z tryStart
	f (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tickOrStop
	g (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V doStop
net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks
	c cooldownTicks
	a (J)Z timedOut
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; getCooldownTickMemory
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
net/minecraft/world/entity/ai/behavior/Croak net/minecraft/world/entity/ai/behavior/Croak
	c CROAK_TICKS
	d TIME_OUT_DURATION
	e croakCounter
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)V tick
net/minecraft/world/entity/ai/behavior/FollowTemptation net/minecraft/world/entity/ai/behavior/FollowTemptation
	c TEMPTATION_COOLDOWN
	d DEFAULT_CLOSE_ENOUGH_DIST
	e BACKED_UP_CLOSE_ENOUGH_DIST
	f speedModifier
	g closeEnoughDistance
	a (J)Z timedOut
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityCreature;)F getSpeedModifier
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V start
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/world/entity/EntityCreature;)Ljava/util/Optional; getTemptingPlayer
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/GoAndGiveItemsToTarget net/minecraft/world/entity/ai/behavior/GoAndGiveItemsToTarget
	c CLOSE_ENOUGH_DISTANCE_TO_TARGET
	d ITEM_PICKUP_COOLDOWN_AFTER_THROWING
	e targetPositionGetter
	f speedModifier
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3D;)V throwItem
	a (Lnet/minecraft/world/entity/ai/behavior/BehaviorPosition;)Lnet/minecraft/world/phys/Vec3D; getThrowPosition
	a (Lnet/minecraft/world/entity/ai/behavior/BehaviorPosition;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/level/EntityPlayer;)V triggerDropItemOnBlock
	b (Lnet/minecraft/world/entity/EntityLiving;)Z canThrowItemToTarget
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/LongJumpMidJump net/minecraft/world/entity/ai/behavior/LongJumpMidJump
	c TIME_OUT_DURATION
	d timeBetweenLongJumps
	e landingSound
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V start
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock
	m preferredBlockTag
	n preferredBlocksChance
	o notPrefferedJumpCandidates
	p currentlyWantingPreferredOnes
	a (Lnet/minecraft/server/level/WorldServer;)Ljava/util/Optional; getJumpCandidate
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos
	c FIND_JUMP_TRIES
	d MIN_PATHFIND_DISTANCE_TO_VALID_JUMP
	e maxLongJumpHeight
	f maxLongJumpWidth
	g maxJumpVelocity
	h jumpCandidates
	i initialPosition
	j chosenJump
	k findJumpTries
	l prepareJumpStart
	m PREPARE_JUMP_DURATION
	n TIME_OUT_DURATION
	o ALLOWED_ANGLES
	p timeBetweenLongJumps
	q getJumpSound
	r acceptableLandingSpot
	a (Lnet/minecraft/server/level/WorldServer;)Ljava/util/Optional; getJumpCandidate
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V start
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/core/BlockPosition;)Z isAcceptableLandingPosition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/core/BlockPosition;)Z defaultAcceptableLandingSpot
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntitySize;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z isClearTransition
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; calculateOptimalJumpVector
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/phys/Vec3D;I)Lnet/minecraft/world/phys/Vec3D; calculateJumpVectorForAngle
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)Z canStillUse
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V pickCandidate
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/OneShot net/minecraft/world/entity/ai/behavior/OneShot
	a status
	a ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; getStatus
	b ()Ljava/lang/String; debugString
	e (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z tryStart
	f (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tickOrStop
	g (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V doStop
net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget
	c TIME_OUT_DURATION
	d getCooldownOnFail
	e minRamDistance
	f maxRamDistance
	g walkSpeed
	h ramTargeting
	i ramPrepareTime
	j getPrepareRamSound
	k reachedRamPositionTimestamp
	l ramCandidate
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/Vec3D; getEdgeOfBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V start
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/core/BlockPosition;)Z isWalkableBlock
	a (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; calculateRammingStartPosition
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/world/entity/EntityLiving;)V chooseRamPosition
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)Z canStillUse
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/RamTarget net/minecraft/world/entity/ai/behavior/RamTarget
	c TIME_OUT_DURATION
	d RAM_SPEED_FORCE_FACTOR
	e getTimeBetweenRams
	f ramTargeting
	g speed
	h getKnockbackForce
	i ramDirection
	j getImpactSound
	k getHornBreakSound
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/goat/Goat;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/goat/Goat;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/goat/Goat;)V finishRam
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/goat/Goat;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/goat/Goat;)Z hasRammedHornBreakingBlock
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/goat/Goat;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/RandomLookAround net/minecraft/world/entity/ai/behavior/RandomLookAround
	c interval
	d maxYaw
	e minPitch
	f pitchRange
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/ShufflingList net/minecraft/world/entity/ai/behavior/ShufflingList
	a entries
	b random
	a ()Lnet/minecraft/world/entity/ai/behavior/ShufflingList; shuffle
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/Object;I)Lnet/minecraft/world/entity/ai/behavior/ShufflingList; add
	b ()Ljava/util/stream/Stream; stream
net/minecraft/world/entity/ai/behavior/TryFindLand net/minecraft/world/entity/ai/behavior/TryFindLand
	a COOLDOWN_TICKS
	a (IF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder
	a trigger
	a ()Lboj$b; instance
	a (Lboj$e;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; create
	a (Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; unbox
	a (Ljava/util/function/BiPredicate;)Lnet/minecraft/world/entity/ai/behavior/OneShot; triggerIf
	a (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/OneShot; triggerIf
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/behavior/OneShot;)Lnet/minecraft/world/entity/ai/behavior/OneShot; triggerIf
	a (Lnet/minecraft/world/entity/ai/behavior/declarative/Trigger;Lnet/minecraft/world/entity/ai/behavior/declarative/Trigger;)Lnet/minecraft/world/entity/ai/behavior/OneShot; sequence
	b (Lcom/mojang/datafixers/kinds/App;)Lboj$e; get
net/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor net/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor
	a brain
	b memoryType
	c value
	a ()Lcom/mojang/datafixers/kinds/App; value
	a (Ljava/lang/Object;)V set
	a (Ljava/lang/Object;J)V setWithExpiry
	a (Ljava/util/Optional;)V setOrErase
	b ()V erase
net/minecraft/world/entity/ai/behavior/warden/Roar net/minecraft/world/entity/ai/behavior/warden/Roar
	c TICKS_BEFORE_PLAYING_ROAR_SOUND
	d ROAR_ANGER_INCREASE
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V start
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z canStillUse
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V stop
net/minecraft/world/entity/ai/behavior/warden/Sniffing net/minecraft/world/entity/ai/behavior/warden/Sniffing
	c ANGER_FROM_SNIFFING_MAX_DISTANCE_XZ
	d ANGER_FROM_SNIFFING_MAX_DISTANCE_Y
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/warden/SonicBoom net/minecraft/world/entity/ai/behavior/warden/SonicBoom
	c COOLDOWN
	d DISTANCE_XZ
	e DISTANCE_Y
	f KNOCKBACK_VERTICAL
	g KNOCKBACK_HORIZONTAL
	h TICKS_BEFORE_PLAYING_SOUND
	i DURATION
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityLiving;I)V setCooldown
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V stop
net/minecraft/world/entity/ai/behavior/warden/TryToSniff net/minecraft/world/entity/ai/behavior/warden/TryToSniff
	a SNIFF_COOLDOWN
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl
	h maxYRotFromCenter
	i HEAD_TILT_X
	j HEAD_TILT_Y
	a ()V tick
net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl
	l FULL_SPEED_TURN_THRESHOLD
	m STOP_TURN_THRESHOLD
	n maxTurnX
	o maxTurnY
	p inWaterSpeedModifier
	q outsideWaterSpeedModifier
	r applyGravity
	a ()V tick
	a (F)F getTurningSpeedFactor
net/minecraft/world/entity/ai/goal/ClimbOnTopOfPowderSnowGoal net/minecraft/world/entity/ai/goal/ClimbOnTopOfPowderSnowGoal
	a mob
	b level
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/ai/goal/RandomStandGoal net/minecraft/world/entity/ai/goal/RandomStandGoal
	a horse
	b nextStand
	Q_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;)V resetStandInterval
	b ()Z canContinueToUse
	c ()V start
	h ()V playStandSound
net/minecraft/world/entity/ai/memory/MemoryModuleType net/minecraft/world/entity/ai/memory/MemoryModuleType
	A NEAREST_HOSTILE
	B NEAREST_ATTACKABLE
	C HIDING_PLACE
	D HEARD_BELL_TIME
	E CANT_REACH_WALK_TARGET_SINCE
	F GOLEM_DETECTED_RECENTLY
	G LAST_SLEPT
	H LAST_WOKEN
	I LAST_WORKED_AT_POI
	J NEAREST_VISIBLE_ADULT
	K NEAREST_VISIBLE_WANTED_ITEM
	L NEAREST_VISIBLE_NEMESIS
	M PLAY_DEAD_TICKS
	N TEMPTING_PLAYER
	O TEMPTATION_COOLDOWN_TICKS
	P GAZE_COOLDOWN_TICKS
	Q IS_TEMPTED
	R LONG_JUMP_COOLDOWN_TICKS
	S LONG_JUMP_MID_JUMP
	T HAS_HUNTING_COOLDOWN
	U RAM_COOLDOWN_TICKS
	V RAM_TARGET
	W IS_IN_WATER
	X IS_PREGNANT
	Y IS_PANICKING
	Z UNREACHABLE_TONGUE_TARGETS
	a DUMMY
	aA IS_SNIFFING
	aB IS_EMERGING
	aC ROAR_SOUND_DELAY
	aD DIG_COOLDOWN
	aE ROAR_SOUND_COOLDOWN
	aF SNIFF_COOLDOWN
	aG TOUCH_COOLDOWN
	aH VIBRATION_COOLDOWN
	aI SONIC_BOOM_COOLDOWN
	aJ SONIC_BOOM_SOUND_COOLDOWN
	aK SONIC_BOOM_SOUND_DELAY
	aL LIKED_PLAYER
	aM LIKED_NOTEBLOCK_POSITION
	aN LIKED_NOTEBLOCK_COOLDOWN_TICKS
	aO ITEM_PICKUP_COOLDOWN_TICKS
	aP SNIFFER_EXPLORED_POSITIONS
	aQ SNIFFER_SNIFFING_TARGET
	aR SNIFFER_DIGGING
	aS SNIFFER_HAPPY
	aT codec
	aa ANGRY_AT
	ab UNIVERSAL_ANGER
	ac ADMIRING_ITEM
	ad TIME_TRYING_TO_REACH_ADMIRE_ITEM
	ae DISABLE_WALK_TO_ADMIRE_ITEM
	af ADMIRING_DISABLED
	ag HUNTED_RECENTLY
	ah CELEBRATE_LOCATION
	ai DANCING
	aj NEAREST_VISIBLE_HUNTABLE_HOGLIN
	ak NEAREST_VISIBLE_BABY_HOGLIN
	al NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
	am NEARBY_ADULT_PIGLINS
	an NEAREST_VISIBLE_ADULT_PIGLINS
	ao NEAREST_VISIBLE_ADULT_HOGLINS
	ap NEAREST_VISIBLE_ADULT_PIGLIN
	aq NEAREST_VISIBLE_ZOMBIFIED
	ar VISIBLE_ADULT_PIGLIN_COUNT
	as VISIBLE_ADULT_HOGLIN_COUNT
	at NEAREST_PLAYER_HOLDING_WANTED_ITEM
	au ATE_RECENTLY
	av NEAREST_REPELLENT
	aw PACIFIED
	ax ROAR_TARGET
	ay DISTURBANCE_LOCATION
	az RECENT_PROJECTILE
	b HOME
	c JOB_SITE
	d POTENTIAL_JOB_SITE
	e MEETING_POINT
	f SECONDARY_JOB_SITE
	g NEAREST_LIVING_ENTITIES
	h NEAREST_VISIBLE_LIVING_ENTITIES
	i VISIBLE_VILLAGER_BABIES
	j NEAREST_PLAYERS
	k NEAREST_VISIBLE_PLAYER
	l NEAREST_VISIBLE_ATTACKABLE_PLAYER
	m WALK_TARGET
	n LOOK_TARGET
	o ATTACK_TARGET
	p ATTACK_COOLING_DOWN
	q INTERACTION_TARGET
	r BREED_TARGET
	s RIDE_TARGET
	t PATH
	u INTERACTABLE_DOORS
	v DOORS_TO_CLOSE
	w NEAREST_BED
	x HURT_BY
	y HURT_BY_ENTITY
	z AVOID_TARGET
	a ()Ljava/util/Optional; getCodec
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; register
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; register
net/minecraft/world/entity/ai/memory/MemoryStatus net/minecraft/world/entity/ai/memory/MemoryStatus
	a VALUE_PRESENT
	b VALUE_ABSENT
	c REGISTERED
	d $VALUES
	a ()[Lnet/minecraft/world/entity/ai/memory/MemoryStatus; $values
net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities
	a EMPTY
	b nearbyEntities
	c lineOfSightTest
	a ()Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities; empty
	a (Ljava/util/function/Predicate;)Ljava/util/Optional; findClosest
	a (Lnet/minecraft/world/entity/EntityLiving;)Z contains
	b (Ljava/util/function/Predicate;)Ljava/lang/Iterable; findAll
	c (Ljava/util/function/Predicate;)Ljava/util/stream/Stream; find
	d (Ljava/util/function/Predicate;)Z contains
net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor
	a TARGET_DETECTION_DISTANCE
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isMatchingEntity
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; getMemory
	b (Lnet/minecraft/world/entity/EntityLiving;)Z isHostileTarget
	e (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isHuntTarget
	f (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isClose
net/minecraft/world/entity/ai/sensing/FrogAttackablesSensor net/minecraft/world/entity/ai/sensing/FrogAttackablesSensor
	a TARGET_DETECTION_DISTANCE
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isMatchingEntity
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; getMemory
	e (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isUnreachableAttackTarget
net/minecraft/world/entity/ai/sensing/Sensor net/minecraft/world/entity/ai/sensing/Sensor
	a RANDOM
	b TARGETING_RANGE
	c DEFAULT_SCAN_RATE
	d TARGET_CONDITIONS
	e TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f ATTACK_TARGET_CONDITIONS
	g ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	h ATTACK_TARGET_CONDITIONS_IGNORE_LINE_OF_SIGHT
	i ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_AND_LINE_OF_SIGHT
	j scanRate
	k timeToTick
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V tick
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isEntityTargetable
	c (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isEntityAttackable
	d (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isEntityAttackableIgnoringLineOfSight
net/minecraft/world/entity/ai/sensing/SensorType net/minecraft/world/entity/ai/sensing/SensorType
	a DUMMY
	b NEAREST_ITEMS
	c NEAREST_LIVING_ENTITIES
	d NEAREST_PLAYERS
	e NEAREST_BED
	f HURT_BY
	g VILLAGER_HOSTILES
	h VILLAGER_BABIES
	i SECONDARY_POIS
	j GOLEM_DETECTED
	k PIGLIN_SPECIFIC_SENSOR
	l PIGLIN_BRUTE_SPECIFIC_SENSOR
	m HOGLIN_SPECIFIC_SENSOR
	n NEAREST_ADULT
	o AXOLOTL_ATTACKABLES
	p AXOLOTL_TEMPTATIONS
	q GOAT_TEMPTATIONS
	r FROG_TEMPTATIONS
	s CAMEL_TEMPTATIONS
	t FROG_ATTACKABLES
	u IS_IN_WATER
	v WARDEN_ENTITY_SENSOR
	w SNIFFER_TEMPTATIONS
	x factory
	a ()Lnet/minecraft/world/entity/ai/sensing/Sensor; create
	a (Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/world/entity/ai/sensing/SensorType; register
net/minecraft/world/entity/ai/sensing/TemptingSensor net/minecraft/world/entity/ai/sensing/TemptingSensor
	a TEMPTATION_RANGE
	c TEMPT_TARGETING
	d temptations
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;)V doTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z playerHoldingTemptation
	a (Lnet/minecraft/world/item/ItemStack;)Z isTemptation
net/minecraft/world/entity/ai/village/VillageSiege$State net/minecraft/world/entity/ai/village/VillageSiege$State
	a SIEGE_CAN_ACTIVATE
	b SIEGE_TONIGHT
	c SIEGE_DONE
	d $VALUES
	a ()[Lnet/minecraft/world/entity/ai/village/VillageSiege$State; $values
net/minecraft/world/entity/ai/village/VillageSiege net/minecraft/world/entity/ai/village/VillageSiege
	a LOGGER
	b hasSetupSiege
	c siegeState
	d zombiesToSpawn
	e nextSpawnTime
	f spawnX
	g spawnY
	h spawnZ
	a (Lnet/minecraft/server/level/WorldServer;)Z tryToSetupSiege
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/Vec3D; findRandomSpawnPos
	a (Lnet/minecraft/server/level/WorldServer;ZZ)I tick
	b (Lnet/minecraft/server/level/WorldServer;)V trySpawn
net/minecraft/world/entity/ai/village/poi/PoiTypes net/minecraft/world/entity/ai/village/poi/PoiTypes
	a ARMORER
	b BUTCHER
	c CARTOGRAPHER
	d CLERIC
	e FARMER
	f FISHERMAN
	g FLETCHER
	h LEATHERWORKER
	i LIBRARIAN
	j MASON
	k SHEPHERD
	l TOOLSMITH
	m WEAPONSMITH
	n HOME
	o MEETING
	p BEEHIVE
	q BEE_NEST
	r NETHER_PORTAL
	s LODESTONE
	t LIGHTNING_ROD
	u BEDS
	v CAULDRONS
	w TYPE_BY_STATE
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/core/Holder;Ljava/util/Set;)V registerBlockStates
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/world/entity/ai/village/poi/VillagePlaceType; bootstrap
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/resources/ResourceKey;Ljava/util/Set;II)Lnet/minecraft/world/entity/ai/village/poi/VillagePlaceType; register
	a (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; getBlockStates
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; forState
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasPoi
net/minecraft/world/entity/animal/CatVariant net/minecraft/world/entity/animal/CatVariant
	a TABBY
	b BLACK
	c RED
	d SIAMESE
	e BRITISH_SHORTHAIR
	f CALICO
	g PERSIAN
	h RAGDOLL
	i WHITE
	j JELLIE
	k ALL_BLACK
	l texture
	a ()Lnet/minecraft/resources/MinecraftKey; texture
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/world/entity/animal/CatVariant; bootstrap
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/world/entity/animal/CatVariant; register
net/minecraft/world/entity/animal/FrogVariant net/minecraft/world/entity/animal/FrogVariant
	a TEMPERATE
	b WARM
	c COLD
	d texture
	a ()Lnet/minecraft/resources/MinecraftKey; texture
	a (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/entity/animal/FrogVariant; register
net/minecraft/world/entity/animal/allay/Allay net/minecraft/world/entity/animal/allay/Allay
	b SENSOR_TYPES
	bT ITEM_PICKUP_REACH
	bU LIFTING_ITEM_ANIMATION_DURATION
	bV DANCING_LOOP_DURATION
	bW SPINNING_ANIMATION_DURATION
	bX DUPLICATION_ITEM
	bY DUPLICATION_COOLDOWN_TICKS
	bZ NUM_OF_DUPLICATION_HEARTS
	c MEMORY_TYPES
	ca DATA_DANCING
	cb DATA_CAN_DUPLICATE
	cc dynamicVibrationListener
	cd vibrationData
	ce vibrationUser
	cf dynamicJukeboxListener
	cg inventory
	ch jukeboxPos
	ci duplicationCooldown
	cj holdingItemAnimationTicks
	ck holdingItemAnimationTicks0
	cl dancingAnimationTicks
	cm spinningAnimationTicks
	cn spinningAnimationTicks0
	d THROW_SOUND_PITCHES
	e LOGGER
	E (F)F getHoldingItemAnimationProgress
	F (F)F getSpinningProgress
	T ()Lnet/minecraft/core/BaseBlockPosition; getPickupReach
	W ()V sendDebugPackets
	X ()V customServerAiStep
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Ljava/util/function/BiConsumer;)V updateDynamicGameEventListener
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V removeInteractionItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z equipmentHasChanged
	aR ()Z isFlapping
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/core/BlockPosition;Z)V setJukeboxPlaying
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	b_ ()V aiStep
	cI ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	d (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z allayConsidersItemEqual
	dN ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dO ()Lbkg$b; brainProvider
	e (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z hasNonMatchingPotion
	eV ()F getSoundVolume
	ex ()V dropEquipment
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fJ ()Z canPickUpLoot
	gb ()Z shouldStayCloseToLeashHolder
	gd ()Z isDancing
	ge ()Z isSpinning
	gf ()Ldkc$a; getVibrationData
	gg ()Ldkc$d; getVibrationUser
	gh ()Z isOnPickupCooldown
	gi ()Z shouldStopDancing
	gj ()V updateDuplicationCooldown
	gk ()V duplicateAllay
	gl ()V resetDuplicationCooldown
	gm ()Z canDuplicate
	gn ()V spawnHeartParticle
	h (D)Z removeWhenFarAway
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	k (Lnet/minecraft/world/item/ItemStack;)Z wantsToPickUp
	l ()V tick
	l (Lnet/minecraft/world/entity/Entity;)F ridingOffset
	l (Lnet/minecraft/world/item/ItemStack;)Z isDuplicationItem
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Z hasItemInHand
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setDancing
	y ()Lnet/minecraft/world/InventorySubcontainer; getInventory
net/minecraft/world/entity/animal/allay/AllayAi net/minecraft/world/entity/animal/allay/AllayAi
	a SPEED_MULTIPLIER_WHEN_IDLING
	b SPEED_MULTIPLIER_WHEN_FOLLOWING_DEPOSIT_TARGET
	c SPEED_MULTIPLIER_WHEN_RETRIEVING_ITEM
	d SPEED_MULTIPLIER_WHEN_PANICKING
	e CLOSE_ENOUGH_TO_TARGET
	f TOO_FAR_FROM_TARGET
	g MAX_LOOK_DISTANCE
	h MIN_WAIT_DURATION
	i MAX_WAIT_DURATION
	j TIME_TO_FORGET_NOTEBLOCK
	k DISTANCE_TO_WANTED_ITEM
	l GIVE_ITEM_TIMEOUT_DURATION
	a (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; getLikedPlayer
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/core/BlockPosition;)V hearNoteblock
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/BehaviorController;Lnet/minecraft/core/GlobalPos;)Z shouldDepositItemsAtLikedNoteblock
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/animal/allay/Allay;)V updateActivity
	b (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; getItemDepositPosition
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	c (Lnet/minecraft/world/entity/EntityLiving;)Z hasWantedItem
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	d (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; getLikedPlayerPositionTracker
net/minecraft/world/entity/animal/axolotl/Axolotl$Variant net/minecraft/world/entity/animal/axolotl/Axolotl$Variant
	a LUCY
	b WILD
	c GOLD
	d CYAN
	e BLUE
	f CODEC
	g BY_ID
	h id
	i name
	j common
	k $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; byId
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; getCommonSpawnVariant
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; getSpawnVariant
	b ()Ljava/lang/String; getName
	b (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; getRareSpawnVariant
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; $values
net/minecraft/world/entity/animal/axolotl/Axolotl net/minecraft/world/entity/animal/axolotl/Axolotl
	bT TOTAL_PLAYDEAD_TIME
	bU SENSOR_TYPES
	bW MEMORY_TYPES
	bX PLAYER_REGEN_DETECTION_RANGE
	bY RARE_VARIANT_CHANCE
	bZ VARIANT_TAG
	ca DATA_VARIANT
	cb DATA_PLAYING_DEAD
	cc FROM_BUCKET
	cd AXOLOTL_TOTAL_AIR_SUPPLY
	ce REHYDRATE_AIR_SUPPLY
	cf REGEN_BUFF_MAX_DURATION
	cg modelRotationValues
	ch REGEN_BUFF_BASE_DURATION
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	P ()V playAmbientSound
	U ()Z requiresCustomPersistence
	W ()V sendDebugPackets
	X ()V customServerAiStep
	Y ()I getMaxHeadXRot
	Z ()I getMaxHeadYRot
	a ()Ljava/util/Map; getModelRotationValues
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/util/RandomSource;)Z useRareVariant
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkAxolotlSpawnRules
	a (Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant;)V setVariant
	a (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;Lnet/minecraft/world/entity/EntityLiving;)V onStopAttacking
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aL ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	aM ()Lnet/minecraft/sounds/SoundEffect; getSwimSplashSound
	a_ ()V defineSynchedData
	aq ()V baseTick
	b ()Lnet/minecraft/world/item/ItemStack; getBucketItemStack
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	c ()Ljava/lang/Object; getVariant
	c (Lnet/minecraft/nbt/NBTTagCompound;)V loadFromBucketTag
	cg ()I getMaxAirSupply
	cy ()Z isPushedByFluid
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dN ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dO ()Lbkg$b; brainProvider
	dQ ()Z canBreatheUnderwater
	eR ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	en ()Z canBeSeenAsEnemy
	f (Lnet/minecraft/world/entity/player/EntityHuman;)V applySupportingEffects
	gd ()Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; getVariant
	gj ()Z isPlayingDead
	gk ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	h (D)Z removeWhenFarAway
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	l (Lnet/minecraft/world/item/ItemStack;)V saveToBucketTag
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s ()V rehydrate
	t ()Z fromBucket
	t (I)V handleAirSupply
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setFromBucket
	x (Z)V setPlayingDead
	y ()Lnet/minecraft/sounds/SoundEffect; getPickupSound
net/minecraft/world/entity/animal/axolotl/AxolotlAi net/minecraft/world/entity/animal/axolotl/AxolotlAi
	a ADULT_FOLLOW_RANGE
	b SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	c SPEED_MULTIPLIER_ON_LAND
	d SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	e SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER
	f SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER
	a ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getTemptations
	a (Lnet/minecraft/world/entity/EntityLiving;)Z canSetWalkTargetFromLookTarget
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V updateActivity
	b (Lnet/minecraft/world/entity/EntityLiving;)F getSpeedModifierChasing
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initPlayDeadActivity
	b (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Ljava/util/Optional; findNearestValidAttackTarget
	c (Lnet/minecraft/world/entity/EntityLiving;)F getSpeedModifierFollowingAdult
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initFightActivity
	d (Lnet/minecraft/world/entity/EntityLiving;)F getSpeedModifier
	d (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	e (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
net/minecraft/world/entity/animal/camel/Camel net/minecraft/world/entity/animal/camel/Camel
	bT TEMPTATION_ITEM
	bU BABY_SCALE
	bW DASH_COOLDOWN_TICKS
	bX MAX_HEAD_Y_ROT
	bY DASH
	bZ LAST_POSE_CHANGE_TICK
	cA STANDUP_DURATION_TICKS
	cB IDLE_MINIMAL_DURATION_TICKS
	cC SITTING_HEIGHT_DIFFERENCE
	cD SITTING_DIMENSIONS
	cE dashCooldown
	cF idleAnimationTimeout
	ca sitAnimationState
	cb sitPoseAnimationState
	cc sitUpAnimationState
	cd idleAnimationState
	ce dashAnimationState
	cv RUNNING_SPEED_BONUS
	cw DASH_VERTICAL_MOMENTUM
	cx DASH_HORIZONTAL_MOMENTUM
	cy DASH_MINIMUM_DURATION_TICKS
	cz SITDOWN_DURATION_TICKS
	D (F)V onLeashDistance
	F ()Lnet/minecraft/world/entity/ai/control/EntityAIBodyControl; createBodyControl
	W ()V sendDebugPackets
	W_ ()Lnet/minecraft/sounds/SoundEffect; getSaddleSoundEvent
	X ()V customServerAiStep
	Z ()I getMaxHeadYRot
	a ()Z canJump
	a (J)V resetLastPoseChangeTick
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/Entity;F)V clampHeadRotationToBody
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)Z handleEating
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;)V tickRidden
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (ZFLnet/minecraft/world/entity/EntitySize;F)D getBodyAnchorAnimationYOffset
	a_ ()V defineSynchedData
	aa_ ()I getJumpCooldown
	b ()V handleStopJump
	b (FLnet/minecraft/world/phys/Vec3D;)V executeRidersJump
	b (I)V onPlayerJump
	b (J)V resetLastPoseChangeTickToFullStand
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/camel/Camel; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V openCustomInventoryScreen
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getRiddenInput
	c (I)V handleStartJump
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dE ()Z canSprint
	dO ()Lbkg$b; brainProvider
	dY ()F getScale
	e (Lnet/minecraft/world/entity/player/EntityHuman;)F getRiddenSpeed
	f (Lnet/minecraft/world/damagesource/DamageSource;F)V actuallyHurt
	gP ()V setupAnimationStates
	gQ ()Z isVisuallySittingDown
	gd ()Z canCamelChangePose
	gj ()Z canPerformRearing
	gk ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	gl ()Z isCamelSitting
	gm ()Z isCamelVisuallySitting
	gn ()Z isInPoseTransition
	go ()V sitDown
	gp ()V standUp
	gq ()V standUpInstantly
	gr ()J getPoseTime
	gs ()Z isTamed
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	j (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec2F; getRiddenRotation
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	p (F)Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	r (Lnet/minecraft/world/entity/Entity;)Z canAddPassenger
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Z refuseToMove
	v (F)V updateWalkAnimation
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setDashing
	y ()Z isDashing
	z ()V registerGoals
net/minecraft/world/entity/animal/camel/CamelAi net/minecraft/world/entity/animal/camel/CamelAi
	a SPEED_MULTIPLIER_WHEN_PANICKING
	b SPEED_MULTIPLIER_WHEN_IDLING
	c SPEED_MULTIPLIER_WHEN_TEMPTED
	d SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	e SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f ADULT_FOLLOW_RANGE
	g SENSOR_TYPES
	h MEMORY_TYPES
	a ()Lbkg$b; brainProvider
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/animal/camel/Camel;)V updateActivity
	a (Lnet/minecraft/world/entity/animal/camel/Camel;Lnet/minecraft/util/RandomSource;)V initMemories
	b ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getTemptations
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
net/minecraft/world/entity/animal/frog/Frog net/minecraft/world/entity/animal/frog/Frog
	bT TEMPTATION_ITEM
	bU SENSOR_TYPES
	bW MEMORY_TYPES
	bX VARIANT_KEY
	bY jumpAnimationState
	bZ croakAnimationState
	ca tongueAnimationState
	cb swimIdleAnimationState
	cc DATA_VARIANT_ID
	cd DATA_TONGUE_TARGET_ID
	ce FROG_FALL_DAMAGE_REDUCTION
	W ()V sendDebugPackets
	X ()V customServerAiStep
	Z ()I getMaxHeadYRot
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;)V spawnChildFromBreeding
	a (Lnet/minecraft/world/entity/Entity;)V setTongueTarget
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/animal/FrogVariant;)V setVariant
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Z)V setBaby
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	c ()Ljava/lang/Object; getVariant
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkFrogSpawnRules
	cy ()Z isPushedByFluid
	d (FF)I calculateFallDamage
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dN ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dO ()Lbkg$b; brainProvider
	dQ ()Z canBreatheUnderwater
	fG ()I getHeadRotSpeed
	gd ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	j (Lnet/minecraft/world/entity/EntityLiving;)Z canEat
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	m_ ()Z isBaby
	s ()V eraseTongueTarget
	t ()Ljava/util/Optional; getTongueTarget
	v (F)V updateWalkAnimation
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()Lnet/minecraft/world/entity/animal/FrogVariant; getVariant
net/minecraft/world/entity/animal/frog/FrogAi net/minecraft/world/entity/animal/frog/FrogAi
	a SPEED_MULTIPLIER_WHEN_PANICKING
	b SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	c SPEED_MULTIPLIER_WHEN_IDLING
	d SPEED_MULTIPLIER_ON_LAND
	e SPEED_MULTIPLIER_IN_WATER
	f TIME_BETWEEN_LONG_JUMPS
	g MAX_LONG_JUMP_HEIGHT
	h MAX_LONG_JUMP_WIDTH
	i MAX_JUMP_VELOCITY
	j SPEED_MULTIPLIER_WHEN_TEMPTED
	a ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getTemptations
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/core/BlockPosition;)Z isAcceptableLandingSpot
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/animal/frog/Frog;)V updateActivity
	a (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/util/RandomSource;)V initMemories
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	b (Lnet/minecraft/world/entity/animal/frog/Frog;)Z canAttack
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	d (Lnet/minecraft/world/entity/ai/BehaviorController;)V initSwimActivity
	e (Lnet/minecraft/world/entity/ai/BehaviorController;)V initLaySpawnActivity
	f (Lnet/minecraft/world/entity/ai/BehaviorController;)V initJumpActivity
	g (Lnet/minecraft/world/entity/ai/BehaviorController;)V initTongueActivity
net/minecraft/world/entity/animal/frog/ShootTongue net/minecraft/world/entity/animal/frog/ShootTongue
	c TIME_OUT_DURATION
	d CATCH_ANIMATION_DURATION
	e TONGUE_ANIMATION_DURATION
	f UNREACHABLE_TONGUE_TARGETS_COOLDOWN_DURATION
	g MAX_UNREACHBLE_TONGUE_TARGETS_IN_MEMORY
	h EATING_DISTANCE
	i EATING_MOVEMENT_FACTOR
	j eatAnimationTimer
	k calculatePathCounter
	l tongueSound
	m eatSound
	n itemSpawnPos
	o state
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)Z canStillUse
	a (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/world/entity/EntityLiving;)Z canPathfindToTarget
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;)V eatEntity
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)V start
	b (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/world/entity/EntityLiving;)V addUnreachableTargetToMemory
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)V tick
net/minecraft/world/entity/animal/frog/Tadpole net/minecraft/world/entity/animal/frog/Tadpole
	b ticksToBeFrog
	bT MEMORY_TYPES
	bU age
	c HITBOX_WIDTH
	d HITBOX_HEIGHT
	e SENSOR_TYPES
	W ()V sendDebugPackets
	X ()V customServerAiStep
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V feed
	b ()Lnet/minecraft/world/item/ItemStack; getBucketItemStack
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V usePlayerItem
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	b_ ()V aiStep
	c (I)V ageUp
	c (Lnet/minecraft/nbt/NBTTagCompound;)V loadFromBucketTag
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dN ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dO ()Lbkg$b; brainProvider
	eb ()Z shouldDropExperience
	ge ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	gf ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	gg ()I getAge
	gh ()V ageUp
	gi ()I getTicksLeftUntilAdult
	l (Lnet/minecraft/world/item/ItemStack;)V saveToBucketTag
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s (I)V setAge
	t ()Z fromBucket
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setFromBucket
	y ()Lnet/minecraft/sounds/SoundEffect; getPickupSound
net/minecraft/world/entity/animal/frog/TadpoleAi net/minecraft/world/entity/animal/frog/TadpoleAi
	a SPEED_MULTIPLIER_WHEN_PANICKING
	b SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	c SPEED_MULTIPLIER_WHEN_TEMPTED
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/animal/frog/Tadpole;)V updateActivity
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
net/minecraft/world/entity/animal/goat/Goat net/minecraft/world/entity/animal/goat/Goat
	bT LONG_JUMPING_DIMENSIONS
	bU SENSOR_TYPES
	bW MEMORY_TYPES
	bX GOAT_FALL_DAMAGE_REDUCTION
	bY GOAT_SCREAMING_CHANCE
	bZ UNIHORN_CHANCE
	ca ADULT_ATTACK_DAMAGE
	cb BABY_ATTACK_DAMAGE
	cc DATA_IS_SCREAMING_GOAT
	cd DATA_HAS_LEFT_HORN
	ce DATA_HAS_RIGHT_HORN
	cf isLoweringHead
	cg lowerHeadTick
	W ()V sendDebugPackets
	X ()V customServerAiStep
	Z ()I getMaxHeadYRot
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/goat/Goat; getBreedOffspring
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkGoatSpawnRules
	d (FF)I calculateFallDamage
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	d (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEffect; getEatingSound
	dN ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dO ()Lbkg$b; brainProvider
	gd ()Z hasLeftHorn
	gj ()Z hasRightHorn
	gk ()Z dropHorn
	gl ()V addHorns
	gm ()V removeHorns
	gn ()Z isScreamingGoat
	go ()F getRammingXHeadRot
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m ()V ageBoundaryReached
	n (F)V setYHeadRot
	s ()Lnet/minecraft/world/item/ItemStack; createHorn
	t ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setScreamingGoat
	y ()Lnet/minecraft/sounds/SoundEffect; getMilkingSound
net/minecraft/world/entity/animal/goat/GoatAi net/minecraft/world/entity/animal/goat/GoatAi
	a RAM_PREPARE_TIME
	b RAM_MAX_DISTANCE
	c MAX_LONG_JUMP_HEIGHT
	d MAX_LONG_JUMP_WIDTH
	e MAX_JUMP_VELOCITY
	f RAM_MIN_DISTANCE
	g ADULT_RAM_KNOCKBACK_FORCE
	h BABY_RAM_KNOCKBACK_FORCE
	i ADULT_FOLLOW_RANGE
	j SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	k SPEED_MULTIPLIER_WHEN_IDLING
	l SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	m SPEED_MULTIPLIER_WHEN_TEMPTED
	n SPEED_MULTIPLIER_WHEN_PANICKING
	o SPEED_MULTIPLIER_WHEN_PREPARING_TO_RAM
	p TIME_BETWEEN_LONG_JUMPS
	q TIME_BETWEEN_RAMS
	r TIME_BETWEEN_RAMS_SCREAMER
	s RAM_TARGET_CONDITIONS
	t SPEED_MULTIPLIER_WHEN_RAMMING
	a ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getTemptations
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/animal/goat/Goat;)V updateActivity
	a (Lnet/minecraft/world/entity/animal/goat/Goat;Lnet/minecraft/util/RandomSource;)V initMemories
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	d (Lnet/minecraft/world/entity/ai/BehaviorController;)V initLongJumpActivity
	e (Lnet/minecraft/world/entity/ai/BehaviorController;)V initRamActivity
net/minecraft/world/entity/animal/sniffer/Sniffer$State net/minecraft/world/entity/animal/sniffer/Sniffer$State
	a IDLING
	b FEELING_HAPPY
	c SCENTING
	d SNIFFING
	e SEARCHING
	f DIGGING
	g RISING
	h $VALUES
	a ()[Lnet/minecraft/world/entity/animal/sniffer/Sniffer$State; $values
net/minecraft/world/entity/animal/sniffer/Sniffer net/minecraft/world/entity/animal/sniffer/Sniffer
	bT feelingHappyAnimationState
	bU scentingAnimationState
	bW sniffingAnimationState
	bX diggingAnimationState
	bY risingAnimationState
	bZ DIGGING_PARTICLES_DELAY_TICKS
	ca DIGGING_PARTICLES_DURATION_TICKS
	cb DIGGING_PARTICLES_AMOUNT
	cc DIGGING_DROP_SEED_OFFSET_TICKS
	cd SNIFFER_BABY_AGE_TICKS
	ce DIGGING_BB_HEIGHT_OFFSET
	cf DIGGING_DIMENSIONS
	cg DATA_STATE
	ch DATA_DROP_SEED_AT_TICK
	C ()V onPathfindingStart
	E ()V onPathfindingDone
	W ()V sendDebugPackets
	X ()V customServerAiStep
	Z ()I getMaxHeadYRot
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;)V spawnChildFromBreeding
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/entity/AnimationState;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; emitDiggingParticles
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/animal/sniffer/Sniffer$State;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; transitionTo
	a (Z)V setBaby
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/animal/sniffer/Sniffer$State;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; setState
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	d (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEffect; getEatingSound
	dN ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dO ()Lbkg$b; brainProvider
	dh ()F getNameTagOffsetY
	fa ()V jumpFromGround
	g_ ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBoxForCulling
	gd ()Z canSniff
	gj ()Z canPlayDiggingSound
	gk ()Ljava/util/Optional; calculateDigPosition
	gl ()Z canDig
	gm ()Lnet/minecraft/core/BlockPosition; getHeadBlock
	gn ()Lnet/minecraft/world/phys/Vec3D; getHeadPosition
	go ()Lnet/minecraft/world/entity/animal/sniffer/Sniffer$State; getState
	gp ()V resetAnimations
	gq ()Lnet/minecraft/world/entity/animal/sniffer/Sniffer; onScentingStart
	gr ()Lnet/minecraft/world/entity/animal/sniffer/Sniffer; onDiggingStart
	gs ()V dropSeed
	gt ()Ljava/util/stream/Stream; getExploredPositions
	gu ()V playSearchingSound
	i (Lnet/minecraft/core/BlockPosition;)Z canDig
	j (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; storeExploredPosition
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()Z isSearching
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; onDiggingComplete
	y ()Z isTempted
net/minecraft/world/entity/animal/sniffer/SnifferAi net/minecraft/world/entity/animal/sniffer/SnifferAi
	a SENSOR_TYPES
	b MEMORY_TYPES
	c LOGGER
	d MAX_LOOK_DISTANCE
	e SNIFFING_COOLDOWN_TICKS
	f SPEED_MULTIPLIER_WHEN_IDLING
	g SPEED_MULTIPLIER_WHEN_PANICKING
	h SPEED_MULTIPLIER_WHEN_SNIFFING
	i SPEED_MULTIPLIER_WHEN_TEMPTED
	a ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getTemptations
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)V updateActivity
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	b (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; resetSniffing
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initSniffingActivity
	d (Lnet/minecraft/world/entity/ai/BehaviorController;)V initDigActivity
	e (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
net/minecraft/world/entity/decoration/PaintingVariant net/minecraft/world/entity/decoration/PaintingVariant
	a width
	b height
	a ()I getWidth
	b ()I getHeight
net/minecraft/world/entity/decoration/PaintingVariants net/minecraft/world/entity/decoration/PaintingVariants
	A EARTH
	B WIND
	C WATER
	D FIRE
	a KEBAB
	b AZTEC
	c ALBAN
	d AZTEC2
	e BOMB
	f PLANT
	g WASTELAND
	h POOL
	i COURBET
	j SEA
	k SUNSET
	l CREEBET
	m WANDERER
	n GRAHAM
	o MATCH
	p BUST
	q STAGE
	r VOID
	s SKULL_AND_ROSES
	t WITHER
	u FIGHTERS
	v POINTER
	w PIGSCENE
	x BURNING_SKULL
	y SKELETON
	z DONKEY_KONG
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; create
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/world/entity/decoration/PaintingVariant; bootstrap
net/minecraft/world/entity/monster/warden/AngerLevel net/minecraft/world/entity/monster/warden/AngerLevel
	a CALM
	b AGITATED
	c ANGRY
	d SORTED_LEVELS
	e minimumAnger
	f ambientSound
	g listeningSound
	h $VALUES
	a ()I getMinimumAnger
	a (I)Lnet/minecraft/world/entity/monster/warden/AngerLevel; byAnger
	b ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	c ()Lnet/minecraft/sounds/SoundEffect; getListeningSound
	d ()Z isAngry
	e ()[Lnet/minecraft/world/entity/monster/warden/AngerLevel; $values
net/minecraft/world/entity/monster/warden/AngerManagement net/minecraft/world/entity/monster/warden/AngerManagement
	a CONVERSION_DELAY
	b MAX_ANGER
	c suspects
	d angerBySuspect
	e angerByUuid
	f DEFAULT_ANGER_DECREASE
	g conversionDelay
	h highestAnger
	i SUSPECT_ANGER_PAIR
	j filter
	k suspectSorter
	a ()Ljava/util/Optional; getActiveEntity
	a (Ljava/util/function/Predicate;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/server/level/WorldServer;)V convertFromUuids
	a (Lnet/minecraft/server/level/WorldServer;Ljava/util/function/Predicate;)V tick
	a (Lnet/minecraft/world/entity/Entity;)V clearAnger
	a (Lnet/minecraft/world/entity/Entity;I)I increaseAnger
	b ()Ljava/util/List; createUuidAngerPairs
	b (Lnet/minecraft/world/entity/Entity;)I getActiveAnger
	c ()V sortAndUpdateHighestAnger
	d ()Lnet/minecraft/world/entity/Entity; getTopSuspect
net/minecraft/world/entity/monster/warden/Warden net/minecraft/world/entity/monster/warden/Warden
	b roarAnimationState
	bT attackAnimationState
	bU sonicBoomAnimationState
	bV LOGGER
	bW VIBRATION_COOLDOWN_TICKS
	bX TIME_TO_USE_MELEE_UNTIL_SONIC_BOOM
	bY MAX_HEALTH
	bZ MOVEMENT_SPEED_WHEN_FIGHTING
	c sniffAnimationState
	ca KNOCKBACK_RESISTANCE
	cb ATTACK_KNOCKBACK
	cc ATTACK_DAMAGE
	cd CLIENT_ANGER_LEVEL
	ce DARKNESS_DISPLAY_LIMIT
	cf DARKNESS_DURATION
	cg DARKNESS_RADIUS
	ch DARKNESS_INTERVAL
	ci ANGERMANAGEMENT_TICK_DELAY
	cj DEFAULT_ANGER
	ck PROJECTILE_ANGER
	cl ON_HURT_ANGER_BOOST
	cm RECENT_PROJECTILE_TICK_THRESHOLD
	cn TOUCH_COOLDOWN_TICKS
	co DIGGING_PARTICLES_AMOUNT
	cp DIGGING_PARTICLES_DURATION
	cq DIGGING_PARTICLES_OFFSET
	cr PROJECTILE_ANGER_DISTANCE
	cs tendrilAnimation
	ct tendrilAnimationO
	cu heartAnimation
	cv heartAnimationO
	cw dynamicGameEventListener
	cx vibrationUser
	cy vibrationData
	cz angerManagement
	d emergeAnimationState
	e diggingAnimationState
	C (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	D (Lnet/minecraft/world/entity/Entity;)V doPush
	E (F)F getTendrilAnimation
	F (F)F getHeartAnimation
	W ()V sendDebugPackets
	X ()V customServerAiStep
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Ljava/util/function/BiConsumer;)V updateDynamicGameEventListener
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/Entity;I)V applyDarknessAround
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/AnimationState;)V clientDiggingParticles
	a (Lnet/minecraft/world/entity/Entity;)Z canTargetEntity
	a (Lnet/minecraft/world/entity/Entity;IZ)V increaseAngerAt
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;F)Lorg/joml/Vector3f; getPassengerAttachmentPoint
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aK ()F nextStep
	aV ()Z dampensVibrations
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/damagesource/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/world/entity/Entity;)V clearAnger
	b (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	bs ()Z isPushable
	c (Lnet/minecraft/world/entity/Entity;)V increaseAngerAt
	cL ()Z ignoreExplosion
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dN ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	di ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	eV ()F getSoundVolume
	fF ()Z canDisableShield
	gd ()Ljava/util/Optional; getEntityAngryAt
	ge ()Lnet/minecraft/world/entity/monster/warden/AngerManagement; getAngerManagement
	gf ()Ldkc$a; getVibrationData
	gg ()Ldkc$d; getVibrationUser
	gh ()Z isDiggingOrEmerging
	gk ()V syncClientAngerLevel
	gl ()I getHeartBeatDelay
	gm ()V playListeningSound
	gn ()I getActiveAnger
	h (D)Z removeWhenFarAway
	j (Lnet/minecraft/world/entity/EntityLiving;)V setAttackTarget
	l ()V tick
	l_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	o (Lnet/minecraft/world/entity/Entity;)Z canRide
	q ()Lnet/minecraft/world/entity/EntityLiving; getTarget
	s ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	t ()I getClientAngerLevel
	w ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	y ()Lnet/minecraft/world/entity/monster/warden/AngerLevel; getAngerLevel
net/minecraft/world/entity/monster/warden/WardenAi net/minecraft/world/entity/monster/warden/WardenAi
	a EMERGE_DURATION
	b ROAR_DURATION
	c DIGGING_COOLDOWN
	d SPEED_MULTIPLIER_WHEN_IDLING
	e SPEED_MULTIPLIER_WHEN_INVESTIGATING
	f SPEED_MULTIPLIER_WHEN_FIGHTING
	g MELEE_ATTACK_COOLDOWN
	h DIGGING_DURATION
	i SNIFFING_DURATION
	j DISTURBANCE_LOCATION_EXPIRY_TIME
	k SENSOR_TYPES
	l MEMORY_TYPES
	m DIG_COOLDOWN_SETTER
	a (Lnet/minecraft/world/entity/EntityLiving;)V setDigCooldown
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	a (Lnet/minecraft/world/entity/monster/warden/Warden;)V updateActivity
	a (Lnet/minecraft/world/entity/monster/warden/Warden;Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/core/BlockPosition;)V setDisturbanceLocation
	a (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/EntityLiving;)Z isTarget
	a (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/ai/BehaviorController;)V initFightActivity
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initEmergeActivity
	b (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/EntityLiving;)V onTargetInvalid
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initDiggingActivity
	d (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	e (Lnet/minecraft/world/entity/ai/BehaviorController;)V initInvestigateActivity
	f (Lnet/minecraft/world/entity/ai/BehaviorController;)V initSniffingActivity
	g (Lnet/minecraft/world/entity/ai/BehaviorController;)V initRoarActivity
net/minecraft/world/entity/monster/warden/WardenSpawnTracker net/minecraft/world/entity/monster/warden/WardenSpawnTracker
	a CODEC
	b MAX_WARNING_LEVEL
	c PLAYER_SEARCH_RADIUS
	d WARNING_CHECK_DIAMETER
	e DECREASE_WARNING_LEVEL_EVERY_INTERVAL
	f WARNING_LEVEL_INCREASE_COOLDOWN
	g ticksSinceLastWarning
	h warningLevel
	i cooldownTicks
	a ()V tick
	a (I)V setWarningLevel
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z hasNearbyWarden
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/EntityPlayer;)Ljava/util/OptionalInt; tryWarn
	a (Lnet/minecraft/world/entity/monster/warden/WardenSpawnTracker;)V copyData
	b ()V reset
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Ljava/util/List; getNearbyPlayers
	c ()I getWarningLevel
	d ()Z onCooldown
	e ()V increaseWarningLevel
	f ()V decreaseWarningLevel
net/minecraft/world/entity/npc/InventoryCarrier net/minecraft/world/entity/npc/InventoryCarrier
	c_ TAG_INVENTORY
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/npc/InventoryCarrier;Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	a_ (Lnet/minecraft/nbt/NBTTagCompound;)V writeInventoryToTag
	c (Lnet/minecraft/nbt/NBTTagCompound;)V readInventoryFromTag
	y ()Lnet/minecraft/world/InventorySubcontainer; getInventory
net/minecraft/world/entity/npc/VillagerData net/minecraft/world/entity/npc/VillagerData
	a MIN_VILLAGER_LEVEL
	b MAX_VILLAGER_LEVEL
	c CODEC
	d NEXT_LEVEL_XP_THRESHOLDS
	e type
	f profession
	g level
	a ()Lnet/minecraft/world/entity/npc/VillagerType; getType
	a (I)Lnet/minecraft/world/entity/npc/VillagerData; setLevel
	a (Lnet/minecraft/world/entity/npc/VillagerProfession;)Lnet/minecraft/world/entity/npc/VillagerData; setProfession
	a (Lnet/minecraft/world/entity/npc/VillagerType;)Lnet/minecraft/world/entity/npc/VillagerData; setType
	b ()Lnet/minecraft/world/entity/npc/VillagerProfession; getProfession
	b (I)I getMinXpPerLevel
	c ()I getLevel
	c (I)I getMaxXpPerLevel
	d (I)Z canLevelUp
net/minecraft/world/entity/npc/VillagerProfession net/minecraft/world/entity/npc/VillagerProfession
	a ALL_ACQUIRABLE_JOBS
	b NONE
	c ARMORER
	d BUTCHER
	e CARTOGRAPHER
	f CLERIC
	g FARMER
	h FISHERMAN
	i FLETCHER
	j LEATHERWORKER
	k LIBRARIAN
	l MASON
	m NITWIT
	n SHEPHERD
	o TOOLSMITH
	p WEAPONSMITH
	q name
	r heldJobSite
	s acquirableJobSite
	t requestedItems
	u secondaryPoi
	v workSound
	a ()Ljava/lang/String; name
	a (Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/sounds/SoundEffect;)Lnet/minecraft/world/entity/npc/VillagerProfession; register
	a (Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/sounds/SoundEffect;)Lnet/minecraft/world/entity/npc/VillagerProfession; register
	a (Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/sounds/SoundEffect;)Lnet/minecraft/world/entity/npc/VillagerProfession; register
	a (Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/sounds/SoundEffect;)Lnet/minecraft/world/entity/npc/VillagerProfession; register
	b ()Ljava/util/function/Predicate; heldJobSite
	c ()Ljava/util/function/Predicate; acquirableJobSite
	d ()Lcom/google/common/collect/ImmutableSet; requestedItems
	e ()Lcom/google/common/collect/ImmutableSet; secondaryPoi
	f ()Lnet/minecraft/sounds/SoundEffect; workSound
net/minecraft/world/entity/npc/VillagerTrades net/minecraft/world/entity/npc/VillagerTrades
	a TRADES
	b WANDERING_TRADER_TRADES
	c EXPERIMENTAL_TRADES
	d EXPERIMENTAL_WANDERING_TRADER_TRADES
	e DEFAULT_SUPPLY
	f COMMON_ITEMS_SUPPLY
	g UNCOMMON_ITEMS_SUPPLY
	h XP_LEVEL_1_SELL
	i XP_LEVEL_1_BUY
	j XP_LEVEL_2_SELL
	k XP_LEVEL_2_BUY
	l XP_LEVEL_3_SELL
	m XP_LEVEL_3_BUY
	n XP_LEVEL_4_SELL
	o XP_LEVEL_4_BUY
	p XP_LEVEL_5_TRADE
	q LOW_TIER_PRICE_MULTIPLIER
	r HIGH_TIER_PRICE_MULTIPLIER
	s DESERT_MAP
	t SAVANNA_MAP
	u PLAINS_MAP
	v TAIGA_MAP
	w SNOWY_MAP
	x JUNGLE_MAP
	y SWAMP_MAP
	a ()Lnet/minecraft/world/entity/npc/VillagerTrades$IMerchantRecipeOption; specialBooks
	a (I)Lnet/minecraft/world/entity/npc/VillagerTrades$IMerchantRecipeOption; commonBooks
	a (Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; toIntMap
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/enchantment/Enchantment;I)Lnet/minecraft/world/item/ItemStack; enchant
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;)Lnet/minecraft/world/item/ItemStack; potion
net/minecraft/world/entity/npc/VillagerType net/minecraft/world/entity/npc/VillagerType
	a DESERT
	b JUNGLE
	c PLAINS
	d SAVANNA
	e SNOW
	f SWAMP
	g TAIGA
	h name
	i BY_BIOME
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/npc/VillagerType; register
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/npc/VillagerType; byBiome
net/minecraft/world/entity/player/PlayerModelPart net/minecraft/world/entity/player/PlayerModelPart
	a CAPE
	b JACKET
	c LEFT_SLEEVE
	d RIGHT_SLEEVE
	e LEFT_PANTS_LEG
	f RIGHT_PANTS_LEG
	g HAT
	h bit
	i mask
	j id
	k name
	l $VALUES
	a ()I getMask
	b ()I getBit
	c ()Ljava/lang/String; getId
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	e ()[Lnet/minecraft/world/entity/player/PlayerModelPart; $values
net/minecraft/world/entity/player/ProfilePublicKey net/minecraft/world/entity/player/ProfilePublicKey
	a EXPIRED_PROFILE_PUBLIC_KEY
	b EXPIRY_GRACE_PERIOD
	c TRUSTED_CODEC
	d data
	e INVALID_SIGNATURE
	a ()Lnet/minecraft/util/SignatureValidator; createSignatureValidator
	a (Lnet/minecraft/util/SignatureValidator;Ljava/util/UUID;Lcbx$a;)Lnet/minecraft/world/entity/player/ProfilePublicKey; createValidated
	b ()Lcbx$a; data
net/minecraft/world/entity/raid/Raid net/minecraft/world/entity/raid/Raid
	A heroesOfTheVillage
	B ticksActive
	C center
	D level
	E started
	F id
	G totalHealth
	H badOmenLevel
	I active
	J groupsSpawned
	K raidEvent
	L postRaidTicks
	M raidCooldownTicks
	N random
	O numGroups
	P status
	Q celebrationTicks
	R waveSpawnPos
	a VILLAGE_RADIUS_BUFFER
	b MAX_NO_ACTION_TIME
	c MAX_CELEBRATION_TICKS
	d TICKS_PER_DAY
	e DEFAULT_MAX_BAD_OMEN_LEVEL
	f VALID_RAID_RADIUS_SQR
	g RAID_REMOVAL_THRESHOLD_SQR
	h SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER
	i ATTEMPT_RAID_FARTHEST
	j ATTEMPT_RAID_CLOSE
	k ATTEMPT_RAID_INSIDE
	l VILLAGE_SEARCH_RADIUS
	m RAID_TIMEOUT_TICKS
	n NUM_SPAWN_ATTEMPTS
	o OMINOUS_BANNER_PATTERN_NAME
	p RAIDERS_REMAINING
	q POST_RAID_TICK_LIMIT
	r DEFAULT_PRE_RAID_TICKS
	s OUTSIDE_RAID_BOUNDS_TIMEOUT
	t LOW_MOB_THRESHOLD
	u RAID_NAME_COMPONENT
	v RAID_BAR_VICTORY_COMPONENT
	w RAID_BAR_DEFEAT_COMPONENT
	x HERO_OF_THE_VILLAGE_DURATION
	y groupToLeaderMap
	z groupRaiderMap
	A ()Z hasMoreWaves
	B ()Z isFinalWave
	C ()Z hasBonusWave
	D ()Z hasSpawnedBonusWave
	E ()Z shouldSpawnBonusGroup
	F ()V updateRaiders
	G ()Z shouldSpawnGroup
	H ()V setDirty
	a ()Z isOver
	a (I)V setBadOmenLevel
	a (II)Lnet/minecraft/core/BlockPosition; findRandomSpawnPos
	a (ILnet/minecraft/world/entity/raid/EntityRaider;)V setLeader
	a (ILnet/minecraft/world/entity/raid/EntityRaider;Lnet/minecraft/core/BlockPosition;Z)V joinRaid
	a (ILnet/minecraft/world/entity/raid/EntityRaider;Z)Z addWaveMob
	a (Lnet/minecraft/core/BlockPosition;)V playSound
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/world/EnumDifficulty;)I getNumGroups
	a (Lnet/minecraft/world/entity/Entity;)V addHeroOfTheVillage
	a (Lnet/minecraft/world/entity/player/EntityHuman;)V absorbBadOmen
	a (Lnet/minecraft/world/entity/raid/EntityRaider;Z)V removeFromRaid
	a (Lnet/minecraft/world/entity/raid/Raid$Wave;IZ)I getDefaultNumSpawns
	a (Lnet/minecraft/world/entity/raid/Raid$Wave;Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/DifficultyDamageScaler;Z)I getPotentialBonusSpawns
	b ()Z isBetweenWaves
	b (I)Lnet/minecraft/world/entity/raid/EntityRaider; getLeader
	b (ILnet/minecraft/world/entity/raid/EntityRaider;)Z addWaveMob
	b (Lnet/minecraft/core/BlockPosition;)V spawnGroup
	c ()Z hasFirstWaveSpawned
	c (I)V removeLeader
	c (Lnet/minecraft/core/BlockPosition;)V setCenter
	d ()Z isStopped
	d (I)Ljava/util/Optional; getValidSpawnPos
	e ()Z isVictory
	f ()Z isLoss
	g ()F getTotalHealth
	h ()Ljava/util/Set; getAllRaiders
	i ()Lnet/minecraft/world/level/World; getLevel
	j ()Z isStarted
	k ()I getGroupsSpawned
	l ()I getMaxBadOmenLevel
	m ()I getBadOmenLevel
	n ()V stop
	o ()V tick
	p ()V updateBossbar
	q ()F getHealthOfLivingRaiders
	r ()I getTotalRaidersAlive
	s ()Lnet/minecraft/world/item/ItemStack; getLeaderBannerInstance
	t ()Lnet/minecraft/core/BlockPosition; getCenter
	u ()I getId
	v ()Z isActive
	w ()F getEnchantOdds
	x ()Ljava/util/function/Predicate; validPlayer
	y ()V updatePlayers
	z ()V moveRaidCenterToNearbyVillageSection
net/minecraft/world/entity/schedule/Activity net/minecraft/world/entity/schedule/Activity
	A name
	B hashCode
	a CORE
	b IDLE
	c WORK
	d PLAY
	e REST
	f MEET
	g PANIC
	h RAID
	i PRE_RAID
	j HIDE
	k FIGHT
	l CELEBRATE
	m ADMIRE_ITEM
	n AVOID
	o RIDE
	p PLAY_DEAD
	q LONG_JUMP
	r RAM
	s TONGUE
	t SWIM
	u LAY_SPAWN
	v SNIFF
	w INVESTIGATE
	x ROAR
	y EMERGE
	z DIG
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/Activity; register
net/minecraft/world/entity/schedule/Schedule net/minecraft/world/entity/schedule/Schedule
	a WORK_START_TIME
	b TOTAL_WORK_TIME
	c EMPTY
	d SIMPLE
	e VILLAGER_BABY
	f VILLAGER_DEFAULT
	g timelines
	a (I)Lnet/minecraft/world/entity/schedule/Activity; getActivityAt
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; register
	a (Lnet/minecraft/world/entity/schedule/Activity;)V ensureTimelineExistsFor
	b (Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/ScheduleActivity; getTimelineFor
	c (Lnet/minecraft/world/entity/schedule/Activity;)Ljava/util/List; getAllTimelinesExceptFor
net/minecraft/world/entity/schedule/ScheduleBuilder net/minecraft/world/entity/schedule/ScheduleBuilder
	a schedule
	b transitions
	a ()Lnet/minecraft/world/entity/schedule/Schedule; build
	a (ILnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; changeActivityAt
net/minecraft/world/entity/vehicle/ChestBoat net/minecraft/world/entity/vehicle/ChestBoat
	f CONTAINER_SIZE
	g itemStacks
	h lootTable
	i lootTableSeed
	B ()I getMaxPassengers
	G ()Lnet/minecraft/resources/MinecraftKey; getLootTable
	H ()J getLootTableSeed
	I ()Lnet/minecraft/core/NonNullList; getItemStacks
	K ()V clearItemStacks
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (J)V setLootTableSeed
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/resources/MinecraftKey;)V setLootTable
	a (Lnet/minecraft/world/damagesource/DamageSource;)V destroy
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V remove
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V openCustomInventoryScreen
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	e ()V setChanged
	e (Lnet/minecraft/world/entity/player/EntityHuman;)V unpackLootTable
	q ()Lnet/minecraft/world/item/Item; getDropItem
	w ()F getSinglePassengerXOffset
net/minecraft/world/flag/FeatureElement net/minecraft/world/flag/FeatureElement
	bv FILTERED_REGISTRIES
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Z isEnabled
	m ()Lnet/minecraft/world/flag/FeatureFlagSet; requiredFeatures
net/minecraft/world/flag/FeatureFlag net/minecraft/world/flag/FeatureFlag
	a universe
	b mask
net/minecraft/world/flag/FeatureFlagRegistry net/minecraft/world/flag/FeatureFlagRegistry
	a LOGGER
	b universe
	c names
	d allFlags
	a ()Lnet/minecraft/world/flag/FeatureFlagSet; allFlags
	a (Ljava/lang/Iterable;)Lnet/minecraft/world/flag/FeatureFlagSet; fromNames
	a (Ljava/lang/Iterable;Ljava/util/function/Consumer;)Lnet/minecraft/world/flag/FeatureFlagSet; fromNames
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Z isSubset
	a ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/flag/FeatureFlagSet; subset
	b ()Lcom/mojang/serialization/Codec; codec
	b (Lnet/minecraft/world/flag/FeatureFlagSet;)Ljava/util/Set; toNames
net/minecraft/world/flag/FeatureFlagSet net/minecraft/world/flag/FeatureFlagSet
	a MAX_CONTAINER_SIZE
	b EMPTY
	c universe
	d mask
	a ()Lnet/minecraft/world/flag/FeatureFlagSet; of
	a (Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/flag/FeatureFlagSet; of
	a (Lnet/minecraft/world/flag/FeatureFlag;[Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/flag/FeatureFlagSet; of
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Z isSubsetOf
	a (Lnet/minecraft/world/flag/FeatureFlagUniverse;JLjava/lang/Iterable;)J computeMask
	a (Lnet/minecraft/world/flag/FeatureFlagUniverse;Ljava/util/Collection;)Lnet/minecraft/world/flag/FeatureFlagSet; create
	b (Lnet/minecraft/world/flag/FeatureFlag;)Z contains
	b (Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/world/flag/FeatureFlagSet; join
net/minecraft/world/flag/FeatureFlagUniverse net/minecraft/world/flag/FeatureFlagUniverse
	a id
net/minecraft/world/flag/FeatureFlags net/minecraft/world/flag/FeatureFlags
	a VANILLA
	b BUNDLE
	c TRADE_REBALANCE
	d REGISTRY
	e CODEC
	f VANILLA_SET
	g DEFAULT_FLAGS
	a (Lnet/minecraft/world/flag/FeatureFlagRegistry;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/world/flag/FeatureFlagSet;)Ljava/lang/String; printMissingFlags
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Z isExperimental
	a (Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/world/flag/FeatureFlagSet;)Ljava/lang/String; printMissingFlags
net/minecraft/world/food/Foods net/minecraft/world/food/Foods
	A POISONOUS_POTATO
	B PORKCHOP
	C POTATO
	D PUFFERFISH
	E PUMPKIN_PIE
	F RABBIT
	G RABBIT_STEW
	H ROTTEN_FLESH
	I SALMON
	J SPIDER_EYE
	K SUSPICIOUS_STEW
	L SWEET_BERRIES
	M GLOW_BERRIES
	N TROPICAL_FISH
	a APPLE
	b BAKED_POTATO
	c BEEF
	d BEETROOT
	e BEETROOT_SOUP
	f BREAD
	g CARROT
	h CHICKEN
	i CHORUS_FRUIT
	j COD
	k COOKED_BEEF
	l COOKED_CHICKEN
	m COOKED_COD
	n COOKED_MUTTON
	o COOKED_PORKCHOP
	p COOKED_RABBIT
	q COOKED_SALMON
	r COOKIE
	s DRIED_KELP
	t ENCHANTED_GOLDEN_APPLE
	u GOLDEN_APPLE
	v GOLDEN_CARROT
	w HONEY_BOTTLE
	x MELON_SLICE
	y MUSHROOM_STEW
	z MUTTON
	a (I)Lcei$a; stew
net/minecraft/world/inventory/ClickAction net/minecraft/world/inventory/ClickAction
	a PRIMARY
	b SECONDARY
	c $VALUES
	a ()[Lnet/minecraft/world/inventory/ClickAction; $values
net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition
	a slots
	b resultSlot
	a ()Lcfm$a; create
	a (I)Z hasSlot
	b ()Lcfm$b; getResultSlot
	b (I)Lcfm$b; getSlot
	c ()Ljava/util/List; getSlots
	d ()I getNumOfInputSlots
	e ()I getResultSlotIndex
	f ()Ljava/util/List; getInputSlotIndexes
net/minecraft/world/inventory/RecipeBookType net/minecraft/world/inventory/RecipeBookType
	a CRAFTING
	b FURNACE
	c BLAST_FURNACE
	d SMOKER
	e $VALUES
	a ()[Lnet/minecraft/world/inventory/RecipeBookType; $values
net/minecraft/world/inventory/Slot net/minecraft/world/inventory/Slot
	a slot
	d container
	e index
	f x
	g y
	a ()I getMaxStackSize
	a (I)Lnet/minecraft/world/item/ItemStack; remove
	a (IILnet/minecraft/world/entity/player/EntityHuman;)Ljava/util/Optional; tryRemove
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z mayPickup
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	a (Lnet/minecraft/world/item/ItemStack;I)V onQuickCraft
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V setByPlayer
	a_ (Lnet/minecraft/world/item/ItemStack;)I getMaxStackSize
	b ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
	b (I)V onSwapCraft
	b (IILnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/item/ItemStack; safeTake
	b (Lnet/minecraft/world/entity/player/EntityHuman;)Z allowModification
	b (Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; safeInsert
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V onQuickCraft
	b_ (Lnet/minecraft/world/item/ItemStack;)V checkTakeAchievements
	c ()Z isActive
	d ()V setChanged
	d (Lnet/minecraft/world/item/ItemStack;)V setByPlayer
	e ()Lnet/minecraft/world/item/ItemStack; getItem
	e (Lnet/minecraft/world/item/ItemStack;)V set
	f ()Z hasItem
	f (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; safeInsert
	g ()I getContainerSlot
	h ()Z isHighlightable
net/minecraft/world/inventory/TransientCraftingContainer net/minecraft/world/inventory/TransientCraftingContainer
	c items
	d width
	e height
	f menu
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	af_ ()Z isEmpty
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	e ()V setChanged
	f ()I getWidth
	g ()I getHeight
	h ()Ljava/util/List; getItems
net/minecraft/world/inventory/tooltip/BundleTooltip net/minecraft/world/inventory/tooltip/BundleTooltip
	a items
	b weight
	a ()Lnet/minecraft/core/NonNullList; getItems
	b ()I getWeight
net/minecraft/world/item/AdventureModeCheck net/minecraft/world/item/AdventureModeCheck
	a tagName
	b lastCheckedBlock
	c lastResult
	d checksBlockEntity
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/IRegistry;Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;)Z test
	a (Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;Z)Z areSameBlocks
net/minecraft/world/item/BrushItem net/minecraft/world/item/BrushItem
	a ANIMATION_DURATION
	b USE_DURATION
	c MAX_BRUSH_DISTANCE
	a (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/MovingObjectPosition; calculateHitResult
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;I)V onUseTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/EnumMainHand;)V spawnDustParticles
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
net/minecraft/world/item/BundleItem net/minecraft/world/item/BundleItem
	a MAX_WEIGHT
	b TAG_ITEMS
	c BUNDLE_IN_BUNDLE_WEIGHT
	d BAR_COLOR
	a (Lnet/minecraft/world/entity/Entity;)V playRemoveOneSound
	a (Lnet/minecraft/world/entity/item/EntityItem;)V onDestroyed
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/nbt/NBTTagList;)Ljava/util/Optional; getMatchingItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)Z dropContents
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/EntityHuman;)Z overrideStackedOnOther
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/SlotAccess;)Z overrideOtherStackedOnMe
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	b (Lnet/minecraft/world/entity/Entity;)V playInsertSound
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)I add
	c (Lnet/minecraft/world/entity/Entity;)V playDropContentsSound
	d (Lnet/minecraft/world/item/ItemStack;)F getFullnessDisplay
	e (Lnet/minecraft/world/item/ItemStack;)Z isBarVisible
	f (Lnet/minecraft/world/item/ItemStack;)I getBarWidth
	g (Lnet/minecraft/world/item/ItemStack;)I getBarColor
	h (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getTooltipImage
	k (Lnet/minecraft/world/item/ItemStack;)I getWeight
	o (Lnet/minecraft/world/item/ItemStack;)I getContentWeight
	p (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; removeOne
	q (Lnet/minecraft/world/item/ItemStack;)Ljava/util/stream/Stream; getContents
net/minecraft/world/item/CreativeModeTab net/minecraft/world/item/CreativeModeTab
	a displayName
	b backgroundSuffix
	c canScroll
	d showTitle
	e alignedRight
	f row
	g column
	h type
	i iconItemStack
	j displayItems
	k displayItemsSearchTab
	l searchTreeBuilder
	m iconGenerator
	n displayItemsGenerator
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	a (Lchl$d;)V buildContents
	a (Lchl$f;I)Lchl$a; builder
	a (Ljava/util/function/Consumer;)V setSearchTreeBuilder
	a (Lnet/minecraft/world/item/ItemStack;)Z contains
	b ()Lnet/minecraft/world/item/ItemStack; getIconItem
	c ()Ljava/lang/String; getBackgroundSuffix
	d ()Z showTitle
	e ()Z canScroll
	f ()I column
	g ()Lchl$f; row
	h ()Z hasAnyItems
	i ()Z shouldDisplay
	j ()Z isAlignedRight
	k ()Lchl$h; getType
	l ()Ljava/util/Collection; getDisplayItems
	m ()Ljava/util/Collection; getSearchTabDisplayItems
	n ()V rebuildSearchTree
net/minecraft/world/item/CreativeModeTabs net/minecraft/world/item/CreativeModeTabs
	a BUILDING_BLOCKS
	b COLORED_BLOCKS
	c NATURAL_BLOCKS
	d FUNCTIONAL_BLOCKS
	e REDSTONE_BLOCKS
	f HOTBAR
	g SEARCH
	h TOOLS_AND_UTILITIES
	i COMBAT
	j FOOD_AND_DRINKS
	k INGREDIENTS
	l SPAWN_EGGS
	m OP_BLOCKS
	n INVENTORY
	o PAINTING_COMPARATOR
	p CACHED_PARAMETERS
	a ()V validate
	a (Lchl$d;)V buildAllTabContents
	a (Lchl$e;Lchl$g;)V generateSuspiciousStews
	a (Lchl$e;Lhg$c;Ljava/util/function/Predicate;Lchl$g;)V generatePresetPaintings
	a (Lchl$e;Lnet/minecraft/core/HolderLookup;Ljava/util/Set;Lchl$g;)V generateEnchantmentBookTypesOnlyMaxLevel
	a (Lchl$e;Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/item/Item;Lchl$g;)V generatePotionEffectTypes
	a (Lchl$e;Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/item/Item;Lnet/minecraft/tags/TagKey;Lchl$g;)V generateInstrumentTypes
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/world/item/CreativeModeTab; bootstrap
	a (Lnet/minecraft/world/flag/FeatureFlagSet;ZLhg$b;)Z tryRebuildTabContents
	b ()Lnet/minecraft/world/item/CreativeModeTab; getDefaultTab
	b (Lchl$e;Lchl$g;)V generateFireworksAllDurations
	b (Lchl$e;Lnet/minecraft/core/HolderLookup;Ljava/util/Set;Lchl$g;)V generateEnchantmentBookTypesAllLevels
	c ()Ljava/util/List; tabs
	d ()Ljava/util/List; allTabs
	e ()Lnet/minecraft/world/item/CreativeModeTab; searchTab
	f ()Ljava/util/stream/Stream; streamAllTabs
net/minecraft/world/item/HoneycombItem net/minecraft/world/item/HoneycombItem
	a WAXABLES
	b WAX_OFF_BY_BLOCK
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/TileEntitySign;ZLnet/minecraft/world/entity/player/EntityHuman;)Z tryApplyToSign
	a (Lnet/minecraft/world/level/block/entity/SignText;Lnet/minecraft/world/entity/player/EntityHuman;)Z canApplyToSign
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; getWaxed
net/minecraft/world/item/Instrument net/minecraft/world/item/Instrument
	a CODEC
	b soundEvent
	c useDuration
	d range
	a ()Lnet/minecraft/core/Holder; soundEvent
	b ()I useDuration
	c ()F range
net/minecraft/world/item/InstrumentItem net/minecraft/world/item/InstrumentItem
	a TAG_INSTRUMENT
	b instruments
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/item/ItemStack; create
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Holder;)V setSoundVariantId
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/tags/TagKey;Lnet/minecraft/util/RandomSource;)V setRandom
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/Instrument;)V play
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
	d (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getInstrument
net/minecraft/world/item/Instruments net/minecraft/world/item/Instruments
	a GOAT_HORN_RANGE_BLOCKS
	b GOAT_HORN_DURATION
	c PONDER_GOAT_HORN
	d SING_GOAT_HORN
	e SEEK_GOAT_HORN
	f FEEL_GOAT_HORN
	g ADMIRE_GOAT_HORN
	h CALL_GOAT_HORN
	i YEARN_GOAT_HORN
	j DREAM_GOAT_HORN
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; create
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/world/item/Instrument; bootstrap
net/minecraft/world/item/Item net/minecraft/world/item/Item
	a LOGGER
	b builtInRegistryHolder
	c rarity
	d maxStackSize
	e maxDamage
	f isFireResistant
	g craftingRemainingItem
	h descriptionId
	i foodProperties
	j requiredFeatures
	l BY_BLOCK
	m BASE_ATTACK_DAMAGE_UUID
	n BASE_ATTACK_SPEED_UUID
	o MAX_STACK_SIZE
	p EAT_DURATION
	q MAX_BAR_WIDTH
	a ()Ljava/lang/String; getDescriptionId
	a (Lnet/minecraft/world/damagesource/DamageSource;)Z canBeHurtBy
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/world/entity/item/EntityItem;)V onDestroyed
	a (Lnet/minecraft/world/item/Item;)I getId
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactLivingEntity
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/EntityHuman;)Z overrideStackedOnOther
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/SlotAccess;)Z overrideOtherStackedOnMe
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;I)V onUseTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/RayTrace$FluidCollisionOption;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; getPlayerPOVHitResult
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; byBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)Z canAttackBlock
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isCorrectToolForDrops
	ah_ ()Z isComplex
	ai_ ()Lnet/minecraft/world/item/ItemStack; getDefaultInstance
	aj_ ()Lnet/minecraft/sounds/SoundEffect; getDrinkingSound
	ak_ ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	al_ ()Z canFitInsideContainerItems
	b (I)Lnet/minecraft/world/item/Item; byId
	b (Lnet/minecraft/nbt/NBTTagCompound;)V verifyTagAfterLoad
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;)V onCraftedBy
	c ()I getEnchantmentValue
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
	d_ (Lnet/minecraft/world/item/ItemStack;)Z isEnchantable
	e (Lnet/minecraft/world/item/ItemStack;)Z isBarVisible
	f (Lnet/minecraft/world/item/ItemStack;)I getBarWidth
	g (Lnet/minecraft/world/item/ItemStack;)I getBarColor
	h (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getTooltipImage
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
	j ()Lhe$c; builtInRegistryHolder
	j (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; getDescriptionId
	k ()Lnet/minecraft/world/item/Item; asItem
	l ()I getMaxStackSize
	l (Lnet/minecraft/world/item/ItemStack;)Z useOnRelease
	m ()Lnet/minecraft/world/flag/FeatureFlagSet; requiredFeatures
	m (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/IChatBaseComponent; getName
	n ()I getMaxDamage
	n (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumItemRarity; getRarity
	o ()Z canBeDepleted
	p ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	q ()Ljava/lang/String; getOrCreateDescriptionId
	r ()Z shouldOverrideMultiplayerNbt
	s ()Lnet/minecraft/world/item/Item; getCraftingRemainingItem
	t ()Z hasCraftingRemainingItem
	u ()Z isEdible
	v ()Lnet/minecraft/world/food/FoodInfo; getFoodProperties
	w ()Z isFireResistant
net/minecraft/world/item/ItemDisplayContext net/minecraft/world/item/ItemDisplayContext
	a NONE
	b THIRD_PERSON_LEFT_HAND
	c THIRD_PERSON_RIGHT_HAND
	d FIRST_PERSON_LEFT_HAND
	e FIRST_PERSON_RIGHT_HAND
	f HEAD
	g GUI
	h GROUND
	i FIXED
	j CODEC
	k BY_ID
	l id
	m name
	n $VALUES
	a ()B getId
	b ()Z firstPerson
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/item/ItemDisplayContext; $values
net/minecraft/world/item/ItemStack net/minecraft/world/item/ItemStack
	a CODEC
	b EMPTY
	c ATTRIBUTE_MODIFIER_FORMAT
	d TAG_ENCH
	e TAG_DISPLAY
	f TAG_DISPLAY_NAME
	g TAG_LORE
	h TAG_DAMAGE
	i TAG_COLOR
	j LOGGER
	k TAG_UNBREAKABLE
	l TAG_REPAIR_COST
	m TAG_CAN_DESTROY_BLOCK_LIST
	n TAG_CAN_PLACE_ON_BLOCK_LIST
	o TAG_HIDE_FLAGS
	p DISABLED_ITEM_TOOLTIP
	q DONT_HIDE_TOOLTIP
	r LORE_STYLE
	s count
	t popTime
	u item
	v tag
	w entityRepresentation
	x adventureBreakCheck
	y adventurePlaceCheck
	A ()Z hasCustomHoverName
	B ()Z hasFoil
	C ()Lnet/minecraft/world/item/EnumItemRarity; getRarity
	D ()Z isEnchantable
	E ()Z isEnchanted
	F ()Z isFramed
	G ()Lnet/minecraft/world/entity/decoration/EntityItemFrame; getFrame
	H ()Lnet/minecraft/world/entity/Entity; getEntityRepresentation
	I ()I getBaseRepairCost
	J ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	K ()I getPopTime
	L ()I getCount
	M ()Z isEdible
	N ()Lnet/minecraft/sounds/SoundEffect; getDrinkingSound
	O ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	P ()I getHideFlags
	a ()Ljava/util/Optional; getTooltipImage
	a (I)Lnet/minecraft/world/item/ItemStack; split
	a (ILnet/minecraft/util/RandomSource;Lnet/minecraft/server/level/EntityPlayer;)Z hurt
	a (ILnet/minecraft/world/entity/EntityLiving;Ljava/util/function/Consumer;)V hurtAndBreak
	a (ILnet/minecraft/world/item/ItemStack$HideFlags;)Z shouldShowInTooltip
	a (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; getOrCreateTagElement
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTBase;)V addTagElement
	a (Ljava/util/List;Lnet/minecraft/nbt/NBTTagList;)V appendEnchantmentNames
	a (Ljava/util/function/Predicate;)Z is
	a (Lnet/minecraft/core/Holder;)Z is
	a (Lnet/minecraft/core/HolderSet;)Z is
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;)Z hasAdventureModePlaceTagForBlock
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/item/ItemStack; of
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/world/item/ItemStack; setHoverName
	a (Lnet/minecraft/tags/TagKey;)Z is
	a (Lnet/minecraft/world/entity/Entity;)V setEntityRepresentation
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/player/EntityHuman;)V hurtEnemy
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Lcom/google/common/collect/Multimap; getAttributeModifiers
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;Lnet/minecraft/world/entity/EnumItemSlot;)V addAttributeModifier
	a (Lnet/minecraft/world/entity/item/EntityItem;)V onDestroyed
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactLivingEntity
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/TooltipFlag;)Ljava/util/List; getTooltipLines
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Z isItemEnabled
	a (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/EntityHuman;)Z overrideStackedOnOther
	a (Lnet/minecraft/world/item/Item;)Z is
	a (Lnet/minecraft/world/item/ItemStack$HideFlags;)V hideTooltipPart
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/SlotAccess;)Z overrideOtherStackedOnMe
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z matches
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/item/enchantment/Enchantment;I)V enchant
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;I)V onCraftedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V mineBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;)F getDestroySpeed
	b ()Z isEmpty
	b (I)V setDamageValue
	b (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; getTagElement
	b (Lnet/minecraft/core/IRegistry;Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;)Z hasAdventureModeBreakTagForBlock
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isSameItem
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)V onUseTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Z isCorrectToolForDrops
	c ()Lnet/minecraft/world/item/ItemStack; copyAndClear
	c (I)Lnet/minecraft/world/item/ItemStack; copyWithCount
	c (Ljava/lang/String;)V removeTagKey
	c (Lnet/minecraft/nbt/NBTTagCompound;)V setTag
	c (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isSameItemSameTags
	d ()Lnet/minecraft/world/item/Item; getItem
	d (I)V setRepairCost
	d (Ljava/lang/String;)Ljava/util/Collection; expandBlockState
	e ()Lnet/minecraft/core/Holder; getItemHolder
	e (I)V setPopTime
	f ()Ljava/util/stream/Stream; getTags
	f (I)V setCount
	g ()I getMaxStackSize
	g (I)V grow
	h ()Z isStackable
	h (I)V shrink
	i ()Z isDamageableItem
	j ()Z isDamaged
	k ()I getDamageValue
	l ()I getMaxDamage
	m ()Z isBarVisible
	n ()I getBarWidth
	o ()I getBarColor
	p ()Lnet/minecraft/world/item/ItemStack; copy
	q ()Ljava/lang/String; getDescriptionId
	r ()I getUseDuration
	s ()Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
	t ()Z useOnRelease
	u ()Z hasTag
	v ()Lnet/minecraft/nbt/NBTTagCompound; getTag
	w ()Lnet/minecraft/nbt/NBTTagCompound; getOrCreateTag
	x ()Lnet/minecraft/nbt/NBTTagList; getEnchantmentTags
	y ()Lnet/minecraft/network/chat/IChatBaseComponent; getHoverName
	z ()V resetHoverName
net/minecraft/world/item/ItemStackLinkedSet net/minecraft/world/item/ItemStackLinkedSet
	a TYPE_AND_TAG
	a ()Ljava/util/Set; createTypeAndTagSet
	a (Lnet/minecraft/world/item/ItemStack;)I hashStackAndTag
net/minecraft/world/item/Items net/minecraft/world/item/Items
	A JUNGLE_PLANKS
	B ACACIA_PLANKS
	C CHERRY_PLANKS
	D DARK_OAK_PLANKS
	E MANGROVE_PLANKS
	F BAMBOO_PLANKS
	G CRIMSON_PLANKS
	H WARPED_PLANKS
	I BAMBOO_MOSAIC
	J OAK_SAPLING
	K SPRUCE_SAPLING
	L BIRCH_SAPLING
	M JUNGLE_SAPLING
	N ACACIA_SAPLING
	O CHERRY_SAPLING
	P DARK_OAK_SAPLING
	Q MANGROVE_PROPAGULE
	R BEDROCK
	S SAND
	T SUSPICIOUS_SAND
	U SUSPICIOUS_GRAVEL
	V RED_SAND
	W GRAVEL
	X COAL_ORE
	Y DEEPSLATE_COAL_ORE
	Z IRON_ORE
	a AIR
	aA NETHERITE_BLOCK
	aB EXPOSED_COPPER
	aC WEATHERED_COPPER
	aD OXIDIZED_COPPER
	aE CUT_COPPER
	aF EXPOSED_CUT_COPPER
	aG WEATHERED_CUT_COPPER
	aH OXIDIZED_CUT_COPPER
	aI CUT_COPPER_STAIRS
	aJ EXPOSED_CUT_COPPER_STAIRS
	aK WEATHERED_CUT_COPPER_STAIRS
	aL OXIDIZED_CUT_COPPER_STAIRS
	aM CUT_COPPER_SLAB
	aN EXPOSED_CUT_COPPER_SLAB
	aO WEATHERED_CUT_COPPER_SLAB
	aP OXIDIZED_CUT_COPPER_SLAB
	aQ WAXED_COPPER_BLOCK
	aR WAXED_EXPOSED_COPPER
	aS WAXED_WEATHERED_COPPER
	aT WAXED_OXIDIZED_COPPER
	aU WAXED_CUT_COPPER
	aV WAXED_EXPOSED_CUT_COPPER
	aW WAXED_WEATHERED_CUT_COPPER
	aX WAXED_OXIDIZED_CUT_COPPER
	aY WAXED_CUT_COPPER_STAIRS
	aZ WAXED_EXPOSED_CUT_COPPER_STAIRS
	aa DEEPSLATE_IRON_ORE
	ab COPPER_ORE
	ac DEEPSLATE_COPPER_ORE
	ad GOLD_ORE
	ae DEEPSLATE_GOLD_ORE
	af REDSTONE_ORE
	ag DEEPSLATE_REDSTONE_ORE
	ah EMERALD_ORE
	ai DEEPSLATE_EMERALD_ORE
	aj LAPIS_ORE
	ak DEEPSLATE_LAPIS_ORE
	al DIAMOND_ORE
	am DEEPSLATE_DIAMOND_ORE
	an NETHER_GOLD_ORE
	ao NETHER_QUARTZ_ORE
	ap ANCIENT_DEBRIS
	aq COAL_BLOCK
	ar RAW_IRON_BLOCK
	as RAW_COPPER_BLOCK
	at RAW_GOLD_BLOCK
	au AMETHYST_BLOCK
	av BUDDING_AMETHYST
	aw IRON_BLOCK
	ax COPPER_BLOCK
	ay GOLD_BLOCK
	az DIAMOND_BLOCK
	b STONE
	bA STRIPPED_MANGROVE_LOG
	bB STRIPPED_CRIMSON_STEM
	bC STRIPPED_WARPED_STEM
	bD STRIPPED_OAK_WOOD
	bE STRIPPED_SPRUCE_WOOD
	bF STRIPPED_BIRCH_WOOD
	bG STRIPPED_JUNGLE_WOOD
	bH STRIPPED_ACACIA_WOOD
	bI STRIPPED_CHERRY_WOOD
	bJ STRIPPED_DARK_OAK_WOOD
	bK STRIPPED_MANGROVE_WOOD
	bL STRIPPED_CRIMSON_HYPHAE
	bM STRIPPED_WARPED_HYPHAE
	bN STRIPPED_BAMBOO_BLOCK
	bO OAK_WOOD
	bP SPRUCE_WOOD
	bQ BIRCH_WOOD
	bR JUNGLE_WOOD
	bS ACACIA_WOOD
	bT CHERRY_WOOD
	bU DARK_OAK_WOOD
	bV MANGROVE_WOOD
	bW CRIMSON_HYPHAE
	bX WARPED_HYPHAE
	bY OAK_LEAVES
	bZ SPRUCE_LEAVES
	ba WAXED_WEATHERED_CUT_COPPER_STAIRS
	bb WAXED_OXIDIZED_CUT_COPPER_STAIRS
	bc WAXED_CUT_COPPER_SLAB
	bd WAXED_EXPOSED_CUT_COPPER_SLAB
	be WAXED_WEATHERED_CUT_COPPER_SLAB
	bf WAXED_OXIDIZED_CUT_COPPER_SLAB
	bg OAK_LOG
	bh SPRUCE_LOG
	bi BIRCH_LOG
	bj JUNGLE_LOG
	bk ACACIA_LOG
	bl CHERRY_LOG
	bm DARK_OAK_LOG
	bn MANGROVE_LOG
	bo MANGROVE_ROOTS
	bp MUDDY_MANGROVE_ROOTS
	bq CRIMSON_STEM
	br WARPED_STEM
	bs BAMBOO_BLOCK
	bt STRIPPED_OAK_LOG
	bu STRIPPED_SPRUCE_LOG
	bv STRIPPED_BIRCH_LOG
	bw STRIPPED_JUNGLE_LOG
	bx STRIPPED_ACACIA_LOG
	by STRIPPED_CHERRY_LOG
	bz STRIPPED_DARK_OAK_LOG
	c GRANITE
	cA MAGENTA_WOOL
	cB LIGHT_BLUE_WOOL
	cC YELLOW_WOOL
	cD LIME_WOOL
	cE PINK_WOOL
	cF GRAY_WOOL
	cG LIGHT_GRAY_WOOL
	cH CYAN_WOOL
	cI PURPLE_WOOL
	cJ BLUE_WOOL
	cK BROWN_WOOL
	cL GREEN_WOOL
	cM RED_WOOL
	cN BLACK_WOOL
	cO DANDELION
	cP POPPY
	cQ BLUE_ORCHID
	cR ALLIUM
	cS AZURE_BLUET
	cT RED_TULIP
	cU ORANGE_TULIP
	cV WHITE_TULIP
	cW PINK_TULIP
	cX OXEYE_DAISY
	cY CORNFLOWER
	cZ LILY_OF_THE_VALLEY
	ca BIRCH_LEAVES
	cb JUNGLE_LEAVES
	cc ACACIA_LEAVES
	cd CHERRY_LEAVES
	ce DARK_OAK_LEAVES
	cf MANGROVE_LEAVES
	cg AZALEA_LEAVES
	ch FLOWERING_AZALEA_LEAVES
	ci SPONGE
	cj WET_SPONGE
	ck GLASS
	cl TINTED_GLASS
	cm LAPIS_BLOCK
	cn SANDSTONE
	co CHISELED_SANDSTONE
	cp CUT_SANDSTONE
	cq COBWEB
	cr GRASS
	cs FERN
	ct AZALEA
	cu FLOWERING_AZALEA
	cv DEAD_BUSH
	cw SEAGRASS
	cx SEA_PICKLE
	cy WHITE_WOOL
	cz ORANGE_WOOL
	d POLISHED_GRANITE
	dA ACACIA_SLAB
	dB CHERRY_SLAB
	dC DARK_OAK_SLAB
	dD MANGROVE_SLAB
	dE BAMBOO_SLAB
	dF BAMBOO_MOSAIC_SLAB
	dG CRIMSON_SLAB
	dH WARPED_SLAB
	dI STONE_SLAB
	dJ SMOOTH_STONE_SLAB
	dK SANDSTONE_SLAB
	dL CUT_STANDSTONE_SLAB
	dM PETRIFIED_OAK_SLAB
	dN COBBLESTONE_SLAB
	dO BRICK_SLAB
	dP STONE_BRICK_SLAB
	dQ MUD_BRICK_SLAB
	dR NETHER_BRICK_SLAB
	dS QUARTZ_SLAB
	dT RED_SANDSTONE_SLAB
	dU CUT_RED_SANDSTONE_SLAB
	dV PURPUR_SLAB
	dW PRISMARINE_SLAB
	dX PRISMARINE_BRICK_SLAB
	dY DARK_PRISMARINE_SLAB
	dZ SMOOTH_QUARTZ
	da WITHER_ROSE
	db TORCHFLOWER
	dc PITCHER_PLANT
	dd SPORE_BLOSSOM
	de BROWN_MUSHROOM
	df RED_MUSHROOM
	dg CRIMSON_FUNGUS
	dh WARPED_FUNGUS
	di CRIMSON_ROOTS
	dj WARPED_ROOTS
	dk NETHER_SPROUTS
	dl WEEPING_VINES
	dm TWISTING_VINES
	dn SUGAR_CANE
	do KELP
	dp MOSS_CARPET
	dq PINK_PETALS
	dr MOSS_BLOCK
	ds HANGING_ROOTS
	dt BIG_DRIPLEAF
	du SMALL_DRIPLEAF
	dv BAMBOO
	dw OAK_SLAB
	dx SPRUCE_SLAB
	dy BIRCH_SLAB
	dz JUNGLE_SLAB
	e DIORITE
	eA CACTUS
	eB CLAY
	eC JUKEBOX
	eD OAK_FENCE
	eE SPRUCE_FENCE
	eF BIRCH_FENCE
	eG JUNGLE_FENCE
	eH ACACIA_FENCE
	eI CHERRY_FENCE
	eJ DARK_OAK_FENCE
	eK MANGROVE_FENCE
	eL BAMBOO_FENCE
	eM CRIMSON_FENCE
	eN WARPED_FENCE
	eO PUMPKIN
	eP CARVED_PUMPKIN
	eQ JACK_O_LANTERN
	eR NETHERRACK
	eS SOUL_SAND
	eT SOUL_SOIL
	eU BASALT
	eV POLISHED_BASALT
	eW SMOOTH_BASALT
	eX SOUL_TORCH
	eY GLOWSTONE
	eZ INFESTED_STONE
	ea SMOOTH_RED_SANDSTONE
	eb SMOOTH_SANDSTONE
	ec SMOOTH_STONE
	ed BRICKS
	ee BOOKSHELF
	ef CHISELED_BOOKSHELF
	eg DECORATED_POT
	eh MOSSY_COBBLESTONE
	ei OBSIDIAN
	ej TORCH
	ek END_ROD
	el CHORUS_PLANT
	em CHORUS_FLOWER
	en PURPUR_BLOCK
	eo PURPUR_PILLAR
	ep PURPUR_STAIRS
	eq SPAWNER
	er CHEST
	es CRAFTING_TABLE
	et FARMLAND
	eu FURNACE
	ev LADDER
	ew COBBLESTONE_STAIRS
	ex SNOW
	ey ICE
	ez SNOW_BLOCK
	f POLISHED_DIORITE
	fA GLOW_LICHEN
	fB BRICK_STAIRS
	fC STONE_BRICK_STAIRS
	fD MUD_BRICK_STAIRS
	fE MYCELIUM
	fF LILY_PAD
	fG NETHER_BRICKS
	fH CRACKED_NETHER_BRICKS
	fI CHISELED_NETHER_BRICKS
	fJ NETHER_BRICK_FENCE
	fK NETHER_BRICK_STAIRS
	fL SCULK
	fM SCULK_VEIN
	fN SCULK_CATALYST
	fO SCULK_SHRIEKER
	fP ENCHANTING_TABLE
	fQ END_PORTAL_FRAME
	fR END_STONE
	fS END_STONE_BRICKS
	fT DRAGON_EGG
	fU SANDSTONE_STAIRS
	fV ENDER_CHEST
	fW EMERALD_BLOCK
	fX OAK_STAIRS
	fY SPRUCE_STAIRS
	fZ BIRCH_STAIRS
	fa INFESTED_COBBLESTONE
	fb INFESTED_STONE_BRICKS
	fc INFESTED_MOSSY_STONE_BRICKS
	fd INFESTED_CRACKED_STONE_BRICKS
	fe INFESTED_CHISELED_STONE_BRICKS
	ff INFESTED_DEEPSLATE
	fg STONE_BRICKS
	fh MOSSY_STONE_BRICKS
	fi CRACKED_STONE_BRICKS
	fj CHISELED_STONE_BRICKS
	fk PACKED_MUD
	fl MUD_BRICKS
	fm DEEPSLATE_BRICKS
	fn CRACKED_DEEPSLATE_BRICKS
	fo DEEPSLATE_TILES
	fp CRACKED_DEEPSLATE_TILES
	fq CHISELED_DEEPSLATE
	fr REINFORCED_DEEPSLATE
	fs BROWN_MUSHROOM_BLOCK
	ft RED_MUSHROOM_BLOCK
	fu MUSHROOM_STEM
	fv IRON_BARS
	fw CHAIN
	fx GLASS_PANE
	fy MELON
	fz VINE
	g ANDESITE
	gA BLACKSTONE_WALL
	gB POLISHED_BLACKSTONE_WALL
	gC POLISHED_BLACKSTONE_BRICK_WALL
	gD COBBLED_DEEPSLATE_WALL
	gE POLISHED_DEEPSLATE_WALL
	gF DEEPSLATE_BRICK_WALL
	gG DEEPSLATE_TILE_WALL
	gH ANVIL
	gI CHIPPED_ANVIL
	gJ DAMAGED_ANVIL
	gK CHISELED_QUARTZ_BLOCK
	gL QUARTZ_BLOCK
	gM QUARTZ_BRICKS
	gN QUARTZ_PILLAR
	gO QUARTZ_STAIRS
	gP WHITE_TERRACOTTA
	gQ ORANGE_TERRACOTTA
	gR MAGENTA_TERRACOTTA
	gS LIGHT_BLUE_TERRACOTTA
	gT YELLOW_TERRACOTTA
	gU LIME_TERRACOTTA
	gV PINK_TERRACOTTA
	gW GRAY_TERRACOTTA
	gX LIGHT_GRAY_TERRACOTTA
	gY CYAN_TERRACOTTA
	gZ PURPLE_TERRACOTTA
	ga JUNGLE_STAIRS
	gb ACACIA_STAIRS
	gc CHERRY_STAIRS
	gd DARK_OAK_STAIRS
	ge MANGROVE_STAIRS
	gf BAMBOO_STAIRS
	gg BAMBOO_MOSAIC_STAIRS
	gh CRIMSON_STAIRS
	gi WARPED_STAIRS
	gj COMMAND_BLOCK
	gk BEACON
	gl COBBLESTONE_WALL
	gm MOSSY_COBBLESTONE_WALL
	gn BRICK_WALL
	go PRISMARINE_WALL
	gp RED_SANDSTONE_WALL
	gq MOSSY_STONE_BRICK_WALL
	gr GRANITE_WALL
	gs STONE_BRICK_WALL
	gt MUD_BRICK_WALL
	gu NETHER_BRICK_WALL
	gv ANDESITE_WALL
	gw RED_NETHER_BRICK_WALL
	gx SANDSTONE_WALL
	gy END_STONE_BRICK_WALL
	gz DIORITE_WALL
	h POLISHED_ANDESITE
	hA DIRT_PATH
	hB SUNFLOWER
	hC LILAC
	hD ROSE_BUSH
	hE PEONY
	hF TALL_GRASS
	hG LARGE_FERN
	hH WHITE_STAINED_GLASS
	hI ORANGE_STAINED_GLASS
	hJ MAGENTA_STAINED_GLASS
	hK LIGHT_BLUE_STAINED_GLASS
	hL YELLOW_STAINED_GLASS
	hM LIME_STAINED_GLASS
	hN PINK_STAINED_GLASS
	hO GRAY_STAINED_GLASS
	hP LIGHT_GRAY_STAINED_GLASS
	hQ CYAN_STAINED_GLASS
	hR PURPLE_STAINED_GLASS
	hS BLUE_STAINED_GLASS
	hT BROWN_STAINED_GLASS
	hU GREEN_STAINED_GLASS
	hV RED_STAINED_GLASS
	hW BLACK_STAINED_GLASS
	hX WHITE_STAINED_GLASS_PANE
	hY ORANGE_STAINED_GLASS_PANE
	hZ MAGENTA_STAINED_GLASS_PANE
	ha BLUE_TERRACOTTA
	hb BROWN_TERRACOTTA
	hc GREEN_TERRACOTTA
	hd RED_TERRACOTTA
	he BLACK_TERRACOTTA
	hf BARRIER
	hg LIGHT
	hh HAY_BLOCK
	hi WHITE_CARPET
	hj ORANGE_CARPET
	hk MAGENTA_CARPET
	hl LIGHT_BLUE_CARPET
	hm YELLOW_CARPET
	hn LIME_CARPET
	ho PINK_CARPET
	hp GRAY_CARPET
	hq LIGHT_GRAY_CARPET
	hr CYAN_CARPET
	hs PURPLE_CARPET
	ht BLUE_CARPET
	hu BROWN_CARPET
	hv GREEN_CARPET
	hw RED_CARPET
	hx BLACK_CARPET
	hy TERRACOTTA
	hz PACKED_ICE
	i DEEPSLATE
	iA MAGMA_BLOCK
	iB NETHER_WART_BLOCK
	iC WARPED_WART_BLOCK
	iD RED_NETHER_BRICKS
	iE BONE_BLOCK
	iF STRUCTURE_VOID
	iG SHULKER_BOX
	iH WHITE_SHULKER_BOX
	iI ORANGE_SHULKER_BOX
	iJ MAGENTA_SHULKER_BOX
	iK LIGHT_BLUE_SHULKER_BOX
	iL YELLOW_SHULKER_BOX
	iM LIME_SHULKER_BOX
	iN PINK_SHULKER_BOX
	iO GRAY_SHULKER_BOX
	iP LIGHT_GRAY_SHULKER_BOX
	iQ CYAN_SHULKER_BOX
	iR PURPLE_SHULKER_BOX
	iS BLUE_SHULKER_BOX
	iT BROWN_SHULKER_BOX
	iU GREEN_SHULKER_BOX
	iV RED_SHULKER_BOX
	iW BLACK_SHULKER_BOX
	iX WHITE_GLAZED_TERRACOTTA
	iY ORANGE_GLAZED_TERRACOTTA
	iZ MAGENTA_GLAZED_TERRACOTTA
	ia LIGHT_BLUE_STAINED_GLASS_PANE
	ib YELLOW_STAINED_GLASS_PANE
	ic LIME_STAINED_GLASS_PANE
	id PINK_STAINED_GLASS_PANE
	ie GRAY_STAINED_GLASS_PANE
	if LIGHT_GRAY_STAINED_GLASS_PANE
	ig CYAN_STAINED_GLASS_PANE
	ih PURPLE_STAINED_GLASS_PANE
	ii BLUE_STAINED_GLASS_PANE
	ij BROWN_STAINED_GLASS_PANE
	ik GREEN_STAINED_GLASS_PANE
	il RED_STAINED_GLASS_PANE
	im BLACK_STAINED_GLASS_PANE
	in PRISMARINE
	io PRISMARINE_BRICKS
	ip DARK_PRISMARINE
	iq PRISMARINE_STAIRS
	ir PRISMARINE_BRICK_STAIRS
	is DARK_PRISMARINE_STAIRS
	it SEA_LANTERN
	iu RED_SANDSTONE
	iv CHISELED_RED_SANDSTONE
	iw CUT_RED_SANDSTONE
	ix RED_SANDSTONE_STAIRS
	iy REPEATING_COMMAND_BLOCK
	iz CHAIN_COMMAND_BLOCK
	j COBBLED_DEEPSLATE
	jA GREEN_CONCRETE
	jB RED_CONCRETE
	jC BLACK_CONCRETE
	jD WHITE_CONCRETE_POWDER
	jE ORANGE_CONCRETE_POWDER
	jF MAGENTA_CONCRETE_POWDER
	jG LIGHT_BLUE_CONCRETE_POWDER
	jH YELLOW_CONCRETE_POWDER
	jI LIME_CONCRETE_POWDER
	jJ PINK_CONCRETE_POWDER
	jK GRAY_CONCRETE_POWDER
	jL LIGHT_GRAY_CONCRETE_POWDER
	jM CYAN_CONCRETE_POWDER
	jN PURPLE_CONCRETE_POWDER
	jO BLUE_CONCRETE_POWDER
	jP BROWN_CONCRETE_POWDER
	jQ GREEN_CONCRETE_POWDER
	jR RED_CONCRETE_POWDER
	jS BLACK_CONCRETE_POWDER
	jT TURTLE_EGG
	jU SNIFFER_EGG
	jV DEAD_TUBE_CORAL_BLOCK
	jW DEAD_BRAIN_CORAL_BLOCK
	jX DEAD_BUBBLE_CORAL_BLOCK
	jY DEAD_FIRE_CORAL_BLOCK
	jZ DEAD_HORN_CORAL_BLOCK
	ja LIGHT_BLUE_GLAZED_TERRACOTTA
	jb YELLOW_GLAZED_TERRACOTTA
	jc LIME_GLAZED_TERRACOTTA
	jd PINK_GLAZED_TERRACOTTA
	je GRAY_GLAZED_TERRACOTTA
	jf LIGHT_GRAY_GLAZED_TERRACOTTA
	jg CYAN_GLAZED_TERRACOTTA
	jh PURPLE_GLAZED_TERRACOTTA
	ji BLUE_GLAZED_TERRACOTTA
	jj BROWN_GLAZED_TERRACOTTA
	jk GREEN_GLAZED_TERRACOTTA
	jl RED_GLAZED_TERRACOTTA
	jm BLACK_GLAZED_TERRACOTTA
	jn WHITE_CONCRETE
	jo ORANGE_CONCRETE
	jp MAGENTA_CONCRETE
	jq LIGHT_BLUE_CONCRETE
	jr YELLOW_CONCRETE
	js LIME_CONCRETE
	jt PINK_CONCRETE
	ju GRAY_CONCRETE
	jv LIGHT_GRAY_CONCRETE
	jw CYAN_CONCRETE
	jx PURPLE_CONCRETE
	jy BLUE_CONCRETE
	jz BROWN_CONCRETE
	k POLISHED_DEEPSLATE
	kA CONDUIT
	kB POLISHED_GRANITE_STAIRS
	kC SMOOTH_RED_SANDSTONE_STAIRS
	kD MOSSY_STONE_BRICK_STAIRS
	kE POLISHED_DIORITE_STAIRS
	kF MOSSY_COBBLESTONE_STAIRS
	kG END_STONE_BRICK_STAIRS
	kH STONE_STAIRS
	kI SMOOTH_SANDSTONE_STAIRS
	kJ SMOOTH_QUARTZ_STAIRS
	kK GRANITE_STAIRS
	kL ANDESITE_STAIRS
	kM RED_NETHER_BRICK_STAIRS
	kN POLISHED_ANDESITE_STAIRS
	kO DIORITE_STAIRS
	kP COBBLED_DEEPSLATE_STAIRS
	kQ POLISHED_DEEPSLATE_STAIRS
	kR DEEPSLATE_BRICK_STAIRS
	kS DEEPSLATE_TILE_STAIRS
	kT POLISHED_GRANITE_SLAB
	kU SMOOTH_RED_SANDSTONE_SLAB
	kV MOSSY_STONE_BRICK_SLAB
	kW POLISHED_DIORITE_SLAB
	kX MOSSY_COBBLESTONE_SLAB
	kY END_STONE_BRICK_SLAB
	kZ SMOOTH_SANDSTONE_SLAB
	ka TUBE_CORAL_BLOCK
	kb BRAIN_CORAL_BLOCK
	kc BUBBLE_CORAL_BLOCK
	kd FIRE_CORAL_BLOCK
	ke HORN_CORAL_BLOCK
	kf TUBE_CORAL
	kg BRAIN_CORAL
	kh BUBBLE_CORAL
	ki FIRE_CORAL
	kj HORN_CORAL
	kk DEAD_BRAIN_CORAL
	kl DEAD_BUBBLE_CORAL
	km DEAD_FIRE_CORAL
	kn DEAD_HORN_CORAL
	ko DEAD_TUBE_CORAL
	kp TUBE_CORAL_FAN
	kq BRAIN_CORAL_FAN
	kr BUBBLE_CORAL_FAN
	ks FIRE_CORAL_FAN
	kt HORN_CORAL_FAN
	ku DEAD_TUBE_CORAL_FAN
	kv DEAD_BRAIN_CORAL_FAN
	kw DEAD_BUBBLE_CORAL_FAN
	kx DEAD_FIRE_CORAL_FAN
	ky DEAD_HORN_CORAL_FAN
	kz BLUE_ICE
	l CALCITE
	lA LEVER
	lB LIGHTNING_ROD
	lC DAYLIGHT_DETECTOR
	lD SCULK_SENSOR
	lE CALIBRATED_SCULK_SENSOR
	lF TRIPWIRE_HOOK
	lG TRAPPED_CHEST
	lH TNT
	lI REDSTONE_LAMP
	lJ NOTE_BLOCK
	lK STONE_BUTTON
	lL POLISHED_BLACKSTONE_BUTTON
	lM OAK_BUTTON
	lN SPRUCE_BUTTON
	lO BIRCH_BUTTON
	lP JUNGLE_BUTTON
	lQ ACACIA_BUTTON
	lR CHERRY_BUTTON
	lS DARK_OAK_BUTTON
	lT MANGROVE_BUTTON
	lU BAMBOO_BUTTON
	lV CRIMSON_BUTTON
	lW WARPED_BUTTON
	lX STONE_PRESSURE_PLATE
	lY POLISHED_BLACKSTONE_PRESSURE_PLATE
	lZ LIGHT_WEIGHTED_PRESSURE_PLATE
	la SMOOTH_QUARTZ_SLAB
	lb GRANITE_SLAB
	lc ANDESITE_SLAB
	ld RED_NETHER_BRICK_SLAB
	le POLISHED_ANDESITE_SLAB
	lf DIORITE_SLAB
	lg COBBLED_DEEPSLATE_SLAB
	lh POLISHED_DEEPSLATE_SLAB
	li DEEPSLATE_BRICK_SLAB
	lj DEEPSLATE_TILE_SLAB
	lk SCAFFOLDING
	ll REDSTONE
	lm REDSTONE_TORCH
	ln REDSTONE_BLOCK
	lo REPEATER
	lp COMPARATOR
	lq PISTON
	lr STICKY_PISTON
	ls SLIME_BLOCK
	lt HONEY_BLOCK
	lu OBSERVER
	lv HOPPER
	lw DISPENSER
	lx DROPPER
	ly LECTERN
	lz TARGET
	m TUFF
	mA SPRUCE_TRAPDOOR
	mB BIRCH_TRAPDOOR
	mC JUNGLE_TRAPDOOR
	mD ACACIA_TRAPDOOR
	mE CHERRY_TRAPDOOR
	mF DARK_OAK_TRAPDOOR
	mG MANGROVE_TRAPDOOR
	mH BAMBOO_TRAPDOOR
	mI CRIMSON_TRAPDOOR
	mJ WARPED_TRAPDOOR
	mK OAK_FENCE_GATE
	mL SPRUCE_FENCE_GATE
	mM BIRCH_FENCE_GATE
	mN JUNGLE_FENCE_GATE
	mO ACACIA_FENCE_GATE
	mP CHERRY_FENCE_GATE
	mQ DARK_OAK_FENCE_GATE
	mR MANGROVE_FENCE_GATE
	mS BAMBOO_FENCE_GATE
	mT CRIMSON_FENCE_GATE
	mU WARPED_FENCE_GATE
	mV POWERED_RAIL
	mW DETECTOR_RAIL
	mX RAIL
	mY ACTIVATOR_RAIL
	mZ SADDLE
	ma HEAVY_WEIGHTED_PRESSURE_PLATE
	mb OAK_PRESSURE_PLATE
	mc SPRUCE_PRESSURE_PLATE
	md BIRCH_PRESSURE_PLATE
	me JUNGLE_PRESSURE_PLATE
	mf ACACIA_PRESSURE_PLATE
	mg CHERRY_PRESSURE_PLATE
	mh DARK_OAK_PRESSURE_PLATE
	mi MANGROVE_PRESSURE_PLATE
	mj BAMBOO_PRESSURE_PLATE
	mk CRIMSON_PRESSURE_PLATE
	ml WARPED_PRESSURE_PLATE
	mm IRON_DOOR
	mn OAK_DOOR
	mo SPRUCE_DOOR
	mp BIRCH_DOOR
	mq JUNGLE_DOOR
	mr ACACIA_DOOR
	ms CHERRY_DOOR
	mt DARK_OAK_DOOR
	mu MANGROVE_DOOR
	mv BAMBOO_DOOR
	mw CRIMSON_DOOR
	mx WARPED_DOOR
	my IRON_TRAPDOOR
	mz OAK_TRAPDOOR
	n DRIPSTONE_BLOCK
	nA STRUCTURE_BLOCK
	nB JIGSAW
	nC TURTLE_HELMET
	nD SCUTE
	nE FLINT_AND_STEEL
	nF APPLE
	nG BOW
	nH ARROW
	nI COAL
	nJ CHARCOAL
	nK DIAMOND
	nL EMERALD
	nM LAPIS_LAZULI
	nN QUARTZ
	nO AMETHYST_SHARD
	nP RAW_IRON
	nQ IRON_INGOT
	nR RAW_COPPER
	nS COPPER_INGOT
	nT RAW_GOLD
	nU GOLD_INGOT
	nV NETHERITE_INGOT
	nW NETHERITE_SCRAP
	nX WOODEN_SWORD
	nY WOODEN_SHOVEL
	nZ WOODEN_PICKAXE
	na MINECART
	nb CHEST_MINECART
	nc FURNACE_MINECART
	nd TNT_MINECART
	ne HOPPER_MINECART
	nf CARROT_ON_A_STICK
	ng WARPED_FUNGUS_ON_A_STICK
	nh ELYTRA
	ni OAK_BOAT
	nj OAK_CHEST_BOAT
	nk SPRUCE_BOAT
	nl SPRUCE_CHEST_BOAT
	nm BIRCH_BOAT
	nn BIRCH_CHEST_BOAT
	no JUNGLE_BOAT
	np JUNGLE_CHEST_BOAT
	nq ACACIA_BOAT
	nr ACACIA_CHEST_BOAT
	ns CHERRY_BOAT
	nt CHERRY_CHEST_BOAT
	nu DARK_OAK_BOAT
	nv DARK_OAK_CHEST_BOAT
	nw MANGROVE_BOAT
	nx MANGROVE_CHEST_BOAT
	ny BAMBOO_RAFT
	nz BAMBOO_CHEST_RAFT
	o GRASS_BLOCK
	oA NETHERITE_HOE
	oB STICK
	oC BOWL
	oD MUSHROOM_STEW
	oE STRING
	oF FEATHER
	oG GUNPOWDER
	oH WHEAT_SEEDS
	oI WHEAT
	oJ BREAD
	oK LEATHER_HELMET
	oL LEATHER_CHESTPLATE
	oM LEATHER_LEGGINGS
	oN LEATHER_BOOTS
	oO CHAINMAIL_HELMET
	oP CHAINMAIL_CHESTPLATE
	oQ CHAINMAIL_LEGGINGS
	oR CHAINMAIL_BOOTS
	oS IRON_HELMET
	oT IRON_CHESTPLATE
	oU IRON_LEGGINGS
	oV IRON_BOOTS
	oW DIAMOND_HELMET
	oX DIAMOND_CHESTPLATE
	oY DIAMOND_LEGGINGS
	oZ DIAMOND_BOOTS
	oa WOODEN_AXE
	ob WOODEN_HOE
	oc STONE_SWORD
	od STONE_SHOVEL
	oe STONE_PICKAXE
	of STONE_AXE
	og STONE_HOE
	oh GOLDEN_SWORD
	oi GOLDEN_SHOVEL
	oj GOLDEN_PICKAXE
	ok GOLDEN_AXE
	ol GOLDEN_HOE
	om IRON_SWORD
	on IRON_SHOVEL
	oo IRON_PICKAXE
	op IRON_AXE
	oq IRON_HOE
	or DIAMOND_SWORD
	os DIAMOND_SHOVEL
	ot DIAMOND_PICKAXE
	ou DIAMOND_AXE
	ov DIAMOND_HOE
	ow NETHERITE_SWORD
	ox NETHERITE_SHOVEL
	oy NETHERITE_PICKAXE
	oz NETHERITE_AXE
	p DIRT
	pA SPRUCE_HANGING_SIGN
	pB BIRCH_HANGING_SIGN
	pC JUNGLE_HANGING_SIGN
	pD ACACIA_HANGING_SIGN
	pE CHERRY_HANGING_SIGN
	pF DARK_OAK_HANGING_SIGN
	pG MANGROVE_HANGING_SIGN
	pH BAMBOO_HANGING_SIGN
	pI CRIMSON_HANGING_SIGN
	pJ WARPED_HANGING_SIGN
	pK BUCKET
	pL WATER_BUCKET
	pM LAVA_BUCKET
	pN POWDER_SNOW_BUCKET
	pO SNOWBALL
	pP LEATHER
	pQ MILK_BUCKET
	pR PUFFERFISH_BUCKET
	pS SALMON_BUCKET
	pT COD_BUCKET
	pU TROPICAL_FISH_BUCKET
	pV AXOLOTL_BUCKET
	pW TADPOLE_BUCKET
	pX BRICK
	pY CLAY_BALL
	pZ DRIED_KELP_BLOCK
	pa GOLDEN_HELMET
	pb GOLDEN_CHESTPLATE
	pc GOLDEN_LEGGINGS
	pd GOLDEN_BOOTS
	pe NETHERITE_HELMET
	pf NETHERITE_CHESTPLATE
	pg NETHERITE_LEGGINGS
	ph NETHERITE_BOOTS
	pi FLINT
	pj PORKCHOP
	pk COOKED_PORKCHOP
	pl PAINTING
	pm GOLDEN_APPLE
	pn ENCHANTED_GOLDEN_APPLE
	po OAK_SIGN
	pp SPRUCE_SIGN
	pq BIRCH_SIGN
	pr JUNGLE_SIGN
	ps ACACIA_SIGN
	pt CHERRY_SIGN
	pu DARK_OAK_SIGN
	pv MANGROVE_SIGN
	pw BAMBOO_SIGN
	px CRIMSON_SIGN
	py WARPED_SIGN
	pz OAK_HANGING_SIGN
	q COARSE_DIRT
	qA PINK_DYE
	qB GRAY_DYE
	qC LIGHT_GRAY_DYE
	qD CYAN_DYE
	qE PURPLE_DYE
	qF BLUE_DYE
	qG BROWN_DYE
	qH GREEN_DYE
	qI RED_DYE
	qJ BLACK_DYE
	qK BONE_MEAL
	qL BONE
	qM SUGAR
	qN CAKE
	qO WHITE_BED
	qP ORANGE_BED
	qQ MAGENTA_BED
	qR LIGHT_BLUE_BED
	qS YELLOW_BED
	qT LIME_BED
	qU PINK_BED
	qV GRAY_BED
	qW LIGHT_GRAY_BED
	qX CYAN_BED
	qY PURPLE_BED
	qZ BLUE_BED
	qa PAPER
	qb BOOK
	qc SLIME_BALL
	qd EGG
	qe COMPASS
	qf RECOVERY_COMPASS
	qg BUNDLE
	qh FISHING_ROD
	qi CLOCK
	qj SPYGLASS
	qk GLOWSTONE_DUST
	ql COD
	qm SALMON
	qn TROPICAL_FISH
	qo PUFFERFISH
	qp COOKED_COD
	qq COOKED_SALMON
	qr INK_SAC
	qs GLOW_INK_SAC
	qt COCOA_BEANS
	qu WHITE_DYE
	qv ORANGE_DYE
	qw MAGENTA_DYE
	qx LIGHT_BLUE_DYE
	qy YELLOW_DYE
	qz LIME_DYE
	r PODZOL
	rA MAGMA_CREAM
	rB BREWING_STAND
	rC CAULDRON
	rD ENDER_EYE
	rE GLISTERING_MELON_SLICE
	rF ALLAY_SPAWN_EGG
	rG AXOLOTL_SPAWN_EGG
	rH BAT_SPAWN_EGG
	rI BEE_SPAWN_EGG
	rJ BLAZE_SPAWN_EGG
	rK CAT_SPAWN_EGG
	rL CAMEL_SPAWN_EGG
	rM CAVE_SPIDER_SPAWN_EGG
	rN CHICKEN_SPAWN_EGG
	rO COD_SPAWN_EGG
	rP COW_SPAWN_EGG
	rQ CREEPER_SPAWN_EGG
	rR DOLPHIN_SPAWN_EGG
	rS DONKEY_SPAWN_EGG
	rT DROWNED_SPAWN_EGG
	rU ELDER_GUARDIAN_SPAWN_EGG
	rV ENDER_DRAGON_SPAWN_EGG
	rW ENDERMAN_SPAWN_EGG
	rX ENDERMITE_SPAWN_EGG
	rY EVOKER_SPAWN_EGG
	rZ FOX_SPAWN_EGG
	ra BROWN_BED
	rb GREEN_BED
	rc RED_BED
	rd BLACK_BED
	re COOKIE
	rf FILLED_MAP
	rg SHEARS
	rh MELON_SLICE
	ri DRIED_KELP
	rj PUMPKIN_SEEDS
	rk MELON_SEEDS
	rl BEEF
	rm COOKED_BEEF
	rn CHICKEN
	ro COOKED_CHICKEN
	rp ROTTEN_FLESH
	rq ENDER_PEARL
	rr BLAZE_ROD
	rs GHAST_TEAR
	rt GOLD_NUGGET
	ru NETHER_WART
	rv POTION
	rw GLASS_BOTTLE
	rx SPIDER_EYE
	ry FERMENTED_SPIDER_EYE
	rz BLAZE_POWDER
	s ROOTED_DIRT
	sA SHEEP_SPAWN_EGG
	sB SHULKER_SPAWN_EGG
	sC SILVERFISH_SPAWN_EGG
	sD SKELETON_SPAWN_EGG
	sE SKELETON_HORSE_SPAWN_EGG
	sF SLIME_SPAWN_EGG
	sG SNIFFER_SPAWN_EGG
	sH SNOW_GOLEM_SPAWN_EGG
	sI SPIDER_SPAWN_EGG
	sJ SQUID_SPAWN_EGG
	sK STRAY_SPAWN_EGG
	sL STRIDER_SPAWN_EGG
	sM TADPOLE_SPAWN_EGG
	sN TRADER_LLAMA_SPAWN_EGG
	sO TROPICAL_FISH_SPAWN_EGG
	sP TURTLE_SPAWN_EGG
	sQ VEX_SPAWN_EGG
	sR VILLAGER_SPAWN_EGG
	sS VINDICATOR_SPAWN_EGG
	sT WANDERING_TRADER_SPAWN_EGG
	sU WARDEN_SPAWN_EGG
	sV WITCH_SPAWN_EGG
	sW WITHER_SPAWN_EGG
	sX WITHER_SKELETON_SPAWN_EGG
	sY WOLF_SPAWN_EGG
	sZ ZOGLIN_SPAWN_EGG
	sa FROG_SPAWN_EGG
	sb GHAST_SPAWN_EGG
	sc GLOW_SQUID_SPAWN_EGG
	sd GOAT_SPAWN_EGG
	se GUARDIAN_SPAWN_EGG
	sf HOGLIN_SPAWN_EGG
	sg HORSE_SPAWN_EGG
	sh HUSK_SPAWN_EGG
	si IRON_GOLEM_SPAWN_EGG
	sj LLAMA_SPAWN_EGG
	sk MAGMA_CUBE_SPAWN_EGG
	sl MOOSHROOM_SPAWN_EGG
	sm MULE_SPAWN_EGG
	sn OCELOT_SPAWN_EGG
	so PANDA_SPAWN_EGG
	sp PARROT_SPAWN_EGG
	sq PHANTOM_SPAWN_EGG
	sr PIG_SPAWN_EGG
	ss PIGLIN_SPAWN_EGG
	st PIGLIN_BRUTE_SPAWN_EGG
	su PILLAGER_SPAWN_EGG
	sv POLAR_BEAR_SPAWN_EGG
	sw PUFFERFISH_SPAWN_EGG
	sx RABBIT_SPAWN_EGG
	sy RAVAGER_SPAWN_EGG
	sz SALMON_SPAWN_EGG
	t MUD
	tA FIREWORK_ROCKET
	tB FIREWORK_STAR
	tC ENCHANTED_BOOK
	tD NETHER_BRICK
	tE PRISMARINE_SHARD
	tF PRISMARINE_CRYSTALS
	tG RABBIT
	tH COOKED_RABBIT
	tI RABBIT_STEW
	tJ RABBIT_FOOT
	tK RABBIT_HIDE
	tL ARMOR_STAND
	tM IRON_HORSE_ARMOR
	tN GOLDEN_HORSE_ARMOR
	tO DIAMOND_HORSE_ARMOR
	tP LEATHER_HORSE_ARMOR
	tQ LEAD
	tR NAME_TAG
	tS COMMAND_BLOCK_MINECART
	tT MUTTON
	tU COOKED_MUTTON
	tV WHITE_BANNER
	tW ORANGE_BANNER
	tX MAGENTA_BANNER
	tY LIGHT_BLUE_BANNER
	tZ YELLOW_BANNER
	ta ZOMBIE_SPAWN_EGG
	tb ZOMBIE_HORSE_SPAWN_EGG
	tc ZOMBIE_VILLAGER_SPAWN_EGG
	td ZOMBIFIED_PIGLIN_SPAWN_EGG
	te EXPERIENCE_BOTTLE
	tf FIRE_CHARGE
	tg WRITABLE_BOOK
	th WRITTEN_BOOK
	ti ITEM_FRAME
	tj GLOW_ITEM_FRAME
	tk FLOWER_POT
	tl CARROT
	tm POTATO
	tn BAKED_POTATO
	to POISONOUS_POTATO
	tp MAP
	tq GOLDEN_CARROT
	tr SKELETON_SKULL
	ts WITHER_SKELETON_SKULL
	tt PLAYER_HEAD
	tu ZOMBIE_HEAD
	tv CREEPER_HEAD
	tw DRAGON_HEAD
	tx PIGLIN_HEAD
	ty NETHER_STAR
	tz PUMPKIN_PIE
	u CRIMSON_NYLIUM
	uA SHULKER_SHELL
	uB IRON_NUGGET
	uC KNOWLEDGE_BOOK
	uD DEBUG_STICK
	uE MUSIC_DISC_13
	uF MUSIC_DISC_CAT
	uG MUSIC_DISC_BLOCKS
	uH MUSIC_DISC_CHIRP
	uI MUSIC_DISC_FAR
	uJ MUSIC_DISC_MALL
	uK MUSIC_DISC_MELLOHI
	uL MUSIC_DISC_STAL
	uM MUSIC_DISC_STRAD
	uN MUSIC_DISC_WARD
	uO MUSIC_DISC_11
	uP MUSIC_DISC_WAIT
	uQ MUSIC_DISC_OTHERSIDE
	uR MUSIC_DISC_RELIC
	uS MUSIC_DISC_5
	uT MUSIC_DISC_PIGSTEP
	uU DISC_FRAGMENT_5
	uV TRIDENT
	uW PHANTOM_MEMBRANE
	uX NAUTILUS_SHELL
	uY HEART_OF_THE_SEA
	uZ CROSSBOW
	ua LIME_BANNER
	ub PINK_BANNER
	uc GRAY_BANNER
	ud LIGHT_GRAY_BANNER
	ue CYAN_BANNER
	uf PURPLE_BANNER
	ug BLUE_BANNER
	uh BROWN_BANNER
	ui GREEN_BANNER
	uj RED_BANNER
	uk BLACK_BANNER
	ul END_CRYSTAL
	um CHORUS_FRUIT
	un POPPED_CHORUS_FRUIT
	uo TORCHFLOWER_SEEDS
	up PITCHER_POD
	uq BEETROOT
	ur BEETROOT_SEEDS
	us BEETROOT_SOUP
	ut DRAGON_BREATH
	uu SPLASH_POTION
	uv SPECTRAL_ARROW
	uw TIPPED_ARROW
	ux LINGERING_POTION
	uy SHIELD
	uz TOTEM_OF_UNDYING
	v WARPED_NYLIUM
	vA HONEYCOMB
	vB BEE_NEST
	vC BEEHIVE
	vD HONEY_BOTTLE
	vE HONEYCOMB_BLOCK
	vF LODESTONE
	vG CRYING_OBSIDIAN
	vH BLACKSTONE
	vI BLACKSTONE_SLAB
	vJ BLACKSTONE_STAIRS
	vK GILDED_BLACKSTONE
	vL POLISHED_BLACKSTONE
	vM POLISHED_BLACKSTONE_SLAB
	vN POLISHED_BLACKSTONE_STAIRS
	vO CHISELED_POLISHED_BLACKSTONE
	vP POLISHED_BLACKSTONE_BRICKS
	vQ POLISHED_BLACKSTONE_BRICK_SLAB
	vR POLISHED_BLACKSTONE_BRICK_STAIRS
	vS CRACKED_POLISHED_BLACKSTONE_BRICKS
	vT RESPAWN_ANCHOR
	vU CANDLE
	vV WHITE_CANDLE
	vW ORANGE_CANDLE
	vX MAGENTA_CANDLE
	vY LIGHT_BLUE_CANDLE
	vZ YELLOW_CANDLE
	va SUSPICIOUS_STEW
	vb LOOM
	vc FLOWER_BANNER_PATTERN
	vd CREEPER_BANNER_PATTERN
	ve SKULL_BANNER_PATTERN
	vf MOJANG_BANNER_PATTERN
	vg GLOBE_BANNER_PATTERN
	vh PIGLIN_BANNER_PATTERN
	vi GOAT_HORN
	vj COMPOSTER
	vk BARREL
	vl SMOKER
	vm BLAST_FURNACE
	vn CARTOGRAPHY_TABLE
	vo FLETCHING_TABLE
	vp GRINDSTONE
	vq SMITHING_TABLE
	vr STONECUTTER
	vs BELL
	vt LANTERN
	vu SOUL_LANTERN
	vv SWEET_BERRIES
	vw GLOW_BERRIES
	vx CAMPFIRE
	vy SOUL_CAMPFIRE
	vz SHROOMLIGHT
	w COBBLESTONE
	wA WILD_ARMOR_TRIM_SMITHING_TEMPLATE
	wB WARD_ARMOR_TRIM_SMITHING_TEMPLATE
	wC EYE_ARMOR_TRIM_SMITHING_TEMPLATE
	wD VEX_ARMOR_TRIM_SMITHING_TEMPLATE
	wE TIDE_ARMOR_TRIM_SMITHING_TEMPLATE
	wF SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE
	wG RIB_ARMOR_TRIM_SMITHING_TEMPLATE
	wH SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE
	wI WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE
	wJ SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE
	wK SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE
	wL RAISER_ARMOR_TRIM_SMITHING_TEMPLATE
	wM HOST_ARMOR_TRIM_SMITHING_TEMPLATE
	wN ANGLER_POTTERY_SHERD
	wO ARCHER_POTTERY_SHERD
	wP ARMS_UP_POTTERY_SHERD
	wQ BLADE_POTTERY_SHERD
	wR BREWER_POTTERY_SHERD
	wS BURN_POTTERY_SHERD
	wT DANGER_POTTERY_SHERD
	wU EXPLORER_POTTERY_SHERD
	wV FRIEND_POTTERY_SHERD
	wW HEART_POTTERY_SHERD
	wX HEARTBREAK_POTTERY_SHERD
	wY HOWL_POTTERY_SHERD
	wZ MINER_POTTERY_SHERD
	wa LIME_CANDLE
	wb PINK_CANDLE
	wc GRAY_CANDLE
	wd LIGHT_GRAY_CANDLE
	we CYAN_CANDLE
	wf PURPLE_CANDLE
	wg BLUE_CANDLE
	wh BROWN_CANDLE
	wi GREEN_CANDLE
	wj RED_CANDLE
	wk BLACK_CANDLE
	wl SMALL_AMETHYST_BUD
	wm MEDIUM_AMETHYST_BUD
	wn LARGE_AMETHYST_BUD
	wo AMETHYST_CLUSTER
	wp POINTED_DRIPSTONE
	wq OCHRE_FROGLIGHT
	wr VERDANT_FROGLIGHT
	ws PEARLESCENT_FROGLIGHT
	wt FROGSPAWN
	wu ECHO_SHARD
	wv BRUSH
	ww NETHERITE_UPGRADE_SMITHING_TEMPLATE
	wx SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE
	wy DUNE_ARMOR_TRIM_SMITHING_TEMPLATE
	wz COAST_ARMOR_TRIM_SMITHING_TEMPLATE
	x OAK_PLANKS
	xa MOURNER_POTTERY_SHERD
	xb PLENTY_POTTERY_SHERD
	xc PRIZE_POTTERY_SHERD
	xd SHEAF_POTTERY_SHERD
	xe SHELTER_POTTERY_SHERD
	xf SKULL_POTTERY_SHERD
	xg SNORT_POTTERY_SHERD
	y SPRUCE_PLANKS
	z BIRCH_PLANKS
	a (Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; registerItem
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; registerItem
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; registerItem
	a (Lnet/minecraft/world/item/ItemBlock;)Lnet/minecraft/world/item/Item; registerBlock
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; registerBlock
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; registerBlock
	a (Lnet/minecraft/world/level/block/Block;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; registerBlock
net/minecraft/world/item/MobBucketItem net/minecraft/world/item/MobBucketItem
	a type
	b emptySound
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)V spawn
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V playEmptySound
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)V checkExtraContent
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
net/minecraft/world/item/SmithingTemplateItem net/minecraft/world/item/SmithingTemplateItem
	A EMPTY_SLOT_SHOVEL
	B EMPTY_SLOT_PICKAXE
	C EMPTY_SLOT_INGOT
	D EMPTY_SLOT_REDSTONE_DUST
	E EMPTY_SLOT_QUARTZ
	F EMPTY_SLOT_EMERALD
	G EMPTY_SLOT_DIAMOND
	H EMPTY_SLOT_LAPIS_LAZULI
	I EMPTY_SLOT_AMETHYST_SHARD
	J appliesTo
	K ingredients
	L upgradeDescription
	M baseSlotDescription
	N additionsSlotDescription
	O baseSlotEmptyIcons
	P additionalSlotEmptyIcons
	a TITLE_FORMAT
	b DESCRIPTION_FORMAT
	c INGREDIENTS_TITLE
	d APPLIES_TO_TITLE
	e NETHERITE_UPGRADE
	f ARMOR_TRIM_APPLIES_TO
	g ARMOR_TRIM_INGREDIENTS
	h ARMOR_TRIM_BASE_SLOT_DESCRIPTION
	i ARMOR_TRIM_ADDITIONS_SLOT_DESCRIPTION
	j NETHERITE_UPGRADE_APPLIES_TO
	k NETHERITE_UPGRADE_INGREDIENTS
	r NETHERITE_UPGRADE_BASE_SLOT_DESCRIPTION
	s NETHERITE_UPGRADE_ADDITIONS_SLOT_DESCRIPTION
	t EMPTY_SLOT_HELMET
	u EMPTY_SLOT_CHESTPLATE
	v EMPTY_SLOT_LEGGINGS
	w EMPTY_SLOT_BOOTS
	x EMPTY_SLOT_HOE
	y EMPTY_SLOT_AXE
	z EMPTY_SLOT_SWORD
	A ()Ljava/util/List; createTrimmableArmorIconList
	B ()Ljava/util/List; createTrimmableMaterialIconList
	C ()Ljava/util/List; createNetheriteUpgradeIconList
	D ()Ljava/util/List; createNetheriteUpgradeMaterialList
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/item/SmithingTemplateItem; createArmorTrimTemplate
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/item/SmithingTemplateItem; createArmorTrimTemplate
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	h ()Lnet/minecraft/world/item/SmithingTemplateItem; createNetheriteUpgradeTemplate
	i ()Lnet/minecraft/network/chat/IChatBaseComponent; getBaseSlotDescription
	x ()Lnet/minecraft/network/chat/IChatBaseComponent; getAdditionSlotDescription
	y ()Ljava/util/List; getBaseSlotEmptyIcons
	z ()Ljava/util/List; getAdditionalSlotEmptyIcons
net/minecraft/world/item/SolidBucketItem net/minecraft/world/item/SolidBucketItem
	c placeSound
	a ()Ljava/lang/String; getDescriptionId
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Z emptyContents
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/sounds/SoundEffect; getPlaceSound
net/minecraft/world/item/SpyglassItem net/minecraft/world/item/SpyglassItem
	a USE_DURATION
	b ZOOM_FOV_MODIFIER
	a (Lnet/minecraft/world/entity/EntityLiving;)V stopUsing
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
net/minecraft/world/item/TooltipFlag net/minecraft/world/item/TooltipFlag
	a NORMAL
	b ADVANCED
	a ()Z isAdvanced
	b ()Z isCreative
net/minecraft/world/item/alchemy/Potions net/minecraft/world/item/alchemy/Potions
	A HEALING
	B STRONG_HEALING
	C HARMING
	D STRONG_HARMING
	E POISON
	F LONG_POISON
	G STRONG_POISON
	H REGENERATION
	I LONG_REGENERATION
	J STRONG_REGENERATION
	K STRENGTH
	L LONG_STRENGTH
	M STRONG_STRENGTH
	N WEAKNESS
	O LONG_WEAKNESS
	P LUCK
	Q SLOW_FALLING
	R LONG_SLOW_FALLING
	a EMPTY_ID
	b EMPTY
	c WATER
	d MUNDANE
	e THICK
	f AWKWARD
	g NIGHT_VISION
	h LONG_NIGHT_VISION
	i INVISIBILITY
	j LONG_INVISIBILITY
	k LEAPING
	l LONG_LEAPING
	m STRONG_LEAPING
	n FIRE_RESISTANCE
	o LONG_FIRE_RESISTANCE
	p SWIFTNESS
	q LONG_SWIFTNESS
	r STRONG_SWIFTNESS
	s SLOWNESS
	t LONG_SLOWNESS
	u STRONG_SLOWNESS
	v TURTLE_MASTER
	w LONG_TURTLE_MASTER
	x STRONG_TURTLE_MASTER
	y WATER_BREATHING
	z LONG_WATER_BREATHING
	a (Ljava/lang/String;Lnet/minecraft/world/item/alchemy/PotionRegistry;)Lnet/minecraft/world/item/alchemy/PotionRegistry; register
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/alchemy/PotionRegistry;)Lnet/minecraft/world/item/alchemy/PotionRegistry; register
net/minecraft/world/item/armortrim/ArmorTrim net/minecraft/world/item/armortrim/ArmorTrim
	a CODEC
	b TAG_TRIM_ID
	c LOGGER
	d UPGRADE_TITLE
	e material
	f pattern
	g innerTexture
	h outerTexture
	a ()Lnet/minecraft/core/Holder; pattern
	a (Lnet/minecraft/core/Holder;Lnet/minecraft/core/Holder;)Z hasPatternAndMaterial
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/armortrim/ArmorTrim;)Z setTrim
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/item/ItemStack;Z)Ljava/util/Optional; getTrim
	a (Lnet/minecraft/world/item/ArmorMaterial;)Lnet/minecraft/resources/MinecraftKey; innerTexture
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/IRegistryCustom;Ljava/util/List;)V appendUpgradeHoverText
	b ()Lnet/minecraft/core/Holder; material
	b (Lnet/minecraft/world/item/ArmorMaterial;)Lnet/minecraft/resources/MinecraftKey; outerTexture
	c (Lnet/minecraft/world/item/ArmorMaterial;)Ljava/lang/String; getColorPaletteSuffix
net/minecraft/world/item/armortrim/TrimMaterial net/minecraft/world/item/armortrim/TrimMaterial
	a DIRECT_CODEC
	b CODEC
	c assetName
	d ingredient
	e itemModelIndex
	f overrideArmorMaterials
	g description
	a ()Ljava/lang/String; assetName
	a (Ljava/lang/String;Lnet/minecraft/world/item/Item;FLnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/Map;)Lnet/minecraft/world/item/armortrim/TrimMaterial; create
	b ()Lnet/minecraft/core/Holder; ingredient
	c ()F itemModelIndex
	d ()Ljava/util/Map; overrideArmorMaterials
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; description
net/minecraft/world/item/armortrim/TrimMaterials net/minecraft/world/item/armortrim/TrimMaterials
	a QUARTZ
	b IRON
	c NETHERITE
	d REDSTONE
	e COPPER
	f GOLD
	g EMERALD
	h DIAMOND
	i LAPIS
	j AMETHYST
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; registryKey
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getFromIngredient
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/Item;Lnet/minecraft/network/chat/ChatModifier;F)V register
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/Item;Lnet/minecraft/network/chat/ChatModifier;FLjava/util/Map;)V register
net/minecraft/world/item/armortrim/TrimPattern net/minecraft/world/item/armortrim/TrimPattern
	a DIRECT_CODEC
	b CODEC
	c assetId
	d templateItem
	e description
	f decal
	a ()Lnet/minecraft/resources/MinecraftKey; assetId
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/network/chat/IChatBaseComponent; copyWithStyle
	b ()Lnet/minecraft/core/Holder; templateItem
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; description
	d ()Z decal
net/minecraft/world/item/armortrim/TrimPatterns net/minecraft/world/item/armortrim/TrimPatterns
	a SENTRY
	b DUNE
	c COAST
	d WILD
	e WARD
	f EYE
	g VEX
	h TIDE
	i SNOUT
	j RIB
	k SPIRE
	l WAYFINDER
	m SHAPER
	n SILENCE
	o RAISER
	p HOST
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; registryKey
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getFromTemplate
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceKey;)V register
net/minecraft/world/item/crafting/CookingBookCategory net/minecraft/world/item/crafting/CookingBookCategory
	a FOOD
	b BLOCKS
	c MISC
	d CODEC
	e name
	f $VALUES
	a ()[Lnet/minecraft/world/item/crafting/CookingBookCategory; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/item/crafting/CraftingBookCategory net/minecraft/world/item/crafting/CraftingBookCategory
	a BUILDING
	b REDSTONE
	c EQUIPMENT
	d MISC
	e CODEC
	f name
	g $VALUES
	a ()[Lnet/minecraft/world/item/crafting/CraftingBookCategory; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/item/crafting/CraftingRecipeCodecs net/minecraft/world/item/crafting/CraftingRecipeCodecs
	a ITEMSTACK_OBJECT_CODEC
	b ITEMSTACK_NONAIR_CODEC
	c ITEM_NONAIR_CODEC
net/minecraft/world/item/crafting/RecipeHolder net/minecraft/world/item/crafting/RecipeHolder
	a id
	b value
	a ()Lnet/minecraft/resources/MinecraftKey; id
	b ()Lnet/minecraft/world/item/crafting/IRecipe; value
net/minecraft/world/item/crafting/RecipeSerializer net/minecraft/world/item/crafting/RecipeSerializer
	a SHAPED_RECIPE
	b SHAPELESS_RECIPE
	c ARMOR_DYE
	d BOOK_CLONING
	e MAP_CLONING
	f MAP_EXTENDING
	g FIREWORK_ROCKET
	h FIREWORK_STAR
	i FIREWORK_STAR_FADE
	j TIPPED_ARROW
	k BANNER_DUPLICATE
	l SHIELD_DECORATION
	m SHULKER_BOX_COLORING
	n SUSPICIOUS_STEW
	o REPAIR_ITEM
	p SMELTING_RECIPE
	q BLASTING_RECIPE
	r SMOKING_RECIPE
	s CAMPFIRE_COOKING_RECIPE
	t STONECUTTER
	u SMITHING_TRANSFORM
	v SMITHING_TRIM
	w DECORATED_POT_RECIPE
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;)Lnet/minecraft/world/item/crafting/RecipeSerializer; register
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer
	x constructor
	y codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/RecipeCrafting;)V toNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/RecipeCrafting; fromNetwork
net/minecraft/world/item/crafting/SmithingTransformRecipe net/minecraft/world/item/crafting/SmithingTransformRecipe
	a template
	b base
	c addition
	d result
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/item/ItemStack;)Z isTemplateIngredient
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	b (Lnet/minecraft/world/item/ItemStack;)Z isBaseIngredient
	c (Lnet/minecraft/world/item/ItemStack;)Z isAdditionIngredient
	i ()Z isIncomplete
net/minecraft/world/item/crafting/SmithingTrimRecipe net/minecraft/world/item/crafting/SmithingTrimRecipe
	a template
	b base
	c addition
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/item/ItemStack;)Z isTemplateIngredient
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	b (Lnet/minecraft/world/item/ItemStack;)Z isBaseIngredient
	c (Lnet/minecraft/world/item/ItemStack;)Z isAdditionIngredient
	i ()Z isIncomplete
net/minecraft/world/item/enchantment/Enchantment$Rarity net/minecraft/world/item/enchantment/Enchantment$Rarity
	a COMMON
	b UNCOMMON
	c RARE
	d VERY_RARE
	e weight
	f $VALUES
	a ()I getWeight
	b ()[Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; $values
net/minecraft/world/item/enchantment/Enchantment net/minecraft/world/item/enchantment/Enchantment
	a slots
	b rarity
	c builtInRegistryHolder
	e category
	f descriptionId
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/world/damagesource/DamageSource;)I getDamageProtection
	a (ILnet/minecraft/world/entity/EnumMonsterType;)F getDamageBonus
	a (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Map; getSlotItems
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;I)V doPostAttack
	a (Lnet/minecraft/world/item/ItemStack;)Z canEnchant
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;I)V doPostHurt
	b (Lnet/minecraft/world/item/enchantment/Enchantment;)Z isCompatibleWith
	c ()Z isCurse
	c (I)Lnet/minecraft/world/item/enchantment/Enchantment; byId
	d ()Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; getRarity
	d (I)Lnet/minecraft/network/chat/IChatBaseComponent; getFullname
	e ()I getMinLevel
	f ()Ljava/lang/String; getOrCreateDescriptionId
	g ()Ljava/lang/String; getDescriptionId
	h ()Z isTradeable
	i ()Z isDiscoverable
	j ()Lhe$c; builtInRegistryHolder
net/minecraft/world/item/enchantment/Enchantments net/minecraft/world/item/enchantment/Enchantments
	A FLAMING_ARROWS
	B INFINITY_ARROWS
	C FISHING_LUCK
	D FISHING_SPEED
	E LOYALTY
	F IMPALING
	G RIPTIDE
	H CHANNELING
	I MULTISHOT
	J QUICK_CHARGE
	K PIERCING
	L MENDING
	M VANISHING_CURSE
	N ARMOR_SLOTS
	a ALL_DAMAGE_PROTECTION
	b FIRE_PROTECTION
	c FALL_PROTECTION
	d BLAST_PROTECTION
	e PROJECTILE_PROTECTION
	f RESPIRATION
	g AQUA_AFFINITY
	h THORNS
	i DEPTH_STRIDER
	j FROST_WALKER
	k BINDING_CURSE
	l SOUL_SPEED
	m SWIFT_SNEAK
	n SHARPNESS
	o SMITE
	p BANE_OF_ARTHROPODS
	q KNOCKBACK
	r FIRE_ASPECT
	s MOB_LOOTING
	t SWEEPING_EDGE
	u BLOCK_EFFICIENCY
	v SILK_TOUCH
	w UNBREAKING
	x BLOCK_FORTUNE
	y POWER_ARROWS
	z PUNCH_ARROWS
	a (Ljava/lang/String;Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/item/enchantment/Enchantment; register
net/minecraft/world/level/ClipBlockStateContext net/minecraft/world/level/ClipBlockStateContext
	a from
	b to
	c block
	a ()Lnet/minecraft/world/phys/Vec3D; getTo
	b ()Lnet/minecraft/world/phys/Vec3D; getFrom
	c ()Ljava/util/function/Predicate; isTargetBlock
net/minecraft/world/level/Explosion net/minecraft/world/level/Explosion
	a EXPLOSION_DAMAGE_CALCULATOR
	b MAX_DROPS_PER_COMBINED_STACK
	c fire
	d blockInteraction
	e random
	f level
	g x
	h y
	i z
	j source
	k radius
	l damageSource
	m damageCalculator
	n toBlow
	o hitPlayers
	a ()V explode
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)V addBlockDrops
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/ExplosionDamageCalculator; makeDamageCalculator
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/Entity;)F getSeenPercent
	a (Z)V finalizeExplosion
	b ()Z interactsWithBlocks
	c ()Lnet/minecraft/world/damagesource/DamageSource; getDamageSource
	d ()Ljava/util/Map; getHitPlayers
	e ()Lnet/minecraft/world/entity/EntityLiving; getIndirectSourceEntity
	f ()Lnet/minecraft/world/entity/Entity; getDirectSourceEntity
	g ()V clearToBlow
	h ()Ljava/util/List; getToBlow
net/minecraft/world/level/FoliageColor net/minecraft/world/level/FoliageColor
	a pixels
	a ()I getEvergreenColor
	a (DD)I get
	a ([I)V init
	b ()I getBirchColor
	c ()I getDefaultColor
	d ()I getMangroveColor
net/minecraft/world/level/GameRules net/minecraft/world/level/GameRules
	A RULE_DOINSOMNIA
	B RULE_DO_IMMEDIATE_RESPAWN
	C RULE_DROWNING_DAMAGE
	D RULE_FALL_DAMAGE
	E RULE_FIRE_DAMAGE
	F RULE_FREEZE_DAMAGE
	G RULE_DO_PATROL_SPAWNING
	H RULE_DO_TRADER_SPAWNING
	I RULE_DO_WARDEN_SPAWNING
	J RULE_FORGIVE_DEAD_PLAYERS
	K RULE_UNIVERSAL_ANGER
	L RULE_PLAYERS_SLEEPING_PERCENTAGE
	M RULE_BLOCK_EXPLOSION_DROP_DECAY
	N RULE_MOB_EXPLOSION_DROP_DECAY
	O RULE_TNT_EXPLOSION_DROP_DECAY
	P RULE_SNOW_ACCUMULATION_HEIGHT
	Q RULE_WATER_SOURCE_CONVERSION
	R RULE_LAVA_SOURCE_CONVERSION
	S RULE_GLOBAL_SOUND_EVENTS
	T RULE_DO_VINES_SPREAD
	U RULE_ENDER_PEARLS_VANISH_ON_DEATH
	V LOGGER
	W GAME_RULE_TYPES
	X rules
	a DEFAULT_RANDOM_TICK_SPEED
	b RULE_DOFIRETICK
	c RULE_MOBGRIEFING
	d RULE_KEEPINVENTORY
	e RULE_DOMOBSPAWNING
	f RULE_DOMOBLOOT
	g RULE_DOBLOCKDROPS
	h RULE_DOENTITYDROPS
	i RULE_COMMANDBLOCKOUTPUT
	j RULE_NATURAL_REGENERATION
	k RULE_DAYLIGHT
	l RULE_LOGADMINCOMMANDS
	m RULE_SHOWDEATHMESSAGES
	n RULE_RANDOMTICKING
	o RULE_SENDCOMMANDFEEDBACK
	p RULE_REDUCEDDEBUGINFO
	q RULE_SPECTATORSGENERATECHUNKS
	r RULE_SPAWN_RADIUS
	s RULE_DISABLE_ELYTRA_MOVEMENT_CHECK
	t RULE_MAX_ENTITY_CRAMMING
	u RULE_WEATHER_CYCLE
	v RULE_LIMITED_CRAFTING
	w RULE_MAX_COMMAND_CHAIN_LENGTH
	x RULE_COMMAND_MODIFICATION_BLOCK_LIMIT
	y RULE_ANNOUNCE_ADVANCEMENTS
	z RULE_DISABLE_RAIDS
	a ()Lnet/minecraft/nbt/NBTTagCompound; createTag
	a (Lcom/mojang/serialization/DynamicLike;)V loadFromTag
	a (Ljava/lang/String;Lnet/minecraft/world/level/GameRules$GameRuleCategory;Lnet/minecraft/world/level/GameRules$GameRuleDefinition;)Lnet/minecraft/world/level/GameRules$GameRuleKey; register
	a (Lnet/minecraft/world/level/GameRules$GameRuleKey;)Lnet/minecraft/world/level/GameRules$GameRuleValue; getRule
	a (Lnet/minecraft/world/level/GameRules$GameRuleKey;Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V assignCap
	a (Lnet/minecraft/world/level/GameRules$GameRuleVisitor;)V visitGameRuleTypes
	a (Lnet/minecraft/world/level/GameRules$GameRuleVisitor;Lnet/minecraft/world/level/GameRules$GameRuleKey;Lnet/minecraft/world/level/GameRules$GameRuleDefinition;)V callVisitorCap
	a (Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V assignFrom
	b ()Lnet/minecraft/world/level/GameRules; copy
	b (Lnet/minecraft/world/level/GameRules$GameRuleKey;)Z getBoolean
	c (Lnet/minecraft/world/level/GameRules$GameRuleKey;)I getInt
net/minecraft/world/level/GrassColor net/minecraft/world/level/GrassColor
	a pixels
	a ()I getDefaultColor
	a (DD)I get
	a ([I)V init
net/minecraft/world/level/LocalMobCapCalculator net/minecraft/world/level/LocalMobCapCalculator
	a playersNearChunk
	b playerMobCounts
	c chunkMap
	a (Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/world/level/ChunkCoordIntPair;)Z canSpawn
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/List; getPlayersNear
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/entity/EnumCreatureType;)V addMob
net/minecraft/world/level/SignalGetter net/minecraft/world/level/SignalGetter
	C DIRECTIONS
	B (Lnet/minecraft/core/BlockPosition;)Z hasNeighborSignal
	C (Lnet/minecraft/core/BlockPosition;)I getBestNeighborSignal
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Z)I getControlInputSignal
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z hasSignal
	c (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	e_ (Lnet/minecraft/core/BlockPosition;)I getDirectSignalTo
net/minecraft/world/level/StructureManager net/minecraft/world/level/StructureManager
	a level
	b worldOptions
	c structureCheck
	a ()Z shouldGenerateStructures
	a (Lnet/minecraft/core/BlockPosition;)Z hasAnyStructureAt
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStructureWithPieceAt
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStructureWithPieceAt
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStructureAt
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)Z structureHasPieceAt
	a (Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/levelgen/structure/Structure;)Ljava/util/List; startsForStructure
	a (Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/levelgen/structure/Structure;JLnet/minecraft/world/level/chunk/StructureAccess;)V addReferenceForStructure
	a (Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/chunk/StructureAccess;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStartForStructure
	a (Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;Lnet/minecraft/world/level/chunk/StructureAccess;)V setStartForStructure
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;)Lnet/minecraft/world/level/StructureManager; forWorldGenRegion
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Ljava/util/function/Predicate;)Ljava/util/List; startsForStructure
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; checkStructurePresence
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;Lit/unimi/dsi/fastutil/longs/LongSet;Ljava/util/function/Consumer;)V fillStartsForStructure
	a (Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V addReference
	b ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	b (Lnet/minecraft/core/BlockPosition;)Ljava/util/Map; getAllStructuresAt
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStructureWithPieceAt
net/minecraft/world/level/WorldDataConfiguration net/minecraft/world/level/WorldDataConfiguration
	a ENABLED_FEATURES_ID
	b CODEC
	c DEFAULT
	d dataPacks
	e enabledFeatures
	a ()Lnet/minecraft/world/level/DataPackConfiguration; dataPacks
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/world/level/WorldDataConfiguration; expandFeatures
	b ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
net/minecraft/world/level/biome/BiomeManager net/minecraft/world/level/biome/BiomeManager
	a CHUNK_CENTER_QUART
	b ZOOM_BITS
	c ZOOM
	d ZOOM_MASK
	e noiseBiomeSource
	f biomeZoomSeed
	a (DDD)Lnet/minecraft/core/Holder; getNoiseBiomeAtPosition
	a (III)Lnet/minecraft/core/Holder; getNoiseBiomeAtQuart
	a (J)J obfuscateSeed
	a (JIIIDDD)D getFiddledDistance
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/Holder; getBiome
	a (Lnet/minecraft/world/level/biome/BiomeManager$Provider;)Lnet/minecraft/world/level/biome/BiomeManager; withDifferentSource
	b (J)D getFiddle
	b (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/Holder; getNoiseBiomeAtPosition
net/minecraft/world/level/biome/Biomes net/minecraft/world/level/biome/Biomes
	A BADLANDS
	B ERODED_BADLANDS
	C WOODED_BADLANDS
	D MEADOW
	E CHERRY_GROVE
	F GROVE
	G SNOWY_SLOPES
	H FROZEN_PEAKS
	I JAGGED_PEAKS
	J STONY_PEAKS
	K RIVER
	L FROZEN_RIVER
	M BEACH
	N SNOWY_BEACH
	O STONY_SHORE
	P WARM_OCEAN
	Q LUKEWARM_OCEAN
	R DEEP_LUKEWARM_OCEAN
	S OCEAN
	T DEEP_OCEAN
	U COLD_OCEAN
	V DEEP_COLD_OCEAN
	W FROZEN_OCEAN
	X DEEP_FROZEN_OCEAN
	Y MUSHROOM_FIELDS
	Z DRIPSTONE_CAVES
	a THE_VOID
	aa LUSH_CAVES
	ab DEEP_DARK
	ac NETHER_WASTES
	ad WARPED_FOREST
	ae CRIMSON_FOREST
	af SOUL_SAND_VALLEY
	ag BASALT_DELTAS
	ah THE_END
	ai END_HIGHLANDS
	aj END_MIDLANDS
	ak SMALL_END_ISLANDS
	al END_BARRENS
	b PLAINS
	c SUNFLOWER_PLAINS
	d SNOWY_PLAINS
	e ICE_SPIKES
	f DESERT
	g SWAMP
	h MANGROVE_SWAMP
	i FOREST
	j FLOWER_FOREST
	k BIRCH_FOREST
	l DARK_FOREST
	m OLD_GROWTH_BIRCH_FOREST
	n OLD_GROWTH_PINE_TAIGA
	o OLD_GROWTH_SPRUCE_TAIGA
	p TAIGA
	q SNOWY_TAIGA
	r SAVANNA
	s SAVANNA_PLATEAU
	t WINDSWEPT_HILLS
	u WINDSWEPT_GRAVELLY_HILLS
	v WINDSWEPT_FOREST
	w WINDSWEPT_SAVANNA
	x JUNGLE
	y SPARSE_JUNGLE
	z BAMBOO_JUNGLE
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; register
net/minecraft/world/level/biome/Climate$Sampler net/minecraft/world/level/biome/Climate$Sampler
	a temperature
	b humidity
	c continentalness
	d erosion
	e depth
	f weirdness
	g spawnTarget
	a ()Lnet/minecraft/core/BlockPosition; findSpawnPosition
	a (III)Lcrc$h; sample
	b ()Lnet/minecraft/world/level/levelgen/DensityFunction; temperature
	c ()Lnet/minecraft/world/level/levelgen/DensityFunction; humidity
	d ()Lnet/minecraft/world/level/levelgen/DensityFunction; continentalness
	e ()Lnet/minecraft/world/level/levelgen/DensityFunction; erosion
	f ()Lnet/minecraft/world/level/levelgen/DensityFunction; depth
	g ()Lnet/minecraft/world/level/levelgen/DensityFunction; weirdness
	h ()Ljava/util/List; spawnTarget
net/minecraft/world/level/biome/Climate net/minecraft/world/level/biome/Climate
	a PARAMETER_COUNT
	b DEBUG_SLOW_BIOME_SEARCH
	c QUANTIZATION_FACTOR
	a ()Lnet/minecraft/world/level/biome/Climate$Sampler; empty
	a (F)J quantizeCoord
	a (FFFFFF)Lcrc$h; target
	a (FFFFFFF)Lcrc$d; parameters
	a (J)F unquantizeCoord
	a (Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;F)Lcrc$d; parameters
	a (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;)Lnet/minecraft/core/BlockPosition; findSpawnPosition
net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList
	a DIRECT_CODEC
	b CODEC
	c preset
	d parameters
	a ()Lcrc$c; parameters
	b ()Ljava/util/Map; knownPresets
net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterLists net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterLists
	a NETHER
	b OVERWORLD
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; register
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/world/level/biome/OverworldBiomeBuilder net/minecraft/world/level/biome/OverworldBiomeBuilder
	A midInlandContinentalness
	B farInlandContinentalness
	C OCEANS
	D MIDDLE_BIOMES
	E MIDDLE_BIOMES_VARIANT
	F PLATEAU_BIOMES
	G PLATEAU_BIOMES_VARIANT
	H SHATTERED_BIOMES
	a HIGH_START
	b PEAK_START
	c NEAR_INLAND_START
	d MID_INLAND_START
	e FAR_INLAND_START
	f EROSION_INDEX_1_START
	g EROSION_INDEX_2_START
	h VALLEY_SIZE
	i LOW_START
	j HIGH_END
	k PEAK_SIZE
	l PEAK_END
	m EROSION_DEEP_DARK_DRYNESS_THRESHOLD
	n DEPTH_DEEP_DARK_DRYNESS_THRESHOLD
	o FULL_RANGE
	p temperatures
	q humidities
	r erosions
	s FROZEN_RANGE
	t UNFROZEN_RANGE
	u mushroomFieldsContinentalness
	v deepOceanContinentalness
	w oceanContinentalness
	x coastContinentalness
	y inlandContinentalness
	z nearInlandContinentalness
	a ()Ljava/util/List; spawnTarget
	a (D)Ljava/lang/String; getDebugStringForPeaksAndValleys
	a (D[Lcrc$b;)Ljava/lang/String; getDebugStringForNoiseValue
	a (II)Lnet/minecraft/resources/ResourceKey; pickBeachBiome
	a (IILcrc$b;)Lnet/minecraft/resources/ResourceKey; pickMiddleBiome
	a (IILcrc$b;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; maybePickWindsweptSavannaBiome
	a (ILcrc$b;)Lnet/minecraft/resources/ResourceKey; pickBadlandsBiome
	a (Ljava/util/function/Consumer;)V addBiomes
	a (Ljava/util/function/Consumer;Lcrc$b;)V addPeaks
	a (Ljava/util/function/Consumer;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;FLnet/minecraft/resources/ResourceKey;)V addSurfaceBiome
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Ldkl$b;)Z isDeepDarkRegion
	b ()[Lcrc$b; getTemperatureThresholds
	b (D)Ljava/lang/String; getDebugStringForContinentalness
	b (IILcrc$b;)Lnet/minecraft/resources/ResourceKey; pickMiddleBiomeOrBadlandsIfHot
	b (Ljava/util/function/Consumer;)V addDebugBiomes
	b (Ljava/util/function/Consumer;Lcrc$b;)V addHighSlice
	b (Ljava/util/function/Consumer;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;FLnet/minecraft/resources/ResourceKey;)V addUndergroundBiome
	c ()[Lcrc$b; getHumidityThresholds
	c (D)Ljava/lang/String; getDebugStringForErosion
	c (IILcrc$b;)Lnet/minecraft/resources/ResourceKey; pickMiddleBiomeOrBadlandsIfHotOrSlopeIfCold
	c (Ljava/util/function/Consumer;)V addOffCoastBiomes
	c (Ljava/util/function/Consumer;Lcrc$b;)V addMidSlice
	c (Ljava/util/function/Consumer;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;FLnet/minecraft/resources/ResourceKey;)V addBottomBiome
	d ()[Lcrc$b; getErosionThresholds
	d (D)Ljava/lang/String; getDebugStringForTemperature
	d (IILcrc$b;)Lnet/minecraft/resources/ResourceKey; pickShatteredCoastBiome
	d (Ljava/util/function/Consumer;)V addInlandBiomes
	d (Ljava/util/function/Consumer;Lcrc$b;)V addLowSlice
	e ()[Lcrc$b; getContinentalnessThresholds
	e (D)Ljava/lang/String; getDebugStringForHumidity
	e (IILcrc$b;)Lnet/minecraft/resources/ResourceKey; pickPlateauBiome
	e (Ljava/util/function/Consumer;)V addUndergroundBiomes
	e (Ljava/util/function/Consumer;Lcrc$b;)V addValleys
	f ()[Lcrc$b; getPeaksAndValleysThresholds
	f (IILcrc$b;)Lnet/minecraft/resources/ResourceKey; pickPeakBiome
	g ()[Lcrc$b; getWeirdnessThresholds
	g (IILcrc$b;)Lnet/minecraft/resources/ResourceKey; pickSlopeBiome
	h (IILcrc$b;)Lnet/minecraft/resources/ResourceKey; pickShatteredBiome
net/minecraft/world/level/block/AbstractCandleBlock net/minecraft/world/level/block/AbstractCandleBlock
	a LIGHT_PER_CANDLE
	b LIT
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V extinguish
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Z)V setLit
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/util/RandomSource;)V addParticlesAndSound
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/lang/Iterable; getParticleOffsets
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z isLit
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Z canBeLit
net/minecraft/world/level/block/AbstractCauldronBlock net/minecraft/world/level/block/AbstractCauldronBlock
	a FLOOR_LEVEL
	b SHAPE
	c SIDE_THICKNESS
	d LEG_WIDTH
	e LEG_HEIGHT
	f LEG_DEPTH
	g INSIDE
	h interactions
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)Z isEntityInsideContent
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getInteractionShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;)V receiveStalactiteDrip
	a (Lnet/minecraft/world/level/material/FluidType;)Z canReceiveStalactiteDrip
	b (Lnet/minecraft/world/level/block/state/IBlockData;)D getContentHeight
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Z isFull
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/AmethystClusterBlock net/minecraft/world/level/block/AmethystClusterBlock
	a WATERLOGGED
	b FACING
	c northAabb
	d southAabb
	e eastAabb
	f westAabb
	g upAabb
	h downAabb
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/AzaleaBlock net/minecraft/world/level/block/AzaleaBlock
	a TREE_GROWER
	b SHAPE
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BigDripleafBlock net/minecraft/world/level/block/BigDripleafBlock
	a WATERLOGGED
	b TILT
	c NO_TICK
	d DELAY_UNTIL_NEXT_TILT_STATE
	e MAX_GEN_HEIGHT
	f STEM_WIDTH
	g ENTITY_DETECTION_MIN_Y
	h LOWEST_LEAF_TOP
	i LEAF_SHAPES
	j STEM_SLICER
	k STEM_SHAPES
	l shapesCache
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)Z canEntityTilt
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/EnumDirection;)Z place
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)V placeWithRandomHeight
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canPlaceAt
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;)V playTiltSound
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/properties/Tilt;)V setTilt
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/properties/Tilt;Lnet/minecraft/sounds/SoundEffect;)V setTiltAndScheduleTick
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V resetTilt
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; calculateShape
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z canReplace
net/minecraft/world/level/block/BigDripleafStemBlock net/minecraft/world/level/block/BigDripleafStemBlock
	a NORTH_SHAPE
	b SOUTH_SHAPE
	c EAST_SHAPE
	d WEST_SHAPE
	e WATERLOGGED
	f STEM_WIDTH
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/EnumDirection;)Z place
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/Block net/minecraft/world/level/block/Block
	A INSTANT
	B UPDATE_LIMIT
	C stateDefinition
	a LOGGER
	b builtInRegistryHolder
	c SHAPE_FULL_BLOCK_CACHE
	d defaultBlockState
	e descriptionId
	f item
	g CACHE_SIZE
	h OCCLUSION_CACHE
	o BLOCK_STATE_REGISTRY
	p UPDATE_NEIGHBORS
	q UPDATE_CLIENTS
	r UPDATE_INVISIBLE
	s UPDATE_IMMEDIATE
	t UPDATE_KNOWN_SHAPE
	u UPDATE_SUPPRESS_DROPS
	v UPDATE_MOVE_BY_PISTON
	w UPDATE_NONE
	x UPDATE_ALL
	y UPDATE_ALL_IMMEDIATE
	z INDESTRUCTIBLE
	a (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; box
	a (I)Lnet/minecraft/world/level/block/state/IBlockData; stateById
	a (Ldfk$a;)V createBlockStateDefinition
	a (Ljava/util/function/Function;)Lcom/google/common/collect/ImmutableMap; getShapeForEachState
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;I)V popExperience
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/util/valueproviders/IntProvider;)V tryDropExperience
	a (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/block/Block; byItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/IBlockAccess;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/Explosion;)Z dropFromExplosion
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V destroy
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/entity/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canSupportCenter
	a (Lnet/minecraft/world/level/World;Ljava/util/function/Supplier;Lnet/minecraft/world/item/ItemStack;)V popResource
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/item/ItemStack;)V popResourceFromFace
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;)V popResource
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/Explosion;)V wasExploded
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V spawnDestroyParticles
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/item/ItemStack;)V playerDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isPossibleToRespawnInThis
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntity;)Ljava/util/List; getDrops
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; getDrops
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntity;)V dropResources
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/BlockPosition;)Z shouldRenderFace
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/biome/BiomeBase$Precipitation;)V handlePrecipitation
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)V dropResources
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; pushEntitiesUp
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;I)V updateOrDestroy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;II)V updateOrDestroy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Lnet/minecraft/world/level/block/state/IBlockData; copyProperty
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;)Z isShapeFullBlock
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/EnumDirection;)Z isFaceFull
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateFromNeighbourShapes
	c (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z canSupportRigidBlock
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V dropResources
	d ()F getExplosionResistance
	e ()Lnet/minecraft/network/chat/IChatMutableComponent; getName
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	f ()Ljava/lang/String; getDescriptionId
	h ()F getFriction
	i ()F getSpeedFactor
	i (Lnet/minecraft/world/level/block/state/IBlockData;)I getId
	j ()F getJumpFactor
	j (Lnet/minecraft/world/level/block/state/IBlockData;)Z isExceptionForConnection
	k ()Lnet/minecraft/world/item/Item; asItem
	k (Lnet/minecraft/world/level/block/state/IBlockData;)V registerDefaultState
	l ()Lnet/minecraft/world/level/block/state/BlockStateList; getStateDefinition
	l (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; withPropertiesOf
	m (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/SoundEffectType; getSoundType
	n ()Lnet/minecraft/world/level/block/state/IBlockData; defaultBlockState
	o ()Z hasDynamicShape
	p ()Lnet/minecraft/world/level/block/Block; asBlock
	q ()Lhe$c; builtInRegistryHolder
net/minecraft/world/level/block/Blocks net/minecraft/world/level/block/Blocks
	A JUNGLE_SAPLING
	B ACACIA_SAPLING
	C CHERRY_SAPLING
	D DARK_OAK_SAPLING
	E MANGROVE_PROPAGULE
	F BEDROCK
	G WATER
	H LAVA
	I SAND
	J SUSPICIOUS_SAND
	K RED_SAND
	L GRAVEL
	M SUSPICIOUS_GRAVEL
	N GOLD_ORE
	O DEEPSLATE_GOLD_ORE
	P IRON_ORE
	Q DEEPSLATE_IRON_ORE
	R COAL_ORE
	S DEEPSLATE_COAL_ORE
	T NETHER_GOLD_ORE
	U OAK_LOG
	V SPRUCE_LOG
	W BIRCH_LOG
	X JUNGLE_LOG
	Y ACACIA_LOG
	Z CHERRY_LOG
	a AIR
	aA STRIPPED_ACACIA_WOOD
	aB STRIPPED_CHERRY_WOOD
	aC STRIPPED_DARK_OAK_WOOD
	aD STRIPPED_MANGROVE_WOOD
	aE OAK_LEAVES
	aF SPRUCE_LEAVES
	aG BIRCH_LEAVES
	aH JUNGLE_LEAVES
	aI ACACIA_LEAVES
	aJ CHERRY_LEAVES
	aK DARK_OAK_LEAVES
	aL MANGROVE_LEAVES
	aM AZALEA_LEAVES
	aN FLOWERING_AZALEA_LEAVES
	aO SPONGE
	aP WET_SPONGE
	aQ GLASS
	aR LAPIS_ORE
	aS DEEPSLATE_LAPIS_ORE
	aT LAPIS_BLOCK
	aU DISPENSER
	aV SANDSTONE
	aW CHISELED_SANDSTONE
	aX CUT_SANDSTONE
	aY NOTE_BLOCK
	aZ WHITE_BED
	aa DARK_OAK_LOG
	ab MANGROVE_LOG
	ac MANGROVE_ROOTS
	ad MUDDY_MANGROVE_ROOTS
	ae BAMBOO_BLOCK
	af STRIPPED_SPRUCE_LOG
	ag STRIPPED_BIRCH_LOG
	ah STRIPPED_JUNGLE_LOG
	ai STRIPPED_ACACIA_LOG
	aj STRIPPED_CHERRY_LOG
	ak STRIPPED_DARK_OAK_LOG
	al STRIPPED_OAK_LOG
	am STRIPPED_MANGROVE_LOG
	an STRIPPED_BAMBOO_BLOCK
	ao OAK_WOOD
	ap SPRUCE_WOOD
	aq BIRCH_WOOD
	ar JUNGLE_WOOD
	as ACACIA_WOOD
	at CHERRY_WOOD
	au DARK_OAK_WOOD
	av MANGROVE_WOOD
	aw STRIPPED_OAK_WOOD
	ax STRIPPED_SPRUCE_WOOD
	ay STRIPPED_BIRCH_WOOD
	az STRIPPED_JUNGLE_WOOD
	b STONE
	bA WHITE_WOOL
	bB ORANGE_WOOL
	bC MAGENTA_WOOL
	bD LIGHT_BLUE_WOOL
	bE YELLOW_WOOL
	bF LIME_WOOL
	bG PINK_WOOL
	bH GRAY_WOOL
	bI LIGHT_GRAY_WOOL
	bJ CYAN_WOOL
	bK PURPLE_WOOL
	bL BLUE_WOOL
	bM BROWN_WOOL
	bN GREEN_WOOL
	bO RED_WOOL
	bP BLACK_WOOL
	bQ MOVING_PISTON
	bR DANDELION
	bS TORCHFLOWER
	bT POPPY
	bU BLUE_ORCHID
	bV ALLIUM
	bW AZURE_BLUET
	bX RED_TULIP
	bY ORANGE_TULIP
	bZ WHITE_TULIP
	ba ORANGE_BED
	bb MAGENTA_BED
	bc LIGHT_BLUE_BED
	bd YELLOW_BED
	be LIME_BED
	bf PINK_BED
	bg GRAY_BED
	bh LIGHT_GRAY_BED
	bi CYAN_BED
	bj PURPLE_BED
	bk BLUE_BED
	bl BROWN_BED
	bm GREEN_BED
	bn RED_BED
	bo BLACK_BED
	bp POWERED_RAIL
	bq DETECTOR_RAIL
	br STICKY_PISTON
	bs COBWEB
	bt GRASS
	bu FERN
	bv DEAD_BUSH
	bw SEAGRASS
	bx TALL_SEAGRASS
	by PISTON
	bz PISTON_HEAD
	c GRANITE
	cA CRAFTING_TABLE
	cB WHEAT
	cC FARMLAND
	cD FURNACE
	cE OAK_SIGN
	cF SPRUCE_SIGN
	cG BIRCH_SIGN
	cH ACACIA_SIGN
	cI CHERRY_SIGN
	cJ JUNGLE_SIGN
	cK DARK_OAK_SIGN
	cL MANGROVE_SIGN
	cM BAMBOO_SIGN
	cN OAK_DOOR
	cO LADDER
	cP RAIL
	cQ COBBLESTONE_STAIRS
	cR OAK_WALL_SIGN
	cS SPRUCE_WALL_SIGN
	cT BIRCH_WALL_SIGN
	cU ACACIA_WALL_SIGN
	cV CHERRY_WALL_SIGN
	cW JUNGLE_WALL_SIGN
	cX DARK_OAK_WALL_SIGN
	cY MANGROVE_WALL_SIGN
	cZ BAMBOO_WALL_SIGN
	ca PINK_TULIP
	cb OXEYE_DAISY
	cc CORNFLOWER
	cd WITHER_ROSE
	ce LILY_OF_THE_VALLEY
	cf BROWN_MUSHROOM
	cg RED_MUSHROOM
	ch GOLD_BLOCK
	ci IRON_BLOCK
	cj BRICKS
	ck TNT
	cl BOOKSHELF
	cm CHISELED_BOOKSHELF
	cn MOSSY_COBBLESTONE
	co OBSIDIAN
	cp TORCH
	cq WALL_TORCH
	cr FIRE
	cs SOUL_FIRE
	ct SPAWNER
	cu OAK_STAIRS
	cv CHEST
	cw REDSTONE_WIRE
	cx DIAMOND_ORE
	cy DEEPSLATE_DIAMOND_ORE
	cz DIAMOND_BLOCK
	d POLISHED_GRANITE
	dA SPRUCE_PRESSURE_PLATE
	dB BIRCH_PRESSURE_PLATE
	dC JUNGLE_PRESSURE_PLATE
	dD ACACIA_PRESSURE_PLATE
	dE CHERRY_PRESSURE_PLATE
	dF DARK_OAK_PRESSURE_PLATE
	dG MANGROVE_PRESSURE_PLATE
	dH BAMBOO_PRESSURE_PLATE
	dI REDSTONE_ORE
	dJ DEEPSLATE_REDSTONE_ORE
	dK REDSTONE_TORCH
	dL REDSTONE_WALL_TORCH
	dM STONE_BUTTON
	dN SNOW
	dO ICE
	dP SNOW_BLOCK
	dQ CACTUS
	dR CLAY
	dS SUGAR_CANE
	dT JUKEBOX
	dU OAK_FENCE
	dV PUMPKIN
	dW NETHERRACK
	dX SOUL_SAND
	dY SOUL_SOIL
	dZ BASALT
	da OAK_HANGING_SIGN
	db SPRUCE_HANGING_SIGN
	dc BIRCH_HANGING_SIGN
	dd ACACIA_HANGING_SIGN
	de CHERRY_HANGING_SIGN
	df JUNGLE_HANGING_SIGN
	dg DARK_OAK_HANGING_SIGN
	dh CRIMSON_HANGING_SIGN
	di WARPED_HANGING_SIGN
	dj MANGROVE_HANGING_SIGN
	dk BAMBOO_HANGING_SIGN
	dl OAK_WALL_HANGING_SIGN
	dm SPRUCE_WALL_HANGING_SIGN
	dn BIRCH_WALL_HANGING_SIGN
	do ACACIA_WALL_HANGING_SIGN
	dp CHERRY_WALL_HANGING_SIGN
	dq JUNGLE_WALL_HANGING_SIGN
	dr DARK_OAK_WALL_HANGING_SIGN
	ds MANGROVE_WALL_HANGING_SIGN
	dt CRIMSON_WALL_HANGING_SIGN
	du WARPED_WALL_HANGING_SIGN
	dv BAMBOO_WALL_HANGING_SIGN
	dw LEVER
	dx STONE_PRESSURE_PLATE
	dy IRON_DOOR
	dz OAK_PRESSURE_PLATE
	e DIORITE
	eA SPRUCE_TRAPDOOR
	eB BIRCH_TRAPDOOR
	eC JUNGLE_TRAPDOOR
	eD ACACIA_TRAPDOOR
	eE CHERRY_TRAPDOOR
	eF DARK_OAK_TRAPDOOR
	eG MANGROVE_TRAPDOOR
	eH BAMBOO_TRAPDOOR
	eI STONE_BRICKS
	eJ MOSSY_STONE_BRICKS
	eK CRACKED_STONE_BRICKS
	eL CHISELED_STONE_BRICKS
	eM PACKED_MUD
	eN MUD_BRICKS
	eO INFESTED_STONE
	eP INFESTED_COBBLESTONE
	eQ INFESTED_STONE_BRICKS
	eR INFESTED_MOSSY_STONE_BRICKS
	eS INFESTED_CRACKED_STONE_BRICKS
	eT INFESTED_CHISELED_STONE_BRICKS
	eU BROWN_MUSHROOM_BLOCK
	eV RED_MUSHROOM_BLOCK
	eW MUSHROOM_STEM
	eX IRON_BARS
	eY CHAIN
	eZ GLASS_PANE
	ea POLISHED_BASALT
	eb SOUL_TORCH
	ec SOUL_WALL_TORCH
	ed GLOWSTONE
	ee NETHER_PORTAL
	ef CARVED_PUMPKIN
	eg JACK_O_LANTERN
	eh CAKE
	ei REPEATER
	ej WHITE_STAINED_GLASS
	ek ORANGE_STAINED_GLASS
	el MAGENTA_STAINED_GLASS
	em LIGHT_BLUE_STAINED_GLASS
	en YELLOW_STAINED_GLASS
	eo LIME_STAINED_GLASS
	ep PINK_STAINED_GLASS
	eq GRAY_STAINED_GLASS
	er LIGHT_GRAY_STAINED_GLASS
	es CYAN_STAINED_GLASS
	et PURPLE_STAINED_GLASS
	eu BLUE_STAINED_GLASS
	ev BROWN_STAINED_GLASS
	ew GREEN_STAINED_GLASS
	ex RED_STAINED_GLASS
	ey BLACK_STAINED_GLASS
	ez OAK_TRAPDOOR
	f POLISHED_DIORITE
	fA DRAGON_EGG
	fB REDSTONE_LAMP
	fC COCOA
	fD SANDSTONE_STAIRS
	fE EMERALD_ORE
	fF DEEPSLATE_EMERALD_ORE
	fG ENDER_CHEST
	fH TRIPWIRE_HOOK
	fI TRIPWIRE
	fJ EMERALD_BLOCK
	fK SPRUCE_STAIRS
	fL BIRCH_STAIRS
	fM JUNGLE_STAIRS
	fN COMMAND_BLOCK
	fO BEACON
	fP COBBLESTONE_WALL
	fQ MOSSY_COBBLESTONE_WALL
	fR FLOWER_POT
	fS POTTED_TORCHFLOWER
	fT POTTED_OAK_SAPLING
	fU POTTED_SPRUCE_SAPLING
	fV POTTED_BIRCH_SAPLING
	fW POTTED_JUNGLE_SAPLING
	fX POTTED_ACACIA_SAPLING
	fY POTTED_CHERRY_SAPLING
	fZ POTTED_DARK_OAK_SAPLING
	fa MELON
	fb ATTACHED_PUMPKIN_STEM
	fc ATTACHED_MELON_STEM
	fd PUMPKIN_STEM
	fe MELON_STEM
	ff VINE
	fg GLOW_LICHEN
	fh OAK_FENCE_GATE
	fi BRICK_STAIRS
	fj STONE_BRICK_STAIRS
	fk MUD_BRICK_STAIRS
	fl MYCELIUM
	fm LILY_PAD
	fn NETHER_BRICKS
	fo NETHER_BRICK_FENCE
	fp NETHER_BRICK_STAIRS
	fq NETHER_WART
	fr ENCHANTING_TABLE
	fs BREWING_STAND
	ft CAULDRON
	fu WATER_CAULDRON
	fv LAVA_CAULDRON
	fw POWDER_SNOW_CAULDRON
	fx END_PORTAL
	fy END_PORTAL_FRAME
	fz END_STONE
	g ANDESITE
	gA CHERRY_BUTTON
	gB DARK_OAK_BUTTON
	gC MANGROVE_BUTTON
	gD BAMBOO_BUTTON
	gE SKELETON_SKULL
	gF SKELETON_WALL_SKULL
	gG WITHER_SKELETON_SKULL
	gH WITHER_SKELETON_WALL_SKULL
	gI ZOMBIE_HEAD
	gJ ZOMBIE_WALL_HEAD
	gK PLAYER_HEAD
	gL PLAYER_WALL_HEAD
	gM CREEPER_HEAD
	gN CREEPER_WALL_HEAD
	gO DRAGON_HEAD
	gP DRAGON_WALL_HEAD
	gQ PIGLIN_HEAD
	gR PIGLIN_WALL_HEAD
	gS ANVIL
	gT CHIPPED_ANVIL
	gU DAMAGED_ANVIL
	gV TRAPPED_CHEST
	gW LIGHT_WEIGHTED_PRESSURE_PLATE
	gX HEAVY_WEIGHTED_PRESSURE_PLATE
	gY COMPARATOR
	gZ DAYLIGHT_DETECTOR
	ga POTTED_MANGROVE_PROPAGULE
	gb POTTED_FERN
	gc POTTED_DANDELION
	gd POTTED_POPPY
	ge POTTED_BLUE_ORCHID
	gf POTTED_ALLIUM
	gg POTTED_AZURE_BLUET
	gh POTTED_RED_TULIP
	gi POTTED_ORANGE_TULIP
	gj POTTED_WHITE_TULIP
	gk POTTED_PINK_TULIP
	gl POTTED_OXEYE_DAISY
	gm POTTED_CORNFLOWER
	gn POTTED_LILY_OF_THE_VALLEY
	go POTTED_WITHER_ROSE
	gp POTTED_RED_MUSHROOM
	gq POTTED_BROWN_MUSHROOM
	gr POTTED_DEAD_BUSH
	gs POTTED_CACTUS
	gt CARROTS
	gu POTATOES
	gv OAK_BUTTON
	gw SPRUCE_BUTTON
	gx BIRCH_BUTTON
	gy JUNGLE_BUTTON
	gz ACACIA_BUTTON
	h POLISHED_ANDESITE
	hA ORANGE_STAINED_GLASS_PANE
	hB MAGENTA_STAINED_GLASS_PANE
	hC LIGHT_BLUE_STAINED_GLASS_PANE
	hD YELLOW_STAINED_GLASS_PANE
	hE LIME_STAINED_GLASS_PANE
	hF PINK_STAINED_GLASS_PANE
	hG GRAY_STAINED_GLASS_PANE
	hH LIGHT_GRAY_STAINED_GLASS_PANE
	hI CYAN_STAINED_GLASS_PANE
	hJ PURPLE_STAINED_GLASS_PANE
	hK BLUE_STAINED_GLASS_PANE
	hL BROWN_STAINED_GLASS_PANE
	hM GREEN_STAINED_GLASS_PANE
	hN RED_STAINED_GLASS_PANE
	hO BLACK_STAINED_GLASS_PANE
	hP ACACIA_STAIRS
	hQ CHERRY_STAIRS
	hR DARK_OAK_STAIRS
	hS MANGROVE_STAIRS
	hT BAMBOO_STAIRS
	hU BAMBOO_MOSAIC_STAIRS
	hV SLIME_BLOCK
	hW BARRIER
	hX LIGHT
	hY IRON_TRAPDOOR
	hZ PRISMARINE
	ha REDSTONE_BLOCK
	hb NETHER_QUARTZ_ORE
	hc HOPPER
	hd QUARTZ_BLOCK
	he CHISELED_QUARTZ_BLOCK
	hf QUARTZ_PILLAR
	hg QUARTZ_STAIRS
	hh ACTIVATOR_RAIL
	hi DROPPER
	hj WHITE_TERRACOTTA
	hk ORANGE_TERRACOTTA
	hl MAGENTA_TERRACOTTA
	hm LIGHT_BLUE_TERRACOTTA
	hn YELLOW_TERRACOTTA
	ho LIME_TERRACOTTA
	hp PINK_TERRACOTTA
	hq GRAY_TERRACOTTA
	hr LIGHT_GRAY_TERRACOTTA
	hs CYAN_TERRACOTTA
	ht PURPLE_TERRACOTTA
	hu BLUE_TERRACOTTA
	hv BROWN_TERRACOTTA
	hw GREEN_TERRACOTTA
	hx RED_TERRACOTTA
	hy BLACK_TERRACOTTA
	hz WHITE_STAINED_GLASS_PANE
	i GRASS_BLOCK
	iA TERRACOTTA
	iB COAL_BLOCK
	iC PACKED_ICE
	iD SUNFLOWER
	iE LILAC
	iF ROSE_BUSH
	iG PEONY
	iH TALL_GRASS
	iI LARGE_FERN
	iJ WHITE_BANNER
	iK ORANGE_BANNER
	iL MAGENTA_BANNER
	iM LIGHT_BLUE_BANNER
	iN YELLOW_BANNER
	iO LIME_BANNER
	iP PINK_BANNER
	iQ GRAY_BANNER
	iR LIGHT_GRAY_BANNER
	iS CYAN_BANNER
	iT PURPLE_BANNER
	iU BLUE_BANNER
	iV BROWN_BANNER
	iW GREEN_BANNER
	iX RED_BANNER
	iY BLACK_BANNER
	iZ WHITE_WALL_BANNER
	ia PRISMARINE_BRICKS
	ib DARK_PRISMARINE
	ic PRISMARINE_STAIRS
	id PRISMARINE_BRICK_STAIRS
	ie DARK_PRISMARINE_STAIRS
	if PRISMARINE_SLAB
	ig PRISMARINE_BRICK_SLAB
	ih DARK_PRISMARINE_SLAB
	ii SEA_LANTERN
	ij HAY_BLOCK
	ik WHITE_CARPET
	il ORANGE_CARPET
	im MAGENTA_CARPET
	in LIGHT_BLUE_CARPET
	io YELLOW_CARPET
	ip LIME_CARPET
	iq PINK_CARPET
	ir GRAY_CARPET
	is LIGHT_GRAY_CARPET
	it CYAN_CARPET
	iu PURPLE_CARPET
	iv BLUE_CARPET
	iw BROWN_CARPET
	ix GREEN_CARPET
	iy RED_CARPET
	iz BLACK_CARPET
	j DIRT
	jA MANGROVE_SLAB
	jB BAMBOO_SLAB
	jC BAMBOO_MOSAIC_SLAB
	jD STONE_SLAB
	jE SMOOTH_STONE_SLAB
	jF SANDSTONE_SLAB
	jG CUT_SANDSTONE_SLAB
	jH PETRIFIED_OAK_SLAB
	jI COBBLESTONE_SLAB
	jJ BRICK_SLAB
	jK STONE_BRICK_SLAB
	jL MUD_BRICK_SLAB
	jM NETHER_BRICK_SLAB
	jN QUARTZ_SLAB
	jO RED_SANDSTONE_SLAB
	jP CUT_RED_SANDSTONE_SLAB
	jQ PURPUR_SLAB
	jR SMOOTH_STONE
	jS SMOOTH_SANDSTONE
	jT SMOOTH_QUARTZ
	jU SMOOTH_RED_SANDSTONE
	jV SPRUCE_FENCE_GATE
	jW BIRCH_FENCE_GATE
	jX JUNGLE_FENCE_GATE
	jY ACACIA_FENCE_GATE
	jZ CHERRY_FENCE_GATE
	ja ORANGE_WALL_BANNER
	jb MAGENTA_WALL_BANNER
	jc LIGHT_BLUE_WALL_BANNER
	jd YELLOW_WALL_BANNER
	je LIME_WALL_BANNER
	jf PINK_WALL_BANNER
	jg GRAY_WALL_BANNER
	jh LIGHT_GRAY_WALL_BANNER
	ji CYAN_WALL_BANNER
	jj PURPLE_WALL_BANNER
	jk BLUE_WALL_BANNER
	jl BROWN_WALL_BANNER
	jm GREEN_WALL_BANNER
	jn RED_WALL_BANNER
	jo BLACK_WALL_BANNER
	jp RED_SANDSTONE
	jq CHISELED_RED_SANDSTONE
	jr CUT_RED_SANDSTONE
	js RED_SANDSTONE_STAIRS
	jt OAK_SLAB
	ju SPRUCE_SLAB
	jv BIRCH_SLAB
	jw JUNGLE_SLAB
	jx ACACIA_SLAB
	jy CHERRY_SLAB
	jz DARK_OAK_SLAB
	k COARSE_DIRT
	kA TORCHFLOWER_CROP
	kB PITCHER_CROP
	kC PITCHER_PLANT
	kD BEETROOTS
	kE DIRT_PATH
	kF END_GATEWAY
	kG REPEATING_COMMAND_BLOCK
	kH CHAIN_COMMAND_BLOCK
	kI FROSTED_ICE
	kJ MAGMA_BLOCK
	kK NETHER_WART_BLOCK
	kL RED_NETHER_BRICKS
	kM BONE_BLOCK
	kN STRUCTURE_VOID
	kO OBSERVER
	kP SHULKER_BOX
	kQ WHITE_SHULKER_BOX
	kR ORANGE_SHULKER_BOX
	kS MAGENTA_SHULKER_BOX
	kT LIGHT_BLUE_SHULKER_BOX
	kU YELLOW_SHULKER_BOX
	kV LIME_SHULKER_BOX
	kW PINK_SHULKER_BOX
	kX GRAY_SHULKER_BOX
	kY LIGHT_GRAY_SHULKER_BOX
	kZ CYAN_SHULKER_BOX
	ka DARK_OAK_FENCE_GATE
	kb MANGROVE_FENCE_GATE
	kc BAMBOO_FENCE_GATE
	kd SPRUCE_FENCE
	ke BIRCH_FENCE
	kf JUNGLE_FENCE
	kg ACACIA_FENCE
	kh CHERRY_FENCE
	ki DARK_OAK_FENCE
	kj MANGROVE_FENCE
	kk BAMBOO_FENCE
	kl SPRUCE_DOOR
	km BIRCH_DOOR
	kn JUNGLE_DOOR
	ko ACACIA_DOOR
	kp CHERRY_DOOR
	kq DARK_OAK_DOOR
	kr MANGROVE_DOOR
	ks BAMBOO_DOOR
	kt END_ROD
	ku CHORUS_PLANT
	kv CHORUS_FLOWER
	kw PURPUR_BLOCK
	kx PURPUR_PILLAR
	ky PURPUR_STAIRS
	kz END_STONE_BRICKS
	l PODZOL
	lA YELLOW_CONCRETE
	lB LIME_CONCRETE
	lC PINK_CONCRETE
	lD GRAY_CONCRETE
	lE LIGHT_GRAY_CONCRETE
	lF CYAN_CONCRETE
	lG PURPLE_CONCRETE
	lH BLUE_CONCRETE
	lI BROWN_CONCRETE
	lJ GREEN_CONCRETE
	lK RED_CONCRETE
	lL BLACK_CONCRETE
	lM WHITE_CONCRETE_POWDER
	lN ORANGE_CONCRETE_POWDER
	lO MAGENTA_CONCRETE_POWDER
	lP LIGHT_BLUE_CONCRETE_POWDER
	lQ YELLOW_CONCRETE_POWDER
	lR LIME_CONCRETE_POWDER
	lS PINK_CONCRETE_POWDER
	lT GRAY_CONCRETE_POWDER
	lU LIGHT_GRAY_CONCRETE_POWDER
	lV CYAN_CONCRETE_POWDER
	lW PURPLE_CONCRETE_POWDER
	lX BLUE_CONCRETE_POWDER
	lY BROWN_CONCRETE_POWDER
	lZ GREEN_CONCRETE_POWDER
	la PURPLE_SHULKER_BOX
	lb BLUE_SHULKER_BOX
	lc BROWN_SHULKER_BOX
	ld GREEN_SHULKER_BOX
	le RED_SHULKER_BOX
	lf BLACK_SHULKER_BOX
	lg WHITE_GLAZED_TERRACOTTA
	lh ORANGE_GLAZED_TERRACOTTA
	li MAGENTA_GLAZED_TERRACOTTA
	lj LIGHT_BLUE_GLAZED_TERRACOTTA
	lk YELLOW_GLAZED_TERRACOTTA
	ll LIME_GLAZED_TERRACOTTA
	lm PINK_GLAZED_TERRACOTTA
	ln GRAY_GLAZED_TERRACOTTA
	lo LIGHT_GRAY_GLAZED_TERRACOTTA
	lp CYAN_GLAZED_TERRACOTTA
	lq PURPLE_GLAZED_TERRACOTTA
	lr BLUE_GLAZED_TERRACOTTA
	ls BROWN_GLAZED_TERRACOTTA
	lt GREEN_GLAZED_TERRACOTTA
	lu RED_GLAZED_TERRACOTTA
	lv BLACK_GLAZED_TERRACOTTA
	lw WHITE_CONCRETE
	lx ORANGE_CONCRETE
	ly MAGENTA_CONCRETE
	lz LIGHT_BLUE_CONCRETE
	m COBBLESTONE
	mA HORN_CORAL
	mB DEAD_TUBE_CORAL_FAN
	mC DEAD_BRAIN_CORAL_FAN
	mD DEAD_BUBBLE_CORAL_FAN
	mE DEAD_FIRE_CORAL_FAN
	mF DEAD_HORN_CORAL_FAN
	mG TUBE_CORAL_FAN
	mH BRAIN_CORAL_FAN
	mI BUBBLE_CORAL_FAN
	mJ FIRE_CORAL_FAN
	mK HORN_CORAL_FAN
	mL DEAD_TUBE_CORAL_WALL_FAN
	mM DEAD_BRAIN_CORAL_WALL_FAN
	mN DEAD_BUBBLE_CORAL_WALL_FAN
	mO DEAD_FIRE_CORAL_WALL_FAN
	mP DEAD_HORN_CORAL_WALL_FAN
	mQ TUBE_CORAL_WALL_FAN
	mR BRAIN_CORAL_WALL_FAN
	mS BUBBLE_CORAL_WALL_FAN
	mT FIRE_CORAL_WALL_FAN
	mU HORN_CORAL_WALL_FAN
	mV SEA_PICKLE
	mW BLUE_ICE
	mX CONDUIT
	mY BAMBOO_SAPLING
	mZ BAMBOO
	ma RED_CONCRETE_POWDER
	mb BLACK_CONCRETE_POWDER
	mc KELP
	md KELP_PLANT
	me DRIED_KELP_BLOCK
	mf TURTLE_EGG
	mg SNIFFER_EGG
	mh DEAD_TUBE_CORAL_BLOCK
	mi DEAD_BRAIN_CORAL_BLOCK
	mj DEAD_BUBBLE_CORAL_BLOCK
	mk DEAD_FIRE_CORAL_BLOCK
	ml DEAD_HORN_CORAL_BLOCK
	mm TUBE_CORAL_BLOCK
	mn BRAIN_CORAL_BLOCK
	mo BUBBLE_CORAL_BLOCK
	mp FIRE_CORAL_BLOCK
	mq HORN_CORAL_BLOCK
	mr DEAD_TUBE_CORAL
	ms DEAD_BRAIN_CORAL
	mt DEAD_BUBBLE_CORAL
	mu DEAD_FIRE_CORAL
	mv DEAD_HORN_CORAL
	mw TUBE_CORAL
	mx BRAIN_CORAL
	my BUBBLE_CORAL
	mz FIRE_CORAL
	n OAK_PLANKS
	nA GRANITE_SLAB
	nB ANDESITE_SLAB
	nC RED_NETHER_BRICK_SLAB
	nD POLISHED_ANDESITE_SLAB
	nE DIORITE_SLAB
	nF BRICK_WALL
	nG PRISMARINE_WALL
	nH RED_SANDSTONE_WALL
	nI MOSSY_STONE_BRICK_WALL
	nJ GRANITE_WALL
	nK STONE_BRICK_WALL
	nL MUD_BRICK_WALL
	nM NETHER_BRICK_WALL
	nN ANDESITE_WALL
	nO RED_NETHER_BRICK_WALL
	nP SANDSTONE_WALL
	nQ END_STONE_BRICK_WALL
	nR DIORITE_WALL
	nS SCAFFOLDING
	nT LOOM
	nU BARREL
	nV SMOKER
	nW BLAST_FURNACE
	nX CARTOGRAPHY_TABLE
	nY FLETCHING_TABLE
	nZ GRINDSTONE
	na POTTED_BAMBOO
	nb VOID_AIR
	nc CAVE_AIR
	nd BUBBLE_COLUMN
	ne POLISHED_GRANITE_STAIRS
	nf SMOOTH_RED_SANDSTONE_STAIRS
	ng MOSSY_STONE_BRICK_STAIRS
	nh POLISHED_DIORITE_STAIRS
	ni MOSSY_COBBLESTONE_STAIRS
	nj END_STONE_BRICK_STAIRS
	nk STONE_STAIRS
	nl SMOOTH_SANDSTONE_STAIRS
	nm SMOOTH_QUARTZ_STAIRS
	nn GRANITE_STAIRS
	no ANDESITE_STAIRS
	np RED_NETHER_BRICK_STAIRS
	nq POLISHED_ANDESITE_STAIRS
	nr DIORITE_STAIRS
	ns POLISHED_GRANITE_SLAB
	nt SMOOTH_RED_SANDSTONE_SLAB
	nu MOSSY_STONE_BRICK_SLAB
	nv POLISHED_DIORITE_SLAB
	nw MOSSY_COBBLESTONE_SLAB
	nx END_STONE_BRICK_SLAB
	ny SMOOTH_SANDSTONE_SLAB
	nz SMOOTH_QUARTZ_SLAB
	o SPRUCE_PLANKS
	oA WEEPING_VINES_PLANT
	oB TWISTING_VINES
	oC TWISTING_VINES_PLANT
	oD CRIMSON_ROOTS
	oE CRIMSON_PLANKS
	oF WARPED_PLANKS
	oG CRIMSON_SLAB
	oH WARPED_SLAB
	oI CRIMSON_PRESSURE_PLATE
	oJ WARPED_PRESSURE_PLATE
	oK CRIMSON_FENCE
	oL WARPED_FENCE
	oM CRIMSON_TRAPDOOR
	oN WARPED_TRAPDOOR
	oO CRIMSON_FENCE_GATE
	oP WARPED_FENCE_GATE
	oQ CRIMSON_STAIRS
	oR WARPED_STAIRS
	oS CRIMSON_BUTTON
	oT WARPED_BUTTON
	oU CRIMSON_DOOR
	oV WARPED_DOOR
	oW CRIMSON_SIGN
	oX WARPED_SIGN
	oY CRIMSON_WALL_SIGN
	oZ WARPED_WALL_SIGN
	oa LECTERN
	ob SMITHING_TABLE
	oc STONECUTTER
	od BELL
	oe LANTERN
	of SOUL_LANTERN
	og CAMPFIRE
	oh SOUL_CAMPFIRE
	oi SWEET_BERRY_BUSH
	oj WARPED_STEM
	ok STRIPPED_WARPED_STEM
	ol WARPED_HYPHAE
	om STRIPPED_WARPED_HYPHAE
	on WARPED_NYLIUM
	oo WARPED_FUNGUS
	op WARPED_WART_BLOCK
	oq WARPED_ROOTS
	or NETHER_SPROUTS
	os CRIMSON_STEM
	ot STRIPPED_CRIMSON_STEM
	ou CRIMSON_HYPHAE
	ov STRIPPED_CRIMSON_HYPHAE
	ow CRIMSON_NYLIUM
	ox CRIMSON_FUNGUS
	oy SHROOMLIGHT
	oz WEEPING_VINES
	p BIRCH_PLANKS
	pA POLISHED_BLACKSTONE_BRICK_STAIRS
	pB POLISHED_BLACKSTONE_BRICK_WALL
	pC GILDED_BLACKSTONE
	pD POLISHED_BLACKSTONE_STAIRS
	pE POLISHED_BLACKSTONE_SLAB
	pF POLISHED_BLACKSTONE_PRESSURE_PLATE
	pG POLISHED_BLACKSTONE_BUTTON
	pH POLISHED_BLACKSTONE_WALL
	pI CHISELED_NETHER_BRICKS
	pJ CRACKED_NETHER_BRICKS
	pK QUARTZ_BRICKS
	pL CANDLE
	pM WHITE_CANDLE
	pN ORANGE_CANDLE
	pO MAGENTA_CANDLE
	pP LIGHT_BLUE_CANDLE
	pQ YELLOW_CANDLE
	pR LIME_CANDLE
	pS PINK_CANDLE
	pT GRAY_CANDLE
	pU LIGHT_GRAY_CANDLE
	pV CYAN_CANDLE
	pW PURPLE_CANDLE
	pX BLUE_CANDLE
	pY BROWN_CANDLE
	pZ GREEN_CANDLE
	pa STRUCTURE_BLOCK
	pb JIGSAW
	pc COMPOSTER
	pd TARGET
	pe BEE_NEST
	pf BEEHIVE
	pg HONEY_BLOCK
	ph HONEYCOMB_BLOCK
	pi NETHERITE_BLOCK
	pj ANCIENT_DEBRIS
	pk CRYING_OBSIDIAN
	pl RESPAWN_ANCHOR
	pm POTTED_CRIMSON_FUNGUS
	pn POTTED_WARPED_FUNGUS
	po POTTED_CRIMSON_ROOTS
	pp POTTED_WARPED_ROOTS
	pq LODESTONE
	pr BLACKSTONE
	ps BLACKSTONE_STAIRS
	pt BLACKSTONE_WALL
	pu BLACKSTONE_SLAB
	pv POLISHED_BLACKSTONE
	pw POLISHED_BLACKSTONE_BRICKS
	px CRACKED_POLISHED_BLACKSTONE_BRICKS
	py CHISELED_POLISHED_BLACKSTONE
	pz POLISHED_BLACKSTONE_BRICK_SLAB
	q JUNGLE_PLANKS
	qA CALCITE
	qB TINTED_GLASS
	qC POWDER_SNOW
	qD SCULK_SENSOR
	qE CALIBRATED_SCULK_SENSOR
	qF SCULK
	qG SCULK_VEIN
	qH SCULK_CATALYST
	qI SCULK_SHRIEKER
	qJ OXIDIZED_COPPER
	qK WEATHERED_COPPER
	qL EXPOSED_COPPER
	qM COPPER_BLOCK
	qN COPPER_ORE
	qO DEEPSLATE_COPPER_ORE
	qP OXIDIZED_CUT_COPPER
	qQ WEATHERED_CUT_COPPER
	qR EXPOSED_CUT_COPPER
	qS CUT_COPPER
	qT OXIDIZED_CUT_COPPER_STAIRS
	qU WEATHERED_CUT_COPPER_STAIRS
	qV EXPOSED_CUT_COPPER_STAIRS
	qW CUT_COPPER_STAIRS
	qX OXIDIZED_CUT_COPPER_SLAB
	qY WEATHERED_CUT_COPPER_SLAB
	qZ EXPOSED_CUT_COPPER_SLAB
	qa RED_CANDLE
	qb BLACK_CANDLE
	qc CANDLE_CAKE
	qd WHITE_CANDLE_CAKE
	qe ORANGE_CANDLE_CAKE
	qf MAGENTA_CANDLE_CAKE
	qg LIGHT_BLUE_CANDLE_CAKE
	qh YELLOW_CANDLE_CAKE
	qi LIME_CANDLE_CAKE
	qj PINK_CANDLE_CAKE
	qk GRAY_CANDLE_CAKE
	ql LIGHT_GRAY_CANDLE_CAKE
	qm CYAN_CANDLE_CAKE
	qn PURPLE_CANDLE_CAKE
	qo BLUE_CANDLE_CAKE
	qp BROWN_CANDLE_CAKE
	qq GREEN_CANDLE_CAKE
	qr RED_CANDLE_CAKE
	qs BLACK_CANDLE_CAKE
	qt AMETHYST_BLOCK
	qu BUDDING_AMETHYST
	qv AMETHYST_CLUSTER
	qw LARGE_AMETHYST_BUD
	qx MEDIUM_AMETHYST_BUD
	qy SMALL_AMETHYST_BUD
	qz TUFF
	r ACACIA_PLANKS
	rA PINK_PETALS
	rB MOSS_BLOCK
	rC BIG_DRIPLEAF
	rD BIG_DRIPLEAF_STEM
	rE SMALL_DRIPLEAF
	rF HANGING_ROOTS
	rG ROOTED_DIRT
	rH MUD
	rI DEEPSLATE
	rJ COBBLED_DEEPSLATE
	rK COBBLED_DEEPSLATE_STAIRS
	rL COBBLED_DEEPSLATE_SLAB
	rM COBBLED_DEEPSLATE_WALL
	rN POLISHED_DEEPSLATE
	rO POLISHED_DEEPSLATE_STAIRS
	rP POLISHED_DEEPSLATE_SLAB
	rQ POLISHED_DEEPSLATE_WALL
	rR DEEPSLATE_TILES
	rS DEEPSLATE_TILE_STAIRS
	rT DEEPSLATE_TILE_SLAB
	rU DEEPSLATE_TILE_WALL
	rV DEEPSLATE_BRICKS
	rW DEEPSLATE_BRICK_STAIRS
	rX DEEPSLATE_BRICK_SLAB
	rY DEEPSLATE_BRICK_WALL
	rZ CHISELED_DEEPSLATE
	ra CUT_COPPER_SLAB
	rb WAXED_COPPER_BLOCK
	rc WAXED_WEATHERED_COPPER
	rd WAXED_EXPOSED_COPPER
	re WAXED_OXIDIZED_COPPER
	rf WAXED_OXIDIZED_CUT_COPPER
	rg WAXED_WEATHERED_CUT_COPPER
	rh WAXED_EXPOSED_CUT_COPPER
	ri WAXED_CUT_COPPER
	rj WAXED_OXIDIZED_CUT_COPPER_STAIRS
	rk WAXED_WEATHERED_CUT_COPPER_STAIRS
	rl WAXED_EXPOSED_CUT_COPPER_STAIRS
	rm WAXED_CUT_COPPER_STAIRS
	rn WAXED_OXIDIZED_CUT_COPPER_SLAB
	ro WAXED_WEATHERED_CUT_COPPER_SLAB
	rp WAXED_EXPOSED_CUT_COPPER_SLAB
	rq WAXED_CUT_COPPER_SLAB
	rr LIGHTNING_ROD
	rs POINTED_DRIPSTONE
	rt DRIPSTONE_BLOCK
	ru CAVE_VINES
	rv CAVE_VINES_PLANT
	rw SPORE_BLOSSOM
	rx AZALEA
	ry FLOWERING_AZALEA
	rz MOSS_CARPET
	s CHERRY_PLANKS
	sa CRACKED_DEEPSLATE_BRICKS
	sb CRACKED_DEEPSLATE_TILES
	sc INFESTED_DEEPSLATE
	sd SMOOTH_BASALT
	se RAW_IRON_BLOCK
	sf RAW_COPPER_BLOCK
	sg RAW_GOLD_BLOCK
	sh POTTED_AZALEA
	si POTTED_FLOWERING_AZALEA
	sj OCHRE_FROGLIGHT
	sk VERDANT_FROGLIGHT
	sl PEARLESCENT_FROGLIGHT
	sm FROGSPAWN
	sn REINFORCED_DEEPSLATE
	so DECORATED_POT
	t DARK_OAK_PLANKS
	u MANGROVE_PLANKS
	v BAMBOO_PLANKS
	w BAMBOO_MOSAIC
	x OAK_SAPLING
	y SPRUCE_SAPLING
	z BIRCH_SAPLING
	a ()V rebuildCache
	a (I)Ljava/util/function/ToIntFunction; litBlockEmission
	a (Ljava/lang/String;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; register
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; register
	a (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/level/block/BlockBed; bed
	a (Lnet/minecraft/world/item/EnumColor;Lnet/minecraft/world/level/block/state/BlockBase$Info;)Lnet/minecraft/world/level/block/BlockShulkerBox; shulkerBox
	a (Lnet/minecraft/world/level/block/Block;[Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/level/block/BlockFlowerPot; flowerPot
	a (Lnet/minecraft/world/level/block/SoundEffectType;)Lnet/minecraft/world/level/block/BlockLeaves; leaves
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z always
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;)Ljava/lang/Boolean; never
	a (Lnet/minecraft/world/level/block/state/properties/BlockSetType;[Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/level/block/BlockButtonAbstract; woodenButton
	a (Lnet/minecraft/world/level/material/MaterialMapColor;)Lnet/minecraft/world/level/block/Block; netherStem
	a (Lnet/minecraft/world/level/material/MaterialMapColor;Lnet/minecraft/world/level/material/MaterialMapColor;)Lnet/minecraft/world/level/block/BlockRotatable; log
	a (Lnet/minecraft/world/level/material/MaterialMapColor;Lnet/minecraft/world/level/material/MaterialMapColor;Lnet/minecraft/world/level/block/SoundEffectType;)Lnet/minecraft/world/level/block/BlockRotatable; log
	a (Z)Lnet/minecraft/world/level/block/piston/BlockPiston; pistonBase
	b ()Lnet/minecraft/world/level/block/BlockButtonAbstract; stoneButton
	b (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/level/block/BlockStainedGlass; stainedGlass
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z never
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;)Ljava/lang/Boolean; always
	b (Lnet/minecraft/world/level/material/MaterialMapColor;)Lnet/minecraft/world/level/block/CandleBlock; candle
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;)Ljava/lang/Boolean; ocelotOrParrot
net/minecraft/world/level/block/BrushableBlock net/minecraft/world/level/block/BrushableBlock
	a TICK_DELAY
	b DUSTED
	c turnsInto
	d brushSound
	e brushCompletedSound
	a ()Lnet/minecraft/world/level/block/Block; getTurnsInto
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/item/EntityFallingBlock;)V onBrokenAfterFall
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	b ()Lnet/minecraft/sounds/SoundEffect; getBrushSound
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c ()Lnet/minecraft/sounds/SoundEffect; getBrushCompletedSound
net/minecraft/world/level/block/BuddingAmethystBlock net/minecraft/world/level/block/BuddingAmethystBlock
	a GROWTH_CHANCE
	b DIRECTIONS
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canClusterGrowAtState
net/minecraft/world/level/block/CalibratedSculkSensorBlock net/minecraft/world/level/block/CalibratedSculkSensorBlock
	a FACING
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b ()I getActiveTicks
net/minecraft/world/level/block/CandleBlock net/minecraft/world/level/block/CandleBlock
	c MIN_CANDLES
	d MAX_CANDLES
	e CANDLES
	f LIT
	g WATERLOGGED
	h LIGHT_EMISSION
	i PARTICLE_OFFSETS
	j ONE_AABB
	k TWO_AABB
	l THREE_AABB
	m FOUR_AABB
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/lang/Iterable; getParticleOffsets
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Z canBeLit
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canLight
net/minecraft/world/level/block/CandleCakeBlock net/minecraft/world/level/block/CandleCakeBlock
	c LIT
	d AABB_OFFSET
	e CAKE_SHAPE
	f CANDLE_SHAPE
	g SHAPE
	h BY_CANDLE
	i PARTICLE_OFFSETS
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/IBlockData; byCandle
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Z candleHit
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/lang/Iterable; getParticleOffsets
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canLight
net/minecraft/world/level/block/CarpetBlock net/minecraft/world/level/block/CarpetBlock
	a SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
net/minecraft/world/level/block/CaveVines net/minecraft/world/level/block/CaveVines
	r_ SHAPE
	s_ BERRIES
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/EnumInteractionResult; use
	h_ (I)Ljava/util/function/ToIntFunction; emission
	h_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasGlowBerries
net/minecraft/world/level/block/CaveVinesBlock net/minecraft/world/level/block/CaveVinesBlock
	f CHANCE_OF_BERRIES_ON_GROWTH
	a ()Lnet/minecraft/world/level/block/Block; getBodyBlock
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/util/RandomSource;)I getBlocksToGrowWhenBonemealed
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/IBlockData; getGrowIntoState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; updateBodyAfterConvertedFromHead
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canGrowInto
net/minecraft/world/level/block/CeilingHangingSignBlock net/minecraft/world/level/block/CeilingHangingSignBlock
	a ROTATION
	b ATTACHED
	c AABB_OFFSET
	d SHAPE
	h AABBS
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/level/block/entity/TileEntitySign;Lnet/minecraft/world/item/ItemStack;)Z shouldTryToChainAnotherHangingSign
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	g (Lnet/minecraft/world/level/block/state/IBlockData;)F getYRotationDegrees
net/minecraft/world/level/block/ChangeOverTimeBlock net/minecraft/world/level/block/ChangeOverTimeBlock
	w_ SCAN_DISTANCE
	a ()F getChanceModifier
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V onRandomTick
	b ()Ljava/lang/Enum; getAge
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V applyChangeOverTime
	i_ (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; getNext
net/minecraft/world/level/block/ChiseledBookShelfBlock net/minecraft/world/level/block/ChiseledBookShelfBlock
	a BOOKS_PER_ROW
	b SLOT_OCCUPIED_PROPERTIES
	c MAX_BOOKS_IN_STORAGE
	a (F)I getSection
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity;I)V removeBook
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity;Lnet/minecraft/world/item/ItemStack;I)V addBook
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/core/EnumDirection;)Ljava/util/Optional; getRelativeHitCoordinatesForBlockFace
	a (Lnet/minecraft/world/phys/Vec2F;)I getHitSlot
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/DecoratedPotBlock net/minecraft/world/level/block/DecoratedPotBlock
	a SHERDS_DYNAMIC_DROP_ID
	b BOUNDING_BOX
	c HORIZONTAL_FACING
	d CRACKED
	e WATERLOGGED
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/IBlockAccess;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lecw$a;)Ljava/util/List; getDrops
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	m (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/SoundEffectType; getSoundType
net/minecraft/world/level/block/DropExperienceBlock net/minecraft/world/level/block/DropExperienceBlock
	a xpRange
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
net/minecraft/world/level/block/FrogspawnBlock net/minecraft/world/level/block/FrogspawnBlock
	a SHAPE
	b MIN_TADPOLES_SPAWN
	c MAX_TADPOLES_SPAWN
	d DEFAULT_MIN_HATCH_TICK_DELAY
	e DEFAULT_MAX_HATCH_TICK_DELAY
	f minHatchTickDelay
	g maxHatchTickDelay
	a ()V setDefaultHatchDelay
	a (II)V setHatchDelay
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V hatchFrogspawn
	a (Lnet/minecraft/util/RandomSource;)I getFrogspawnHatchDelay
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V destroyBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V spawnTadpoles
	b (Lnet/minecraft/util/RandomSource;)D getRandomTadpolePositionOffset
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/GlowLichenBlock net/minecraft/world/level/block/GlowLichenBlock
	b WATERLOGGED
	c spreader
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	b ()Lnet/minecraft/world/level/block/MultifaceSpreader; getSpreader
	b (I)Ljava/util/function/ToIntFunction; emission
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/HangingRootsBlock net/minecraft/world/level/block/HangingRootsBlock
	a SHAPE
	b WATERLOGGED
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/LayeredCauldronBlock net/minecraft/world/level/block/LayeredCauldronBlock
	c MIN_FILL_LEVEL
	d MAX_FILL_LEVEL
	e LEVEL
	f RAIN
	g SNOW
	h BASE_CONTENT_HEIGHT
	i HEIGHT_PER_LEVEL
	j fillPredicate
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/biome/BiomeBase$Precipitation;)V handlePrecipitation
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;)V receiveStalactiteDrip
	a (Lnet/minecraft/world/level/material/FluidType;)Z canReceiveStalactiteDrip
	b (Lnet/minecraft/world/level/block/state/IBlockData;)D getContentHeight
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Z isFull
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V handleEntityOnFireInside
	e (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V lowerFillLevel
net/minecraft/world/level/block/LightBlock net/minecraft/world/level/block/LightBlock
	a MAX_LEVEL
	b LEVEL
	c WATERLOGGED
	d LIGHT_EMISSION
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; setLightOnStack
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/LightningRodBlock net/minecraft/world/level/block/LightningRodBlock
	b WATERLOGGED
	c POWERED
	d RANGE
	j ACTIVATION_TICKS
	k SPARK_CYCLE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V onLightningStrike
	e (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V updateNeighbours
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/MangrovePropaguleBlock net/minecraft/world/level/block/MangrovePropaguleBlock
	a AGE
	b MAX_AGE
	c HANGING
	g SHAPE_PER_AGE
	h WATERLOGGED
	i GROW_TALL_MANGROVE_PROBABILITY
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b ()Lnet/minecraft/world/level/block/state/IBlockData; createNewHangingPropagule
	b (I)Lnet/minecraft/world/level/block/state/IBlockData; createNewHangingPropagule
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isHanging
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z isFullyGrown
net/minecraft/world/level/block/MangroveRootsBlock net/minecraft/world/level/block/MangroveRootsBlock
	a WATERLOGGED
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z skipRendering
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/MudBlock net/minecraft/world/level/block/MudBlock
	a SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
net/minecraft/world/level/block/MultifaceBlock net/minecraft/world/level/block/MultifaceBlock
	a DIRECTIONS
	b AABB_OFFSET
	c UP_AABB
	d DOWN_AABB
	e WEST_AABB
	f EAST_AABB
	g NORTH_AABB
	h SOUTH_AABB
	i PROPERTY_BY_DIRECTION
	j SHAPE_BY_DIRECTION
	k shapesCache
	l canRotate
	m canMirrorX
	n canMirrorZ
	a (B)Ljava/util/Set; unpack
	a (Ldfk$a;)V createBlockStateDefinition
	a (Ljava/util/Collection;)B pack
	a (Lnet/minecraft/core/EnumDirection;)Z isFaceSupported
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canAttachTo
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isValidStateForPlacement
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)Lnet/minecraft/world/level/block/state/IBlockData; getDefaultMultifaceState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/IBlockData; mapDirections
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z hasFace
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean;)Lnet/minecraft/world/level/block/state/IBlockData; removeFace
	b ()Lnet/minecraft/world/level/block/MultifaceSpreader; getSpreader
	b (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean; getFaceProperty
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	g ()Z isWaterloggable
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Set; availableFaces
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnyFace
	o (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; calculateMultifaceShape
	p (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnyVacantFace
net/minecraft/world/level/block/MultifaceSpreader net/minecraft/world/level/block/MultifaceSpreader
	a DEFAULT_SPREAD_ORDER
	b config
	a (Lnet/minecraft/world/level/GeneratorAccess;Lcxu$c;Z)Ljava/util/Optional; spreadToFace
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;Z)Ljava/util/Optional; spreadFromFaceTowardDirection
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/util/RandomSource;Z)Ljava/util/Optional; spreadFromFaceTowardRandomDirection
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Z)J spreadFromFaceTowardAllDirections
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; spreadFromRandomFaceTowardRandomDirection
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Z)J spreadAll
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canSpreadInAnyDirection
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;Lcxu$d;)Ljava/util/Optional; getSpreadFromFaceTowardDirection
net/minecraft/world/level/block/PiglinWallSkullBlock net/minecraft/world/level/block/PiglinWallSkullBlock
	c AABBS
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
net/minecraft/world/level/block/PinkPetalsBlock net/minecraft/world/level/block/PinkPetalsBlock
	a MIN_FLOWERS
	b MAX_FLOWERS
	c FACING
	d AMOUNT
	e SHAPE_BY_PROPERTIES
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/PitcherCropBlock net/minecraft/world/level/block/PitcherCropBlock
	b AGE
	c MAX_AGE
	d DOUBLE_PLANT_AGE_INTERSECTION
	e BONEMEAL_INCREASE
	f FULL_UPPER_SHAPE
	g FULL_LOWER_SHAPE
	h COLLISION_SHAPE_BULB
	i COLLISION_SHAPE_CROP
	j UPPER_SHAPE_BY_AGE
	k LOWER_SHAPE_BY_AGE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;I)V grow
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canGrowInto
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;I)Z canGrow
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	b (I)Z isDouble
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z sufficientLight
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lcyi$a; getLowerHalf
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isLower
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z isMaxAge
net/minecraft/world/level/block/PointedDripstoneBlock net/minecraft/world/level/block/PointedDripstoneBlock
	D STALAGMITE_FALL_DISTANCE_OFFSET
	E STALAGMITE_FALL_DAMAGE_MODIFIER
	F AVERAGE_DAYS_PER_GROWTH
	G GROWTH_PROBABILITY_PER_RANDOM_TICK
	H MAX_GROWTH_LENGTH
	I MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING
	J STALACTITE_DRIP_START_PIXEL
	K TIP_MERGE_SHAPE
	L TIP_SHAPE_UP
	M TIP_SHAPE_DOWN
	N FRUSTUM_SHAPE
	O MIDDLE_SHAPE
	P BASE_SHAPE
	Q MAX_HORIZONTAL_OFFSET
	R REQUIRED_SPACE_TO_DRIP_THROUGH_NON_SOLID_BLOCK
	a TIP_DIRECTION
	b THICKNESS
	c WATERLOGGED
	d MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE
	e DELAY_BEFORE_FALLING
	f DRIP_PROBABILITY_PER_ANIMATE_TICK
	g DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE
	h MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON
	i WATER_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	j LAVA_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	k MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE
	l STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE
	m STALACTITE_MAX_DAMAGE
	n MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/FluidType; getCauldronFillFluidType
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)V grow
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; getFallDamageSource
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection$EnumAxisDirection;Ljava/util/function/BiPredicate;Ljava/util/function/Predicate;I)Ljava/util/Optional; findBlockVertical
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)V createDripstone
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Z)Lnet/minecraft/world/level/block/state/properties/DripstoneThickness; calculateDripstoneThickness
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; findStalactiteTipAboveCauldron
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/item/EntityFallingBlock;)V onBrokenAfterFall
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V spawnDripParticle
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;I)Ljava/util/Optional; findRootBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)V spawnDripParticle
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;)Lnet/minecraft/core/BlockPosition; findFillableCauldronBelowStalactiteTip
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/material/FluidType;)Lnet/minecraft/world/level/material/FluidType; getDripFluid
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z isUnmergedTipWithDirection
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V spawnFallingStalactite
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;F)V maybeTransferFluid
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V createMergedTips
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;IZ)Lnet/minecraft/core/BlockPosition; findTip
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Z canGrow
	a (Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isTip
	a (Lnet/minecraft/world/level/material/FluidType;)Z canFillCauldron
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isCollisionShapeFullBlock
	ap_ ()F getMaxHorizontalOffset
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V growStalagmiteBelow
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canDripThrough
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/EnumDirection; calculateTipDirection
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; getFluidAboveStalactite
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z isPointedDripstoneWithDirection
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z canTipGrow
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isStalactiteStartPos
	c (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isValidPointedDripstonePlacement
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V growStalactiteOrStalagmiteIfPossible
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canDrip
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z isStalactite
	o (Lnet/minecraft/world/level/block/state/IBlockData;)Z isStalagmite
net/minecraft/world/level/block/PowderSnowBlock net/minecraft/world/level/block/PowderSnowBlock
	a HORIZONTAL_PARTICLE_MOMENTUM_FACTOR
	b IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER
	c IN_BLOCK_VERTICAL_SPEED_MULTIPLIER
	d NUM_BLOCKS_TO_FALL_INTO_BLOCK
	e FALLING_COLLISION_SHAPE
	f MINIMUM_FALL_DISTANCE_FOR_SOUND
	g MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND
	a (Lnet/minecraft/world/entity/Entity;)Z canEntityWalkOnPowderSnow
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; pickupBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z skipRendering
	aq_ ()Ljava/util/Optional; getPickupSound
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
net/minecraft/world/level/block/RodBlock net/minecraft/world/level/block/RodBlock
	e AABB_MIN
	f AABB_MAX
	g Y_AXIS_AABB
	h Z_AXIS_AABB
	i X_AXIS_AABB
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/SculkBehaviour net/minecraft/world/level/block/SculkBehaviour
	t_ DEFAULT
	a ()B getSculkSpreadDelay
	a (Lczq$a;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I attemptUseCharge
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z depositCharge
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/Collection;Z)Z attemptSpreadVein
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V onDischarged
	c ()Z canChangeBlockStateOnSpread
	i_ (I)I updateDecayDelay
net/minecraft/world/level/block/SculkCatalystBlock net/minecraft/world/level/block/SculkCatalystBlock
	a PULSE
	b xpRange
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
net/minecraft/world/level/block/SculkSensorBlock net/minecraft/world/level/block/SculkSensorBlock
	a RESONANCE_PITCH_BEND
	b ACTIVE_TICKS
	c COOLDOWN_TICKS
	d PHASE
	e POWER
	f WATERLOGGED
	g SHAPE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;I)V tryResonateVibration
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)V activate
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V deactivate
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b ()I getActiveTicks
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updateNeighbours
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/properties/SculkSensorPhase; getPhase
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z canActivate
net/minecraft/world/level/block/SculkShriekerBlock net/minecraft/world/level/block/SculkShriekerBlock
	a SHRIEKING
	b WATERLOGGED
	c CAN_SUMMON
	d COLLIDER
	e TOP_Y
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/SculkSpreader net/minecraft/world/level/block/SculkSpreader
	a MAX_GROWTH_RATE_RADIUS
	b MAX_CHARGE
	c MAX_DECAY_FACTOR
	d SHRIEKER_PLACEMENT_RATE
	e MAX_CURSORS
	f isWorldGeneration
	g replaceableBlocks
	h growthSpawnCost
	i noGrowthRadius
	j chargeDecayRate
	k additionalDecayRate
	l cursors
	m LOGGER
	a ()Lnet/minecraft/world/level/block/SculkSpreader; createLevelSpreader
	a (Lczq$a;)V addCursor
	a (Lnet/minecraft/core/BlockPosition;I)V addCursors
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Z)V updateCursors
	b ()Lnet/minecraft/world/level/block/SculkSpreader; createWorldGenSpreader
	b (Lnet/minecraft/nbt/NBTTagCompound;)V save
	c ()Lnet/minecraft/tags/TagKey; replaceableBlocks
	d ()I growthSpawnCost
	e ()I noGrowthRadius
	f ()I chargeDecayRate
	g ()I additionalDecayRate
	h ()Z isWorldGeneration
	i ()Ljava/util/List; getCursors
	j ()V clear
net/minecraft/world/level/block/SculkVeinBlock net/minecraft/world/level/block/SculkVeinBlock
	b WATERLOGGED
	c veinSpreader
	d sameSpaceSpreader
	a (Lczq$a;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I attemptUseCharge
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/Collection;)Z regrow
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)Z hasSubstrateAccess
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V onDischarged
	a (Lnet/minecraft/world/level/block/SculkSpreader;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z attemptPlaceSculk
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	b ()Lnet/minecraft/world/level/block/MultifaceSpreader; getSpreader
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	g ()Lnet/minecraft/world/level/block/MultifaceSpreader; getSameSpaceSpreader
net/minecraft/world/level/block/SeagrassBlock net/minecraft/world/level/block/SeagrassBlock
	a AABB_OFFSET
	b SHAPE
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/SmallDripleafBlock net/minecraft/world/level/block/SmallDripleafBlock
	b FACING
	c AABB_OFFSET
	d SHAPE
	e WATERLOGGED
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	ar_ ()F getMaxVerticalOffset
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/SnifferEggBlock net/minecraft/world/level/block/SnifferEggBlock
	a MAX_HATCH_LEVEL
	b HATCH
	c REGULAR_HATCH_TIME_TICKS
	d BOOSTED_HATCH_TIME_TICKS
	e RANDOM_HATCH_OFFSET_TICKS
	f SHAPE
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z hatchBoost
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	h (Lnet/minecraft/world/level/block/state/IBlockData;)I getHatchLevel
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z isReadyToHatch
net/minecraft/world/level/block/SporeBlossomBlock net/minecraft/world/level/block/SporeBlossomBlock
	a SHAPE
	b ADD_PARTICLE_ATTEMPTS
	c PARTICLE_XZ_RADIUS
	d PARTICLE_Y_MAX
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/TallSeagrassBlock net/minecraft/world/level/block/TallSeagrassBlock
	b HALF
	c AABB_OFFSET
	d SHAPE
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/TorchflowerCropBlock net/minecraft/world/level/block/TorchflowerCropBlock
	a MAX_AGE
	b AGE
	e AABB_OFFSET
	f SHAPE_BY_AGE
	g BONEMEAL_INCREASE
	a ()Lnet/minecraft/world/level/block/state/properties/BlockStateInteger; getAgeProperty
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/World;)I getBonemealAgeIncrease
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b ()I getMaxAge
	b (I)Lnet/minecraft/world/level/block/state/IBlockData; getStateForAge
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c ()Lnet/minecraft/world/level/IMaterial; getBaseSeedId
net/minecraft/world/level/block/WallHangingSignBlock net/minecraft/world/level/block/WallHangingSignBlock
	a FACING
	b PLANK_NORTHSOUTH
	c PLANK_EASTWEST
	d SHAPE_NORTHSOUTH
	h SHAPE_EASTWEST
	i AABBS
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canAttachTo
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/level/block/entity/TileEntitySign;Lnet/minecraft/world/item/ItemStack;)Z shouldTryToChainAnotherHangingSign
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/level/block/state/IBlockData;)Z isHittingEditableSide
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canPlace
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	f ()Ljava/lang/String; getDescriptionId
	g (Lnet/minecraft/world/level/block/state/IBlockData;)F getYRotationDegrees
net/minecraft/world/level/block/WeatheringCopper net/minecraft/world/level/block/WeatheringCopper
	u_ NEXT_BY_BLOCK
	v_ PREVIOUS_BY_BLOCK
	a ()F getChanceModifier
	a (Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; getPrevious
	b (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; getFirst
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; getPrevious
	c (Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; getNext
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; getFirst
	i_ (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; getNext
net/minecraft/world/level/block/WeatheringCopperFullBlock net/minecraft/world/level/block/WeatheringCopperFullBlock
	d weatherState
	b ()Ljava/lang/Enum; getAge
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	g ()Ldbx$a; getAge
net/minecraft/world/level/block/WeatheringCopperSlabBlock net/minecraft/world/level/block/WeatheringCopperSlabBlock
	e weatherState
	b ()Ljava/lang/Enum; getAge
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	g ()Ldbx$a; getAge
net/minecraft/world/level/block/WeatheringCopperStairBlock net/minecraft/world/level/block/WeatheringCopperStairBlock
	F weatherState
	b ()Ljava/lang/Enum; getAge
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	g ()Ldbx$a; getAge
net/minecraft/world/level/block/entity/BannerPatterns net/minecraft/world/level/block/entity/BannerPatterns
	A HALF_VERTICAL
	B HALF_HORIZONTAL
	C HALF_VERTICAL_MIRROR
	D HALF_HORIZONTAL_MIRROR
	E BORDER
	F CURLY_BORDER
	G GRADIENT
	H GRADIENT_UP
	I BRICKS
	J GLOBE
	K CREEPER
	L SKULL
	M FLOWER
	N MOJANG
	O PIGLIN
	a BASE
	b SQUARE_BOTTOM_LEFT
	c SQUARE_BOTTOM_RIGHT
	d SQUARE_TOP_LEFT
	e SQUARE_TOP_RIGHT
	f STRIPE_BOTTOM
	g STRIPE_TOP
	h STRIPE_LEFT
	i STRIPE_RIGHT
	j STRIPE_CENTER
	k STRIPE_MIDDLE
	l STRIPE_DOWNRIGHT
	m STRIPE_DOWNLEFT
	n STRIPE_SMALL
	o CROSS
	p STRAIGHT_CROSS
	q TRIANGLE_BOTTOM
	r TRIANGLE_TOP
	s TRIANGLES_BOTTOM
	t TRIANGLES_TOP
	u DIAGONAL_LEFT
	v DIAGONAL_RIGHT
	w DIAGONAL_LEFT_MIRROR
	x DIAGONAL_RIGHT_MIRROR
	y CIRCLE_MIDDLE
	z RHOMBUS_MIDDLE
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; create
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/world/level/block/entity/EnumBannerPatternType; bootstrap
net/minecraft/world/level/block/entity/BrushableBlockEntity net/minecraft/world/level/block/entity/BrushableBlockEntity
	a LOGGER
	b LOOT_TABLE_TAG
	c LOOT_TABLE_SEED_TAG
	d HIT_DIRECTION_TAG
	e ITEM_TAG
	f BRUSH_COOLDOWN_TICKS
	g BRUSH_RESET_TICKS
	h REQUIRED_BRUSHES_TO_BREAK
	i brushCount
	j brushCountResetsAtTick
	k coolDownEndsAtTick
	l item
	m hitDirection
	n lootTable
	r lootTableSeed
	a (JLnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/EnumDirection;)Z brush
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/resources/MinecraftKey;J)V setLootTable
	a (Lnet/minecraft/world/entity/player/EntityHuman;)V unpackLootTable
	as_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V brushingCompleted
	c ()V checkReset
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V dropContent
	d ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	d (Lnet/minecraft/nbt/NBTTagCompound;)Z tryLoadLootTable
	e (Lnet/minecraft/nbt/NBTTagCompound;)Z trySaveLootTable
	f ()Lnet/minecraft/core/EnumDirection; getHitDirection
	g ()Lnet/minecraft/world/item/ItemStack; getItem
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	i ()I getCompletionState
net/minecraft/world/level/block/entity/ChestLidController net/minecraft/world/level/block/entity/ChestLidController
	a shouldBeOpen
	b openness
	c oOpenness
	a ()V tickLid
	a (F)F getOpenness
	a (Z)V shouldBeOpen
net/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity net/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity
	c MAX_BOOKS_IN_STORAGE
	d LOGGER
	e items
	f lastInteractedSlot
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/IInventory;ILnet/minecraft/world/item/ItemStack;)Z canTakeItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	af_ ()Z isEmpty
	ag_ ()I getMaxStackSize
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/world/item/ItemStack;)Z canPlaceItem
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c (I)V updateState
	f ()I count
	g ()I getLastInteractedSlot
net/minecraft/world/level/block/entity/ContainerOpenersCounter net/minecraft/world/level/block/entity/ContainerOpenersCounter
	a CHECK_TICK_DELAY
	b openCount
	a ()I getOpenerCount
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z isOwnContainer
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V incrementOpeners
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getOpenCount
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V onOpen
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)V openerCountChanged
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V decrementOpeners
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V onClose
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V recheckOpeners
	d (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V scheduleRecheck
net/minecraft/world/level/block/entity/DecoratedPotBlockEntity net/minecraft/world/level/block/entity/DecoratedPotBlockEntity
	a TAG_SHERDS
	b decorations
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/item/ItemStack;)V setFromItem
	a (Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decoration;)Lnet/minecraft/world/item/ItemStack; createDecoratedPotItem
	as_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	d ()Lnet/minecraft/core/EnumDirection; getDirection
	f ()Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decoration; getDecorations
	g ()Lnet/minecraft/world/item/ItemStack; getItem
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
net/minecraft/world/level/block/entity/DecoratedPotPatterns net/minecraft/world/level/block/entity/DecoratedPotPatterns
	A ARMS_UP
	B BLADE
	C BREWER
	D BURN
	E DANGER
	F EXPLORER
	G FRIEND
	H HEART
	I HEARTBREAK
	J HOWL
	K MINER
	L MOURNER
	M PLENTY
	N PRIZE
	O SHEAF
	P SHELTER
	Q SKULL
	R SNORT
	S ITEM_TO_POT_TEXTURE
	a BASE
	b BASE_NAME
	c BRICK_NAME
	d ANGLER_NAME
	e ARCHER_NAME
	f ARMS_UP_NAME
	g BLADE_NAME
	h BREWER_NAME
	i BURN_NAME
	j DANGER_NAME
	k EXPLORER_NAME
	l FRIEND_NAME
	m HEART_NAME
	n HEARTBREAK_NAME
	o HOWL_NAME
	p MINER_NAME
	q MOURNER_NAME
	r PLENTY_NAME
	s PRIZE_NAME
	t SHEAF_NAME
	u SHELTER_NAME
	v SKULL_NAME
	w SNORT_NAME
	x BRICK
	y ANGLER
	z ARCHER
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; create
	a (Lnet/minecraft/core/IRegistry;)Ljava/lang/String; bootstrap
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/MinecraftKey; location
	a (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceKey; getResourceKey
net/minecraft/world/level/block/entity/HangingSignBlockEntity net/minecraft/world/level/block/entity/HangingSignBlockEntity
	a MAX_TEXT_LINE_WIDTH
	b TEXT_LINE_HEIGHT
	c ()I getTextLineHeight
	d ()I getMaxTextLineWidth
net/minecraft/world/level/block/entity/SculkCatalystBlockEntity$CatalystListener net/minecraft/world/level/block/entity/SculkCatalystBlockEntity$CatalystListener
	a PULSE_TICKS
	b sculkSpreader
	c blockState
	d positionSource
	a ()Lnet/minecraft/world/level/gameevent/PositionSource; getListenerSource
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)V bloom
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEvent;Ldjt$a;Lnet/minecraft/world/phys/Vec3D;)Z handleGameEvent
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)V tryAwardItSpreadsAdvancement
	b ()I getListenerRadius
	c ()Ldjv$a; getDeliveryMode
	d ()Lnet/minecraft/world/level/block/SculkSpreader; getSculkSpreader
net/minecraft/world/level/block/entity/SculkCatalystBlockEntity net/minecraft/world/level/block/entity/SculkCatalystBlockEntity
	a catalystListener
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/SculkCatalystBlockEntity;)V serverTick
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c ()Lnet/minecraft/world/level/block/entity/SculkCatalystBlockEntity$CatalystListener; getListener
	d ()Lnet/minecraft/world/level/gameevent/GameEventListener; getListener
net/minecraft/world/level/block/entity/SculkSensorBlockEntity net/minecraft/world/level/block/entity/SculkSensorBlockEntity
	b LOGGER
	c vibrationData
	d vibrationListener
	e vibrationUser
	g lastVibrationFrequency
	a (I)V setLastVibrationFrequency
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c ()Ldkc$d; createVibrationUser
	d ()Lnet/minecraft/world/level/gameevent/GameEventListener; getListener
	f ()I getLastVibrationFrequency
	g ()Ldkc$b; getListener
	gf ()Ldkc$a; getVibrationData
	gg ()Ldkc$d; getVibrationUser
net/minecraft/world/level/block/entity/SculkShriekerBlockEntity net/minecraft/world/level/block/entity/SculkShriekerBlockEntity
	b LOGGER
	c WARNING_SOUND_RADIUS
	d WARDEN_SPAWN_ATTEMPTS
	e WARDEN_SPAWN_RANGE_XZ
	g WARDEN_SPAWN_RANGE_Y
	h DARKNESS_RADIUS
	i SHRIEKING_TICKS
	j SOUND_BY_LEVEL
	k warningLevel
	l vibrationUser
	m vibrationData
	n vibrationListener
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/server/level/WorldServer;)V tryRespond
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/server/level/EntityPlayer;)V tryShriek
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/Entity;)V shriek
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/server/level/EntityPlayer; tryGetPlayer
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/server/level/WorldServer;)Z canRespond
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/server/level/EntityPlayer;)Z tryToWarn
	b (Lnet/minecraft/world/level/World;)V playWardenReplySound
	c ()Ldkc$b; getListener
	c (Lnet/minecraft/server/level/WorldServer;)Z trySummonWarden
	d ()Lnet/minecraft/world/level/gameevent/GameEventListener; getListener
	gf ()Ldkc$a; getVibrationData
	gg ()Ldkc$d; getVibrationUser
net/minecraft/world/level/block/entity/SignText net/minecraft/world/level/block/entity/SignText
	a DIRECT_CODEC
	b LINES
	c LINES_CODEC
	d messages
	e filteredMessages
	f color
	g hasGlowingText
	h renderMessages
	i renderMessagedFiltered
	a ()Z hasGlowingText
	a (ILnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/world/level/block/entity/SignText; setMessage
	a (ILnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/world/level/block/entity/SignText; setMessage
	a (IZ)Lnet/minecraft/network/chat/IChatBaseComponent; getMessage
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z hasMessage
	a (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/level/block/entity/SignText; setColor
	a (Z)Lnet/minecraft/world/level/block/entity/SignText; setHasGlowingText
	a (ZLjava/util/function/Function;)[Lnet/minecraft/util/FormattedString; getRenderMessages
	a ([Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/Optional;Lnet/minecraft/world/item/EnumColor;Z)Lnet/minecraft/world/level/block/entity/SignText; load
	b ()Lnet/minecraft/world/item/EnumColor; getColor
	b (Lnet/minecraft/world/entity/player/EntityHuman;)Z hasAnyClickCommands
	b (Z)[Lnet/minecraft/network/chat/IChatBaseComponent; getMessages
	c ()[Lnet/minecraft/network/chat/IChatBaseComponent; emptyMessages
	d ()Ljava/util/Optional; filteredMessages
net/minecraft/world/level/block/grower/MangroveTreeGrower net/minecraft/world/level/block/grower/MangroveTreeGrower
	a tallProbability
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/state/predicate/BlockPredicate net/minecraft/world/level/block/state/predicate/BlockPredicate
	a block
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockPredicate; forBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
net/minecraft/world/level/block/state/predicate/BlockStatePredicate net/minecraft/world/level/block/state/predicate/BlockStatePredicate
	a ANY
	b definition
	c properties
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; forBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/util/function/Predicate;)Z applies
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; where
net/minecraft/world/level/block/state/properties/BlockSetType net/minecraft/world/level/block/state/properties/BlockSetType
	A VALUES
	a IRON
	b GOLD
	c STONE
	d POLISHED_BLACKSTONE
	e OAK
	f SPRUCE
	g BIRCH
	h ACACIA
	i CHERRY
	j JUNGLE
	k DARK_OAK
	l CRIMSON
	m WARPED
	n MANGROVE
	o BAMBOO
	p name
	q canOpenByHand
	r soundType
	s doorClose
	t doorOpen
	u trapdoorClose
	v trapdoorOpen
	w pressurePlateClickOff
	x pressurePlateClickOn
	y buttonClickOff
	z buttonClickOn
	a ()Ljava/util/stream/Stream; values
	a (Lnet/minecraft/world/level/block/state/properties/BlockSetType;)Lnet/minecraft/world/level/block/state/properties/BlockSetType; register
	b ()Ljava/lang/String; name
	c ()Z canOpenByHand
	d ()Lnet/minecraft/world/level/block/SoundEffectType; soundType
	e ()Lnet/minecraft/sounds/SoundEffect; doorClose
	f ()Lnet/minecraft/sounds/SoundEffect; doorOpen
	g ()Lnet/minecraft/sounds/SoundEffect; trapdoorClose
	h ()Lnet/minecraft/sounds/SoundEffect; trapdoorOpen
	i ()Lnet/minecraft/sounds/SoundEffect; pressurePlateClickOff
	j ()Lnet/minecraft/sounds/SoundEffect; pressurePlateClickOn
	k ()Lnet/minecraft/sounds/SoundEffect; buttonClickOff
	l ()Lnet/minecraft/sounds/SoundEffect; buttonClickOn
net/minecraft/world/level/block/state/properties/DripstoneThickness net/minecraft/world/level/block/state/properties/DripstoneThickness
	a TIP_MERGE
	b TIP
	c FRUSTUM
	d MIDDLE
	e BASE
	f name
	g $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/DripstoneThickness; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/RotationSegment net/minecraft/world/level/block/state/properties/RotationSegment
	a SEGMENTED_ANGLE16
	b MAX_SEGMENT_INDEX
	c NORTH_0
	d EAST_90
	e SOUTH_180
	f WEST_270
	a ()I getMaxSegmentIndex
	a (F)I convertToSegment
	a (I)Ljava/util/Optional; convertToDirection
	a (Lnet/minecraft/core/EnumDirection;)I convertToSegment
	b (I)F convertToDegrees
net/minecraft/world/level/block/state/properties/SculkSensorPhase net/minecraft/world/level/block/state/properties/SculkSensorPhase
	a INACTIVE
	b ACTIVE
	c COOLDOWN
	d name
	e $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/SculkSensorPhase; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/Tilt net/minecraft/world/level/block/state/properties/Tilt
	a NONE
	b UNSTABLE
	c PARTIAL
	d FULL
	e name
	f causesVibration
	g $VALUES
	a ()Z causesVibration
	b ()[Lnet/minecraft/world/level/block/state/properties/Tilt; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/border/BorderStatus net/minecraft/world/level/border/BorderStatus
	a GROWING
	b SHRINKING
	c STATIONARY
	d color
	e $VALUES
	a ()I getColor
	b ()[Lnet/minecraft/world/level/border/BorderStatus; $values
net/minecraft/world/level/border/WorldBorder net/minecraft/world/level/border/WorldBorder
	a listeners
	b damagePerBlock
	c MAX_SIZE
	d MAX_CENTER_COORDINATE
	e DEFAULT_SETTINGS
	f damageSafeZone
	g warningTime
	h warningBlocks
	i centerX
	j centerZ
	k absoluteMaxSize
	l extent
	a ()D getCenterX
	a (D)V setSize
	a (DD)Z isWithinBounds
	a (DDD)Z isWithinBounds
	a (DDJ)V lerpSizeBetween
	a (I)V setAbsoluteMaxSize
	a (Ldha$c;)V applySettings
	a (Lnet/minecraft/core/BlockPosition;)Z isWithinBounds
	a (Lnet/minecraft/world/entity/Entity;)D getDistanceToBorder
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Z isInsideCloseToBorder
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z isWithinBounds
	a (Lnet/minecraft/world/level/border/IWorldBorderListener;)V addListener
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)Z isWithinBounds
	b ()D getCenterZ
	b (D)V setDamageSafeZone
	b (DD)D getDistanceToBorder
	b (DDD)Lnet/minecraft/core/BlockPosition; clampToBounds
	b (I)V setWarningTime
	b (Lnet/minecraft/world/level/border/IWorldBorderListener;)V removeListener
	c ()Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c (D)V setDamagePerBlock
	c (DD)V setCenter
	c (I)V setWarningBlocks
	d ()Lnet/minecraft/world/level/border/BorderStatus; getStatus
	e ()D getMinX
	f ()D getMinZ
	g ()D getMaxX
	h ()D getMaxZ
	i ()D getSize
	j ()J getLerpRemainingTime
	k ()D getLerpTarget
	l ()Ljava/util/List; getListeners
	m ()I getAbsoluteMaxSize
	n ()D getDamageSafeZone
	o ()D getDamagePerBlock
	p ()D getLerpSpeed
	q ()I getWarningTime
	r ()I getWarningBlocks
	s ()V tick
	t ()Ldha$c; createSettings
net/minecraft/world/level/chunk/BulkSectionAccess net/minecraft/world/level/chunk/BulkSectionAccess
	a level
	b acquiredSections
	c lastSection
	d lastSectionKey
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/chunk/ChunkSection; getSection
	b (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
net/minecraft/world/level/chunk/CarvingMask net/minecraft/world/level/chunk/CarvingMask
	a minY
	b mask
	c additionalMask
	a ()[J toArray
	a (III)V set
	a (Ldhe$a;)V setAdditionalMask
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/stream/Stream; stream
	b (III)Z get
	c (III)I getIndex
net/minecraft/world/level/chunk/ChunkGenerator net/minecraft/world/level/chunk/ChunkGenerator
	a CODEC
	b biomeSource
	c featuresPerStep
	d generationSettingsGetter
	a ()Lcom/mojang/serialization/Codec; codec
	a (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/BlockColumn; getBaseColumn
	a (IILnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I getBaseHeight
	a (Ldvo$a;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;JLnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/SectionPosition;)Z tryGenerateStructure
	a (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPosition;)V addDebugScreenInfo
	a (Ljava/util/Set;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;)Lcom/mojang/datafixers/util/Pair; getNearestGeneratedStructure
	a (Ljava/util/Set;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/level/StructureManager;IIIZJLnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement;)Lcom/mojang/datafixers/util/Pair; getNearestGeneratedStructure
	a (Ljava/util/Set;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/level/StructureManager;ZLnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lcom/mojang/datafixers/util/Pair; getStructureGeneratingAt
	a (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; createBiomes
	a (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; fillFromNoise
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeSettingsGeneration; getBiomeGenerationSettings
	a (Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/util/random/WeightedRandomList; getMobsAt
	a (Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/level/levelgen/RandomState;J)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; createState
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;)V createStructures
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;)V spawnOriginalMobs
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)V applyCarvers
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/IChunkAccess;)V buildSurface
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/HolderSet;Lnet/minecraft/core/BlockPosition;IZ)Lcom/mojang/datafixers/util/Pair; findNearestMapStructure
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)V createReferences
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/StructureManager;)V applyBiomeDecoration
	a (Lnet/minecraft/world/level/LevelHeightAccessor;)I getSpawnHeight
	a (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/levelgen/structure/Structure;)I fetchReferences
	a (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)Z tryAddReference
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getWritableArea
	b ()Ljava/util/Optional; getTypeNameForDataFixer
	b (IILnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I getFirstFreeHeight
	c ()Lnet/minecraft/world/level/biome/WorldChunkManager; getBiomeSource
	c (IILnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I getFirstOccupiedHeight
	d ()I getGenDepth
	e ()I getSeaLevel
	f ()I getMinY
net/minecraft/world/level/chunk/ChunkGeneratorStructureState net/minecraft/world/level/chunk/ChunkGeneratorStructureState
	a LOGGER
	b randomState
	c biomeSource
	d levelSeed
	e concentricRingsSeed
	f placementsForStructure
	g ringPositions
	h hasGeneratedPositions
	i possibleStructureSets
	a ()Ljava/util/List; possibleStructureSets
	a (Lnet/minecraft/core/Holder;)Ljava/util/List; getPlacementsForStructure
	a (Lnet/minecraft/core/Holder;III)Z hasStructureChunkInRange
	a (Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;)Ljava/util/concurrent/CompletableFuture; generateRingPositions
	a (Lnet/minecraft/world/level/levelgen/RandomState;JLnet/minecraft/world/level/biome/WorldChunkManager;Ljava/util/stream/Stream;)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; createForFlat
	a (Lnet/minecraft/world/level/levelgen/RandomState;JLnet/minecraft/world/level/biome/WorldChunkManager;Lnet/minecraft/core/HolderLookup;)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; createForNormal
	a (Lnet/minecraft/world/level/levelgen/structure/StructureSet;Lnet/minecraft/world/level/biome/WorldChunkManager;)Z hasBiomesForStructureSet
	a (Lnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;)Ljava/util/List; getRingPositionsFor
	b ()V ensureStructuresGenerated
	c ()Lnet/minecraft/world/level/levelgen/RandomState; randomState
	d ()J getLevelSeed
	e ()V generatePositions
net/minecraft/world/level/chunk/ChunkStatus net/minecraft/world/level/chunk/ChunkStatus
	a MAX_STRUCTURE_DISTANCE
	b POST_FEATURES
	c EMPTY
	d STRUCTURE_STARTS
	e STRUCTURE_REFERENCES
	f BIOMES
	g NOISE
	h SURFACE
	i CARVERS
	j FEATURES
	k INITIALIZE_LIGHT
	l LIGHT
	m SPAWN
	n FULL
	o PRE_FEATURES
	p PASSTHROUGH_LOAD_TASK
	q STATUS_BY_RANGE
	r RANGE_BY_STATUS
	s index
	t parent
	u generationTask
	v loadingTask
	w range
	x hasLoadDependencies
	y chunkType
	z heightmapsAfter
	a ()Ljava/util/List; getStatusList
	a (I)Lnet/minecraft/world/level/chunk/ChunkStatus; getStatusAroundFullChunk
	a (Ljava/lang/String;)Lnet/minecraft/world/level/chunk/ChunkStatus; byName
	a (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$Type;Ldhk$b;)Lnet/minecraft/world/level/chunk/ChunkStatus; register
	a (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$Type;Ldhk$d;)Lnet/minecraft/world/level/chunk/ChunkStatus; registerSimple
	a (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;IZLjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$Type;Ldhk$b;Ldhk$c;)Lnet/minecraft/world/level/chunk/ChunkStatus; register
	a (Ljava/util/concurrent/Executor;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/server/level/LightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; generate
	a (Lnet/minecraft/server/level/LightEngineThreaded;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; initializeLight
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/server/level/LightEngineThreaded;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; load
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;)I getDistance
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;)Z isLighted
	b ()I maxDistance
	b (Lnet/minecraft/server/level/LightEngineThreaded;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lightChunk
	b (Lnet/minecraft/world/level/chunk/ChunkStatus;)Z isOrAfter
	c ()I getIndex
	d ()Lnet/minecraft/world/level/chunk/ChunkStatus; getParent
	e ()I getRange
	f ()Z hasLoadDependencies
	g ()Lnet/minecraft/world/level/chunk/ChunkStatus$Type; getChunkType
	h ()Ljava/util/EnumSet; heightmapsAfter
net/minecraft/world/level/chunk/ProtoChunk net/minecraft/world/level/chunk/ProtoChunk
	n lightEngine
	o status
	p entities
	q carvingMasks
	r belowZeroRetrogen
	s blockTicks
	t fluidTicks
	D ()Ljava/util/Map; getBlockEntities
	E ()Ljava/util/List; getEntities
	F ()Ljava/util/Map; getBlockEntityNbts
	G ()Lnet/minecraft/world/ticks/LevelChunkTicks; unpackBlockTicks
	H ()Lnet/minecraft/world/ticks/LevelChunkTicks; unpackFluidTicks
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Lnet/minecraft/world/level/block/state/IBlockData; setBlockState
	a (Lnet/minecraft/world/entity/Entity;)V addEntity
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;)V setStatus
	a (Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen;)V setBelowZeroRetrogen
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)Lnet/minecraft/world/level/chunk/CarvingMask; getCarvingMask
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;Lnet/minecraft/world/level/chunk/CarvingMask;)V setCarvingMask
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V setStartForStructure
	a (Lnet/minecraft/world/level/lighting/LevelLightEngine;)V setLightEngine
	a (Lnet/minecraft/world/ticks/ProtoChunkTickList;)Lnet/minecraft/world/ticks/LevelChunkTicks; unpackTicks
	a (SI)V addPackedPostProcess
	a (SILnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/core/BlockPosition; unpackOffsetCoordinates
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addEntity
	b (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)Lnet/minecraft/world/level/chunk/CarvingMask; getOrCreateCarvingMask
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	d (Lnet/minecraft/core/BlockPosition;)V removeBlockEntity
	e (Lnet/minecraft/core/BlockPosition;)V markPosForPostprocessing
	g (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/nbt/NBTTagCompound; getBlockEntityNbtForSaving
	j ()Lnet/minecraft/world/level/chunk/ChunkStatus; getStatus
	j (Lnet/minecraft/core/BlockPosition;)S packOffsetCoordinates
	o ()Lnet/minecraft/world/ticks/TickContainerAccess; getBlockTicks
	p ()Lnet/minecraft/world/ticks/TickContainerAccess; getFluidTicks
	q ()Ldhf$a; getTicksForSerialization
	x ()Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; getBelowZeroRetrogen
	z ()Lnet/minecraft/world/level/LevelHeightAccessor; getHeightAccessorForGeneration
net/minecraft/world/level/chunk/SingleValuePalette net/minecraft/world/level/chunk/SingleValuePalette
	a registry
	b value
	c resizeHandler
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (ILnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/DataPaletteExpandable;Ljava/util/List;)Lnet/minecraft/world/level/chunk/DataPalette; create
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/network/PacketDataSerializer;)V read
	b ()I getSize
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	c ()Lnet/minecraft/world/level/chunk/DataPalette; copy
net/minecraft/world/level/chunk/storage/EntityStorage net/minecraft/world/level/chunk/storage/EntityStorage
	a fixerUpper
	b LOGGER
	c ENTITIES_TAG
	d POSITION_TAG
	e level
	f worker
	g emptyChunks
	h entityDeserializerQueue
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/ChunkCoordIntPair; readChunkPos
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/ChunkCoordIntPair;)V writeChunkPos
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; loadEntities
	a (Lnet/minecraft/world/level/entity/ChunkEntities;)V storeEntities
	a (Z)V flush
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; upgradeChunkTag
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/world/level/entity/ChunkEntities; emptyChunk
net/minecraft/world/level/chunk/storage/IOWorker$Priority net/minecraft/world/level/chunk/storage/IOWorker$Priority
	a FOREGROUND
	b BACKGROUND
	c SHUTDOWN
	d $VALUES
	a ()[Lnet/minecraft/world/level/chunk/storage/IOWorker$Priority; $values
net/minecraft/world/level/chunk/storage/IOWorker net/minecraft/world/level/chunk/storage/IOWorker
	a LOGGER
	b shutdownRequested
	c mailbox
	d storage
	e pendingWrites
	f regionCacheForBlender
	g REGION_CACHE_SIZE
	a ()V storePendingChunk
	a (II)Ljava/util/concurrent/CompletableFuture; getOrCreateOldDataForRegion
	a (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; submitTask
	a (Lnet/minecraft/nbt/NBTTagCompound;)Z isOldChunk
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; loadAsync
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)Z isOldChunkAround
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Ldij$a;)V runStore
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/concurrent/CompletableFuture; store
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/StreamTagVisitor;)Ljava/util/concurrent/CompletableFuture; scanChunk
	a (Z)Ljava/util/concurrent/CompletableFuture; synchronize
	b ()V tellStorePending
	b (II)Ljava/util/concurrent/CompletableFuture; createOldDataForRegion
net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer
	b pos
net/minecraft/world/level/chunk/storage/RegionFile net/minecraft/world/level/chunk/storage/RegionFile
	a SECTOR_INTS
	b usedSectors
	c LOGGER
	d SECTOR_BYTES
	e CHUNK_HEADER_SIZE
	f HEADER_OFFSET
	g PADDING_BUFFER
	h EXTERNAL_FILE_EXTENSION
	i EXTERNAL_STREAM_FLAG
	j EXTERNAL_CHUNK_THRESHOLD
	k CHUNK_NOT_PRESENT
	l file
	m externalFileDir
	n version
	o header
	p offsets
	q timestamps
	a ()V flush
	a (B)Z isExternalStreamChunk
	a (I)I getNumSectors
	a (II)I packSectorOffset
	a (Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream; createStream
	a (Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Ldil$b; writeToExternalFile
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/io/DataInputStream; getChunkDataInputStream
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;B)Ljava/io/DataInputStream; createExternalChunkInputStream
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;BLjava/io/InputStream;)Ljava/io/DataInputStream; createChunkInputStream
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Ljava/nio/ByteBuffer;)V write
	b ()I getTimestamp
	b (B)B getExternalChunkVersion
	b (I)I getSectorNumber
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z doesChunkExist
	c ()Ljava/nio/ByteBuffer; createExternalStub
	c (I)I sizeToSectors
	c (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/io/DataOutputStream; getChunkDataOutputStream
	d ()V writeHeader
	d (Lnet/minecraft/world/level/ChunkCoordIntPair;)V clear
	e ()V padToFullSector
	e (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z hasChunk
	f (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/nio/file/Path; getExternalChunkPath
	g (Lnet/minecraft/world/level/ChunkCoordIntPair;)I getOffset
	h (Lnet/minecraft/world/level/ChunkCoordIntPair;)I getOffsetIndex
net/minecraft/world/level/dimension/BuiltinDimensionTypes net/minecraft/world/level/dimension/BuiltinDimensionTypes
	a OVERWORLD
	b NETHER
	c END
	d OVERWORLD_CAVES
	e OVERWORLD_EFFECTS
	f NETHER_EFFECTS
	g END_EFFECTS
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; register
net/minecraft/world/level/entity/ChunkEntities net/minecraft/world/level/entity/ChunkEntities
	a pos
	b entities
	a ()Lnet/minecraft/world/level/ChunkCoordIntPair; getPos
	b ()Ljava/util/stream/Stream; getEntities
	c ()Z isEmpty
net/minecraft/world/level/entity/EntityInLevelCallback net/minecraft/world/level/entity/EntityInLevelCallback
	a NULL
	a ()V onMove
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V onRemove
net/minecraft/world/level/entity/EntityLookup net/minecraft/world/level/entity/EntityLookup
	a LOGGER
	b byId
	c byUuid
	a ()Ljava/lang/Iterable; getAllEntities
	a (I)Lnet/minecraft/world/level/entity/EntityAccess; getEntity
	a (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; getEntity
	a (Lnet/minecraft/world/level/entity/EntityAccess;)V add
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/util/AbortableIterationConsumer;)V getEntities
	b ()I count
	b (Lnet/minecraft/world/level/entity/EntityAccess;)V remove
net/minecraft/world/level/entity/EntitySection net/minecraft/world/level/entity/EntitySection
	a LOGGER
	b storage
	c chunkStatus
	a ()Z isEmpty
	a (Lnet/minecraft/world/level/entity/EntityAccess;)V add
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/util/AbortableIterationConsumer;)Laqn$a; getEntities
	a (Lnet/minecraft/world/level/entity/Visibility;)Lnet/minecraft/world/level/entity/Visibility; updateChunkStatus
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/util/AbortableIterationConsumer;)Laqn$a; getEntities
	b ()Ljava/util/stream/Stream; getEntities
	b (Lnet/minecraft/world/level/entity/EntityAccess;)Z remove
	c ()Lnet/minecraft/world/level/entity/Visibility; getStatus
	d ()I size
net/minecraft/world/level/entity/EntitySectionStorage net/minecraft/world/level/entity/EntitySectionStorage
	a entityClass
	b intialSectionVisibility
	c sections
	d sectionIds
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getAllChunksWithExistingSections
	a (II)Lit/unimi/dsi/fastutil/longs/LongSortedSet; getChunkSections
	a (J)Ljava/util/stream/LongStream; getExistingSectionPositionsInChunk
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/util/AbortableIterationConsumer;)V getEntities
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/util/AbortableIterationConsumer;)V forEachAccessibleNonEmptySection
	b ()I count
	b (J)Ljava/util/stream/Stream; getExistingSectionsInChunk
	b (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/util/AbortableIterationConsumer;)V getEntities
	c (J)Lnet/minecraft/world/level/entity/EntitySection; getOrCreateSection
	d (J)Lnet/minecraft/world/level/entity/EntitySection; getSection
	e (J)V remove
	f (J)J getChunkKeyFromSectionKey
	g (J)Lnet/minecraft/world/level/entity/EntitySection; createSection
net/minecraft/world/level/entity/EntityTickList net/minecraft/world/level/entity/EntityTickList
	a active
	b passive
	c iterated
	a ()V ensureActiveIsNotIterated
	a (Ljava/util/function/Consumer;)V forEach
	a (Lnet/minecraft/world/entity/Entity;)V add
	b (Lnet/minecraft/world/entity/Entity;)V remove
	c (Lnet/minecraft/world/entity/Entity;)Z contains
net/minecraft/world/level/entity/LevelEntityGetterAdapter net/minecraft/world/level/entity/LevelEntityGetterAdapter
	a visibleEntities
	b sectionStorage
	a ()Ljava/lang/Iterable; getAll
	a (I)Lnet/minecraft/world/level/entity/EntityAccess; get
	a (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; get
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/util/AbortableIterationConsumer;)V get
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/util/AbortableIterationConsumer;)V get
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Consumer;)V get
net/minecraft/world/level/entity/PersistentEntitySectionManager net/minecraft/world/level/entity/PersistentEntitySectionManager
	a LOGGER
	b knownUuids
	c callbacks
	d permanentStorage
	e visibleEntityStorage
	f sectionStorage
	g entityGetter
	h chunkVisibility
	i chunkLoadStatuses
	j chunksToUnload
	k loadingInbox
	a ()V tick
	a (J)Z areEntitiesLoaded
	a (JLjava/util/function/Consumer;)Z storeChunkSections
	a (JLnet/minecraft/world/level/entity/EntitySection;)V removeSectionIfEmpty
	a (Ljava/io/Writer;)V dumpSections
	a (Ljava/util/UUID;)Z isLoaded
	a (Ljava/util/stream/Stream;)V addLegacyChunkEntities
	a (Lnet/minecraft/core/BlockPosition;)Z canPositionTick
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z canPositionTick
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/server/level/FullChunkStatus;)V updateChunkStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/entity/Visibility;)V updateChunkStatus
	a (Lnet/minecraft/world/level/entity/EntityAccess;)Z addNewEntity
	a (Lnet/minecraft/world/level/entity/EntityAccess;Lnet/minecraft/world/level/entity/Visibility;)Lnet/minecraft/world/level/entity/Visibility; getEffectiveStatus
	a (Lnet/minecraft/world/level/entity/EntityAccess;Z)Z addEntity
	b ()V autoSave
	b (J)V ensureChunkQueuedForLoad
	b (Ljava/util/stream/Stream;)V addWorldGenChunkEntities
	b (Lnet/minecraft/world/level/entity/EntityAccess;)Z addEntityUuid
	c ()V saveAll
	c (J)V requestChunkLoad
	c (Lnet/minecraft/world/level/entity/EntityAccess;)V startTicking
	d ()Lnet/minecraft/world/level/entity/LevelEntityGetter; getEntityGetter
	d (J)Z processChunkUnload
	d (Lnet/minecraft/world/level/entity/EntityAccess;)V stopTicking
	e ()Ljava/lang/String; gatherStats
	e (Lnet/minecraft/world/level/entity/EntityAccess;)V startTracking
	f ()V processUnloads
	f (Lnet/minecraft/world/level/entity/EntityAccess;)V stopTracking
	g ()V processPendingLoads
	g (Lnet/minecraft/world/level/entity/EntityAccess;)V unloadEntity
	h ()Lit/unimi/dsi/fastutil/longs/LongSet; getAllChunksToSave
net/minecraft/world/level/entity/Visibility net/minecraft/world/level/entity/Visibility
	a HIDDEN
	b TRACKED
	c TICKING
	d accessible
	e ticking
	f $VALUES
	a ()Z isTicking
	a (Lnet/minecraft/server/level/FullChunkStatus;)Lnet/minecraft/world/level/entity/Visibility; fromFullChunkStatus
	b ()Z isAccessible
	c ()[Lnet/minecraft/world/level/entity/Visibility; $values
net/minecraft/world/level/gameevent/BlockPositionSource net/minecraft/world/level/gameevent/BlockPositionSource
	a CODEC
	c pos
	a ()Lnet/minecraft/world/level/gameevent/PositionSourceType; getType
	a (Lnet/minecraft/world/level/World;)Ljava/util/Optional; getPosition
net/minecraft/world/level/gameevent/DynamicGameEventListener net/minecraft/world/level/gameevent/DynamicGameEventListener
	a listener
	b lastSection
	a ()Lnet/minecraft/world/level/gameevent/GameEventListener; getListener
	a (Lnet/minecraft/server/level/WorldServer;)V add
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/SectionPosition;Ljava/util/function/Consumer;)V ifChunkExists
	b (Lnet/minecraft/server/level/WorldServer;)V remove
	c (Lnet/minecraft/server/level/WorldServer;)V move
net/minecraft/world/level/gameevent/EntityPositionSource net/minecraft/world/level/gameevent/EntityPositionSource
	a CODEC
	c entityOrUuidOrId
	d yOffset
	a ()Lnet/minecraft/world/level/gameevent/PositionSourceType; getType
	a (Lnet/minecraft/world/level/World;)Ljava/util/Optional; getPosition
	b ()Ljava/util/UUID; getUuid
	b (Lnet/minecraft/world/level/World;)V resolveEntity
	c ()I getId
net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry
	b listeners
	c listenersToRemove
	d listenersToAdd
	e processing
	f level
	g sectionY
	h onEmptyAction
	a ()Z isEmpty
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/level/gameevent/GameEventListener;)Ljava/util/Optional; getPostableListenerPosition
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;Ldjt$a;Ldjw$a;)Z visitInRangeListeners
	a (Lnet/minecraft/world/level/gameevent/GameEventListener;)V register
	b (Lnet/minecraft/world/level/gameevent/GameEventListener;)V unregister
net/minecraft/world/level/gameevent/GameEvent net/minecraft/world/level/gameevent/GameEvent
	A HIT_GROUND
	B INSTRUMENT_PLAY
	C ITEM_INTERACT_FINISH
	D ITEM_INTERACT_START
	E JUKEBOX_PLAY
	F JUKEBOX_STOP_PLAY
	G LIGHTNING_STRIKE
	H NOTE_BLOCK_PLAY
	I PRIME_FUSE
	J PROJECTILE_LAND
	K PROJECTILE_SHOOT
	L SCULK_SENSOR_TENDRILS_CLICKING
	M SHEAR
	N SHRIEK
	O SPLASH
	P STEP
	Q SWIM
	R TELEPORT
	S UNEQUIP
	T RESONATE_1
	U RESONATE_2
	V RESONATE_3
	W RESONATE_4
	X RESONATE_5
	Y RESONATE_6
	Z RESONATE_7
	a BLOCK_ACTIVATE
	aa RESONATE_8
	ab RESONATE_9
	ac RESONATE_10
	ad RESONATE_11
	ae RESONATE_12
	af RESONATE_13
	ag RESONATE_14
	ah RESONATE_15
	ai DEFAULT_NOTIFICATION_RADIUS
	aj notificationRadius
	ak builtInRegistryHolder
	b BLOCK_ATTACH
	c BLOCK_CHANGE
	d BLOCK_CLOSE
	e BLOCK_DEACTIVATE
	f BLOCK_DESTROY
	g BLOCK_DETACH
	h BLOCK_OPEN
	i BLOCK_PLACE
	j CONTAINER_CLOSE
	k CONTAINER_OPEN
	l DRINK
	m EAT
	n ELYTRA_GLIDE
	o ENTITY_DAMAGE
	p ENTITY_DIE
	q ENTITY_DISMOUNT
	r ENTITY_INTERACT
	s ENTITY_MOUNT
	t ENTITY_PLACE
	u ENTITY_ACTION
	v EQUIP
	w EXPLODE
	x FLAP
	y FLUID_PICKUP
	z FLUID_PLACE
	a ()I getNotificationRadius
	a (Ljava/lang/String;)Lnet/minecraft/world/level/gameevent/GameEvent; register
	a (Ljava/lang/String;I)Lnet/minecraft/world/level/gameevent/GameEvent; register
	a (Lnet/minecraft/tags/TagKey;)Z is
	b ()Lhe$c; builtInRegistryHolder
net/minecraft/world/level/gameevent/GameEventDispatcher net/minecraft/world/level/gameevent/GameEventDispatcher
	a level
	a (Ljava/util/List;)V handleGameEventMessagesInQueue
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;Ldjt$a;)V post
net/minecraft/world/level/gameevent/GameEventListenerRegistry net/minecraft/world/level/gameevent/GameEventListenerRegistry
	a NOOP
	a ()Z isEmpty
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;Ldjt$a;Ldjw$a;)Z visitInRangeListeners
	a (Lnet/minecraft/world/level/gameevent/GameEventListener;)V register
	b (Lnet/minecraft/world/level/gameevent/GameEventListener;)V unregister
net/minecraft/world/level/gameevent/PositionSource net/minecraft/world/level/gameevent/PositionSource
	b CODEC
	a ()Lnet/minecraft/world/level/gameevent/PositionSourceType; getType
	a (Lnet/minecraft/world/level/World;)Ljava/util/Optional; getPosition
net/minecraft/world/level/gameevent/PositionSourceType net/minecraft/world/level/gameevent/PositionSourceType
	a BLOCK
	b ENTITY
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lnet/minecraft/world/level/gameevent/PositionSourceType;)Lnet/minecraft/world/level/gameevent/PositionSourceType; register
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/gameevent/PositionSource;)V write
	a (Lnet/minecraft/world/level/gameevent/PositionSource;Lnet/minecraft/network/PacketDataSerializer;)V toNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/gameevent/PositionSource; read
	c (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/gameevent/PositionSource; fromNetwork
net/minecraft/world/level/gameevent/vibrations/VibrationInfo net/minecraft/world/level/gameevent/vibrations/VibrationInfo
	a CODEC
	b gameEvent
	c distance
	d pos
	e uuid
	f projectileOwnerUuid
	g entity
	a ()Lnet/minecraft/world/level/gameevent/GameEvent; gameEvent
	a (Lnet/minecraft/server/level/WorldServer;)Ljava/util/Optional; getEntity
	a (Lnet/minecraft/world/entity/Entity;)Ljava/util/UUID; getProjectileOwner
	b ()F distance
	b (Lnet/minecraft/server/level/WorldServer;)Ljava/util/Optional; getProjectileOwner
	c ()Lnet/minecraft/world/phys/Vec3D; pos
	d ()Ljava/util/UUID; uuid
	e ()Ljava/util/UUID; projectileOwnerUuid
	f ()Lnet/minecraft/world/entity/Entity; entity
net/minecraft/world/level/gameevent/vibrations/VibrationSelector net/minecraft/world/level/gameevent/vibrations/VibrationSelector
	a CODEC
	b currentVibrationData
	a ()V startOver
	a (J)Ljava/util/Optional; chosenCandidate
	a (Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo;J)V addCandidate
	b (Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo;J)Z shouldReplaceVibration
net/minecraft/world/level/gameevent/vibrations/VibrationSystem net/minecraft/world/level/gameevent/vibrations/VibrationSystem
	d_ RESONANCE_EVENTS
	e_ VIBRATION_FREQUENCY_FOR_EVENT
	a_ (FI)I getRedstoneStrengthForDistance
	a_ (Lnet/minecraft/world/level/gameevent/GameEvent;)I getGameEventFrequency
	b (I)Lnet/minecraft/world/level/gameevent/GameEvent; getResonanceEventByFrequency
	gf ()Ldkc$a; getVibrationData
	gg ()Ldkc$d; getVibrationUser
net/minecraft/world/level/levelgen/Beardifier net/minecraft/world/level/levelgen/Beardifier
	a BEARD_KERNEL_RADIUS
	f BEARD_KERNEL_SIZE
	g BEARD_KERNEL
	h pieceIterator
	i junctionIterator
	a ()D minValue
	a (I)Z isInKernelRange
	a (IDI)D computeBeardContribution
	a (III)D getBuryContribution
	a (IIII)D getBeardContribution
	a (Ldkl$b;)D compute
	a (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/world/level/levelgen/Beardifier; forStructuresInChunk
	b ()D maxValue
	b (III)D computeBeardContribution
net/minecraft/world/level/levelgen/BelowZeroRetrogen net/minecraft/world/level/levelgen/BelowZeroRetrogen
	a CODEC
	b UPGRADE_HEIGHT_ACCESSOR
	c EMPTY
	d BITSET_CODEC
	e NON_EMPTY_CHUNK_STATUS
	f RETAINED_RETROGEN_BIOMES
	g targetStatus
	h missingBedrock
	a ()Lnet/minecraft/world/level/chunk/ChunkStatus; targetStatus
	a (II)Z hasBedrockHole
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; read
	a (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/chunk/IChunkAccess;)Lnet/minecraft/world/level/biome/BiomeResolver; getBiomeResolver
	a (Lnet/minecraft/world/level/chunk/ProtoChunk;)V replaceOldBedrock
	b ()Z hasBedrockHoles
	b (Lnet/minecraft/world/level/chunk/ProtoChunk;)V applyBedrockMask
net/minecraft/world/level/levelgen/BitRandomSource net/minecraft/world/level/levelgen/BitRandomSource
	b FLOAT_MULTIPLIER
	c DOUBLE_MULTIPLIER
	a (I)I nextInt
	c (I)I next
	f ()I nextInt
	g ()J nextLong
	h ()Z nextBoolean
	i ()F nextFloat
	j ()D nextDouble
net/minecraft/world/level/levelgen/DensityFunction net/minecraft/world/level/levelgen/DensityFunction
	b DIRECT_CODEC
	c CODEC
	d HOLDER_HELPER_CODEC
	a ()D minValue
	a (DD)Lnet/minecraft/world/level/levelgen/DensityFunction; clamp
	a (Ldkl$b;)D compute
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdkl$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	d ()Lnet/minecraft/world/level/levelgen/DensityFunction; abs
	e ()Lnet/minecraft/world/level/levelgen/DensityFunction; square
	f ()Lnet/minecraft/world/level/levelgen/DensityFunction; cube
	g ()Lnet/minecraft/world/level/levelgen/DensityFunction; halfNegative
	h ()Lnet/minecraft/world/level/levelgen/DensityFunction; quarterNegative
	i ()Lnet/minecraft/world/level/levelgen/DensityFunction; squeeze
net/minecraft/world/level/levelgen/DensityFunctions net/minecraft/world/level/levelgen/DensityFunctions
	a MAX_REASONABLE_NOISE_VALUE
	b DIRECT_CODEC
	c CODEC
	d NOISE_VALUE_CODEC
	a ()Lnet/minecraft/world/level/levelgen/DensityFunction; zero
	a (D)Lnet/minecraft/world/level/levelgen/DensityFunction; constant
	a (IIDD)Lnet/minecraft/world/level/levelgen/DensityFunction; yClampedGradient
	a (J)Lnet/minecraft/world/level/levelgen/DensityFunction; endIslands
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; singleArgumentCodec
	a (Lcom/mojang/serialization/MapCodec;)Lnet/minecraft/util/KeyDispatchDataCodec; makeCodec
	a (Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; doubleFunctionArgumentCodec
	a (Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; singleFunctionArgumentCodec
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; noise
	a (Lnet/minecraft/core/Holder;D)Lnet/minecraft/world/level/levelgen/DensityFunction; noise
	a (Lnet/minecraft/core/Holder;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; mappedNoise
	a (Lnet/minecraft/core/Holder;DDD)Lnet/minecraft/world/level/levelgen/DensityFunction; mappedNoise
	a (Lnet/minecraft/core/Holder;DDDD)Lnet/minecraft/world/level/levelgen/DensityFunction; mappedNoise
	a (Lnet/minecraft/core/IRegistry;)Lcom/mojang/serialization/Codec; bootstrap
	a (Lnet/minecraft/core/IRegistry;Ljava/lang/String;Lnet/minecraft/util/KeyDispatchDataCodec;)Lcom/mojang/serialization/Codec; register
	a (Lnet/minecraft/util/CubicSpline;)Lnet/minecraft/world/level/levelgen/DensityFunction; spline
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; interpolated
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; mapFromUnitTo
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;DDLnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; rangeChoice
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;DLnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; lerp
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Ldkm$k$a;)Lnet/minecraft/world/level/levelgen/DensityFunction; map
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/core/Holder;Ldkm$z$a;)Lnet/minecraft/world/level/levelgen/DensityFunction; weirdScaledSampler
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; add
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;DLnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; shiftedNoise2d
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; lerp
	b ()Lnet/minecraft/world/level/levelgen/DensityFunction; blendAlpha
	b (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; shiftA
	b (Lnet/minecraft/core/Holder;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; noise
	b (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; flatCache
	b (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; mul
	c ()Lnet/minecraft/world/level/levelgen/DensityFunction; blendOffset
	c (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; shiftB
	c (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; cache2d
	c (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; min
	d (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; shift
	d (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; cacheOnce
	d (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; max
	e (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; cacheAllInCell
	f (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; blendDensity
net/minecraft/world/level/levelgen/GeodeBlockSettings net/minecraft/world/level/levelgen/GeodeBlockSettings
	a fillingProvider
	b innerLayerProvider
	c alternateInnerLayerProvider
	d middleLayerProvider
	e outerLayerProvider
	f innerPlacements
	g cannotReplace
	h invalidBlocks
	i CODEC
net/minecraft/world/level/levelgen/GeodeCrackSettings net/minecraft/world/level/levelgen/GeodeCrackSettings
	a CODEC
	b generateCrackChance
	c baseCrackSize
	d crackPointOffset
net/minecraft/world/level/levelgen/GeodeLayerSettings net/minecraft/world/level/levelgen/GeodeLayerSettings
	a CODEC
	b filling
	c innerLayer
	d middleLayer
	e outerLayer
	f LAYER_RANGE
net/minecraft/world/level/levelgen/LegacyRandomSource net/minecraft/world/level/levelgen/LegacyRandomSource
	d MODULUS_BITS
	e MODULUS_MASK
	f MULTIPLIER
	g INCREMENT
	h seed
	i gaussianSource
	b (J)V setSeed
	c (I)I next
	d ()Lnet/minecraft/util/RandomSource; fork
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; forkPositional
	k ()D nextGaussian
net/minecraft/world/level/levelgen/MarsagliaPolarGaussian net/minecraft/world/level/levelgen/MarsagliaPolarGaussian
	a randomSource
	b nextNextGaussian
	c haveNextNextGaussian
	a ()V reset
	b ()D nextGaussian
net/minecraft/world/level/levelgen/NoiseChunk net/minecraft/world/level/levelgen/NoiseChunk
	A cellStartBlockX
	B cellStartBlockY
	C cellStartBlockZ
	D inCellX
	E inCellY
	F inCellZ
	G interpolationCounter
	H arrayInterpolationCounter
	I arrayIndex
	J sliceFillingContextProvider
	a noiseSettings
	b cellCountXZ
	c cellCountY
	d cellNoiseMinY
	e firstCellX
	f firstCellZ
	g firstNoiseX
	h firstNoiseZ
	i interpolators
	j cellCaches
	k wrapped
	l preliminarySurfaceLevel
	m aquifer
	n initialDensityNoJaggedness
	o blockStateRule
	p blender
	q blendAlpha
	r blendOffset
	s beardifier
	t lastBlendingDataPos
	u lastBlendingOutput
	v noiseSizeXZ
	w cellWidth
	x cellHeight
	y interpolating
	z fillingCell
	a ()I blockX
	a (I)Ldkl$b; forIndex
	a (ID)V updateForY
	a (II)I preliminarySurfaceLevel
	a (J)I computePreliminarySurfaceLevel
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/RandomState;Ldkm$c;Lnet/minecraft/world/level/levelgen/GeneratorSettingBase;Ldke$a;Lnet/minecraft/world/level/levelgen/blending/Blender;)Lnet/minecraft/world/level/levelgen/NoiseChunk; forChunk
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; wrap
	a (Lnet/minecraft/world/level/levelgen/NoiseRouter;Ljava/util/List;)Lnet/minecraft/world/level/biome/Climate$Sampler; cachedClimateSampler
	a (ZI)V fillSlice
	a ([DLnet/minecraft/world/level/levelgen/DensityFunction;)V fillAllDirectly
	b ()I blockY
	b (I)V advanceCellX
	b (ID)V updateForX
	b (II)V selectCellYZ
	b (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; wrapNew
	c ()I blockZ
	c (I)Lnet/minecraft/world/level/levelgen/NoiseChunk; forIndex
	c (ID)V updateForZ
	c (II)Ldlu$a; getOrComputeBlendingOutput
	d ()Lnet/minecraft/world/level/levelgen/blending/Blender; getBlender
	e ()Lnet/minecraft/world/level/block/state/IBlockData; getInterpolatedState
	f ()V initializeForFirstCellX
	g ()V stopInterpolation
	h ()V swapSlices
	i ()Lnet/minecraft/world/level/levelgen/Aquifer; aquifer
	j ()I cellWidth
	k ()I cellHeight
net/minecraft/world/level/levelgen/NoiseRouter net/minecraft/world/level/levelgen/NoiseRouter
	a CODEC
	b barrierNoise
	c fluidLevelFloodednessNoise
	d fluidLevelSpreadNoise
	e lavaNoise
	f temperature
	g vegetation
	h continents
	i erosion
	j depth
	k ridges
	l initialDensityWithoutJaggedness
	m finalDensity
	n veinToggle
	o veinRidged
	p veinGap
	a ()Lnet/minecraft/world/level/levelgen/DensityFunction; barrierNoise
	a (Ldkl$f;)Lnet/minecraft/world/level/levelgen/NoiseRouter; mapAll
	a (Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; field
	b ()Lnet/minecraft/world/level/levelgen/DensityFunction; fluidLevelFloodednessNoise
	c ()Lnet/minecraft/world/level/levelgen/DensityFunction; fluidLevelSpreadNoise
	d ()Lnet/minecraft/world/level/levelgen/DensityFunction; lavaNoise
	e ()Lnet/minecraft/world/level/levelgen/DensityFunction; temperature
	f ()Lnet/minecraft/world/level/levelgen/DensityFunction; vegetation
	g ()Lnet/minecraft/world/level/levelgen/DensityFunction; continents
	h ()Lnet/minecraft/world/level/levelgen/DensityFunction; erosion
	i ()Lnet/minecraft/world/level/levelgen/DensityFunction; depth
	j ()Lnet/minecraft/world/level/levelgen/DensityFunction; ridges
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; initialDensityWithoutJaggedness
	l ()Lnet/minecraft/world/level/levelgen/DensityFunction; finalDensity
	m ()Lnet/minecraft/world/level/levelgen/DensityFunction; veinToggle
	n ()Lnet/minecraft/world/level/levelgen/DensityFunction; veinRidged
	o ()Lnet/minecraft/world/level/levelgen/DensityFunction; veinGap
net/minecraft/world/level/levelgen/NoiseRouterData net/minecraft/world/level/levelgen/NoiseRouterData
	A BASE_3D_NOISE_END
	B SLOPED_CHEESE
	C OFFSET_LARGE
	D FACTOR_LARGE
	E JAGGEDNESS_LARGE
	F DEPTH_LARGE
	G SLOPED_CHEESE_LARGE
	H OFFSET_AMPLIFIED
	I FACTOR_AMPLIFIED
	J JAGGEDNESS_AMPLIFIED
	K DEPTH_AMPLIFIED
	L SLOPED_CHEESE_AMPLIFIED
	M SLOPED_CHEESE_END
	N SPAGHETTI_ROUGHNESS_FUNCTION
	O ENTRANCES
	P NOODLE
	Q PILLARS
	R SPAGHETTI_2D_THICKNESS_MODULATOR
	S SPAGHETTI_2D
	a GLOBAL_OFFSET
	b ISLAND_CHUNK_DISTANCE
	c ISLAND_CHUNK_DISTANCE_SQR
	d CONTINENTS
	e EROSION
	f RIDGES
	g RIDGES_FOLDED
	h OFFSET
	i FACTOR
	j JAGGEDNESS
	k DEPTH
	l CONTINENTS_LARGE
	m EROSION_LARGE
	n ORE_THICKNESS
	o VEININESS_FREQUENCY
	p NOODLE_SPACING_AND_STRAIGHTNESS
	q SURFACE_DENSITY_THRESHOLD
	r CHEESE_NOISE_TARGET
	s BLENDING_FACTOR
	t BLENDING_JAGGEDNESS
	u ZERO
	v Y
	w SHIFT_X
	x SHIFT_Z
	y BASE_3D_NOISE_OVERWORLD
	z BASE_3D_NOISE_NETHER
	a ()Lnet/minecraft/world/level/levelgen/NoiseRouter; none
	a (F)F peaksAndValleys
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; end
	a (Lnet/minecraft/core/HolderGetter;II)Lnet/minecraft/world/level/levelgen/DensityFunction; slideNetherLike
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; nether
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; underground
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZ)Lnet/minecraft/world/level/levelgen/NoiseRouter; overworld
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/DensityFunction; getFunction
	a (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/core/Holder; bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/core/Holder;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Z)V registerTerrainNoises
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; registerAndWrap
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; peaksAndValleys
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;II)Lnet/minecraft/world/level/levelgen/DensityFunction; slideEndLike
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;IIIIDIID)Lnet/minecraft/world/level/levelgen/DensityFunction; slide
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; splineWithBlending
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;III)Lnet/minecraft/world/level/levelgen/DensityFunction; yLimitedInterpolatable
	a (ZLnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; slideOverworld
	b (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; spaghettiRoughnessFunction
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; caves
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/NoiseRouter; noNewCaves
	b (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; postProcess
	b (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; noiseGradientDensity
	c (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; pillars
	c (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; floatingIslands
	c (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; slideEnd
	d (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; entrances
	e (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; noodle
	f (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; spaghetti2D
net/minecraft/world/level/levelgen/NoiseSettings net/minecraft/world/level/levelgen/NoiseSettings
	a CODEC
	b OVERWORLD_NOISE_SETTINGS
	c NETHER_NOISE_SETTINGS
	d END_NOISE_SETTINGS
	e CAVES_NOISE_SETTINGS
	f FLOATING_ISLANDS_NOISE_SETTINGS
	g minY
	h height
	i noiseSizeHorizontal
	j noiseSizeVertical
	a ()I getCellHeight
	a (IIII)Lnet/minecraft/world/level/levelgen/NoiseSettings; create
	a (Lnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/levelgen/NoiseSettings; clampToHeightAccessor
	a (Lnet/minecraft/world/level/levelgen/NoiseSettings;)Lcom/mojang/serialization/DataResult; guardY
	b ()I getCellWidth
	c ()I minY
	d ()I height
	e ()I noiseSizeHorizontal
	f ()I noiseSizeVertical
net/minecraft/world/level/levelgen/Noises net/minecraft/world/level/levelgen/Noises
	A SPAGHETTI_ROUGHNESS_MODULATOR
	B CAVE_ENTRANCE
	C CAVE_LAYER
	D CAVE_CHEESE
	E ORE_VEININESS
	F ORE_VEIN_A
	G ORE_VEIN_B
	H ORE_GAP
	I NOODLE
	J NOODLE_THICKNESS
	K NOODLE_RIDGE_A
	L NOODLE_RIDGE_B
	M JAGGED
	N SURFACE
	O SURFACE_SECONDARY
	P CLAY_BANDS_OFFSET
	Q BADLANDS_PILLAR
	R BADLANDS_PILLAR_ROOF
	S BADLANDS_SURFACE
	T ICEBERG_PILLAR
	U ICEBERG_PILLAR_ROOF
	V ICEBERG_SURFACE
	W SWAMP
	X CALCITE
	Y GRAVEL
	Z POWDER_SNOW
	a TEMPERATURE
	aa PACKED_ICE
	ab ICE
	ac SOUL_SAND_LAYER
	ad GRAVEL_LAYER
	ae PATCH
	af NETHERRACK
	ag NETHER_WART
	ah NETHER_STATE_SELECTOR
	b VEGETATION
	c CONTINENTALNESS
	d EROSION
	e TEMPERATURE_LARGE
	f VEGETATION_LARGE
	g CONTINENTALNESS_LARGE
	h EROSION_LARGE
	i RIDGE
	j SHIFT
	k AQUIFER_BARRIER
	l AQUIFER_FLUID_LEVEL_FLOODEDNESS
	m AQUIFER_LAVA
	n AQUIFER_FLUID_LEVEL_SPREAD
	o PILLAR
	p PILLAR_RARENESS
	q PILLAR_THICKNESS
	r SPAGHETTI_2D
	s SPAGHETTI_2D_ELEVATION
	t SPAGHETTI_2D_MODULATOR
	u SPAGHETTI_2D_THICKNESS
	v SPAGHETTI_3D_1
	w SPAGHETTI_3D_2
	x SPAGHETTI_3D_RARITY
	y SPAGHETTI_3D_THICKNESS
	z SPAGHETTI_ROUGHNESS
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal; instantiate
net/minecraft/world/level/levelgen/OreVeinifier net/minecraft/world/level/levelgen/OreVeinifier
	a VEININESS_THRESHOLD
	b EDGE_ROUNDOFF_BEGIN
	c MAX_EDGE_ROUNDOFF
	d VEIN_SOLIDNESS
	e MIN_RICHNESS
	f MAX_RICHNESS
	g MAX_RICHNESS_THRESHOLD
	h CHANCE_OF_RAW_ORE_BLOCK
	i SKIP_ORE_IF_GAP_NOISE_IS_BELOW
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;)Ldkw$c; create
net/minecraft/world/level/levelgen/RandomState net/minecraft/world/level/levelgen/RandomState
	a random
	b noises
	c router
	d sampler
	e surfaceSystem
	f aquiferRandom
	g oreRandom
	h noiseIntances
	i positionalRandoms
	a ()Lnet/minecraft/world/level/levelgen/NoiseRouter; router
	a (Lhf$a;Lnet/minecraft/resources/ResourceKey;J)Lnet/minecraft/world/level/levelgen/RandomState; create
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; getOrCreateRandomFactory
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal; getOrCreateNoise
	a (Lnet/minecraft/world/level/levelgen/GeneratorSettingBase;Lnet/minecraft/core/HolderGetter;J)Lnet/minecraft/world/level/levelgen/RandomState; create
	b ()Lnet/minecraft/world/level/biome/Climate$Sampler; sampler
	c ()Lnet/minecraft/world/level/levelgen/SurfaceSystem; surfaceSystem
	d ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; aquiferRandom
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; oreRandom
net/minecraft/world/level/levelgen/RandomSupport net/minecraft/world/level/levelgen/RandomSupport
	a GOLDEN_RATIO_64
	b SILVER_RATIO_64
	c MD5_128
	d SEED_UNIQUIFIER
	a ()J generateUniqueSeed
	a (J)J mixStafford13
	a (Ljava/lang/String;)Ldlh$a; seedFromHashOf
	b (J)Ldlh$a; upgradeSeedTo128bitUnmixed
	c (J)Ldlh$a; upgradeSeedTo128bit
net/minecraft/world/level/levelgen/SingleThreadedRandomSource net/minecraft/world/level/levelgen/SingleThreadedRandomSource
	d MODULUS_BITS
	e MODULUS_MASK
	f MULTIPLIER
	g INCREMENT
	h seed
	i gaussianSource
	b (J)V setSeed
	c (I)I next
	d ()Lnet/minecraft/util/RandomSource; fork
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; forkPositional
	k ()D nextGaussian
net/minecraft/world/level/levelgen/SurfaceRules net/minecraft/world/level/levelgen/SurfaceRules
	a ON_FLOOR
	b UNDER_FLOOR
	c DEEP_UNDER_FLOOR
	d VERY_DEEP_UNDER_FLOOR
	e ON_CEILING
	f UNDER_CEILING
	a ()Ldlj$f; steep
	a (II)Ldlj$f; waterBlockCheck
	a (IZILnet/minecraft/world/level/levelgen/placement/CaveSurface;)Ldlj$f; stoneDepthCheck
	a (IZLnet/minecraft/world/level/levelgen/placement/CaveSurface;)Ldlj$f; stoneDepthCheck
	a (Ldlj$f;)Ldlj$f; not
	a (Ldlj$f;Ldlj$o;)Ldlj$o; ifTrue
	a (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Ldlj$f; verticalGradient
	a (Ljava/util/List;)Ldlj$c; isBiome
	a (Lnet/minecraft/core/IRegistry;Ljava/lang/String;Lnet/minecraft/util/KeyDispatchDataCodec;)Lcom/mojang/serialization/Codec; register
	a (Lnet/minecraft/resources/ResourceKey;D)Ldlj$f; noiseCondition
	a (Lnet/minecraft/resources/ResourceKey;DD)Ldlj$f; noiseCondition
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Ldlj$o; state
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Ldlj$f; yBlockCheck
	a ([Ldlj$o;)Ldlj$o; sequence
	a ([Lnet/minecraft/resources/ResourceKey;)Ldlj$f; isBiome
	b ()Ldlj$f; hole
	b (II)Ldlj$f; waterStartCheck
	b (Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Ldlj$f; yStartCheck
	c ()Ldlj$f; abovePreliminarySurface
	d ()Ldlj$f; temperature
	e ()Ldlj$o; bandlands
net/minecraft/world/level/levelgen/SurfaceSystem net/minecraft/world/level/levelgen/SurfaceSystem
	a WHITE_TERRACOTTA
	b ORANGE_TERRACOTTA
	c TERRACOTTA
	d YELLOW_TERRACOTTA
	e BROWN_TERRACOTTA
	f RED_TERRACOTTA
	g LIGHT_GRAY_TERRACOTTA
	h PACKED_ICE
	i SNOW_BLOCK
	j defaultBlock
	k seaLevel
	l clayBands
	m clayBandsOffsetNoise
	n badlandsPillarNoise
	o badlandsPillarRoofNoise
	p badlandsSurfaceNoise
	q icebergPillarNoise
	r icebergPillarRoofNoise
	s icebergSurfaceNoise
	t noiseRandom
	u surfaceNoise
	v surfaceSecondaryNoise
	a (II)I getSurfaceDepth
	a (III)Lnet/minecraft/world/level/block/state/IBlockData; getBand
	a (ILnet/minecraft/world/level/biome/BiomeBase;Lnet/minecraft/world/level/chunk/BlockColumn;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;III)V frozenOceanExtension
	a (Ldlj$o;Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/core/BlockPosition;Z)Ljava/util/Optional; topMaterial
	a (Lnet/minecraft/util/RandomSource;)[Lnet/minecraft/world/level/block/state/IBlockData; generateBands
	a (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/IBlockData;ILnet/minecraft/world/level/block/state/IBlockData;)V makeBands
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isStone
	a (Lnet/minecraft/world/level/chunk/BlockColumn;IIILnet/minecraft/world/level/LevelHeightAccessor;)V erodedBadlandsExtension
	a (Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/core/IRegistry;ZLnet/minecraft/world/level/levelgen/WorldGenerationContext;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseChunk;Ldlj$o;)V buildSurface
	b (II)D getSurfaceSecondary
net/minecraft/world/level/levelgen/ThreadSafeLegacyRandomSource net/minecraft/world/level/levelgen/ThreadSafeLegacyRandomSource
	d MODULUS_BITS
	e MODULUS_MASK
	f MULTIPLIER
	g INCREMENT
	h seed
	i gaussianSource
	b (J)V setSeed
	c (I)I next
	d ()Lnet/minecraft/util/RandomSource; fork
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; forkPositional
	k ()D nextGaussian
net/minecraft/world/level/levelgen/VerticalAnchor net/minecraft/world/level/levelgen/VerticalAnchor
	a CODEC
	b BOTTOM
	c TOP
	a ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; bottom
	a (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; absolute
	a (Lcom/mojang/datafixers/util/Either;)Lnet/minecraft/world/level/levelgen/VerticalAnchor; merge
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lcom/mojang/datafixers/util/Either; split
	a (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I resolveY
	b ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; top
	b (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; aboveBottom
	c (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; belowTop
net/minecraft/world/level/levelgen/WorldDimensions net/minecraft/world/level/levelgen/WorldDimensions
	a CODEC
	b dimensions
	c BUILTIN_ORDER
	d VANILLA_DIMENSION_COUNT
	a ()Lnet/minecraft/world/level/chunk/ChunkGenerator; overworld
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; keysInOrder
	a (Lnet/minecraft/core/IRegistry;)Ldln$b; bake
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/IRegistry; withOverworld
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/core/IRegistry;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/IRegistry; withOverworld
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/world/level/levelgen/WorldDimensions; replaceOverworldGenerator
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; get
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/dimension/WorldDimension;)Lcom/mojang/serialization/Lifecycle; checkStability
	a (Lnet/minecraft/world/level/dimension/WorldDimension;)Z isStableOverworld
	b ()Lcom/google/common/collect/ImmutableSet; levels
	b (Lnet/minecraft/core/IRegistry;)Leck$a; specialWorldProperty
	b (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/dimension/WorldDimension;)Z isVanillaLike
	b (Lnet/minecraft/world/level/dimension/WorldDimension;)Z isStableNether
	c ()Z isDebug
	c (Lnet/minecraft/world/level/dimension/WorldDimension;)Z isStableEnd
	d ()Lnet/minecraft/core/IRegistry; dimensions
net/minecraft/world/level/levelgen/WorldGenerationContext net/minecraft/world/level/levelgen/WorldGenerationContext
	a minY
	b height
	a ()I getMinGenY
	b ()I getGenDepth
net/minecraft/world/level/levelgen/WorldOptions net/minecraft/world/level/levelgen/WorldOptions
	a CODEC
	b DEMO_OPTIONS
	c seed
	d generateStructures
	e generateBonusChest
	f legacyCustomOptions
	a ()Lnet/minecraft/world/level/levelgen/WorldOptions; defaultWithRandomSeed
	a (Ljava/lang/String;)Ljava/util/OptionalLong; parseSeed
	a (Ljava/util/OptionalLong;)Lnet/minecraft/world/level/levelgen/WorldOptions; withSeed
	a (Z)Lnet/minecraft/world/level/levelgen/WorldOptions; withBonusChest
	b ()J seed
	b (Z)Lnet/minecraft/world/level/levelgen/WorldOptions; withStructures
	c ()Z generateStructures
	d ()Z generateBonusChest
	e ()Z isOldCustomizedWorld
	f ()J randomSeed
net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus
	a CODEC
	b seedLo
	c seedHi
	a ()J nextLong
net/minecraft/world/level/levelgen/XoroshiroRandomSource net/minecraft/world/level/levelgen/XoroshiroRandomSource
	b CODEC
	c FLOAT_UNIT
	d DOUBLE_UNIT
	e randomNumberGenerator
	f gaussianSource
	a (I)I nextInt
	b (I)V consumeCount
	b (J)V setSeed
	c (I)J nextBits
	d ()Lnet/minecraft/util/RandomSource; fork
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; forkPositional
	f ()I nextInt
	g ()J nextLong
	h ()Z nextBoolean
	i ()F nextFloat
	j ()D nextDouble
	k ()D nextGaussian
net/minecraft/world/level/levelgen/blending/Blender net/minecraft/world/level/levelgen/blending/Blender
	a EMPTY
	b SHIFT_NOISE
	c HEIGHT_BLENDING_RANGE_CELLS
	d HEIGHT_BLENDING_RANGE_CHUNKS
	e DENSITY_BLENDING_RANGE_CELLS
	f DENSITY_BLENDING_RANGE_CHUNKS
	g OLD_CHUNK_XZ_RADIUS
	h heightAndBiomeBlendingData
	i densityBlendingData
	a ()Lnet/minecraft/world/level/levelgen/blending/Blender; empty
	a (D)D heightToOffset
	a (DDDDDD)D distanceToCube
	a (II)Ldlu$a; blendOffsetAndFactor
	a (III)Lnet/minecraft/core/Holder; blendBiome
	a (IIILdlu$b;)D getBlendingDataValue
	a (Ldkl$b;D)D blendDensity
	a (Ldlu$b;IIIII)D getBlendingDataValue
	a (Lnet/minecraft/core/EnumDirection8;Lnet/minecraft/world/level/levelgen/blending/BlendingData;)Ldlu$c; makeOffsetOldChunkDistanceGetter
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;)Lnet/minecraft/world/level/levelgen/blending/Blender; of
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;Lnet/minecraft/world/level/chunk/IChunkAccess;)V generateBorderTicks
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/ProtoChunk;)V addAroundOldChunksCarvingMaskFilter
	a (Lnet/minecraft/world/level/biome/BiomeResolver;)Lnet/minecraft/world/level/biome/BiomeResolver; getBiomeResolver
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/BlockPosition;)V generateBorderTick
	a (Lnet/minecraft/world/level/levelgen/blending/BlendingData;Ljava/util/Map;)Ldlu$c; makeOldChunkDistanceGetter
net/minecraft/world/level/levelgen/blending/BlendingData net/minecraft/world/level/levelgen/blending/BlendingData
	a CELL_WIDTH
	b CELL_HEIGHT
	c CELL_RATIO
	d NO_VALUE
	e CODEC
	f BLENDING_DENSITY_FACTOR
	g SOLID_DENSITY
	h AIR_DENSITY
	i CELLS_PER_SECTION_Y
	j QUARTS_PER_SECTION
	k CELL_HORIZONTAL_MAX_INDEX_INSIDE
	l CELL_HORIZONTAL_MAX_INDEX_OUTSIDE
	m CELL_COLUMN_INSIDE_COUNT
	n CELL_COLUMN_OUTSIDE_COUNT
	o CELL_COLUMN_COUNT
	p areaWithOldGeneration
	q SURFACE_BLOCKS
	r hasCalculatedData
	s heights
	t biomes
	u densities
	v DOUBLE_ARRAY_CODEC
	a ()Lnet/minecraft/world/level/LevelHeightAccessor; getAreaWithOldGeneration
	a (I)I getCellYIndex
	a (II)I getInsideIndex
	a (III)D getHeight
	a (IIIILdlv$b;)V iterateDensities
	a (IIILdlv$a;)V iterateBiomes
	a (IILdlv$c;)V iterateHeights
	a (ILnet/minecraft/world/level/chunk/IChunkAccess;II)V addValuesForColumn
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;II)Lnet/minecraft/world/level/levelgen/blending/BlendingData; getOrUpdateBlendingData
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;IIZ)Ljava/util/Set; sideByGenerationAge
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;II)I getHeightAtXZ
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;III)[D getDensityColumn
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/Set;)V calculateData
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)D read1
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/BlockPosition;)Z isGround
	a (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)Lcom/mojang/serialization/DataResult; validateArraySize
	a ([DI)D getDensity
	b ()I cellCountPerColumn
	b (I)I getX
	b (II)I getOutsideIndex
	b (III)D getDensity
	b (Lnet/minecraft/world/level/chunk/IChunkAccess;II)Ljava/util/List; getBiomeColumn
	b (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)D read7
	c ()I quartCountPerColumn
	c (I)I getZ
	d ()I getColumnMinY
	d (I)I zeroIfNegative
	e ()I getMinY
net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate
	b CODEC
	c ONLY_IN_AIR_PREDICATE
	d ONLY_IN_AIR_OR_WATER_PREDICATE
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; allOf
	a (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; replaceable
	a (Lnet/minecraft/core/BaseBlockPosition;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesBlocks
	a (Lnet/minecraft/core/BaseBlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; hasSturdyFace
	a (Lnet/minecraft/core/BaseBlockPosition;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesTag
	a (Lnet/minecraft/core/BaseBlockPosition;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesBlocks
	a (Lnet/minecraft/core/BaseBlockPosition;[Lnet/minecraft/world/level/material/FluidType;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesFluids
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; hasSturdyFace
	a (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesTag
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; wouldSurvive
	a (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; not
	a (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; allOf
	a ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesBlocks
	a ([Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; allOf
	a ([Lnet/minecraft/world/level/material/FluidType;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesFluids
	b ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; replaceable
	b (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; anyOf
	b (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; solid
	b (Lnet/minecraft/core/BaseBlockPosition;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesFluids
	b (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; anyOf
	b ([Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; anyOf
	c ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; solid
	c (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesBlocks
	c (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; noFluid
	d ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; noFluid
	d (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; insideWorld
	e ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; alwaysTrue
net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType
	a MATCHING_BLOCKS
	b MATCHING_BLOCK_TAG
	c MATCHING_FLUIDS
	d HAS_STURDY_FACE
	e SOLID
	f REPLACEABLE
	g WOULD_SURVIVE
	h INSIDE_WORLD_BOUNDS
	i ANY_OF
	j ALL_OF
	k NOT
	l TRUE
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; register
net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate
	e predicates
	a (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; codec
net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate
	a CODEC
	e offset
	f direction
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate
	a CODEC
	e offset
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate
	a tag
	e CODEC
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate
	a CODEC
	e blocks
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate
	a CODEC
	e fluids
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
net/minecraft/world/level/levelgen/blockpredicates/NotPredicate net/minecraft/world/level/levelgen/blockpredicates/NotPredicate
	a CODEC
	e predicate
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate
	f offset
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1; stateTestingCodec
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate
	a INSTANCE
	e CODEC
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate
	a CODEC
	e offset
	f state
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration
	a CODEC
	b verticalRotation
	c shape
net/minecraft/world/level/levelgen/carver/CarverDebugSettings net/minecraft/world/level/levelgen/carver/CarverDebugSettings
	a DEFAULT
	b CODEC
	c debugMode
	d airState
	e waterState
	f lavaState
	g barrierState
	a ()Z isDebugMode
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; of
	a (ZLnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; of
	a (ZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; of
	b ()Lnet/minecraft/world/level/block/state/IBlockData; getAirState
	c ()Lnet/minecraft/world/level/block/state/IBlockData; getWaterState
	d ()Lnet/minecraft/world/level/block/state/IBlockData; getLavaState
	e ()Lnet/minecraft/world/level/block/state/IBlockData; getBarrierState
net/minecraft/world/level/levelgen/carver/CarvingContext net/minecraft/world/level/levelgen/carver/CarvingContext
	a registryAccess
	b noiseChunk
	c randomState
	d surfaceRule
	a (Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/BlockPosition;Z)Ljava/util/Optional; topMaterial
	c ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	d ()Lnet/minecraft/world/level/levelgen/RandomState; randomState
net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration
	a CODEC
	b horizontalRadiusMultiplier
	c verticalRadiusMultiplier
	j floorLevel
net/minecraft/world/level/levelgen/feature/FeaturePlaceContext net/minecraft/world/level/levelgen/feature/FeaturePlaceContext
	a topFeature
	b level
	c chunkGenerator
	d random
	e origin
	f config
	a ()Ljava/util/Optional; topFeature
	b ()Lnet/minecraft/world/level/GeneratorAccessSeed; level
	c ()Lnet/minecraft/world/level/chunk/ChunkGenerator; chunkGenerator
	d ()Lnet/minecraft/util/RandomSource; random
	e ()Lnet/minecraft/core/BlockPosition; origin
	f ()Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration; config
net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration
	a CODEC
	b fossilStructures
	c overlayStructures
	d fossilProcessors
	e overlayProcessors
	f maxEmptyCornersAllowed
net/minecraft/world/level/levelgen/feature/GeodeFeature net/minecraft/world/level/levelgen/feature/GeodeFeature
	a DIRECTIONS
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/ScatteredOreFeature net/minecraft/world/level/levelgen/feature/ScatteredOreFeature
	a MAX_DIST_FROM_ORIGIN
	a (Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;I)V offsetTargetPos
	a (Lnet/minecraft/util/RandomSource;I)I getRandomPlacementInOneAxisRelativeToOrigin
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature
	a CODEC
	b feature
	c chance
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z place
net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration
	a CODEC
	b layers
	c direction
	d allowedPlacement
	e prioritizeTip
	a ()Ljava/util/List; layers
	a (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider;)Ldpr$a; layer
	b ()Lnet/minecraft/core/EnumDirection; direction
	b (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration; simple
	c ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; allowedPlacement
	d ()Z prioritizeTip
net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration
	a CODEC
	b floorToCeilingSearchRange
	c height
	d radius
	e maxStalagmiteStalactiteHeightDiff
	f heightDeviation
	g dripstoneBlockLayerThickness
	h density
	i wetness
	j chanceOfDripstoneColumnAtMaxDistanceFromCenter
	k maxDistanceFromEdgeAffectingChanceOfDripstoneColumn
	l maxDistanceFromCenterAffectingHeightBias
net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration
	a CHANCE_RANGE
	b CODEC
	c geodeBlockSettings
	d geodeLayerSettings
	e geodeCrackSettings
	f usePotentialPlacementsChance
	g useAlternateLayer0Chance
	h placementsRequireLayer0Alternate
	i outerWallDistance
	j distributionPoints
	k pointOffset
	l minGenOffset
	n maxGenOffset
	o noiseMultiplier
	p invalidBlocksThreshold
net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration
	a CODEC
	b floorToCeilingSearchRange
	c columnRadius
	d heightScale
	e maxColumnRadiusToCaveHeightRatio
	f stalactiteBluntness
	g stalagmiteBluntness
	h windSpeed
	i minRadiusForWind
	j minBluntnessForWind
net/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration net/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration
	a CODEC
	b placeBlock
	c searchRange
	d canPlaceOnFloor
	e canPlaceOnCeiling
	f canPlaceOnWall
	g chanceOfSpreading
	h canBePlacedOn
	i validDirections
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffledDirections
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/EnumDirection;)Ljava/util/List; getShuffledDirectionsExcept
	a (Lnet/minecraft/world/level/block/Block;)Lcom/mojang/serialization/DataResult; apply
net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig
	c CODEC
	d spreadWidth
	e spreadHeight
net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration
	a CODEC
	b chanceOfTallerDripstone
	c chanceOfDirectionalSpread
	d chanceOfSpreadRadius2
	e chanceOfSpreadRadius3
net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration
	a CODEC
	b treeFeature
	c requiredVerticalSpaceForTree
	d rootRadius
	e rootReplaceable
	f rootStateProvider
	g rootPlacementAttempts
	h rootColumnMaxHeight
	i hangingRootRadius
	j hangingRootsVerticalSpan
	k hangingRootStateProvider
	l hangingRootPlacementAttempts
	n allowedVerticalWaterForTree
	o allowedTreePosition
net/minecraft/world/level/levelgen/feature/configurations/SculkPatchConfiguration net/minecraft/world/level/levelgen/feature/configurations/SculkPatchConfiguration
	a CODEC
	b chargeCount
	c amountPerCharge
	d spreadAttempts
	e growthRounds
	f spreadRounds
	g extraRareGrowths
	h catalystChance
	a ()I chargeCount
	b ()I amountPerCharge
	c ()I spreadAttempts
	d ()I growthRounds
	f ()I spreadRounds
	g ()Lnet/minecraft/util/valueproviders/IntProvider; extraRareGrowths
	h ()F catalystChance
net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig
	a CODEC
	b spreadWidth
	c spreadHeight
	d maxHeight
	a ()I spreadWidth
	b ()I spreadHeight
	c ()I maxHeight
net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration
	a CODEC
	b floorSearchRange
	c placementRadiusAroundFloor
	d placementProbabilityPerValidPosition
net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration
	a CODEC
	b replaceable
	c groundState
	d vegetationFeature
	e surface
	f depth
	g extraBottomBlockChance
	h verticalRange
	i vegetationChance
	j xzRadius
	k extraEdgeColumnChance
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize
	a CODEC
	b MAX_WIDTH
	c minClippedHeight
	a ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; minClippedHeightCodec
	a (II)I getSizeAtHeight
	b ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; type
	c ()Ljava/util/OptionalInt; minClippedHeight
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType
	a TWO_LAYERS_FEATURE_SIZE
	b THREE_LAYERS_FEATURE_SIZE
	c codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; register
net/minecraft/world/level/levelgen/feature/foliageplacers/CherryFoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/CherryFoliagePlacer
	a CODEC
	b height
	c wideBottomLayerHoleChance
	g cornerHoleChance
	h hangingLeavesChance
	i hangingLeavesExtensionChance
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdrm$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer
	a CODEC
	b foliageHeight
	c leafPlacementAttempts
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldrm$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdrm$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/rootplacers/AboveRootPlacement net/minecraft/world/level/levelgen/feature/rootplacers/AboveRootPlacement
	a CODEC
	b aboveRootProvider
	c aboveRootPlacementChance
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; aboveRootProvider
	b ()F aboveRootPlacementChance
net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacement net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacement
	a CODEC
	b canGrowThrough
	c muddyRootsIn
	d muddyRootsProvider
	e maxRootWidth
	f maxRootLength
	g randomSkewChance
	a ()Lnet/minecraft/core/HolderSet; canGrowThrough
	b ()Lnet/minecraft/core/HolderSet; muddyRootsIn
	c ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; muddyRootsProvider
	d ()I maxRootWidth
	e ()I maxRootLength
	f ()F randomSkewChance
net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacer net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacer
	a ROOT_WIDTH_LIMIT
	b ROOT_LENGTH_LIMIT
	c CODEC
	h mangroveRootPlacement
	a ()Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; type
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/List; potentialRootPositions
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Z placeRoots
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)V placeRoot
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z canPlaceRoot
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/BlockPosition;Ljava/util/List;I)Z simulateRoots
net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacer net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacer
	d CODEC
	e trunkOffsetY
	f rootProvider
	g aboveRootPlacement
	a ()Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; rootPlacerParts
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/BlockPosition; getTrunkOrigin
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Z placeRoots
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)V placeRoot
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z canPlaceRoot
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; getPotentiallyWaterloggedState
net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType
	a MANGROVE_ROOT_PLACER
	b codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; register
net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider
	b CODEC
	i variety
	j slowNoiseParameters
	k slowScale
	l slowNoise
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Lnet/minecraft/core/BlockPosition;)D getSlowNoiseValue
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider
	c seed
	d parameters
	e scale
	f noise
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; noiseCodec
	a (Lnet/minecraft/core/BlockPosition;D)D getNoiseValue
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider
	g CODEC
	h states
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Ljava/util/List;D)Lnet/minecraft/world/level/block/state/IBlockData; getRandomState
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;D)Lnet/minecraft/world/level/block/state/IBlockData; getRandomState
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4; noiseProviderCodec
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider
	b CODEC
	g threshold
	h highChance
	i defaultState
	j lowStates
	k highStates
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider
	b CODEC
	c source
	d propertyName
	e property
	f values
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/BlockStateInteger; findProperty
net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider
	a CODEC
	b fallback
	c rules
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; fallback
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; simple
	a (Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; simple
	b ()Ljava/util/List; rules
net/minecraft/world/level/levelgen/feature/treedecorators/AttachedToLeavesDecorator net/minecraft/world/level/levelgen/feature/treedecorators/AttachedToLeavesDecorator
	a CODEC
	b probability
	c exclusionRadiusXZ
	d exclusionRadiusY
	e blockProvider
	f requiredEmptyBlocks
	g directions
	a ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; type
	a (Ldss$a;)V place
	a (Ldss$a;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z hasRequiredEmptyBlocks
net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer
	a CODEC
	b minHeightForLeaves
	h bendLength
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
net/minecraft/world/level/levelgen/feature/trunkplacers/CherryTrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/CherryTrunkPlacer
	a CODEC
	b BRANCH_START_CODEC
	h branchCount
	i branchHorizontalLength
	j branchStartOffsetFromTop
	k secondBranchStartOffsetFromTop
	l branchEndOffsetFromTop
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;Ljava/util/function/Function;Lnet/minecraft/core/EnumDirection;IZLnet/minecraft/core/BlockPosition$MutableBlockPosition;)Ldrm$a; generateBranch
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer
	a MAX_BASE_HEIGHT
	b MAX_RAND
	c CODEC
	d MAX_HEIGHT
	e baseHeight
	f heightRandA
	g heightRandB
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; trunkPlacerParts
	a (Lnet/minecraft/util/RandomSource;)I getTreeHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)V placeLogIfFree
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)V setDirtAt
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;Ljava/util/function/Function;)Z placeLog
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z validTreePos
	b (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Z placeLog
	b (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z isFree
	c (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z isDirt
net/minecraft/world/level/levelgen/feature/trunkplacers/UpwardsBranchingTrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/UpwardsBranchingTrunkPlacer
	a CODEC
	b extraBranchSteps
	h placeBranchPerLogProbability
	i extraBranchLength
	j canGrowThrough
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;Ljava/util/List;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;ILnet/minecraft/core/EnumDirection;II)V placeBranch
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z validTreePos
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPreset net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPreset
	a DIRECT_CODEC
	b CODEC
	c displayItem
	d settings
	a ()Lnet/minecraft/core/Holder; displayItem
	b ()Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat; settings
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets
	a CLASSIC_FLAT
	b TUNNELERS_DREAM
	c WATER_WORLD
	d OVERWORLD
	e SNOWY_KINGDOM
	f BOTTOMLESS_PIT
	g DESERT
	h REDSTONE_READY
	i THE_VOID
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; register
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight
	a CODEC
	b LOGGER
	d minInclusive
	e maxInclusive
	f inner
	a ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I sample
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight; of
net/minecraft/world/level/levelgen/heightproviders/ConstantHeight net/minecraft/world/level/levelgen/heightproviders/ConstantHeight
	a ZERO
	b CODEC
	d value
	a ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I sample
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/ConstantHeight; of
	b ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; getValue
net/minecraft/world/level/levelgen/heightproviders/HeightProvider net/minecraft/world/level/levelgen/heightproviders/HeightProvider
	a CONSTANT_OR_DISPATCH_CODEC
	c CODEC
	a ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I sample
net/minecraft/world/level/levelgen/heightproviders/HeightProviderType net/minecraft/world/level/levelgen/heightproviders/HeightProviderType
	a CONSTANT
	b UNIFORM
	c BIASED_TO_BOTTOM
	d VERY_BIASED_TO_BOTTOM
	e TRAPEZOID
	f WEIGHTED_LIST
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; register
net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight
	a CODEC
	b LOGGER
	d minInclusive
	e maxInclusive
	f plateau
	a ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I sample
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight; of
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight; of
net/minecraft/world/level/levelgen/heightproviders/UniformHeight net/minecraft/world/level/levelgen/heightproviders/UniformHeight
	a CODEC
	b LOGGER
	d minInclusive
	e maxInclusive
	f warnedFor
	a ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I sample
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/UniformHeight; of
net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight
	a CODEC
	b LOGGER
	d minInclusive
	e maxInclusive
	f inner
	a ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I sample
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight; of
net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight
	a CODEC
	b distribution
	a ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I sample
net/minecraft/world/level/levelgen/material/MaterialRuleList net/minecraft/world/level/levelgen/material/MaterialRuleList
	a materialRuleList
	a ()Ljava/util/List; materialRuleList
net/minecraft/world/level/levelgen/placement/BiomeFilter net/minecraft/world/level/levelgen/placement/BiomeFilter
	a CODEC
	c INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/placement/BiomeFilter; biome
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z shouldPlace
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/BlockPredicateFilter net/minecraft/world/level/levelgen/placement/BlockPredicateFilter
	a CODEC
	c predicate
	a (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/placement/BlockPredicateFilter; forPredicate
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z shouldPlace
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement
	a CODEC
	c step
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)Lnet/minecraft/world/level/levelgen/placement/CarvingMaskPlacement; forStep
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/CaveSurface net/minecraft/world/level/levelgen/placement/CaveSurface
	a CEILING
	b FLOOR
	c CODEC
	d direction
	e y
	f id
	g $VALUES
	a ()Lnet/minecraft/core/EnumDirection; getDirection
	b ()I getY
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/level/levelgen/placement/CaveSurface; $values
net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement
	a CODEC
	c count
	a (I)Lnet/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement; of
	a (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement; of
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isEmpty
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;IIII)I findOnGroundYPosition
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/CountPlacement net/minecraft/world/level/levelgen/placement/CountPlacement
	a CODEC
	c count
	a (I)Lnet/minecraft/world/level/levelgen/placement/CountPlacement; of
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)I count
	a (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/CountPlacement; of
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement
	a CODEC
	c directionOfSearch
	d targetCondition
	e allowedSearchCondition
	f maxSteps
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;I)Lnet/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement; scanningFor
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;I)Lnet/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement; scanningFor
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/HeightRangePlacement net/minecraft/world/level/levelgen/placement/HeightRangePlacement
	a CODEC
	c height
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; uniform
	a (Lnet/minecraft/world/level/levelgen/heightproviders/HeightProvider;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; of
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
	b (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; triangle
net/minecraft/world/level/levelgen/placement/HeightmapPlacement net/minecraft/world/level/levelgen/placement/HeightmapPlacement
	a CODEC
	c heightmap
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;)Lnet/minecraft/world/level/levelgen/placement/HeightmapPlacement; onHeightmap
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/InSquarePlacement net/minecraft/world/level/levelgen/placement/InSquarePlacement
	a CODEC
	c INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/placement/InSquarePlacement; spread
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement
	a CODEC
	c noiseToCountRatio
	d noiseFactor
	e noiseOffset
	a (IDD)Lnet/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement; of
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)I count
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement
	a CODEC
	c noiseLevel
	d belowNoise
	e aboveNoise
	a (DII)Lnet/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement; of
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)I count
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/PlacedFeature net/minecraft/world/level/levelgen/placement/PlacedFeature
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	d LIST_OF_LISTS_CODEC
	e feature
	f placement
	a ()Ljava/util/stream/Stream; getFeatures
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z place
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z placeWithContext
	b ()Lnet/minecraft/core/Holder; feature
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z placeWithBiomeCheck
	c ()Ljava/util/List; placement
net/minecraft/world/level/levelgen/placement/PlacementContext net/minecraft/world/level/levelgen/placement/PlacementContext
	a level
	b generator
	c topFeature
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)Lnet/minecraft/world/level/chunk/CarvingMask; getCarvingMask
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)I getHeight
	c ()I getMinBuildHeight
	d ()Lnet/minecraft/world/level/GeneratorAccessSeed; getLevel
	e ()Ljava/util/Optional; topFeature
	f ()Lnet/minecraft/world/level/chunk/ChunkGenerator; generator
net/minecraft/world/level/levelgen/placement/PlacementModifier net/minecraft/world/level/levelgen/placement/PlacementModifier
	b CODEC
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/PlacementModifierType net/minecraft/world/level/levelgen/placement/PlacementModifierType
	a BLOCK_PREDICATE_FILTER
	b RARITY_FILTER
	c SURFACE_RELATIVE_THRESHOLD_FILTER
	d SURFACE_WATER_DEPTH_FILTER
	e BIOME_FILTER
	f COUNT
	g NOISE_BASED_COUNT
	h NOISE_THRESHOLD_COUNT
	i COUNT_ON_EVERY_LAYER
	j ENVIRONMENT_SCAN
	k HEIGHTMAP
	l HEIGHT_RANGE
	m IN_SQUARE
	n RANDOM_OFFSET
	o CARVING_MASK_PLACEMENT
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; register
net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement
	a CODEC
	c xzSpread
	d ySpread
	a (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; vertical
	a (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; of
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
	b (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; horizontal
net/minecraft/world/level/levelgen/placement/RarityFilter net/minecraft/world/level/levelgen/placement/RarityFilter
	a CODEC
	c chance
	a (I)Lnet/minecraft/world/level/levelgen/placement/RarityFilter; onAverageOnceEvery
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z shouldPlace
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter
	a CODEC
	c heightmap
	d minInclusive
	e maxInclusive
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)Lnet/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter; of
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z shouldPlace
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter
	a CODEC
	c maxWaterDepth
	a (I)Lnet/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter; forMaxDepth
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z shouldPlace
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/presets/WorldPreset net/minecraft/world/level/levelgen/presets/WorldPreset
	a DIRECT_CODEC
	b CODEC
	c dimensions
	a ()Lnet/minecraft/world/level/levelgen/WorldDimensions; createWorldDimensions
	a (Lnet/minecraft/world/level/levelgen/presets/WorldPreset;)Lcom/mojang/serialization/DataResult; requireOverworld
	b ()Ljava/util/Optional; overworld
	c ()Lnet/minecraft/core/IRegistry; createRegistry
net/minecraft/world/level/levelgen/presets/WorldPresets net/minecraft/world/level/levelgen/presets/WorldPresets
	a NORMAL
	b FLAT
	c LARGE_BIOMES
	d AMPLIFIED
	e SINGLE_BIOME_SURFACE
	f DEBUG
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; register
	a (Lnet/minecraft/core/IRegistry;)Ljava/util/Optional; fromSettings
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/level/levelgen/WorldDimensions; createNormalWorldDimensions
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	b (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/level/dimension/WorldDimension; getNormalOverworld
net/minecraft/world/level/levelgen/structure/BuiltinStructureSets net/minecraft/world/level/levelgen/structure/BuiltinStructureSets
	a VILLAGES
	b DESERT_PYRAMIDS
	c IGLOOS
	d JUNGLE_TEMPLES
	e SWAMP_HUTS
	f PILLAGER_OUTPOSTS
	g OCEAN_MONUMENTS
	h WOODLAND_MANSIONS
	i BURIED_TREASURES
	j MINESHAFTS
	k RUINED_PORTALS
	l SHIPWRECKS
	m OCEAN_RUINS
	n NETHER_COMPLEXES
	o NETHER_FOSSILS
	p END_CITIES
	q ANCIENT_CITIES
	r STRONGHOLDS
	s TRAIL_RUINS
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; register
net/minecraft/world/level/levelgen/structure/BuiltinStructures net/minecraft/world/level/levelgen/structure/BuiltinStructures
	A RUINED_PORTAL_JUNGLE
	B RUINED_PORTAL_SWAMP
	C RUINED_PORTAL_MOUNTAIN
	D RUINED_PORTAL_OCEAN
	E RUINED_PORTAL_NETHER
	F ANCIENT_CITY
	G TRAIL_RUINS
	a PILLAGER_OUTPOST
	b MINESHAFT
	c MINESHAFT_MESA
	d WOODLAND_MANSION
	e JUNGLE_TEMPLE
	f DESERT_PYRAMID
	g IGLOO
	h SHIPWRECK
	i SHIPWRECK_BEACHED
	j SWAMP_HUT
	k STRONGHOLD
	l OCEAN_MONUMENT
	m OCEAN_RUIN_COLD
	n OCEAN_RUIN_WARM
	o FORTRESS
	p NETHER_FOSSIL
	q END_CITY
	r BURIED_TREASURE
	s BASTION_REMNANT
	t VILLAGE_PLAINS
	u VILLAGE_DESERT
	v VILLAGE_SAVANNA
	w VILLAGE_SNOWY
	x VILLAGE_TAIGA
	y RUINED_PORTAL_STANDARD
	z RUINED_PORTAL_DESERT
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
net/minecraft/world/level/levelgen/structure/SinglePieceStructure net/minecraft/world/level/levelgen/structure/SinglePieceStructure
	d constructor
	e width
	f depth
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldvi$a;)V generatePieces
net/minecraft/world/level/levelgen/structure/Structure net/minecraft/world/level/levelgen/structure/Structure
	a DIRECT_CODEC
	b CODEC
	c settings
	a ()Lnet/minecraft/core/HolderSet; biomes
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; settingsCodec
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Ldvi$a;II)I getLowestY
	a (Ldvi$a;IIII)I getLowestY
	a (Ldvi$a;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BlockPosition; getLowestYIn5by5BoxOffset7Blocks
	a (Ldvi$a;Lnet/minecraft/world/level/levelgen/HeightMap$Type;Ljava/util/function/Consumer;)Ljava/util/Optional; onTopOfChunkCenter
	a (Ldvi$b;Ldvi$a;)Z isValidBiome
	a (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; simpleCodec
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/WorldChunkManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;JLnet/minecraft/world/level/ChunkCoordIntPair;ILnet/minecraft/world/level/LevelHeightAccessor;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; generate
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V afterPlace
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; adjustBoundingBox
	b ()Ljava/util/Map; spawnOverrides
	b (Ldvi$a;)Ljava/util/Optional; findValidGenerationPoint
	b (Ldvi$a;IIII)[I getCornerHeights
	c ()Lnet/minecraft/world/level/levelgen/WorldGenStage$Decoration; step
	d ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; terrainAdaptation
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/StructureCheck net/minecraft/world/level/levelgen/structure/StructureCheck
	a LOGGER
	b NO_STRUCTURE
	c storageAccess
	d registryAccess
	e biomes
	f structureConfigs
	g structureTemplateManager
	h dimension
	i chunkGenerator
	j randomState
	k heightAccessor
	l biomeSource
	m seed
	n fixerUpper
	o loadedChunks
	p featureChecks
	a (JLit/unimi/dsi/fastutil/objects/Object2IntMap;)V storeFullResults
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; deduplicateEmptyMap
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; checkStructureInfo
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; loadStructures
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Ljava/util/Map;)V onStructureLoad
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/Structure;)V incrementReference
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; checkStart
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/Structure;ZJ)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; tryLoadFromStorage
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/Structure;)Z canCreateStructure
net/minecraft/world/level/levelgen/structure/StructureCheckResult net/minecraft/world/level/levelgen/structure/StructureCheckResult
	a START_PRESENT
	b START_NOT_PRESENT
	c CHUNK_LOAD_NEEDED
	d $VALUES
	a ()[Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; $values
net/minecraft/world/level/levelgen/structure/StructurePiece net/minecraft/world/level/levelgen/structure/StructurePiece
	a LOGGER
	b orientation
	c mirror
	d rotation
	e CAVE_AIR
	f boundingBox
	g genDepth
	h type
	i SHAPE_CHECK_BLOCKS
	a ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	a (I)V setGenDepth
	a (II)I getWorldX
	a (III)V move
	a (IIILnet/minecraft/core/EnumDirection;III)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; makeBoundingBox
	a (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; findCollisionPiece
	a (Ljava/util/stream/Stream;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; createBoundingBox
	a (Lnet/minecraft/core/EnumDirection;)V setOrientation
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/EnumDirection; getRandomHorizontalDirection
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)Z isCloseToChunk
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/block/state/IBlockData;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V placeBlock
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIII)V generateAirBox
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIIILnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Z)V generateBox
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIIILnet/minecraft/world/level/block/state/IBlockData;Z)V generateUpperHalfSphere
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIIIZLnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$StructurePieceBlockSelector;)V generateBox
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;FIIIIIILnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;ZZ)V generateMaybeBox
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;FIIILnet/minecraft/world/level/block/state/IBlockData;)V maybeGenerateBlock
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;Lnet/minecraft/resources/MinecraftKey;)Z createDispenser
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/resources/MinecraftKey;)Z createChest
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Z)V generateBox
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;ZLnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$StructurePieceBlockSelector;)V generateBox
	a (Lnet/minecraft/world/level/IBlockAccess;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/level/block/state/IBlockData; getBlock
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; reorient
	a (Lnet/minecraft/world/level/IWorldReader;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Z canBeReplaced
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/level/block/state/IBlockData;)Z createChest
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isReplaceableByStructures
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/nbt/NBTTagCompound; createTag
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (I)I getWorldY
	b (II)I getWorldZ
	b (III)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; getWorldPos
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/block/state/IBlockData;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V fillColumnDown
	b (Lnet/minecraft/world/level/IWorldReader;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Z isInterior
	f ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	g ()I getGenDepth
	h ()Lnet/minecraft/core/BlockPosition; getLocatorPosition
	i ()Lnet/minecraft/core/EnumDirection; getOrientation
	j ()Lnet/minecraft/world/level/block/EnumBlockMirror; getMirror
	k ()Lnet/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType; getType
net/minecraft/world/level/levelgen/structure/StructureSet net/minecraft/world/level/levelgen/structure/StructureSet
	a DIRECT_CODEC
	b CODEC
	c structures
	d placement
	a ()Ljava/util/List; structures
	a (Lnet/minecraft/core/Holder;)Ldvo$a; entry
	a (Lnet/minecraft/core/Holder;I)Ldvo$a; entry
	b ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement; placement
net/minecraft/world/level/levelgen/structure/StructureSpawnOverride net/minecraft/world/level/levelgen/structure/StructureSpawnOverride
	a CODEC
	b boundingBox
	c spawns
	a ()Ldvp$a; boundingBox
	b ()Lnet/minecraft/util/random/WeightedRandomList; spawns
net/minecraft/world/level/levelgen/structure/StructureStart net/minecraft/world/level/levelgen/structure/StructureStart
	a INVALID_START_ID
	b INVALID_START
	c LOGGER
	d structure
	e pieceContainer
	f chunkPos
	g references
	h cachedBoundingBox
	a ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;)V placeInChunk
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;J)Lnet/minecraft/world/level/levelgen/structure/StructureStart; loadStaticStart
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/nbt/NBTTagCompound; createTag
	b ()Z isValid
	c ()Lnet/minecraft/world/level/ChunkCoordIntPair; getChunkPos
	d ()Z canBeReferenced
	e ()V addReference
	f ()I getReferences
	g ()I getMaxReferences
	h ()Lnet/minecraft/world/level/levelgen/structure/Structure; getStructure
	i ()Ljava/util/List; getPieces
net/minecraft/world/level/levelgen/structure/StructureType net/minecraft/world/level/levelgen/structure/StructureType
	a BURIED_TREASURE
	b DESERT_PYRAMID
	c END_CITY
	d FORTRESS
	e IGLOO
	f JIGSAW
	g JUNGLE_TEMPLE
	h MINESHAFT
	i NETHER_FOSSIL
	j OCEAN_MONUMENT
	k OCEAN_RUIN
	l RUINED_PORTAL
	m SHIPWRECK
	n STRONGHOLD
	o SWAMP_HUT
	p WOODLAND_MANSION
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/StructureType; register
net/minecraft/world/level/levelgen/structure/TerrainAdjustment net/minecraft/world/level/levelgen/structure/TerrainAdjustment
	a NONE
	b BURY
	c BEARD_THIN
	d BEARD_BOX
	e CODEC
	f id
	g $VALUES
	a ()[Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer
	a pieces
	b LOGGER
	c JIGSAW_RENAME
	d RENAMES
	a ()Z isEmpty
	a (Lnet/minecraft/core/BlockPosition;)Z isInsidePiece
	a (Lnet/minecraft/nbt/NBTTagList;Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; load
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/nbt/NBTBase; save
	b ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; calculateBoundingBox
	c ()Ljava/util/List; pieces
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext
	a resourceManager
	b registryAccess
	c structureTemplateManager
	a ()Lnet/minecraft/server/packs/resources/IResourceManager; resourceManager
	a (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext; fromLevel
	b ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	c ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; structureTemplateManager
net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder
	a pieces
	a ()Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; build
	a (I)V offsetPiecesVertically
	a (IILnet/minecraft/util/RandomSource;I)I moveBelowSeaLevel
	a (Lnet/minecraft/util/RandomSource;II)V moveInsideHeights
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; findCollisionPiece
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;)V addPiece
	b ()V clear
	c ()Z isEmpty
	d ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
net/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement net/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement
	a CODEC
	c distance
	d spread
	e count
	f preferredBiomes
	a ()I distance
	a (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z isPlacementChunk
	b ()I spread
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P9; codec
	c ()I count
	d ()Lnet/minecraft/core/HolderSet; preferredBiomes
	e ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; type
net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement
	a CODEC
	c spacing
	d separation
	e spreadType
	a ()I spacing
	a (JII)Lnet/minecraft/world/level/ChunkCoordIntPair; getPotentialStructureChunk
	a (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z isPlacementChunk
	a (Lnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement;)Lcom/mojang/serialization/DataResult; validate
	b ()I separation
	c ()Lnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadType; spreadType
	e ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; type
net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType
	a LINEAR
	b TRIANGULAR
	c CODEC
	d id
	e $VALUES
	a ()[Lnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadType; $values
	a (Lnet/minecraft/util/RandomSource;I)I evaluate
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/levelgen/structure/placement/StructurePlacement net/minecraft/world/level/levelgen/structure/placement/StructurePlacement
	a HIGHLY_ARBITRARY_RANDOM_SALT
	b CODEC
	c locateOffset
	d frequencyReductionMethod
	e frequency
	f salt
	g exclusionZone
	a (JIIIF)Z probabilityReducer
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P5; placementCodec
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/core/BlockPosition; getLocatePos
	a (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z isPlacementChunk
	b (JIIIF)Z legacyProbabilityReducerWithDouble
	b (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z isStructureChunk
	c (JIIIF)Z legacyArbitrarySaltProbabilityReducer
	d (JIIIF)Z legacyPillagerOutpostReducer
	e ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; type
	f ()Lnet/minecraft/core/BaseBlockPosition; locateOffset
	g ()Ldwf$c; frequencyReductionMethod
	h ()F frequency
	i ()I salt
	j ()Ljava/util/Optional; exclusionZone
net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType
	a RANDOM_SPREAD
	b CONCENTRIC_RINGS
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; register
net/minecraft/world/level/levelgen/structure/structures/BuriedTreasureStructure net/minecraft/world/level/levelgen/structure/structures/BuriedTreasureStructure
	d CODEC
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldvi$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/DesertPyramidPiece net/minecraft/world/level/levelgen/structure/structures/DesertPyramidPiece
	h WIDTH
	i DEPTH
	j hasPlacedChest
	k potentialSuspiciousSandWorldPositions
	l randomCollapsedRoofPos
	a (IIIIII)V placeSandBox
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V addCellarStairs
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V placeCollapsedRoofPiece
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V addCellar
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIII)V placeCollapsedRoof
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b ()Ljava/util/List; getPotentialSuspiciousSandWorldPositions
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V addCellarRoom
	c ()Lnet/minecraft/core/BlockPosition; getRandomCollapsedRoofPos
	c (III)V placeSand
net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure
	d CODEC
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V afterPlace
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)V placeSuspiciousSand
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/EndCityPieces net/minecraft/world/level/levelgen/structure/structures/EndCityPieces
	a MAX_GEN_DEPTH
	b HOUSE_TOWER_GENERATOR
	c TOWER_BRIDGES
	d TOWER_GENERATOR
	e TOWER_BRIDGE_GENERATOR
	f FAT_TOWER_BRIDGES
	g FAT_TOWER_GENERATOR
	a (Ljava/util/List;Ldwx$a;)Ldwx$a; addHelper
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Ldwx$a;Lnet/minecraft/core/BlockPosition;Ljava/lang/String;Lnet/minecraft/world/level/block/EnumBlockRotation;Z)Ldwx$a; addPiece
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Ldwx$b;ILdwx$a;Lnet/minecraft/core/BlockPosition;Ljava/util/List;Lnet/minecraft/util/RandomSource;)Z recursiveChildren
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Ljava/util/List;Lnet/minecraft/util/RandomSource;)V startHouseTower
net/minecraft/world/level/levelgen/structure/structures/EndCityStructure net/minecraft/world/level/levelgen/structure/structures/EndCityStructure
	d CODEC
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Ldvi$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/IglooPieces net/minecraft/world/level/levelgen/structure/structures/IglooPieces
	a GENERATION_HEIGHT
	b STRUCTURE_LOCATION_IGLOO
	c STRUCTURE_LOCATION_LADDER
	d STRUCTURE_LOCATION_LABORATORY
	e PIVOTS
	f OFFSETS
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addPieces
net/minecraft/world/level/levelgen/structure/structures/IglooStructure net/minecraft/world/level/levelgen/structure/structures/IglooStructure
	d CODEC
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldvi$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/JigsawStructure net/minecraft/world/level/levelgen/structure/structures/JigsawStructure
	d MAX_TOTAL_STRUCTURE_RANGE
	e CODEC
	f startPool
	g startJigsawName
	h maxDepth
	i startHeight
	j useExpansionHack
	k projectStartToHeightmap
	l maxDistanceFromCenter
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/structures/JigsawStructure;)Lcom/mojang/serialization/DataResult; verifyRange
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece
	h WIDTH
	i DEPTH
	j placedMainChest
	k placedHiddenChest
	l placedTrap1
	m placedTrap2
	n STONE_SELECTOR
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/world/level/levelgen/structure/structures/JungleTempleStructure net/minecraft/world/level/levelgen/structure/structures/JungleTempleStructure
	d CODEC
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces
	a MAGIC_START_Y
	b LOGGER
	c DEFAULT_SHAFT_WIDTH
	d DEFAULT_SHAFT_HEIGHT
	e DEFAULT_SHAFT_LENGTH
	f MAX_PILLAR_HEIGHT
	g MAX_CHAIN_HEIGHT
	h MAX_DEPTH
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxe$c; generateAndAddPiece
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;ILdxf$a;)Ldxe$c; createRandomShaftPiece
net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure
	d CODEC
	e type
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldvi$a;)I generatePiecesAndAdjust
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces
	a MAGIC_START_Y
	b MAX_DEPTH
	c LOWEST_Y_POSITION
	d BRIDGE_PIECE_WEIGHTS
	e CASTLE_PIECE_WEIGHTS
	a (Ldxg$n;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxg$m; findAndCreateBridgePieceFactory
net/minecraft/world/level/levelgen/structure/structures/NetherFortressStructure net/minecraft/world/level/levelgen/structure/structures/NetherFortressStructure
	d FORTRESS_ENEMIES
	e CODEC
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldvi$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces
	a FOSSILS
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)V addPieces
net/minecraft/world/level/levelgen/structure/structures/NetherFossilStructure net/minecraft/world/level/levelgen/structure/structures/NetherFossilStructure
	d CODEC
	e height
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentStructure net/minecraft/world/level/levelgen/structure/structures/OceanMonumentStructure
	d CODEC
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;JLnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; regeneratePiecesAfterLoad
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/SeededRandom;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; createTopPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldvi$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces
	a WARM_SUSPICIOUS_BLOCK_PROCESSOR
	b COLD_SUSPICIOUS_BLOCK_PROCESSOR
	c WARM_RUINS
	d RUINS_BRICK
	e RUINS_CRACKED
	f RUINS_MOSSY
	g BIG_RUINS_BRICK
	h BIG_RUINS_MOSSY
	i BIG_RUINS_CRACKED
	j BIG_WARM_RUINS
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/MinecraftKey; getSmallWarmRuin
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/List; allPositions
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessor; archyRuleProcessor
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;)V addPieces
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;ZF)V addPiece
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;)V addClusterRuins
	b (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/MinecraftKey; getBigWarmRuin
net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure
	d CODEC
	e biomeTemp
	f largeProbability
	g clusterProbability
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldvi$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece
	h LOGGER
	i PROBABILITY_OF_GOLD_GONE
	j PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK
	k PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA
	l verticalPlacement
	m properties
	a (Ldxo$b;)Lnet/minecraft/world/level/levelgen/HeightMap$Type; getHeightMapType
	a (Ldxo$b;Ldxo$a;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorPredicates; getLavaProcessorRule
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/GeneratorAccess;)V addNetherrackDripColumnsBelowPortal
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V maybeAddVines
	a (Lnet/minecraft/world/level/GeneratorAccess;IILdxo$b;)I getSurfaceY
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z canBlockBeReplacedByNetherrackOrMagma
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/block/Block;FLnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorPredicates; getBlockReplaceRule
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorPredicates; getBlockReplaceRule
	a (Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/world/level/block/EnumBlockRotation;Ldxo$b;Lnet/minecraft/core/BlockPosition;Ldxo$a;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	b (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/GeneratorAccess;)V spreadNetherrack
	b (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V maybeAddLeavesAbove
	c (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V addNetherrackDripColumn
	d (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V placeNetherrackOrMagma
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure
	d CODEC
	e STRUCTURE_LOCATION_PORTALS
	f STRUCTURE_LOCATION_GIANT_PORTALS
	g PROBABILITY_OF_GIANT_PORTAL
	h MIN_Y_INDEX
	i setups
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/Holder;)Z isCold
	a (Lnet/minecraft/util/RandomSource;II)I getRandomWithinInterval
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ldxo$b;ZIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I findSuitableY
	a (Lnet/minecraft/world/level/levelgen/SeededRandom;F)Z sample
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces
	a PIVOT
	b STRUCTURE_LOCATION_BEACHED
	c STRUCTURE_LOCATION_OCEAN
	d MARKERS_TO_LOOT
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Z)V addPieces
net/minecraft/world/level/levelgen/structure/structures/ShipwreckStructure net/minecraft/world/level/levelgen/structure/structures/ShipwreckStructure
	d CODEC
	e isBeached
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldvi$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces
	a MAGIC_START_Y
	b SMALL_DOOR_WIDTH
	c SMALL_DOOR_HEIGHT
	d MAX_DEPTH
	e LOWEST_Y_POSITION
	f CHECK_AIR
	g STRONGHOLD_PIECE_WEIGHTS
	h currentPieces
	i imposedPiece
	j totalWeight
	k SMOOTH_STONE_SELECTOR
	a ()V resetPieces
	a (Ldxs$m;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxs$p; generatePieceFromSmallDoor
	a (Ljava/lang/Class;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldxs$p; findAndCreatePieceFactory
	b ()Z updatePieceWeight
	b (Ldxs$m;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateAndAddPiece
net/minecraft/world/level/levelgen/structure/structures/StrongholdStructure net/minecraft/world/level/levelgen/structure/structures/StrongholdStructure
	d CODEC
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldvi$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece
	h spawnedWitch
	i spawnedCat
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V spawnCat
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/world/level/levelgen/structure/structures/SwampHutStructure net/minecraft/world/level/levelgen/structure/structures/SwampHutStructure
	d CODEC
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldvi$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionStructure net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionStructure
	d CODEC
	a (Ldvi$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V afterPlace
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldvi$a;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/templatesystem/CappedProcessor net/minecraft/world/level/levelgen/structure/templatesystem/CappedProcessor
	a CODEC
	b delegate
	c limit
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Ljava/util/List;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Ljava/util/List; finalizeProcessing
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest
	c CODEC
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; getType
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType
	a ALWAYS_TRUE_TEST
	b LINEAR_POS_TEST
	c AXIS_ALIGNED_LINEAR_POS_TEST
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; register
net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor
	a cannotReplace
	b CODEC
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager
	a LOGGER
	b STRUCTURE_DIRECTORY_NAME
	c TEST_STRUCTURES_DIR
	d STRUCTURE_FILE_EXTENSION
	e STRUCTURE_TEXT_FILE_EXTENSION
	f structureRepository
	g fixerUpper
	h resourceManager
	i generatedDir
	j sources
	k blockLookup
	l LISTER
	a ()Ljava/util/stream/Stream; listTemplates
	a (Ldzc$a;Ljava/util/function/Consumer;)Ljava/util/Optional; load
	a (Ljava/io/InputStream;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure; readStructure
	a (Ljava/nio/file/Path;)Ljava/util/stream/Stream; listGeneratedInNamespace
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/util/stream/Stream; listFolderContents
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; relativize
	a (Ljava/nio/file/Path;Lnet/minecraft/resources/MinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; createPathToStructure
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure; readStructure
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure; getOrCreate
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; getPathToGeneratedStructure
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/nio/file/Path;)Ljava/util/Optional; loadFromSnbt
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	b ()Ljava/util/stream/Stream; listResources
	b (Ljava/nio/file/Path;Lnet/minecraft/resources/MinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; createAndValidatePathToStructure
	b (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; get
	c ()Ljava/util/stream/Stream; listTestStructures
	c (Lnet/minecraft/resources/MinecraftKey;)Z save
	d ()Ljava/util/stream/Stream; listGenerated
	d (Lnet/minecraft/resources/MinecraftKey;)V remove
	e (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; tryLoad
	f (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; loadFromResource
	g (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; loadFromTestStructures
	h (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; loadFromGenerated
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendLoot net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendLoot
	a CODEC
	b LOGGER
	d lootTable
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; apply
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendStatic net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendStatic
	a CODEC
	b tag
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; apply
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Clear net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Clear
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; apply
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Passthrough net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Passthrough
	a INSTANCE
	b CODEC
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; apply
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifier net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifier
	c CODEC
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; apply
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType
	a CLEAR
	b PASSTHROUGH
	c APPEND_STATIC
	d APPEND_LOOT
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; register
net/minecraft/world/level/levelgen/synth/BlendedNoise net/minecraft/world/level/levelgen/synth/BlendedNoise
	a CODEC
	e SCALE_RANGE
	f DATA_CODEC
	g minLimitNoise
	h maxLimitNoise
	i mainNoise
	j xzMultiplier
	k yMultiplier
	l xzFactor
	m yFactor
	n smearScaleMultiplier
	o maxValue
	p xzScale
	q yScale
	a ()D minValue
	a (DDDDD)Lnet/minecraft/world/level/levelgen/synth/BlendedNoise; createUnseeded
	a (Ldkl$b;)D compute
	a (Ljava/lang/StringBuilder;)V parityConfigString
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/synth/BlendedNoise; withNewRandom
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
net/minecraft/world/level/lighting/ChunkSkyLightSources net/minecraft/world/level/lighting/ChunkSkyLightSources
	a NEGATIVE_INFINITY
	b SIZE
	c minY
	d heightmap
	e mutablePos1
	f mutablePos2
	a ()I getHighestLowestSourceY
	a (I)V fill
	a (II)I getLowestSourceY
	a (Lnet/minecraft/world/level/IBlockAccess;III)Z update
	a (Lnet/minecraft/world/level/IBlockAccess;IILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z updateEdge
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)I findLowestSourceBelow
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isEdgeOccluded
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;)V fillFrom
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;III)I findLowestSourceY
	b (I)I get
	b (II)V set
	c (I)I extendSourcesBelowWorld
	c (II)I index
net/minecraft/world/level/lighting/LevelLightEngine net/minecraft/world/level/lighting/LevelLightEngine
	a blockEngine
	b LIGHT_SECTION_PADDING
	c levelHeightAccessor
	d skyEngine
	J_ ()Z hasLightWork
	a ()I runLightUpdates
	a (Lnet/minecraft/core/BlockPosition;)V checkBlock
	a (Lnet/minecraft/core/BlockPosition;I)I getRawBrightness
	a (Lnet/minecraft/core/SectionPosition;)Z lightOnInSection
	a (Lnet/minecraft/core/SectionPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V setLightEnabled
	a (Lnet/minecraft/world/level/EnumSkyBlock;)Lnet/minecraft/world/level/lighting/LightEngineLayerEventListener; getLayerListener
	a (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/SectionPosition;)Ljava/lang/String; getDebugData
	a (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/chunk/NibbleArray;)V queueSectionData
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)V propagateLightSources
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V retainData
	b (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/SectionPosition;)Leaa$b; getDebugSectionType
	c ()I getLightSectionCount
	d ()I getMinLightSection
	e ()I getMaxLightSection
net/minecraft/world/level/lighting/LeveledPriorityQueue net/minecraft/world/level/lighting/LeveledPriorityQueue
	a levelCount
	b queues
	c firstQueuedLevel
	a ()J removeFirstLong
	a (I)V checkFirstQueuedLevel
	a (JI)V enqueue
	a (JII)V dequeue
	b ()Z isEmpty
net/minecraft/world/level/lighting/LightEngine net/minecraft/world/level/lighting/LightEngine
	a MAX_LEVEL
	b MIN_OPACITY
	c PULL_LIGHT_IN_ENTRY
	d PROPAGATION_DIRECTIONS
	e chunkSource
	f storage
	g MIN_QUEUE_SIZE
	h blockNodesToCheck
	i decreaseQueue
	j increaseQueue
	k mutablePos
	l CACHE_SIZE
	m lastChunkPos
	n lastChunk
	J_ ()Z hasLightWork
	a ()I runLightUpdates
	a (II)Lnet/minecraft/world/level/chunk/LightChunk; getChunk
	a (J)V checkNode
	a (JJ)V propagateDecrease
	a (JJI)V propagateIncrease
	a (JLnet/minecraft/world/level/block/state/IBlockData;JLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z shapeOccludes
	a (JLnet/minecraft/world/level/chunk/NibbleArray;)V queueSectionData
	a (Lnet/minecraft/core/BlockPosition;)V checkBlock
	a (Lnet/minecraft/core/SectionPosition;)Lnet/minecraft/world/level/chunk/NibbleArray; getDataLayerData
	a (Lnet/minecraft/core/SectionPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V setLightEnabled
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Z hasDifferentLightProperties
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;I)I getLightBlockInto
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isEmptyShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;JLnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)I getOpacity
	b (J)Ljava/lang/String; getDebugData
	b (JJ)V enqueueDecrease
	b (Lnet/minecraft/core/BlockPosition;)I getLightValue
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V retainData
	c ()V clearChunkCache
	c (J)Leaa$b; getDebugSectionType
	c (JJ)V enqueueIncrease
	c (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
	d ()I propagateIncreases
	e ()I propagateDecreases
net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator
	l prefersShallowSwimming
	m oldWalkableCost
	n oldWaterBorderCost
	a ()Lnet/minecraft/world/level/pathfinder/PathPoint; getStart
	a (DDD)Lnet/minecraft/world/level/pathfinder/PathDestination; getGoal
	a (Lnet/minecraft/world/level/ChunkCache;Lnet/minecraft/world/entity/EntityInsentient;)V prepare
	a (Lnet/minecraft/world/level/IBlockAccess;III)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a ([Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)I getNeighbors
	b ()V done
	b (Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)Z isVerticalNeighborValid
	c ()Z isAmphibious
net/minecraft/world/level/redstone/CollectingNeighborUpdater net/minecraft/world/level/redstone/CollectingNeighborUpdater
	b LOGGER
	c level
	d maxChainedNeighborUpdates
	e stack
	f addedThisLayer
	g count
	a ()V runUpdates
	a (Lnet/minecraft/core/BlockPosition;Lebm$c;)V addAndRun
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V neighborChanged
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/EnumDirection;)V updateNeighborsAtExceptFromFacing
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;II)V shapeUpdate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
net/minecraft/world/level/redstone/NeighborUpdater net/minecraft/world/level/redstone/NeighborUpdater
	a UPDATE_ORDER
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V neighborChanged
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/EnumDirection;)V updateNeighborsAtExceptFromFacing
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;II)V shapeUpdate
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;II)V executeShapeUpdate
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V executeUpdate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
net/minecraft/world/level/storage/DataVersion net/minecraft/world/level/storage/DataVersion
	a MAIN_SERIES
	b version
	c series
	a ()Z isSideSeries
	a (Lnet/minecraft/world/level/storage/DataVersion;)Z isCompatible
	b ()Ljava/lang/String; getSeries
	c ()I getVersion
net/minecraft/world/level/storage/LevelStorageException net/minecraft/world/level/storage/LevelStorageException
	a messageComponent
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getMessageComponent
net/minecraft/world/level/storage/LevelVersion net/minecraft/world/level/storage/LevelVersion
	a levelDataVersion
	b lastPlayed
	c minecraftVersionName
	d minecraftVersion
	e snapshot
	a ()I levelDataVersion
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/storage/LevelVersion; parse
	b ()J lastPlayed
	c ()Ljava/lang/String; minecraftVersionName
	d ()Lnet/minecraft/world/level/storage/DataVersion; minecraftVersion
	e ()Z snapshot
net/minecraft/world/level/storage/loot/IntRange net/minecraft/world/level/storage/loot/IntRange
	a CODEC
	b RECORD_CODEC
	c min
	d max
	e limiter
	f predicate
	a ()Ljava/util/Set; getReferencedContextParams
	a (I)Lnet/minecraft/world/level/storage/loot/IntRange; exact
	a (II)Lnet/minecraft/world/level/storage/loot/IntRange; range
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;I)I clamp
	b ()Ljava/util/OptionalInt; unpackExact
	b (I)Lnet/minecraft/world/level/storage/loot/IntRange; lowerBound
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo;I)Z test
	c (I)Lnet/minecraft/world/level/storage/loot/IntRange; upperBound
net/minecraft/world/level/storage/loot/LootDataId net/minecraft/world/level/storage/loot/LootDataId
	a type
	b location
	a ()Lnet/minecraft/world/level/storage/loot/LootDataType; type
	b ()Lnet/minecraft/resources/MinecraftKey; location
net/minecraft/world/level/storage/loot/LootDataManager net/minecraft/world/level/storage/loot/LootDataManager
	a EMPTY_LOOT_TABLE_KEY
	b LOGGER
	c GSON
	d elements
	e typeKeys
	a (Lann$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/util/Map;)V apply
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;Lnet/minecraft/world/level/storage/loot/LootDataId;Ljava/lang/Object;)V castAndValidate
	a (Lnet/minecraft/world/level/storage/loot/LootDataType;)Ljava/util/Collection; getKeys
	a (Lnet/minecraft/world/level/storage/loot/LootDataType;Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/concurrent/Executor;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture; scheduleElementParse
net/minecraft/world/level/storage/loot/LootDataType net/minecraft/world/level/storage/loot/LootDataType
	a PREDICATE
	b MODIFIER
	c TABLE
	d LOGGER
	e codec
	f directory
	g validator
	a ()Ljava/lang/String; directory
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonElement;)Ljava/util/Optional; deserialize
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;Lnet/minecraft/world/level/storage/loot/LootDataId;Ljava/lang/Object;)V runValidation
	b ()Ljava/util/stream/Stream; values
	c ()Lecv$a; createSimpleValidator
	d ()Lecv$a; createLootTableValidator
net/minecraft/world/level/storage/loot/LootParams net/minecraft/world/level/storage/loot/LootParams
	a level
	b params
	c dynamicDrops
	d luck
	a ()Lnet/minecraft/server/level/WorldServer; getLevel
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/util/function/Consumer;)V addDynamicDrops
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Z hasParam
	b ()F getLuck
	b (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Ljava/lang/Object; getParameter
	c (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Ljava/lang/Object; getOptionalParameter
	d (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Ljava/lang/Object; getParamOrNull
net/minecraft/world/level/storage/loot/LootTable net/minecraft/world/level/storage/loot/LootTable
	a EMPTY
	b DEFAULT_PARAM_SET
	c CODEC
	d LOGGER
	e paramSet
	f randomSequence
	g pools
	h functions
	i compositeFunction
	a ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet; getParamSet
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;ILnet/minecraft/util/RandomSource;)V shuffleAndSplitItems
	a (Lnet/minecraft/server/level/WorldServer;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; createStackSplitter
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getAvailableSlots
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/storage/loot/LootParams;J)V fill
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	a (Lnet/minecraft/world/level/storage/loot/LootParams;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; getRandomItems
	a (Lnet/minecraft/world/level/storage/loot/LootParams;J)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; getRandomItems
	a (Lnet/minecraft/world/level/storage/loot/LootParams;JLjava/util/function/Consumer;)V getRandomItems
	a (Lnet/minecraft/world/level/storage/loot/LootParams;Ljava/util/function/Consumer;)V getRandomItemsRaw
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; getRandomItems
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Ljava/util/function/Consumer;)V getRandomItemsRaw
	b ()Lecy$a; lootTable
	b (Lnet/minecraft/world/level/storage/loot/LootParams;Ljava/util/function/Consumer;)V getRandomItems
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Ljava/util/function/Consumer;)V getRandomItems
net/minecraft/world/level/storage/loot/entries/LootItem net/minecraft/world/level/storage/loot/entries/LootItem
	a CODEC
	j item
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/world/level/IMaterial;)Ledl$a; lootTableItem
net/minecraft/world/level/storage/loot/functions/FunctionReference net/minecraft/world/level/storage/loot/functions/FunctionReference
	a CODEC
	b LOGGER
	c name
	a (Lnet/minecraft/resources/MinecraftKey;)Leec$a; functionReference
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/LootItemFunctionType net/minecraft/world/level/storage/loot/functions/LootItemFunctionType
	a codec
	a ()Lcom/mojang/serialization/Codec; codec
net/minecraft/world/level/storage/loot/functions/LootItemFunctions net/minecraft/world/level/storage/loot/functions/LootItemFunctions
	A SET_INSTRUMENT
	B REFERENCE
	C SEQUENCE
	D TYPED_CODEC
	a IDENTITY
	b CODEC
	c SET_COUNT
	d ENCHANT_WITH_LEVELS
	e ENCHANT_RANDOMLY
	f SET_ENCHANTMENTS
	g SET_NBT
	h FURNACE_SMELT
	i LOOTING_ENCHANT
	j SET_DAMAGE
	k SET_ATTRIBUTES
	l SET_NAME
	m EXPLORATION_MAP
	n SET_STEW_EFFECT
	o COPY_NAME
	p SET_CONTENTS
	q LIMIT_COUNT
	r APPLY_BONUS
	s SET_LOOT_TABLE
	t EXPLOSION_DECAY
	u SET_LORE
	v FILL_PLAYER_HEAD
	w COPY_NBT
	x COPY_STATE
	y SET_BANNER_PATTERN
	z SET_POTION
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; register
	a (Ljava/util/List;)Ljava/util/function/BiFunction; compose
net/minecraft/world/level/storage/loot/functions/SequenceFunction net/minecraft/world/level/storage/loot/functions/SequenceFunction
	a CODEC
	b INLINE_CODEC
	c functions
	d compositeFunction
	a (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/functions/SequenceFunction; of
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; apply
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction
	a CODEC
	b PATTERN_CODEC
	c patterns
	d append
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Z)Leej$a; setBannerPattern
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction
	a CODEC
	b enchantments
	c add
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ljava/util/Map;Lnet/minecraft/world/item/enchantment/Enchantment;I)V updateEnchantment
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction
	a CODEC
	b options
	a (Lnet/minecraft/tags/TagKey;)Leec$a; setInstrumentOptions
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/functions/SetPotionFunction net/minecraft/world/level/storage/loot/functions/SetPotionFunction
	a CODEC
	b potion
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;)Leec$a; setPotion
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/predicates/AllOfCondition net/minecraft/world/level/storage/loot/predicates/AllOfCondition
	a CODEC
	b INLINE_CODEC
	a (Ljava/util/List;)Lnet/minecraft/world/level/storage/loot/predicates/AllOfCondition; allOf
	a ([Lefp$a;)Lefd$a; allOf
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
net/minecraft/world/level/storage/loot/predicates/AnyOfCondition net/minecraft/world/level/storage/loot/predicates/AnyOfCondition
	a CODEC
	a ([Lefp$a;)Lefe$a; anyOf
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition
	a composedPredicate
	c terms
	a (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; createCodec
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; createInlineCodec
net/minecraft/world/level/storage/loot/predicates/LootItemConditionType net/minecraft/world/level/storage/loot/predicates/LootItemConditionType
	a codec
	a ()Lcom/mojang/serialization/Codec; codec
net/minecraft/world/level/storage/loot/predicates/LootItemConditions net/minecraft/world/level/storage/loot/predicates/LootItemConditions
	a CODEC
	b INVERTED
	c ANY_OF
	d ALL_OF
	e RANDOM_CHANCE
	f RANDOM_CHANCE_WITH_LOOTING
	g ENTITY_PROPERTIES
	h KILLED_BY_PLAYER
	i ENTITY_SCORES
	j BLOCK_STATE_PROPERTY
	k MATCH_TOOL
	l TABLE_BONUS
	m SURVIVES_EXPLOSION
	n DAMAGE_SOURCE_PROPERTIES
	o LOCATION_CHECK
	p WEATHER_CHECK
	q REFERENCE
	r TIME_CHECK
	s VALUE_CHECK
	t TYPED_CODEC
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; register
	a (Ljava/util/List;)Ljava/util/function/Predicate; andConditions
	b (Ljava/util/List;)Ljava/util/function/Predicate; orConditions
net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition
	a CODEC
	b provider
	c range
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Lnet/minecraft/world/level/storage/loot/IntRange;)Lefp$a; hasValue
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	c ()Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider; provider
	d ()Lnet/minecraft/world/level/storage/loot/IntRange; range
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider
	a BLOCK_ENTITY
	b CODEC
	c INLINE_CODEC
	d BLOCK_ENTITY_ID
	e BLOCK_ENTITY_PROVIDER
	f GETTER_CODEC
	g getter
	a ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/nbt/NbtProvider; forContextEntity
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/nbt/NBTBase; get
	b ()Ljava/util/Set; getReferencedContextParams
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Legb$a; forEntity
net/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType net/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType
	a codec
	a ()Lcom/mojang/serialization/Codec; codec
net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders
	a CODEC
	b STORAGE
	c CONTEXT
	d TYPED_CODEC
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; register
net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider
	a CODEC
	b id
	a ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/nbt/NBTBase; get
	b ()Ljava/util/Set; getReferencedContextParams
	c ()Lnet/minecraft/resources/MinecraftKey; id
net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator
	a CODEC
	b n
	c p
	a ()Ljava/util/Set; getReferencedContextParams
	a (IF)Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator; binomial
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)I getInt
	b ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; getType
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)F getFloat
	c ()Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider; n
	d ()Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider; p
net/minecraft/world/level/storage/loot/providers/number/ConstantValue net/minecraft/world/level/storage/loot/providers/number/ConstantValue
	a CODEC
	b INLINE_CODEC
	c value
	a (F)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; exactly
	b ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; getType
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)F getFloat
	c ()F value
net/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType net/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType
	a codec
	a ()Lcom/mojang/serialization/Codec; codec
net/minecraft/world/level/storage/loot/providers/number/NumberProviders net/minecraft/world/level/storage/loot/providers/number/NumberProviders
	a CODEC
	b CONSTANT
	c UNIFORM
	d BINOMIAL
	e SCORE
	f TYPED_CODEC
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; register
net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue
	a CODEC
	b target
	c score
	d scale
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; fromScoreboard
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;Ljava/lang/String;F)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; fromScoreboard
	b ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; getType
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)F getFloat
	c ()Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; target
	d ()Ljava/lang/String; score
	e ()F scale
net/minecraft/world/level/storage/loot/providers/number/UniformGenerator net/minecraft/world/level/storage/loot/providers/number/UniformGenerator
	a CODEC
	b min
	c max
	a ()Ljava/util/Set; getReferencedContextParams
	a (FF)Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator; between
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)I getInt
	b ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; getType
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)F getFloat
	c ()Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider; min
	d ()Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider; max
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider
	a CODEC
	b INLINE_CODEC
	c target
	a ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; forTarget
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Ljava/lang/String; getScoreboardName
	b ()Ljava/util/Set; getReferencedContextParams
	c ()Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget; target
net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider
	a CODEC
	b name
	a ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; getType
	a (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; forName
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Ljava/lang/String; getScoreboardName
	b ()Ljava/util/Set; getReferencedContextParams
	c ()Ljava/lang/String; name
net/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType net/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType
	a codec
	a ()Lcom/mojang/serialization/Codec; codec
net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders
	a CODEC
	b FIXED
	c CONTEXT
	d TYPED_CODEC
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; register
net/minecraft/world/level/validation/ContentValidationException net/minecraft/world/level/validation/ContentValidationException
	a directory
	b entries
	a (Ljava/nio/file/Path;Ljava/util/List;)Ljava/lang/String; getMessage
net/minecraft/world/level/validation/DirectoryValidator net/minecraft/world/level/validation/DirectoryValidator
	a symlinkTargetAllowList
	a (Ljava/nio/file/Path;)Ljava/util/List; validateSymlink
	a (Ljava/nio/file/Path;Ljava/util/List;)V validateSymlink
	a (Ljava/nio/file/Path;Z)Ljava/util/List; validateDirectory
	b (Ljava/nio/file/Path;Ljava/util/List;)V validateKnownDirectory
net/minecraft/world/level/validation/ForbiddenSymlinkInfo net/minecraft/world/level/validation/ForbiddenSymlinkInfo
	a link
	b target
	a ()Ljava/nio/file/Path; link
	b ()Ljava/nio/file/Path; target
net/minecraft/world/level/validation/PathAllowList net/minecraft/world/level/validation/PathAllowList
	a LOGGER
	b COMMENT_PREFIX
	c entries
	d compiledPaths
	a (Ljava/io/BufferedReader;)Lnet/minecraft/world/level/validation/PathAllowList; readPlain
	a (Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher; getForFileSystem
net/minecraft/world/phys/shapes/VoxelShape net/minecraft/world/phys/shapes/VoxelShape
	a shape
	b faces
	a ()Lnet/minecraft/world/phys/AxisAlignedBB; bounds
	a (DDD)Lnet/minecraft/world/phys/shapes/VoxelShape; move
	a (Leid$a;)V forAllEdges
	a (Lnet/minecraft/core/EnumAxisCycle;Lnet/minecraft/world/phys/AxisAlignedBB;D)D collideX
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;D)I findIndex
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;DD)D min
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;I)D get
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/world/phys/AxisAlignedBB;D)D collide
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/phys/shapes/VoxelShape; getFaceShape
	a (Lnet/minecraft/world/phys/Vec3D;)Ljava/util/Optional; closestPointTo
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; clip
	b ()Lnet/minecraft/world/phys/shapes/VoxelShape; singleEncompassing
	b (Leid$a;)V forAllBoxes
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;)D min
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;DD)D max
	b (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/phys/shapes/VoxelShape; calculateFace
	c ()Z isEmpty
	c (Lnet/minecraft/core/EnumDirection$EnumAxis;)D max
	d ()Lnet/minecraft/world/phys/shapes/VoxelShape; optimize
	e ()Ljava/util/List; toAabbs
net/minecraft/world/scores/DisplaySlot net/minecraft/world/scores/DisplaySlot
	a LIST
	b SIDEBAR
	c BELOW_NAME
	d TEAM_BLACK
	e TEAM_DARK_BLUE
	f TEAM_DARK_GREEN
	g TEAM_DARK_AQUA
	h TEAM_DARK_RED
	i TEAM_DARK_PURPLE
	j TEAM_GOLD
	k TEAM_GRAY
	l TEAM_DARK_GRAY
	m TEAM_BLUE
	n TEAM_GREEN
	o TEAM_AQUA
	p TEAM_RED
	q TEAM_LIGHT_PURPLE
	r TEAM_YELLOW
	s TEAM_WHITE
	t CODEC
	u BY_ID
	v id
	w name
	x $VALUES
	a ()I id
	a (Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/world/scores/DisplaySlot; teamColorToSlot
	b ()[Lnet/minecraft/world/scores/DisplaySlot; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/scores/Scoreboard net/minecraft/world/scores/Scoreboard
	a LOGGER
	b objectivesByName
	c objectivesByCriteria
	d playerScores
	e displayObjectives
	f teamsByName
	g teamsByPlayer
	a (Ljava/lang/String;)V onPlayerRemoved
	a (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardObjective;)V onPlayerScoreRemoved
	a (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardTeam;)Z addPlayerToTeam
	a (Ljava/lang/String;Lnet/minecraft/world/scores/criteria/IScoreboardCriteria;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay;)Lnet/minecraft/world/scores/ScoreboardObjective; addObjective
	a (Lnet/minecraft/nbt/NBTTagList;)V loadPlayerScores
	a (Lnet/minecraft/world/entity/Entity;)V entityRemoved
	a (Lnet/minecraft/world/scores/DisplaySlot;)Lnet/minecraft/world/scores/ScoreboardObjective; getDisplayObjective
	a (Lnet/minecraft/world/scores/DisplaySlot;Lnet/minecraft/world/scores/ScoreboardObjective;)V setDisplayObjective
	a (Lnet/minecraft/world/scores/ScoreboardObjective;)V onObjectiveAdded
	a (Lnet/minecraft/world/scores/ScoreboardScore;)V onScoreChanged
	a (Lnet/minecraft/world/scores/ScoreboardTeam;)V onTeamAdded
	a (Lnet/minecraft/world/scores/criteria/IScoreboardCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V forAllObjectives
	b (Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardObjective; getObjective
	b (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardObjective;)Z hasPlayerScore
	b (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardTeam;)V removePlayerFromTeam
	b (Lnet/minecraft/world/scores/ScoreboardObjective;)V onObjectiveChanged
	b (Lnet/minecraft/world/scores/ScoreboardTeam;)V onTeamChanged
	c ()Ljava/util/Collection; getObjectives
	c (Ljava/lang/String;)Ljava/util/Map; getPlayerScores
	c (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardObjective;)Lnet/minecraft/world/scores/ScoreboardScore; getOrCreatePlayerScore
	c (Lnet/minecraft/world/scores/ScoreboardObjective;)V onObjectiveRemoved
	c (Lnet/minecraft/world/scores/ScoreboardTeam;)V onTeamRemoved
	d ()Ljava/util/Collection; getObjectiveNames
	d (Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardTeam; getPlayerTeam
	d (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardObjective;)V resetPlayerScore
	d (Lnet/minecraft/world/scores/ScoreboardTeam;)V removePlayerTeam
	e ()Ljava/util/Collection; getTrackedPlayers
	e (Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardTeam; addPlayerTeam
	f ()Ljava/util/Collection; getTeamNames
	f (Ljava/lang/String;)Z removePlayerFromTeam
	g ()Ljava/util/Collection; getPlayerTeams
	g (Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardTeam; getPlayersTeam
	h ()Lnet/minecraft/nbt/NBTTagList; savePlayerScores
	i (Lnet/minecraft/world/scores/ScoreboardObjective;)Ljava/util/Collection; getPlayerScores
	j (Lnet/minecraft/world/scores/ScoreboardObjective;)V removeObjective
net/minecraft/world/ticks/LevelChunkTicks net/minecraft/world/ticks/LevelChunkTicks
	a tickQueue
	b pendingTicks
	c ticksPerPosition
	d onTickAdded
	a ()I count
	a (J)V unpack
	a (JLjava/util/function/Function;)Lnet/minecraft/nbt/NBTTagList; save
	a (Ljava/util/function/BiConsumer;)V setOnTickAdded
	a (Ljava/util/function/Predicate;)V removeIf
	a (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/nbt/NBTTagList;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/world/ticks/LevelChunkTicks; load
	a (Lnet/minecraft/world/ticks/NextTickListEntry;)V schedule
	b ()Lnet/minecraft/world/ticks/NextTickListEntry; peek
	b (JLjava/util/function/Function;)Lnet/minecraft/nbt/NBTBase; save
	b (Lnet/minecraft/world/ticks/NextTickListEntry;)V scheduleUnchecked
	c ()Lnet/minecraft/world/ticks/NextTickListEntry; poll
	d ()Ljava/util/stream/Stream; getAll
net/minecraft/BlockUtil net/minecraft/BlockUtil
	a (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/core/EnumDirection;I)I getLimit
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection$EnumAxis;ILnet/minecraft/core/EnumDirection$EnumAxis;ILjava/util/function/Predicate;)Lnet/minecraft/BlockUtil$Rectangle; getLargestRectangleAround
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; getTopConnectedBlock
	a ([I)Lcom/mojang/datafixers/util/Pair; getMaxRectangleLocation
net/minecraft/Optionull net/minecraft/Optionull
	a (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; map
	a (Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; mapOrDefault
	a (Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object; mapOrElse
	a (Ljava/util/Collection;)Ljava/lang/Object; first
	a (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; firstOrDefault
	a (Ljava/util/Collection;Ljava/util/function/Supplier;)Ljava/lang/Object; firstOrElse
	a ([B)Z isNullOrEmpty
	a ([C)Z isNullOrEmpty
	a ([D)Z isNullOrEmpty
	a ([F)Z isNullOrEmpty
	a ([I)Z isNullOrEmpty
	a ([J)Z isNullOrEmpty
	a ([Ljava/lang/Object;)Z isNullOrEmpty
	a ([S)Z isNullOrEmpty
	a ([Z)Z isNullOrEmpty
net/minecraft/WorldVersion net/minecraft/WorldVersion
	a (Lnet/minecraft/server/packs/EnumResourcePackType;)I getPackVersion
	b ()Ljava/lang/String; getId
	c ()Ljava/lang/String; getName
	d ()Lnet/minecraft/world/level/storage/DataVersion; getDataVersion
	e ()I getProtocolVersion
	f ()Ljava/util/Date; getBuildTime
	g ()Z isStable
net/minecraft/advancements/CriterionTrigger net/minecraft/advancements/CriterionTrigger
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/CriterionInstance; createInstance
	a (Lnet/minecraft/advancements/CriterionInstance;)Lnet/minecraft/advancements/Criterion; createCriterion
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lao$a;)V addPlayerListener
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lao$a;)V removePlayerListener
net/minecraft/advancements/critereon/DistanceTrigger net/minecraft/advancements/critereon/DistanceTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbi$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/phys/Vec3D;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcc$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/LightningStrikeTrigger net/minecraft/advancements/critereon/LightningStrikeTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lci$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/EntityLightning;Ljava/util/List;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/PickedUpItemTrigger net/minecraft/advancements/critereon/PickedUpItemTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lco$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/PlayerTrigger net/minecraft/advancements/critereon/PlayerTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcs$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/RecipeCraftedTrigger net/minecraft/advancements/critereon/RecipeCraftedTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lct$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/resources/MinecraftKey;Ljava/util/List;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/StartRidingTrigger net/minecraft/advancements/critereon/StartRidingTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcz$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/advancements/critereon/UsingItemTrigger net/minecraft/advancements/critereon/UsingItemTrigger
	a (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ldi$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Ljava/util/Optional;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcw$a; createInstance
net/minecraft/commands/CommandBuildContext net/minecraft/commands/CommandBuildContext
	a (Lhg$b;Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/commands/CommandBuildContext; simple
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/flag/FeatureFlagSet;)Ldn$a; configurable
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderLookup; holderLookup
net/minecraft/commands/arguments/TemplateMirrorArgument net/minecraft/commands/arguments/TemplateMirrorArgument
	a ()Lnet/minecraft/commands/arguments/StringRepresentableArgument; templateMirror
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/block/EnumBlockMirror; getMirror
net/minecraft/commands/arguments/TemplateRotationArgument net/minecraft/commands/arguments/TemplateRotationArgument
	a ()Lnet/minecraft/commands/arguments/TemplateRotationArgument; templateRotation
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
net/minecraft/commands/synchronization/ArgumentTypeInfo net/minecraft/commands/synchronization/ArgumentTypeInfo
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	a (Lcom/mojang/brigadier/arguments/DoubleArgumentType;)Lgn$a; unpack
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgn$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgn$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;)Lgn$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	a (Lcom/mojang/brigadier/arguments/FloatArgumentType;)Lgo$a; unpack
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgo$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgo$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;)Lgo$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	a (Lcom/mojang/brigadier/arguments/IntegerArgumentType;)Lgp$a; unpack
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgp$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgp$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;)Lgp$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
net/minecraft/commands/synchronization/brigadier/LongArgumentInfo net/minecraft/commands/synchronization/brigadier/LongArgumentInfo
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	a (Lcom/mojang/brigadier/arguments/LongArgumentType;)Lgq$a; unpack
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgq$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgq$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;)Lgq$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
net/minecraft/core/Holder net/minecraft/core/Holder
	a ()Ljava/lang/Object; value
	a (Ljava/lang/Object;)Lnet/minecraft/core/Holder; direct
	a (Ljava/util/function/Predicate;)Z is
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
	a (Lnet/minecraft/resources/MinecraftKey;)Z is
	a (Lnet/minecraft/resources/ResourceKey;)Z is
	a (Lnet/minecraft/tags/TagKey;)Z is
	b ()Z isBound
	c ()Ljava/util/stream/Stream; tags
	d ()Lcom/mojang/datafixers/util/Either; unwrap
	e ()Ljava/util/Optional; unwrapKey
	f ()Lhe$b; kind
net/minecraft/core/HolderGetter net/minecraft/core/HolderGetter
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; get
	a (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; get
	b (Lnet/minecraft/resources/ResourceKey;)Lhe$c; getOrThrow
	b (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; getOrThrow
net/minecraft/core/HolderLookup net/minecraft/core/HolderLookup
	a (Ljava/util/function/Predicate;)Lnet/minecraft/core/HolderLookup; filterElements
	b ()Ljava/util/stream/Stream; listElements
	c ()Ljava/util/stream/Stream; listElementIds
	d ()Ljava/util/stream/Stream; listTags
	e ()Ljava/util/stream/Stream; listTagIds
net/minecraft/core/HolderOwner net/minecraft/core/HolderOwner
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
net/minecraft/core/HolderSet net/minecraft/core/HolderSet
	a ()Ljava/util/stream/Stream; stream
	a (I)Lnet/minecraft/core/Holder; get
	a (Ljava/util/List;)Lhi$a; direct
	a (Ljava/util/function/Function;Ljava/util/Collection;)Lhi$a; direct
	a (Ljava/util/function/Function;[Ljava/lang/Object;)Lhi$a; direct
	a (Lnet/minecraft/core/Holder;)Z contains
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
	a (Lnet/minecraft/core/HolderOwner;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; emptyNamed
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandomElement
	a ([Lnet/minecraft/core/Holder;)Lhi$a; direct
	b ()I size
	c ()Lcom/mojang/datafixers/util/Either; unwrap
	d ()Ljava/util/Optional; unwrapKey
net/minecraft/core/RegistryCodecs net/minecraft/core/RegistryCodecs
	a (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; homogeneousList
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; homogeneousList
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; homogeneousList
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; networkCodec
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; withNameAndId
	a (Lnet/minecraft/resources/ResourceKey;Z)Lcom/mojang/serialization/Codec; homogeneousList
	b (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; fullCodec
net/minecraft/data/Main net/minecraft/data/Main
	a (Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZLnet/minecraft/WorldVersion;Z)Ljh; createStandardGenerator
	a (Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;)Lji$a; bindRegistries
net/minecraft/data/worldgen/AncientCityStructurePools net/minecraft/data/worldgen/AncientCityStructurePools
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/BootstapContext net/minecraft/data/worldgen/BootstapContext
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderGetter; lookup
	a (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Lhe$c; register
	a (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c; register
net/minecraft/data/worldgen/DimensionTypes net/minecraft/data/worldgen/DimensionTypes
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/StructureSets net/minecraft/data/worldgen/StructureSets
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/Structures net/minecraft/data/worldgen/Structures
	a (Lnet/minecraft/core/HolderSet;Ljava/util/Map;Lnet/minecraft/world/level/levelgen/WorldGenStage$Decoration;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Ldvi$c; structure
	a (Lnet/minecraft/core/HolderSet;Lnet/minecraft/world/level/levelgen/WorldGenStage$Decoration;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Ldvi$c; structure
	a (Lnet/minecraft/core/HolderSet;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Ldvi$c; structure
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/biome/BiomeData net/minecraft/data/worldgen/biome/BiomeData
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/biome/EndBiomes net/minecraft/data/worldgen/biome/EndBiomes
	a (Lcqu$a;)Lnet/minecraft/world/level/biome/BiomeBase; baseEndBiome
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; endBarrens
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; theEnd
	c (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; endMidlands
	d (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; endHighlands
	e (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; smallEndIslands
net/minecraft/data/worldgen/biome/NetherBiomes net/minecraft/data/worldgen/biome/NetherBiomes
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; netherWastes
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; soulSandValley
	c (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; basaltDeltas
	d (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; crimsonForest
	e (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; warpedForest
net/minecraft/data/worldgen/features/FeatureUtils net/minecraft/data/worldgen/features/FeatureUtils
	a (ILnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomPatchConfiguration; simpleRandomPatchConfiguration
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; simplePatchPredicate
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;)V register
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;)V register
	a (Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomPatchConfiguration; simplePatchConfiguration
	a (Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomPatchConfiguration; simplePatchConfiguration
	a (Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;Ljava/util/List;I)Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomPatchConfiguration; simplePatchConfiguration
net/minecraft/gametest/framework/AfterBatch net/minecraft/gametest/framework/AfterBatch
	a ()Ljava/lang/String; batch
net/minecraft/gametest/framework/BeforeBatch net/minecraft/gametest/framework/BeforeBatch
	a ()Ljava/lang/String; batch
net/minecraft/gametest/framework/GameTest net/minecraft/gametest/framework/GameTest
	a ()I timeoutTicks
	b ()Ljava/lang/String; batch
	c ()I rotationSteps
	d ()Z required
	e ()Ljava/lang/String; template
	f ()J setupTicks
	g ()I attempts
	h ()I requiredSuccesses
net/minecraft/nbt/StreamTagVisitor net/minecraft/nbt/StreamTagVisitor
	a ()Lrn$b; visitEnd
	a (B)Lrn$b; visit
	a (D)Lrn$b; visit
	a (F)Lrn$b; visit
	a (I)Lrn$b; visit
	a (J)Lrn$b; visit
	a (Ljava/lang/String;)Lrn$b; visit
	a (Lnet/minecraft/nbt/NBTTagType;)Lrn$a; visitEntry
	a (Lnet/minecraft/nbt/NBTTagType;I)Lrn$b; visitList
	a (Lnet/minecraft/nbt/NBTTagType;Ljava/lang/String;)Lrn$a; visitEntry
	a (S)Lrn$b; visit
	a ([B)Lrn$b; visit
	a ([I)Lrn$b; visit
	a ([J)Lrn$b; visit
	b ()Lrn$b; visitContainerEnd
	b (Lnet/minecraft/nbt/NBTTagType;)Lrn$b; visitRootEntry
	b (Lnet/minecraft/nbt/NBTTagType;I)Lrn$a; visitElement
net/minecraft/nbt/TagVisitor net/minecraft/nbt/TagVisitor
	a (Lnet/minecraft/nbt/NBTTagByte;)V visitByte
	a (Lnet/minecraft/nbt/NBTTagByteArray;)V visitByteArray
	a (Lnet/minecraft/nbt/NBTTagCompound;)V visitCompound
	a (Lnet/minecraft/nbt/NBTTagDouble;)V visitDouble
	a (Lnet/minecraft/nbt/NBTTagEnd;)V visitEnd
	a (Lnet/minecraft/nbt/NBTTagFloat;)V visitFloat
	a (Lnet/minecraft/nbt/NBTTagInt;)V visitInt
	a (Lnet/minecraft/nbt/NBTTagIntArray;)V visitIntArray
	a (Lnet/minecraft/nbt/NBTTagList;)V visitList
	a (Lnet/minecraft/nbt/NBTTagLong;)V visitLong
	a (Lnet/minecraft/nbt/NBTTagLongArray;)V visitLongArray
	a (Lnet/minecraft/nbt/NBTTagShort;)V visitShort
	a (Lnet/minecraft/nbt/NBTTagString;)V visitString
net/minecraft/network/ClientPongPacketListener net/minecraft/network/ClientPongPacketListener
	a (Lnet/minecraft/network/protocol/status/PacketStatusOutPong;)V handlePongResponse
net/minecraft/network/ClientboundPacketListener net/minecraft/network/ClientboundPacketListener
	a ()Lnet/minecraft/network/protocol/EnumProtocolDirection; flow
net/minecraft/network/PacketListener net/minecraft/network/PacketListener
	a ()Lnet/minecraft/network/protocol/EnumProtocolDirection; flow
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/protocol/Packet;)Z shouldHandleMessage
	b ()Lnet/minecraft/network/EnumProtocol; protocol
	c ()Z isAcceptingMessages
	d ()Z shouldPropagateHandlingExceptions
net/minecraft/network/PacketSendListener net/minecraft/network/PacketSendListener
	a ()V onSuccess
	a (Ljava/lang/Runnable;)Lnet/minecraft/network/PacketSendListener; thenRun
	a (Ljava/util/function/Supplier;)Lnet/minecraft/network/PacketSendListener; exceptionallySend
	b ()Lnet/minecraft/network/protocol/Packet; onFailure
net/minecraft/network/ProtocolSwapHandler net/minecraft/network/ProtocolSwapHandler
	a (Lio/netty/util/Attribute;Lnet/minecraft/network/protocol/Packet;)V swapProtocolIfNeeded
net/minecraft/network/ServerboundPacketListener net/minecraft/network/ServerboundPacketListener
	a ()Lnet/minecraft/network/protocol/EnumProtocolDirection; flow
net/minecraft/network/TickablePacketListener net/minecraft/network/TickablePacketListener
	e ()V tick
net/minecraft/network/Utf8String net/minecraft/network/Utf8String
	a (Lio/netty/buffer/ByteBuf;I)Ljava/lang/String; read
	a (Lio/netty/buffer/ByteBuf;Ljava/lang/CharSequence;I)V write
net/minecraft/network/chat/OutgoingChatMessage net/minecraft/network/chat/OutgoingChatMessage
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; content
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)Lnet/minecraft/network/chat/OutgoingChatMessage; create
	a (Lnet/minecraft/server/level/EntityPlayer;ZLth$a;)V sendToPlayer
net/minecraft/network/protocol/BundleDelimiterPacket net/minecraft/network/protocol/BundleDelimiterPacket
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
net/minecraft/network/protocol/Packet net/minecraft/network/protocol/Packet
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b ()Z isSkippable
	c ()Lnet/minecraft/network/EnumProtocol; nextProtocol
net/minecraft/network/protocol/common/ClientCommonPacketListener net/minecraft/network/protocol/common/ClientCommonPacketListener
	a (Lnet/minecraft/network/protocol/common/ClientboundCustomPayloadPacket;)V handleCustomPayload
	a (Lnet/minecraft/network/protocol/common/ClientboundDisconnectPacket;)V handleDisconnect
	a (Lnet/minecraft/network/protocol/common/ClientboundKeepAlivePacket;)V handleKeepAlive
	a (Lnet/minecraft/network/protocol/common/ClientboundPingPacket;)V handlePing
	a (Lnet/minecraft/network/protocol/common/ClientboundResourcePackPacket;)V handleResourcePack
	a (Lnet/minecraft/network/protocol/common/ClientboundUpdateTagsPacket;)V handleUpdateTags
net/minecraft/network/protocol/common/ServerCommonPacketListener net/minecraft/network/protocol/common/ServerCommonPacketListener
	a (Lnet/minecraft/network/protocol/common/ServerboundClientInformationPacket;)V handleClientInformation
	a (Lnet/minecraft/network/protocol/common/ServerboundCustomPayloadPacket;)V handleCustomPayload
	a (Lnet/minecraft/network/protocol/common/ServerboundKeepAlivePacket;)V handleKeepAlive
	a (Lnet/minecraft/network/protocol/common/ServerboundPongPacket;)V handlePong
	a (Lnet/minecraft/network/protocol/common/ServerboundResourcePackPacket;)V handleResourcePackResponse
net/minecraft/network/protocol/common/custom/CustomPacketPayload net/minecraft/network/protocol/common/custom/CustomPacketPayload
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
net/minecraft/network/protocol/configuration/ClientConfigurationPacketListener net/minecraft/network/protocol/configuration/ClientConfigurationPacketListener
	a (Lnet/minecraft/network/protocol/configuration/ClientboundFinishConfigurationPacket;)V handleConfigurationFinished
	a (Lnet/minecraft/network/protocol/configuration/ClientboundRegistryDataPacket;)V handleRegistryData
	a (Lnet/minecraft/network/protocol/configuration/ClientboundUpdateEnabledFeaturesPacket;)V handleEnabledFeatures
	b ()Lnet/minecraft/network/EnumProtocol; protocol
net/minecraft/network/protocol/configuration/ClientboundFinishConfigurationPacket net/minecraft/network/protocol/configuration/ClientboundFinishConfigurationPacket
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/configuration/ClientConfigurationPacketListener;)V handle
	c ()Lnet/minecraft/network/EnumProtocol; nextProtocol
net/minecraft/network/protocol/configuration/ServerConfigurationPacketListener net/minecraft/network/protocol/configuration/ServerConfigurationPacketListener
	a (Lnet/minecraft/network/protocol/configuration/ServerboundFinishConfigurationPacket;)V handleConfigurationFinished
	b ()Lnet/minecraft/network/EnumProtocol; protocol
net/minecraft/network/protocol/configuration/ServerboundFinishConfigurationPacket net/minecraft/network/protocol/configuration/ServerboundFinishConfigurationPacket
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/configuration/ServerConfigurationPacketListener;)V handle
	c ()Lnet/minecraft/network/EnumProtocol; nextProtocol
net/minecraft/network/protocol/game/ClientboundBundlePacket net/minecraft/network/protocol/game/ClientboundBundlePacket
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundChunkBatchStartPacket net/minecraft/network/protocol/game/ClientboundChunkBatchStartPacket
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundStartConfigurationPacket net/minecraft/network/protocol/game/ClientboundStartConfigurationPacket
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lnet/minecraft/network/EnumProtocol; nextProtocol
net/minecraft/network/protocol/game/ServerPacketListener net/minecraft/network/protocol/game/ServerPacketListener
	d ()Z shouldPropagateHandlingExceptions
net/minecraft/network/protocol/game/ServerPingPacketListener net/minecraft/network/protocol/game/ServerPingPacketListener
	a (Lnet/minecraft/network/protocol/status/PacketStatusInPing;)V handlePingRequest
net/minecraft/network/protocol/game/ServerboundConfigurationAcknowledgedPacket net/minecraft/network/protocol/game/ServerboundConfigurationAcknowledgedPacket
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Lnet/minecraft/network/EnumProtocol; nextProtocol
net/minecraft/network/protocol/login/ServerboundLoginAcknowledgedPacket net/minecraft/network/protocol/login/ServerboundLoginAcknowledgedPacket
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginInListener;)V handle
	c ()Lnet/minecraft/network/EnumProtocol; nextProtocol
net/minecraft/network/protocol/login/custom/CustomQueryAnswerPayload net/minecraft/network/protocol/login/custom/CustomQueryAnswerPayload
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
net/minecraft/network/protocol/login/custom/CustomQueryPayload net/minecraft/network/protocol/login/custom/CustomQueryPayload
	a ()Lnet/minecraft/resources/MinecraftKey; id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
net/minecraft/server/ServerInfo net/minecraft/server/ServerInfo
	G ()Ljava/lang/String; getServerVersion
	H ()I getPlayerCount
	I ()I getMaxPlayers
	aa ()Ljava/lang/String; getMotd
net/minecraft/server/commands/DebugConfigCommand net/minecraft/server/commands/DebugConfigCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/UUID;)I unconfig
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/level/EntityPlayer;)I config
	a (Lnet/minecraft/server/MinecraftServer;)Ljava/lang/Iterable; getUuidsInConfig
net/minecraft/server/commands/ReturnCommand net/minecraft/server/commands/ReturnCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;I)I setReturn
net/minecraft/server/network/ConfigurationTask net/minecraft/server/network/ConfigurationTask
	a ()Lalg$a; type
	a (Ljava/util/function/Consumer;)V start
net/minecraft/server/network/ServerPlayerConnection net/minecraft/server/network/ServerPlayerConnection
	b (Lnet/minecraft/network/protocol/Packet;)V send
	p ()Lnet/minecraft/server/level/EntityPlayer; getPlayer
net/minecraft/server/packs/metadata/MetadataSectionType net/minecraft/server/packs/metadata/MetadataSectionType
	a (Ljava/lang/Object;)Lcom/google/gson/JsonObject; toJson
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/packs/metadata/MetadataSectionType; fromCodec
net/minecraft/server/players/IpBanList net/minecraft/server/players/IpBanList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/JsonListEntry; createEntry
	a (Ljava/lang/String;)Z isBanned
	a (Ljava/net/SocketAddress;)Z isBanned
	b (Ljava/net/SocketAddress;)Lnet/minecraft/server/players/IpBanEntry; get
	c (Ljava/net/SocketAddress;)Ljava/lang/String; getIpFromAddress
net/minecraft/tags/TagNetworkSerialization net/minecraft/tags/TagNetworkSerialization
	a (Lnet/minecraft/core/IRegistry;)Laqk$a; serializeToNetwork
	a (Lnet/minecraft/core/LayeredRegistryAccess;)Ljava/util/Map; serializeTagsToNetwork
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/IRegistry;Laqk$a;Laqk$b;)V deserializeTagsFromNetwork
net/minecraft/util/ByIdMap net/minecraft/util/ByIdMap
	a (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)Ljava/util/function/IntFunction; createMap
	a (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Laqr$a;)Ljava/util/function/IntFunction; continuous
	a (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/IntFunction; sparse
	b (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)[Ljava/lang/Object; createSortedArray
net/minecraft/util/CubicSpline net/minecraft/util/CubicSpline
	a ()Ljava/lang/String; parityString
	a (F)Lnet/minecraft/util/CubicSpline; constant
	a (Lara$d;)Lnet/minecraft/util/CubicSpline; mapAll
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/util/ToFloatFunction;)Lara$b; builder
	a (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;)Lara$b; builder
net/minecraft/util/Graph net/minecraft/util/Graph
	a (Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/function/Consumer;Ljava/lang/Object;)Z depthFirstSearch
net/minecraft/util/OptionEnum net/minecraft/util/OptionEnum
	a ()I getId
	b ()Ljava/lang/String; getKey
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getCaption
net/minecraft/util/ParticleUtils net/minecraft/util/ParticleUtils
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;DLnet/minecraft/core/particles/ParticleParam;Lnet/minecraft/util/valueproviders/UniformInt;)V spawnParticlesAlongAxis
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/phys/Vec3D; getRandomSpeedRanges
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/particles/ParticleParam;Lnet/minecraft/world/phys/Vec3D;D)V spawnParticleOnFace
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/particles/ParticleParam;Lnet/minecraft/util/valueproviders/IntProvider;)V spawnParticlesOnBlockFaces
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/particles/ParticleParam;Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/core/EnumDirection;Ljava/util/function/Supplier;D)V spawnParticlesOnBlockFace
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/particles/ParticleParam;)V spawnParticleBelow
net/minecraft/util/SpawnUtil net/minecraft/util/SpawnUtil
	a (Lnet/minecraft/server/level/WorldServer;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;Lasn$a;)Z moveToPossibleSpawnPosition
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;IIILasn$a;)Ljava/util/Optional; trySpawnMob
net/minecraft/util/Tuple net/minecraft/util/Tuple
	a ()Ljava/lang/Object; getA
	a (Ljava/lang/Object;)V setA
	b ()Ljava/lang/Object; getB
	b (Ljava/lang/Object;)V setB
net/minecraft/util/datafix/fixes/AbstractArrowPickupFix net/minecraft/util/datafix/fixes/AbstractArrowPickupFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateProjectiles
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updatePickup
net/minecraft/util/datafix/fixes/BlendingDataRemoveFromNetherEndFix net/minecraft/util/datafix/fixes/BlendingDataRemoveFromNetherEndFix
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic; updateChunkTag
net/minecraft/util/datafix/fixes/CauldronRenameFix net/minecraft/util/datafix/fixes/CauldronRenameFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
net/minecraft/util/datafix/fixes/ChunkRenamesFix net/minecraft/util/datafix/fixes/ChunkRenamesFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; appendChunkName
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; mergeRemainders
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; renameField
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; renameFieldHelper
net/minecraft/util/datafix/fixes/EntityBrushableBlockFieldsRenameFix net/minecraft/util/datafix/fixes/EntityBrushableBlockFieldsRenameFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; renameField
net/minecraft/util/datafix/fixes/EntityGoatMissingStateFix net/minecraft/util/datafix/fixes/EntityGoatMissingStateFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/EntityPaintingFieldsRenameFix net/minecraft/util/datafix/fixes/EntityPaintingFieldsRenameFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; renameField
net/minecraft/util/datafix/fixes/FilteredBooksFix net/minecraft/util/datafix/fixes/FilteredBooksFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixItemStackTag
net/minecraft/util/datafix/fixes/FilteredSignsFix net/minecraft/util/datafix/fixes/FilteredSignsFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/OptionsAmbientOcclusionFix net/minecraft/util/datafix/fixes/OptionsAmbientOcclusionFix
	a (Ljava/lang/String;)Ljava/lang/String; updateValue
net/minecraft/util/datafix/fixes/OptionsProgrammerArtFix net/minecraft/util/datafix/fixes/OptionsProgrammerArtFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixList
net/minecraft/util/datafix/fixes/OverreachingTickFix net/minecraft/util/datafix/fixes/OverreachingTickFix
	a (Lcom/mojang/serialization/Dynamic;IILjava/util/Optional;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; extractOverreachingTicks
net/minecraft/util/datafix/fixes/SpawnerDataFix net/minecraft/util/datafix/fixes/SpawnerDataFix
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; wrapEntityToSpawnData
	b (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; wrapSpawnPotentialsToWeightedEntries
net/minecraft/util/datafix/fixes/StructureSettingsFlattenFix net/minecraft/util/datafix/fixes/StructureSettingsFlattenFix
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; fixDimension
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixStructures
net/minecraft/util/datafix/fixes/WeaponSmithChestLootTableFix net/minecraft/util/datafix/fixes/WeaponSmithChestLootTableFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/schemas/V3078 net/minecraft/util/datafix/schemas/V3078
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/datafix/schemas/V3083 net/minecraft/util/datafix/schemas/V3083
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/profiling/jfr/stats/TimedStat net/minecraft/util/profiling/jfr/stats/TimedStat
	a ()Ljava/time/Duration; duration
net/minecraft/util/profiling/metrics/MetricsSamplerProvider net/minecraft/util/profiling/metrics/MetricsSamplerProvider
	a (Ljava/util/function/Supplier;)Ljava/util/Set; samplers
net/minecraft/util/profiling/metrics/ProfilerMeasured net/minecraft/util/profiling/metrics/ProfilerMeasured
	bk ()Ljava/util/List; profiledMetrics
net/minecraft/util/profiling/metrics/profiling/MetricsRecorder net/minecraft/util/profiling/metrics/profiling/MetricsRecorder
	a ()V end
	b ()V cancel
	c ()V startTick
	d ()V endTick
	e ()Z isRecording
	f ()Lnet/minecraft/util/profiling/GameProfilerFiller; getProfiler
net/minecraft/util/random/SimpleWeightedRandomList net/minecraft/util/random/SimpleWeightedRandomList
	a ()Lbfi$a; builder
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; wrappedCodecAllowingEmpty
	a (Ljava/lang/Object;)Lnet/minecraft/util/random/SimpleWeightedRandomList; single
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandomValue
	b ()Lnet/minecraft/util/random/SimpleWeightedRandomList; empty
	b (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; wrappedCodec
net/minecraft/util/random/WeightedEntry net/minecraft/util/random/WeightedEntry
	a ()Lnet/minecraft/util/random/Weight; getWeight
	a (Ljava/lang/Object;I)Lbfk$b; wrap
net/minecraft/util/valueproviders/SampledFloat net/minecraft/util/valueproviders/SampledFloat
	a (Lnet/minecraft/util/RandomSource;)F sample
net/minecraft/world/Clearable net/minecraft/world/Clearable
	a ()V clearContent
	a_ (Ljava/lang/Object;)V tryClear
net/minecraft/world/effect/AbsorptionMobEffect net/minecraft/world/effect/AbsorptionMobEffect
	a (II)Z shouldApplyEffectTickThisTick
	a (Lnet/minecraft/world/entity/EntityLiving;I)V applyEffectTick
	b (Lnet/minecraft/world/entity/EntityLiving;I)V onEffectStarted
net/minecraft/world/effect/AttributeModifierTemplate net/minecraft/world/effect/AttributeModifierTemplate
	a ()Ljava/util/UUID; getAttributeModifierId
	a (I)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; create
net/minecraft/world/effect/BadOmenMobEffect net/minecraft/world/effect/BadOmenMobEffect
	a (II)Z shouldApplyEffectTickThisTick
	a (Lnet/minecraft/world/entity/EntityLiving;I)V applyEffectTick
net/minecraft/world/effect/HungerMobEffect net/minecraft/world/effect/HungerMobEffect
	a (II)Z shouldApplyEffectTickThisTick
	a (Lnet/minecraft/world/entity/EntityLiving;I)V applyEffectTick
net/minecraft/world/effect/MobEffectUtil net/minecraft/world/effect/MobEffectUtil
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3D;DLnet/minecraft/world/effect/MobEffect;I)Ljava/util/List; addEffectToPlayersAround
	a (Lnet/minecraft/world/effect/MobEffect;F)Lnet/minecraft/network/chat/IChatBaseComponent; formatDuration
	a (Lnet/minecraft/world/entity/EntityLiving;)Z hasDigSpeed
	b (Lnet/minecraft/world/entity/EntityLiving;)I getDigSpeedAmplification
	c (Lnet/minecraft/world/entity/EntityLiving;)Z hasWaterBreathing
net/minecraft/world/effect/PoisonMobEffect net/minecraft/world/effect/PoisonMobEffect
	a (II)Z shouldApplyEffectTickThisTick
	a (Lnet/minecraft/world/entity/EntityLiving;I)V applyEffectTick
net/minecraft/world/effect/RegenerationMobEffect net/minecraft/world/effect/RegenerationMobEffect
	a (II)Z shouldApplyEffectTickThisTick
	a (Lnet/minecraft/world/entity/EntityLiving;I)V applyEffectTick
net/minecraft/world/effect/SaturationMobEffect net/minecraft/world/effect/SaturationMobEffect
	a (Lnet/minecraft/world/entity/EntityLiving;I)V applyEffectTick
net/minecraft/world/effect/WitherMobEffect net/minecraft/world/effect/WitherMobEffect
	a (II)Z shouldApplyEffectTickThisTick
	a (Lnet/minecraft/world/entity/EntityLiving;I)V applyEffectTick
net/minecraft/world/entity/Attackable net/minecraft/world/entity/Attackable
	S_ ()Lnet/minecraft/world/entity/EntityLiving; getLastAttacker
net/minecraft/world/entity/HasCustomInventoryScreen net/minecraft/world/entity/HasCustomInventoryScreen
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V openCustomInventoryScreen
net/minecraft/world/entity/LerpingModel net/minecraft/world/entity/LerpingModel
	a ()Ljava/util/Map; getModelRotationValues
net/minecraft/world/entity/OwnableEntity net/minecraft/world/entity/OwnableEntity
	O_ ()Lnet/minecraft/world/entity/EntityLiving; getOwner
	d ()Ljava/util/UUID; getOwnerUUID
	e ()Lnet/minecraft/world/level/IEntityAccess; level
net/minecraft/world/entity/PowerableMob net/minecraft/world/entity/PowerableMob
	a ()Z isPowered
net/minecraft/world/entity/Targeting net/minecraft/world/entity/Targeting
	q ()Lnet/minecraft/world/entity/EntityLiving; getTarget
net/minecraft/world/entity/TraceableEntity net/minecraft/world/entity/TraceableEntity
	v ()Lnet/minecraft/world/entity/Entity; getOwner
net/minecraft/world/entity/VariantHolder net/minecraft/world/entity/VariantHolder
	a (Ljava/lang/Object;)V setVariant
	c ()Ljava/lang/Object; getVariant
net/minecraft/world/entity/ai/behavior/BehaviorControl net/minecraft/world/entity/ai/behavior/BehaviorControl
	a ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; getStatus
	b ()Ljava/lang/String; debugString
	e (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z tryStart
	f (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tickOrStop
	g (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V doStop
net/minecraft/world/entity/ai/behavior/GoToTargetLocation net/minecraft/world/entity/ai/behavior/GoToTargetLocation
	a (Lnet/minecraft/util/RandomSource;)I getRandomOffset
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; getNearbyPos
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;IF)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes
	a (FLnet/minecraft/util/valueproviders/UniformInt;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (FLnet/minecraft/util/valueproviders/UniformInt;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/world/entity/EntityTypes;FLnet/minecraft/util/valueproviders/UniformInt;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/StayCloseToTarget net/minecraft/world/entity/ai/behavior/StayCloseToTarget
	a (Ljava/util/function/Function;Ljava/util/function/Predicate;IIF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/TriggerGate net/minecraft/world/entity/ai/behavior/TriggerGate
	a (Ljava/util/List;)Lnet/minecraft/world/entity/ai/behavior/OneShot; triggerOneShuffled
	a (Ljava/util/List;Lnet/minecraft/world/entity/ai/behavior/BehaviorGate$Order;Lnet/minecraft/world/entity/ai/behavior/BehaviorGate$Execution;)Lnet/minecraft/world/entity/ai/behavior/OneShot; triggerGate
net/minecraft/world/entity/ai/behavior/TryFindLandNearWater net/minecraft/world/entity/ai/behavior/TryFindLandNearWater
	a (IF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/TryFindWater net/minecraft/world/entity/ai/behavior/TryFindWater
	a (IF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/TryLaySpawnOnWaterNearLand net/minecraft/world/entity/ai/behavior/TryLaySpawnOnWaterNearLand
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition
	a ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; memory
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; createAccessor
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; condition
net/minecraft/world/entity/ai/behavior/warden/Digging net/minecraft/world/entity/ai/behavior/warden/Digging
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/warden/Emerging net/minecraft/world/entity/ai/behavior/warden/Emerging
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/warden/ForceUnmount net/minecraft/world/entity/ai/behavior/warden/ForceUnmount
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/warden/SetRoarTarget net/minecraft/world/entity/ai/behavior/warden/SetRoarTarget
	a (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/warden/SetWardenLookTarget net/minecraft/world/entity/ai/behavior/warden/SetWardenLookTarget
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/navigation/AmphibiousPathNavigation net/minecraft/world/entity/ai/navigation/AmphibiousPathNavigation
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/world/level/pathfinder/Pathfinder; createPathFinder
	a (Lnet/minecraft/core/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/world/phys/Vec3D;)D getGroundY
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z canMoveDirectly
	a (Z)V setCanFloat
	b ()Lnet/minecraft/world/phys/Vec3D; getTempMobPos
net/minecraft/world/entity/ai/sensing/IsInWaterSensor net/minecraft/world/entity/ai/sensing/IsInWaterSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; getVisibleEntities
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isMatchingEntity
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; getMemory
	b (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; getNearestEntity
net/minecraft/world/entity/ai/sensing/WardenEntitySensor net/minecraft/world/entity/ai/sensing/WardenEntitySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;)V doTick
	a (Lnet/minecraft/world/entity/monster/warden/Warden;Ljava/util/function/Predicate;)Ljava/util/Optional; getClosest
	b ()I radiusXZ
	c ()I radiusY
net/minecraft/world/entity/ai/util/AirAndWaterRandomPos net/minecraft/world/entity/ai/util/AirAndWaterRandomPos
	a (Lnet/minecraft/world/entity/EntityCreature;IIIDDD)Lnet/minecraft/world/phys/Vec3D; getPos
	a (Lnet/minecraft/world/entity/EntityCreature;IIIDDDZ)Lnet/minecraft/core/BlockPosition; generateRandomPos
net/minecraft/world/entity/ai/util/AirRandomPos net/minecraft/world/entity/ai/util/AirRandomPos
	a (Lnet/minecraft/world/entity/EntityCreature;IIILnet/minecraft/world/phys/Vec3D;D)Lnet/minecraft/world/phys/Vec3D; getPosTowards
net/minecraft/world/entity/ai/util/DefaultRandomPos net/minecraft/world/entity/ai/util/DefaultRandomPos
	a (Lnet/minecraft/world/entity/EntityCreature;II)Lnet/minecraft/world/phys/Vec3D; getPos
	a (Lnet/minecraft/world/entity/EntityCreature;IILnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getPosAway
	a (Lnet/minecraft/world/entity/EntityCreature;IILnet/minecraft/world/phys/Vec3D;D)Lnet/minecraft/world/phys/Vec3D; getPosTowards
	a (Lnet/minecraft/world/entity/EntityCreature;IZLnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; generateRandomPosTowardDirection
net/minecraft/world/entity/ai/util/HoverRandomPos net/minecraft/world/entity/ai/util/HoverRandomPos
	a (Lnet/minecraft/world/entity/EntityCreature;IIDDFII)Lnet/minecraft/world/phys/Vec3D; getPos
net/minecraft/world/entity/ai/util/LandRandomPos net/minecraft/world/entity/ai/util/LandRandomPos
	a (Lnet/minecraft/world/entity/EntityCreature;II)Lnet/minecraft/world/phys/Vec3D; getPos
	a (Lnet/minecraft/world/entity/EntityCreature;IILjava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3D; getPos
	a (Lnet/minecraft/world/entity/EntityCreature;IILnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getPosTowards
	a (Lnet/minecraft/world/entity/EntityCreature;IILnet/minecraft/world/phys/Vec3D;Z)Lnet/minecraft/world/phys/Vec3D; getPosInDirection
	a (Lnet/minecraft/world/entity/EntityCreature;IZLnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; generateRandomPosTowardDirection
	a (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; movePosUpOutOfSolid
	b (Lnet/minecraft/world/entity/EntityCreature;IILnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getPosAway
net/minecraft/world/entity/animal/Bucketable net/minecraft/world/entity/animal/Bucketable
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/nbt/NBTTagCompound;)V loadDefaultDataFromBucketTag
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/item/ItemStack;)V saveDefaultDataToBucketTag
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; bucketMobPickup
	b ()Lnet/minecraft/world/item/ItemStack; getBucketItemStack
	c (Lnet/minecraft/nbt/NBTTagCompound;)V loadFromBucketTag
	l (Lnet/minecraft/world/item/ItemStack;)V saveToBucketTag
	t ()Z fromBucket
	w (Z)V setFromBucket
	y ()Lnet/minecraft/sounds/SoundEffect; getPickupSound
net/minecraft/world/entity/animal/axolotl/PlayDead net/minecraft/world/entity/animal/axolotl/PlayDead
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/animal/axolotl/ValidatePlayDead net/minecraft/world/entity/animal/axolotl/ValidatePlayDead
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/decoration/GlowItemFrame net/minecraft/world/entity/decoration/GlowItemFrame
	q ()Lnet/minecraft/sounds/SoundEffect; getRemoveItemSound
	s ()Lnet/minecraft/sounds/SoundEffect; getBreakSound
	t ()Lnet/minecraft/sounds/SoundEffect; getPlaceSound
	v ()Lnet/minecraft/sounds/SoundEffect; getAddItemSound
	w ()Lnet/minecraft/sounds/SoundEffect; getRotateItemSound
	x ()Lnet/minecraft/world/item/ItemStack; getFrameItemStack
net/minecraft/world/entity/npc/VillagerDataHolder net/minecraft/world/entity/npc/VillagerDataHolder
	a ()Lnet/minecraft/world/entity/npc/VillagerType; getVariant
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/world/entity/npc/VillagerData;)V setVillagerData
	a (Lnet/minecraft/world/entity/npc/VillagerType;)V setVariant
	c ()Ljava/lang/Object; getVariant
	go ()Lnet/minecraft/world/entity/npc/VillagerData; getVillagerData
net/minecraft/world/entity/projectile/ItemSupplier net/minecraft/world/entity/projectile/ItemSupplier
	q ()Lnet/minecraft/world/item/ItemStack; getItem
net/minecraft/world/entity/vehicle/ContainerEntity net/minecraft/world/entity/vehicle/ContainerEntity
	G ()Lnet/minecraft/resources/MinecraftKey; getLootTable
	H ()J getLootTableSeed
	I ()Lnet/minecraft/core/NonNullList; getItemStacks
	K ()V clearItemStacks
	a (J)V setLootTableSeed
	a (Lnet/minecraft/resources/MinecraftKey;)V setLootTable
	a (Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;)V chestVehicleDestroyed
	af_ ()Z isEmpty
	b (II)Lnet/minecraft/world/item/ItemStack; removeChestVehicleItem
	b_ (Lnet/minecraft/nbt/NBTTagCompound;)V readChestVehicleSaveData
	c (ILnet/minecraft/world/item/ItemStack;)V setChestVehicleItem
	c (Lnet/minecraft/nbt/NBTTagCompound;)V addChestVehicleSaveData
	c_ (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/EnumInteractionResult; interactWithContainerVehicle
	dG ()Z isRemoved
	dL ()Lnet/minecraft/world/level/World; level
	dj ()Lnet/minecraft/world/phys/Vec3D; position
	e_ (I)Lnet/minecraft/world/item/ItemStack; removeChestVehicleItemNoUpdate
	f ()V clearChestVehicleContent
	f (Lnet/minecraft/world/entity/player/EntityHuman;)V unpackChestVehicleLootTable
	f_ (I)Lnet/minecraft/world/item/ItemStack; getChestVehicleItem
	g ()Z isChestVehicleEmpty
	g (Lnet/minecraft/world/entity/player/EntityHuman;)Z isChestVehicleStillValid
	g_ (I)Lnet/minecraft/world/entity/SlotAccess; getChestVehicleSlot
net/minecraft/world/inventory/ContainerSynchronizer net/minecraft/world/inventory/ContainerSynchronizer
	a (Lnet/minecraft/world/inventory/Container;II)V sendDataChange
	a (Lnet/minecraft/world/inventory/Container;ILnet/minecraft/world/item/ItemStack;)V sendSlotChange
	a (Lnet/minecraft/world/inventory/Container;Lnet/minecraft/core/NonNullList;Lnet/minecraft/world/item/ItemStack;[I)V sendInitialData
	a (Lnet/minecraft/world/inventory/Container;Lnet/minecraft/world/item/ItemStack;)V sendCarriedChange
net/minecraft/world/inventory/RecipeCraftingHolder net/minecraft/world/inventory/RecipeCraftingHolder
	a (Lnet/minecraft/world/entity/player/EntityHuman;Ljava/util/List;)V awardUsedRecipes
	a (Lnet/minecraft/world/item/crafting/RecipeHolder;)V setRecipeUsed
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/crafting/RecipeHolder;)Z setRecipeUsed
	d ()Lnet/minecraft/world/item/crafting/RecipeHolder; getRecipeUsed
net/minecraft/world/item/ArmorMaterial net/minecraft/world/item/ArmorMaterial
	a ()I getEnchantmentValue
	a (Lcgp$a;)I getDurabilityForType
	b ()Lnet/minecraft/sounds/SoundEffect; getEquipSound
	b (Lcgp$a;)I getDefenseForType
	d ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getRepairIngredient
	e ()Ljava/lang/String; getName
	f ()F getToughness
	g ()F getKnockbackResistance
net/minecraft/world/item/DiscFragmentItem net/minecraft/world/item/DiscFragmentItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	d ()Lnet/minecraft/network/chat/IChatMutableComponent; getDisplayName
net/minecraft/world/item/DispensibleContainerItem net/minecraft/world/item/DispensibleContainerItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Z emptyContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)V checkExtraContent
net/minecraft/world/item/Equipable net/minecraft/world/item/Equipable
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; swapWithEquipmentSlot
	ao_ ()Lnet/minecraft/sounds/SoundEffect; getEquipSound
	c_ (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/Equipable; get
	g ()Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlot
net/minecraft/world/item/GlowInkSacItem net/minecraft/world/item/GlowInkSacItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/TileEntitySign;ZLnet/minecraft/world/entity/player/EntityHuman;)Z tryApplyToSign
net/minecraft/world/item/HangingSignItem net/minecraft/world/item/HangingSignItem
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)Z canPlace
net/minecraft/world/item/InkSacItem net/minecraft/world/item/InkSacItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/TileEntitySign;ZLnet/minecraft/world/entity/player/EntityHuman;)Z tryApplyToSign
net/minecraft/world/item/PlaceOnWaterBlockItem net/minecraft/world/item/PlaceOnWaterBlockItem
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/SignApplicator net/minecraft/world/item/SignApplicator
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/TileEntitySign;ZLnet/minecraft/world/entity/player/EntityHuman;)Z tryApplyToSign
	a (Lnet/minecraft/world/level/block/entity/SignText;Lnet/minecraft/world/entity/player/EntityHuman;)Z canApplyToSign
net/minecraft/world/item/crafting/DecoratedPotRecipe net/minecraft/world/item/crafting/DecoratedPotRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	an_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/SmithingRecipe net/minecraft/world/item/crafting/SmithingRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/item/ItemStack;)Z isTemplateIngredient
	b (Lnet/minecraft/world/item/ItemStack;)Z isBaseIngredient
	c (Lnet/minecraft/world/item/ItemStack;)Z isAdditionIngredient
	e ()Lnet/minecraft/world/item/crafting/Recipes; getType
	g ()Lnet/minecraft/world/item/ItemStack; getToastSymbol
net/minecraft/world/item/enchantment/SwiftSneakEnchantment net/minecraft/world/item/enchantment/SwiftSneakEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	h ()Z isTradeable
	i ()Z isDiscoverable
net/minecraft/world/level/ExplosionDamageCalculator net/minecraft/world/level/ExplosionDamageCalculator
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Ljava/util/Optional; getBlockExplosionResistance
net/minecraft/world/level/LevelHeightAccessor net/minecraft/world/level/LevelHeightAccessor
	H_ ()I getMinBuildHeight
	I_ ()I getHeight
	aj ()I getMaxBuildHeight
	ak ()I getSectionsCount
	al ()I getMinSection
	am ()I getMaxSection
	d (I)Z isOutsideBuildHeight
	e (I)I getSectionIndex
	e (II)Lnet/minecraft/world/level/LevelHeightAccessor; create
	f (I)I getSectionIndexFromSectionY
	g (I)I getSectionYFromSectionIndex
	r (Lnet/minecraft/core/BlockPosition;)Z isOutsideBuildHeight
net/minecraft/world/level/biome/BiomeSources net/minecraft/world/level/biome/BiomeSources
	a (Lnet/minecraft/core/IRegistry;)Lcom/mojang/serialization/Codec; bootstrap
net/minecraft/world/level/biome/FeatureSorter net/minecraft/world/level/biome/FeatureSorter
	a (Ljava/util/List;Ljava/util/function/Function;Z)Ljava/util/List; buildFeaturesPerStep
net/minecraft/world/level/block/AmethystBlock net/minecraft/world/level/block/AmethystBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
net/minecraft/world/level/block/CaveVinesPlantBlock net/minecraft/world/level/block/CaveVinesPlantBlock
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; updateHeadAfterConvertedFromBody
	b ()Lnet/minecraft/world/level/block/BlockGrowingTop; getHeadBlock
net/minecraft/world/level/block/CherryLeavesBlock net/minecraft/world/level/block/CherryLeavesBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/EquipableCarvedPumpkinBlock net/minecraft/world/level/block/EquipableCarvedPumpkinBlock
	g ()Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlot
net/minecraft/world/level/block/Fallable net/minecraft/world/level/block/Fallable
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; getFallDamageSource
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/item/EntityFallingBlock;)V onBrokenAfterFall
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/item/EntityFallingBlock;)V onLand
net/minecraft/world/level/block/InfestedRotatedPillarBlock net/minecraft/world/level/block/InfestedRotatedPillarBlock
	a (Ldfk$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/LavaCauldronBlock net/minecraft/world/level/block/LavaCauldronBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	b (Lnet/minecraft/world/level/block/state/IBlockData;)D getContentHeight
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Z isFull
net/minecraft/world/level/block/MangroveLeavesBlock net/minecraft/world/level/block/MangroveLeavesBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
net/minecraft/world/level/block/MossBlock net/minecraft/world/level/block/MossBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
net/minecraft/world/level/block/PowderSnowCauldronBlock net/minecraft/world/level/block/PowderSnowCauldronBlock
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V handleEntityOnFireInside
net/minecraft/world/level/block/RootedDirtBlock net/minecraft/world/level/block/RootedDirtBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
net/minecraft/world/level/block/SculkBlock net/minecraft/world/level/block/SculkBlock
	a (Lczq$a;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I attemptUseCharge
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z canPlaceGrowth
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/world/level/block/state/IBlockData; getRandomGrowthState
	a (Lnet/minecraft/world/level/block/SculkSpreader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;I)I getDecayPenalty
	c ()Z canChangeBlockStateOnSpread
net/minecraft/world/level/block/SuspiciousEffectHolder net/minecraft/world/level/block/SuspiciousEffectHolder
	a ()Ljava/util/List; getSuspiciousEffects
	a (Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/world/level/block/SuspiciousEffectHolder; tryGet
	b ()Ljava/util/List; getAllEffectHolders
net/minecraft/world/level/block/TintedGlassBlock net/minecraft/world/level/block/TintedGlassBlock
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	g (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getLightBlock
net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity
	c ()Ldkc$d; createVibrationUser
net/minecraft/world/level/block/entity/LidBlockEntity net/minecraft/world/level/block/entity/LidBlockEntity
	a (F)F getOpenNess
net/minecraft/world/level/block/entity/TickingBlockEntity net/minecraft/world/level/block/entity/TickingBlockEntity
	a ()V tick
	b ()Z isRemoved
	c ()Lnet/minecraft/core/BlockPosition; getPos
	d ()Ljava/lang/String; getType
net/minecraft/world/level/block/grower/AzaleaTreeGrower net/minecraft/world/level/block/grower/AzaleaTreeGrower
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/grower/CherryTreeGrower net/minecraft/world/level/block/grower/CherryTreeGrower
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/chunk/BlockColumn net/minecraft/world/level/chunk/BlockColumn
	a (I)Lnet/minecraft/world/level/block/state/IBlockData; getBlock
	a (ILnet/minecraft/world/level/block/state/IBlockData;)V setBlock
net/minecraft/world/level/chunk/ChunkGenerators net/minecraft/world/level/chunk/ChunkGenerators
	a (Lnet/minecraft/core/IRegistry;)Lcom/mojang/serialization/Codec; bootstrap
net/minecraft/world/level/chunk/LightChunk net/minecraft/world/level/chunk/LightChunk
	B ()Lnet/minecraft/world/level/lighting/ChunkSkyLightSources; getSkyLightSources
	a (Ljava/util/function/BiConsumer;)V findBlockLightSources
net/minecraft/world/level/chunk/PalettedContainerRO net/minecraft/world/level/chunk/PalettedContainerRO
	a (III)Ljava/lang/Object; get
	a (Ldhy$b;)V count
	a (Ljava/util/function/Consumer;)V getAll
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/core/Registry;Ldhy$d;)Ldhz$a; pack
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	c ()I getSerializedSize
	e ()Lnet/minecraft/world/level/chunk/DataPaletteBlock; recreate
net/minecraft/world/level/chunk/StructureAccess net/minecraft/world/level/chunk/StructureAccess
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStartForStructure
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V addReferenceForStructure
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V setStartForStructure
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForStructure
	h ()Ljava/util/Map; getAllReferences
net/minecraft/world/level/chunk/storage/ChunkScanAccess net/minecraft/world/level/chunk/storage/ChunkScanAccess
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/StreamTagVisitor;)Ljava/util/concurrent/CompletableFuture; scanChunk
net/minecraft/world/level/entity/EntityAccess net/minecraft/world/level/entity/EntityAccess
	a (Lnet/minecraft/world/level/entity/EntityInLevelCallback;)V setLevelCallback
	ah ()I getId
	b (Lnet/minecraft/world/entity/Entity$RemovalReason;)V setRemoved
	cG ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBox
	cR ()Ljava/util/stream/Stream; getSelfAndPassengers
	cS ()Ljava/util/stream/Stream; getPassengersAndSelf
	cv ()Ljava/util/UUID; getUUID
	dJ ()Z shouldBeSaved
	dK ()Z isAlwaysTicking
	dl ()Lnet/minecraft/core/BlockPosition; blockPosition
net/minecraft/world/level/entity/EntityPersistentStorage net/minecraft/world/level/entity/EntityPersistentStorage
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; loadEntities
	a (Lnet/minecraft/world/level/entity/ChunkEntities;)V storeEntities
	a (Z)V flush
net/minecraft/world/level/entity/EntityTypeTest net/minecraft/world/level/entity/EntityTypeTest
	a ()Ljava/lang/Class; getBaseClass
	a (Ljava/lang/Class;)Lnet/minecraft/world/level/entity/EntityTypeTest; forClass
	a (Ljava/lang/Object;)Ljava/lang/Object; tryCast
net/minecraft/world/level/entity/LevelCallback net/minecraft/world/level/entity/LevelCallback
	a (Ljava/lang/Object;)V onSectionChange
	b (Ljava/lang/Object;)V onTrackingEnd
	c (Ljava/lang/Object;)V onTrackingStart
	d (Ljava/lang/Object;)V onTickingEnd
	e (Ljava/lang/Object;)V onTickingStart
	f (Ljava/lang/Object;)V onDestroyed
	g (Ljava/lang/Object;)V onCreated
net/minecraft/world/level/entity/LevelEntityGetter net/minecraft/world/level/entity/LevelEntityGetter
	a ()Ljava/lang/Iterable; getAll
	a (I)Lnet/minecraft/world/level/entity/EntityAccess; get
	a (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; get
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/util/AbortableIterationConsumer;)V get
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/util/AbortableIterationConsumer;)V get
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Consumer;)V get
net/minecraft/world/level/gameevent/GameEventListener net/minecraft/world/level/gameevent/GameEventListener
	a ()Lnet/minecraft/world/level/gameevent/PositionSource; getListenerSource
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEvent;Ldjt$a;Lnet/minecraft/world/phys/Vec3D;)Z handleGameEvent
	b ()I getListenerRadius
	c ()Ldjv$a; getDeliveryMode
net/minecraft/world/level/levelgen/Aquifer net/minecraft/world/level/levelgen/Aquifer
	a ()Z shouldScheduleFluidUpdate
	a (Ldke$a;)Lnet/minecraft/world/level/levelgen/Aquifer; createDisabled
	a (Ldkl$b;D)Lnet/minecraft/world/level/block/state/IBlockData; computeSubstance
	a (Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/NoiseRouter;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;IILdke$a;)Lnet/minecraft/world/level/levelgen/Aquifer; create
net/minecraft/world/level/levelgen/Column net/minecraft/world/level/levelgen/Column
	a ()Lnet/minecraft/world/level/levelgen/Column; line
	a (I)Lnet/minecraft/world/level/levelgen/Column; below
	a (II)Ldki$b; around
	a (Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; withFloor
	a (Ljava/util/OptionalInt;Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; create
	a (Lnet/minecraft/world/level/VirtualLevelReadable;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;ILnet/minecraft/core/EnumDirection;)Ljava/util/OptionalInt; scanDirection
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/Optional; scan
	b ()Ljava/util/OptionalInt; getCeiling
	b (I)Lnet/minecraft/world/level/levelgen/Column; fromHighest
	b (II)Ldki$b; inside
	b (Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; withCeiling
	c ()Ljava/util/OptionalInt; getFloor
	c (I)Lnet/minecraft/world/level/levelgen/Column; above
	d ()Ljava/util/OptionalInt; getHeight
	d (I)Lnet/minecraft/world/level/levelgen/Column; fromLowest
net/minecraft/world/level/levelgen/PositionalRandomFactory net/minecraft/world/level/levelgen/PositionalRandomFactory
	a (III)Lnet/minecraft/util/RandomSource; at
	a (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; fromHashOf
	a (Ljava/lang/StringBuilder;)V parityConfigString
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/util/RandomSource; at
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/util/RandomSource; fromHashOf
net/minecraft/world/level/levelgen/feature/BlockColumnFeature net/minecraft/world/level/levelgen/feature/BlockColumnFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	a ([IIIZ)V truncate
net/minecraft/world/level/levelgen/feature/DiskFeature net/minecraft/world/level/levelgen/feature/DiskFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	a (Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureCircleConfiguration;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;IILnet/minecraft/core/BlockPosition$MutableBlockPosition;)Z placeColumn
net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature
	a (IIIILnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)D getChanceOfStalagmiteOrStalactite
	a (Lnet/minecraft/util/RandomSource;FFFF)F randomBetweenBiased
	a (Lnet/minecraft/util/RandomSource;IIFILnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)I getDripstoneHeight
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z canBeAdjacentToWater
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/EnumDirection;)V replaceBlocksWithDripstoneBlocks
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;IIFDIFLnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)V placeColumn
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isLava
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z canPlacePool
net/minecraft/world/level/levelgen/feature/DripstoneUtils net/minecraft/world/level/levelgen/feature/DripstoneUtils
	a (DDDD)D getDripstoneHeight
	a (Lnet/minecraft/core/EnumDirection;IZLjava/util/function/Consumer;)V buildBaseToTipColumn
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)Lnet/minecraft/world/level/block/state/IBlockData; createPointedDripstone
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z isEmptyOrWater
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;IZ)V growPointedDripstone
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;I)Z isCircleMostlyEmbeddedInStone
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isDripstoneBaseOrLava
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z isEmptyOrWaterOrLava
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Z isDripstoneBase
	c (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z placeDripstoneBlockIfPossible
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z isEmptyOrWater
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Z isNeitherEmptyNorWater
	e (Lnet/minecraft/world/level/block/state/IBlockData;)Z isEmptyOrWaterOrLava
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature
	a (Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/util/RandomSource;ILnet/minecraft/util/valueproviders/FloatProvider;Lnet/minecraft/util/valueproviders/FloatProvider;)Ldom$a; makeDripstone
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;Ldki$b;Ldom$b;)V placeDebugMarkers
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/MultifaceGrowthFeature net/minecraft/world/level/levelgen/feature/MultifaceGrowthFeature
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration;Lnet/minecraft/util/RandomSource;Ljava/util/List;)Z placeGrowthIfPossible
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z isAirOrWater
net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getTipDirection
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration;)V createPatchOfDripstoneBlocks
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/RootSystemFeature net/minecraft/world/level/levelgen/feature/RootSystemFeature
	a (Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;)V placeDirt
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/core/BlockPosition;)Z placeDirtAndTree
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/core/BlockPosition;)Z spaceForTree
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;IILnet/minecraft/core/BlockPosition$MutableBlockPosition;)V placeRootedDirt
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)V placeRoots
	a (Lnet/minecraft/world/level/block/state/IBlockData;II)Z isAllowedTreeSpace
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/SculkPatchFeature net/minecraft/world/level/levelgen/feature/SculkPatchFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z canSpreadFrom
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z isWaterOrAir
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration;)Ljava/util/OptionalInt; getFloorY
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z isValidPlacement
net/minecraft/world/level/levelgen/feature/VegetationPatchFeature net/minecraft/world/level/levelgen/feature/VegetationPatchFeature
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Ljava/util/function/Predicate;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;I)Z placeGround
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;II)Ljava/util/Set; placeGroundPatch
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z placeVegetation
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Ljava/util/Set;II)V distributeVegetation
net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Ljava/util/Set;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)Z isExposed
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/core/EnumDirection;)Z isExposedDirection
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;II)Ljava/util/Set; placeGroundPatch
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z placeVegetation
net/minecraft/world/level/levelgen/placement/PlacementFilter net/minecraft/world/level/levelgen/placement/PlacementFilter
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z shouldPlace
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/world/level/levelgen/placement/RepeatingPlacement net/minecraft/world/level/levelgen/placement/RepeatingPlacement
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)I count
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/world/level/levelgen/structure/StructurePieceAccessor net/minecraft/world/level/levelgen/structure/StructurePieceAccessor
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; findCollisionPiece
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;)V addPiece
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Ljava/util/List;Lnet/minecraft/util/RandomSource;)V generateMansion
net/minecraft/world/level/levelgen/synth/NoiseUtils net/minecraft/world/level/levelgen/synth/NoiseUtils
	a (DD)D biasTowardsExtreme
	a (Ljava/lang/StringBuilder;DDD[B)V parityNoiseOctaveConfigString
	a (Ljava/lang/StringBuilder;DDD[I)V parityNoiseOctaveConfigString
net/minecraft/world/level/storage/loot/functions/LootItemFunction net/minecraft/world/level/storage/loot/functions/LootItemFunction
	a (Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Ljava/util/function/Consumer; decorate
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
net/minecraft/world/level/storage/loot/predicates/LootItemCondition net/minecraft/world/level/storage/loot/predicates/LootItemCondition
	b ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider
	a ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/nbt/NBTBase; get
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/providers/number/NumberProvider net/minecraft/world/level/storage/loot/providers/number/NumberProvider
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)I getInt
	b ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; getType
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)F getFloat
net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider
	a ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Ljava/lang/String; getScoreboardName
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/ticks/ContainerSingleItem net/minecraft/world/ticks/ContainerSingleItem
	a ()V clearContent
	af_ ()Z isEmpty
	av_ ()Lnet/minecraft/world/item/ItemStack; getFirstItem
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/world/item/ItemStack;)V setFirstItem
	j ()Lnet/minecraft/world/item/ItemStack; removeFirstItem
net/minecraft/world/ticks/LevelTickAccess net/minecraft/world/ticks/LevelTickAccess
	b (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/world/ticks/SerializableTickContainer net/minecraft/world/ticks/SerializableTickContainer
	b (JLjava/util/function/Function;)Lnet/minecraft/nbt/NBTBase; save

com/mojang/blaze3d/Blaze3D dqd
	getTime ()D b
	process (Lcom/mojang/blaze3d/pipeline/RenderPipeline;F)V a
	render (Lcom/mojang/blaze3d/pipeline/RenderPipeline;F)V b
	youJustLostTheGame ()V a
com/mojang/blaze3d/DontObfuscate dqe
com/mojang/blaze3d/FieldsAreNonnullByDefault dqf
com/mojang/blaze3d/MethodsReturnNonnullByDefault dqg
com/mojang/blaze3d/audio/Channel dqh
	BUFFER_DURATION_SECONDS a
	LOGGER b
	QUEUED_BUFFER_COUNT c
	initialized e
	source d
	stream g
	streamingBufferSize f
	attachBufferStream (Lnet/minecraft/client/sounds/AudioStream;)V a
	attachStaticBuffer (Lcom/mojang/blaze3d/audio/SoundBuffer;)V a
	calculateBufferSize (Ljavax/sound/sampled/AudioFormat;I)I a
	create ()Lcom/mojang/blaze3d/audio/Channel; a
	destroy ()V b
	disableAttenuation ()V i
	getState ()I k
	linearAttenuation (F)V c
	pause ()V d
	play ()V c
	playing ()Z g
	pumpBuffers (I)V a
	removeProcessedBuffers ()I l
	setLooping (Z)V a
	setPitch (F)V a
	setRelative (Z)V b
	setSelfPosition (Lnet/minecraft/world/phys/Vec3;)V a
	setVolume (F)V b
	stop ()V f
	stopped ()Z h
	unpause ()V e
	updateStream ()V j
com/mojang/blaze3d/audio/Library dqi
	DEFAULT_CHANNEL_COUNT c
	EMPTY h
	LOGGER a
	NO_DEVICE b
	context e
	currentDevice d
	defaultDeviceName g
	listener k
	staticChannels i
	streamingChannels j
	supportsDisconnections f
	acquireChannel (Lcom/mojang/blaze3d/audio/Library$Pool;)Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V d
	getAvailableSoundDevices ()Ljava/util/List; g
	getChannelCount ()I i
	getCurrentDeviceName ()Ljava/lang/String; b
	getDebugString ()Ljava/lang/String; f
	getDefaultDeviceName ()Ljava/lang/String; a
	getListener ()Lcom/mojang/blaze3d/audio/Listener; e
	hasDefaultDeviceChanged ()Z c
	init (Ljava/lang/String;)V a
	isCurrentDeviceDisconnected ()Z h
	openDeviceOrFallback (Ljava/lang/String;)J b
	releaseChannel (Lcom/mojang/blaze3d/audio/Channel;)V a
	tryOpenDevice (Ljava/lang/String;)Ljava/util/OptionalLong; c
com/mojang/blaze3d/audio/Library$ChannelPool dqi$a
	acquire ()Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getMaxCount ()I c
	getUsedCount ()I d
	release (Lcom/mojang/blaze3d/audio/Channel;)Z a
com/mojang/blaze3d/audio/Library$CountingChannelPool dqi$b
	activeChannels b
	limit a
	acquire ()Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getMaxCount ()I c
	getUsedCount ()I d
	release (Lcom/mojang/blaze3d/audio/Channel;)Z a
com/mojang/blaze3d/audio/Library$Pool dqi$c
	$VALUES c
	STATIC a
	STREAMING b
	$values ()[Lcom/mojang/blaze3d/audio/Library$Pool; a
com/mojang/blaze3d/audio/Listener dqj
	gain a
	position b
	getGain ()F b
	getListenerPosition ()Lnet/minecraft/world/phys/Vec3; a
	reset ()V c
	setGain (F)V a
	setListenerOrientation (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)V a
	setListenerPosition (Lnet/minecraft/world/phys/Vec3;)V a
com/mojang/blaze3d/audio/OggAudioStream dqk
	EXPECTED_MAX_FRAME_SIZE a
	audioFormat c
	buffer e
	handle b
	input d
	convertMono (Ljava/nio/FloatBuffer;Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)V a
	convertStereo (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)V a
	forwardBuffer ()V d
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
	readAll ()Ljava/nio/ByteBuffer; b
	readFrame (Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)Z a
	refillFromStream ()Z c
com/mojang/blaze3d/audio/OggAudioStream$OutputConcat dqk$a
	bufferSize b
	buffers a
	byteCount c
	currentBuffer d
	createNewBuffer ()V b
	get ()Ljava/nio/ByteBuffer; a
	put (F)V a
com/mojang/blaze3d/audio/OpenAlUtil dql
	LOGGER a
	alErrorToString (I)Ljava/lang/String; a
	alcErrorToString (I)Ljava/lang/String; b
	audioFormatToOpenAl (Ljavax/sound/sampled/AudioFormat;)I a
	checkALCError (JLjava/lang/String;)Z a
	checkALError (Ljava/lang/String;)Z a
com/mojang/blaze3d/audio/SoundBuffer dqm
	alBuffer d
	data a
	format b
	hasAlBuffer c
	discardAlBuffer ()V b
	getAlBuffer ()Ljava/util/OptionalInt; a
	releaseAlBuffer ()Ljava/util/OptionalInt; c
com/mojang/blaze3d/font/GlyphInfo dqo
	getAdvance (Z)F a
	getBearingX ()F a
	getBearingY ()F b
	getBoldOffset ()F c
	getShadowOffset ()F d
com/mojang/blaze3d/font/GlyphProvider dqp
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/RawGlyph dqq
	getBearingY ()F b
	getDown ()F l
	getLeft ()F i
	getOversample ()F h
	getPixelHeight ()I f
	getPixelWidth ()I e
	getRight ()F j
	getUp ()F k
	isColored ()Z g
	upload (II)V a
com/mojang/blaze3d/font/TrueTypeGlyphProvider dqr
	ascent h
	font b
	fontMemory a
	oversample c
	pointScale g
	shiftX e
	shiftY f
	skip d
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getGlyph (I)Lcom/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph; b
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph dqr$a
	advance f
	bearingX d
	bearingY e
	height c
	index g
	width b
	getBearingX ()F a
	getBearingY ()F b
	getOversample ()F h
	getPixelHeight ()I f
	getPixelWidth ()I e
	isColored ()Z g
	upload (II)V a
com/mojang/blaze3d/pipeline/MainTarget dqu
	DEFAULT_DIMENSIONS l
	DEFAULT_HEIGHT b
	DEFAULT_WIDTH a
	allocateAttachments (II)Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension; c
	allocateColorAttachment (Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension;)Z a
	allocateDepthAttachment (Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension;)Z b
	createFrameBuffer (II)V b
com/mojang/blaze3d/pipeline/MainTarget$AttachmentState dqu$a
	$VALUES f
	COLOR b
	COLOR_DEPTH d
	DEPTH c
	NONE a
	VALUES e
	$values ()[Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState; a
	with (Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState;)Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState; a
com/mojang/blaze3d/pipeline/MainTarget$Dimension dqu$b
	height b
	width a
	listWithFallback (II)Ljava/util/List; a
com/mojang/blaze3d/pipeline/RenderCall dqv
com/mojang/blaze3d/pipeline/RenderPipeline dqw
	isProcessing d
	isRecording b
	processedBuffer e
	recordingBuffer c
	renderCalls a
	renderingBuffer f
	beginProcessing ()Z e
	beginRecording ()Z b
	canBeginProcessing ()Z d
	canBeginRecording ()Z a
	endProcessing ()V g
	endRecording ()V c
	getProcessedQueue ()Ljava/util/concurrent/ConcurrentLinkedQueue; j
	getRecordingQueue ()Ljava/util/concurrent/ConcurrentLinkedQueue; i
	processRecordedQueue ()V f
	recordRenderCall (Lcom/mojang/blaze3d/pipeline/RenderCall;)V a
	startRendering ()Ljava/util/concurrent/ConcurrentLinkedQueue; h
com/mojang/blaze3d/pipeline/RenderTarget dqx
	ALPHA_CHANNEL m
	BLUE_CHANNEL l
	GREEN_CHANNEL b
	RED_CHANNEL a
	clearChannels n
	colorTextureId i
	depthBufferId j
	filterMode k
	frameBufferId h
	height d
	useDepth g
	viewHeight f
	viewWidth e
	width c
	_bindWrite (Z)V c
	_blitToScreen (IIZ)V e
	_resize (IIZ)V d
	bindRead ()V c
	bindWrite (Z)V a
	blitToScreen (II)V a
	blitToScreen (IIZ)V c
	checkStatus ()V b
	clear (Z)V b
	copyDepthFrom (Lcom/mojang/blaze3d/pipeline/RenderTarget;)V a
	createBuffers (IIZ)V b
	destroyBuffers ()V a
	getColorTextureId ()I f
	getDepthTextureId ()I g
	resize (IIZ)V a
	setClearColor (FFFF)V a
	setFilterMode (I)V a
	unbindRead ()V d
	unbindWrite ()V e
com/mojang/blaze3d/pipeline/TextureTarget dqy
com/mojang/blaze3d/platform/ClipboardManager dra
	FORMAT_UNAVAILABLE a
	clipboardScratchBuffer b
	getClipboard (JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String; a
	pushClipboard (JLjava/nio/ByteBuffer;[B)V a
	setClipboard (JLjava/lang/String;)V a
com/mojang/blaze3d/platform/DebugMemoryUntracker drb
	UNTRACK a
	untrack (J)V a
	untrack (Lorg/lwjgl/system/Pointer;)V a
com/mojang/blaze3d/platform/DisplayData drc
	fullscreenHeight d
	fullscreenWidth c
	height b
	isFullscreen e
	width a
com/mojang/blaze3d/platform/GlDebug drd
	CIRCULAR_LOG_SIZE b
	DEBUG_LEVELS e
	DEBUG_LEVELS_ARB f
	LOGGER a
	MESSAGE_BUFFER c
	debugEnabled g
	lastEntry d
	enableDebugCallback (IZ)V a
	getLastOpenGlDebugMessages ()Ljava/util/List; a
	isDebugEnabled ()Z b
	printDebugLog (IIIIIJJ)V a
	printUnknownToken (I)Ljava/lang/String; d
	severityToString (I)Ljava/lang/String; c
	sourceToString (I)Ljava/lang/String; a
	typeToString (I)Ljava/lang/String; b
com/mojang/blaze3d/platform/GlDebug$LogEntry drd$a
	count f
	id a
	message e
	severity d
	source b
	type c
	isSame (IIIILjava/lang/String;)Z a
com/mojang/blaze3d/platform/GlStateManager$BlendState com/mojang/blaze3d/platform/GlStateManager$a
	dstAlpha e
	dstRgb c
	mode a
	srcAlpha d
	srcRgb b
com/mojang/blaze3d/platform/GlStateManager$BooleanState com/mojang/blaze3d/platform/GlStateManager$b
	enabled b
	state a
	disable ()V a
	enable ()V b
	setEnabled (Z)V a
com/mojang/blaze3d/platform/GlStateManager$ColorLogicState com/mojang/blaze3d/platform/GlStateManager$c
	enable a
	op b
com/mojang/blaze3d/platform/GlStateManager$ColorMask com/mojang/blaze3d/platform/GlStateManager$d
	alpha d
	blue c
	green b
	red a
com/mojang/blaze3d/platform/GlStateManager$CullState com/mojang/blaze3d/platform/GlStateManager$e
	enable a
	mode b
com/mojang/blaze3d/platform/GlStateManager$DepthState com/mojang/blaze3d/platform/GlStateManager$f
	func c
	mask b
	mode a
com/mojang/blaze3d/platform/GlStateManager$LogicOp com/mojang/blaze3d/platform/GlStateManager$g
	$VALUES r
	AND a
	AND_INVERTED b
	AND_REVERSE c
	CLEAR d
	COPY e
	COPY_INVERTED f
	EQUIV g
	INVERT h
	NAND i
	NOOP j
	NOR k
	OR l
	OR_INVERTED m
	OR_REVERSE n
	SET o
	XOR p
	value q
	$values ()[Lcom/mojang/blaze3d/platform/GlStateManager$LogicOp; a
com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState com/mojang/blaze3d/platform/GlStateManager$h
	factor c
	fill a
	line b
	units d
com/mojang/blaze3d/platform/GlStateManager$ScissorState com/mojang/blaze3d/platform/GlStateManager$i
	mode a
com/mojang/blaze3d/platform/GlStateManager$StencilFunc com/mojang/blaze3d/platform/GlStateManager$j
	func a
	mask c
	ref b
com/mojang/blaze3d/platform/GlStateManager$StencilState com/mojang/blaze3d/platform/GlStateManager$k
	fail c
	func a
	mask b
	zfail d
	zpass e
com/mojang/blaze3d/platform/GlStateManager$TextureState com/mojang/blaze3d/platform/GlStateManager$l
	binding b
	enable a
com/mojang/blaze3d/platform/GlStateManager$Viewport com/mojang/blaze3d/platform/GlStateManager$m
	$VALUES f
	INSTANCE a
	height e
	width d
	x b
	y c
	$values ()[Lcom/mojang/blaze3d/platform/GlStateManager$Viewport; e
	height ()I d
	width ()I c
	x ()I a
	y ()I b
com/mojang/blaze3d/platform/GlUtil dre
	allocateMemory (I)Ljava/nio/ByteBuffer; a
	freeMemory (Ljava/nio/Buffer;)V a
	getCpuInfo ()Ljava/lang/String; b
	getOpenGLVersion ()Ljava/lang/String; d
	getRenderer ()Ljava/lang/String; c
	getVendor ()Ljava/lang/String; a
com/mojang/blaze3d/platform/InputConstants drf
	CURSOR bs
	CURSOR_DISABLED bt
	CURSOR_NORMAL bu
	GLFW_RAW_MOUSE_MOTION bx
	GLFW_RAW_MOUSE_MOTION_SUPPORTED bw
	KEY_0 a
	KEY_1 b
	KEY_2 c
	KEY_3 d
	KEY_4 e
	KEY_5 f
	KEY_6 g
	KEY_7 h
	KEY_8 i
	KEY_9 j
	KEY_A k
	KEY_ADD aB
	KEY_APOSTROPHE aC
	KEY_B l
	KEY_BACKSLASH aD
	KEY_BACKSPACE ba
	KEY_C m
	KEY_CAPSLOCK bh
	KEY_COMMA aE
	KEY_D n
	KEY_DELETE bb
	KEY_DOWN ax
	KEY_E o
	KEY_END bc
	KEY_EQUALS aF
	KEY_ESCAPE aZ
	KEY_F p
	KEY_F1 K
	KEY_F10 T
	KEY_F11 U
	KEY_F12 V
	KEY_F13 W
	KEY_F14 X
	KEY_F15 Y
	KEY_F16 Z
	KEY_F17 aa
	KEY_F18 ab
	KEY_F19 ac
	KEY_F2 L
	KEY_F20 ad
	KEY_F21 ae
	KEY_F22 af
	KEY_F23 ag
	KEY_F24 ah
	KEY_F25 ai
	KEY_F3 M
	KEY_F4 N
	KEY_F5 O
	KEY_F6 P
	KEY_F7 Q
	KEY_F8 R
	KEY_F9 S
	KEY_G q
	KEY_GRAVE aG
	KEY_H r
	KEY_HOME bd
	KEY_I s
	KEY_INSERT be
	KEY_J t
	KEY_K u
	KEY_L v
	KEY_LALT aQ
	KEY_LBRACKET aH
	KEY_LCONTROL aR
	KEY_LEFT ay
	KEY_LSHIFT aS
	KEY_LWIN aT
	KEY_M w
	KEY_MINUS aI
	KEY_MULTIPLY aJ
	KEY_N x
	KEY_NUMLOCK aj
	KEY_NUMPAD0 ak
	KEY_NUMPAD1 al
	KEY_NUMPAD2 am
	KEY_NUMPAD3 an
	KEY_NUMPAD4 ao
	KEY_NUMPAD5 ap
	KEY_NUMPAD6 aq
	KEY_NUMPAD7 ar
	KEY_NUMPAD8 as
	KEY_NUMPAD9 at
	KEY_NUMPADCOMMA au
	KEY_NUMPADENTER av
	KEY_NUMPADEQUALS aw
	KEY_O y
	KEY_P z
	KEY_PAGEDOWN bf
	KEY_PAGEUP bg
	KEY_PAUSE bi
	KEY_PERIOD aK
	KEY_PRINTSCREEN bk
	KEY_Q A
	KEY_R B
	KEY_RALT aU
	KEY_RBRACKET aL
	KEY_RCONTROL aV
	KEY_RETURN aY
	KEY_RIGHT az
	KEY_RSHIFT aW
	KEY_RWIN aX
	KEY_S C
	KEY_SCROLLLOCK bj
	KEY_SEMICOLON aM
	KEY_SLASH aN
	KEY_SPACE aO
	KEY_T D
	KEY_TAB aP
	KEY_U E
	KEY_UP aA
	KEY_V F
	KEY_W G
	KEY_X H
	KEY_Y I
	KEY_Z J
	MOD_CONTROL br
	MOUSE_BUTTON_LEFT bo
	MOUSE_BUTTON_MIDDLE bp
	MOUSE_BUTTON_RIGHT bq
	PRESS bl
	RELEASE bm
	REPEAT bn
	UNKNOWN bv
	getKey (II)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
	getKey (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
	grabOrReleaseMouse (JIDD)V a
	isKeyDown (JI)Z a
	isRawMouseInputSupported ()Z a
	setupKeyboardCallbacks (JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V a
	setupMouseCallbacks (JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;Lorg/lwjgl/glfw/GLFWDropCallbackI;)V a
	updateRawMouseInput (JZ)V a
com/mojang/blaze3d/platform/InputConstants$Key drf$a
	NAME_MAP e
	displayName d
	name a
	type b
	value c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Ljava/lang/String; c
	getNumericKeyValue ()Ljava/util/OptionalInt; e
	getType ()Lcom/mojang/blaze3d/platform/InputConstants$Type; a
	getValue ()I b
com/mojang/blaze3d/platform/InputConstants$Type drf$b
	$VALUES g
	KEYSYM a
	MOUSE c
	SCANCODE b
	defaultPrefix e
	displayTextSupplier f
	map d
	$values ()[Lcom/mojang/blaze3d/platform/InputConstants$Type; a
	addKey (Lcom/mojang/blaze3d/platform/InputConstants$Type;Ljava/lang/String;I)V a
	getOrCreate (I)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
com/mojang/blaze3d/platform/Lighting drg
	DIFFUSE_LIGHT_0 a
	DIFFUSE_LIGHT_1 b
	INVENTORY_DIFFUSE_LIGHT_0 e
	INVENTORY_DIFFUSE_LIGHT_1 f
	NETHER_DIFFUSE_LIGHT_0 c
	NETHER_DIFFUSE_LIGHT_1 d
	setupFor3DItems ()V b
	setupForEntityInInventory ()V c
	setupForFlatItems ()V a
	setupLevel (Lcom/mojang/math/Matrix4f;)V b
	setupNetherLevel (Lcom/mojang/math/Matrix4f;)V a
com/mojang/blaze3d/platform/MacosUtil drh
	NS_FULL_SCREEN_WINDOW_MASK a
	getNsWindow (J)Ljava/util/Optional; b
	isInKioskMode (Lca/weblite/objc/NSObject;)Z a
	toggleFullscreen (J)V a
	toggleFullscreen (Lca/weblite/objc/NSObject;)V b
com/mojang/blaze3d/platform/MemoryTracker dri
	ALLOCATOR a
	create (I)Ljava/nio/ByteBuffer; a
	resize (Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer; a
com/mojang/blaze3d/platform/Monitor drj
	currentMode c
	monitor a
	videoModes b
	x d
	y e
	getCurrentMode ()Lcom/mojang/blaze3d/platform/VideoMode; b
	getMode (I)Lcom/mojang/blaze3d/platform/VideoMode; a
	getModeCount ()I e
	getMonitor ()J f
	getPreferredVidMode (Ljava/util/Optional;)Lcom/mojang/blaze3d/platform/VideoMode; a
	getVideoModeIndex (Lcom/mojang/blaze3d/platform/VideoMode;)I a
	getX ()I c
	getY ()I d
	refreshVideoModes ()V a
com/mojang/blaze3d/platform/MonitorCreator drk
com/mojang/blaze3d/platform/NativeImage drl
	LOGGER a
	OFFSET_A b
	OFFSET_B c
	OFFSET_G d
	OFFSET_R e
	OPEN_OPTIONS f
	format g
	height i
	pixels k
	size l
	useStbFree j
	width h
	_upload (IIIIIIIZZZZ)V b
	asByteArray ()[B f
	blendPixel (III)V b
	checkAllocated ()V i
	combine (IIII)I a
	copyFrom (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	copyFromFont (Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V a
	copyRect (IIIIIIZZ)V a
	downloadDepthBuffer (F)V a
	downloadTexture (IZ)V a
	drawPixels ()V e
	fillRect (IIIII)V a
	flipY ()V g
	format ()Lcom/mojang/blaze3d/platform/NativeImage$Format; c
	fromBase64 (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/NativeImage; b
	getA (I)I a
	getB (I)I d
	getBlueOrLuminance (II)B d
	getG (I)I c
	getGreenOrLuminance (II)B c
	getHeight ()I b
	getLuminanceOrAlpha (II)B e
	getPixelRGBA (II)I a
	getR (I)I b
	getRedOrLuminance (II)B b
	getWidth ()I a
	isOutsideBounds (II)Z f
	makePixelArray ()[I d
	read (Lcom/mojang/blaze3d/platform/NativeImage$Format;Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Lcom/mojang/blaze3d/platform/NativeImage$Format;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/platform/NativeImage; a
	resizeSubRectTo (IIIILcom/mojang/blaze3d/platform/NativeImage;)V a
	setFilter (ZZ)V a
	setPixelLuminance (IIB)V a
	setPixelRGBA (III)V a
	untrack ()V h
	upload (IIIIIIIZZ)V a
	upload (IIIIIIIZZZZ)V a
	upload (IIIZ)V a
	writeToChannel (Ljava/nio/channels/WritableByteChannel;)Z a
	writeToFile (Ljava/io/File;)V a
	writeToFile (Ljava/lang/String;)V a
	writeToFile (Ljava/nio/file/Path;)V a
com/mojang/blaze3d/platform/NativeImage$Format drl$a
	$VALUES r
	LUMINANCE d
	LUMINANCE_ALPHA c
	RGB b
	RGBA a
	alphaOffset p
	blueOffset n
	components e
	glFormat f
	greenOffset m
	hasAlpha k
	hasBlue i
	hasGreen h
	hasLuminance j
	hasRed g
	luminanceOffset o
	redOffset l
	supportedByStb q
	$values ()[Lcom/mojang/blaze3d/platform/NativeImage$Format; x
	alphaOffset ()I n
	blueOffset ()I l
	components ()I a
	getStbFormat (I)Lcom/mojang/blaze3d/platform/NativeImage$Format; a
	glFormat ()I d
	greenOffset ()I k
	hasAlpha ()Z i
	hasBlue ()Z g
	hasGreen ()Z f
	hasLuminance ()Z h
	hasLuminanceOrAlpha ()Z r
	hasLuminanceOrBlue ()Z q
	hasLuminanceOrGreen ()Z p
	hasLuminanceOrRed ()Z o
	hasRed ()Z e
	luminanceOffset ()I m
	luminanceOrAlphaOffset ()I v
	luminanceOrBlueOffset ()I u
	luminanceOrGreenOffset ()I t
	luminanceOrRedOffset ()I s
	redOffset ()I j
	setPackPixelStoreState ()V b
	setUnpackPixelStoreState ()V c
	supportedByStb ()Z w
com/mojang/blaze3d/platform/NativeImage$InternalGlFormat drl$b
	$VALUES f
	RED d
	RG c
	RGB b
	RGBA a
	glFormat e
	$values ()[Lcom/mojang/blaze3d/platform/NativeImage$InternalGlFormat; b
	glFormat ()I a
com/mojang/blaze3d/platform/NativeImage$WriteCallback drl$c
	exception b
	output a
	throwIfException ()V a
com/mojang/blaze3d/platform/PngInfo drm
	height b
	width a
	createCallbacks (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/PngInfo$StbReader; a
com/mojang/blaze3d/platform/PngInfo$StbReader drm$a
	closed a
	eof (J)I a
	read (JI)I b
	read (JJI)I a
	skip (I)V a
	skip (JI)V a
com/mojang/blaze3d/platform/PngInfo$StbReaderBufferedChannel drm$b
	START_BUFFER_SIZE b
	bufferSize e
	channel c
	consumed g
	read f
	readBufferAddress d
	fillReadBuffer (I)V b
	read (JI)I b
	skip (I)V a
com/mojang/blaze3d/platform/PngInfo$StbReaderSeekableByteChannel drm$c
	channel b
	eof (J)I a
	read (JI)I b
	skip (I)V a
com/mojang/blaze3d/platform/ScreenManager drn
	monitorCreator b
	monitors a
	clamp (III)I a
	findBestMonitor (Lcom/mojang/blaze3d/platform/Window;)Lcom/mojang/blaze3d/platform/Monitor; a
	getMonitor (J)Lcom/mojang/blaze3d/platform/Monitor; a
	onMonitorChange (JI)V a
	shutdown ()V a
com/mojang/blaze3d/platform/VideoMode dro
	PATTERN g
	blueBits e
	greenBits d
	height b
	redBits c
	refreshRate f
	width a
	getBlueBits ()I e
	getGreenBits ()I d
	getHeight ()I b
	getRedBits ()I c
	getRefreshRate ()I f
	getWidth ()I a
	read (Ljava/lang/String;)Ljava/util/Optional; a
	write ()Ljava/lang/String; g
com/mojang/blaze3d/platform/Window drp
	LOGGER a
	actuallyFullscreen l
	defaultErrorCallback b
	dirty w
	errorSection v
	eventHandler c
	framebufferHeight r
	framebufferWidth q
	framerateLimit x
	fullscreen k
	guiScale u
	guiScaledHeight t
	guiScaledWidth s
	height p
	preferredFullscreenVideoMode j
	screenManager d
	vsync y
	width o
	window e
	windowedHeight i
	windowedWidth h
	windowedX f
	windowedY g
	x m
	y n
	bootCrash (IJ)V b
	calculateScale (IZ)I a
	changeFullscreenVideoMode ()V g
	checkGlfwError (Ljava/util/function/BiConsumer;)V a
	defaultErrorCallback (IJ)V a
	findBestMonitor ()Lcom/mojang/blaze3d/platform/Monitor; t
	getFramerateLimit ()I d
	getGuiScale ()D s
	getGuiScaledHeight ()I p
	getGuiScaledWidth ()I o
	getHeight ()I l
	getPreferredFullscreenVideoMode ()Ljava/util/Optional; f
	getRefreshRate ()I a
	getScreenHeight ()I n
	getScreenWidth ()I m
	getWidth ()I k
	getWindow ()J i
	getX ()I q
	getY ()I r
	isFullscreen ()Z j
	onEnter (JZ)V b
	onFocus (JZ)V a
	onFramebufferResize (JII)V b
	onMove (JII)V a
	onResize (JII)V c
	readIconPixels (Ljava/io/InputStream;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer; a
	refreshFramebufferSize ()V v
	setBootErrorCallback ()V u
	setDefaultErrorCallback ()V c
	setErrorSection (Ljava/lang/String;)V a
	setFramerateLimit (I)V a
	setGuiScale (D)V a
	setHeight (I)V c
	setIcon (Ljava/io/InputStream;Ljava/io/InputStream;)V a
	setMode ()V w
	setPreferredFullscreenVideoMode (Ljava/util/Optional;)V a
	setTitle (Ljava/lang/String;)V b
	setWidth (I)V b
	setWindowed (II)V a
	shouldClose ()Z b
	toggleFullScreen ()V h
	updateDisplay ()V e
	updateFullscreen (Z)V c
	updateRawMouseInput (Z)V b
	updateVsync (Z)V a
com/mojang/blaze3d/platform/Window$WindowInitFailed drp$a
com/mojang/blaze3d/platform/WindowEventHandler drq
	cursorEntered ()V b
	resizeDisplay ()V a
	setWindowActive (Z)V a
com/mojang/blaze3d/preprocessor/GlslPreprocessor drs
	C_COMMENT a
	LINE_COMMENT b
	REGEX_ENDS_WITH_WHITESPACE e
	REGEX_MOJ_IMPORT c
	REGEX_VERSION d
	applyImport (ZLjava/lang/String;)Ljava/lang/String; a
	isDirectiveDisabled (Ljava/lang/String;Ljava/util/regex/Matcher;I)Z a
	isDirectiveEnabled (Ljava/lang/String;Ljava/util/regex/Matcher;)Z a
	process (Ljava/lang/String;)Ljava/util/List; a
	processImports (Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor$Context;Ljava/lang/String;)Ljava/util/List; a
	processVersions (Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor$Context;)Ljava/lang/String; a
	setVersion (Ljava/lang/String;I)Ljava/lang/String; a
com/mojang/blaze3d/preprocessor/GlslPreprocessor$Context drs$a
	glslVersion a
	sourceId b
com/mojang/blaze3d/shaders/AbstractUniform dru
	set (F)V a
	set (FF)V a
	set (FFF)V a
	set (FFFF)V a
	set (I)V a
	set (II)V a
	set (III)V a
	set (IIII)V b
	set (Lcom/mojang/math/Matrix4f;)V a
	set (Lcom/mojang/math/Vector3f;)V a
	set (Lcom/mojang/math/Vector4f;)V a
	set ([F)V a
	setMat2x2 (FFFF)V c
	setMat2x3 (FFFFFF)V a
	setMat2x4 (FFFFFFFF)V a
	setMat3x2 (FFFFFF)V b
	setMat3x3 (FFFFFFFFF)V a
	setMat3x4 (FFFFFFFFFFFF)V a
	setMat4x2 (FFFFFFFF)V b
	setMat4x3 (FFFFFFFFFFFF)V b
	setMat4x4 (FFFFFFFFFFFFFFFF)V a
	setSafe (FFFF)V b
	setSafe (IIII)V a
com/mojang/blaze3d/shaders/BlendMode drv
	blendFunc f
	dstAlphaFactor e
	dstColorFactor d
	lastApplied a
	opaque h
	separateBlend g
	srcAlphaFactor c
	srcColorFactor b
	apply ()V a
	isOpaque ()Z b
	stringToBlendFactor (Ljava/lang/String;)I b
	stringToBlendFunc (Ljava/lang/String;)I a
com/mojang/blaze3d/shaders/Effect drw
com/mojang/blaze3d/shaders/EffectProgram drx
	PREPROCESSOR a
	references b
	attachToEffect (Lcom/mojang/blaze3d/shaders/Effect;)V a
	close ()V a
	compileShader (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/EffectProgram; a
com/mojang/blaze3d/shaders/Program dry
	LOGGER a
	MAX_LOG_LENGTH b
	id e
	name d
	type c
	attachToShader (Lcom/mojang/blaze3d/shaders/Shader;)V a
	close ()V a
	compileShader (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor;)Lcom/mojang/blaze3d/shaders/Program; a
	compileShaderInternal (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor;)I b
	createProgram (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;I)Lcom/mojang/blaze3d/shaders/Program; a
	getId ()I c
	getName ()Ljava/lang/String; b
com/mojang/blaze3d/shaders/Program$Type dry$a
	$VALUES g
	FRAGMENT b
	VERTEX a
	extension d
	glType e
	name c
	programs f
	$values ()[Lcom/mojang/blaze3d/shaders/Program$Type; e
	getExtension ()Ljava/lang/String; b
	getGlType ()I d
	getName ()Ljava/lang/String; a
	getPrograms ()Ljava/util/Map; c
com/mojang/blaze3d/shaders/ProgramManager drz
	LOGGER a
	createProgram ()I a
	glUseProgram (I)V a
	linkShader (Lcom/mojang/blaze3d/shaders/Shader;)V b
	releaseProgram (Lcom/mojang/blaze3d/shaders/Shader;)V a
com/mojang/blaze3d/shaders/Shader dsa
	attachToProgram ()V e
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
com/mojang/blaze3d/shaders/Uniform dsb
	LOGGER l
	TRANSPOSE_MATRICIES m
	UT_FLOAT1 e
	UT_FLOAT2 f
	UT_FLOAT3 g
	UT_FLOAT4 h
	UT_INT1 a
	UT_INT2 b
	UT_INT3 c
	UT_INT4 d
	UT_MAT2 i
	UT_MAT3 j
	UT_MAT4 k
	count o
	dirty t
	floatValues r
	intValues q
	location n
	name s
	parent u
	type p
	getCount ()I d
	getFloatBuffer ()Ljava/nio/FloatBuffer; g
	getIntBuffer ()Ljava/nio/IntBuffer; f
	getLocation ()I c
	getName ()Ljava/lang/String; a
	getType ()I e
	getTypeFromString (Ljava/lang/String;)I a
	glBindAttribLocation (IILjava/lang/CharSequence;)V a
	glGetAttribLocation (ILjava/lang/CharSequence;)I b
	glGetUniformLocation (ILjava/lang/CharSequence;)I a
	markDirty ()V h
	set (F)V a
	set (FF)V a
	set (FFF)V a
	set (FFFF)V a
	set (I)V a
	set (IF)V a
	set (II)V a
	set (III)V a
	set (IIII)V b
	set (Lcom/mojang/math/Matrix4f;)V a
	set (Lcom/mojang/math/Vector3f;)V a
	set (Lcom/mojang/math/Vector4f;)V a
	set ([F)V a
	setLocation (I)V b
	setMat2x2 (FFFF)V c
	setMat2x3 (FFFFFF)V a
	setMat2x4 (FFFFFFFF)V a
	setMat3x2 (FFFFFF)V b
	setMat3x3 (FFFFFFFFF)V a
	setMat3x4 (FFFFFFFFFFFF)V a
	setMat4x2 (FFFFFFFF)V b
	setMat4x3 (FFFFFFFFFFFF)V b
	setMat4x4 (FFFFFFFFFFFFFFFF)V a
	setSafe (FFFF)V b
	setSafe (IIII)V a
	upload ()V b
	uploadAsFloat ()V j
	uploadAsInteger ()V i
	uploadAsMatrix ()V k
	uploadInteger (II)V b
com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer com/mojang/blaze3d/systems/RenderSystem$a
	generator c
	indexCount f
	indexStride b
	name d
	type e
	vertexStride a
	ensureStorage (I)V a
	intConsumer (Ljava/nio/ByteBuffer;)Lit/unimi/dsi/fastutil/ints/IntConsumer; a
	name ()I a
	type ()Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; b
com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer$IndexGenerator com/mojang/blaze3d/systems/RenderSystem$a$a
com/mojang/blaze3d/vertex/BufferBuilder dse
	GROWTH_SIZE g
	LOGGER h
	buffer i
	building v
	currentElement p
	drawStates j
	elementIndex q
	fastFormat t
	format r
	fullFormat u
	indexOnly A
	lastPoppedStateIndex k
	mode s
	nextElementByte m
	sortX x
	sortY y
	sortZ z
	sortingPoints w
	totalRenderedBytes l
	totalUploadedBytes n
	vertices o
	begin (Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;Lcom/mojang/blaze3d/vertex/VertexFormat;)V a
	building ()Z i
	clear ()V f
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	currentElement ()Lcom/mojang/blaze3d/vertex/VertexFormatElement; h
	discard ()V g
	end ()V b
	endVertex ()V c
	ensureCapacity (I)V d
	ensureVertexCapacity ()V k
	getSortState ()Lcom/mojang/blaze3d/vertex/BufferBuilder$SortState; a
	intConsumer (Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType;)Lit/unimi/dsi/fastutil/ints/IntConsumer; a
	makeQuadSortingPoints ()[Lcom/mojang/math/Vector3f; l
	nextElement ()V d
	popNextBuffer ()Lcom/mojang/datafixers/util/Pair; e
	putByte (IB)V a
	putFloat (IF)V a
	putShort (IS)V a
	putSortedQuadIndices (Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType;)V b
	restoreSortState (Lcom/mojang/blaze3d/vertex/BufferBuilder$SortState;)V a
	roundUp (I)I e
	setQuadSortOrigin (FFF)V a
	switchFormat (Lcom/mojang/blaze3d/vertex/VertexFormat;)V a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/blaze3d/vertex/BufferBuilder$DrawState dse$a
	format a
	indexCount c
	indexOnly f
	indexType e
	mode d
	sequentialIndex g
	vertexCount b
	bufferSize ()I g
	format ()Lcom/mojang/blaze3d/vertex/VertexFormat; a
	indexBufferSize ()I j
	indexCount ()I c
	indexOnly ()Z h
	indexType ()Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; e
	mode ()Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; d
	sequentialIndex ()Z i
	vertexBufferSize ()I f
	vertexCount ()I b
com/mojang/blaze3d/vertex/BufferBuilder$SortState dse$b
	mode a
	sortX d
	sortY e
	sortZ f
	sortingPoints c
	vertices b
com/mojang/blaze3d/vertex/BufferUploader dsf
	lastFormat d
	lastIndexBufferObject c
	lastVertexArrayObject a
	lastVertexBufferObject b
	_end (Ljava/nio/ByteBuffer;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;Lcom/mojang/blaze3d/vertex/VertexFormat;ILcom/mojang/blaze3d/vertex/VertexFormat$IndexType;IZ)V a
	_endInternal (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V b
	end (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	invalidateElementArrayBufferBinding ()V b
	reset ()V a
	updateVertexSetup (Lcom/mojang/blaze3d/vertex/VertexFormat;)V a
com/mojang/blaze3d/vertex/BufferVertexConsumer dsg
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	currentElement ()Lcom/mojang/blaze3d/vertex/VertexFormatElement; h
	nextElement ()V d
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	normalIntValue (F)B a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	putByte (IB)V a
	putFloat (IF)V a
	putShort (IS)V a
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	uvShort (SSI)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/DefaultVertexFormat dsh
	BLIT_SCREEN i
	BLOCK j
	ELEMENT_COLOR b
	ELEMENT_NORMAL f
	ELEMENT_PADDING g
	ELEMENT_POSITION a
	ELEMENT_UV h
	ELEMENT_UV0 c
	ELEMENT_UV1 d
	ELEMENT_UV2 e
	NEW_ENTITY k
	PARTICLE l
	POSITION m
	POSITION_COLOR n
	POSITION_COLOR_LIGHTMAP p
	POSITION_COLOR_NORMAL o
	POSITION_COLOR_TEX r
	POSITION_COLOR_TEX_LIGHTMAP t
	POSITION_TEX q
	POSITION_TEX_COLOR s
	POSITION_TEX_COLOR_NORMAL v
	POSITION_TEX_LIGHTMAP_COLOR u
com/mojang/blaze3d/vertex/DefaultedVertexConsumer dsi
	defaultA e
	defaultB d
	defaultColorSet a
	defaultG c
	defaultR b
	defaultColor (IIII)V b
	unsetDefaultColor ()V j
com/mojang/blaze3d/vertex/PoseStack dsj
	poseStack a
	clear ()Z d
	last ()Lcom/mojang/blaze3d/vertex/PoseStack$Pose; c
	mulPose (Lcom/mojang/math/Quaternion;)V a
	mulPoseMatrix (Lcom/mojang/math/Matrix4f;)V a
	popPose ()V b
	pushPose ()V a
	scale (FFF)V a
	setIdentity ()V e
	translate (DDD)V a
com/mojang/blaze3d/vertex/PoseStack$Pose dsj$a
	normal b
	pose a
	normal ()Lcom/mojang/math/Matrix3f; b
	pose ()Lcom/mojang/math/Matrix4f; a
com/mojang/blaze3d/vertex/SheetedDecalTextureGenerator dsk
	cameraInversePose h
	delegate g
	lightCoords o
	normalInversePose i
	nx p
	ny q
	nz r
	overlayU m
	overlayV n
	x j
	y k
	z l
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	endVertex ()V c
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	resetState ()V a
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/Tesselator dsl
	INSTANCE d
	MAX_FLOATS b
	MAX_MEMORY_USE a
	builder c
	end ()V b
	getBuilder ()Lcom/mojang/blaze3d/vertex/BufferBuilder; c
	getInstance ()Lcom/mojang/blaze3d/vertex/Tesselator; a
com/mojang/blaze3d/vertex/VertexBuffer dsm
	arrayObjectId d
	format h
	indexBufferId b
	indexCount e
	indexType c
	mode f
	sequentialIndices g
	vertextBufferId a
	_drawWithShader (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/ShaderInstance;)V b
	bind ()V a
	bindVertexArray ()V g
	draw ()V c
	drawChunkLayer ()V d
	drawWithShader (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/ShaderInstance;)V a
	getFormat ()Lcom/mojang/blaze3d/vertex/VertexFormat; f
	unbind ()V e
	unbindVertexArray ()V b
	upload (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	uploadLater (Lcom/mojang/blaze3d/vertex/BufferBuilder;)Ljava/util/concurrent/CompletableFuture; b
	upload_ (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V c
com/mojang/blaze3d/vertex/VertexConsumer dsn
	LOGGER f
	color (FFFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	color (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V c
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	normal (Lcom/mojang/math/Matrix3f;FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; c
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	putBulkData (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFII)V a
	putBulkData (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;[FFFF[IIZ)V a
	unsetDefaultColor ()V j
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
	vertex (Lcom/mojang/math/Matrix4f;FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/VertexFormat dso
	elementMapping b
	elements a
	indexBufferObject g
	offsets c
	vertexArrayObject e
	vertexBufferObject f
	vertexSize d
	_clearBufferState ()V k
	_setupBufferState ()V j
	clearBufferState ()V f
	getElementAttributeNames ()Lcom/google/common/collect/ImmutableList; d
	getElements ()Lcom/google/common/collect/ImmutableList; c
	getIntegerSize ()I a
	getOrCreateIndexBufferObject ()I i
	getOrCreateVertexArrayObject ()I g
	getOrCreateVertexBufferObject ()I h
	getVertexSize ()I b
	setupBufferState ()V e
com/mojang/blaze3d/vertex/VertexFormat$IndexType dso$a
	$VALUES f
	BYTE a
	INT c
	SHORT b
	asGLType d
	bytes e
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; a
	least (I)Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; a
com/mojang/blaze3d/vertex/VertexFormat$Mode dso$b
	$VALUES l
	DEBUG_LINES c
	DEBUG_LINE_STRIP d
	LINES a
	LINE_STRIP b
	QUADS h
	TRIANGLES e
	TRIANGLE_FAN g
	TRIANGLE_STRIP f
	asGLMode i
	primitiveLength j
	primitiveStride k
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; a
	indexCount (I)I a
com/mojang/blaze3d/vertex/VertexFormatElement dsp
	byteSize e
	count d
	index c
	type a
	usage b
	clearBufferState (I)V a
	getByteSize ()I e
	getCount ()I c
	getIndex ()I d
	getType ()Lcom/mojang/blaze3d/vertex/VertexFormatElement$Type; a
	getUsage ()Lcom/mojang/blaze3d/vertex/VertexFormatElement$Usage; b
	isPosition ()Z f
	setupBufferState (IJI)V a
	supportsUsage (ILcom/mojang/blaze3d/vertex/VertexFormatElement$Usage;)Z a
com/mojang/blaze3d/vertex/VertexFormatElement$Type dsp$a
	$VALUES k
	BYTE c
	FLOAT a
	INT g
	SHORT e
	UBYTE b
	UINT f
	USHORT d
	glType j
	name i
	size h
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormatElement$Type; d
	getGlType ()I c
	getName ()Ljava/lang/String; b
	getSize ()I a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage dsp$b
	$VALUES j
	COLOR c
	GENERIC f
	NORMAL b
	PADDING e
	POSITION a
	UV d
	clearState i
	name g
	setupState h
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormatElement$Usage; b
	clearBufferState (II)V a
	getName ()Ljava/lang/String; a
	setupBufferState (IIIJII)V a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage$ClearState dsp$b$a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage$SetupState dsp$b$b
com/mojang/blaze3d/vertex/VertexMultiConsumer dsq
	create ()Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create (Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create ([Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/VertexMultiConsumer$Double dsq$a
	first a
	second b
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V c
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V j
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/blaze3d/vertex/VertexMultiConsumer$Multiple dsq$b
	delegates a
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V c
	forEach (Ljava/util/function/Consumer;)V a
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V j
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/math/Constants a
	DEG_TO_RAD c
	EPSILON d
	PI a
	RAD_TO_DEG b
com/mojang/math/FieldsAreNonnullByDefault b
com/mojang/math/MethodsReturnNonnullByDefault e
com/mojang/math/OctahedralGroup com/mojang/math/PointGroupO
	$VALUES af
	IDENTITY a
	INVERSION y
	INVERT_X z
	INVERT_Y A
	INVERT_Z B
	ROT_120_NNN e
	ROT_120_NNP f
	ROT_120_NPN g
	ROT_120_NPP h
	ROT_120_PNN i
	ROT_120_PNP j
	ROT_120_PPN k
	ROT_120_PPP l
	ROT_180_EDGE_XY_NEG m
	ROT_180_EDGE_XY_POS n
	ROT_180_EDGE_XZ_NEG o
	ROT_180_EDGE_XZ_POS p
	ROT_180_EDGE_YZ_NEG q
	ROT_180_EDGE_YZ_POS r
	ROT_180_FACE_XY b
	ROT_180_FACE_XZ c
	ROT_180_FACE_YZ d
	ROT_60_REF_NNN C
	ROT_60_REF_NNP D
	ROT_60_REF_NPN E
	ROT_60_REF_NPP F
	ROT_60_REF_PNN G
	ROT_60_REF_PNP H
	ROT_60_REF_PPN I
	ROT_60_REF_PPP J
	ROT_90_REF_X_NEG Q
	ROT_90_REF_X_POS R
	ROT_90_REF_Y_NEG S
	ROT_90_REF_Y_POS T
	ROT_90_REF_Z_NEG U
	ROT_90_REF_Z_POS V
	ROT_90_X_NEG s
	ROT_90_X_POS t
	ROT_90_Y_NEG u
	ROT_90_Y_POS v
	ROT_90_Z_NEG w
	ROT_90_Z_POS x
	SWAP_NEG_XY N
	SWAP_NEG_XZ P
	SWAP_NEG_YZ O
	SWAP_XY K
	SWAP_XZ M
	SWAP_YZ L
	cayleyTable ad
	inverseTable ae
	invertX Z
	invertY aa
	invertZ ab
	name X
	permutation ac
	rotatedDirections Y
	transformation W
	$values ()[Lcom/mojang/math/OctahedralGroup; e
	compose (Lcom/mojang/math/OctahedralGroup;)Lcom/mojang/math/OctahedralGroup; a
	getSerializedName ()Ljava/lang/String; c
	inverse ()Lcom/mojang/math/OctahedralGroup; a
	inverts (Lnet/minecraft/core/Direction$Axis;)Z a
	packInversions ()Lit/unimi/dsi/fastutil/booleans/BooleanList; d
	rotate (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	rotate (Lnet/minecraft/core/FrontAndTop;)Lnet/minecraft/core/FrontAndTop; a
	transformation ()Lcom/mojang/math/Matrix3f; b
com/mojang/math/SymmetricGroup3 com/mojang/math/PointGroupS
	$VALUES k
	ORDER i
	P123 a
	P132 c
	P213 b
	P231 d
	P312 e
	P321 f
	cayleyTable j
	permutation g
	transformation h
	$values ()[Lcom/mojang/math/SymmetricGroup3; b
	compose (Lcom/mojang/math/SymmetricGroup3;)Lcom/mojang/math/SymmetricGroup3; a
	permutation (I)I a
	transformation ()Lcom/mojang/math/Matrix3f; a
com/mojang/math/Transformation i
	IDENTITY g
	decomposed b
	leftRotation d
	matrix a
	rightRotation f
	scale e
	translation c
	compose (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; a
	compose (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Quaternion;Lcom/mojang/math/Vector3f;Lcom/mojang/math/Quaternion;)Lcom/mojang/math/Matrix4f; a
	ensureDecomposed ()V h
	getLeftRotation ()Lcom/mojang/math/Quaternion; e
	getMatrix ()Lcom/mojang/math/Matrix4f; c
	getRightRotation ()Lcom/mojang/math/Quaternion; g
	getScale ()Lcom/mojang/math/Vector3f; f
	getTranslation ()Lcom/mojang/math/Vector3f; d
	identity ()Lcom/mojang/math/Transformation; a
	inverse ()Lcom/mojang/math/Transformation; b
	slerp (Lcom/mojang/math/Transformation;F)Lcom/mojang/math/Transformation; a
	toAffine (Lcom/mojang/math/Matrix4f;)Lcom/mojang/datafixers/util/Pair; a
com/mojang/math/Vector3d j
	x a
	y b
	z c
	add (Lcom/mojang/math/Vector3d;)V b
	scale (D)V a
	set (DDD)V a
	set (Lcom/mojang/math/Vector3d;)V a
com/mojang/math/Vector3f com/mojang/math/Vector3fa
	CODEC a
	XN b
	XP c
	YN d
	YP e
	ZERO h
	ZN f
	ZP g
	x i
	y j
	z k
	add (FFF)V c
	add (Lcom/mojang/math/Vector3f;)V b
	clamp (FF)V a
	clamp (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)V a
	copy ()Lcom/mojang/math/Vector3f; e
	cross (Lcom/mojang/math/Vector3f;)V e
	dot (Lcom/mojang/math/Vector3f;)F d
	lerp (Lcom/mojang/math/Vector3f;F)V a
	load (Lcom/mojang/math/Vector3f;)V a
	map (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V a
	mul (F)V a
	mul (FFF)V a
	normalize ()Z d
	rotation (F)Lcom/mojang/math/Quaternion; b
	rotationDegrees (F)Lcom/mojang/math/Quaternion; c
	set (FFF)V b
	sub (Lcom/mojang/math/Vector3f;)V c
	transform (Lcom/mojang/math/Matrix3f;)V a
	transform (Lcom/mojang/math/Quaternion;)V a
	x ()F a
	y ()F b
	z ()F c
com/mojang/realmsclient/KeyCombo dss
	chars a
	matchIndex b
	onCompletion c
	keyPressed (C)Z a
	reset ()V a
com/mojang/realmsclient/RealmsMainScreen dst
	BUTTON_LOCATION af
	CONFIGURE_LOCATION Y
	CONFIGURE_SERVER_TOOLTIP aw
	CROSS_ICON_LOCATION ad
	DARKEN_LOCATION ac
	EXPIRED_ICON_LOCATION R
	EXPIRES_SOON_ICON_LOCATION S
	INVITATION_ICONS_LOCATION U
	INVITE_ICON_LOCATION V
	LEAVE_ICON_LOCATION T
	LEAVE_SERVER_TOOLTIP av
	LOGGER a
	LOGO_LOCATION X
	NEWS_LOCATION aa
	NEWS_TOOLTIP ay
	NO_PENDING_INVITES_TEXT ag
	OFF_ICON_LOCATION c
	ON_ICON_LOCATION b
	PENDING_INVITES_TEXT ah
	POPUP_LOCATION ab
	POPUP_TEXT ap
	QUESTIONMARK_LOCATION Z
	REALMS_DATA_FETCHER aC
	SELECT_MINIGAME_PREFIX ao
	SERVER_CLOSED_TOOLTIP au
	SERVER_EXPIRED_TOOLTIP aq
	SERVER_EXPIRES_IN_DAY_TOOLTIP as
	SERVER_EXPIRES_SOON_TOOLTIP ar
	SERVER_INFO_TOOLTIP ax
	SERVER_OPEN_TOOLTIP at
	SERVER_UNITIALIZED_TEXT aj
	SUBSCRIPTION_CREATE_TEXT an
	SUBSCRIPTION_EXPIRED_TEXT ak
	SUBSCRIPTION_RENEW_TEXT al
	TRIAL_EXPIRED_TEXT am
	TRIAL_ICON_LOCATION ae
	TRIAL_MESSAGE_LINES ai
	TRIAL_TEXT aA
	UNITIALIZED_WORLD_NARRATION az
	WORLDICON_LOCATION W
	animTick aX
	backButton aQ
	buyARealmButton bs
	carouselIndex bg
	carouselTick bh
	checkedClientCompatability aH
	checkedParentalConsent aG
	clicks bk
	closeButton bt
	configureButton aS
	connectLock bl
	createTrialButton br
	createdTrial bc
	dontSetConnectedToRealms aL
	formattedPopup bm
	hasFetchedServers aY
	hasParentalConsent aF
	hasSwitchedCarouselImage bi
	hasUnreadNews be
	hoveredElement bn
	inviteNarrationLimiter aK
	justClosedPopup ba
	keyCombos bj
	lastScreen aM
	lastScrollYPosition aE
	leaveButton aT
	newsButton bq
	newsLink bf
	numberOfPendingInvites aW
	overrideConfigure aD
	pendingInvitesButton bp
	playButton aP
	popupOpenedByUser aZ
	realmSelectionList aN
	realmsGenericErrorScreen aI
	realmsSelectionListAdded aO
	realmsServers aV
	regionsPinged aJ
	renewButton aR
	showPopupButton bo
	showingPopup bd
	teaserImages aB
	toolTip aU
	trialsAvailable bb
	addButtons ()V c
	charTyped (CI)Z a
	checkClientCompatability ()V A
	checkParentalConsent ()V B
	configureClicked (Lcom/mojang/realmsclient/dto/RealmsServer;)V g
	drawClose (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawConfigure (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V g
	drawExpired (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	drawExpiring (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	drawInvitationPendingIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZZ)V a
	drawLeave (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V f
	drawOpen (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawPopup (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	drawRealmsLogo (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	getOwnedNonExpiredWorldIds ()Ljava/util/List; z
	getSelectedServer ()Lcom/mojang/realmsclient/dto/RealmsServer; H
	hasParentalConsent ()Z w
	inPendingInvitationArea (DD)Z c
	init ()V b
	isOutsidePopup (DD)Z a
	isSelfOwnedNonExpiredServer (Lcom/mojang/realmsclient/dto/RealmsServer;)Z k
	isSelfOwnedServer (Lcom/mojang/realmsclient/dto/RealmsServer;)Z j
	keyPressed (III)Z a
	leaveClicked (Lcom/mojang/realmsclient/dto/RealmsServer;)V h
	leaveServer (ZLcom/mojang/realmsclient/dto/RealmsServer;)V a
	mouseClicked (DDI)Z a
	newScreen ()Lcom/mojang/realmsclient/RealmsMainScreen; g
	onClosePopup ()V I
	onRenew (Lcom/mojang/realmsclient/dto/RealmsServer;)V f
	pendingButtonPress (Lnet/minecraft/client/gui/components/Button;)V a
	pingRegions ()V y
	play (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/gui/screens/Screen;)V a
	popupX0 ()I J
	popupY0 ()I K
	removeServer (Lcom/mojang/realmsclient/dto/RealmsServer;)V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderLocal (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderMoreInfo (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZ)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V a
	renderNews (Lcom/mojang/blaze3d/vertex/PoseStack;IIZIIZZ)V a
	renderStage (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	resetScreen ()V f
	saveListScrollPosition ()V G
	setCreatedTrial (Z)V a
	setTooltip ([Lnet/minecraft/network/chat/Component;)V a
	shouldConfigureButtonBeVisible (Lcom/mojang/realmsclient/dto/RealmsServer;)Z d
	shouldLeaveButtonBeVisible (Lcom/mojang/realmsclient/dto/RealmsServer;)Z e
	shouldPlayButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z b
	shouldRenewButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z c
	shouldShowMessageInList ()Z v
	shouldShowPopup ()Z a
	shouldShowPopupButton ()Z x
	stopRealmsFetcher ()V F
	switchToLocal ()V D
	switchToProd ()V E
	switchToStage ()V C
	tick ()V d
	updateButtonStates (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	updateTeaserImages (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
com/mojang/realmsclient/RealmsMainScreen$CloseButton dst$a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$Entry dst$b
	getServer ()Lcom/mojang/realmsclient/dto/RealmsServer; a
com/mojang/realmsclient/RealmsMainScreen$HoveredElement dst$c
	$VALUES e
	CONFIGURE d
	EXPIRED b
	LEAVE c
	NONE a
	$values ()[Lcom/mojang/realmsclient/RealmsMainScreen$HoveredElement; a
com/mojang/realmsclient/RealmsMainScreen$NewsButton dst$d
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$PendingInvitesButton dst$e
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	tick ()V a
com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList dst$f
	getMaxPosition ()I b
	getRowWidth ()I c
	isFocused ()Z a
	itemClicked (IIDDI)V a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	setSelected (Lcom/mojang/realmsclient/RealmsMainScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/RealmsMainScreen$ServerEntry dst$g
	SKIN_HEAD_LARGE_WIDTH c
	serverData d
	getNarration ()Lnet/minecraft/network/chat/Component; b
	getServer ()Lcom/mojang/realmsclient/dto/RealmsServer; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderLegacy (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
	renderMcoServerItem (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
com/mojang/realmsclient/RealmsMainScreen$ShowPopupButton dst$h
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$TrialEntry dst$i
	getNarration ()Lnet/minecraft/network/chat/Component; b
	getServer ()Lcom/mojang/realmsclient/dto/RealmsServer; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderTrialItem (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V a
com/mojang/realmsclient/Unit dsu
	$VALUES f
	B a
	BASE_UNIT e
	GB d
	KB b
	MB c
	$values ()[Lcom/mojang/realmsclient/Unit; a
	convertTo (JLcom/mojang/realmsclient/Unit;)D a
	getLargest (J)Lcom/mojang/realmsclient/Unit; a
	humanReadable (J)Ljava/lang/String; b
	humanReadable (JLcom/mojang/realmsclient/Unit;)Ljava/lang/String; b
com/mojang/realmsclient/client/FileDownload dsv
	INVALID_FILE_NAMES k
	LOGGER a
	cancelled b
	currentThread i
	error d
	extracting e
	finished c
	request h
	requestConfig j
	resourcePackPath g
	tempFile f
	cancel ()V a
	contentLength (Ljava/lang/String;)J a
	deletePlayerTag (Ljava/io/File;)V a
	download (Lcom/mojang/realmsclient/dto/WorldDownload;Ljava/lang/String;Lcom/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus;Lnet/minecraft/world/level/storage/LevelStorageSource;)V a
	findAvailableFolderName (Ljava/lang/String;)Ljava/lang/String; b
	isError ()Z c
	isExtracting ()Z d
	isFinished ()Z b
	untarGzipArchive (Ljava/lang/String;Ljava/io/File;Lnet/minecraft/world/level/storage/LevelStorageSource;)V a
com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream dsv$a
	listener a
	setListener (Ljava/awt/event/ActionListener;)V a
com/mojang/realmsclient/client/FileDownload$ProgressListener dsv$b
	downloadStatus e
	levelStorageSource d
	tempFile c
	worldName b
com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener dsv$c
	downloadStatus c
	tempFile b
	worldDownload d
com/mojang/realmsclient/client/FileUpload dsw
	LOGGER a
	MAX_RETRIES b
	UPLOAD_PATH c
	cancelled l
	clientVersion j
	file d
	requestConfig n
	sessionId h
	slotId f
	uploadInfo g
	uploadStatus k
	uploadTask m
	username i
	worldId e
	cancel ()V a
	cleanup (Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V a
	getRetryDelaySeconds (Lorg/apache/http/HttpResponse;)J a
	handleResponse (Lorg/apache/http/HttpResponse;Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder;)V a
	isFinished ()Z b
	requestUpload (I)Lcom/mojang/realmsclient/gui/screens/UploadResult; a
	retryUploadAfter (JI)Lcom/mojang/realmsclient/gui/screens/UploadResult; b
	setupRequest (Lorg/apache/http/client/methods/HttpPost;)V a
	shouldRetry (JI)Z a
	upload (Ljava/util/function/Consumer;)V a
com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity dsw$a
	content b
	length a
	uploadStatus c
com/mojang/realmsclient/client/Ping dsx
	now ()J b
	ping (Ljava/lang/String;)I a
	ping ([Lcom/mojang/realmsclient/client/Ping$Region;)Ljava/util/List; a
	pingAllRegions ()Ljava/util/List; a
com/mojang/realmsclient/client/Ping$Region dsx$a
	$VALUES k
	AP_NORTHEAST_1 g
	AP_SOUTHEAST_1 e
	AP_SOUTHEAST_2 f
	EU_WEST_1 d
	SA_EAST_1 h
	US_EAST_1 a
	US_WEST_1 c
	US_WEST_2 b
	endpoint j
	name i
	$values ()[Lcom/mojang/realmsclient/client/Ping$Region; a
com/mojang/realmsclient/client/RealmsClient dsy
	ACTIVITIES_RESOURCE k
	GSON S
	INVITES_RESOURCE_PATH h
	LOGGER c
	MCO_RESOURCE_PATH i
	OPS_RESOURCE l
	PATH_ACCEPT_INVITE C
	PATH_AVAILABLE u
	PATH_CLIENT_COMPATIBLE O
	PATH_DELETE_WORLD K
	PATH_GET_ACTIVTIES p
	PATH_GET_LIVESTATS q
	PATH_GET_SUBSCRIPTION r
	PATH_INITIALIZE o
	PATH_NEWS Q
	PATH_OP s
	PATH_PENDING_INVITES B
	PATH_PENDING_INVITES_COUNT A
	PATH_PUT_INTO_MINIGAMES_MODE t
	PATH_REJECT_INVITE D
	PATH_SLOT G
	PATH_STAGE_AVAILABLE R
	PATH_TEMPLATES v
	PATH_TOS_AGREED P
	PATH_UNINVITE_MYSELF E
	PATH_WORLD_BACKUPS L
	PATH_WORLD_CLOSE I
	PATH_WORLD_DOWNLOAD M
	PATH_WORLD_GET x
	PATH_WORLD_INVITES y
	PATH_WORLD_JOIN w
	PATH_WORLD_OPEN H
	PATH_WORLD_RESET J
	PATH_WORLD_UNINVITE z
	PATH_WORLD_UPDATE F
	PATH_WORLD_UPLOAD N
	REGIONS_RESOURCE m
	SUBSCRIPTION_RESOURCE j
	TRIALS_RESOURCE n
	WORLDS_RESOURCE_PATH g
	currentEnvironment a
	initialized b
	minecraft f
	sessionId d
	username e
	acceptInvitation (Ljava/lang/String;)V a
	agreeToTos ()V l
	backupsFor (J)Lcom/mojang/realmsclient/dto/BackupList; e
	clientCompatible ()Lcom/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse; i
	close (J)Ljava/lang/Boolean; g
	create ()Lcom/mojang/realmsclient/client/RealmsClient; a
	deleteWorld (J)V i
	deop (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; f
	execute (Lcom/mojang/realmsclient/client/Request;)Ljava/lang/String; a
	fetchWorldTemplates (IILcom/mojang/realmsclient/dto/RealmsServer$WorldType;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; a
	getActivity (J)Lcom/mojang/realmsclient/dto/ServerActivityList; b
	getLiveStats ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; f
	getNews ()Lcom/mojang/realmsclient/dto/RealmsNews; m
	getOwnWorld (J)Lcom/mojang/realmsclient/dto/RealmsServer; a
	initializeWorld (JLjava/lang/String;Ljava/lang/String;)V a
	invite (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; b
	isBlocked (Lcom/mojang/realmsclient/dto/PendingInvite;)Z a
	join (J)Lcom/mojang/realmsclient/dto/RealmsServerAddress; c
	listWorlds ()Lcom/mojang/realmsclient/dto/RealmsServerList; e
	mcoEnabled ()Ljava/lang/Boolean; g
	op (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; e
	open (J)Ljava/lang/Boolean; f
	pendingInvites ()Lcom/mojang/realmsclient/dto/PendingInvitesList; k
	pendingInvitesCount ()I j
	putIntoMinigameMode (JLjava/lang/String;)Ljava/lang/Boolean; d
	rejectInvitation (Ljava/lang/String;)V b
	requestDownloadInfo (JI)Lcom/mojang/realmsclient/dto/WorldDownload; b
	requestUploadInfo (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; h
	resetWorldWithSeed (JLcom/mojang/realmsclient/util/WorldGenerationInfo;)Ljava/lang/Boolean; a
	resetWorldWithTemplate (JLjava/lang/String;)Ljava/lang/Boolean; g
	restoreWorld (JLjava/lang/String;)V c
	sendPingResults (Lcom/mojang/realmsclient/dto/PingResult;)V a
	stageAvailable ()Ljava/lang/Boolean; h
	subscriptionFor (J)Lcom/mojang/realmsclient/dto/Subscription; h
	switchSlot (JI)Z a
	switchToLocal ()V d
	switchToProd ()V c
	switchToStage ()V b
	trialAvailable ()Ljava/lang/Boolean; n
	uninvite (JLjava/lang/String;)V a
	uninviteMyselfFrom (J)V d
	update (JLjava/lang/String;Ljava/lang/String;)V b
	updateSlot (JILcom/mojang/realmsclient/dto/RealmsWorldOptions;)V a
	url (Ljava/lang/String;)Ljava/lang/String; c
	url (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse dsy$a
	$VALUES d
	COMPATIBLE a
	OTHER c
	OUTDATED b
	$values ()[Lcom/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse; a
com/mojang/realmsclient/client/RealmsClient$Environment dsy$b
	$VALUES f
	LOCAL c
	PRODUCTION a
	STAGE b
	baseUrl d
	protocol e
	$values ()[Lcom/mojang/realmsclient/client/RealmsClient$Environment; a
com/mojang/realmsclient/client/RealmsClientConfig dsz
	proxy a
	getProxy ()Ljava/net/Proxy; a
	setProxy (Ljava/net/Proxy;)V a
com/mojang/realmsclient/client/RealmsError dta
	LOGGER a
	errorCode c
	errorMessage b
	create (Ljava/lang/String;)Lcom/mojang/realmsclient/client/RealmsError; a
	getErrorCode ()I b
	getErrorMessage ()Ljava/lang/String; a
com/mojang/realmsclient/client/Request dtb
	DEFAULT_CONNECT_TIMEOUT e
	DEFAULT_READ_TIMEOUT d
	connected c
	connection a
	url b
	connect ()Lcom/mojang/realmsclient/client/Request; d
	cookie (Ljava/lang/String;Ljava/lang/String;)V a
	cookie (Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V a
	delete (Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; b
	dispose ()V f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
	get (Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; a
	get (Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; a
	getHeader (Ljava/lang/String;)Ljava/lang/String; c
	getHeader (Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String; a
	getRetryAfterHeader ()I a
	getRetryAfterHeader (Ljava/net/HttpURLConnection;)I a
	header (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; b
	post (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; c
	post (Ljava/lang/String;Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; a
	put (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; d
	put (Ljava/lang/String;Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; b
	read (Ljava/io/InputStream;)Ljava/lang/String; a
	responseCode ()I b
	text ()Ljava/lang/String; c
com/mojang/realmsclient/client/Request$Delete dtb$a
	doConnect ()Lcom/mojang/realmsclient/client/Request$Delete; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Get dtb$b
	doConnect ()Lcom/mojang/realmsclient/client/Request$Get; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Post dtb$c
	content c
	doConnect ()Lcom/mojang/realmsclient/client/Request$Post; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Put dtb$d
	content c
	doConnect ()Lcom/mojang/realmsclient/client/Request$Put; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/UploadStatus dtc
	bytesWritten a
	totalBytes b
com/mojang/realmsclient/dto/Backup dte
	LOGGER f
	backupId a
	changeList e
	lastModifiedDate b
	metadata d
	size c
	uploadedVersion g
	format (Ljava/lang/String;)Ljava/lang/String; a
	isUploadedVersion ()Z a
	parse (Lcom/google/gson/JsonElement;)Lcom/mojang/realmsclient/dto/Backup; a
	setUploadedVersion (Z)V a
com/mojang/realmsclient/dto/BackupList dtf
	LOGGER b
	backups a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/BackupList; a
com/mojang/realmsclient/dto/GuardedSerializer dtg
	gson a
	fromJson (Ljava/lang/String;Ljava/lang/Class;)Lcom/mojang/realmsclient/dto/ReflectionBasedSerialization; a
	toJson (Lcom/mojang/realmsclient/dto/ReflectionBasedSerialization;)Ljava/lang/String; a
com/mojang/realmsclient/dto/Ops dth
	ops a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; a
com/mojang/realmsclient/dto/PendingInvite dti
	LOGGER f
	date e
	invitationId a
	worldName b
	worldOwnerName c
	worldOwnerUuid d
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/PendingInvite; a
com/mojang/realmsclient/dto/PendingInvitesList dtj
	LOGGER b
	pendingInvites a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/PendingInvitesList; a
com/mojang/realmsclient/dto/PingResult dtk
	pingResults a
	worldIds b
com/mojang/realmsclient/dto/PlayerInfo dtl
	accepted d
	name a
	online e
	operator c
	uuid b
	getAccepted ()Z d
	getName ()Ljava/lang/String; a
	getOnline ()Z e
	getUuid ()Ljava/lang/String; b
	isOperator ()Z c
	setAccepted (Z)V b
	setName (Ljava/lang/String;)V a
	setOnline (Z)V c
	setOperator (Z)V a
	setUuid (Ljava/lang/String;)V b
com/mojang/realmsclient/dto/RealmsDescriptionDto dtm
	description b
	name a
com/mojang/realmsclient/dto/RealmsNews dtn
	LOGGER b
	newsLink a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsNews; a
com/mojang/realmsclient/dto/RealmsServer dto
	LOGGER s
	activeSlot n
	daysLeft l
	expired j
	expiredTrial k
	id a
	minigameId p
	minigameImage q
	minigameName o
	motd d
	name c
	owner f
	ownerUUID g
	players h
	remoteSubscriptionId b
	serverPing r
	slots i
	state e
	worldType m
	clone ()Lcom/mojang/realmsclient/dto/RealmsServer; d
	cloneSlots (Ljava/util/Map;)Ljava/util/Map; a
	createEmptySlots ()Ljava/util/Map; e
	getDescription ()Ljava/lang/String; a
	getMinigameName ()Ljava/lang/String; c
	getName ()Ljava/lang/String; b
	getState (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$State; e
	getWorldName (I)Ljava/lang/String; a
	getWorldType (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$WorldType; f
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServer; a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; c
	parseInvited (Lcom/google/gson/JsonArray;)Ljava/util/List; a
	parseSlots (Lcom/google/gson/JsonArray;)Ljava/util/Map; b
	setDescription (Ljava/lang/String;)V b
	setName (Ljava/lang/String;)V a
	sortInvited (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	toServerData (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/ServerData; d
	updateServerPing (Lcom/mojang/realmsclient/dto/RealmsServerPlayerList;)V a
com/mojang/realmsclient/dto/RealmsServer$McoServerComparator dto$a
	refOwner a
	compare (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/realmsclient/dto/RealmsServer;)I a
com/mojang/realmsclient/dto/RealmsServer$State dto$b
	$VALUES d
	CLOSED a
	OPEN b
	UNINITIALIZED c
	$values ()[Lcom/mojang/realmsclient/dto/RealmsServer$State; a
com/mojang/realmsclient/dto/RealmsServer$WorldType dto$c
	$VALUES f
	ADVENTUREMAP c
	EXPERIENCE d
	INSPIRATION e
	MINIGAME b
	NORMAL a
	$values ()[Lcom/mojang/realmsclient/dto/RealmsServer$WorldType; a
com/mojang/realmsclient/dto/RealmsServerAddress dtp
	LOGGER d
	address a
	resourcePackHash c
	resourcePackUrl b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerAddress; a
com/mojang/realmsclient/dto/RealmsServerList dtq
	LOGGER b
	servers a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerList; a
com/mojang/realmsclient/dto/RealmsServerPing dtr
	nrOfPlayers a
	playerList b
com/mojang/realmsclient/dto/RealmsServerPlayerList dts
	JSON_PARSER d
	LOGGER c
	players b
	serverId a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerList; a
	parsePlayers (Lcom/google/gson/JsonArray;)Ljava/util/List; a
com/mojang/realmsclient/dto/RealmsServerPlayerLists dtt
	LOGGER b
	servers a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; a
com/mojang/realmsclient/dto/RealmsWorldOptions dtu
	DEFAULT_COMMAND_BLOCKS t
	DEFAULT_DIFFICULTY u
	DEFAULT_FORCE_GAME_MODE n
	DEFAULT_GAME_MODE v
	DEFAULT_PVP o
	DEFAULT_SLOT_NAME w
	DEFAULT_SPAWN_ANIMALS p
	DEFAULT_SPAWN_MONSTERS q
	DEFAULT_SPAWN_NPCS r
	DEFAULT_SPAWN_PROTECTION s
	DEFAULT_TEMPLATE_ID x
	DEFAULT_TEMPLATE_IMAGE y
	commandBlocks f
	difficulty h
	empty l
	forceGameMode g
	gameMode i
	pvp a
	slotName m
	spawnAnimals b
	spawnMonsters c
	spawnNPCs d
	spawnProtection e
	templateId j
	templateImage k
	clone ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; d
	createDefaults ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; a
	createEmptyDefaults ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; b
	getDefaultSlotName (I)Ljava/lang/String; b
	getSlotName (I)Ljava/lang/String; a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsWorldOptions; a
	setEmpty (Z)V a
	toJson ()Ljava/lang/String; c
com/mojang/realmsclient/dto/RealmsWorldResetDto dtv
	generateStructures d
	levelType c
	seed a
	worldTemplateId b
com/mojang/realmsclient/dto/ReflectionBasedSerialization dtw
com/mojang/realmsclient/dto/RegionPingResult dtx
	ping b
	regionName a
	ping ()I a
com/mojang/realmsclient/dto/ServerActivity dty
	joinTime b
	leaveTime c
	profileUuid a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/ServerActivity; a
com/mojang/realmsclient/dto/ServerActivityList dtz
	periodInMillis a
	serverActivities b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/ServerActivityList; a
com/mojang/realmsclient/dto/Subscription dua
	LOGGER d
	daysLeft b
	startDate a
	type c
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription; a
	typeFrom (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription$SubscriptionType; b
com/mojang/realmsclient/dto/Subscription$SubscriptionType dua$a
	$VALUES c
	NORMAL a
	RECURRING b
	$values ()[Lcom/mojang/realmsclient/dto/Subscription$SubscriptionType; a
com/mojang/realmsclient/dto/UploadInfo dub
	DEFAULT_PORT c
	DEFAULT_SCHEMA b
	LOGGER a
	URI_SCHEMA_PATTERN d
	token f
	uploadEndpoint g
	worldClosed e
	assembleUri (Ljava/lang/String;I)Ljava/net/URI; a
	createRequest (Ljava/lang/String;)Ljava/lang/String; b
	ensureEndpointSchema (Ljava/lang/String;Ljava/util/regex/Matcher;)Ljava/lang/String; a
	getToken ()Ljava/lang/String; a
	getUploadEndpoint ()Ljava/net/URI; b
	isWorldClosed ()Z c
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; a
	selectPortOrDefault (II)I a
com/mojang/realmsclient/dto/ValueObject duc
	getName (Ljava/lang/reflect/Field;)Ljava/lang/String; a
	isStatic (Ljava/lang/reflect/Field;)Z b
com/mojang/realmsclient/dto/WorldDownload dud
	LOGGER d
	downloadLink a
	resourcePackHash c
	resourcePackUrl b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldDownload; a
com/mojang/realmsclient/dto/WorldTemplate due
	LOGGER j
	author d
	id a
	image f
	link e
	name b
	recommendedPlayers h
	trailer g
	type i
	version c
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/WorldTemplate; a
com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType due$a
	$VALUES f
	ADVENTUREMAP c
	EXPERIENCE d
	INSPIRATION e
	MINIGAME b
	WORLD_TEMPLATE a
	$values ()[Lcom/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType; a
com/mojang/realmsclient/dto/WorldTemplatePaginatedList duf
	LOGGER e
	page b
	size c
	templates a
	total d
	isLastPage ()Z a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; a
com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler duh
	logger a
com/mojang/realmsclient/exception/RealmsHttpException dui
com/mojang/realmsclient/exception/RealmsServiceException duj
	errorCode c
	errorMsg d
	httpResponseContent b
	httpResultCode a
com/mojang/realmsclient/exception/RetryCallException duk
	DEFAULT_DELAY e
	delaySeconds f
com/mojang/realmsclient/gui/ErrorCallback dum
	error (Ljava/lang/String;)V b_
	error (Lnet/minecraft/network/chat/Component;)V a
com/mojang/realmsclient/gui/RealmsDataFetcher dun
	LOGGER a
	fetchStatus x
	hasUnreadNews q
	liveStatsScheduledFuture v
	liveStatsTask g
	livestats n
	minecraft b
	newsLink r
	newsLocalStorage k
	pendingInviteScheduledFuture t
	pendingInviteUpdateTask h
	pendingInvitesCount o
	realmsClient c
	removedServers l
	scheduler d
	serverListScheduledFuture s
	serverListUpdateTask f
	servers m
	stopped e
	trialAvailabilityTask i
	trialAvailable p
	trialAvailableScheduledFuture u
	unreadNewsScheduledFuture w
	unreadNewsTask j
	cancelTasks ()V n
	fetchAndUpdateNewsStorage ()Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; u
	forceUpdate ()V e
	getLivestats ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; i
	getPendingInvitesCount ()I g
	getServers ()Ljava/util/List; f
	hasUnreadNews ()Z j
	init ()V b
	initWithSpecificTaskList ()V c
	isActive ()Z o
	isFetchedSinceLastTry (Lcom/mojang/realmsclient/gui/RealmsDataFetcher$Task;)Z a
	isStopped ()Z a
	isTrialAvailable ()Z h
	markClean ()V d
	newsLink ()Ljava/lang/String; k
	removeItem (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	scheduleTasks ()V m
	setServers (Ljava/util/List;)V a
	stop ()V l
	updateLiveStats ()V s
	updatePendingInvites ()V q
	updateServersList ()V p
	updateTrialAvailable ()V r
	updateUnreadNews ()V t
com/mojang/realmsclient/gui/RealmsDataFetcher$Task dun$a
	$VALUES f
	LIVE_STATS d
	PENDING_INVITE b
	SERVER_LIST a
	TRIAL_AVAILABLE c
	UNREAD_NEWS e
	$values ()[Lcom/mojang/realmsclient/gui/RealmsDataFetcher$Task; a
com/mojang/realmsclient/gui/RealmsWorldSlotButton duo
	DEFAULT_WORLD_SLOT_1 c
	DEFAULT_WORLD_SLOT_2 d
	DEFAULT_WORLD_SLOT_3 e
	EMPTY_SLOT_LOCATION b
	SLOT_ACTIVE_TOOLTIP u
	SLOT_FRAME_LOCATION a
	SWITCH_TO_MINIGAME_SLOT_TOOLTIP v
	SWITCH_TO_WORLD_SLOT_TOOLTIP w
	animTick A
	serverDataProvider x
	slotIndex z
	state B
	toolTipSetter y
	drawSlotFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZLjava/lang/String;IJLjava/lang/String;ZZLcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action;Lnet/minecraft/network/chat/Component;)V a
	getAction (Lcom/mojang/realmsclient/dto/RealmsServer;ZZ)Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action; a
	getState ()Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$State; a
	getTooltipAndNarration (Lcom/mojang/realmsclient/dto/RealmsServer;Ljava/lang/String;ZZLcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action;)Lcom/mojang/datafixers/util/Pair; a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	tick ()V b
com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action duo$a
	$VALUES d
	JOIN c
	NOTHING a
	SWITCH_SLOT b
	$values ()[Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action; a
com/mojang/realmsclient/gui/RealmsWorldSlotButton$State duo$b
	action c
	actionPrompt h
	empty a
	image g
	imageId f
	isCurrentlyActiveSlot d
	minigame b
	slotName e
com/mojang/realmsclient/gui/RowButton dup
	height b
	width a
	xOffset c
	yOffset d
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawButtonsInRow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;Lnet/minecraft/realms/RealmsObjectSelectionList;IIII)V a
	drawForRowAt (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	getBottom ()I b
	getRight ()I a
	onClick (I)V a
	rowButtonMouseClicked (Lnet/minecraft/realms/RealmsObjectSelectionList;Lnet/minecraft/client/gui/components/ObjectSelectionList$Entry;Ljava/util/List;IDD)V a
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen dur
	TEXT_UNKNOWN a
	backup c
	backupInfoList R
	lastScreen b
	checkForSpecificMetadata (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	gameDifficultyMetadata (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; b
	gameModeMetadata (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; c
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList dur$a
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoListEntry dur$b
	key b
	value c
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
com/mojang/realmsclient/gui/screens/RealmsBackupScreen dus
	HAS_CHANGES_TOOLTIP S
	LOGGER a
	NO_BACKUPS_LABEL U
	PLUS_ICON_LOCATION b
	RESTORE_ICON_LOCATION c
	RESTORE_TOOLTIP R
	TITLE T
	UPLOADED_KEY ah
	backupObjectSelectionList Z
	backups X
	changesButton ae
	downloadButton ac
	lastScreen W
	lastScrollPosition V
	noBackups af
	restoreButton ad
	selectedBackup aa
	serverData ag
	slotId ab
	toolTip Y
	addToChangeList (Lcom/mojang/realmsclient/dto/Backup;Ljava/lang/String;)V a
	downloadClicked ()V z
	downloadWorldData ()V A
	generateChangeList ()V v
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	restore ()V B
	restoreClicked (I)V a
	shouldChangesButtonBeVisible ()Z x
	shouldRestoreButtonBeVisible ()Z y
	updateButtonStates ()V w
com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList dus$a
	addEntry (Lcom/mojang/realmsclient/dto/Backup;)V a
	getMaxPosition ()I b
	getRowWidth ()I c
	getScrollbarPosition ()I d
	isFocused ()Z a
	itemClicked (IIDDI)V a
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V b
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry dus$b
	backup b
	drawInfo (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
	drawRestore (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	getMediumDatePresentation (Ljava/util/Date;)Ljava/lang/String; a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderBackupItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/Backup;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen dut
	DEFAULT_BUTTON_WIDTH b
	LOGGER a
	animTick Y
	lastScreen c
	leftX V
	mainScreen R
	message U
	rightX W
	serverData S
	serverId T
	slotsThatHasBeenDownloaded X
	addButtons ()V v
	backButtonClicked ()V w
	doSwitchOrReset ()V c
	downloadWorld (I)V b
	drawSlotFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZLjava/lang/String;IJLjava/lang/String;Z)V a
	fetchServerData (J)V a
	getFramePositionX (I)I a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	isMinigame ()Z x
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen duu
	INCOMPATIBLE_MESSAGES R
	INCOMPATIBLE_TITLE c
	OUTDATED_MESSAGES b
	OUTDATED_TITLE a
	lastScreen S
	outdated T
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen duv
	DEFAULT_BUTTON_OFFSET ac
	DEFAULT_BUTTON_WIDTH ab
	EXPIRED_ICON_LOCATION R
	EXPIRES_SOON_ICON_LOCATION S
	LOGGER a
	MINIGAME_PREFIX V
	OFF_ICON_LOCATION c
	ON_ICON_LOCATION b
	SERVER_CLOSED_TOOLTIP aa
	SERVER_EXPIRED_TOOLTIP W
	SERVER_EXPIRING_IN_DAY_TOOLTIP Y
	SERVER_EXPIRING_SOON_TOOLTIP X
	SERVER_OPEN_TOOLTIP Z
	TITLE U
	WORLD_LIST_TITLE T
	animTick ar
	backupButton an
	clicks as
	lastScreen ae
	leftX ah
	optionsButton am
	playersButton aj
	resetWorldButton ao
	rightX ai
	serverData af
	serverId ag
	settingsButton ak
	slotButtonList at
	stateChanged aq
	subscriptionButton al
	switchMinigameButton ap
	toolTip ad
	addSlotButton (I)Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton; a
	backButtonClicked ()V v
	centerButton (II)I a
	closeTheWorld (Lnet/minecraft/client/gui/screens/Screen;)V a
	disableButtons ()V w
	drawClose (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V f
	drawExpired (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawExpiring (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	drawOpen (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawServerStatus (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	fetchServerData (J)V a
	frame (I)I c
	getNewScreen ()Lcom/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen; f
	hide (Lnet/minecraft/client/gui/components/Button;)V a
	hideMinigameButtons ()V A
	hideRegularButtons ()V z
	init ()V b
	isMinigame ()Z y
	joinRealm (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	keyPressed (III)Z a
	leftButton (I)I b
	openTheWorld (ZLnet/minecraft/client/gui/screens/Screen;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	saveSettings (Ljava/lang/String;Ljava/lang/String;)V a
	saveSlotSettings (Lcom/mojang/realmsclient/dto/RealmsWorldOptions;)V a
	show (Lnet/minecraft/client/gui/components/Button;)V b
	stateChanged ()V c
	switchToEmptySlot (ILcom/mojang/realmsclient/dto/RealmsServer;)V b
	switchToFullSlot (ILcom/mojang/realmsclient/dto/RealmsServer;)V a
	switchToMinigame ()V x
	templateSelectionCallback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsConfirmScreen duw
	callback a
	title1 b
	title2 c
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen dux
	DESCRIPTION_LABEL b
	NAME_LABEL a
	createButton U
	descriptionBox T
	lastScreen R
	nameBox S
	server c
	charTyped (CI)Z a
	createWorld ()V v
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
	valid ()Z w
com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen duy
	DOTS ai
	DOWNLOAD_LOCK b
	LOGGER a
	animTick ah
	bytesPersSecond ag
	callback al
	cancelButton U
	cancelled aa
	checked ak
	dotIndex aj
	downloadStatus W
	downloadTitle S
	errorMessage X
	extracting ad
	finished ac
	lastScreen c
	narrationRateLimiter T
	previousTimeSnapshot af
	previousWrittenBytes ae
	progress Z
	showDots ab
	status Y
	worldDownload R
	worldName V
	backButtonClicked ()V x
	checkDownloadSize ()V v
	createProgressNarrationMessage ()Lnet/minecraft/network/chat/Component; w
	downloadCancelled ()V z
	downloadSave ()V y
	drawDots (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawDownloadSpeed (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	drawDownloadSpeed0 (Lcom/mojang/blaze3d/vertex/PoseStack;J)V a
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	getContentLength (Ljava/lang/String;)J b
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus duy$a
	bytesWritten a
	totalBytes b
com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen duz
	line1 b
	line2 c
	nextScreen a
	errorMessage (Lcom/mojang/realmsclient/exception/RealmsServiceException;)V a
	errorMessage (Lnet/minecraft/network/chat/Component;)V a
	errorMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsInviteScreen dva
	LOGGER a
	NAME_LABEL b
	NO_SUCH_PLAYER_ERROR_TEXT c
	configureScreen T
	errorMsg V
	lastScreen U
	profileName R
	serverData S
	init ()V b
	keyPressed (III)Z a
	onInvite ()V v
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	showError (Lnet/minecraft/network/chat/Component;)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen dvb
	callback a
	line2 c
	line3 R
	type b
	yesNoQuestion S
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type dvb$a
	$VALUES e
	Info b
	Warning a
	colorCode c
	text d
	$values ()[Lcom/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type; a
com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen dvc
	LOGGER c
	REPEATED_NARRATOR b
	SYMBOLS a
	aborted U
	animTicks V
	buttonLength X
	cancelOrBackButton Y
	errorMessage T
	lastScreen R
	task W
	title S
	aborted ()Z c
	cancelOrBackButtonClicked ()V v
	error (Lnet/minecraft/network/chat/Component;)V a
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V b
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen dvd
	INVITE_ICON_LOCATION a
	NEWS_ICON_LOCATION c
	REALMS_DATA_FETCHER R
	TRIAL_ICON_LOCATION b
	checkedMcoAvailability T
	hasUnreadNews W
	numberOfPendingInvites S
	trialAvailable U
	validClient V
	checkIfMcoEnabled ()V x
	drawIcons (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	getRealmsNotificationsEnabled ()Z v
	inTitleScreen ()Z w
	init ()V b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen dve
	MESSAGE a
	messageLines c
	nextScreen b
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen dvf
	ACCEPT_ICON_LOCATION b
	ACCEPT_INVITE_TOOLTIP S
	LOGGER a
	NO_PENDING_INVITES_TEXT R
	REJECT_ICON_LOCATION c
	REJECT_INVITE_TOOLTIP T
	acceptButton Z
	lastScreen U
	loaded W
	pendingInvitationSelectionList X
	rejectButton aa
	selectedInvite Y
	toolTip V
	accept (I)V c
	init ()V b
	keyPressed (III)Z a
	reject (I)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	shouldAcceptAndRejectButtonBeVisible (I)Z k
	updateButtonStates ()V v
	updateList (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry dvf$a
	TEXT_LEFT b
	pendingInvite c
	rowButtons d
	getNarration ()Lnet/minecraft/network/chat/Component; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderPendingInvitationItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/PendingInvite;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$AcceptRowButton dvf$a$a
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	onClick (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$RejectRowButton dvf$a$b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	onClick (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList dvf$b
	getMaxPosition ()I b
	getRowWidth ()I c
	isFocused ()Z a
	removeAtIndex (I)V b
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V c
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen dvg
	CROSS_ICON_LOCATION R
	INVITED_LABEL W
	LOGGER a
	NORMAL_USER_TOOLTIP T
	OPTIONS_BACKGROUND S
	OP_ICON_LOCATION b
	OP_TOOLTIP U
	REMOVE_ENTRY_TOOLTIP V
	USER_ICON_LOCATION c
	column1X ab
	column2X ad
	columnWidth ac
	hoveredUserAction ak
	invitedObjectSelectionList aa
	lastScreen Y
	opdeopButton af
	player ai
	removeButton ae
	selectedInvited ah
	selectedInvitedIndex ag
	serverData Z
	stateChanged aj
	toolTip X
	backButtonClicked ()V w
	deleteFromInvitedList (I)V o
	deop (I)V m
	drawNormal (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawOpped (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawRemoveIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	init ()V b
	keyPressed (III)Z a
	op (I)V l
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	shouldRemoveAndOpdeopButtonBeVisible (I)Z k
	uninvite (I)V n
	updateButtonStates ()V v
	updateOps (Lcom/mojang/realmsclient/dto/Ops;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry dvg$a
	playerInfo b
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderInvitedItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/PlayerInfo;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList dvg$b
	addEntry (Lcom/mojang/realmsclient/dto/PlayerInfo;)V a
	getMaxPosition ()I b
	getRowWidth ()I c
	getScrollbarPosition ()I d
	isFocused ()Z a
	itemClicked (IIDDI)V a
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V b
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$UserAction dvg$c
	$VALUES d
	NONE c
	REMOVE b
	TOGGLE_OP a
	$values ()[Lcom/mojang/realmsclient/gui/screens/RealmsPlayerScreen$UserAction; a
com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen dvh
	SEED_LABEL a
	buttonTitle T
	callback b
	generateStructures S
	levelType R
	seedEdit c
	init ()V b
	onClose ()V ag_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen dvi
	ADVENTURE_MAP_LOCATION X
	EXPERIENCE_LOCATION aa
	INSPIRATION_LOCATION ab
	LOGGER b
	NEW_WORLD_LOCATION Z
	SLOT_FRAME_LOCATION V
	SURVIVAL_SPAWN_LOCATION Y
	UPLOAD_LOCATION W
	adventuremaps ad
	buttonTitle T
	callback ai
	experiences ae
	inspirations af
	lastScreen c
	resetTitle ag
	resetWorldRunnable ah
	serverData R
	slot a
	subtitle S
	subtitleColor U
	templates ac
	drawFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;ZZ)V a
	frame (I)I b
	generationSelectionCallback (Lcom/mojang/realmsclient/util/WorldGenerationInfo;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resetWorld (Ljava/lang/Runnable;)V b
	setResetTitle (Lnet/minecraft/network/chat/Component;)V a
	setSlot (I)V a
	startTask (Lcom/mojang/realmsclient/util/task/LongRunningTask;)V a
	switchSlot (Ljava/lang/Runnable;)V a
	templateSelectionCallback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton dvi$a
	image b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen dvj
	CHEATS_TEXT R
	DATE_FORMAT S
	HARDCORE_TEXT c
	LOGGER a
	WORLD_TEXT b
	callback aa
	lastScreen T
	levelList X
	selectedWorld Y
	slotId V
	uploadButton W
	worldId U
	worldSelectionList Z
	formatLastPlayed (Lnet/minecraft/world/level/storage/LevelSummary;)Ljava/lang/String; b
	gameModeName (Lnet/minecraft/world/level/storage/LevelSummary;)Lnet/minecraft/network/chat/Component; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	keyPressed (III)Z a
	loadLevelList ()V v
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	upload ()V w
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry dvj$a
	id d
	info e
	levelSummary b
	name c
	getNarration ()Lnet/minecraft/network/chat/Component; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderItem (Lcom/mojang/blaze3d/vertex/PoseStack;III)V a
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList dvj$b
	addEntry (Lnet/minecraft/world/level/storage/LevelSummary;)V a
	getMaxPosition ()I b
	isFocused ()Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen dvk
	LINK_ICON b
	LOGGER a
	PUBLISHER_LINK_TOOLTIP S
	SLOT_FRAME_LOCATION R
	TRAILER_ICON c
	TRAILER_LINK_TOOLTIP T
	callback U
	clicks ad
	currentLink ab
	displayWarning ag
	hoverWarning ah
	noTemplatesMessage ai
	publisherButton Z
	selectButton X
	selectedTemplate W
	toolTip aa
	trailerButton Y
	warning ae
	warningURL af
	worldTemplateObjectSelectionList V
	worldType ac
	fetchTemplates (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;Lcom/mojang/realmsclient/client/RealmsClient;)Lcom/mojang/datafixers/util/Either; a
	fetchTemplatesAsync (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	getSelectedTemplate ()Lcom/mojang/realmsclient/dto/WorldTemplate; y
	hasValidTemplate ()Z B
	init ()V b
	mouseClicked (DDI)Z a
	onClose ()V ag_
	onPublish ()V D
	onTrailer ()V C
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	renderMultilineMessage (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/util/List;)V a
	selectTemplate ()V A
	setWarning ([Lnet/minecraft/network/chat/Component;)V a
	shouldPublisherBeVisible ()Z x
	shouldSelectButtonBeActive ()Z w
	shouldTrailerBeVisible ()Z z
	tick ()V d
	updateButtonStates ()V v
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry dvk$a
	template b
	drawIcons (Lcom/mojang/blaze3d/vertex/PoseStack;IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V a
	drawImage (Lcom/mojang/blaze3d/vertex/PoseStack;IIIILcom/mojang/realmsclient/dto/WorldTemplate;)V a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderWorldTemplateItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/WorldTemplate;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList dvk$b
	addEntry (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	get (I)Lcom/mojang/realmsclient/dto/WorldTemplate; b
	getMaxPosition ()I b
	getRowWidth ()I c
	getTemplates ()Ljava/util/List; f
	isEmpty ()Z e
	isFocused ()Z a
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsSettingsScreen dvl
	COMPONENT_WIDTH a
	DESCRIPTION_LABEL c
	NAME_LABEL b
	configureWorldScreen R
	descEdit U
	doneButton T
	nameEdit V
	serverData S
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	save ()V f
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen dvm
	DEFAULT_DIFFICULTY R
	DEFAULT_GAME_MODE S
	DIFFICULTIES a
	GAME_MODES b
	NAME_LABEL T
	SPAWN_PROTECTION_TEXT U
	activeSlot aa
	column1X W
	columnWidth X
	commandBlocks ai
	difficulty ab
	forceGameMode aj
	gameMode ac
	nameEdit V
	options Y
	parent c
	pvp ad
	spawnAnimals af
	spawnMonsters ag
	spawnNPCs ae
	spawnProtection ah
	spawnProtectionButton ak
	worldType Z
	findByIndex (Ljava/util/List;II)Ljava/lang/Object; a
	findIndex (Ljava/util/List;Ljava/lang/Object;I)I a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	getSlotName ()Ljava/lang/String; v
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	saveSettings ()V w
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider dvm$a
	maxValue d
	minValue c
	applyValue ()V a
	onClick (DD)V a
	onRelease (DD)V b
	updateMessage ()V b
com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen dvn
	DAYS_LEFT_LABEL S
	DAYS_SUFFIX Y
	DAY_SUFFIX X
	LOGGER a
	MONTHS_SUFFIX W
	MONTH_SUFFIX V
	PURCHASE_LINK ag
	SUBSCRIPTION_EXPIRED_TEXT T
	SUBSCRIPTION_LESS_THAN_A_DAY_TEXT U
	SUBSCRIPTION_START_LABEL c
	SUBSCRIPTION_TITLE b
	TIME_LEFT_LABEL R
	UNKNOWN Z
	daysLeft ad
	lastScreen aa
	mainScreen ac
	serverData ab
	startDate ae
	type af
	daysLeftPresentation (I)Lnet/minecraft/network/chat/Component; a
	deleteRealm (Z)V c
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	getSubscription (J)V a
	init ()V b
	keyPressed (III)Z a
	localPresentation (J)Lnet/minecraft/network/chat/Component; b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsTermsScreen dvo
	LOGGER a
	TERMS_LINK_TEXT R
	TERMS_STATIC_TEXT c
	TITLE b
	lastScreen S
	mainScreen T
	onLink V
	realmsServer U
	realmsToSUrl W
	agreedToTos ()V v
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsUploadScreen dvp
	DOTS c
	LOGGER a
	UPLOAD_LOCK b
	VERIFYING_TEXT R
	backButton af
	bytesPersSecond ak
	callback al
	cancelButton ag
	cancelled ab
	errorMessage Y
	lastScreen S
	narrationRateLimiter X
	previousTimeSnapshot aj
	previousWrittenBytes ai
	progress aa
	selectedLevel T
	showDots ad
	slotId V
	status Z
	tickCount ah
	uploadFinished ac
	uploadStarted ae
	uploadStatus W
	worldId U
	addFileToTarGz (Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V a
	createProgressNarrationMessage ()Lnet/minecraft/network/chat/Component; x
	drawDots (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	drawUploadSpeed (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	drawUploadSpeed0 (Lcom/mojang/blaze3d/vertex/PoseStack;J)V a
	init ()V b
	keyPressed (III)Z a
	onBack ()V v
	onCancel ()V w
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setErrorMessage ([Lnet/minecraft/network/chat/Component;)V a
	tarGzipArchive (Ljava/io/File;)Ljava/io/File; b
	tick ()V d
	upload ()V y
	uploadCancelled ()V z
	verify (Ljava/io/File;)Z a
com/mojang/realmsclient/gui/screens/UploadResult dvq
	errorMessage b
	statusCode a
com/mojang/realmsclient/gui/screens/UploadResult$Builder dvq$a
	errorMessage b
	statusCode a
	build ()Lcom/mojang/realmsclient/gui/screens/UploadResult; a
	withErrorMessage (Ljava/lang/String;)Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder; a
	withStatusCode (I)Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder; a
com/mojang/realmsclient/gui/task/IntervalBasedStartupDelay dvs
	clock b
	interval a
	lastStartedTimestamp c
	getNextDelayMs ()J b
	markExecutionStart ()V a
com/mojang/realmsclient/gui/task/NoStartupDelay dvt
	getNextDelayMs ()J b
	markExecutionStart ()V a
com/mojang/realmsclient/gui/task/RepeatableTask dvu
	interval c
	isActive a
	restartDelayCalculator b
	runnable d
	schedule (Ljava/util/concurrent/ScheduledExecutorService;)Ljava/util/concurrent/ScheduledFuture; a
	withImmediateRestart (Ljava/lang/Runnable;Ljava/time/Duration;Ljava/util/function/BooleanSupplier;)Lcom/mojang/realmsclient/gui/task/RepeatableTask; b
	withRestartDelayAccountingForInterval (Ljava/lang/Runnable;Ljava/time/Duration;Ljava/util/function/BooleanSupplier;)Lcom/mojang/realmsclient/gui/task/RepeatableTask; a
com/mojang/realmsclient/gui/task/RestartDelayCalculator dvv
	getNextDelayMs ()J b
	markExecutionStart ()V a
com/mojang/realmsclient/util/JsonUtils dvy
	getBooleanOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z a
	getDateOr (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date; a
	getIntOr (Ljava/lang/String;Lcom/google/gson/JsonObject;I)I a
	getLongOr (Ljava/lang/String;Lcom/google/gson/JsonObject;J)J a
	getStringOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/util/LevelType dvz
	$VALUES g
	AMPLIFIED d
	DEFAULT a
	FLAT b
	LARGE_BIOMES c
	index e
	name f
	$values ()[Lcom/mojang/realmsclient/util/LevelType; c
	getDtoIndex ()I b
	getName ()Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/util/RealmsPersistence dwa
	FILE_NAME a
	GSON b
	getPathToData ()Ljava/io/File; c
	read ()Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; a
	readFile ()Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; b
	save (Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData;)V a
	writeFile (Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData;)V b
com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData dwa$a
	hasUnreadNews b
	newsLink a
com/mojang/realmsclient/util/RealmsTextureManager dwb
	FETCHED_SKINS c
	LOGGER d
	SKIN_FETCH_STATUS b
	TEMPLATE_ICON_LOCATION e
	TEXTURES a
	bindDefaultFace (Ljava/util/UUID;)V a
	bindFace (Ljava/lang/String;)V a
	bindWorldTemplate (Ljava/lang/String;Ljava/lang/String;)V a
	getTextureId (Ljava/lang/String;Ljava/lang/String;)I b
	withBoundFace (Ljava/lang/String;Ljava/lang/Runnable;)V a
com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture dwb$a
	image a
	textureId b
com/mojang/realmsclient/util/RealmsTextureManager$TextureData dwb$b
	MISSING d
	data c
	height b
	width a
	load (Ljava/lang/String;)Lcom/mojang/realmsclient/util/RealmsTextureManager$TextureData; a
com/mojang/realmsclient/util/RealmsUtil dwc
	AUTHENTICATION_SERVICE b
	DAYS f
	HOURS e
	MINUTES d
	SESSION_SERVICE c
	gameProfileCache a
	convertToAgePresentation (J)Ljava/lang/String; a
	convertToAgePresentationFromInstant (Ljava/util/Date;)Ljava/lang/String; a
	getTextures (Ljava/lang/String;)Ljava/util/Map; b
	uuidToName (Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/util/SkinProcessor dwd
	height c
	pixels a
	width b
	doLegacyTransparencyHack (IIII)V a
	process (Ljava/awt/image/BufferedImage;)Ljava/awt/image/BufferedImage; a
	setNoAlpha (IIII)V b
com/mojang/realmsclient/util/TextRenderingUtils dwe
	decompose (Ljava/lang/String;Ljava/util/List;)Ljava/util/List; a
	decompose (Ljava/lang/String;[Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment;)Ljava/util/List; a
	insertLinks (Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	lineBreak (Ljava/lang/String;)Ljava/util/List; a
	split (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; a
com/mojang/realmsclient/util/TextRenderingUtils$Line dwe$a
	segments a
com/mojang/realmsclient/util/TextRenderingUtils$LineSegment dwe$b
	fullText a
	linkTitle b
	linkUrl c
	getLinkUrl ()Ljava/lang/String; c
	isLink ()Z b
	link (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment; a
	renderedText ()Ljava/lang/String; a
	text (Ljava/lang/String;)Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment; a
com/mojang/realmsclient/util/UploadTokenCache dwf
	TOKEN_CACHE a
	get (J)Ljava/lang/String; a
	invalidate (J)V b
	put (JLjava/lang/String;)V a
com/mojang/realmsclient/util/WorldGenerationInfo dwg
	generateStructures c
	levelType b
	seed a
	getLevelType ()Lcom/mojang/realmsclient/util/LevelType; b
	getSeed ()Ljava/lang/String; a
	shouldGenerateStructures ()Z c
com/mojang/realmsclient/util/task/CloseServerTask dwi
	configureScreen e
	serverData d
com/mojang/realmsclient/util/task/ConnectTask dwj
	address f
	realmsConnect d
	server e
	abortTask ()V a
	tick ()V b
com/mojang/realmsclient/util/task/DownloadTask dwk
	downloadName g
	lastScreen f
	slot e
	worldId d
com/mojang/realmsclient/util/task/GetServerDetailsTask dwl
	connectLock g
	lastScreen e
	mainScreen f
	server d
	connectScreen (Lcom/mojang/realmsclient/dto/RealmsServerAddress;)Lcom/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen; a
	fetchServerAddress ()Lcom/mojang/realmsclient/dto/RealmsServerAddress; e
	resourcePackDownloadConfirmationScreen (Lcom/mojang/realmsclient/dto/RealmsServerAddress;Ljava/util/function/Function;)Lcom/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen; a
	scheduleResourcePackDownload (Lcom/mojang/realmsclient/dto/RealmsServerAddress;)Ljava/util/concurrent/CompletableFuture; b
com/mojang/realmsclient/util/task/LongRunningTask dwm
	LOGGER b
	NUMBER_OF_RETRIES a
	longRunningMcoTaskScreen c
	abortTask ()V a
	aborted ()Z c
	error (Lnet/minecraft/network/chat/Component;)V a
	init ()V d
	pause (J)V a
	setScreen (Lcom/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen;)V a
	setScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V b
	tick ()V b
com/mojang/realmsclient/util/task/OpenServerTask dwn
	join f
	mainScreen g
	minecraft h
	returnScreen e
	serverData d
com/mojang/realmsclient/util/task/ResettingGeneratedWorldTask dwo
	generationInfo d
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/ResettingTemplateWorldTask dwp
	template d
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/ResettingWorldTask dwq
	callback f
	serverId d
	title e
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/RestoreTask dwr
	backup d
	lastScreen f
	worldId e
com/mojang/realmsclient/util/task/SwitchMinigameTask dws
	lastScreen f
	worldId d
	worldTemplate e
com/mojang/realmsclient/util/task/SwitchSlotTask dwt
	callback f
	slot e
	worldId d
com/mojang/realmsclient/util/task/WorldCreationTask dwu
	lastScreen g
	motd e
	name d
	worldId f
net/minecraft/BlockUtil$FoundRectangle net/minecraft/BlockUtil$Rectangle
	axis1Size b
	axis2Size c
	minCorner a
net/minecraft/ChatFormatting net/minecraft/EnumChatFormat
	$VALUES F
	AQUA l
	BLACK a
	BLUE j
	BOLD r
	DARK_AQUA d
	DARK_BLUE b
	DARK_GRAY i
	DARK_GREEN c
	DARK_PURPLE f
	DARK_RED e
	FORMATTING_BY_NAME x
	GOLD g
	GRAY h
	GREEN k
	ITALIC u
	LIGHT_PURPLE n
	OBFUSCATED q
	PREFIX_CODE w
	RED m
	RESET v
	STRIKETHROUGH s
	STRIP_FORMATTING_PATTERN y
	UNDERLINE t
	WHITE p
	YELLOW o
	code A
	color E
	id D
	isFormat B
	name z
	toString C
	$values ()[Lnet/minecraft/ChatFormatting; g
	cleanName (Ljava/lang/String;)Ljava/lang/String; c
	getByCode (C)Lnet/minecraft/ChatFormatting; a
	getById (I)Lnet/minecraft/ChatFormatting; a
	getByName (Ljava/lang/String;)Lnet/minecraft/ChatFormatting; b
	getChar ()C a
	getColor ()Ljava/lang/Integer; e
	getId ()I b
	getName ()Ljava/lang/String; f
	getNames (ZZ)Ljava/util/Collection; a
	isColor ()Z d
	isFormat ()Z c
	stripFormatting (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/CrashReportCategory net/minecraft/CrashReportSystemDetails
	entries b
	stackTrace c
	title a
	fillInStackTrace (I)I a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;DDD)Ljava/lang/String; a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;III)Ljava/lang/String; a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	getDetails (Ljava/lang/StringBuilder;)V a
	getStacktrace ()[Ljava/lang/StackTraceElement; a
	populateBlockDetails (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setDetail (Ljava/lang/String;Ljava/lang/Object;)Lnet/minecraft/CrashReportCategory; a
	setDetail (Ljava/lang/String;Lnet/minecraft/CrashReportDetail;)Lnet/minecraft/CrashReportCategory; a
	setDetailError (Ljava/lang/String;Ljava/lang/Throwable;)V a
	trimStacktrace (I)V b
	validateStackTrace (Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z a
net/minecraft/CrashReportCategory$Entry net/minecraft/CrashReportSystemDetails$CrashReportDetail
	key a
	value b
	getKey ()Ljava/lang/String; a
	getValue ()Ljava/lang/String; b
net/minecraft/CrashReportDetail net/minecraft/CrashReportCallable
net/minecraft/DefaultUncaughtExceptionHandlerWithName net/minecraft/ThreadNamedUncaughtExceptionHandler
	logger a
net/minecraft/DetectedVersion net/minecraft/MinecraftVersion
	BUILT_IN a
	LOGGER b
	buildTime j
	dataPackVersion i
	id c
	name d
	protocolVersion g
	releaseTarget k
	resourcePackVersion h
	stable e
	worldVersion f
	getDataVersion ()Lnet/minecraft/world/level/storage/DataVersion; b
	tryDetectVersion ()Lnet/minecraft/WorldVersion; a
net/minecraft/FieldsAreNonnullByDefault w
net/minecraft/FileUtil net/minecraft/FileUtils
	COPY_COUNTER_PATTERN a
	MAX_FILE_NAME b
	RESERVED_WINDOWS_FILENAMES c
	createPathToResource (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; b
	findAvailableName (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getFullResourcePath (Ljava/lang/String;)Ljava/lang/String; a
	isPathNormalized (Ljava/nio/file/Path;)Z a
	isPathPortable (Ljava/nio/file/Path;)Z b
	normalizeResourcePath (Ljava/lang/String;)Ljava/lang/String; b
net/minecraft/MethodsReturnNonnullByDefault y
net/minecraft/ResourceLocationException net/minecraft/ResourceKeyInvalidException
net/minecraft/Util net/minecraft/SystemUtils
	BACKGROUND_EXECUTOR i
	BOOTSTRAP_EXECUTOR h
	DEFAULT_MAX_THREADS e
	IO_POOL j
	LOGGER d
	MAX_THREADS_SYSTEM_PROPERTY f
	NIL_UUID b
	WORKER_COUNT g
	ZIP_FILE_SYSTEM_PROVIDER c
	thePauser k
	timeSource a
	backgroundExecutor ()Ljava/util/concurrent/ExecutorService; f
	bootstrapExecutor ()Ljava/util/concurrent/ExecutorService; e
	copyBetweenDirs (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V b
	createDeleter (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; a
	createFileCreatedCheck (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; c
	createFileDeletedCheck (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; b
	createRenamer (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; a
	describeError (Ljava/lang/Throwable;)Ljava/lang/String; d
	doFetchChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; b
	doPause (Ljava/lang/String;)V c
	executeInSequence ([Ljava/util/function/BooleanSupplier;)Z a
	failedFuture (Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture; a
	fetchChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; a
	findNextInIterable (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; a
	findPreviousInIterable (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; b
	fixedSize (Ljava/util/List;I)Lcom/mojang/serialization/DataResult; a
	fixedSize (Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult; a
	getEpochMillis ()J d
	getMaxThreads ()I m
	getMillis ()J b
	getNanos ()J c
	getPlatform ()Lnet/minecraft/Util$OS; i
	getPropertyName (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Object;)Ljava/lang/String; a
	getRandom (Ljava/util/List;Ljava/util/Random;)Ljava/lang/Object; a
	getRandom ([ILjava/util/Random;)I a
	getRandom ([Ljava/lang/Object;Ljava/util/Random;)Ljava/lang/Object; a
	getVmArguments ()Ljava/util/stream/Stream; j
	identityStrategy ()Lit/unimi/dsi/fastutil/Hash$Strategy; k
	ifElse (Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional; a
	ioPool ()Ljava/util/concurrent/ExecutorService; g
	lastOf (Ljava/util/List;)Ljava/lang/Object; a
	logAndPauseIfInIde (Ljava/lang/String;)V a
	make (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; a
	make (Ljava/util/function/Supplier;)Ljava/lang/Object; a
	makeDescriptionId (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
	makeExecutor (Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; b
	makeIoExecutor ()Ljava/util/concurrent/ExecutorService; n
	memoize (Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; a
	memoize (Ljava/util/function/Function;)Ljava/util/function/Function; a
	name (Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable; a
	offsetByCodepoints (Ljava/lang/String;II)I a
	onThreadException (Ljava/lang/Thread;Ljava/lang/Throwable;)V a
	pauseInIde (Ljava/lang/Throwable;)Ljava/lang/Throwable; c
	prefix (Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; a
	runWithRetries (ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z a
	safeReplaceFile (Ljava/io/File;Ljava/io/File;Ljava/io/File;)V a
	safeReplaceFile (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	sanitizeName (Ljava/lang/String;Lnet/minecraft/CharPredicate;)Ljava/lang/String; a
	sequence (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; b
	sequenceFailFast (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; c
	setPause (Ljava/util/function/Consumer;)V a
	shutdownExecutor (Ljava/util/concurrent/ExecutorService;)V a
	shutdownExecutors ()V h
	startTimerHackThread ()V l
	throwAsRuntime (Ljava/lang/Throwable;)V b
	toMap ()Ljava/util/stream/Collector; a
	toStream (Ljava/util/Optional;)Ljava/util/stream/Stream; a
	wrapThreadWithTaskName (Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Runnable; a
	wrapThreadWithTaskName (Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/function/Supplier; a
net/minecraft/Util$IdentityStrategy net/minecraft/SystemUtils$IdentityHashingStrategy
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/Util$IdentityStrategy; a
net/minecraft/Util$OS net/minecraft/SystemUtils$OS
	$VALUES g
	LINUX a
	OSX d
	SOLARIS b
	UNKNOWN e
	WINDOWS c
	telemetryName f
	$values ()[Lnet/minecraft/Util$OS; b
	getOpenUrlArguments (Ljava/net/URL;)[Ljava/lang/String; b
	openFile (Ljava/io/File;)V a
	openUri (Ljava/lang/String;)V a
	openUri (Ljava/net/URI;)V a
	openUrl (Ljava/net/URL;)V a
	telemetryName ()Ljava/lang/String; a
net/minecraft/advancements/Advancement$Builder net/minecraft/advancements/Advancement$SerializedAdvancement
	criteria e
	display c
	parent b
	parentId a
	requirements f
	requirementsStrategy g
	rewards d
	addCriterion (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/advancements/Advancement$Builder; a
	addCriterion (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/advancements/Advancement$Builder; a
	advancement ()Lnet/minecraft/advancements/Advancement$Builder; a
	build (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; b
	canBuild (Ljava/util/function/Function;)Z a
	display (Lnet/minecraft/advancements/DisplayInfo;)Lnet/minecraft/advancements/Advancement$Builder; a
	display (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/FrameType;ZZZ)Lnet/minecraft/advancements/Advancement$Builder; a
	display (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/FrameType;ZZZ)Lnet/minecraft/advancements/Advancement$Builder; a
	fromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/Advancement$Builder; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/Advancement$Builder; b
	getCriteria ()Ljava/util/Map; c
	parent (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/Advancement$Builder; a
	parent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement$Builder; a
	requirements (Lnet/minecraft/advancements/RequirementsStrategy;)Lnet/minecraft/advancements/Advancement$Builder; a
	requirements ([[Ljava/lang/String;)Lnet/minecraft/advancements/Advancement$Builder; a
	rewards (Lnet/minecraft/advancements/AdvancementRewards$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
	rewards (Lnet/minecraft/advancements/AdvancementRewards;)Lnet/minecraft/advancements/Advancement$Builder; a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; a
	serializeToJson ()Lcom/google/gson/JsonObject; b
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/AdvancementList net/minecraft/advancements/Advancements
	LOGGER a
	advancements b
	listener e
	roots c
	tasks d
	add (Ljava/util/Map;)V a
	clear ()V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; a
	getAllAdvancements ()Ljava/util/Collection; c
	getRoots ()Ljava/lang/Iterable; b
	remove (Ljava/util/Set;)V a
	remove (Lnet/minecraft/advancements/Advancement;)V a
	setListener (Lnet/minecraft/advancements/AdvancementList$Listener;)V a
net/minecraft/advancements/AdvancementList$Listener ag$a
	onAddAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V a
	onAddAdvancementTask (Lnet/minecraft/advancements/Advancement;)V c
	onAdvancementsCleared ()V a
	onRemoveAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V b
	onRemoveAdvancementTask (Lnet/minecraft/advancements/Advancement;)V d
net/minecraft/advancements/AdvancementProgress$Serializer ah$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/advancements/AdvancementProgress; a
	serialize (Lnet/minecraft/advancements/AdvancementProgress;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/advancements/AdvancementRewards$Builder ai$a
	experience a
	function d
	loot b
	recipes c
	addExperience (I)Lnet/minecraft/advancements/AdvancementRewards$Builder; b
	addLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; b
	addRecipe (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; d
	build ()Lnet/minecraft/advancements/AdvancementRewards; a
	experience (I)Lnet/minecraft/advancements/AdvancementRewards$Builder; a
	function (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; e
	loot (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; a
	recipe (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; c
	runs (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; f
net/minecraft/advancements/CriteriaTriggers net/minecraft/advancements/CriterionTriggers
	BAD_OMEN I
	BEE_NEST_DESTROYED K
	BRED_ANIMALS o
	BREWED_POTION k
	CHANGED_DIMENSION v
	CHANNELED_LIGHTNING E
	CONSTRUCT_BEACON l
	CONSUME_ITEM z
	CRITERIA V
	CURED_ZOMBIE_VILLAGER r
	EFFECTS_CHANGED A
	ENCHANTED_ITEM i
	ENTER_BLOCK d
	ENTITY_HURT_PLAYER h
	ENTITY_KILLED_PLAYER c
	FALL_FROM_HEIGHT T
	FILLED_BUCKET j
	FISHING_ROD_HOOKED D
	GENERATE_LOOT N
	HONEY_BLOCK_SLIDE J
	IMPOSSIBLE a
	INVENTORY_CHANGED e
	ITEM_DURABILITY_CHANGED t
	ITEM_PICKED_UP_BY_ENTITY O
	ITEM_USED_ON_BLOCK M
	KILLED_BY_CROSSBOW G
	LEVITATION u
	LIGHTNING_STRIKE R
	LOCATION p
	NETHER_TRAVEL C
	PLACED_BLOCK y
	PLAYER_HURT_ENTITY g
	PLAYER_INTERACTED_WITH_ENTITY P
	PLAYER_KILLED_ENTITY b
	RAID_WIN H
	RECIPE_UNLOCKED f
	RIDE_ENTITY_IN_LAVA_TRIGGER U
	SHOT_CROSSBOW F
	SLEPT_IN_BED q
	START_RIDING_TRIGGER Q
	SUMMONED_ENTITY n
	TAME_ANIMAL x
	TARGET_BLOCK_HIT L
	TICK w
	TRADE s
	USED_ENDER_EYE m
	USED_TOTEM B
	USING_ITEM S
	all ()Ljava/lang/Iterable; a
	getCriterion (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/CriterionTrigger; a
	register (Lnet/minecraft/advancements/CriterionTrigger;)Lnet/minecraft/advancements/CriterionTrigger; a
net/minecraft/advancements/CriterionTrigger$Listener am$a
	advancement b
	criterion c
	trigger a
	getTriggerInstance ()Lnet/minecraft/advancements/CriterionTriggerInstance; a
	run (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/CriterionTriggerInstance net/minecraft/advancements/CriterionInstance
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/DisplayInfo net/minecraft/advancements/AdvancementDisplay
	announceChat g
	background d
	description b
	frame e
	hidden h
	icon c
	showToast f
	title a
	x i
	y j
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/DisplayInfo; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/DisplayInfo; b
	getBackground ()Lnet/minecraft/resources/ResourceLocation; d
	getDescription ()Lnet/minecraft/network/chat/Component; b
	getFrame ()Lnet/minecraft/advancements/FrameType; e
	getIcon ()Lnet/minecraft/world/item/ItemStack; c
	getIcon (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; b
	getTitle ()Lnet/minecraft/network/chat/Component; a
	getX ()F f
	getY ()F g
	isHidden ()Z j
	serializeIcon ()Lcom/google/gson/JsonObject; l
	serializeToJson ()Lcom/google/gson/JsonElement; k
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	setLocation (FF)V a
	shouldAnnounceChat ()Z i
	shouldShowToast ()Z h
net/minecraft/advancements/FrameType net/minecraft/advancements/AdvancementFrameType
	$VALUES h
	CHALLENGE b
	GOAL c
	TASK a
	chatColor f
	displayName g
	name d
	texture e
	$values ()[Lnet/minecraft/advancements/FrameType; e
	byName (Ljava/lang/String;)Lnet/minecraft/advancements/FrameType; a
	getChatColor ()Lnet/minecraft/ChatFormatting; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Ljava/lang/String; a
	getTexture ()I b
net/minecraft/advancements/RequirementsStrategy net/minecraft/advancements/AdvancementRequirements
	AND a
	OR b
net/minecraft/advancements/TreeNodePosition net/minecraft/advancements/AdvancementTree
	advancement a
	ancestor f
	change k
	childIndex d
	children e
	mod j
	parent b
	previousSibling c
	shift l
	thread g
	x h
	y i
	addChild (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	apportion (Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	executeShifts ()V b
	finalizePosition ()V e
	firstWalk ()V a
	getAncestor (Lnet/minecraft/advancements/TreeNodePosition;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	moveSubtree (Lnet/minecraft/advancements/TreeNodePosition;F)V a
	nextOrThread ()Lnet/minecraft/advancements/TreeNodePosition; d
	previousOrThread ()Lnet/minecraft/advancements/TreeNodePosition; c
	run (Lnet/minecraft/advancements/Advancement;)V a
	secondWalk (FIF)F a
	thirdWalk (F)V a
net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance net/minecraft/advancements/critereon/CriterionInstanceAbstract
	criterion a
	player b
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	getPlayerPredicate ()Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BeeNestDestroyedTrigger net/minecraft/advancements/critereon/CriterionTriggerBeeNestDestroyed
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance at$a
	block a
	item b
	numBees c
	destroyedBeeNest (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BlockPredicate net/minecraft/advancements/critereon/CriterionConditionBlock
	ANY a
	blocks c
	nbt e
	properties d
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/BlockPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/BlockPredicate$Builder au$a
	blocks a
	nbt d
	properties c
	tag b
	block ()Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/BlockPredicate; b
	hasNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of (Ljava/lang/Iterable;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
net/minecraft/advancements/critereon/BredAnimalsTrigger net/minecraft/advancements/critereon/CriterionTriggerBredAnimals
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/AgeableMob;)V a
net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance av$a
	child c
	parent a
	partner b
	bredAnimals ()Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; c
	bredAnimals (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	bredAnimals (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BrewedPotionTrigger net/minecraft/advancements/critereon/CriterionTriggerBrewedPotion
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/alchemy/Potion;)V a
net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance aw$a
	potion a
	brewedPotion ()Lnet/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/item/alchemy/Potion;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ChangeDimensionTrigger net/minecraft/advancements/critereon/CriterionTriggerChangedDimension
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V a
net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance ax$a
	from a
	to b
	changedDimension ()Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; c
	changedDimension (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	changedDimensionFrom (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; b
	changedDimensionTo (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	matches (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Z b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ChanneledLightningTrigger net/minecraft/advancements/critereon/CriterionTriggerChanneledLightning
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance ay$a
	victims a
	channeledLightning ([Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance; a
	matches (Ljava/util/Collection;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ConstructBeaconTrigger net/minecraft/advancements/critereon/CriterionTriggerConstructBeacon
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;I)V a
net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance az$a
	level a
	constructedBeacon ()Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; c
	constructedBeacon (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; a
	matches (I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ConsumeItemTrigger net/minecraft/advancements/critereon/CriterionTriggerConsumeItem
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance ba$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	usedItem ()Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; c
	usedItem (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
	usedItem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/CuredZombieVillagerTrigger net/minecraft/advancements/critereon/CriterionTriggerCuredZombieVillager
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/monster/Zombie;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance bb$a
	villager b
	zombie a
	curedZombieVillager ()Lnet/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/DamagePredicate net/minecraft/advancements/critereon/CriterionConditionDamage
	ANY a
	blocked e
	dealtDamage b
	sourceEntity d
	takenDamage c
	type f
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DamagePredicate; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/DamagePredicate$Builder bc$a
	blocked d
	dealtDamage a
	sourceEntity c
	takenDamage b
	type e
	blocked (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/DamagePredicate; b
	damageInstance ()Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	dealtDamage (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	sourceEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	takenDamage (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; b
	type (Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	type (Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
net/minecraft/advancements/critereon/DamageSourcePredicate net/minecraft/advancements/critereon/CriterionConditionDamageSource
	ANY a
	bypassesArmor d
	bypassesInvulnerability e
	bypassesMagic f
	directEntity j
	isExplosion c
	isFire g
	isLightning i
	isMagic h
	isProjectile b
	sourceEntity k
	addOptionally (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate; a
	getOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/DamageSourcePredicate$Builder bd$a
	bypassesArmor c
	bypassesInvulnerability d
	bypassesMagic e
	directEntity i
	isExplosion b
	isFire f
	isLightning h
	isMagic g
	isProjectile a
	sourceEntity j
	build ()Lnet/minecraft/advancements/critereon/DamageSourcePredicate; b
	bypassesArmor (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; c
	bypassesInvulnerability (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; d
	bypassesMagic (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; e
	damageType ()Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	direct (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	direct (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	isExplosion (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
	isFire (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; f
	isLightning (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; h
	isMagic (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; g
	isProjectile (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	source (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
	source (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
net/minecraft/advancements/critereon/DeserializationContext net/minecraft/advancements/critereon/LootDeserializationContext
	LOGGER a
	id b
	predicateGson d
	predicateManager c
	deserializeConditions (Lcom/google/gson/JsonArray;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/advancements/critereon/DistancePredicate net/minecraft/advancements/critereon/CriterionConditionDistance
	ANY a
	absolute f
	horizontal e
	x b
	y c
	z d
	absolute (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; c
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DistancePredicate; a
	horizontal (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; a
	matches (DDDDDD)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
	vertical (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; b
net/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance bg$a
	distance b
	startPosition a
	fallFromHeight (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DistancePredicate;Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	rideEntityInLava (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	travelledThroughNether (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/EffectsChangedTrigger net/minecraft/advancements/critereon/CriterionTriggerEffectsChanged
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance bh$a
	effects a
	source b
	gotEffectsFrom (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	hasEffects (Lnet/minecraft/advancements/critereon/MobEffectsPredicate;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EnchantedItemTrigger net/minecraft/advancements/critereon/CriterionTriggerEnchantedItem
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance bi$a
	item a
	levels b
	enchantedItem ()Lnet/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EnchantmentPredicate net/minecraft/advancements/critereon/CriterionConditionEnchantments
	ANY a
	NONE b
	enchantment c
	level d
	containedIn (Ljava/util/Map;)Z a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EnchantmentPredicate; a
	fromJsonArray (Lcom/google/gson/JsonElement;)[Lnet/minecraft/advancements/critereon/EnchantmentPredicate; b
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EnterBlockTrigger net/minecraft/advancements/critereon/CriterionTriggerEnterBlock
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance bk$a
	block a
	state b
	entersBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EntityEquipmentPredicate net/minecraft/advancements/critereon/CriterionConditionEntityEquipment
	ANY a
	CAPTAIN b
	chest d
	feet f
	head c
	legs e
	mainhand g
	offhand h
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder bl$a
	chest b
	feet d
	head a
	legs c
	mainhand e
	offhand f
	build ()Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate; b
	chest (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; b
	equipment ()Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; a
	feet (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; d
	head (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; a
	legs (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; c
	mainhand (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; e
	offhand (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; f
net/minecraft/advancements/critereon/EntityFlagsPredicate net/minecraft/advancements/critereon/CriterionConditionEntityFlags
	ANY a
	isBaby f
	isCrouching c
	isOnFire b
	isSprinting d
	isSwimming e
	addOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate; a
	getOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder bm$a
	isBaby e
	isCrouching b
	isOnFire a
	isSprinting c
	isSwimming d
	build ()Lnet/minecraft/advancements/critereon/EntityFlagsPredicate; b
	flags ()Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; a
	setCrouching (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; b
	setIsBaby (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; e
	setOnFire (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; a
	setSprinting (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; c
	setSwimming (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; d
net/minecraft/advancements/critereon/EntityHurtPlayerTrigger net/minecraft/advancements/critereon/CriterionTriggerEntityHurtPlayer
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V a
net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance bn$a
	damage a
	entityHurtPlayer ()Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; c
	entityHurtPlayer (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	entityHurtPlayer (Lnet/minecraft/advancements/critereon/DamagePredicate;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EntityPredicate net/minecraft/advancements/critereon/CriterionConditionEntity
	ANY a
	catType q
	distanceToPlayer c
	effects f
	entityType b
	equipment i
	fishingHook k
	flags h
	lighthingBolt l
	location d
	nbt g
	passenger n
	player j
	steppingOnLocation e
	targetedEntity o
	team p
	vehicle m
	createContext (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/storage/loot/LootContext; b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityPredicate$Builder bo$a
	catType p
	distanceToPlayer b
	effects e
	entityType a
	equipment h
	fishingHook j
	flags g
	lighthingBolt k
	location c
	nbt f
	passenger m
	player i
	steppingOnLocation d
	targetedEntity n
	team o
	vehicle l
	build ()Lnet/minecraft/advancements/critereon/EntityPredicate; b
	catType (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	distance (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	effects (Lnet/minecraft/advancements/critereon/MobEffectsPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	entity ()Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	entityType (Lnet/minecraft/advancements/critereon/EntityTypePredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	equipment (Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	fishingHook (Lnet/minecraft/advancements/critereon/FishingHookPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	flags (Lnet/minecraft/advancements/critereon/EntityFlagsPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	lighthingBolt (Lnet/minecraft/advancements/critereon/LighthingBoltPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	located (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	nbt (Lnet/minecraft/advancements/critereon/NbtPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	passenger (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	player (Lnet/minecraft/advancements/critereon/PlayerPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	steppingOn (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	targetedEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; c
	team (Ljava/lang/String;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	vehicle (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
net/minecraft/advancements/critereon/EntityPredicate$Composite bo$b
	ANY a
	compositePredicates c
	conditions b
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromElement (Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromJson (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;)[Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; b
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	toJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonElement; a
	toJson ([Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonElement; a
	wrap (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
net/minecraft/advancements/critereon/EntityTypePredicate net/minecraft/advancements/critereon/CriterionConditionEntityType
	ANY a
	COMMA_JOINER b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; a
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; a
	of (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; b
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate bp$a
	tag b
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate bp$b
	type b
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/FilledBucketTrigger net/minecraft/advancements/critereon/CriterionTriggerFilledBucket
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance bq$a
	item a
	filledBucket (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/FishingHookPredicate net/minecraft/advancements/critereon/CriterionConditionInOpenWater
	ANY a
	IN_OPEN_WATER_KEY b
	inOpenWater c
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/FishingHookPredicate; a
	inOpenWater (Z)Lnet/minecraft/advancements/critereon/FishingHookPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/FishingRodHookedTrigger net/minecraft/advancements/critereon/CriterionTriggerFishingRodHooked
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/FishingHook;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance bs$a
	entity b
	item c
	rod a
	fishedItem (Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/Collection;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/FluidPredicate net/minecraft/advancements/critereon/CriterionConditionFluid
	ANY a
	fluid c
	properties d
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/FluidPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/FluidPredicate$Builder bt$a
	fluid a
	fluids b
	properties c
	build ()Lnet/minecraft/advancements/critereon/FluidPredicate; b
	fluid ()Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	of (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
net/minecraft/advancements/critereon/ImpossibleTrigger net/minecraft/advancements/critereon/CriterionTriggerImpossible
	ID a
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance bu$a
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/InventoryChangeTrigger net/minecraft/advancements/critereon/CriterionTriggerInventoryChanged
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;)V a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;III)V a
net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance bv$a
	predicates d
	slotsEmpty c
	slotsFull b
	slotsOccupied a
	hasItems ([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	hasItems ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;III)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemDurabilityTrigger net/minecraft/advancements/critereon/CriterionTriggerItemDurabilityChanged
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance bw$a
	delta c
	durability b
	item a
	changedDurability (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	changedDurability (Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger net/minecraft/advancements/critereon/CriterionTriggerThrownItemPickedUpByEntity
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance bx$a
	entity b
	item a
	itemPickedUpByEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemPredicate net/minecraft/advancements/critereon/CriterionConditionItem
	ANY a
	count d
	durability e
	enchantments f
	items c
	nbt i
	potion h
	storedEnchantments g
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/ItemPredicate; a
	fromJsonArray (Lcom/google/gson/JsonElement;)[Lnet/minecraft/advancements/critereon/ItemPredicate; b
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/ItemPredicate$Builder by$a
	count e
	durability f
	enchantments a
	items c
	nbt h
	potion g
	storedEnchantments b
	tag d
	build ()Lnet/minecraft/advancements/critereon/ItemPredicate; b
	hasDurability (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; b
	hasEnchantment (Lnet/minecraft/advancements/critereon/EnchantmentPredicate;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	hasNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	hasStoredEnchantment (Lnet/minecraft/advancements/critereon/EnchantmentPredicate;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; b
	isPotion (Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	item ()Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	of ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	withCount (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger net/minecraft/advancements/critereon/CriterionTriggerInteractBlock
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance bz$a
	item b
	location a
	itemUsedOnBlock (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/KilledByCrossbowTrigger net/minecraft/advancements/critereon/CriterionTriggerKilledByCrossbow
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance ca$a
	uniqueEntityTypes b
	victims a
	crossbowKilled (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	crossbowKilled ([Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	matches (Ljava/util/Collection;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/KilledTrigger net/minecraft/advancements/critereon/CriterionTriggerKilled
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V a
net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance cb$a
	entityPredicate a
	killingBlow b
	entityKilledPlayer ()Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; d
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	playerKilledEntity ()Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; c
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LevitationTrigger net/minecraft/advancements/critereon/CriterionTriggerLevitation
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;I)V a
net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance cc$a
	distance a
	duration b
	levitated (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LightPredicate net/minecraft/advancements/critereon/CriterionConditionLight
	ANY a
	composite b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/LightPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/LightPredicate$Builder cd$a
	composite a
	build ()Lnet/minecraft/advancements/critereon/LightPredicate; b
	light ()Lnet/minecraft/advancements/critereon/LightPredicate$Builder; a
	setComposite (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/LightPredicate$Builder; a
net/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance cf$a
	bystander b
	lightning a
	lighthingStrike (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/List;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LocationPredicate net/minecraft/advancements/critereon/CriterionConditionLocation
	ANY a
	LOGGER b
	biome f
	block k
	dimension h
	feature g
	fluid l
	light j
	smokey i
	x c
	y d
	z e
	atYLocation (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	inBiome (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	inDimension (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate; b
	inFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;DDD)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/LocationPredicate$Builder cg$a
	biome d
	block i
	dimension f
	feature e
	fluid j
	light h
	smokey g
	x a
	y b
	z c
	build ()Lnet/minecraft/advancements/critereon/LocationPredicate; b
	location ()Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setBiome (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setBlock (Lnet/minecraft/advancements/critereon/BlockPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setDimension (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; b
	setFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setFluid (Lnet/minecraft/advancements/critereon/FluidPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setLight (Lnet/minecraft/advancements/critereon/LightPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setSmokey (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setX (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setY (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; b
	setZ (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; c
net/minecraft/advancements/critereon/LocationTrigger net/minecraft/advancements/critereon/CriterionTriggerLocation
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/LocationTrigger$TriggerInstance ch$a
	location a
	located (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; a
	located (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerLevel;DDD)Z a
	raidWon ()Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; d
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	sleptInBed ()Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; c
	walkOnBlockWithEquipment (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/LootTableTrigger net/minecraft/advancements/critereon/CriterionTriggerPlayerGeneratesContainerLoot
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceLocation;)V a
net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance ci$a
	lootTable a
	lootTableUsed (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance; a
	matches (Lnet/minecraft/resources/ResourceLocation;)Z b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/MinMaxBounds net/minecraft/advancements/critereon/CriterionConditionValue
	ERROR_EMPTY a
	ERROR_SWAPPED b
	max d
	min c
	fromJson (Lcom/google/gson/JsonElement;Lnet/minecraft/advancements/critereon/MinMaxBounds;Ljava/util/function/BiFunction;Lnet/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory;)Lnet/minecraft/advancements/critereon/MinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds; a
	getMax ()Ljava/lang/Number; b
	getMin ()Ljava/lang/Number; a
	isAllowedInputChat (Lcom/mojang/brigadier/StringReader;)Z a
	isAny ()Z c
	optionallyFormat (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; a
	readNumber (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number; a
	serializeToJson ()Lcom/google/gson/JsonElement; d
net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory cj$a
net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory cj$b
net/minecraft/advancements/critereon/MinMaxBounds$Doubles net/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange
	ANY e
	maxSq g
	minSq f
	atLeast (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; b
	atMost (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; c
	between (DD)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Double;Ljava/lang/Double;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	exactly (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	fromReader (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	fromReader (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	matches (D)Z d
	matchesSqr (D)Z e
	squareOpt (Ljava/lang/Double;)Ljava/lang/Double; a
net/minecraft/advancements/critereon/MinMaxBounds$Ints net/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange
	ANY e
	maxSq g
	minSq f
	atLeast (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; b
	atMost (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; c
	between (II)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	exactly (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromReader (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromReader (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	matches (I)Z d
	matchesSqr (J)Z a
	squareOpt (Ljava/lang/Integer;)Ljava/lang/Long; a
net/minecraft/advancements/critereon/MobEffectsPredicate net/minecraft/advancements/critereon/CriterionConditionMobEffect
	ANY a
	effects b
	and (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	and (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	effects ()Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	matches (Ljava/util/Map;)Z a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/world/entity/LivingEntity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; b
net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate ck$a
	ambient c
	amplifier a
	duration b
	visible d
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate; a
	matches (Lnet/minecraft/world/effect/MobEffectInstance;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/NbtPredicate net/minecraft/advancements/critereon/CriterionConditionNBT
	ANY a
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/NbtPredicate; a
	getEntityTagToCompare (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/nbt/CompoundTag; b
	matches (Lnet/minecraft/nbt/Tag;)Z a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlacedBlockTrigger net/minecraft/advancements/critereon/CriterionTriggerPlacedBlock
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance cm$a
	block a
	item d
	location c
	state b
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;)Z a
	placedBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerHurtEntityTrigger net/minecraft/advancements/critereon/CriterionTriggerPlayerHurtEntity
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V a
net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance cn$a
	damage a
	entity b
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	playerHurtEntity ()Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; c
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerInteractTrigger net/minecraft/advancements/critereon/CriterionTriggerPlayerInteractedWithEntity
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance co$a
	entity b
	item a
	itemUsedOnEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerPredicate net/minecraft/advancements/critereon/CriterionConditionPlayer
	ANY a
	LOOKING_AT_RANGE b
	advancements g
	gameType d
	level c
	lookingAt h
	recipes f
	stats e
	advancementPredicateFromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate; b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/PlayerPredicate; a
	getStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/stats/Stat; a
	getStatValueId (Lnet/minecraft/stats/Stat;)Lnet/minecraft/resources/ResourceLocation; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate cp$a
	criterions a
	test (Lnet/minecraft/advancements/AdvancementProgress;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate cp$b
	state a
	test (Lnet/minecraft/advancements/AdvancementProgress;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate cp$c
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$Builder cp$d
	advancements e
	gameType b
	level a
	lookingAt f
	recipes d
	stats c
	addRecipe (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	addStat (Lnet/minecraft/stats/Stat;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/PlayerPredicate; b
	checkAdvancementCriterions (Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	checkAdvancementDone (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; b
	player ()Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setLevel (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setLookingAt (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
net/minecraft/advancements/critereon/RecipeUnlockedTrigger net/minecraft/advancements/critereon/CriterionTriggerRecipeUnlocked
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;)V a
	unlocked (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance cq$a
	recipe a
	matches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/SerializationContext net/minecraft/advancements/critereon/LootSerializationContext
	INSTANCE a
	predicateGson b
	serializeConditions ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/ShotCrossbowTrigger net/minecraft/advancements/critereon/CriterionTriggerShotCrossbow
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance cs$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	shotCrossbow (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
	shotCrossbow (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/SimpleCriterionTrigger net/minecraft/advancements/critereon/CriterionTriggerAbstract
	players a
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/function/Predicate;)V a
net/minecraft/advancements/critereon/SlideDownBlockTrigger net/minecraft/advancements/critereon/CriterionSlideDownBlock
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance cu$a
	block a
	state b
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	slidesDownBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance cv$a
	playerStartsRiding (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/StatePropertiesPredicate net/minecraft/advancements/critereon/CriterionTriggerProperties
	ANY a
	properties b
	checkState (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/util/function/Consumer;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate; a
	fromJson (Ljava/lang/String;Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher; a
	getStringOrNull (Lcom/google/gson/JsonElement;)Ljava/lang/String; b
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	matches (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/StateHolder;)Z a
	matches (Lnet/minecraft/world/level/material/FluidState;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder cw$a
	matchers a
	build ()Lnet/minecraft/advancements/critereon/StatePropertiesPredicate; b
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;I)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Z)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	properties ()Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher cw$b
	value a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher cw$c
	name a
	checkState (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/util/function/Consumer;)V a
	getName ()Ljava/lang/String; b
	match (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/StateHolder;)Z a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher cw$d
	maxValue b
	minValue a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/SummonedEntityTrigger net/minecraft/advancements/critereon/CriterionTriggerSummonedEntity
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance cx$a
	entity a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	summonedEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TameAnimalTrigger net/minecraft/advancements/critereon/CriterionTriggerTamedAnimal
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/animal/Animal;)V a
net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance cy$a
	entity a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	tamedAnimal ()Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; c
	tamedAnimal (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TargetBlockTrigger net/minecraft/advancements/critereon/CriterionTriggerTargetHit
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;I)V a
net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance cz$a
	projectile b
	signalStrength a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/phys/Vec3;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	targetHit (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TickTrigger net/minecraft/advancements/critereon/CriterionTriggerTick
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TickTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/TickTrigger$TriggerInstance da$a
net/minecraft/advancements/critereon/TradeTrigger net/minecraft/advancements/critereon/CriterionTriggerVillagerTrade
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/npc/AbstractVillager;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance db$a
	item b
	villager a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	tradedWithVillager ()Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; c
	tradedWithVillager (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/UsedEnderEyeTrigger net/minecraft/advancements/critereon/CriterionTriggerUsedEnderEye
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance dc$a
	level a
	matches (D)Z a
net/minecraft/advancements/critereon/UsedTotemTrigger net/minecraft/advancements/critereon/CriterionTriggerUsedTotem
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance dd$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	usedTotem (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
	usedTotem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance de$a
	item a
	lookingAt (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/WrappedMinMaxBounds net/minecraft/advancements/critereon/CriterionConditionRange
	ANY a
	ERROR_INTS_ONLY b
	max d
	min c
	atLeast (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; b
	atMost (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; c
	between (FF)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	exactly (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	getMax ()Ljava/lang/Float; b
	getMin ()Ljava/lang/Float; a
	isAllowedNumber (Lcom/mojang/brigadier/StringReader;Z)Z c
	matches (F)Z d
	matchesSqr (D)Z a
	optionallyFormat (Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float; a
	readNumber (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; b
	serializeToJson ()Lcom/google/gson/JsonElement; c
net/minecraft/client/AmbientOcclusionStatus dww
	$VALUES g
	BY_ID d
	MAX c
	MIN b
	OFF a
	id e
	key f
	$values ()[Lnet/minecraft/client/AmbientOcclusionStatus; c
	byId (I)Lnet/minecraft/client/AmbientOcclusionStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/AttackIndicatorStatus dwx
	$VALUES g
	BY_ID d
	CROSSHAIR b
	HOTBAR c
	OFF a
	id e
	key f
	$values ()[Lnet/minecraft/client/AttackIndicatorStatus; c
	byId (I)Lnet/minecraft/client/AttackIndicatorStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/Camera dwy
	FOG_DISTANCE_SCALE a
	blockPosition f
	detached m
	entity d
	eyeHeight n
	eyeHeightOld o
	forwards g
	initialized b
	left i
	level c
	position e
	rotation l
	up h
	xRot j
	yRot k
	getBlockPosition ()Lnet/minecraft/core/BlockPos; c
	getEntity ()Lnet/minecraft/world/entity/Entity; g
	getFluidInCamera ()Lnet/minecraft/world/level/material/FogType; k
	getLeftVector ()Lcom/mojang/math/Vector3f; n
	getLookVector ()Lcom/mojang/math/Vector3f; l
	getMaxZoom (D)D a
	getNearPlane ()Lnet/minecraft/client/Camera$NearPlane; j
	getPosition ()Lnet/minecraft/world/phys/Vec3; b
	getUpVector ()Lcom/mojang/math/Vector3f; m
	getXRot ()F d
	getYRot ()F e
	isDetached ()Z i
	isInitialized ()Z h
	move (DDD)V a
	reset ()V o
	rotation ()Lcom/mojang/math/Quaternion; f
	setPosition (DDD)V b
	setPosition (Lnet/minecraft/world/phys/Vec3;)V a
	setRotation (FF)V a
	setup (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;ZZF)V a
	tick ()V a
net/minecraft/client/Camera$NearPlane dwy$a
	forward a
	left b
	up c
	getBottomLeft ()Lnet/minecraft/world/phys/Vec3; c
	getBottomRight ()Lnet/minecraft/world/phys/Vec3; d
	getPointOnPlane (FF)Lnet/minecraft/world/phys/Vec3; a
	getTopLeft ()Lnet/minecraft/world/phys/Vec3; a
	getTopRight ()Lnet/minecraft/world/phys/Vec3; b
net/minecraft/client/CameraType dwz
	$VALUES g
	FIRST_PERSON a
	THIRD_PERSON_BACK b
	THIRD_PERSON_FRONT c
	VALUES d
	firstPerson e
	mirrored f
	$values ()[Lnet/minecraft/client/CameraType; d
	cycle ()Lnet/minecraft/client/CameraType; c
	isFirstPerson ()Z a
	isMirrored ()Z b
net/minecraft/client/ClientRecipeBook dxa
	LOGGER c
	allCollections e
	collectionsByTab d
	categorizeAndGroupRecipes (Ljava/lang/Iterable;)Ljava/util/Map; b
	getCategory (Lnet/minecraft/world/item/crafting/Recipe;)Lnet/minecraft/client/RecipeBookCategories; g
	getCollection (Lnet/minecraft/client/RecipeBookCategories;)Ljava/util/List; a
	getCollections ()Ljava/util/List; b
	setupCollections (Ljava/lang/Iterable;)V a
net/minecraft/client/ClientTelemetryManager dxb
	EXECUTOR b
	THREAD_COUNT a
	minecraft c
	playerInfo f
	serverBrand g
	telemetrySession d
	worldLoadEventSent e
	addOptionalProperty (Ljava/lang/String;Ljava/util/Optional;Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;)V a
	getServerType ()Ljava/lang/String; b
	onDisconnect ()V a
	onPlayerInfoReceived (Lnet/minecraft/world/level/GameType;Z)V a
	onServerBrandReceived (Ljava/lang/String;)V a
	sendWorldLoadEvent (Lnet/minecraft/client/ClientTelemetryManager$PlayerInfo;)V a
net/minecraft/client/ClientTelemetryManager$PlayerInfo dxb$a
	gameType a
	hardcore b
	gameType ()Lnet/minecraft/world/level/GameType; b
	getGameModeId ()I a
	hardcore ()Z c
net/minecraft/client/CloudStatus dxc
	$VALUES e
	FANCY c
	FAST b
	OFF a
	key d
	$values ()[Lnet/minecraft/client/CloudStatus; b
	getKey ()Ljava/lang/String; a
net/minecraft/client/ComponentCollector dxd
	parts a
	append (Lnet/minecraft/network/chat/FormattedText;)V a
	getResult ()Lnet/minecraft/network/chat/FormattedText; a
	getResultOrEmpty ()Lnet/minecraft/network/chat/FormattedText; b
	reset ()V c
net/minecraft/client/CycleOption dxe
	buttonSetup ah
	getter ag
	setter af
	tooltip ai
	create (Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/function/BooleanSupplier;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/client/CycleOption$OptionSetter;)Lnet/minecraft/client/CycleOption; a
	create (Ljava/lang/String;Ljava/util/List;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/client/CycleOption$OptionSetter;)Lnet/minecraft/client/CycleOption; a
	create (Ljava/lang/String;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/client/CycleOption$OptionSetter;)Lnet/minecraft/client/CycleOption; a
	create (Ljava/lang/String;[Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/client/CycleOption$OptionSetter;)Lnet/minecraft/client/CycleOption; a
	createBinaryOption (Ljava/lang/String;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;Lnet/minecraft/client/CycleOption$OptionSetter;)Lnet/minecraft/client/CycleOption; a
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	createOnOff (Ljava/lang/String;Ljava/util/function/Function;Lnet/minecraft/client/CycleOption$OptionSetter;)Lnet/minecraft/client/CycleOption; a
	createOnOff (Ljava/lang/String;Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;Lnet/minecraft/client/CycleOption$OptionSetter;)Lnet/minecraft/client/CycleOption; a
	setTooltip (Ljava/util/function/Function;)Lnet/minecraft/client/CycleOption; a
net/minecraft/client/CycleOption$OptionSetter dxe$a
net/minecraft/client/DebugQueryHandler dxf
	callback c
	connection a
	transactionId b
	handleResponse (ILnet/minecraft/nbt/CompoundTag;)Z a
	queryBlockEntityTag (Lnet/minecraft/core/BlockPos;Ljava/util/function/Consumer;)V a
	queryEntityTag (ILjava/util/function/Consumer;)V a
	startTransaction (Ljava/util/function/Consumer;)I a
net/minecraft/client/FullscreenResolutionProgressOption dxg
	CURRENT_MODE ai
net/minecraft/client/Game dxh
	launcher b
	listener c
	minecraft a
	onLeaveGameSession ()V b
	onStartGameSession ()V a
net/minecraft/client/Game$Metrics dxh$a
	average c
	max b
	min a
	samples d
net/minecraft/client/GraphicsStatus dxi
	$VALUES g
	BY_ID d
	FABULOUS c
	FANCY b
	FAST a
	id e
	key f
	$values ()[Lnet/minecraft/client/GraphicsStatus; c
	byId (I)Lnet/minecraft/client/GraphicsStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/GuiMessage dxj
	addedTime a
	id c
	message b
	getAddedTime ()I b
	getId ()I c
	getMessage ()Ljava/lang/Object; a
net/minecraft/client/HotbarManager dxk
	LOGGER b
	NUM_HOTBAR_GROUPS a
	fixerUpper d
	hotbars e
	loaded f
	optionsFile c
	get (I)Lnet/minecraft/client/player/inventory/Hotbar; a
	load ()V b
	save ()V a
net/minecraft/client/KeyMapping dxl
	ALL h
	CATEGORIES j
	CATEGORY_CREATIVE g
	CATEGORY_GAMEPLAY d
	CATEGORY_INTERFACE f
	CATEGORY_INVENTORY e
	CATEGORY_MISC b
	CATEGORY_MOVEMENT a
	CATEGORY_MULTIPLAYER c
	CATEGORY_SORT_ORDER k
	MAP i
	category n
	clickCount q
	defaultKey m
	isDown p
	key o
	name l
	click (Lcom/mojang/blaze3d/platform/InputConstants$Key;)V a
	compareTo (Lnet/minecraft/client/KeyMapping;)I a
	consumeClick ()Z f
	createNameSupplier (Ljava/lang/String;)Ljava/util/function/Supplier; a
	getCategory ()Ljava/lang/String; e
	getDefaultKey ()Lcom/mojang/blaze3d/platform/InputConstants$Key; h
	getName ()Ljava/lang/String; g
	getTranslatedKeyMessage ()Lnet/minecraft/network/chat/Component; j
	isDefault ()Z k
	isDown ()Z d
	isUnbound ()Z i
	matches (II)Z a
	matchesMouse (I)Z a
	release ()V m
	releaseAll ()V b
	resetMapping ()V c
	same (Lnet/minecraft/client/KeyMapping;)Z b
	saveString ()Ljava/lang/String; l
	set (Lcom/mojang/blaze3d/platform/InputConstants$Key;Z)V a
	setAll ()V a
	setDown (Z)V a
	setKey (Lcom/mojang/blaze3d/platform/InputConstants$Key;)V b
net/minecraft/client/KeyboardHandler dxm
	DEBUG_CRASH_TIME a
	clipboardManager d
	debugCrashKeyReportedCount g
	debugCrashKeyReportedTime f
	debugCrashKeyTime e
	handledDebugKey h
	minecraft b
	sendRepeatsToGui c
	charTyped (JII)V a
	copyCreateBlockCommand (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	copyCreateEntityCommand (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;)V a
	copyRecreateCommand (ZZ)V a
	debugComponent (Lnet/minecraft/ChatFormatting;Lnet/minecraft/network/chat/Component;)V a
	debugFeedback (Ljava/lang/String;[Ljava/lang/Object;)V c
	debugFeedbackComponent (Lnet/minecraft/network/chat/Component;)V a
	debugFeedbackTranslated (Ljava/lang/String;[Ljava/lang/Object;)V a
	debugWarningTranslated (Ljava/lang/String;[Ljava/lang/Object;)V b
	getClipboard ()Ljava/lang/String; a
	handleChunkDebugKeys (I)Z a
	handleDebugKeys (I)Z b
	keyPress (JIIII)V a
	setClipboard (Ljava/lang/String;)V a
	setSendRepeatsToGui (Z)V a
	setup (J)V a
	tick ()V b
net/minecraft/client/LogaritmicProgressOption dxn
	toPct (D)D a
	toValue (D)D b
net/minecraft/client/Minecraft dxo
	ALT_FONT d
	DEFAULT_FONT b
	LOGGER F
	MAX_TICKS_PER_UPDATE G
	ON_OSX a
	RESOURCE_RELOAD_INITIAL_TASK H
	SOCIAL_INTERACTIONS_NOT_AVAILABLE I
	UNIFORM_FONT c
	UPDATE_DRIVERS_ADVICE e
	allowsChat af
	allowsMultiplayer ae
	blockColors ak
	blockEntityRenderDispatcher aE
	blockRenderer aw
	cameraEntity t
	chunkPath B
	chunkVisibility C
	clientPackSource ah
	connectedToRealms aR
	crosshairPickEntity u
	currentServer aH
	debugPath bg
	debugRenderer j
	delayedCrash aU
	demo ad
	deviceSessionId aF
	entityModels aD
	entityRenderDispatcher R
	fixerUpper M
	font h
	fontManager ap
	fps aV
	fpsPieProfiler bc
	fpsPieRenderTicks bb
	fpsPieResults bd
	fpsString z
	frameTimer p
	frames aP
	game aA
	gameDirectory o
	gameMode q
	gameRenderer i
	gameThread aS
	gpuWarnlistManager ar
	gui k
	hitResult v
	hotbarManager X
	instance E
	is64bit ac
	isLocalServer aJ
	itemColors al
	itemInHandRenderer T
	itemRenderer S
	keyboardHandler n
	languageManager aj
	lastNanoTime aN
	lastTime aO
	launchedVersion Y
	level r
	levelRenderer f
	levelSource ab
	mainRenderTarget am
	metricsRecorder be
	minecraftSessionService as
	missTime w
	mobEffectTextures ay
	modelManager av
	mouseHandler m
	musicManager ao
	noRender x
	options l
	overlay aQ
	paintingTextures ax
	particleEngine g
	pause aL
	pausePartialTick aM
	pendingConnection aI
	pendingReload aY
	player s
	playerSocialManager aC
	profileProperties K
	profiler ba
	progressListener W
	progressTasks aX
	proxy aa
	reloadStateTracker bf
	renderBuffers Q
	resourceManager ag
	resourcePackDirectory J
	resourcePackRepository ai
	rightClickDelay aK
	running aT
	screen y
	searchRegistry U
	singleplayerServer aG
	skinManager au
	smartCull D
	socialInteractionsToast aZ
	soundManager an
	splashManager aq
	textureManager L
	timer P
	toast az
	tutorial aB
	user V
	userApiService at
	versionType Z
	virtualScreen N
	window O
	windowActive aW
	wireframe A
	adaptV3 (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; c
	adaptV4 (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; d
	addCustomNbtData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/item/ItemStack; a
	allowsMultiplayer ()Z t
	allowsRealms ()Z u
	archiveProfilingReport (Lnet/minecraft/SystemReport;Ljava/util/List;)Ljava/nio/file/Path; a
	checkIs64Bit ()Z aJ
	checkModStatus ()Lnet/minecraft/util/ModCheck; d
	clearLevel ()V s
	clearLevel (Lnet/minecraft/client/gui/screens/Screen;)V b
	clearResourcePacksOnError (Ljava/lang/Throwable;Lnet/minecraft/network/chat/Component;)V a
	constructProfiler (ZLnet/minecraft/util/profiling/SingleTickProfiler;)Lnet/minecraft/util/profiling/ProfilerFiller; a
	continueAttack (Z)V g
	crash (Lnet/minecraft/CrashReport;)V a
	createClientPackAdapter (Ljava/lang/String;Lnet/minecraft/network/chat/Component;ZLjava/util/function/Supplier;Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection;Lnet/minecraft/server/packs/repository/Pack$Position;Lnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/Pack; a
	createLevel (Ljava/lang/String;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
	createSearchTrees ()V aI
	createTelemetryManager ()Lnet/minecraft/client/ClientTelemetryManager; r
	createTitle ()Ljava/lang/String; aH
	createUserApiService (Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Lnet/minecraft/client/main/GameConfig;)Lcom/mojang/authlib/minecraft/UserApiService; a
	cursorEntered ()V b
	debugClientMetricsStart (Ljava/util/function/Consumer;)Z a
	debugClientMetricsStop ()V aN
	debugFpsMeterKeyPress (I)V a
	delayCrash (Ljava/util/function/Supplier;)V b
	delayTextureReload ()Ljava/util/concurrent/CompletableFuture; E
	destroy ()V l
	displayExperimentalConfirmationDialog (Lnet/minecraft/client/Minecraft$ExperimentalDialogType;Ljava/lang/String;ZLjava/lang/Runnable;)V a
	doLoadLevel (Ljava/lang/String;Lnet/minecraft/core/RegistryAccess$RegistryHolder;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;ZLnet/minecraft/client/Minecraft$ExperimentalDialogType;)V a
	emergencySave ()V m
	fillReport (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; b
	fillReport (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/resources/language/LanguageManager;Ljava/lang/String;Lnet/minecraft/client/Options;Lnet/minecraft/CrashReport;)V a
	fillSystemReport (Lnet/minecraft/SystemReport;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/resources/language/LanguageManager;Ljava/lang/String;Lnet/minecraft/client/Options;)Lnet/minecraft/SystemReport; a
	finishProfilers (ZLnet/minecraft/util/profiling/SingleTickProfiler;)V b
	forceSetScreen (Lnet/minecraft/client/gui/screens/Screen;)V c
	getBlockColors ()Lnet/minecraft/client/color/block/BlockColors; ak
	getBlockEntityRenderDispatcher ()Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher; ac
	getBlockRenderer ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; aa
	getCameraEntity ()Lnet/minecraft/world/entity/Entity; Z
	getChatStatus ()Lnet/minecraft/client/Minecraft$ChatStatus; v
	getClientPackSource ()Lnet/minecraft/client/resources/ClientPackSource; P
	getConnection ()Lnet/minecraft/client/multiplayer/ClientPacketListener; x
	getCurrentServer ()Lnet/minecraft/client/multiplayer/ServerData; F
	getDeltaFrameTime ()F aj
	getEntityModels ()Lnet/minecraft/client/model/geom/EntityModelSet; aE
	getEntityRenderDispatcher ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; ab
	getFixerUpper ()Lcom/mojang/datafixers/DataFixer; ah
	getFrameTime ()F ai
	getFrameTimer ()Lnet/minecraft/util/FrameTimer; af
	getFramerateLimit ()I aM
	getGame ()Lnet/minecraft/client/Game; aw
	getGpuWarnlistManager ()Lnet/minecraft/client/renderer/GpuWarnlistManager; U
	getHotbarManager ()Lnet/minecraft/client/HotbarManager; ap
	getInstance ()Lnet/minecraft/client/Minecraft; D
	getItemInHandRenderer ()Lnet/minecraft/client/renderer/ItemInHandRenderer; ae
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; ad
	getLanguageManager ()Lnet/minecraft/client/resources/language/LanguageManager; R
	getLaunchedVersion ()Ljava/lang/String; g
	getLevelSource ()Lnet/minecraft/world/level/storage/LevelStorageSource; k
	getMainRenderTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; f
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; X
	getMobEffectTextures ()Lnet/minecraft/client/resources/MobEffectTextureManager; au
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; aq
	getMusicManager ()Lnet/minecraft/client/sounds/MusicManager; p
	getOverlay ()Lnet/minecraft/client/gui/screens/Overlay; az
	getPaintingTextures ()Lnet/minecraft/client/resources/PaintingTextureManager; ar
	getPlayerSocialManager ()Lnet/minecraft/client/gui/screens/social/PlayerSocialManager; aA
	getProfileProperties ()Lcom/mojang/authlib/properties/PropertyMap; K
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; av
	getProgressListener ()Lnet/minecraft/server/level/progress/StoringChunkProgressListener; ax
	getProxy ()Ljava/net/Proxy; L
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; N
	getResourcePackDirectory ()Ljava/io/File; Q
	getResourcePackRepository ()Lnet/minecraft/server/packs/repository/PackRepository; O
	getRunningThread ()Ljava/lang/Thread; at
	getSearchTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/MutableSearchTree; a
	getSingleplayerServer ()Lnet/minecraft/client/server/IntegratedServer; I
	getSituationalMusic ()Lnet/minecraft/sounds/Music; W
	getSkinManager ()Lnet/minecraft/client/resources/SkinManager; Y
	getSoundManager ()Lnet/minecraft/client/sounds/SoundManager; V
	getSplashManager ()Lnet/minecraft/client/resources/SplashManager; ay
	getTextureAtlas (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/function/Function; a
	getTextureManager ()Lnet/minecraft/client/renderer/texture/TextureManager; M
	getToasts ()Lnet/minecraft/client/gui/components/toasts/ToastComponent; am
	getTutorial ()Lnet/minecraft/client/tutorial/Tutorial; an
	getUser ()Lnet/minecraft/client/User; J
	getVersionType ()Ljava/lang/String; h
	getWindow ()Lcom/mojang/blaze3d/platform/Window; aC
	grabHugeScreenshot (Ljava/io/File;IIII)Lnet/minecraft/network/chat/Component; a
	grabPanoramixScreenshot (Ljava/io/File;II)Lnet/minecraft/network/chat/Component; a
	handleKeybinds ()V aR
	hasSingleplayerServer ()Z H
	is64Bit ()Z S
	isBlocked (Ljava/util/UUID;)Z a
	isConnectedToRealms ()Z ag
	isDemo ()Z w
	isEnforceUnicode ()Z i
	isLocalServer ()Z G
	isMultiplayerServer ()Z aQ
	isPaused ()Z T
	isRunning ()Z o
	isTextFilteringEnabled ()Z aF
	isWindowActive ()Z ao
	loadDataPacks (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Lnet/minecraft/world/level/DataPackConfig; a
	loadLevel (Ljava/lang/String;)V a
	loadWorldData (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/storage/WorldData; a
	makeServerStem (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;ZLnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Lnet/minecraft/client/Minecraft$ServerStem; a
	onFullscreenError (IJ)V a
	openChatScreen (Ljava/lang/String;)V b
	pauseGame (Z)V c
	pickBlock ()V aS
	prepareForMultiplayer ()V aG
	reloadResourcePacks ()Ljava/util/concurrent/CompletableFuture; j
	reloadResourcePacks (Z)Ljava/util/concurrent/CompletableFuture; e
	renderBuffers ()Lnet/minecraft/client/renderer/RenderBuffers; aD
	renderFpsMeter (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/profiling/ProfileResults;)V a
	renderNames ()Z z
	renderOnThread ()Z aB
	resizeDisplay ()V a
	rollbackResourcePacks (Ljava/lang/Throwable;)V a
	run ()V e
	runTick (Z)V f
	selectMainFont (Z)V b
	selfTest ()V aK
	setCameraEntity (Lnet/minecraft/world/entity/Entity;)V a
	setConnectedToRealms (Z)V d
	setCurrentServer (Lnet/minecraft/client/multiplayer/ServerData;)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	setOverlay (Lnet/minecraft/client/gui/screens/Overlay;)V a
	setScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	setWindowActive (Z)V a
	shouldEntityAppearGlowing (Lnet/minecraft/world/entity/Entity;)Z b
	shouldRenderFpsPie ()Z aL
	shouldRun (Ljava/lang/Runnable;)Z d
	showOnlyReducedInfo ()Z al
	startAttack ()V aO
	startUseItem ()V aP
	stop ()V n
	tick ()V q
	updateLevelInEngines (Lnet/minecraft/client/multiplayer/ClientLevel;)V b
	updateMaxMipLevel (I)V b
	updateScreenAndTick (Lnet/minecraft/client/gui/screens/Screen;)V d
	updateTitle ()V c
	useAmbientOcclusion ()Z C
	useFancyGraphics ()Z A
	useShaderTransparency ()Z B
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/client/Minecraft$ChatStatus dxo$a
	$VALUES f
	DISABLED_BY_LAUNCHER c
	DISABLED_BY_OPTIONS b
	DISABLED_BY_PROFILE d
	ENABLED a
	message e
	$values ()[Lnet/minecraft/client/Minecraft$ChatStatus; b
	getMessage ()Lnet/minecraft/network/chat/Component; a
	isChatAllowed (Z)Z a
net/minecraft/client/Minecraft$ExperimentalDialogType dxo$b
	$VALUES d
	BACKUP c
	CREATE b
	NONE a
	$values ()[Lnet/minecraft/client/Minecraft$ExperimentalDialogType; a
net/minecraft/client/Minecraft$ServerStem dxo$c
	packRepository a
	serverResources b
	worldData c
	packRepository ()Lnet/minecraft/server/packs/repository/PackRepository; a
	serverResources ()Lnet/minecraft/server/ServerResources; b
	worldData ()Lnet/minecraft/world/level/storage/WorldData; c
net/minecraft/client/MouseHandler dxp
	accumulatedDX n
	accumulatedDY o
	accumulatedScroll p
	activeButton h
	clickDepth j
	fakeRightMouse g
	ignoreFirstMove i
	isLeftPressed b
	isMiddlePressed c
	isRightPressed d
	lastMouseEventTime q
	minecraft a
	mouseGrabbed r
	mousePressedTime k
	smoothTurnX l
	smoothTurnY m
	xpos e
	ypos f
	cursorEntered ()V k
	grabMouse ()V i
	isLeftPressed ()Z b
	isMiddlePressed ()Z c
	isMouseGrabbed ()Z h
	isRightPressed ()Z d
	onDrop (JLjava/util/List;)V a
	onMove (JDD)V b
	onPress (JIII)V a
	onScroll (JDD)V a
	releaseMouse ()V j
	setIgnoreFirstMove ()V g
	setup (J)V a
	turnPlayer ()V a
	xpos ()D e
	ypos ()D f
net/minecraft/client/NarratorStatus dxq
	$VALUES h
	ALL b
	BY_ID e
	CHAT c
	OFF a
	SYSTEM d
	id f
	name g
	$values ()[Lnet/minecraft/client/NarratorStatus; c
	byId (I)Lnet/minecraft/client/NarratorStatus; a
	getId ()I a
	getName ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/Option dxr
	ACCESSIBILITY_TOOLTIP_DARK_MOJANG_BACKGROUND ar
	ACCESSIBILITY_TOOLTIP_FOV_EFFECT af
	ACCESSIBILITY_TOOLTIP_HIDE_LIGHTNING_FLASHES as
	ACCESSIBILITY_TOOLTIP_SCREEN_EFFECT ag
	ALLOW_SERVER_LISTING U
	ALLOW_SERVER_LISTING_TOOLTIP ao
	AMBIENT_OCCLUSION w
	ATTACK_INDICATOR y
	AUDIO_DEVICE C
	AUTOSAVE_INDICATOR ae
	AUTO_JUMP I
	AUTO_SUGGESTIONS J
	BIOME_BLEND_RADIUS b
	CHAT_COLOR K
	CHAT_DELAY i
	CHAT_HEIGHT_FOCUSED c
	CHAT_HEIGHT_UNFOCUSED d
	CHAT_LINE_SPACING h
	CHAT_LINKS M
	CHAT_LINKS_PROMPT N
	CHAT_OPACITY e
	CHAT_SCALE f
	CHAT_TOOLTIP_HIDE_MATCHED_NAMES an
	CHAT_VISIBILITY z
	CHAT_WIDTH g
	DARK_MOJANG_STUDIOS_BACKGROUND_COLOR ac
	DISCRETE_MOUSE_SCROLL O
	ENABLE_VSYNC P
	ENTITY_DISTANCE_SCALING t
	ENTITY_SHADOWS Q
	FORCE_UNICODE_FONT R
	FOV j
	FOV_EFFECTS_SCALE k
	FRAMERATE_LIMIT m
	GAMMA n
	GRAPHICS A
	GRAPHICS_TOOLTIP_FABULOUS al
	GRAPHICS_TOOLTIP_FANCY am
	GRAPHICS_TOOLTIP_FAST ak
	GUI_SCALE B
	HIDE_LIGHTNING_FLASH ad
	HIDE_MATCHED_NAMES L
	INVERT_MOUSE S
	MAIN_HAND D
	MIPMAP_LEVELS o
	MOUSE_WHEEL_SENSITIVITY p
	MOVEMENT_HOLD aq
	MOVEMENT_TOGGLE ap
	NARRATOR E
	OPTIONS_TOOLTIP_WIDTH a
	PARTICLES F
	PRIORITIZE_CHUNK_TOOLTIP_NEARBY aj
	PRIORITIZE_CHUNK_TOOLTIP_NONE ah
	PRIORITIZE_CHUNK_TOOLTIP_PLAYER_AFFECTED ai
	PRIORITIZE_CHUNK_UPDATES x
	RAW_MOUSE_INPUT q
	REALMS_NOTIFICATIONS T
	REDUCED_DEBUG_INFO V
	RENDER_CLOUDS G
	RENDER_DISTANCE r
	SCREEN_EFFECTS_SCALE l
	SENSITIVITY u
	SHOW_SUBTITLES W
	SIMULATION_DISTANCE s
	TEXT_BACKGROUND H
	TEXT_BACKGROUND_OPACITY v
	TOGGLE_CROUCH X
	TOGGLE_SPRINT Y
	TOUCHSCREEN Z
	USE_FULLSCREEN aa
	VIEW_BOBBING ab
	caption at
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	genericValueLabel (I)Lnet/minecraft/network/chat/Component; c
	genericValueLabel (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	getCaption ()Lnet/minecraft/network/chat/Component; a
	percentAddValueLabel (I)Lnet/minecraft/network/chat/Component; b
	percentValueLabel (D)Lnet/minecraft/network/chat/Component; c
	pixelValueLabel (I)Lnet/minecraft/network/chat/Component; a
net/minecraft/client/Options dxs
	DEFAULT_SOUND_DEVICE g
	DEFAULT_VOLUME bp
	GSON bm
	LOGGER bl
	OPTION_SPLITTER bo
	RENDER_DISTANCE_EXTREME f
	RENDER_DISTANCE_FAR d
	RENDER_DISTANCE_NORMAL c
	RENDER_DISTANCE_REALLY_FAR e
	RENDER_DISTANCE_SHORT b
	RENDER_DISTANCE_TINY a
	RESOURCE_PACK_TYPE bn
	advancedItemTooltips A
	allowServerListing ag
	ambientOcclusion q
	attackIndicator N
	autoJump V
	autoSuggestions W
	backgroundForChatOnly aj
	biomeBlendRadius R
	bobView am
	cameraType bu
	chatColors X
	chatDelay K
	chatHeightFocused J
	chatHeightUnfocused I
	chatLineSpacing w
	chatLinks Y
	chatLinksPrompt Z
	chatOpacity v
	chatScale G
	chatVisibility u
	chatWidth H
	darkMojangStudiosBackground h
	difficulty aU
	discreteMouseScroll ae
	enableVsync aa
	entityDistanceScaling m
	entityShadows ab
	forceUnicodeFont ac
	fov bb
	fovEffectScale bd
	framerateLimit n
	fullscreen al
	fullscreenVideoModeString y
	gamma be
	glDebugVerbosity U
	graphicsMode p
	guiScale bf
	heldItemTooltips F
	hideBundleTutorial Q
	hideGui aV
	hideLightningFlashes i
	hideMatchedNames aq
	hideServerAddress z
	incompatibleResourcePacks t
	invertYMouse ad
	joinedFirstServer P
	keyAdvancements aO
	keyAttack aD
	keyChat aF
	keyCommand aH
	keyDown au
	keyDrop aB
	keyFullscreen aM
	keyHotbarSlots aP
	keyInventory az
	keyJump aw
	keyLeft at
	keyLoadHotbarActivator aR
	keyMappings aS
	keyPickItem aE
	keyPlayerList aG
	keyRight av
	keySaveHotbarActivator aQ
	keyScreenshot aJ
	keyShift ax
	keySmoothCamera aL
	keySocialInteractions aI
	keySpectatorOutlines aN
	keySprint ay
	keySwapOffhand aA
	keyTogglePerspective aK
	keyUp as
	keyUse aC
	languageCode bi
	lastMpIp aZ
	mainHand C
	minecraft aT
	mipmapLevels L
	modelParts br
	mouseWheelSensitivity S
	narratorStatus bh
	optionsFile bt
	overrideHeight E
	overrideWidth D
	particles bg
	pauseOnLostFocus B
	prioritizeChunkUpdates r
	rawMouseInput T
	realmsNotifications af
	reducedDebugInfo ah
	renderClouds o
	renderDebug aW
	renderDebugCharts aX
	renderDistance k
	renderFpsChart aY
	resourcePacks s
	screenEffectScale bc
	sensitivity j
	serverRenderDistance bq
	showAutosaveIndicator ar
	showSubtitles ai
	simulationDistance l
	skipMultiplayerWarning ap
	smoothCamera ba
	soundDevice bj
	sourceVolumes bs
	syncWrites bk
	textBackgroundOpacity x
	toggleCrouch an
	toggleSprint ao
	touchscreen ak
	tutorialStep O
	useNativeTransport M
	broadcastOptions ()V c
	dataFix (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	dumpOptionsForReport ()Ljava/lang/String; h
	getBackgroundColor (F)I b
	getBackgroundColor (I)I a
	getBackgroundOpacity (F)F a
	getCameraType ()Lnet/minecraft/client/CameraType; f
	getCloudsType ()Lnet/minecraft/client/CloudStatus; d
	getEffectiveRenderDistance ()I i
	getFile ()Ljava/io/File; g
	getSoundSourceVolume (Lnet/minecraft/sounds/SoundSource;)F a
	isFalse (Ljava/lang/String;)Z b
	isModelPartEnabled (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z a
	isTrue (Ljava/lang/String;)Z a
	load ()V a
	loadSelectedResourcePacks (Lnet/minecraft/server/packs/repository/PackRepository;)V a
	processOptions (Lnet/minecraft/client/Options$FieldAccess;)V a
	readAmbientOcclusion (Ljava/lang/String;)Lnet/minecraft/client/AmbientOcclusionStatus; e
	readCloudStatus (Ljava/lang/String;)Lnet/minecraft/client/CloudStatus; d
	readMainHand (Ljava/lang/String;)Lnet/minecraft/world/entity/HumanoidArm; f
	readPackList (Ljava/lang/String;)Ljava/util/List; c
	save ()V b
	setCameraType (Lnet/minecraft/client/CameraType;)V a
	setKey (Lnet/minecraft/client/KeyMapping;Lcom/mojang/blaze3d/platform/InputConstants$Key;)V a
	setModelPart (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V b
	setServerRenderDistance (I)V b
	setSoundCategoryVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	toggleModelPart (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V a
	useNativeTransport ()Z e
	writeCloudStatus (Lnet/minecraft/client/CloudStatus;)Ljava/lang/String; a
	writeMainHand (Lnet/minecraft/world/entity/HumanoidArm;)Ljava/lang/String; a
net/minecraft/client/Options$FieldAccess dxs$a
	process (Ljava/lang/String;D)D a
	process (Ljava/lang/String;F)F a
	process (Ljava/lang/String;I)I a
	process (Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object; a
	process (Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/IntFunction;Ljava/util/function/ToIntFunction;)Ljava/lang/Object; a
	process (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	process (Ljava/lang/String;Z)Z a
net/minecraft/client/ParticleStatus dxt
	$VALUES g
	ALL a
	BY_ID d
	DECREASED b
	MINIMAL c
	id e
	key f
	$values ()[Lnet/minecraft/client/ParticleStatus; c
	byId (I)Lnet/minecraft/client/ParticleStatus; a
	getId ()I b
	getKey ()Ljava/lang/String; a
net/minecraft/client/PrioritizeChunkUpdates dxu
	$VALUES g
	BY_ID d
	NEARBY c
	NONE a
	PLAYER_AFFECTED b
	id e
	key f
	$values ()[Lnet/minecraft/client/PrioritizeChunkUpdates; c
	byId (I)Lnet/minecraft/client/PrioritizeChunkUpdates; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/ProgressOption dxv
	getter ai
	maxValue ah
	minValue ag
	setter aj
	steps af
	toString ak
	tooltipSupplier al
	clamp (D)D d
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	get (Lnet/minecraft/client/Options;)D a
	getMaxValue ()D c
	getMessage (Lnet/minecraft/client/Options;)Lnet/minecraft/network/chat/Component; b
	getMinValue ()D b
	set (Lnet/minecraft/client/Options;D)V a
	setMaxValue (F)V a
	toPct (D)D a
	toValue (D)D b
net/minecraft/client/RecipeBookCategories dxw
	$VALUES y
	AGGREGATE_CATEGORIES w
	BLAST_FURNACE_BLOCKS k
	BLAST_FURNACE_CATEGORIES t
	BLAST_FURNACE_MISC l
	BLAST_FURNACE_SEARCH j
	CAMPFIRE q
	CRAFTING_BUILDING_BLOCKS b
	CRAFTING_CATEGORIES v
	CRAFTING_EQUIPMENT d
	CRAFTING_MISC e
	CRAFTING_REDSTONE c
	CRAFTING_SEARCH a
	FURNACE_BLOCKS h
	FURNACE_CATEGORIES u
	FURNACE_FOOD g
	FURNACE_MISC i
	FURNACE_SEARCH f
	SMITHING p
	SMOKER_CATEGORIES s
	SMOKER_FOOD n
	SMOKER_SEARCH m
	STONECUTTER o
	UNKNOWN r
	itemIcons x
	$values ()[Lnet/minecraft/client/RecipeBookCategories; b
	getCategories (Lnet/minecraft/world/inventory/RecipeBookType;)Ljava/util/List; a
	getIconItems ()Ljava/util/List; a
net/minecraft/client/ResourceLoadStateTracker dxx
	LOGGER a
	reloadCount c
	reloadState b
	fillCrashReport (Lnet/minecraft/CrashReport;)V a
	finishReload ()V a
	startRecovery (Ljava/lang/Throwable;)V a
	startReload (Lnet/minecraft/client/ResourceLoadStateTracker$ReloadReason;Ljava/util/List;)V a
net/minecraft/client/ResourceLoadStateTracker$RecoveryInfo dxx$a
	error a
	fillCrashInfo (Lnet/minecraft/CrashReportCategory;)V a
net/minecraft/client/ResourceLoadStateTracker$ReloadReason dxx$b
	$VALUES e
	INITIAL a
	MANUAL b
	UNKNOWN c
	name d
	$values ()[Lnet/minecraft/client/ResourceLoadStateTracker$ReloadReason; a
net/minecraft/client/ResourceLoadStateTracker$ReloadState dxx$c
	finished d
	packs b
	recoveryReloadInfo c
	reloadReason a
	fillCrashInfo (Lnet/minecraft/CrashReportCategory;)V a
net/minecraft/client/Screenshot dxy
	DATE_FORMAT b
	LOGGER a
	bytes e
	file h
	height g
	outputStream d
	rowHeight c
	width f
	_grab (Ljava/io/File;Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V b
	addRegion (Ljava/nio/ByteBuffer;IIII)V a
	close ()Ljava/io/File; b
	getFile (Ljava/io/File;)Ljava/io/File; a
	grab (Ljava/io/File;Lcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V a
	grab (Ljava/io/File;Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V a
	saveRow ()V a
	takeScreenshot (Lcom/mojang/blaze3d/pipeline/RenderTarget;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/Session dxz
	difficulty c
	gameMode d
	id e
	isRemoteServer b
	players a
net/minecraft/client/StringSplitter dya
	widthProvider a
	componentStyleAtWidth (Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/network/chat/Style; a
	componentStyleAtWidth (Lnet/minecraft/util/FormattedCharSequence;I)Lnet/minecraft/network/chat/Style; a
	findLineBreak (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I f
	formattedHeadByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; e
	formattedIndexByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I d
	getWordPosition (Ljava/lang/String;IIZ)I a
	headByWidth (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
	plainHeadByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; b
	plainIndexAtWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I a
	plainTailByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; c
	splitLines (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/util/List; g
	splitLines (Ljava/lang/String;ILnet/minecraft/network/chat/Style;ZLnet/minecraft/client/StringSplitter$LinePosConsumer;)V a
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;)Ljava/util/List; b
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;Ljava/util/function/BiConsumer;)V a
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/FormattedText;)Ljava/util/List; a
	stringWidth (Ljava/lang/String;)F a
	stringWidth (Lnet/minecraft/network/chat/FormattedText;)F a
	stringWidth (Lnet/minecraft/util/FormattedCharSequence;)F a
net/minecraft/client/StringSplitter$FlatComponents dya$a
	flatParts b
	parts a
	charAt (I)C a
	getRemainder ()Lnet/minecraft/network/chat/FormattedText; a
	splitAt (IILnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/StringSplitter$LineBreakFinder dya$b
	hadNonZeroWidthChar e
	lastSpace g
	lastSpaceStyle h
	lineBreak c
	lineBreakStyle d
	maxWidth b
	nextChar i
	offset j
	width f
	addToOffset (I)V a
	finishIteration (ILnet/minecraft/network/chat/Style;)Z a
	getSplitPosition ()I a
	getSplitStyle ()Lnet/minecraft/network/chat/Style; b
	lineBreakFound ()Z c
net/minecraft/client/StringSplitter$LineComponent dya$c
	contents a
	style d
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/client/StringSplitter$LinePosConsumer dya$d
net/minecraft/client/StringSplitter$WidthLimitedCharSink dya$e
	maxWidth b
	position c
	getPosition ()I a
	resetPosition ()V b
net/minecraft/client/StringSplitter$WidthProvider dya$f
net/minecraft/client/Timer dyb
	lastMs c
	msPerTick d
	partialTick a
	tickDelta b
	advanceTime (J)I a
net/minecraft/client/ToggleKeyMapping dyc
	needsToggle h
	setDown (Z)V a
net/minecraft/client/User dyd
	accessToken c
	clientId e
	name a
	type f
	uuid b
	xuid d
	getAccessToken ()Ljava/lang/String; d
	getClientId ()Ljava/util/Optional; e
	getGameProfile ()Lcom/mojang/authlib/GameProfile; g
	getName ()Ljava/lang/String; c
	getSessionId ()Ljava/lang/String; a
	getType ()Lnet/minecraft/client/User$Type; h
	getUuid ()Ljava/lang/String; b
	getXuid ()Ljava/util/Optional; f
net/minecraft/client/User$Type dyd$a
	$VALUES f
	BY_NAME d
	LEGACY a
	MOJANG b
	MSA c
	name e
	$values ()[Lnet/minecraft/client/User$Type; b
	byName (Ljava/lang/String;)Lnet/minecraft/client/User$Type; a
	getName ()Ljava/lang/String; a
net/minecraft/client/color/block/BlockColor dye
net/minecraft/client/color/block/BlockColors dyf
	DEFAULT a
	blockColors b
	coloringStates c
	addColoringState (Lnet/minecraft/world/level/block/state/properties/Property;[Lnet/minecraft/world/level/block/Block;)V a
	addColoringStates (Ljava/util/Set;[Lnet/minecraft/world/level/block/Block;)V a
	createDefault ()Lnet/minecraft/client/color/block/BlockColors; a
	getColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;I)I a
	getColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getColoringProperties (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; a
	register (Lnet/minecraft/client/color/block/BlockColor;[Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/client/color/block/BlockTintCache dyg
	MAX_CACHE_ENTRIES a
	cache c
	latestChunkOnThread b
	lock d
	source e
	findOrCreateChunkCache (II)Lnet/minecraft/client/color/block/BlockTintCache$CacheData; b
	getColor (Lnet/minecraft/core/BlockPos;)I a
	invalidateAll ()V a
	invalidateForChunk (II)V a
net/minecraft/client/color/block/BlockTintCache$CacheData dyg$a
	BLOCKS_PER_LAYER c
	cache a
	lock b
	allocateLayer ()[I a
	getLayer (I)[I a
net/minecraft/client/color/block/BlockTintCache$LatestCacheInfo dyg$b
	cache c
	x a
	z b
net/minecraft/client/color/item/ItemColor dyi
net/minecraft/client/color/item/ItemColors dyj
	DEFAULT a
	itemColors b
	createDefault (Lnet/minecraft/client/color/block/BlockColors;)Lnet/minecraft/client/color/item/ItemColors; a
	getColor (Lnet/minecraft/world/item/ItemStack;I)I a
	register (Lnet/minecraft/client/color/item/ItemColor;[Lnet/minecraft/world/level/ItemLike;)V a
net/minecraft/client/gui/Font dyl
	ALPHA_CUTOFF a
	EFFECT_DEPTH d
	SHADOW_OFFSET e
	fonts f
	lineHeight b
	random c
	splitter g
	adjustColor (I)I a
	bidirectionalShaping (Ljava/lang/String;)Ljava/lang/String; a
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFI)I b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;FFI)I b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/FormattedCharSequence;FFI)I b
	drawInBatch (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I a
	drawInBatch (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZIIZ)I a
	drawInBatch (Lnet/minecraft/network/chat/Component;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I a
	drawInBatch (Lnet/minecraft/util/FormattedCharSequence;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I a
	drawInBatch8xOutline (Lnet/minecraft/util/FormattedCharSequence;FFIILcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	drawInternal (Ljava/lang/String;FFILcom/mojang/math/Matrix4f;ZZ)I a
	drawInternal (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZIIZ)I b
	drawInternal (Lnet/minecraft/util/FormattedCharSequence;FFILcom/mojang/math/Matrix4f;Z)I a
	drawInternal (Lnet/minecraft/util/FormattedCharSequence;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I b
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFI)I a
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFIZ)I a
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;FFI)I a
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/FormattedCharSequence;FFI)I a
	drawWordWrap (Lnet/minecraft/network/chat/FormattedText;IIII)V a
	getFontSet (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/gui/font/FontSet; a
	getSplitter ()Lnet/minecraft/client/StringSplitter; b
	isBidirectional ()Z a
	plainSubstrByWidth (Ljava/lang/String;I)Ljava/lang/String; a
	plainSubstrByWidth (Ljava/lang/String;IZ)Ljava/lang/String; a
	renderChar (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph;ZZFFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
	renderText (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)F b
	renderText (Lnet/minecraft/util/FormattedCharSequence;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)F c
	split (Lnet/minecraft/network/chat/FormattedText;I)Ljava/util/List; b
	substrByWidth (Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/network/chat/FormattedText; a
	width (Ljava/lang/String;)I b
	width (Lnet/minecraft/network/chat/FormattedText;)I a
	width (Lnet/minecraft/util/FormattedCharSequence;)I a
	wordWrapHeight (Ljava/lang/String;I)I b
net/minecraft/client/gui/Font$DisplayMode dyl$a
	$VALUES d
	NORMAL a
	POLYGON_OFFSET c
	SEE_THROUGH b
	$values ()[Lnet/minecraft/client/gui/Font$DisplayMode; a
net/minecraft/client/gui/Font$StringRenderOutput dyl$b
	a h
	b g
	bufferSource a
	dimFactor d
	dropShadow c
	effects n
	g f
	mode j
	packedLightCoords k
	pose i
	r e
	x l
	y m
	addEffect (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph$Effect;)V a
	finish (IF)F a
net/minecraft/client/gui/Gui dym
	AUTOSAVE_FADE_SPEED_FACTOR t
	COLOR_WHITE l
	DEMO_EXPIRED_TEXT j
	HEART_SEPARATION s
	HEART_SIZE r
	LINE_HEIGHT o
	MIN_CROSSHAIR_ATTACK_SPEED m
	NUM_HEARTS_PER_ROW n
	PORTAL_OVERLAY_ALPHA_MIN q
	POWDER_SNOW_OUTLINE_LOCATION i
	PUMPKIN_BLUR_LOCATION d
	SAVING_TEXT k
	SPACER p
	SPYGLASS_SCOPE_LOCATION e
	VIGNETTE_LOCATION b
	WIDGETS_LOCATION c
	animateOverlayMessageColor B
	autosaveIndicatorValue V
	bossOverlay I
	chat x
	chatListeners X
	debugScreen E
	displayHealth Q
	healthBlinkTime S
	itemRenderer w
	lastAutosaveIndicatorValue W
	lastHealth P
	lastHealthTime R
	lastToolHighlight D
	minecraft v
	overlayMessageString z
	overlayMessageTime A
	random u
	scopeScale Y
	screenHeight U
	screenWidth T
	spectatorGui G
	subtitle L
	subtitleOverlay F
	tabList H
	tickCount y
	title K
	titleFadeInTime M
	titleFadeOutTime O
	titleStayTime N
	titleTime J
	toolHighlightTimer C
	vignetteBrightness a
	canRenderCrosshairForSpectator (Lnet/minecraft/world/phys/HitResult;)Z a
	clear ()V b
	clearCache ()V j
	displayScoreboardSidebar (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/scores/Objective;)V a
	drawBackdrop (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;III)V a
	getBossOverlay ()Lnet/minecraft/client/gui/components/BossHealthOverlay; i
	getCameraPlayer ()Lnet/minecraft/world/entity/player/Player; l
	getChat ()Lnet/minecraft/client/gui/components/ChatComponent; c
	getFont ()Lnet/minecraft/client/gui/Font; e
	getGuiTicks ()I d
	getPlayerVehicleWithHealth ()Lnet/minecraft/world/entity/LivingEntity; m
	getSpectatorGui ()Lnet/minecraft/client/gui/components/spectator/SpectatorGui; f
	getTabList ()Lnet/minecraft/client/gui/components/PlayerTabOverlay; g
	getVehicleMaxHearts (Lnet/minecraft/world/entity/LivingEntity;)I a
	getVisibleVehicleHeartRows (I)I a
	guessChatUUID (Lnet/minecraft/network/chat/Component;)Ljava/util/UUID; d
	handleChat (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	onDisconnected ()V h
	render (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	renderCrosshair (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	renderDemoOverlay (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	renderEffects (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderExperienceBar (Lcom/mojang/blaze3d/vertex/PoseStack;I)V b
	renderHeart (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Gui$HeartType;IIIZZ)V a
	renderHearts (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/player/Player;IIIIFIIIZ)V a
	renderHotbar (FLcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderJumpMeter (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	renderPlayerHealth (Lcom/mojang/blaze3d/vertex/PoseStack;)V e
	renderPortalOverlay (F)V b
	renderSavingIndicator (Lcom/mojang/blaze3d/vertex/PoseStack;)V g
	renderSelectedItemName (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderSlot (IIFLnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;I)V a
	renderSpyglassOverlay (F)V a
	renderTextureOverlay (Lnet/minecraft/resources/ResourceLocation;F)V a
	renderVehicleHealth (Lcom/mojang/blaze3d/vertex/PoseStack;)V f
	renderVignette (Lnet/minecraft/world/entity/Entity;)V b
	resetTitleTimes ()V a
	setNowPlaying (Lnet/minecraft/network/chat/Component;)V a
	setOverlayMessage (Lnet/minecraft/network/chat/Component;Z)V a
	setSubtitle (Lnet/minecraft/network/chat/Component;)V b
	setTimes (III)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V c
	tick ()V n
	tick (Z)V a
	tickAutosaveIndicator ()V o
	updateVignetteBrightness (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/client/gui/Gui$HeartType dym$a
	$VALUES i
	ABSORBING e
	CONTAINER a
	FROZEN f
	NORMAL b
	POISIONED c
	WITHERED d
	canBlink h
	index g
	$values ()[Lnet/minecraft/client/gui/Gui$HeartType; a
	forPlayer (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/client/gui/Gui$HeartType; a
	getX (ZZ)I a
net/minecraft/client/gui/GuiComponent dyn
	BACKGROUND_LOCATION f
	GUI_ICONS_LOCATION h
	STATS_ICON_LOCATION g
	blitOffset a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V b
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIILnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	blitOutlineBlack (IILjava/util/function/BiConsumer;)V a
	drawCenteredString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)V a
	drawCenteredString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;III)V a
	drawCenteredString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/util/FormattedCharSequence;III)V a
	drawString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)V b
	drawString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;III)V b
	drawString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/util/FormattedCharSequence;III)V b
	fill (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V a
	fillGradient (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V a
	fillGradient (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIII)V a
	fillGradient (Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/BufferBuilder;IIIIIII)V a
	getBlitOffset ()I k
	hLine (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	innerBlit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIFFII)V a
	innerBlit (Lcom/mojang/math/Matrix4f;IIIIIFFFF)V a
	innerFill (Lcom/mojang/math/Matrix4f;IIIII)V a
	setBlitOffset (I)V d
	vLine (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
net/minecraft/client/gui/MapRenderer dyo
	HEIGHT d
	MAP_ICONS b
	MAP_ICONS_LOCATION a
	WIDTH c
	maps f
	textureManager e
	getOrCreateMapInstance (ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)Lnet/minecraft/client/gui/MapRenderer$MapInstance; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZI)V a
	resetData ()V a
	update (ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
net/minecraft/client/gui/MapRenderer$MapInstance dyo$a
	data b
	renderType d
	requiresUpload e
	texture c
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ZI)V a
	forceUpload ()V a
	replaceMapData (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	updateTexture ()V b
net/minecraft/client/gui/chat/ChatListener dyp
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
net/minecraft/client/gui/chat/NarratorChatListener dyq
	INSTANCE b
	LOGGER c
	NO_TITLE a
	narrator d
	clear ()V b
	destroy ()V c
	getStatus ()Lnet/minecraft/client/NarratorStatus; d
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	isActive ()Z a
	logNarratedMessage (Ljava/lang/String;)V b
	sayNow (Ljava/lang/String;)V a
	sayNow (Lnet/minecraft/network/chat/Component;)V a
	updateNarratorStatus (Lnet/minecraft/client/NarratorStatus;)V a
net/minecraft/client/gui/chat/OverlayChatListener dyr
	minecraft a
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
net/minecraft/client/gui/chat/StandardChatListener dys
	minecraft a
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
net/minecraft/client/gui/components/AbstractButton dyu
	keyPressed (III)Z a
	onClick (DD)V a
	onPress ()V c
net/minecraft/client/gui/components/AbstractOptionSliderButton dyv
	options a
net/minecraft/client/gui/components/AbstractSelectionList dyw
	centerListVertically m
	children a
	headerHeight n
	height e
	hovered v
	itemHeight c
	minecraft b
	renderBackground t
	renderHeader q
	renderSelection p
	renderTopAndBottom u
	scrollAmount o
	scrolling r
	selected s
	width d
	x0 l
	x1 k
	y0 i
	y1 j
	addEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)I b
	bindEntryToSelf (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V f
	centerScrollOn (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V c
	children ()Ljava/util/List; i
	clearEntries ()V j
	clickedHeader (II)V a
	ensureVisible (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V d
	getEntry (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; e
	getEntryAtPosition (DD)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	getFocused ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; h
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; u
	getHovered ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; t
	getItemCount ()I l
	getMaxPosition ()I b
	getMaxScroll ()I n
	getRowBottom (I)I b
	getRowLeft ()I q
	getRowRight ()I r
	getRowTop (I)I h
	getRowWidth ()I c
	getScrollAmount ()D m
	getScrollBottom ()I o
	getScrollbarPosition ()I d
	getSelected ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; g
	isFocused ()Z a
	isMouseOver (DD)Z a_
	isSelectedItem (I)Z f
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;Ljava/util/function/Predicate;)V a
	narrateListElementPosition (Lnet/minecraft/client/gui/narration/NarrationElementOutput;Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; s
	refreshSelection ()V p
	remove (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; i
	removeEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Z e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderDecorations (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
	renderList (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIF)V a
	replaceEntries (Ljava/util/Collection;)V a
	scroll (I)V a
	setLeftPos (I)V g
	setRenderBackground (Z)V c_
	setRenderHeader (ZI)V a
	setRenderSelection (Z)V a
	setRenderTopAndBottom (Z)V c
	setScrollAmount (D)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	updateScrollingState (DDI)V b
	updateSize (IIII)V a
net/minecraft/client/gui/components/AbstractSelectionList$Entry dyw$a
	list a
	isMouseOver (DD)Z a_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection dyw$b
	$VALUES c
	DOWN b
	UP a
	$values ()[Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection; a
net/minecraft/client/gui/components/AbstractSelectionList$TrackedList dyw$c
	delegate b
	add (ILnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V b
	get (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	remove (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; b
	set (ILnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
net/minecraft/client/gui/components/AbstractSliderButton dyx
	value b
	applyValue ()V a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aj_
	getYImage (Z)I a
	keyPressed (III)Z a
	onClick (DD)V a
	onDrag (DDDD)V a
	onRelease (DD)V b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;II)V a
	setValue (D)V b
	setValueFromMouse (D)V a
	updateMessage ()V b
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/AbstractWidget dyy
	WIDGETS_LOCATION i
	active o
	alpha q
	focused b
	height k
	isHovered n
	message a
	visible p
	width j
	x l
	y m
	changeFocus (Z)Z b
	clicked (DD)Z c
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aj_
	defaultButtonNarrationText (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
	getHeight ()I d
	getMessage ()Lnet/minecraft/network/chat/Component; g
	getWidth ()I f
	getYImage (Z)I a
	isActive ()Z ak_
	isFocused ()Z h
	isHoveredOrFocused ()Z e
	isMouseOver (DD)Z a_
	isValidClickButton (I)Z d_
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; s
	onClick (DD)V a
	onDrag (DDDD)V a
	onFocusedChanged (Z)V c
	onRelease (DD)V b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;II)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setAlpha (F)V a
	setFocused (Z)V d
	setMessage (Lnet/minecraft/network/chat/Component;)V b
	setWidth (I)V b
	wrapDefaultNarrationMessage (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/client/gui/components/BossHealthOverlay dyz
	BAR_HEIGHT c
	BAR_WIDTH b
	GUI_BARS_LOCATION a
	OVERLAY_OFFSET d
	events i
	minecraft e
	drawBar (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/BossEvent;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	reset ()V a
	shouldCreateWorldFog ()Z d
	shouldDarkenScreen ()Z c
	shouldPlayMusic ()Z b
	update (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
net/minecraft/client/gui/components/Button dza
	NO_TOOLTIP r
	onPress s
	onTooltip t
	onPress ()V c
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/Button$OnPress dza$a
net/minecraft/client/gui/components/Button$OnTooltip dza$b
	narrateTooltip (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/components/ChatComponent dzb
	LOGGER a
	MAX_CHAT_HISTORY b
	allMessages e
	chatQueue j
	chatScrollbarPos k
	lastMessage m
	minecraft c
	newMessageSinceScroll l
	recentChat d
	trimmedMessages i
	addMessage (Lnet/minecraft/network/chat/Component;)V a
	addMessage (Lnet/minecraft/network/chat/Component;I)V a
	addMessage (Lnet/minecraft/network/chat/Component;IIZ)V a
	addRecentChat (Ljava/lang/String;)V a
	clearMessages (Z)V a
	enqueueMessage (Lnet/minecraft/network/chat/Component;)V b
	getChatRateMillis ()J j
	getClickedComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; b
	getHeight ()I e
	getHeight (D)I c
	getLinesPerPage ()I g
	getRecentChat ()Ljava/util/List; b
	getScale ()D f
	getTimeFactor (I)D a
	getWidth ()I d
	getWidth (D)I b
	handleChatQueueClicked (DD)Z a
	isChatFocused ()Z i
	isChatHidden ()Z h
	processPendingMessages ()V l
	removeById (I)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	rescaleChat ()V a
	resetChatScroll ()V c
	scrollChat (D)V a
net/minecraft/client/gui/components/Checkbox dzc
	TEXTURE a
	TEXT_COLOR b
	selected c
	showLabel d
	onPress ()V c
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	selected ()Z a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/CommandSuggestions dzd
	ARGUMENT_STYLES d
	LITERAL_STYLE c
	UNPARSED_STYLE b
	WHITESPACE_PATTERN a
	allowSuggestions u
	anchorToBottom m
	commandUsage o
	commandUsagePosition p
	commandUsageWidth q
	commandsOnly i
	currentParse r
	fillColor n
	font h
	input g
	keepSuggestions v
	lineStartOffset k
	minecraft e
	onlyShowIfCursorPastError j
	pendingSuggestions s
	screen f
	suggestionLineLimit l
	suggestions t
	calculateSuggestionSuffix (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	fillNodeUsage (Lnet/minecraft/ChatFormatting;)V a
	formatChat (Ljava/lang/String;I)Lnet/minecraft/util/FormattedCharSequence; a
	formatText (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Lnet/minecraft/util/FormattedCharSequence; a
	getExceptionMessage (Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Lnet/minecraft/util/FormattedCharSequence; a
	getLastWordIndex (Ljava/lang/String;)I a
	getNarrationMessage ()Ljava/lang/String; b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (D)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setAllowSuggestions (Z)V a
	showSuggestions (Z)V b
	sortSuggestions (Lcom/mojang/brigadier/suggestion/Suggestions;)Ljava/util/List; a
	updateCommandInfo ()V a
	updateUsageInfo ()V c
net/minecraft/client/gui/components/CommandSuggestions$SuggestionsList dzd$a
	current f
	lastMouse g
	lastNarratedEntry i
	offset e
	originalContents c
	rect b
	suggestionList d
	tabCycles h
	cycle (I)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; c
	hide ()V b
	keyPressed (III)Z b
	mouseClicked (III)Z a
	mouseScrolled (D)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	select (I)V b
	useSuggestion ()V a
net/minecraft/client/gui/components/ComponentRenderUtils dze
	INDENT a
	stripColor (Ljava/lang/String;)Ljava/lang/String; a
	wrapComponents (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/client/gui/Font;)Ljava/util/List; a
net/minecraft/client/gui/components/ContainerObjectSelectionList dzf
	hasFocus a
	changeFocus (Z)Z b
	isSelectedItem (I)Z f
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; s
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry dzf$a
	dragging c
	focused a
	lastNarratable b
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; u
	isDragging ()Z ai_
	narratables ()Ljava/util/List; b
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/CycleButton dzg
	BOOLEAN_OPTIONS b
	DEFAULT_ALT_LIST_SELECTOR a
	displayOnlyValue w
	index d
	name c
	narrationProvider t
	onValueChange u
	tooltipSupplier v
	value e
	valueStringifier s
	values r
	booleanBuilder (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	builder (Ljava/util/function/Function;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	createDefaultNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; b
	createFullName (Ljava/lang/Object;)Lnet/minecraft/network/chat/MutableComponent; d
	createLabelForValue (Ljava/lang/Object;)Lnet/minecraft/network/chat/Component; c
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aj_
	cycleValue (I)V c
	getCycledValue (I)Ljava/lang/Object; e
	getTooltip ()Ljava/util/List; j
	getValue ()Ljava/lang/Object; a
	mouseScrolled (DDD)Z a
	onOffBuilder ()Lnet/minecraft/client/gui/components/CycleButton$Builder; l
	onOffBuilder (Z)Lnet/minecraft/client/gui/components/CycleButton$Builder; e
	onPress ()V c
	setValue (Ljava/lang/Object;)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
	updateValue (Ljava/lang/Object;)V b
net/minecraft/client/gui/components/CycleButton$Builder dzg$a
	displayOnlyValue g
	initialIndex a
	initialValue b
	narrationProvider e
	tooltipSupplier d
	valueStringifier c
	values f
	create (IIIILnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/CycleButton; a
	create (IIIILnet/minecraft/network/chat/Component;Lnet/minecraft/client/gui/components/CycleButton$OnValueChange;)Lnet/minecraft/client/gui/components/CycleButton; a
	displayOnlyValue ()Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withCustomNarration (Ljava/util/function/Function;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withInitialValue (Ljava/lang/Object;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withTooltip (Lnet/minecraft/client/gui/components/CycleButton$TooltipSupplier;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues ([Ljava/lang/Object;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
net/minecraft/client/gui/components/CycleButton$OnValueChange dzg$b
net/minecraft/client/gui/components/CycleButton$TooltipSupplier dzg$c
net/minecraft/client/gui/components/CycleButton$ValueListSupplier dzg$d
	create (Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	create (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	getDefaultList ()Ljava/util/List; b
	getSelectedList ()Ljava/util/List; a
net/minecraft/client/gui/components/DebugScreenOverlay dzh
	COLOR_GREY a
	GREEN r
	HEIGHTMAP_NAMES e
	MARGIN_LEFT c
	MARGIN_RIGHT b
	MARGIN_TOP d
	RED p
	YELLOW q
	block k
	clientChunk n
	font j
	lastPos m
	liquid l
	minecraft i
	serverChunk o
	bytesToMegabytes (J)J a
	clearChunkCache ()V a
	colorLerp (IIF)I a
	drawChart (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/FrameTimer;IIZ)V a
	drawGameInformation (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawSystemInformation (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	getClientChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; h
	getGameInformation ()Ljava/util/List; b
	getLevel ()Lnet/minecraft/world/level/Level; f
	getPropertyValueString (Ljava/util/Map$Entry;)Ljava/lang/String; a
	getSampleColor (IIII)I a
	getServerChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; g
	getServerChunkStats ()Ljava/lang/String; e
	getServerLevel ()Lnet/minecraft/server/level/ServerLevel; d
	getSystemInformation ()Ljava/util/List; c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/EditBox dzi
	BACKGROUND_COLOR u
	BACKWARDS a
	BORDER_COLOR t
	BORDER_COLOR_FOCUSED s
	CURSOR_APPEND_CHARACTER r
	CURSOR_INSERT_COLOR e
	CURSOR_INSERT_WIDTH d
	DEFAULT_TEXT_COLOR c
	FORWARDS b
	bordered z
	canLoseFocus A
	cursorPos E
	displayPos D
	filter K
	font v
	formatter L
	frame y
	highlightPos F
	isEditable B
	maxLength x
	responder J
	shiftPressed C
	suggestion I
	textColor G
	textColorUneditable H
	value w
	canConsumeInput ()Z n
	changeFocus (Z)Z b
	charTyped (CI)Z a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aj_
	deleteChars (I)V e
	deleteText (I)V p
	deleteWords (I)V c
	getCursorPos (I)I q
	getCursorPosition ()I o
	getHighlighted ()Ljava/lang/String; j
	getInnerWidth ()I p
	getMaxLength ()I r
	getScreenX (I)I n
	getValue ()Ljava/lang/String; b
	getWordPosition (I)I f
	getWordPosition (II)I a
	getWordPosition (IIZ)I a
	insertText (Ljava/lang/String;)V b
	isBordered ()Z t
	isEditable ()Z u
	isMouseOver (DD)Z a_
	isVisible ()Z q
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	moveCursor (I)V g
	moveCursorTo (I)V h
	moveCursorToEnd ()V m
	moveCursorToStart ()V l
	onFocusedChanged (Z)V c
	onValueChange (Ljava/lang/String;)V d
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderHighlight (IIII)V a
	setBordered (Z)V f
	setCanLoseFocus (Z)V h
	setCursorPosition (I)V i
	setEditable (Z)V g
	setFilter (Ljava/util/function/Predicate;)V a
	setFocus (Z)V e
	setFormatter (Ljava/util/function/BiFunction;)V a
	setHighlightPos (I)V m
	setMaxLength (I)V j
	setResponder (Ljava/util/function/Consumer;)V a
	setSuggestion (Ljava/lang/String;)V c
	setTextColor (I)V k
	setTextColorUneditable (I)V l
	setValue (Ljava/lang/String;)V a
	setVisible (Z)V i
	setX (I)V o
	tick ()V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/ImageButton dzj
	resourceLocation a
	textureHeight u
	textureWidth e
	xTexStart b
	yDiffTex d
	yTexStart c
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
net/minecraft/client/gui/components/LerpingBossEvent dzk
	LERP_MILLISECONDS j
	setTime i
	targetPercent h
	getProgress ()F k
	setProgress (F)V a
net/minecraft/client/gui/components/LockIconButton dzl
	locked a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aj_
	isLocked ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setLocked (Z)V e
net/minecraft/client/gui/components/LockIconButton$Icon dzl$a
	$VALUES i
	LOCKED a
	LOCKED_DISABLED c
	LOCKED_HOVER b
	UNLOCKED d
	UNLOCKED_DISABLED f
	UNLOCKED_HOVER e
	x g
	y h
	$values ()[Lnet/minecraft/client/gui/components/LockIconButton$Icon; c
	getX ()I a
	getY ()I b
net/minecraft/client/gui/components/MultiLineLabel dzm
	EMPTY a
	create (Lnet/minecraft/client/gui/Font;Ljava/util/List;)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;II)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;[Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	createFixed (Lnet/minecraft/client/gui/Font;Ljava/util/List;)Lnet/minecraft/client/gui/components/MultiLineLabel; b
	getLineCount ()I a
	renderCentered (Lcom/mojang/blaze3d/vertex/PoseStack;II)I a
	renderCentered (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)I a
	renderLeftAligned (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)I b
	renderLeftAlignedNoShadow (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)I c
net/minecraft/client/gui/components/MultiLineLabel$TextWithWidth dzm$a
	text a
	width b
net/minecraft/client/gui/components/ObjectSelectionList dzn
	USAGE_NARRATION a
	inFocus o
	changeFocus (Z)Z b
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/ObjectSelectionList$Entry dzn$a
	changeFocus (Z)Z b
	getNarration ()Lnet/minecraft/network/chat/Component; b
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/OptionsList dzo
	addBig (Lnet/minecraft/client/Option;)I a
	addSmall (Lnet/minecraft/client/Option;Lnet/minecraft/client/Option;)V a
	addSmall ([Lnet/minecraft/client/Option;)V a
	findOption (Lnet/minecraft/client/Option;)Lnet/minecraft/client/gui/components/AbstractWidget; b
	getMouseOver (DD)Ljava/util/Optional; c
	getRowWidth ()I c
	getScrollbarPosition ()I d
net/minecraft/client/gui/components/OptionsList$Entry dzo$a
	children b
	options a
	big (Lnet/minecraft/client/Options;ILnet/minecraft/client/Option;)Lnet/minecraft/client/gui/components/OptionsList$Entry; a
	children ()Ljava/util/List; i
	narratables ()Ljava/util/List; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	small (Lnet/minecraft/client/Options;ILnet/minecraft/client/Option;Lnet/minecraft/client/Option;)Lnet/minecraft/client/gui/components/OptionsList$Entry; a
net/minecraft/client/gui/components/PlayerTabOverlay dzp
	HEART_EMPTY_CONTAINER b
	HEART_EMPTY_CONTAINER_BLINKING c
	HEART_FULL d
	HEART_GHOST_FULL k
	HEART_GHOST_HALF_FULL l
	HEART_GOLDEN_FULL i
	HEART_GOLDEN_HALF_FULL j
	HEART_HALF_FULL e
	MAX_ROWS_PER_COL a
	PLAYER_ORDERING m
	footer p
	gui o
	header q
	minecraft n
	visibilityId r
	visible s
	decorateName (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/Component; a
	getNameForDisplay (Lnet/minecraft/client/multiplayer/PlayerInfo;)Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;ILnet/minecraft/world/scores/Scoreboard;Lnet/minecraft/world/scores/Objective;)V a
	renderPingIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIILnet/minecraft/client/multiplayer/PlayerInfo;)V a
	renderTablistScore (Lnet/minecraft/world/scores/Objective;ILjava/lang/String;IILnet/minecraft/client/multiplayer/PlayerInfo;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	reset ()V a
	setFooter (Lnet/minecraft/network/chat/Component;)V a
	setHeader (Lnet/minecraft/network/chat/Component;)V b
	setVisible (Z)V a
net/minecraft/client/gui/components/PlayerTabOverlay$PlayerInfoComparator dzp$a
	compare (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/client/multiplayer/PlayerInfo;)I a
net/minecraft/client/gui/components/SliderButton dzq
	option c
	tooltip d
	applyValue ()V a
	getTooltip ()Ljava/util/List; j
	updateMessage ()V b
net/minecraft/client/gui/components/StateSwitchingButton dzr
	isStateTriggered b
	resourceLocation a
	xDiffTex e
	xTexStart c
	yDiffTex r
	yTexStart d
	initTextureValues (IIIILnet/minecraft/resources/ResourceLocation;)V a
	isStateTriggered ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
	setStateTriggered (Z)V e
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/SubtitleOverlay dzs
	DISPLAY_TIME a
	isListening d
	minecraft b
	subtitles c
	onPlaySound (Lnet/minecraft/client/resources/sounds/SoundInstance;Lnet/minecraft/client/sounds/WeighedSoundEvents;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/SubtitleOverlay$Subtitle dzs$a
	location c
	text a
	time b
	getLocation ()Lnet/minecraft/world/phys/Vec3; c
	getText ()Lnet/minecraft/network/chat/Component; a
	getTime ()J b
	refresh (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/client/gui/components/TooltipAccessor dzt
	getTooltip ()Ljava/util/List; j
net/minecraft/client/gui/components/VolumeSlider dzu
	source c
	applyValue ()V a
	updateMessage ()V b
net/minecraft/client/gui/components/Widget dzv
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/components/events/AbstractContainerEventHandler dzw
	focused a
	isDragging b
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; u
	isDragging ()Z ai_
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
net/minecraft/client/gui/components/events/ContainerEventHandler dzx
	changeFocus (Z)Z b
	charTyped (CI)Z a
	children ()Ljava/util/List; i
	getChildAt (DD)Ljava/util/Optional; d
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; u
	isDragging ()Z ai_
	keyPressed (III)Z a
	keyReleased (III)Z b
	magicalSpecialHackyFocus (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V c
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	setInitialFocus (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V b
net/minecraft/client/gui/components/events/GuiEventListener dzy
	changeFocus (Z)Z b
	charTyped (CI)Z a
	isMouseOver (DD)Z a_
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseMoved (DD)V e
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
net/minecraft/client/gui/components/spectator/SpectatorGui eab
	FADE_OUT_DELAY c
	FADE_OUT_TIME d
	SPECTATOR_LOCATION a
	WIDGETS_LOCATION b
	lastSelectionTime i
	menu j
	minecraft e
	getHotbarAlpha ()F c
	isMenuActive ()Z a
	onHotbarSelected (I)V a
	onMouseMiddleClick ()V b
	onMouseScrolled (D)V a
	onSpectatorMenuClosed (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
	renderHotbar (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderPage (Lcom/mojang/blaze3d/vertex/PoseStack;FIILnet/minecraft/client/gui/spectator/categories/SpectatorPage;)V a
	renderSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IIFFLnet/minecraft/client/gui/spectator/SpectatorMenuItem;)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
net/minecraft/client/gui/components/toasts/AdvancementToast ead
	advancement c
	playedSound d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
net/minecraft/client/gui/components/toasts/RecipeToast eae
	DESCRIPTION_TEXT e
	DISPLAY_TIME c
	TITLE_TEXT d
	changed h
	lastChanged g
	recipes f
	addItem (Lnet/minecraft/world/item/crafting/Recipe;)V a
	addOrUpdate (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/world/item/crafting/Recipe;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
net/minecraft/client/gui/components/toasts/SystemToast eaf
	DISPLAY_TIME c
	MAX_LINE_SIZE d
	changed i
	id e
	lastChanged h
	messageLines g
	title f
	width j
	add (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	addOrUpdate (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V b
	getToken ()Ljava/lang/Object; c
	getToken ()Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds; b
	multiline (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/toasts/SystemToast; a
	nullToEmpty (Lnet/minecraft/network/chat/Component;)Lcom/google/common/collect/ImmutableList; a
	onPackCopyFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V c
	onWorldAccessFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
	onWorldDeleteFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	renderBackgroundRow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;IIII)V a
	reset (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	width ()I a
net/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds eaf$a
	$VALUES h
	NARRATOR_TOGGLE b
	PACK_COPY_FAILURE g
	PACK_LOAD_FAILURE e
	TUTORIAL_HINT a
	WORLD_ACCESS_FAILURE f
	WORLD_BACKUP c
	WORLD_GEN_SETTINGS_TRANSFER d
	$values ()[Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds; a
net/minecraft/client/gui/components/toasts/Toast eag
	NO_TOKEN b
	TEXTURE a
	getToken ()Ljava/lang/Object; c
	height ()I d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	width ()I a
net/minecraft/client/gui/components/toasts/Toast$Visibility eag$a
	$VALUES d
	HIDE b
	SHOW a
	soundEvent c
	$values ()[Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	playSound (Lnet/minecraft/client/sounds/SoundManager;)V a
net/minecraft/client/gui/components/toasts/ToastComponent eah
	VISIBLE_TOASTS a
	minecraft b
	queued d
	visible c
	addToast (Lnet/minecraft/client/gui/components/toasts/Toast;)V a
	clear ()V a
	getMinecraft ()Lnet/minecraft/client/Minecraft; b
	getToast (Ljava/lang/Class;Ljava/lang/Object;)Lnet/minecraft/client/gui/components/toasts/Toast; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance eah$a
	ANIMATION_TIME b
	animationTime d
	toast c
	visibility f
	visibleTime e
	getToast ()Lnet/minecraft/client/gui/components/toasts/Toast; a
	getVisibility (J)F a
	render (IILcom/mojang/blaze3d/vertex/PoseStack;)Z a
net/minecraft/client/gui/components/toasts/TutorialToast eai
	PROGRESS_BAR_HEIGHT d
	PROGRESS_BAR_WIDTH c
	PROGRESS_BAR_X e
	PROGRESS_BAR_Y f
	icon g
	lastProgress l
	lastProgressTime k
	message i
	progress m
	progressable n
	title h
	visibility j
	hide ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	updateProgress (F)V a
net/minecraft/client/gui/components/toasts/TutorialToast$Icons eai$a
	$VALUES j
	MOUSE b
	MOVEMENT_KEYS a
	RECIPE_BOOK d
	RIGHT_CLICK g
	SOCIAL_INTERACTIONS f
	TREE c
	WOODEN_PLANKS e
	x h
	y i
	$values ()[Lnet/minecraft/client/gui/components/toasts/TutorialToast$Icons; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/GuiComponent;II)V a
net/minecraft/client/gui/font/AllMissingGlyphProvider eak
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/client/gui/font/FontManager eal
	FONTS_PATH c
	LOGGER b
	MISSING_FONT a
	fontSets e
	missingFontSet d
	reloadListener h
	renames g
	textureManager f
	createFont ()Lnet/minecraft/client/gui/Font; a
	getReloadListener ()Lnet/minecraft/server/packs/resources/PreparableReloadListener; b
	setRenames (Ljava/util/Map;)V a
net/minecraft/client/gui/font/FontSet eam
	RANDOM c
	SPACE_GLYPH a
	SPACE_INFO b
	glyphInfos j
	glyphs i
	glyphsByWidth k
	missingGlyph f
	name e
	providers h
	textureManager d
	textures l
	whiteGlyph g
	closeProviders ()V b
	closeTextures ()V c
	getGlyph (I)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; b
	getGlyphInfo (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getRandomGlyph (Lcom/mojang/blaze3d/font/GlyphInfo;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	getRaw (I)Lcom/mojang/blaze3d/font/RawGlyph; c
	reload (Ljava/util/List;)V a
	stitch (Lcom/mojang/blaze3d/font/RawGlyph;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	whiteGlyph ()Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
net/minecraft/client/gui/font/FontTexture ean
	SIZE e
	colored j
	name f
	normalType g
	polygonOffsetType i
	root k
	seeThroughType h
	add (Lcom/mojang/blaze3d/font/RawGlyph;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/gui/font/FontTexture$Node ean$a
	height d
	left e
	occupied g
	right f
	width c
	x a
	y b
	insert (Lcom/mojang/blaze3d/font/RawGlyph;)Lnet/minecraft/client/gui/font/FontTexture$Node; a
net/minecraft/client/gui/font/TextFieldHelper eao
	cursorPos f
	getClipboardFn c
	getMessageFn a
	selectionPos g
	setClipboardFn d
	setMessageFn b
	stringValidator e
	charTyped (C)Z a
	clampToMsgLength (I)I g
	copy ()V c
	createClipboardGetter (Lnet/minecraft/client/Minecraft;)Ljava/util/function/Supplier; a
	createClipboardSetter (Lnet/minecraft/client/Minecraft;)Ljava/util/function/Consumer; c
	cut ()V a
	deleteSelection (Ljava/lang/String;)Ljava/lang/String; c
	getClipboardContents (Lnet/minecraft/client/Minecraft;)Ljava/lang/String; b
	getCursorPos ()I g
	getSelected (Ljava/lang/String;)Ljava/lang/String; b
	getSelectionPos ()I h
	insertText (Ljava/lang/String;)V a
	insertText (Ljava/lang/String;Ljava/lang/String;)V a
	isSelecting ()Z i
	keyPressed (I)Z a
	moveByChars (I)V b
	moveByChars (IZ)V a
	moveByWords (I)V c
	moveByWords (IZ)V b
	paste ()V b
	removeCharsFromCursor (I)V d
	resetSelectionIfNeeded (Z)V a
	selectAll ()V d
	setClipboardContents (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
	setCursorPos (I)V e
	setCursorPos (IZ)V c
	setCursorToEnd ()V f
	setCursorToEnd (Z)V c
	setCursorToStart ()V e
	setCursorToStart (Z)V b
	setSelectionPos (I)V f
	setSelectionRange (II)V a
net/minecraft/client/gui/font/glyphs/BakedGlyph eap
	down k
	left h
	normalType a
	polygonOffsetType c
	right i
	seeThroughType b
	u0 d
	u1 e
	up j
	v0 f
	v1 g
	render (ZFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
	renderEffect (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph$Effect;Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;I)V a
	renderType (Lnet/minecraft/client/gui/Font$DisplayMode;)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/gui/font/glyphs/BakedGlyph$Effect eap$a
	a i
	b h
	depth e
	r f
	x0 a
	x1 c
	y0 b
	y1 d
net/minecraft/client/gui/font/glyphs/EmptyGlyph eaq
	render (ZFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
net/minecraft/client/gui/font/glyphs/MissingGlyph ear
	$VALUES e
	IMAGE_DATA d
	INSTANCE a
	MISSING_IMAGE_HEIGHT c
	MISSING_IMAGE_WIDTH b
	$values ()[Lnet/minecraft/client/gui/font/glyphs/MissingGlyph; m
	getOversample ()F h
	getPixelHeight ()I f
	getPixelWidth ()I e
	isColored ()Z g
	upload (II)V a
net/minecraft/client/gui/font/glyphs/WhiteGlyph eas
	$VALUES e
	HEIGHT c
	IMAGE_DATA d
	INSTANCE a
	WIDTH b
	$values ()[Lnet/minecraft/client/gui/font/glyphs/WhiteGlyph; m
	getOversample ()F h
	getPixelHeight ()I f
	getPixelWidth ()I e
	isColored ()Z g
	upload (II)V a
net/minecraft/client/gui/font/providers/BitmapProvider eav
	LOGGER a
	glyphs c
	image b
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/client/gui/font/providers/BitmapProvider$Builder eav$a
	ascent d
	chars b
	height c
	texture a
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/BitmapProvider$Builder; a
	getActualGlyphWidth (Lcom/mojang/blaze3d/platform/NativeImage;IIII)I a
net/minecraft/client/gui/font/providers/BitmapProvider$Glyph eav$b
	advance g
	ascent h
	height f
	image b
	offsetX c
	offsetY d
	scale a
	width e
	getBearingY ()F b
	getOversample ()F h
	getPixelHeight ()I f
	getPixelWidth ()I e
	isColored ()Z g
	upload (II)V a
net/minecraft/client/gui/font/providers/GlyphProviderBuilder eaw
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
net/minecraft/client/gui/font/providers/GlyphProviderBuilderType eax
	$VALUES g
	BITMAP a
	BY_NAME d
	LEGACY_UNICODE c
	TTF b
	factory f
	name e
	$values ()[Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilderType; a
	byName (Ljava/lang/String;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilderType; a
	create (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider eay
	CHARS_PER_SHEET c
	LOGGER a
	TEXTURE_SIZE d
	UNICODE_SHEETS b
	resourceManager e
	sizes f
	texturePattern g
	textures h
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getLeft (B)I a
	getRight (B)I b
	getSheetLocation (I)Lnet/minecraft/resources/ResourceLocation; b
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
	loadTexture (Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Builder eay$a
	metadata a
	texturePattern b
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
	getTemplate (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Glyph eay$b
	height b
	source e
	sourceX c
	sourceY d
	width a
	getBoldOffset ()F c
	getOversample ()F h
	getPixelHeight ()I f
	getPixelWidth ()I e
	getShadowOffset ()F d
	isColored ()Z g
	upload (II)V a
net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderBuilder eaz
	LOGGER a
	location b
	oversample d
	shiftX e
	shiftY f
	size c
	skip g
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
net/minecraft/client/gui/narration/NarratableEntry ebb
	isActive ()Z ak_
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; s
net/minecraft/client/gui/narration/NarratableEntry$NarrationPriority ebb$a
	$VALUES d
	FOCUSED c
	HOVERED b
	NONE a
	$values ()[Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; b
	isTerminal ()Z a
net/minecraft/client/gui/narration/NarratedElementType ebc
	$VALUES e
	HINT c
	POSITION b
	TITLE a
	USAGE d
	$values ()[Lnet/minecraft/client/gui/narration/NarratedElementType; a
net/minecraft/client/gui/narration/NarrationElementOutput ebd
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Ljava/lang/String;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/client/gui/narration/NarrationThunk;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/network/chat/Component;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;[Lnet/minecraft/network/chat/Component;)V a
	nest ()Lnet/minecraft/client/gui/narration/NarrationElementOutput; a
net/minecraft/client/gui/narration/NarrationSupplier ebe
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/narration/NarrationThunk ebf
	EMPTY a
	contents b
	converter c
	from (Ljava/lang/String;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	from (Ljava/util/List;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	from (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	getText (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/narration/ScreenNarrationCollector ebg
	entries b
	generation a
	collectNarrationText (Z)Ljava/lang/String; a
	update (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/narration/ScreenNarrationCollector$EntryKey ebg$a
	depth b
	type a
net/minecraft/client/gui/narration/ScreenNarrationCollector$NarrationEntry ebg$b
	alreadyNarrated c
	contents a
	generation b
	update (ILnet/minecraft/client/gui/narration/NarrationThunk;)Lnet/minecraft/client/gui/narration/ScreenNarrationCollector$NarrationEntry; a
net/minecraft/client/gui/narration/ScreenNarrationCollector$Output ebg$c
	depth b
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/client/gui/narration/NarrationThunk;)V a
	nest ()Lnet/minecraft/client/gui/narration/NarrationElementOutput; a
net/minecraft/client/gui/screens/AccessibilityOptionsScreen ebj
	GUIDE_LINK n
	OPTIONS c
	createFooter ()V f
net/minecraft/client/gui/screens/AlertScreen ebk
	callback c
	message n
	okButton b
	text a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/BackupConfirmScreen ebl
	description n
	eraseCache q
	id b
	lastScreen c
	listener a
	message p
	promptForCacheErase o
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/BackupConfirmScreen$Listener ebl$a
net/minecraft/client/gui/screens/ChatOptionsScreen ebm
	CHAT_OPTIONS c
net/minecraft/client/gui/screens/ChatScreen ebn
	MOUSE_SCROLL_SPEED a
	USAGE_TEXT c
	commandSuggestions q
	historyBuffer n
	historyPos o
	initial p
	input b
	init ()V b
	insertText (Ljava/lang/String;Z)V a
	isPauseScreen ()Z ah_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (DDD)Z a
	moveInHistory (I)V a
	onEdited (Ljava/lang/String;)V b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	setChatLine (Ljava/lang/String;)V c
	tick ()V d
	updateNarrationState (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/ConfirmLinkScreen ebo
	COPY_BUTTON_TEXT n
	WARNING_TEXT o
	showWarning q
	url p
	addButtons (I)V a
	copyToClipboard ()V h
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/ConfirmScreen ebp
	LABEL_Y n
	callback c
	delayTicker q
	exitButtons r
	message p
	noButton b
	title2 o
	yesButton a
	addButtons (I)V a
	addExitButton (Lnet/minecraft/client/gui/components/Button;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setDelay (I)V b
	shouldCloseOnEsc ()Z af_
	tick ()V d
net/minecraft/client/gui/screens/ConnectScreen ebq
	LOGGER c
	NARRATION_DELAY_MS n
	UNIQUE_THREAD_ID b
	UNKNOWN_HOST_MESSAGE a
	aborted p
	connection o
	lastNarration s
	parent q
	status r
	connect (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)V a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
	startConnecting (Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;Lnet/minecraft/client/multiplayer/ServerData;)V a
	tick ()V d
	updateStatus (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/gui/screens/CreateBuffetWorldScreen ebr
	BIOME_SELECT_INFO a
	applySettings c
	biome p
	biomes n
	doneButton q
	list o
	parent b
	init ()V b
	onClose ()V ag_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updateButtonValidity ()V h
net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList ebr$a
	isFocused ()Z a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry;)V a
net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry ebr$a$a
	biome b
	name c
	getNarration ()Lnet/minecraft/network/chat/Component; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/CreateFlatWorldScreen ebs
	SLOT_BG_SIZE c
	SLOT_BG_X o
	SLOT_BG_Y p
	SLOT_FG_X q
	SLOT_FG_Y r
	SLOT_STAT_HEIGHT n
	SLOT_TEX_SIZE b
	applySettings s
	columnHeight v
	columnType u
	deleteLayerButton x
	generator t
	list w
	parent a
	hasValidSelection ()Z w
	init ()V b
	onClose ()V ag_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setConfig (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)V a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; h
	updateButtonValidity ()V v
net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList ebs$a
	getScrollbarPosition ()I d
	isFocused ()Z a
	resetRows ()V e
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry;)V a
net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry ebs$a$a
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/ItemStack;)V a
	blitSlotBg (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	getDisplayItem (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/DatapackLoadFailureScreen ebt
	callback b
	message a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/DeathScreen ebu
	causeOfDeath b
	deathScore n
	delayTicker a
	exitButtons o
	hardcore c
	confirmResult (Z)V c
	exitToTitleScreen ()V h
	getClickedComponentStyleAt (I)Lnet/minecraft/network/chat/Style; a
	init ()V b
	isPauseScreen ()Z ah_
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
	tick ()V d
net/minecraft/client/gui/screens/DemoIntroScreen ebv
	DEMO_BACKGROUND_LOCATION a
	durationMessage c
	movementMessage b
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/DirectJoinServerScreen ebw
	ENTER_IP_LABEL a
	callback o
	ipEdit n
	lastScreen p
	selectButton b
	serverData c
	init ()V b
	keyPressed (III)Z a
	onClose ()V ag_
	onSelect ()V h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
	updateSelectButtonStatus ()V v
net/minecraft/client/gui/screens/DisconnectedScreen ebx
	message b
	parent c
	reason a
	textHeight n
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/EditServerScreen eby
	IP_LABEL b
	NAME_LABEL a
	addButton c
	callback n
	ipEdit p
	lastScreen r
	nameEdit q
	serverData o
	init ()V b
	onAdd ()V h
	onClose ()V ag_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
	updateAddButtonStatus ()V v
net/minecraft/client/gui/screens/ErrorScreen ebz
	message a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/GenericDirtMessageScreen eca
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/InBedChatScreen ecb
	init ()V b
	keyPressed (III)Z a
	onClose ()V ag_
	onPlayerWokeUp ()V h
	sendWakeUp ()V v
net/minecraft/client/gui/screens/LanguageSelectScreen ecc
	WARNING_LABEL c
	languageManager o
	packSelectionList n
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList ecc$a
	getRowWidth ()I c
	getScrollbarPosition ()I d
	isFocused ()Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry ecc$a$a
	language b
	getNarration ()Lnet/minecraft/network/chat/Component; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	select ()V a
net/minecraft/client/gui/screens/LevelLoadingScreen ecd
	COLORS o
	NARRATION_DELAY_MS a
	done n
	lastNarration c
	progressListener b
	getFormattedProgress ()Ljava/lang/String; h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderChunks (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/server/level/progress/StoringChunkProgressListener;IIII)V a
	shouldCloseOnEsc ()Z af_
	updateNarratedWidget (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/screens/LoadingOverlay ece
	BRAND_BACKGROUND i
	FADE_IN_TIME b
	FADE_OUT_TIME a
	LOGO_BACKGROUND_COLOR d
	LOGO_BACKGROUND_COLOR_DARK e
	LOGO_HALF m
	LOGO_OVERLAP n
	LOGO_QUARTER l
	LOGO_QUARTER_FLOAT k
	LOGO_SCALE j
	MOJANG_STUDIOS_LOGO_LOCATION c
	SMOOTHING o
	currentProgress t
	fadeIn s
	fadeInStart v
	fadeOutStart u
	minecraft p
	onFinish r
	reload q
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIF)V a
	isPauseScreen ()Z a
	registerTextures (Lnet/minecraft/client/Minecraft;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	replaceAlpha (II)I a
net/minecraft/client/gui/screens/LoadingOverlay$LogoTexture ece$a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
net/minecraft/client/gui/screens/MenuScreens ecf
	LOGGER a
	SCREENS b
	create (Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/Minecraft;ILnet/minecraft/network/chat/Component;)V a
	getConstructor (Lnet/minecraft/world/inventory/MenuType;)Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor; a
	register (Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor;)V a
	selfTest ()Z a
net/minecraft/client/gui/screens/MenuScreens$ScreenConstructor ecf$a
	fromPacket (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/Minecraft;I)V a
net/minecraft/client/gui/screens/MouseSettingsScreen ecg
	OPTIONS n
	list c
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/OnlineOptionsScreen ech
	ONLINE_OPTIONS c
	createFooter ()V f
net/minecraft/client/gui/screens/OptionsScreen eci
	OPTION_SCREEN_OPTIONS a
	difficultyButton n
	lastScreen b
	lockButton o
	options c
	createDifficultyButton (IIILjava/lang/String;Lnet/minecraft/client/Minecraft;)Lnet/minecraft/client/gui/components/CycleButton; a
	init ()V b
	lockCallback (Z)V c
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updatePackList (Lnet/minecraft/server/packs/repository/PackRepository;)V a
net/minecraft/client/gui/screens/OptionsSubScreen ecj
	lastScreen a
	options b
	onClose ()V ag_
	removed ()V e
	tooltipAt (Lnet/minecraft/client/gui/components/OptionsList;II)Ljava/util/List; a
net/minecraft/client/gui/screens/OutOfMemoryScreen eck
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/Overlay ecl
	isPauseScreen ()Z a
net/minecraft/client/gui/screens/PauseScreen ecm
	URL_BUGS c
	URL_FEEDBACK_RELEASE b
	URL_FEEDBACK_SNAPSHOT a
	showPauseMenu n
	createPauseMenu ()V h
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/PopupScreen ecn
	BUTTON_HEIGHT c
	BUTTON_MARGIN b
	BUTTON_PADDING a
	buttonOptions p
	buttonWidth s
	contentTop r
	message o
	messageLines q
	narrationMessage n
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/PopupScreen$ButtonOption ecn$a
	message a
	onPress b
net/minecraft/client/gui/screens/PresetFlatWorldScreen eco
	DEFAULT_BIOME t
	LOGGER a
	PRESETS s
	SLOT_BG_SIZE c
	SLOT_BG_X o
	SLOT_BG_Y p
	SLOT_FG_X q
	SLOT_FG_Y r
	SLOT_STAT_HEIGHT n
	SLOT_TEX_SIZE b
	export z
	list x
	listText w
	parent u
	selectButton y
	settings A
	shareText v
	fromString (Lnet/minecraft/core/Registry;Ljava/lang/String;Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	getLayerInfoFromString (Ljava/lang/String;I)Lnet/minecraft/world/level/levelgen/flat/FlatLayerInfo; a
	getLayersInfoFromString (Ljava/lang/String;)Ljava/util/List; b
	init ()V b
	mouseScrolled (DDD)Z a
	onClose ()V ag_
	preset (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/resources/ResourceKey;Ljava/util/List;ZZZ[Lnet/minecraft/world/level/levelgen/flat/FlatLayerInfo;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	save (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Ljava/lang/String; a
	tick ()V d
	updateButtonValidity (Z)V c
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetInfo eco$a
	icon a
	name b
	settings c
	getName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList eco$b
	isFocused ()Z a
	keyPressed (III)Z a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry;)V a
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry eco$b$a
	preset b
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/Item;)V a
	blitSlotBg (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	select ()V a
net/minecraft/client/gui/screens/ProgressScreen ecp
	clearScreenAfterStop o
	header a
	progress c
	stage b
	stop n
	progressStage (Lnet/minecraft/network/chat/Component;)V c
	progressStagePercentage (I)V a
	progressStart (Lnet/minecraft/network/chat/Component;)V b
	progressStartNoAbort (Lnet/minecraft/network/chat/Component;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
	stop ()V a
net/minecraft/client/gui/screens/ReceivingLevelScreen ecq
	DOWNLOADING_TERRAIN_TEXT a
	isPauseScreen ()Z ah_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
net/minecraft/client/gui/screens/Screen ecr
	ALLOWED_PROTOCOLS b
	EXTRA_SPACE_AFTER_FIRST_TOOLTIP_LINE c
	LOGGER a
	NARRATE_DELAY_KEYBOARD_ACTION w
	NARRATE_DELAY_MOUSE_ACTION v
	NARRATE_DELAY_MOUSE_MOVE u
	NARRATE_DELAY_NARRATOR_ENABLED t
	NARRATE_SUPPRESS_AFTER_INIT_TIME s
	USAGE_NARRATION n
	children o
	clickedLink r
	font m
	height k
	itemRenderer i
	lastNarratable A
	minecraft e
	narratables p
	narrationState x
	narrationSuppressTime y
	nextNarrationTime z
	passEvents l
	renderables q
	title d
	width j
	addRenderableOnly (Lnet/minecraft/client/gui/components/Widget;)Lnet/minecraft/client/gui/components/Widget; a
	addRenderableWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; d
	addWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; e
	afterKeyboardAction ()V r
	afterMouseAction ()V q
	afterMouseMove ()V p
	children ()Ljava/util/List; i
	clearWidgets ()V l
	confirmLink (Z)V c
	findNarratableWidget (Ljava/util/List;Lnet/minecraft/client/gui/narration/NarratableEntry;)Lnet/minecraft/client/gui/screens/Screen$NarratableSearchResult; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	getTitle ()Lnet/minecraft/network/chat/Component; j
	getTooltipFromItem (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	handleComponentClicked (Lnet/minecraft/network/chat/Style;)Z a
	handleDelayedNarration ()V s
	hasAltDown ()Z o
	hasControlDown ()Z m
	hasShiftDown ()Z n
	init ()V b
	init (Lnet/minecraft/client/Minecraft;II)V b
	insertText (Ljava/lang/String;Z)V a
	isCopy (I)Z h
	isCut (I)Z f
	isMouseOver (DD)Z a_
	isPaste (I)Z g
	isPauseScreen ()Z ah_
	isSelectAll (I)Z i
	isValidCharacterForName (Ljava/lang/String;CI)Z a
	keyPressed (III)Z a
	narrationEnabled ()V t
	onClose ()V ag_
	onFilesDrop (Ljava/util/List;)V a
	openLink (Ljava/net/URI;)V a
	removeWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V f
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	renderComponentHoverEffect (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Style;II)V a
	renderComponentTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V b
	renderDirtBackground (I)V e
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V c
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;Ljava/util/Optional;II)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V b
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;II)V a
	renderTooltipInternal (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	runNarration (Z)V e
	scheduleNarration (JZ)V a
	sendMessage (Ljava/lang/String;)V a
	sendMessage (Ljava/lang/String;Z)V b
	shouldCloseOnEsc ()Z af_
	shouldRunNarration ()Z h
	suppressNarration (J)V a
	tick ()V d
	triggerImmediateNarration (Z)V d
	updateNarratedWidget (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
	updateNarrationState (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
	wrapScreenError (Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V a
net/minecraft/client/gui/screens/Screen$NarratableSearchResult ecr$a
	entry a
	index b
	priority c
net/minecraft/client/gui/screens/ShareToLanScreen ecs
	ALLOW_COMMANDS_LABEL a
	GAME_MODE_LABEL b
	INFO_TEXT c
	commands p
	gameMode o
	lastScreen n
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/SimpleOptionsSubScreen ect
	list o
	narratorButton n
	smallOptions c
	createFooter ()V f
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updateNarratorButton ()V h
net/minecraft/client/gui/screens/SkinCustomizationScreen ecu
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/SoundOptionsScreen ecv
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/TitleScreen ecw
	ACCESSIBILITY_TEXTURE p
	COPYRIGHT_TEXT a
	CUBE_MAP b
	DEMO_LEVEL_ID n
	LOGGER c
	MINECRAFT_EDITION u
	MINECRAFT_LOGO t
	PANORAMA_OVERLAY o
	copyrightWidth w
	copyrightX x
	fadeInStart A
	fading z
	minceraftEasterEgg q
	panorama y
	realmsNotificationsScreen v
	resetDemoButton s
	splash r
	checkDemoWorldPresence ()Z v
	confirmDemo (Z)V c
	createDemoMenuOptions (II)V b
	createNormalMenuOptions (II)V a
	init ()V b
	isPauseScreen ()Z ah_
	mouseClicked (DDI)Z a
	preloadResources (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	realmsButtonClicked ()V w
	realmsNotificationsEnabled ()Z h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z af_
	tick ()V d
net/minecraft/client/gui/screens/VideoSettingsScreen ecx
	BUTTON_ACCEPT p
	BUTTON_CANCEL q
	FABULOUS c
	NEW_LINE r
	OPTIONS s
	WARNING_MESSAGE n
	WARNING_TITLE o
	gpuWarnlistManager u
	list t
	oldMipmaps v
	init ()V b
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z c
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/WinScreen ecy
	EDITION_LOCATION c
	LOGGER a
	LOGO_LOCATION b
	LOGO_WIDTH r
	NAME_PREFIX p
	OBFUSCATE_TOKEN q
	SECTION_HEADING o
	SPEEDUP_FACTOR s
	SPEEDUP_FACTOR_FAST t
	VIGNETTE_LOCATION n
	centeredLines y
	lines x
	onFinished v
	poem u
	scroll w
	scrollSpeed C
	speedupActive A
	speedupModifiers B
	totalScrollLength z
	unmodifiedScrollSpeed D
	addCreditsFile (Ljava/io/InputStreamReader;)V b
	addCreditsLine (Lnet/minecraft/network/chat/Component;Z)V a
	addEmptyLine ()V w
	addPoemFile (Ljava/io/InputStreamReader;)V a
	addPoemLines (Ljava/lang/String;)V b
	calculateScrollSpeed ()F h
	init ()V b
	keyPressed (III)Z a
	keyReleased (III)Z b
	onClose ()V ag_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg ()V x
	respawn ()V v
	tick ()V d
	wrapCreditsIO (Ljava/lang/String;Lnet/minecraft/client/gui/screens/WinScreen$CreditsReader;)V a
net/minecraft/client/gui/screens/WinScreen$CreditsReader ecy$a
net/minecraft/client/gui/screens/achievement/StatsScreen ecz
	PENDING_TEXT c
	SLOT_BG_SIZE u
	SLOT_BG_X w
	SLOT_BG_Y x
	SLOT_FG_X y
	SLOT_FG_Y z
	SLOT_LEFT_INSERT A
	SLOT_STAT_HEIGHT v
	SLOT_TEXT_OFFSET B
	SLOT_TEX_SIZE t
	SORT_DOWN D
	SORT_NONE C
	SORT_UP E
	activeList r
	isLoading s
	itemStatsList o
	lastScreen a
	mobsStatsList p
	stats q
	statsList n
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/Item;)V a
	blitSlotIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	getActiveList ()Lnet/minecraft/client/gui/components/ObjectSelectionList; x
	getColumnX (I)I a
	getTranslationKey (Lnet/minecraft/stats/Stat;)Ljava/lang/String; a
	init ()V b
	initButtons ()V v
	initLists ()V h
	isPauseScreen ()Z ah_
	onStatsUpdated ()V w
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setActiveList (Lnet/minecraft/client/gui/components/ObjectSelectionList;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList ecz$a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList$Entry ecz$a$a
	stat b
	statDisplay c
	getNarration ()Lnet/minecraft/network/chat/Component; b
	getValueText ()Ljava/lang/String; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList ecz$b
	blockColumns a
	headerPressed p
	iconOffsets u
	itemColumns o
	itemStatSorter q
	sortColumn r
	sortOrder s
	clickedHeader (II)V a
	getColumn (I)Lnet/minecraft/stats/StatType; a
	getColumnIndex (Lnet/minecraft/stats/StatType;)I b
	getRowWidth ()I c
	getScrollbarPosition ()I d
	getString (Lnet/minecraft/world/item/Item;)Lnet/minecraft/network/chat/Component; a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderDecorations (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	sortByColumn (Lnet/minecraft/stats/StatType;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow ecz$b$a
	item b
	getItem ()Lnet/minecraft/world/item/Item; a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderStat (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/stats/Stat;IIZ)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRowComparator ecz$b$b
	compare (Lnet/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow;Lnet/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow;)I a
net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList ecz$c
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList$MobRow ecz$c$a
	hasKills d
	killedBy e
	kills c
	mobName b
	wasKilledBy f
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/achievement/StatsUpdateListener eda
	LOADING_SYMBOLS b
	onStatsUpdated ()V w
net/minecraft/client/gui/screens/advancements/AdvancementTab edc
	advancement e
	centered u
	display i
	fade t
	icon j
	index d
	maxX r
	maxY s
	minX p
	minY q
	minecraft a
	root l
	screen b
	scrollX n
	scrollY o
	title k
	type c
	widgets m
	addAdvancement (Lnet/minecraft/advancements/Advancement;)V a
	addWidget (Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget;Lnet/minecraft/advancements/Advancement;)V a
	create (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/advancements/AdvancementsScreen;ILnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementTab; a
	drawContents (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	drawIcon (IILnet/minecraft/client/renderer/entity/ItemRenderer;)V a
	drawTab (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawTooltips (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	getAdvancement ()Lnet/minecraft/advancements/Advancement; c
	getDisplay ()Lnet/minecraft/advancements/DisplayInfo; e
	getIndex ()I b
	getScreen ()Lnet/minecraft/client/gui/screens/advancements/AdvancementsScreen; f
	getTitle ()Lnet/minecraft/network/chat/Component; d
	getType ()Lnet/minecraft/client/gui/screens/advancements/AdvancementTabType; a
	getWidget (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; b
	isMouseOver (IIDD)Z a
	scroll (DD)V a
net/minecraft/client/gui/screens/advancements/AdvancementTabType edd
	$VALUES j
	ABOVE a
	BELOW b
	LEFT c
	RIGHT d
	height h
	max i
	textureX e
	textureY f
	width g
	$values ()[Lnet/minecraft/client/gui/screens/advancements/AdvancementTabType; b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/GuiComponent;IIZI)V a
	drawIcon (IIILnet/minecraft/client/renderer/entity/ItemRenderer;Lnet/minecraft/world/item/ItemStack;)V a
	getMax ()I a
	getX (I)I a
	getY (I)I b
	isMouseOver (IIIDD)Z a
net/minecraft/client/gui/screens/advancements/AdvancementWidget ede
	BOX_WIDTH d
	BOX_X c
	FRAME_WIDTH e
	HEIGHT b
	ICON_WIDTH k
	ICON_X i
	ICON_Y j
	TEST_SPLIT_OFFSETS q
	TITLE_MAX_WIDTH p
	TITLE_PADDING_LEFT l
	TITLE_PADDING_RIGHT m
	TITLE_X n
	TITLE_Y o
	WIDGETS_LOCATION a
	advancement s
	children z
	description w
	display t
	minecraft x
	parent y
	progress A
	tab r
	title u
	width v
	x B
	y C
	addChild (Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget;)V a
	attachToParent ()V b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	drawConnectivity (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawHover (Lcom/mojang/blaze3d/vertex/PoseStack;IIFII)V a
	findOptimalLines (Lnet/minecraft/network/chat/Component;I)Ljava/util/List; a
	getFirstVisibleParent (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; a
	getMaxWidth (Lnet/minecraft/client/StringSplitter;Ljava/util/List;)F a
	getWidth ()I a
	getX ()I d
	getY ()I c
	isMouseOver (IIII)Z a
	render9Sprite (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIII)V a
	renderRepeating (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIII)V a
	setProgress (Lnet/minecraft/advancements/AdvancementProgress;)V a
net/minecraft/client/gui/screens/advancements/AdvancementWidgetType edf
	$VALUES d
	OBTAINED a
	UNOBTAINED b
	y c
	$values ()[Lnet/minecraft/client/gui/screens/advancements/AdvancementWidgetType; b
	getIndex ()I a
net/minecraft/client/gui/screens/advancements/AdvancementsScreen edg
	BACKGROUND_TILE_COUNT_X q
	BACKGROUND_TILE_COUNT_Y r
	BACKGROUND_TILE_HEIGHT p
	BACKGROUND_TILE_WIDTH o
	NO_ADVANCEMENTS_LABEL z
	TABS_LOCATION t
	TITLE A
	VERY_SAD_LABEL y
	WINDOW_HEIGHT b
	WINDOW_INSIDE_HEIGHT n
	WINDOW_INSIDE_WIDTH c
	WINDOW_INSIDE_X u
	WINDOW_INSIDE_Y v
	WINDOW_LOCATION s
	WINDOW_TITLE_X w
	WINDOW_TITLE_Y x
	WINDOW_WIDTH a
	advancements B
	isScrolling E
	selectedTab D
	tabs C
	getAdvancementWidget (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; f
	getTab (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementTab; g
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	onAddAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V a
	onAddAdvancementTask (Lnet/minecraft/advancements/Advancement;)V c
	onAdvancementsCleared ()V a
	onRemoveAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V b
	onRemoveAdvancementTask (Lnet/minecraft/advancements/Advancement;)V d
	onSelectedTabChanged (Lnet/minecraft/advancements/Advancement;)V e
	onUpdateAdvancementProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderInside (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	renderTooltips (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	renderWindow (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/controls/ControlsScreen edi
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/controls/KeyBindsList edj
	keyBindsScreen a
	maxNameWidth o
	getRowWidth ()I c
	getScrollbarPosition ()I d
net/minecraft/client/gui/screens/controls/KeyBindsList$CategoryEntry edj$a
	name b
	width c
	changeFocus (Z)Z b
	children ()Ljava/util/List; i
	narratables ()Ljava/util/List; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/controls/KeyBindsList$Entry edj$b
net/minecraft/client/gui/screens/controls/KeyBindsList$KeyEntry edj$c
	changeButton d
	key b
	name c
	resetButton e
	children ()Ljava/util/List; i
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z c
	narratables ()Ljava/util/List; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/controls/KeyBindsScreen edk
	keyBindsList o
	lastKeySelection n
	resetButton p
	selectedKey c
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen edm
	ALL_SLOTS_WIDTH r
	GAMEMODE_SWITCHER_LOCATION a
	HELP_TIPS_OFFSET_Y q
	SELECT_KEY s
	SLOT_AREA n
	SLOT_AREA_PADDED p
	SLOT_PADDING o
	SPRITE_SHEET_HEIGHT c
	SPRITE_SHEET_WIDTH b
	currentlyHovered u
	firstMouseX v
	firstMouseY w
	previousHovered t
	setFirstMousePos x
	slots y
	checkToClose ()Z w
	getDefaultSelected ()Lnet/minecraft/world/level/GameType; h
	init ()V b
	isPauseScreen ()Z ah_
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	switchToHoveredGameMode ()V v
	switchToHoveredGameMode (Lnet/minecraft/client/Minecraft;Ljava/util/Optional;)V a
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon edm$a
	$VALUES k
	ADVENTURE c
	CREATIVE a
	ICON_AREA j
	ICON_TOP_LEFT f
	SPECTATOR d
	SURVIVAL b
	VALUES e
	command h
	name g
	renderStack i
	$values ()[Lnet/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon; d
	drawIcon (Lnet/minecraft/client/renderer/entity/ItemRenderer;II)V a
	getCommand ()Ljava/lang/String; b
	getFromGameType (Lnet/minecraft/world/level/GameType;)Ljava/util/Optional; a
	getName ()Lnet/minecraft/network/chat/Component; a
	getNext ()Ljava/util/Optional; c
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeSlot edm$b
	icon b
	isSelected c
	drawSelection (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/texture/TextureManager;)V b
	drawSlot (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	isHoveredOrFocused ()Z e
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setSelected (Z)V e
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen edo
	COMMAND_LABEL q
	PREVIOUS_OUTPUT_LABEL r
	SET_COMMAND_LABEL p
	cancelButton n
	commandEdit a
	commandSuggestions s
	doneButton c
	outputButton o
	previousEdit b
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; h
	getPreviousY ()I v
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (DDD)Z a
	onDone ()V w
	onEdited (Ljava/lang/String;)V b
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
	updatePreviousOutput (Z)V c
net/minecraft/client/gui/screens/inventory/AbstractContainerScreen edp
	DOUBLECLICK_SPEED B
	HOVER_ITEM_BLIT_OFFSET C
	INVENTORY_LOCATION a
	QUICKDROP_DELAY A
	SLOT_ITEM_BLIT_OFFSET b
	SNAPBACK_SPEED z
	clickedSlot D
	doubleclick U
	draggingItem I
	hoveredSlot u
	imageHeight n
	imageWidth c
	inventoryLabelX q
	inventoryLabelY r
	isQuickCrafting y
	isSplittingStack H
	lastClickButton T
	lastClickSlot G
	lastClickTime S
	lastQuickMoved V
	leftPos v
	menu s
	playerInventoryTitle t
	quickCraftSlots x
	quickCraftingButton P
	quickCraftingRemainder R
	quickCraftingType O
	quickdropSlot F
	quickdropTime N
	skipNextRelease Q
	snapbackEnd E
	snapbackItem M
	snapbackStartX J
	snapbackStartY K
	snapbackTime L
	titleLabelX o
	titleLabelY p
	topPos w
	checkHotbarKeyPressed (II)Z a
	checkHotbarMouseClicked (I)V a
	containerTick ()V h
	findSlot (DD)Lnet/minecraft/world/inventory/Slot; a
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; v
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	isHovering (Lnet/minecraft/world/inventory/Slot;DD)Z a
	isPauseScreen ()Z ah_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	onClose ()V ag_
	recalculateQuickCraftRemaining ()V y
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderFloatingItem (Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderSlot (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/inventory/Slot;)V a
	renderSlotHighlight (Lcom/mojang/blaze3d/vertex/PoseStack;III)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/AbstractFurnaceScreen edq
	RECIPE_BUTTON_LOCATION A
	recipeBookComponent z
	texture C
	widthTooNarrow B
	charTyped (CI)Z a
	containerTick ()V h
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; x
	hasClickedOutside (DDIII)Z a
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	recipesUpdated ()V w
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
net/minecraft/client/gui/screens/inventory/AnvilScreen edr
	ANVIL_LOCATION z
	TOO_EXPENSIVE_TEXT A
	name B
	player C
	containerTick ()V h
	keyPressed (III)Z a
	onNameChanged (Ljava/lang/String;)V b
	removed ()V e
	renderFg (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	resize (Lnet/minecraft/client/Minecraft;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V w
net/minecraft/client/gui/screens/inventory/BeaconScreen eds
	BEACON_LOCATION z
	PRIMARY_EFFECT_LABEL A
	SECONDARY_EFFECT_LABEL B
	beaconButtons C
	primary D
	secondary E
	addBeaconButton (Lnet/minecraft/client/gui/components/AbstractWidget;)V a
	containerTick ()V h
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	updateButtons ()V w
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconButton eds$a
	isShowingTooltip ()Z a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconCancelButton eds$b
	onPress ()V c
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconConfirmButton eds$c
	onPress ()V c
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton eds$d
	effect d
	isPrimary c
	sprite e
	tier a
	tooltip r
	createEffectDescription (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/network/chat/MutableComponent; b
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aj_
	onPress ()V c
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setEffect (Lnet/minecraft/world/effect/MobEffect;)V a
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton eds$e
	selected a
	isSelected ()Z b
	isShowingTooltip ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setSelected (Z)V e
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconSpriteScreenButton eds$f
	iconX a
	iconY c
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconUpgradePowerButton eds$g
	createEffectDescription (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/network/chat/MutableComponent; b
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BlastFurnaceScreen edt
	TEXTURE A
net/minecraft/client/gui/screens/inventory/BookEditScreen edu
	BLACK_CURSOR r
	DOUBLECLICK_SPEED c
	EDIT_TITLE_LABEL p
	FINALIZE_WARNING_LABEL q
	GRAY_CURSOR s
	IMAGE_HEIGHT o
	IMAGE_WIDTH n
	TEXT_HEIGHT b
	TEXT_WIDTH a
	backButton G
	book u
	cancelButton K
	currentPage y
	displayCache M
	doneButton H
	finalizeButton J
	forwardButton F
	frameTick x
	hand L
	isModified v
	isSigning w
	lastClickTime D
	lastIndex E
	owner t
	ownerText O
	pageEdit B
	pageMsg N
	pages z
	signButton I
	title A
	titleEdit C
	appendPageToBook ()V A
	bookKeyPressed (III)Z c
	changeLine (I)V a
	charTyped (CI)Z a
	clearDisplayCache ()V H
	clearDisplayCacheAfterPageChange ()V I
	convertLocalToScreen (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i; b
	convertScreenToLocal (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i; a
	createPartialLineSelection (Ljava/lang/String;Lnet/minecraft/client/StringSplitter;IIII)Lnet/minecraft/client/renderer/Rect2i; a
	createSelection (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/renderer/Rect2i; a
	eraseEmptyTrailingPages ()V z
	findLineFromPos ([II)I a
	getClipboard ()Ljava/lang/String; h
	getCurrentPageText ()Ljava/lang/String; F
	getDisplayCache ()Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache; G
	getNumPages ()I v
	init ()V b
	keyDown ()V C
	keyEnd ()V E
	keyHome ()V D
	keyPressed (III)Z a
	keyUp ()V B
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	pageBack ()V w
	pageForward ()V x
	rebuildDisplayCache ()Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache; J
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderCursor (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;Z)V a
	renderHighlight ([Lnet/minecraft/client/renderer/Rect2i;)V a
	saveChanges (Z)V c
	selectWord (I)V b
	setClipboard (Ljava/lang/String;)V b
	setCurrentPageText (Ljava/lang/String;)V c
	tick ()V d
	titleKeyPressed (III)Z d
	updateButtonVisibility ()V y
	updateLocalCopy (Z)V e
net/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache edu$a
	EMPTY a
	cursor c
	cursorAtEnd d
	fullText b
	lineStarts e
	lines f
	selection g
	changeLine (II)I a
	findLineEnd (I)I b
	findLineStart (I)I a
	getIndexAtPosition (Lnet/minecraft/client/gui/Font;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)I a
net/minecraft/client/gui/screens/inventory/BookEditScreen$LineInfo edu$b
	asComponent c
	contents b
	style a
	x d
	y e
net/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i edu$c
	x a
	y b
net/minecraft/client/gui/screens/inventory/BookViewScreen edv
	BOOK_LOCATION o
	EMPTY_ACCESS n
	IMAGE_HEIGHT s
	IMAGE_WIDTH r
	PAGE_INDICATOR_TEXT_Y_OFFSET a
	PAGE_TEXT_X_OFFSET b
	PAGE_TEXT_Y_OFFSET c
	TEXT_HEIGHT q
	TEXT_WIDTH p
	backButton z
	bookAccess t
	cachedPage w
	cachedPageComponents v
	currentPage u
	forwardButton y
	pageMsg x
	playTurnSound A
	closeScreen ()V z
	createMenuControls ()V h
	createPageControlButtons ()V w
	forcePage (I)Z b
	getClickedComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; a
	getNumPages ()I v
	handleComponentClicked (Lnet/minecraft/network/chat/Style;)Z a
	init ()V b
	keyPressed (III)Z a
	loadPages (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; a
	loadPages (Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;)V a
	mouseClicked (DDI)Z a
	pageBack ()V x
	pageForward ()V y
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setBookAccess (Lnet/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess;)V a
	setPage (I)Z a
	updateButtonVisibility ()V A
net/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess edv$a
	fromItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess; a
	getPage (I)Lnet/minecraft/network/chat/FormattedText; b
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/gui/screens/inventory/BookViewScreen$WritableBookAccess edv$b
	pages a
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
	readPages (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
net/minecraft/client/gui/screens/inventory/BookViewScreen$WrittenBookAccess edv$c
	pages a
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
	readPages (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
net/minecraft/client/gui/screens/inventory/BrewingStandScreen edw
	BREWING_STAND_LOCATION z
	BUBBLELENGTHS A
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/CartographyTableScreen edx
	BG_LOCATION z
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderMap (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/Integer;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;IIF)V a
	renderResultingMap (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/Integer;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZZZZ)V a
net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen edy
	autoCommandBlock p
	autoexec v
	autoexecButton s
	conditional u
	conditionalButton r
	mode t
	modeButton q
	enableControls (Z)V e
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; h
	getPreviousY ()I v
	init ()V b
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	updateGui ()V x
net/minecraft/client/gui/screens/inventory/ContainerScreen edz
	CONTAINER_BACKGROUND z
	containerRows A
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/CraftingScreen eea
	CRAFTING_TABLE_LOCATION z
	RECIPE_BUTTON_LOCATION A
	recipeBookComponent B
	widthTooNarrow C
	containerTick ()V h
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; x
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	mouseClicked (DDI)Z a
	recipesUpdated ()V w
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
net/minecraft/client/gui/screens/inventory/CreativeInventoryListener eeb
	minecraft a
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen eec
	CONTAINER I
	CREATIVE_TABS_LOCATION z
	CUSTOM_SLOT_LOCK B
	GUI_CREATIVE_TAB_PREFIX A
	NUM_COLS D
	NUM_ROWS C
	SCROLLER_HEIGHT H
	SCROLLER_WIDTH G
	TAB_HEIGHT F
	TAB_WIDTH E
	TEXT_COLOR K
	TRASH_SLOT_TOOLTIP J
	destroyItemSlot Q
	hasClickedOutside T
	ignoreTextInput S
	listener R
	originalSlots P
	scrollOffs M
	scrolling N
	searchBox O
	selectedTab L
	visibleTags U
	canScroll ()Z z
	charTyped (CI)Z a
	checkTabClicked (Lnet/minecraft/world/item/CreativeModeTab;DD)Z a
	checkTabHovering (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/CreativeModeTab;II)Z a
	containerTick ()V h
	getSelectedTab ()I w
	handleHotbarLoadOrSave (Lnet/minecraft/client/Minecraft;IZZ)V a
	hasClickedOutside (DDIII)Z a
	init ()V b
	insideScrollbar (DD)Z a
	isCreativeSlot (Lnet/minecraft/world/inventory/Slot;)Z a
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
	refreshSearchResults ()V x
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderTabButton (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/CreativeModeTab;)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;II)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	selectTab (Lnet/minecraft/world/item/CreativeModeTab;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	updateVisibleTags (Ljava/lang/String;)V b
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$CustomCreativeSlot eec$a
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$ItemPickerMenu eec$b
	inventoryMenu l
	items k
	canDragTo (Lnet/minecraft/world/inventory/Slot;)Z b
	canScroll ()Z l
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	getCarried ()Lnet/minecraft/world/item/ItemStack; g
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	scrollTo (F)V a
	setCarried (Lnet/minecraft/world/item/ItemStack;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$SlotWrapper eec$c
	target a
	getItem ()Lnet/minecraft/world/item/ItemStack; e
	getMaxStackSize ()I a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	getNoItemIcon ()Lcom/mojang/datafixers/util/Pair; c
	hasItem ()Z f
	isActive ()Z b
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	set (Lnet/minecraft/world/item/ItemStack;)V d
	setChanged ()V d
net/minecraft/client/gui/screens/inventory/DispenserScreen eed
	CONTAINER_LOCATION z
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen eee
	canSeeEffects ()Z y
	getEffectName (Lnet/minecraft/world/effect/MobEffectInstance;)Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackgrounds (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;Z)V a
	renderEffects (Lcom/mojang/blaze3d/vertex/PoseStack;II)V c
	renderIcons (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;Z)V b
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;)V a
net/minecraft/client/gui/screens/inventory/EnchantmentNames eef
	ALT_FONT a
	INSTANCE c
	ROOT_STYLE b
	random d
	words e
	getInstance ()Lnet/minecraft/client/gui/screens/inventory/EnchantmentNames; a
	getRandomName (Lnet/minecraft/client/gui/Font;I)Lnet/minecraft/network/chat/FormattedText; a
	initSeed (J)V a
net/minecraft/client/gui/screens/inventory/EnchantmentScreen eeg
	ENCHANTING_BOOK_LOCATION H
	ENCHANTING_TABLE_LOCATION G
	bookModel J
	flip A
	flipA D
	flipT C
	last K
	oFlip B
	oOpen F
	open E
	random I
	time z
	containerTick ()V h
	init ()V b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	tickBook ()V w
net/minecraft/client/gui/screens/inventory/FurnaceScreen eeh
	TEXTURE A
net/minecraft/client/gui/screens/inventory/GrindstoneScreen eei
	GRINDSTONE_LOCATION z
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/HopperScreen eej
	HOPPER_LOCATION z
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/HorseInventoryScreen eek
	HORSE_INVENTORY_LOCATION z
	horse A
	xMouse B
	yMouse C
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/InventoryScreen eel
	RECIPE_BUTTON_LOCATION z
	buttonClicked F
	recipeBookComponent C
	recipeBookComponentInitialized D
	widthTooNarrow E
	xMouse A
	yMouse B
	containerTick ()V h
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; x
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z c
	recipesUpdated ()V w
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderEntityInInventory (IIIFFLnet/minecraft/world/entity/LivingEntity;)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
net/minecraft/client/gui/screens/inventory/ItemCombinerScreen eem
	menuResource z
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	init ()V b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderFg (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V w
net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen een
	FINAL_STATE_LABEL p
	JOINT_LABEL b
	MAX_LEVELS a
	NAME_LABEL n
	POOL_LABEL c
	TARGET_LABEL o
	doneButton y
	finalStateEdit u
	generateButton z
	jigsawEntity q
	joint A
	jointButton x
	keepJigsaws w
	levels v
	nameEdit r
	poolEdit t
	targetEdit s
	init ()V b
	keyPressed (III)Z a
	onCancel ()V v
	onClose ()V ag_
	onDone ()V h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendGenerate ()V x
	sendToServer ()V w
	tick ()V d
	updateValidity ()V y
net/minecraft/client/gui/screens/inventory/LecternScreen eeo
	listener u
	menu t
	bookChanged ()V B
	closeScreen ()V z
	createMenuControls ()V h
	forcePage (I)Z b
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; v
	getMenu ()Lnet/minecraft/world/inventory/LecternMenu; A
	init ()V b
	isPauseScreen ()Z ah_
	onClose ()V ag_
	pageBack ()V x
	pageChanged ()V C
	pageForward ()V y
	removed ()V e
	sendButtonClick (I)V c
net/minecraft/client/gui/screens/inventory/LoomScreen eep
	BASE_PATTERN_INDEX A
	BG_LOCATION z
	PATTERNS_X I
	PATTERNS_Y J
	PATTERN_COLUMNS B
	PATTERN_IMAGE_SIZE G
	PATTERN_ROWS C
	SCROLLER_FULL_HEIGHT H
	SCROLLER_HEIGHT F
	SCROLLER_WIDTH E
	TOTAL_PATTERN_ROWS D
	bannerStack M
	displayPatterns P
	displaySpecialPattern Q
	dyeStack N
	flag K
	hasMaxPatterns R
	patternStack O
	resultBannerPatterns L
	scrollOffs S
	scrolling T
	startIndex U
	containerChanged ()V w
	hasClickedOutside (DDIII)Z a
	init ()V b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderPattern (III)V c
net/minecraft/client/gui/screens/inventory/MenuAccess eeq
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; v
net/minecraft/client/gui/screens/inventory/MerchantScreen eer
	BUY_ITEM_X H
	DEPRECATED_TOOLTIP U
	LABEL_Y I
	LEVEL_SEPARATOR T
	MERCHANT_MENU_PART_X C
	NUMBER_OF_OFFER_BUTTONS J
	PROGRESS_BAR_X D
	PROGRESS_BAR_Y E
	SCROLLER_HEIGHT N
	SCROLLER_WIDTH O
	SCROLL_BAR_HEIGHT P
	SCROLL_BAR_START_X R
	SCROLL_BAR_TOP_POS_Y Q
	SELL_ITEM_1_X F
	SELL_ITEM_2_X G
	TEXTURE_HEIGHT B
	TEXTURE_WIDTH A
	TRADES_LABEL S
	TRADE_BUTTON_HEIGHT L
	TRADE_BUTTON_WIDTH M
	TRADE_BUTTON_X K
	VILLAGER_LOCATION z
	isDragging Y
	scrollOff X
	shopItem V
	tradeOfferButtons W
	canScroll (I)Z a
	init ()V b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	postButtonClick ()V w
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderAndDecorateCostA (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;II)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderButtonArrows (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/trading/MerchantOffer;II)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/trading/MerchantOffer;)V a
	renderScroller (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/trading/MerchantOffers;)V a
net/minecraft/client/gui/screens/inventory/MerchantScreen$TradeOfferButton eer$a
	index a
	getIndex ()I a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/MinecartCommandBlockEditScreen ees
	commandBlock p
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; h
	getPreviousY ()I v
	init ()V b
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
net/minecraft/client/gui/screens/inventory/PageButton eet
	isForward a
	playTurnSound b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
net/minecraft/client/gui/screens/inventory/ShulkerBoxScreen eeu
	CONTAINER_TEXTURE z
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/SignEditScreen eev
	frame b
	line c
	messages q
	sign a
	signField n
	signModel p
	woodType o
	charTyped (CI)Z a
	init ()V b
	keyPressed (III)Z a
	onClose ()V ag_
	onDone ()V h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/SmithingScreen eew
	SMITHING_LOCATION z
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
net/minecraft/client/gui/screens/inventory/SmokerScreen eex
	TEXTURE A
net/minecraft/client/gui/screens/inventory/StonecutterScreen eey
	BG_LOCATION z
	RECIPES_COLUMNS C
	RECIPES_IMAGE_SIZE_HEIGHT F
	RECIPES_IMAGE_SIZE_WIDTH E
	RECIPES_ROWS D
	RECIPES_X H
	RECIPES_Y I
	SCROLLER_FULL_HEIGHT G
	SCROLLER_HEIGHT B
	SCROLLER_WIDTH A
	displayRecipes M
	scrollOffs J
	scrolling K
	startIndex L
	containerChanged ()V y
	getOffscreenRows ()I w
	isScrollBarActive ()Z x
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderButtons (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	renderRecipes (III)V c
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen eez
	ALL_MODES t
	CUSTOM_DATA_LABEL o
	DEFAULT_MODES u
	DETECT_SIZE_LABEL q
	INCLUDE_ENTITIES_LABEL p
	INTEGRITY_LABEL n
	NAME_LABEL a
	POSITION_LABEL b
	SHOW_AIR_LABEL r
	SHOW_BOUNDING_BOX_LABEL s
	SIZE_LABEL c
	dataEdit L
	decimalFormat X
	detectButton S
	includeEntitiesButton T
	initialEntityIgnoring z
	initialMirror w
	initialMode y
	initialRotation x
	initialShowAir A
	initialShowBoundingBox B
	integrityEdit J
	loadButton N
	mirrorButton U
	nameEdit C
	posXEdit D
	posYEdit E
	posZEdit F
	rot0Button O
	rot180Button Q
	rot270Button R
	rot90Button P
	saveButton M
	seedEdit K
	sizeXEdit G
	sizeYEdit H
	sizeZEdit I
	structure v
	toggleAirButton V
	toggleBoundingBox W
	init ()V b
	isPauseScreen ()Z ah_
	keyPressed (III)Z a
	onCancel ()V v
	onClose ()V ag_
	onDone ()V h
	parseCoordinate (Ljava/lang/String;)I d
	parseIntegrity (Ljava/lang/String;)F c
	parseSeed (Ljava/lang/String;)J b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendToServer (Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;)Z a
	tick ()V d
	updateDirectionButtons ()V w
	updateMode (Lnet/minecraft/world/level/block/state/properties/StructureMode;)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip efb
	BORDER_WIDTH c
	MARGIN_Y b
	SLOT_SIZE_X e
	SLOT_SIZE_Y f
	TEXTURE_LOCATION a
	TEX_SIZE d
	items g
	weight h
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIILnet/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture;)V a
	drawBorder (IIIILcom/mojang/blaze3d/vertex/PoseStack;I)V a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	gridSizeX ()I b
	gridSizeY ()I c
	renderImage (Lnet/minecraft/client/gui/Font;IILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/entity/ItemRenderer;I)V a
	renderSlot (IIIZLnet/minecraft/client/gui/Font;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/entity/ItemRenderer;I)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture efb$a
	$VALUES l
	BLOCKED_SLOT b
	BORDER_CORNER_BOTTOM g
	BORDER_CORNER_TOP f
	BORDER_HORIZONTAL_BOTTOM e
	BORDER_HORIZONTAL_TOP d
	BORDER_VERTICAL c
	SLOT a
	h k
	w j
	x h
	y i
	$values ()[Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture; a
net/minecraft/client/gui/screens/inventory/tooltip/ClientTextTooltip efc
	text a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	renderText (Lnet/minecraft/client/gui/Font;IILcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent efd
	create (Lnet/minecraft/util/FormattedCharSequence;)Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent; a
	create (Lnet/minecraft/world/inventory/tooltip/TooltipComponent;)Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent; a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	renderImage (Lnet/minecraft/client/gui/Font;IILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/entity/ItemRenderer;I)V a
	renderText (Lnet/minecraft/client/gui/Font;IILcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;)V a
net/minecraft/client/gui/screens/multiplayer/JoinMultiplayerScreen eff
	LOGGER b
	deleteButton r
	editButton p
	editingServer t
	initedOnce w
	lanServerDetector v
	lanServerList u
	lastScreen n
	pinger c
	selectButton q
	serverSelectionList a
	servers o
	toolTip s
	addServerCallback (Z)V f
	deleteCallback (Z)V c
	directJoinCallback (Z)V g
	editServerCallback (Z)V e
	getPinger ()Lnet/minecraft/client/multiplayer/ServerStatusPinger; w
	getServers ()Lnet/minecraft/client/multiplayer/ServerList; x
	init ()V b
	join (Lnet/minecraft/client/multiplayer/ServerData;)V a
	joinSelectedServer ()V h
	keyPressed (III)Z a
	onSelectedChange ()V v
	refreshServerList ()V y
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setSelected (Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry;)V a
	setToolTip (Ljava/util/List;)V b
	tick ()V d
net/minecraft/client/gui/screens/multiplayer/SafetyScreen efg
	CHECK n
	CONTENT c
	NARRATION o
	TITLE b
	message q
	previous a
	stopShowing p
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList efh
	CANT_CONNECT_TEXT t
	CANT_RESOLVE_TEXT s
	ICON_MISSING p
	ICON_OVERLAY_LOCATION q
	INCOMPATIBLE_TOOLTIP u
	LOGGER a
	NO_CONNECTION_TOOLTIP v
	PINGING_TOOLTIP w
	SCANNING_LABEL r
	THREAD_POOL o
	lanHeader z
	networkServers A
	onlineServers y
	screen x
	getRowWidth ()I c
	getScrollbarPosition ()I d
	isFocused ()Z a
	keyPressed (III)Z a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	refreshEntries ()V e
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry;)V a
	updateNetworkServers (Ljava/util/List;)V a
	updateOnlineServers (Lnet/minecraft/client/multiplayer/ServerList;)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry efh$a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$LANHeader efh$b
	minecraft a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$NetworkServerEntry efh$c
	HIDDEN_ADDRESS_TEXT e
	ICON_WIDTH c
	LAN_SERVER_HEADER d
	lastClickTime g
	minecraft a
	screen f
	serverData b
	getNarration ()Lnet/minecraft/network/chat/Component; b
	getServerData ()Lnet/minecraft/client/server/LanServer; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry efh$d
	ICON_HEIGHT c
	ICON_OVERLAY_X_MOVE_DOWN f
	ICON_OVERLAY_X_MOVE_LEFT e
	ICON_OVERLAY_X_MOVE_RIGHT d
	ICON_OVERLAY_X_MOVE_UP g
	ICON_OVERLAY_Y_SELECTED i
	ICON_OVERLAY_Y_UNSELECTED h
	ICON_WIDTH b
	icon o
	iconLocation m
	lastClickTime p
	lastIconB64 n
	minecraft k
	screen j
	serverData l
	canJoin ()Z d
	drawIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/resources/ResourceLocation;)V a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	getServerData ()Lnet/minecraft/client/multiplayer/ServerData; c
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	swap (II)V a
	updateServerList ()V a
	uploadServerIcon (Ljava/lang/String;)Z a
net/minecraft/client/gui/screens/packs/PackSelectionModel efk
	iconGetter d
	onListChanged e
	output f
	repository a
	selected b
	unselected c
	commit ()V c
	findNewPacks ()V d
	getSelected ()Ljava/util/stream/Stream; b
	getUnselected ()Ljava/util/stream/Stream; a
net/minecraft/client/gui/screens/packs/PackSelectionModel$Entry efk$a
	canMoveDown ()Z q
	canMoveUp ()Z p
	canSelect ()Z n
	canUnselect ()Z o
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; b
	getDescription ()Lnet/minecraft/network/chat/Component; d
	getExtendedDescription ()Lnet/minecraft/network/chat/Component; f
	getIconTexture ()Lnet/minecraft/resources/ResourceLocation; a
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; e
	getTitle ()Lnet/minecraft/network/chat/Component; c
	isFixedPosition ()Z g
	isRequired ()Z h
	isSelected ()Z m
	moveDown ()V l
	moveUp ()V k
	select ()V i
	unselect ()V j
net/minecraft/client/gui/screens/packs/PackSelectionModel$EntryBase efk$b
	pack b
	canMoveDown ()Z q
	canMoveUp ()Z p
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; b
	getDescription ()Lnet/minecraft/network/chat/Component; d
	getIconTexture ()Lnet/minecraft/resources/ResourceLocation; a
	getOtherList ()Ljava/util/List; s
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; e
	getSelfList ()Ljava/util/List; r
	getTitle ()Lnet/minecraft/network/chat/Component; c
	isFixedPosition ()Z g
	isRequired ()Z h
	move (I)V a
	moveDown ()V l
	moveUp ()V k
	toggleSelection ()V t
net/minecraft/client/gui/screens/packs/PackSelectionModel$SelectedPackEntry efk$c
	getOtherList ()Ljava/util/List; s
	getSelfList ()Ljava/util/List; r
	isSelected ()Z m
	select ()V i
	unselect ()V j
net/minecraft/client/gui/screens/packs/PackSelectionModel$UnselectedPackEntry efk$d
	getOtherList ()Ljava/util/List; s
	getSelfList ()Ljava/util/List; r
	isSelected ()Z m
	select ()V i
	unselect ()V j
net/minecraft/client/gui/screens/packs/PackSelectionScreen efl
	DEFAULT_ICON p
	DIRECTORY_BUTTON_TOOLTIP n
	DRAG_AND_DROP c
	LIST_WIDTH b
	LOGGER a
	RELOAD_COOLDOWN o
	availablePackList u
	doneButton x
	lastScreen r
	model q
	packDir w
	packIcons y
	selectedPackList v
	ticksToReload t
	watcher s
	closeWatcher ()V h
	copyPacks (Lnet/minecraft/client/Minecraft;Ljava/util/List;Ljava/nio/file/Path;)V a
	getPackIcon (Lnet/minecraft/server/packs/repository/Pack;)Lnet/minecraft/resources/ResourceLocation; a
	init ()V b
	loadPackIcon (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/repository/Pack;)Lnet/minecraft/resources/ResourceLocation; a
	onClose ()V ag_
	onFilesDrop (Ljava/util/List;)V a
	populateLists ()V v
	reload ()V w
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
	updateList (Lnet/minecraft/client/gui/screens/packs/TransferableSelectionList;Ljava/util/stream/Stream;)V a
net/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher efl$a
	packPath b
	watcher a
	create (Ljava/io/File;)Lnet/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher; a
	pollForChanges ()Z a
	watchDir (Ljava/nio/file/Path;)V a
net/minecraft/client/gui/screens/packs/TransferableSelectionList efm
	ICON_OVERLAY_LOCATION a
	INCOMPATIBLE_CONFIRM_TITLE p
	INCOMPATIBLE_TITLE o
	title q
	getRowWidth ()I c
	getScrollbarPosition ()I d
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
net/minecraft/client/gui/screens/packs/TransferableSelectionList$PackEntry efm$a
	ICON_OVERLAY_X_MOVE_DOWN e
	ICON_OVERLAY_X_MOVE_LEFT d
	ICON_OVERLAY_X_MOVE_RIGHT c
	ICON_OVERLAY_X_MOVE_UP f
	ICON_OVERLAY_Y_SELECTED h
	ICON_OVERLAY_Y_UNSELECTED g
	MAX_DESCRIPTION_WIDTH_PIXELS i
	MAX_NAME_WIDTH_PIXELS j
	TOO_LONG_NAME_SUFFIX k
	descriptionDisplayCache o
	incompatibleDescriptionDisplayCache q
	incompatibleNameDisplayCache p
	minecraft a
	nameDisplayCache n
	pack m
	parent l
	screen b
	cacheDescription (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/MultiLineLabel; b
	cacheName (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/util/FormattedCharSequence; a
	getNarration ()Lnet/minecraft/network/chat/Component; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	showHoverOverlay ()Z a
net/minecraft/client/gui/screens/recipebook/AbstractFurnaceRecipeBookComponent efo
	fuels k
	getFuelItems ()Ljava/util/Set; b
	initFilterButtonTextures ()V a
	setupGhostRecipe (Lnet/minecraft/world/item/crafting/Recipe;Ljava/util/List;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;)V a
net/minecraft/client/gui/screens/recipebook/BlastingRecipeBookComponent efp
	FILTER_NAME k
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/recipebook/GhostRecipe efq
	ingredients b
	recipe a
	time c
	addIngredient (Lnet/minecraft/world/item/crafting/Ingredient;II)V a
	clear ()V a
	get (I)Lnet/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient; a
	getRecipe ()Lnet/minecraft/world/item/crafting/Recipe; c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;IIZF)V a
	setRecipe (Lnet/minecraft/world/item/crafting/Recipe;)V a
	size ()I b
net/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient efq$a
	ingredient b
	x c
	y d
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getX ()I a
	getY ()I b
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent efr
	ITEM_RENDER_SCALE d
	MAX_ROW b
	MAX_ROW_LARGE c
	RECIPE_BOOK_LOCATION a
	collection m
	isFurnaceMenu p
	isVisible i
	lastRecipeClicked n
	minecraft l
	recipeButtons e
	time o
	x j
	y k
	changeFocus (Z)Z b
	getLastRecipeClicked ()Lnet/minecraft/world/item/crafting/Recipe; b
	getRecipeCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; a
	init (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;IIIIF)V a
	isMouseOver (DD)Z a_
	isVisible ()Z c
	mouseClicked (DDI)Z a
	nineInchSprite (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setVisible (Z)V a
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton efr$a
	ingredientPos a
	isCraftable d
	recipe c
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	calculateIngredientsPositions (Lnet/minecraft/world/item/crafting/Recipe;)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton$Pos efr$a$a
	ingredients a
	x b
	y c
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlaySmeltingRecipeButton efr$b
	calculateIngredientsPositions (Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/client/gui/screens/recipebook/RecipeBookComponent efs
	ALL_RECIPES_TOOLTIP n
	IMAGE_HEIGHT c
	IMAGE_WIDTH b
	OFFSET_X_POSITION l
	ONLY_CRAFTABLES_TOOLTIP m
	RECIPE_BOOK_LOCATION a
	SEARCH_HINT k
	book v
	filterButton e
	ghostRecipe d
	height q
	ignoreTextInput z
	lastSearch u
	menu i
	minecraft j
	recipeBookPage w
	searchBox t
	selectedTab s
	stackedContents x
	tabButtons r
	timesInventoryChanged y
	visible A
	width p
	widthTooNarrow B
	xOffset o
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	changeFocus (Z)Z b
	charTyped (CI)Z a
	checkSearchStringUpdate ()V q
	getFilterButtonTooltip ()Lnet/minecraft/network/chat/Component; o
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
	hasClickedOutside (DDIIIII)Z a
	init (IILnet/minecraft/client/Minecraft;ZLnet/minecraft/world/inventory/RecipeBookMenu;)V a
	initFilterButtonTextures ()V a
	initVisuals ()V d
	isMouseOver (DD)Z a_
	isOffsetNextToMainGUI ()Z r
	isVisible ()Z g
	isVisibleAccordingToBookData ()Z b
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; s
	pirateSpeechForThePeople (Ljava/lang/String;)V a
	recipesShown (Ljava/util/List;)V a
	recipesUpdated ()V j
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderGhostRecipe (Lcom/mojang/blaze3d/vertex/PoseStack;IIZF)V a
	renderGhostRecipeTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	sendUpdateSettings ()V l
	setVisible (Z)V a
	setupGhostRecipe (Lnet/minecraft/world/item/crafting/Recipe;Ljava/util/List;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;)V a
	tick ()V h
	toggleFiltering ()Z p
	toggleVisibility ()V f
	updateCollections (Z)V c
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
	updateScreenPosition (II)I a
	updateStackedContents ()V n
	updateTabs ()V m
net/minecraft/client/gui/screens/recipebook/RecipeBookPage eft
	ITEMS_PER_PAGE a
	backButton i
	buttons b
	currentPage k
	forwardButton h
	hoveredButton c
	lastClickedRecipe m
	lastClickedRecipeCollection n
	minecraft e
	overlay d
	recipeBook l
	recipeCollections g
	showListeners f
	totalPages j
	addListener (Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent;)V a
	getLastClickedRecipe ()Lnet/minecraft/world/item/crafting/Recipe; a
	getLastClickedRecipeCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; b
	getMinecraft ()Lnet/minecraft/client/Minecraft; d
	getRecipeBook ()Lnet/minecraft/stats/RecipeBook; e
	init (Lnet/minecraft/client/Minecraft;II)V a
	listButtons (Ljava/util/function/Consumer;)V a
	mouseClicked (DDIIIII)Z a
	recipesShown (Ljava/util/List;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIF)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setInvisible ()V c
	updateArrowButtons ()V g
	updateButtonsForPage ()V f
	updateCollections (Ljava/util/List;Z)V a
net/minecraft/client/gui/screens/recipebook/RecipeBookTabButton efu
	ANIMATION_TIME t
	animationTime u
	category s
	getCategory ()Lnet/minecraft/client/RecipeBookCategories; b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderIcon (Lnet/minecraft/client/renderer/entity/ItemRenderer;)V a
	startAnimation (Lnet/minecraft/client/Minecraft;)V a
	updateVisibility (Lnet/minecraft/client/ClientRecipeBook;)Z a
net/minecraft/client/gui/screens/recipebook/RecipeButton efv
	ANIMATION_TIME c
	BACKGROUND_SIZE d
	MORE_RECIPES_TOOLTIP e
	RECIPE_BOOK_LOCATION b
	TICKS_TO_SWAP a
	animationTime v
	book s
	collection t
	currentIndex w
	menu r
	time u
	getCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; a
	getOrderedRecipes ()Ljava/util/List; l
	getRecipe ()Lnet/minecraft/world/item/crafting/Recipe; j
	getTooltipText (Lnet/minecraft/client/gui/screens/Screen;)Ljava/util/List; a
	getWidth ()I f
	init (Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;Lnet/minecraft/client/gui/screens/recipebook/RecipeBookPage;)V a
	isOnlyOption ()Z b
	isValidClickButton (I)Z d_
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/recipebook/RecipeCollection efw
	craftable c
	fitsDimensions d
	known e
	recipes a
	singleResultItem b
	allRecipesHaveSameResult (Ljava/util/List;)Z a
	canCraft (Lnet/minecraft/world/entity/player/StackedContents;IILnet/minecraft/stats/RecipeBook;)V a
	getDisplayRecipes (Z)Ljava/util/List; b
	getRecipes ()Ljava/util/List; d
	getRecipes (Z)Ljava/util/List; a
	hasCraftable ()Z b
	hasFitting ()Z c
	hasKnownRecipes ()Z a
	hasSingleResultItem ()Z e
	isCraftable (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	updateKnownRecipes (Lnet/minecraft/stats/RecipeBook;)V a
net/minecraft/client/gui/screens/recipebook/RecipeShownListener efx
	recipesShown (Ljava/util/List;)V a
net/minecraft/client/gui/screens/recipebook/RecipeUpdateListener efy
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; x
	recipesUpdated ()V w
net/minecraft/client/gui/screens/recipebook/SmeltingRecipeBookComponent efz
	FILTER_NAME k
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/recipebook/SmokingRecipeBookComponent ega
	FILTER_NAME k
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/social/PlayerEntry egc
	BG_FILL b
	BG_FILL_REMOVED c
	BLOCKED v
	BLOCKED_OFFLINE y
	CHAT_TOGGLE_ICON_SIZE B
	CHAT_TOGGLE_ICON_X C
	CHAT_TOGGLE_ICON_Y D
	HIDDEN u
	HIDDEN_OFFLINE x
	OFFLINE w
	PADDING A
	PLAYERNAME_COLOR d
	PLAYER_STATUS_COLOR e
	SKIN_SHADE a
	SKIN_SIZE z
	TOOLTIP_DELAY f
	TOOLTIP_MAX_WIDTH g
	children i
	hideButton n
	hideText p
	hideTooltip r
	id j
	isRemoved m
	minecraft h
	playerName k
	showButton o
	showText q
	showTooltip s
	skinGetter l
	tooltipHoverTime t
	children ()Ljava/util/List; i
	getEntryNarationMessage (Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/MutableComponent; a
	getPlayerId ()Ljava/util/UUID; d
	getPlayerName ()Ljava/lang/String; c
	getStatusComponent ()Lnet/minecraft/network/chat/Component; e
	narratables ()Ljava/util/List; b
	onHiddenOrShown (ZLnet/minecraft/network/chat/Component;)V a
	postRenderTooltip (Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen;Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	setRemoved (Z)V c
net/minecraft/client/gui/screens/social/PlayerSocialManager egd
	discoveredNamesToUUID d
	hiddenPlayers b
	minecraft a
	onlineMode e
	pendingBlockListRefresh f
	service c
	addPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;)V a
	getDiscoveredUUID (Ljava/lang/String;)Ljava/util/UUID; a
	getHiddenPlayers ()Ljava/util/Set; c
	hidePlayer (Ljava/util/UUID;)V a
	isBlocked (Ljava/util/UUID;)Z e
	isHidden (Ljava/util/UUID;)Z d
	removePlayer (Ljava/util/UUID;)V f
	shouldHideMessageFrom (Ljava/util/UUID;)Z c
	showPlayer (Ljava/util/UUID;)V b
	startOnlineMode ()V a
	stopOnlineMode ()V b
net/minecraft/client/gui/screens/social/SocialInteractionsPlayerList ege
	filter p
	players o
	socialInteractionsScreen a
	addPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page;)V a
	isEmpty ()Z e
	removePlayer (Ljava/util/UUID;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setFilter (Ljava/lang/String;)V a
	updateFilteredPlayers ()V f
	updatePlayerList (Ljava/util/Collection;D)V a
net/minecraft/client/gui/screens/social/SocialInteractionsScreen egf
	BG_BORDER_SIZE z
	BG_UNITS A
	BG_WIDTH B
	BLOCKING_HINT x
	BLOCK_LINK y
	BUTTON_HEIGHT F
	EMPTY_BLOCKED w
	EMPTY_HIDDEN v
	EMPTY_SEARCH u
	IMAGE_WIDTH E
	ITEM_HEIGHT G
	LIST_START b
	MARGIN_Y D
	SEARCH_HEIGHT C
	SEARCH_HINT t
	SEARCH_START c
	SOCIAL_INTERACTIONS_LOCATION a
	TAB_ALL n
	TAB_ALL_SELECTED q
	TAB_BLOCKED p
	TAB_BLOCKED_SELECTED s
	TAB_HIDDEN o
	TAB_HIDDEN_SELECTED r
	allButton L
	blockedButton N
	blockingHintButton O
	hiddenButton M
	initialized R
	lastSearch J
	page K
	playerCount Q
	postRenderRunnable S
	searchBox I
	serverLabel P
	socialInteractionsPlayerList H
	backgroundUnits ()I v
	checkSearchStringUpdate (Ljava/lang/String;)V b
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	isPauseScreen ()Z ah_
	keyPressed (III)Z a
	listEnd ()I w
	marginX ()I x
	mouseClicked (DDI)Z a
	onAddPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;)V a
	onRemovePlayer (Ljava/util/UUID;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setPostRenderRunnable (Ljava/lang/Runnable;)V a
	showPage (Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page;)V a
	tick ()V d
	updateServerLabel (Lnet/minecraft/client/Minecraft;)V a
	windowHeight ()I h
net/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page egf$a
	$VALUES d
	ALL a
	BLOCKED c
	HIDDEN b
	$values ()[Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page; a
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen egh
	COMMANDS_INFO u
	GAME_MODEL_LABEL p
	LOGGER n
	NAME_LABEL s
	OUTPUT_DIR_INFO t
	SEED_INFO r
	SEED_LABEL q
	TEMP_WORLD_PREFIX o
	commands B
	commandsButton M
	commandsChanged C
	createButton G
	dataPacks b
	dataPacksButton L
	difficulty A
	difficultyButton I
	gameMode y
	gameModeHelp1 N
	gameModeHelp2 O
	gameRules Q
	gameRulesButton K
	hardCore a
	initName P
	lastScreen v
	modeButton H
	moreOptionsButton J
	nameEdit w
	oldGameMode z
	resultFolder x
	tempDataPackDir D
	tempDataPackRepository E
	worldGenSettingsComponent c
	worldGenSettingsVisible F
	addRenderableWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; d
	addWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; e
	cleanupTempResources ()V C
	copyBetweenDirs (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	copyTempDataPackDirToNewWorld ()Z F
	create (Lnet/minecraft/client/gui/screens/Screen;)Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen; a
	createTempDataPackDirFromExistingWorld (Ljava/nio/file/Path;Lnet/minecraft/client/Minecraft;)Ljava/nio/file/Path; a
	getDataPackSelectionSettings ()Lcom/mojang/datafixers/util/Pair; G
	getEffectiveDifficulty ()Lnet/minecraft/world/Difficulty; x
	getTempDataPackDir ()Ljava/nio/file/Path; w
	init ()V b
	keyPressed (III)Z a
	onClose ()V ag_
	onCreate ()V A
	openDataPackSelectionScreen ()V D
	popScreen ()V v
	refreshWorldGenSettingsVisibility ()V h
	removeTempDataPackDir ()V E
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setGameMode (Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode;)V a
	setWorldGenSettingsVisible (Z)V c
	tick ()V d
	toggleWorldGenSettingsVisibility ()V B
	tryApplyNewDataPacks (Lnet/minecraft/server/packs/repository/PackRepository;)V a
	updateGameModeHelp ()V y
	updateResultFolder ()V z
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$OperationFailedException egh$a
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode egh$b
	$VALUES h
	CREATIVE c
	DEBUG d
	HARDCORE b
	SURVIVAL a
	displayName g
	gameType f
	name e
	$values ()[Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen egi
	doneButton n
	exitCallback a
	gameRules p
	invalidEntries c
	rules b
	tooltip o
	clearInvalid (Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry;)V b
	init ()V b
	markInvalid (Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry;)V a
	onClose ()V ag_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setTooltip (Ljava/util/List;)V b
	updateDoneButton ()V h
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$BooleanRuleEntry egi$a
	checkbox d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$CategoryRuleEntry egi$b
	label b
	children ()Ljava/util/List; i
	narratables ()Ljava/util/List; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$EntryFactory egi$c
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$GameRuleEntry egi$d
	children b
	label a
	children ()Ljava/util/List; i
	narratables ()Ljava/util/List; b
	renderLabel (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$IntegerRuleEntry egi$e
	input d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry egi$f
	tooltip a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList egi$g
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/worldselection/EditWorldScreen egj
	LOGGER a
	NAME_LABEL c
	WORLD_GEN_SETTINGS_GSON b
	callback o
	levelAccess q
	nameEdit p
	renameButton n
	init ()V b
	makeBackupAndShowToast (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Z a
	makeBackupAndShowToast (Lnet/minecraft/world/level/storage/LevelStorageSource;Ljava/lang/String;)V a
	onClose ()V ag_
	onRename ()V h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
net/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen egk
	DIMENSION_COLORS b
	LOGGER a
	callback c
	upgrader n
	create (Lnet/minecraft/client/Minecraft;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Z)Lnet/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen; a
	init ()V b
	onClose ()V ag_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/worldselection/SelectWorldScreen egl
	LOGGER c
	copyButton r
	deleteButton o
	lastScreen a
	list s
	renameButton q
	searchBox b
	selectButton p
	toolTip n
	charTyped (CI)Z a
	init ()V b
	keyPressed (III)Z a
	mouseScrolled (DDD)Z a
	onClose ()V ag_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setToolTip (Ljava/util/List;)V b
	tick ()V d
	updateButtonStatus (Z)V c
net/minecraft/client/gui/screens/worldselection/WorldGenSettingsComponent egm
	AMPLIFIED_HELP_TEXT c
	CUSTOM_WORLD_DESCRIPTION b
	LOGGER a
	MAP_FEATURES_INFO d
	SELECT_FILE_PROMPT e
	amplifiedWorldInfo f
	bonusItemsButton k
	customWorldDummyButton m
	customizeTypeButton n
	featuresButton j
	font g
	importSettingsButton o
	preset r
	registryHolder p
	seed s
	seedEdit i
	settings q
	typeButton l
	width h
	importSettings (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
	init (Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/Font;)V a
	isDebug ()Z b
	makeSettings (Z)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	parseLong (Ljava/lang/String;)Ljava/util/OptionalLong; a
	parseSeed ()Ljava/util/OptionalLong; f
	registryHolder ()Lnet/minecraft/core/RegistryAccess$RegistryHolder; c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	selectWorldTypeButton (Z)V c
	setVisibility (Z)V b
	switchOutOfHardcode ()V e
	switchToHardcore ()V d
	tick ()V a
	toString (Ljava/util/OptionalLong;)Ljava/lang/String; a
	updateDataPacks (Lnet/minecraft/server/ServerResources;)V a
	updateSettings (Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
net/minecraft/client/gui/screens/worldselection/WorldPreset egn
	AMPLIFIED c
	DEBUG h
	EDITORS e
	FLAT f
	LARGE_BIOMES b
	NORMAL a
	PRESETS d
	SINGLE_BIOME_SURFACE g
	description i
	create (Lnet/minecraft/core/RegistryAccess$RegistryHolder;JZZ)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	description ()Lnet/minecraft/network/chat/Component; a
	fixedBiomeGenerator (Lnet/minecraft/core/RegistryAccess;JLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/NoiseBasedChunkGenerator; a
	fromBuffetSettings (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/WorldGenSettings;Lnet/minecraft/client/gui/screens/worldselection/WorldPreset;Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	generator (Lnet/minecraft/core/RegistryAccess;J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	isVisibleByDefault (Lnet/minecraft/client/gui/screens/worldselection/WorldPreset;)Z a
	of (Lnet/minecraft/world/level/levelgen/WorldGenSettings;)Ljava/util/Optional; a
	parseBuffetSettings (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/WorldGenSettings;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/client/gui/screens/worldselection/WorldPreset$PresetEditor egn$a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList ego
	DATE_FORMAT o
	FROM_NEWER_TOOLTIP_1 r
	FROM_NEWER_TOOLTIP_2 s
	ICON_MISSING p
	ICON_OVERLAY_LOCATION q
	LOGGER a
	SNAPSHOT_TOOLTIP_1 t
	SNAPSHOT_TOOLTIP_2 u
	WORLD_LOCKED_TOOLTIP v
	WORLD_REQUIRES_CONVERSION w
	cachedList y
	screen x
	getRowWidth ()I c
	getScreen ()Lnet/minecraft/client/gui/screens/worldselection/SelectWorldScreen; f
	getScrollbarPosition ()I d
	getSelectedOpt ()Ljava/util/Optional; e
	isFocused ()Z a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	refreshList (Ljava/util/function/Supplier;Z)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry;)V a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry ego$a
	ICON_HEIGHT c
	ICON_OVERLAY_X_ERROR g
	ICON_OVERLAY_X_JOIN d
	ICON_OVERLAY_X_JOIN_WITH_NOTIFY e
	ICON_OVERLAY_X_WARNING f
	ICON_OVERLAY_Y_SELECTED i
	ICON_OVERLAY_Y_UNSELECTED h
	ICON_WIDTH b
	icon o
	iconFile n
	iconLocation m
	lastClickTime p
	minecraft j
	screen k
	summary l
	deleteWorld ()V c
	doDeleteWorld ()V d
	editWorld ()V e
	getLevelName ()Ljava/lang/String; g
	getNarration ()Lnet/minecraft/network/chat/Component; b
	joinWorld ()V a
	loadServerIcon ()Lnet/minecraft/client/renderer/texture/DynamicTexture; j
	loadWorld ()V h
	mouseClicked (DDI)Z a
	queueLoadScreen ()V i
	recreateWorld ()V f
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/spectator/PlayerMenuItem egq
	location b
	name c
	profile a
	getName ()Lnet/minecraft/network/chat/Component; al_
	isEnabled ()Z am_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/RootSpectatorMenuCategory egr
	PROMPT_TEXT a
	items b
	getItems ()Ljava/util/List; a
	getPrompt ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/spectator/SpectatorMenu egs
	CLOSE_ITEM b
	CLOSE_MENU_TEXT g
	EMPTY_SLOT a
	MAX_PER_PAGE f
	NEXT_PAGE_TEXT i
	PREVIOUS_PAGE_TEXT h
	SCROLL_LEFT c
	SCROLL_RIGHT_DISABLED e
	SCROLL_RIGHT_ENABLED d
	category k
	listener j
	page m
	selectedSlot l
	exit ()V d
	getCurrentPage ()Lnet/minecraft/client/gui/spectator/categories/SpectatorPage; f
	getItem (I)Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; a
	getItems ()Ljava/util/List; a
	getSelectedCategory ()Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory; c
	getSelectedItem ()Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; b
	getSelectedSlot ()I e
	selectCategory (Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory;)V a
	selectSlot (I)V b
net/minecraft/client/gui/spectator/SpectatorMenu$CloseSpectatorItem egs$a
	getName ()Lnet/minecraft/network/chat/Component; al_
	isEnabled ()Z am_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenu$ScrollMenuItem egs$b
	direction a
	enabled b
	getName ()Lnet/minecraft/network/chat/Component; al_
	isEnabled ()Z am_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenuCategory egt
	getItems ()Ljava/util/List; a
	getPrompt ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/spectator/SpectatorMenuItem egu
	getName ()Lnet/minecraft/network/chat/Component; al_
	isEnabled ()Z am_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenuListener egv
	onSpectatorMenuClosed (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/SpectatorPage egw
	NO_SELECTION a
	items b
	selection c
	getItem (I)Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; a
	getSelectedSlot ()I a
net/minecraft/client/gui/spectator/categories/TeleportToPlayerMenuCategory egx
	PROFILE_ORDER a
	TELEPORT_PROMPT c
	TELEPORT_TEXT b
	items d
	getItems ()Ljava/util/List; a
	getName ()Lnet/minecraft/network/chat/Component; al_
	getPrompt ()Lnet/minecraft/network/chat/Component; b
	isEnabled ()Z am_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory egy
	TELEPORT_PROMPT b
	TELEPORT_TEXT a
	items c
	getItems ()Ljava/util/List; a
	getName ()Lnet/minecraft/network/chat/Component; al_
	getPrompt ()Lnet/minecraft/network/chat/Component; b
	isEnabled ()Z am_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory$TeamSelectionItem egy$a
	location b
	players c
	team a
	getName ()Lnet/minecraft/network/chat/Component; al_
	isEnabled ()Z am_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/main/GameConfig ehb
	display b
	game d
	location c
	server e
	user a
net/minecraft/client/main/GameConfig$FolderData ehb$a
	assetDirectory c
	assetIndex d
	gameDirectory a
	resourcePackDirectory b
	getAssetIndex ()Lnet/minecraft/client/resources/AssetIndex; a
net/minecraft/client/main/GameConfig$GameData ehb$b
	demo a
	disableChat e
	disableMultiplayer d
	launchVersion b
	versionType c
net/minecraft/client/main/GameConfig$ServerData ehb$c
	hostname a
	port b
net/minecraft/client/main/GameConfig$UserData ehb$d
	profileProperties c
	proxy d
	user a
	userProperties b
net/minecraft/client/main/SilentInitException ehc
net/minecraft/client/model/AbstractZombieModel ehe
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Monster;FFFFF)V a
net/minecraft/client/model/AgeableListModel ehf
	babyBodyScale h
	babyHeadScale g
	babyYHeadOffset b
	babyZHeadOffset f
	bodyYOffset i
	scaleHead a
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/AnimationUtils ehg
	animateCrossbowCharge (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/world/entity/LivingEntity;Z)V a
	animateCrossbowHold (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Z)V a
	animateZombieArms (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;ZFF)V a
	bobArms (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;F)V a
	bobModelPart (Lnet/minecraft/client/model/geom/ModelPart;FF)V a
	swingWeaponDown (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/world/entity/Mob;FF)V a
net/minecraft/client/model/ArmedModel ehh
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/ArmorStandArmorModel ehi
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/decoration/ArmorStand;FFFFF)V a
net/minecraft/client/model/ArmorStandModel ehj
	BASE_PLATE u
	LEFT_BODY_STICK b
	RIGHT_BODY_STICK a
	SHOULDER_STICK t
	basePlate y
	leftBodyStick w
	rightBodyStick v
	shoulderStick x
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/decoration/ArmorStand;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/decoration/ArmorStand;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/AxolotlModel ehk
	SWIMMING_LEG_XROT a
	body j
	head k
	leftFrontLeg h
	leftGills m
	leftHindLeg f
	rightFrontLeg i
	rightGills n
	rightHindLeg g
	tail b
	topGills l
	applyMirrorLegRotations ()V d
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getRotationVector (Lnet/minecraft/client/model/geom/ModelPart;)Lcom/mojang/math/Vector3f; a
	headParts ()Ljava/lang/Iterable; a
	lerpPart (Lnet/minecraft/client/model/geom/ModelPart;FFF)V a
	lerpTo (FF)F a
	lerpTo (FFF)F a
	saveAnimationValues (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V a
	setRotationFromVector (Lnet/minecraft/client/model/geom/ModelPart;Lcom/mojang/math/Vector3f;)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;FFFFF)V a
	setupGroundCrawlingAnimation (FF)V c
	setupInitialAnimationValues (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;FF)V a
	setupLayStillOnGroundAnimation (FF)V b
	setupPlayDeadAnimation (F)V b
	setupSwimmingAnimation (FF)V d
	setupWaterHoveringAnimation (F)V a
net/minecraft/client/model/BatModel ehl
	body f
	head b
	leftWing h
	leftWingTip j
	rightWing g
	rightWingTip i
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/ambient/Bat;FFFFF)V a
net/minecraft/client/model/BeeModel ehm
	BACK_LEGS k
	BEE_Y_BASE a
	BONE b
	FRONT_LEGS i
	LEFT_ANTENNA g
	MIDDLE_LEGS j
	RIGHT_ANTENNA h
	STINGER f
	backLeg q
	bone l
	frontLeg o
	leftAntenna t
	leftWing n
	midLeg p
	rightAntenna u
	rightWing m
	rollAmount v
	stinger r
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Bee;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Bee;FFFFF)V a
net/minecraft/client/model/BlazeModel ehn
	head f
	root a
	upperBodyParts b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getPartName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/BoatModel eho
	BACK h
	BOTTOM g
	FRONT i
	LEFT k
	LEFT_PADDLE a
	RIGHT j
	RIGHT_PADDLE b
	WATER_PATCH f
	leftPaddle l
	parts o
	rightPaddle m
	waterPatch n
	animatePaddle (Lnet/minecraft/world/entity/vehicle/Boat;ILnet/minecraft/client/model/geom/ModelPart;F)V a
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	parts ()Lcom/google/common/collect/ImmutableList; b
	parts ()Ljava/lang/Iterable; d
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/vehicle/Boat;FFFFF)V a
	waterPatch ()Lnet/minecraft/client/model/geom/ModelPart; c
net/minecraft/client/model/BookModel ehp
	FLIP_PAGE_1 c
	FLIP_PAGE_2 d
	LEFT_PAGES a
	RIGHT_PAGES b
	flipPage1 j
	flipPage2 k
	leftLid f
	leftPages h
	rightLid g
	rightPages i
	root e
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFFF)V a
net/minecraft/client/model/CatModel ehq
	lieDownAmount q
	lieDownAmountTail r
	relaxStateOneAmount t
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Cat;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Cat;FFFFF)V a
net/minecraft/client/model/ChestedHorseModel ehr
	leftChest g
	rightChest h
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFFFF)V a
net/minecraft/client/model/ChickenModel ehs
	RED_THING a
	beak k
	body f
	head b
	leftLeg h
	leftWing j
	redThing l
	rightLeg g
	rightWing i
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/CodModel eht
	root a
	tailFin b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ColorableAgeableListModel ehu
	b f
	g b
	r a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setColor (FFF)V a
net/minecraft/client/model/ColorableHierarchicalModel ehv
	b f
	g b
	r a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setColor (FFF)V a
net/minecraft/client/model/CowModel ehw
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
net/minecraft/client/model/CreeperModel ehx
	Y_OFFSET j
	head b
	leftFrontLeg i
	leftHindLeg g
	rightFrontLeg h
	rightHindLeg f
	root a
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/DolphinModel ehy
	body b
	root a
	tail f
	tailFin g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/DrownedModel ehz
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Zombie;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Monster;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Zombie;FFFFF)V a
net/minecraft/client/model/ElytraModel eia
	leftWing b
	rightWing a
	bodyParts ()Ljava/lang/Iterable; b
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
net/minecraft/client/model/EndermanModel eib
	carrying a
	creepy b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
net/minecraft/client/model/EndermiteModel eic
	BODY_COUNT a
	BODY_SIZES b
	BODY_TEXS f
	bodyParts h
	root g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createSegmentName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/EntityModel eid
	attackTime c
	riding d
	young e
	copyPropertiesTo (Lnet/minecraft/client/model/EntityModel;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/EvokerFangsModel eie
	BASE a
	LOWER_JAW f
	UPPER_JAW b
	base h
	lowerJaw j
	root g
	upperJaw i
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/FoxModel eif
	HEAD_HEIGHT l
	LEG_POS m
	LEG_SIZE k
	body b
	head a
	leftFrontLeg i
	leftHindLeg g
	legMotionPos n
	rightFrontLeg h
	rightHindLeg f
	tail j
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Fox;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Fox;FFFFF)V a
net/minecraft/client/model/GhastModel eig
	root a
	tentacles b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createTentacleName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/GiantZombieModel eih
	isAggressive (Lnet/minecraft/world/entity/monster/Giant;)Z a
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
net/minecraft/client/model/GoatModel eii
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/goat/Goat;FFFFF)V a
net/minecraft/client/model/GuardianModel eij
	EYE j
	SPIKE_X g
	SPIKE_X_ROT a
	SPIKE_Y h
	SPIKE_Y_ROT b
	SPIKE_Z i
	SPIKE_Z_ROT f
	TAIL_0 k
	TAIL_1 l
	TAIL_2 m
	eye p
	head o
	root n
	spikeParts q
	tailParts r
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createSpikeName (I)Ljava/lang/String; a
	getSpikeOffset (IFF)F a
	getSpikeX (IFF)F b
	getSpikeY (IFF)F c
	getSpikeZ (IFF)F d
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Guardian;FFFFF)V a
	setupSpikes (FF)V a
net/minecraft/client/model/HeadedModel eik
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
net/minecraft/client/model/HierarchicalModel eil
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
net/minecraft/client/model/HoglinModel eim
	ATTACK_HEAD_X_ROT_END b
	DEFAULT_HEAD_X_ROT a
	body i
	head f
	leftEar h
	leftFrontLeg k
	leftHindLeg m
	mane n
	rightEar g
	rightFrontLeg j
	rightHindLeg l
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
net/minecraft/client/model/HorseModel ein
	DEG_125 g
	DEG_15 k
	DEG_30 j
	DEG_45 i
	DEG_60 h
	HEAD_PARTS a
	HEAD_SADDLE v
	LEFT_FRONT_BABY_LEG n
	LEFT_HIND_BABY_LEG l
	LEFT_SADDLE_LINE r
	LEFT_SADDLE_MOUTH q
	MOUTH_SADDLE_WRAP w
	RIGHT_FRONT_BABY_LEG o
	RIGHT_HIND_BABY_LEG m
	RIGHT_SADDLE_LINE u
	RIGHT_SADDLE_MOUTH t
	SADDLE p
	body b
	headParts f
	leftFrontBabyLeg E
	leftFrontLeg A
	leftHindBabyLeg C
	leftHindLeg y
	ridingParts H
	rightFrontBabyLeg D
	rightFrontLeg z
	rightHindBabyLeg B
	rightHindLeg x
	saddleParts G
	tail F
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFFFF)V a
net/minecraft/client/model/HumanoidModel eio
	HAT_OVERLAY_SCALE g
	OVERLAY_SCALE f
	SPYGLASS_ARM_CROUCH_ROT_X t
	SPYGLASS_ARM_ROT_X b
	SPYGLASS_ARM_ROT_Y a
	body j
	crouching q
	hat i
	head h
	leftArm l
	leftArmPose o
	leftLeg n
	rightArm k
	rightArmPose p
	rightLeg m
	swimAmount r
	bodyParts ()Ljava/lang/Iterable; b
	copyPropertiesTo (Lnet/minecraft/client/model/HumanoidModel;)V a
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;F)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	getArm (Lnet/minecraft/world/entity/HumanoidArm;)Lnet/minecraft/client/model/geom/ModelPart; a
	getAttackArm (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/HumanoidArm; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	headParts ()Ljava/lang/Iterable; a
	poseLeftArm (Lnet/minecraft/world/entity/LivingEntity;)V b
	poseRightArm (Lnet/minecraft/world/entity/LivingEntity;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	quadraticArmUpdate (F)F a
	rotlerpRad (FFF)F a
	setAllVisible (Z)V d_
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/LivingEntity;F)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/HumanoidModel$ArmPose eio$a
	$VALUES j
	BLOCK c
	BOW_AND_ARROW d
	CROSSBOW_CHARGE f
	CROSSBOW_HOLD g
	EMPTY a
	ITEM b
	SPYGLASS h
	THROW_SPEAR e
	twoHanded i
	$values ()[Lnet/minecraft/client/model/HumanoidModel$ArmPose; b
	isTwoHanded ()Z a
net/minecraft/client/model/IllagerModel eip
	arms g
	hat f
	head b
	leftArm k
	leftLeg h
	rightArm j
	rightLeg i
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getArm (Lnet/minecraft/world/entity/HumanoidArm;)Lnet/minecraft/client/model/geom/ModelPart; a
	getHat ()Lnet/minecraft/client/model/geom/ModelPart; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/AbstractIllager;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/IronGolemModel eiq
	head b
	leftArm g
	leftLeg i
	rightArm f
	rightLeg h
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getFlowerHoldingArm ()Lnet/minecraft/client/model/geom/ModelPart; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/IronGolem;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/IronGolem;FFFFF)V a
net/minecraft/client/model/LavaSlimeModel eir
	SEGMENT_COUNT a
	bodyCubes f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getSegmentName (I)Ljava/lang/String; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Slime;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Slime;FFFFF)V a
net/minecraft/client/model/LeashKnotModel eis
	KNOT a
	knot f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ListModel eit
	parts ()Ljava/lang/Iterable; d
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/LlamaModel eiu
	body b
	head a
	leftChest k
	leftFrontLeg i
	leftHindLeg g
	rightChest j
	rightFrontLeg h
	rightHindLeg f
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;FFFFF)V a
net/minecraft/client/model/LlamaSpitModel eiv
	MAIN a
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/MinecartModel eiw
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/Model eix
	renderType s
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	renderType (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/model/ModelUtils eiy
	rotlerpRad (FFF)F a
net/minecraft/client/model/OcelotModel eiz
	BACK_LEG_Y b
	BACK_LEG_Z f
	BODY_WALK_Y z
	BODY_WALK_Z A
	CROUCH_STATE q
	FRONT_LEG_Y g
	FRONT_LEG_Z F
	HEAD_WALK_Y x
	HEAD_WALK_Z y
	SITTING_STATE a
	SPRINT_STATE t
	TAIL_1 G
	TAIL_1_WALK_Y B
	TAIL_1_WALK_Z C
	TAIL_2 H
	TAIL_2_WALK_Y D
	TAIL_2_WALK_Z E
	WALK_STATE r
	XO u
	YO v
	ZO w
	body o
	head n
	leftFrontLeg j
	leftHindLeg h
	rightFrontLeg k
	rightHindLeg i
	state p
	tail1 l
	tail2 m
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PandaModel eja
	lieOnBackAmount k
	rollAmount l
	sitAmount j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Panda;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Panda;FFFFF)V a
net/minecraft/client/model/ParrotModel ejb
	FEATHER a
	body f
	feather k
	head j
	leftLeg l
	leftWing h
	rightLeg m
	rightWing i
	root b
	tail g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getState (Lnet/minecraft/world/entity/animal/Parrot;)Lnet/minecraft/client/model/ParrotModel$State; a
	prepare (Lnet/minecraft/client/model/ParrotModel$State;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Parrot;FFF)V a
	renderOnShoulder (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFFI)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/client/model/ParrotModel$State;IFFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Parrot;FFFFF)V a
net/minecraft/client/model/ParrotModel$State ejb$a
	$VALUES f
	FLYING a
	ON_SHOULDER e
	PARTY d
	SITTING c
	STANDING b
	$values ()[Lnet/minecraft/client/model/ParrotModel$State; a
net/minecraft/client/model/PhantomModel ejc
	TAIL_BASE a
	TAIL_TIP b
	leftWingBase g
	leftWingTip h
	rightWingBase i
	rightWingTip j
	root f
	tailBase k
	tailTip l
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Phantom;FFFFF)V a
net/minecraft/client/model/PigModel ejd
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
net/minecraft/client/model/PiglinModel eje
	bodyDefault y
	headDefault z
	leftArmDefault A
	leftEar x
	rightArmDefault B
	rightEar a
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	holdWeaponHigh (Lnet/minecraft/world/entity/Mob;)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/LivingEntity;F)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/Mob;F)V a
net/minecraft/client/model/PlayerModel ejf
	CLOAK x
	EAR a
	LEFT_PANTS A
	LEFT_SLEEVE y
	RIGHT_PANTS B
	RIGHT_SLEEVE z
	cloak D
	ear E
	jacket w
	leftPants u
	leftSleeve b
	parts C
	rightPants v
	rightSleeve t
	slim F
	bodyParts ()Ljava/lang/Iterable; b
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;Z)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	getRandomModelPart (Ljava/util/Random;)Lnet/minecraft/client/model/geom/ModelPart; a
	renderCloak (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V b
	renderEars (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V a
	setAllVisible (Z)V d_
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/PolarBearModel ejg
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/PolarBear;FFFFF)V a
net/minecraft/client/model/PufferfishBigModel ejh
	leftBlueFin b
	rightBlueFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PufferfishMidModel eji
	leftBlueFin b
	rightBlueFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PufferfishSmallModel ejj
	leftFin b
	rightFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/QuadrupedModel ejk
	body b
	head a
	leftFrontLeg i
	leftHindLeg g
	rightFrontLeg h
	rightHindLeg f
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (ILnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/RabbitModel ejl
	FRONT_JUMP_ANGLE b
	LEFT_HAUNCH f
	NEW_SCALE v
	REAR_JUMP_ANGLE a
	RIGHT_HAUNCH g
	body l
	head o
	jumpRotation u
	leftEar q
	leftFrontLeg m
	leftHaunch j
	leftRearFoot h
	nose t
	rightEar p
	rightFrontLeg n
	rightHaunch k
	rightRearFoot i
	tail r
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Rabbit;FFF)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Rabbit;FFFFF)V a
net/minecraft/client/model/RavagerModel ejm
	head b
	leftFrontLeg j
	leftHindLeg h
	mouth f
	neck k
	rightFrontLeg i
	rightHindLeg g
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Ravager;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Ravager;FFFFF)V a
net/minecraft/client/model/SalmonModel ejn
	BODY_BACK b
	BODY_FRONT a
	bodyBack g
	root f
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SheepFurModel ejo
	headXRot j
	createFurLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Sheep;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Sheep;FFFFF)V a
net/minecraft/client/model/SheepModel ejp
	headXRot j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Sheep;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Sheep;FFFFF)V a
net/minecraft/client/model/ShieldModel ejq
	HANDLE b
	PLATE a
	SHIELD_HEIGHT d
	SHIELD_WIDTH c
	handle g
	plate f
	root e
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	handle ()Lnet/minecraft/client/model/geom/ModelPart; c
	plate ()Lnet/minecraft/client/model/geom/ModelPart; b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/ShulkerBulletModel ejr
	MAIN a
	main f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ShulkerModel ejs
	BASE b
	LID a
	base f
	head h
	lid g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	getLid ()Lnet/minecraft/client/model/geom/ModelPart; b
	parts ()Ljava/lang/Iterable; d
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Shulker;FFFFF)V a
net/minecraft/client/model/SilverfishModel ejt
	BODY_COUNT a
	BODY_SIZES h
	BODY_TEXS i
	bodyLayers g
	bodyParts f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getLayerName (I)Ljava/lang/String; a
	getSegmentName (I)Ljava/lang/String; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SkeletonModel eju
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/Mob;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/SkullModel ejv
	head a
	root b
	createHeadModel ()Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	createHumanoidHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createMobHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/SkullModelBase ejw
	setupAnim (FFF)V a
net/minecraft/client/model/SlimeModel ejx
	root a
	createInnerBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createOuterBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SnowGolemModel ejy
	UPPER_BODY a
	head g
	leftArm h
	rightArm i
	root b
	upperBody f
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SpiderModel ejz
	BODY_0 a
	BODY_1 b
	LEFT_MIDDLE_FRONT_LEG g
	LEFT_MIDDLE_HIND_LEG i
	RIGHT_MIDDLE_FRONT_LEG f
	RIGHT_MIDDLE_HIND_LEG h
	head k
	leftFrontLeg t
	leftHindLeg m
	leftMiddleFrontLeg q
	leftMiddleHindLeg o
	rightFrontLeg r
	rightHindLeg l
	rightMiddleFrontLeg p
	rightMiddleHindLeg n
	root j
	createSpiderBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SquidModel eka
	root b
	tentacles a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createTentacleName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/StriderModel ekb
	LEFT_BOTTOM_BRISTLE i
	LEFT_MIDDLE_BRISTLE h
	LEFT_TOP_BRISTLE g
	RIGHT_BOTTOM_BRISTLE a
	RIGHT_MIDDLE_BRISTLE b
	RIGHT_TOP_BRISTLE f
	body m
	leftBottomBristle t
	leftLeg l
	leftMiddleBristle r
	leftTopBristle q
	rightBottomBristle n
	rightLeg k
	rightMiddleBristle o
	rightTopBristle p
	root j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Strider;FFFFF)V a
net/minecraft/client/model/TridentModel ekc
	TEXTURE a
	root b
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/TropicalFishModelA ekd
	root a
	tail b
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/TropicalFishModelB eke
	root a
	tail b
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/TurtleModel ekf
	EGG_BELLY j
	eggBelly k
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Turtle;FFFFF)V a
net/minecraft/client/model/VexModel ekg
	leftWing a
	rightWing b
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Vex;FFFFF)V a
net/minecraft/client/model/VillagerHeadModel ekh
	hatVisible (Z)V a
net/minecraft/client/model/VillagerModel eki
	hat g
	hatRim h
	head f
	leftLeg j
	nose a
	rightLeg i
	root b
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	hatVisible (Z)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/WitchModel ekj
	holdingItem b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getNose ()Lnet/minecraft/client/model/geom/ModelPart; e
	setHoldingItem (Z)V b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/WitherBossModel ekk
	CENTER_HEAD b
	LEFT_HEAD g
	RIBCAGE a
	RIBCAGE_X_ROT_OFFSET h
	RIGHT_HEAD f
	TAIL_X_ROT_OFFSET i
	centerHead k
	leftHead m
	ribcage n
	rightHead l
	root j
	tail o
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/boss/wither/WitherBoss;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/boss/wither/WitherBoss;FFFFF)V a
	setupHeadRotation (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lnet/minecraft/client/model/geom/ModelPart;I)V a
net/minecraft/client/model/WolfModel ekl
	LEG_SIZE q
	REAL_HEAD a
	REAL_TAIL f
	UPPER_BODY b
	body i
	head g
	leftFrontLeg m
	leftHindLeg k
	realHead h
	realTail o
	rightFrontLeg l
	rightHindLeg j
	tail n
	upperBody p
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Wolf;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Wolf;FFFFF)V a
net/minecraft/client/model/ZombieModel ekm
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
	isAggressive (Lnet/minecraft/world/entity/monster/Zombie;)Z a
net/minecraft/client/model/ZombieVillagerModel ekn
	hatRim a
	createArmorLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	hatVisible (Z)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Zombie;FFFFF)V a
net/minecraft/client/model/dragon/DragonHeadModel eko
	head a
	jaw b
	createHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/geom/EntityModelSet ekq
	roots a
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/model/geom/LayerDefinitions ekr
	FISH_PATTERN_DEFORMATION a
	INNER_ARMOR_DEFORMATION c
	OUTER_ARMOR_DEFORMATION b
	createRoots ()Ljava/util/Map; a
net/minecraft/client/model/geom/ModelLayerLocation eks
	layer b
	model a
	getLayer ()Ljava/lang/String; b
	getModel ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/model/geom/ModelLayers ekt
	ALL_MODELS ca
	ARMOR_STAND a
	ARMOR_STAND_INNER_ARMOR b
	ARMOR_STAND_OUTER_ARMOR c
	AXOLOTL d
	BANNER e
	BAT f
	BED_FOOT g
	BED_HEAD h
	BEE i
	BELL j
	BLAZE k
	BOOK l
	CAT m
	CAT_COLLAR n
	CAVE_SPIDER o
	CHEST p
	CHEST_MINECART q
	CHICKEN r
	COD s
	COMMAND_BLOCK_MINECART t
	CONDUIT_CAGE u
	CONDUIT_EYE v
	CONDUIT_SHELL w
	CONDUIT_WIND x
	COW y
	CREEPER z
	CREEPER_ARMOR A
	CREEPER_HEAD B
	DEFAULT_LAYER bZ
	DOLPHIN C
	DONKEY D
	DOUBLE_CHEST_LEFT E
	DOUBLE_CHEST_RIGHT F
	DRAGON_SKULL G
	DROWNED H
	DROWNED_INNER_ARMOR I
	DROWNED_OUTER_ARMOR J
	DROWNED_OUTER_LAYER K
	ELDER_GUARDIAN L
	ELYTRA M
	ENDERMAN N
	ENDERMITE O
	ENDER_DRAGON P
	END_CRYSTAL Q
	EVOKER R
	EVOKER_FANGS S
	FOX T
	FURNACE_MINECART U
	GHAST V
	GIANT W
	GIANT_INNER_ARMOR X
	GIANT_OUTER_ARMOR Y
	GLOW_SQUID Z
	GOAT aa
	GUARDIAN ab
	HOGLIN ac
	HOPPER_MINECART ad
	HORSE ae
	HORSE_ARMOR af
	HUSK ag
	HUSK_INNER_ARMOR ah
	HUSK_OUTER_ARMOR ai
	ILLUSIONER aj
	IRON_GOLEM ak
	LEASH_KNOT al
	LLAMA am
	LLAMA_DECOR an
	LLAMA_SPIT ao
	MAGMA_CUBE ap
	MINECART aq
	MOOSHROOM ar
	MULE as
	OCELOT at
	PANDA au
	PARROT av
	PHANTOM aw
	PIG ax
	PIGLIN ay
	PIGLIN_BRUTE az
	PIGLIN_BRUTE_INNER_ARMOR aA
	PIGLIN_BRUTE_OUTER_ARMOR aB
	PIGLIN_INNER_ARMOR aC
	PIGLIN_OUTER_ARMOR aD
	PIG_SADDLE aE
	PILLAGER aF
	PLAYER aG
	PLAYER_HEAD aH
	PLAYER_INNER_ARMOR aI
	PLAYER_OUTER_ARMOR aJ
	PLAYER_SLIM aK
	PLAYER_SLIM_INNER_ARMOR aL
	PLAYER_SLIM_OUTER_ARMOR aM
	PLAYER_SPIN_ATTACK aN
	POLAR_BEAR aO
	PUFFERFISH_BIG aP
	PUFFERFISH_MEDIUM aQ
	PUFFERFISH_SMALL aR
	RABBIT aS
	RAVAGER aT
	SALMON aU
	SHEEP aV
	SHEEP_FUR aW
	SHIELD aX
	SHULKER aY
	SHULKER_BULLET aZ
	SILVERFISH ba
	SKELETON bb
	SKELETON_HORSE bc
	SKELETON_INNER_ARMOR bd
	SKELETON_OUTER_ARMOR be
	SKELETON_SKULL bf
	SLIME bg
	SLIME_OUTER bh
	SNOW_GOLEM bi
	SPAWNER_MINECART bj
	SPIDER bk
	SQUID bl
	STRAY bm
	STRAY_INNER_ARMOR bn
	STRAY_OUTER_ARMOR bo
	STRAY_OUTER_LAYER bp
	STRIDER bq
	STRIDER_SADDLE br
	TNT_MINECART bs
	TRADER_LLAMA bt
	TRIDENT bu
	TROPICAL_FISH_LARGE bv
	TROPICAL_FISH_LARGE_PATTERN bw
	TROPICAL_FISH_SMALL bx
	TROPICAL_FISH_SMALL_PATTERN by
	TURTLE bz
	VEX bA
	VILLAGER bB
	VINDICATOR bC
	WANDERING_TRADER bD
	WITCH bE
	WITHER bF
	WITHER_ARMOR bG
	WITHER_SKELETON bH
	WITHER_SKELETON_INNER_ARMOR bI
	WITHER_SKELETON_OUTER_ARMOR bJ
	WITHER_SKELETON_SKULL bK
	WITHER_SKULL bL
	WOLF bM
	ZOGLIN bN
	ZOMBIE bO
	ZOMBIE_HEAD bP
	ZOMBIE_HORSE bQ
	ZOMBIE_INNER_ARMOR bR
	ZOMBIE_OUTER_ARMOR bS
	ZOMBIE_VILLAGER bT
	ZOMBIE_VILLAGER_INNER_ARMOR bU
	ZOMBIE_VILLAGER_OUTER_ARMOR bV
	ZOMBIFIED_PIGLIN bW
	ZOMBIFIED_PIGLIN_INNER_ARMOR bX
	ZOMBIFIED_PIGLIN_OUTER_ARMOR bY
	createBoatModelName (Lnet/minecraft/world/entity/vehicle/Boat$Type;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	createLocation (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	createSignModelName (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	getKnownLocations ()Ljava/util/stream/Stream; a
	register (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	register (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	registerInnerArmor (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	registerOuterArmor (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; c
net/minecraft/client/model/geom/ModelPart eku
	children i
	cubes h
	visible g
	x a
	xRot d
	y b
	yRot e
	z c
	zRot f
	compile (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	copyFrom (Lnet/minecraft/client/model/geom/ModelPart;)V a
	getAllParts ()Ljava/util/stream/Stream; c
	getChild (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelPart; a
	getRandomCube (Ljava/util/Random;)Lnet/minecraft/client/model/geom/ModelPart$Cube; a
	isEmpty ()Z b
	loadPose (Lnet/minecraft/client/model/geom/PartPose;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setPos (FFF)V a
	setRotation (FFF)V b
	storePose ()Lnet/minecraft/client/model/geom/PartPose; a
	translateAndRotate (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	visit (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/model/geom/ModelPart$Visitor;)V a
	visit (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/model/geom/ModelPart$Visitor;Ljava/lang/String;)V a
net/minecraft/client/model/geom/ModelPart$Cube eku$a
	maxX d
	maxY e
	maxZ f
	minX a
	minY b
	minZ c
	polygons g
	compile (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/geom/ModelPart$Polygon eku$b
	normal b
	vertices a
net/minecraft/client/model/geom/ModelPart$Vertex eku$c
	pos a
	u b
	v c
	remap (FF)Lnet/minecraft/client/model/geom/ModelPart$Vertex; a
net/minecraft/client/model/geom/ModelPart$Visitor eku$d
net/minecraft/client/model/geom/PartNames ekv
	ARMS P
	BACK_FIN T
	BEAK S
	BODY Z
	BOTTOM_FIN d
	CUBE R
	HAT Y
	HAT_RIM aa
	HEAD X
	JACKET ab
	JAW N
	LEFT_ARM h
	LEFT_BLUE_FIN f
	LEFT_CHEST H
	LEFT_EAR p
	LEFT_EYE L
	LEFT_FIN a
	LEFT_FRONT_FOOT z
	LEFT_FRONT_LEG v
	LEFT_FRONT_LEG_TIP D
	LEFT_GILLS ad
	LEFT_HIND_FOOT x
	LEFT_HIND_LEG t
	LEFT_HIND_LEG_TIP B
	LEFT_HORN J
	LEFT_LEG r
	LEFT_LID F
	LEFT_WING j
	LEFT_WING_BASE l
	LEFT_WING_TIP n
	MANE U
	MOUTH W
	NECK V
	NOSE O
	RIGHT_ARM i
	RIGHT_BLUE_FIN g
	RIGHT_CHEST I
	RIGHT_EAR q
	RIGHT_EYE M
	RIGHT_FIN b
	RIGHT_FRONT_FOOT A
	RIGHT_FRONT_LEG w
	RIGHT_FRONT_LEG_TIP E
	RIGHT_GILLS ae
	RIGHT_HIND_FOOT y
	RIGHT_HIND_LEG u
	RIGHT_HIND_LEG_TIP C
	RIGHT_HORN K
	RIGHT_LEG s
	RIGHT_LID G
	RIGHT_WING k
	RIGHT_WING_BASE m
	RIGHT_WING_TIP o
	TAIL Q
	TAIL_FIN e
	TOP_FIN c
	TOP_GILLS ac
net/minecraft/client/model/geom/PartPose ekw
	ZERO a
	x b
	xRot e
	y c
	yRot f
	z d
	zRot g
	offset (FFF)Lnet/minecraft/client/model/geom/PartPose; a
	offsetAndRotation (FFFFFF)Lnet/minecraft/client/model/geom/PartPose; a
	rotation (FFF)Lnet/minecraft/client/model/geom/PartPose; b
net/minecraft/client/model/geom/builders/CubeDefinition ekx
	comment a
	dimensions c
	grow d
	mirror e
	origin b
	texCoord f
	texScale g
	bake (II)Lnet/minecraft/client/model/geom/ModelPart$Cube; a
net/minecraft/client/model/geom/builders/CubeDeformation eky
	NONE a
	growX b
	growY c
	growZ d
	extend (F)Lnet/minecraft/client/model/geom/builders/CubeDeformation; a
	extend (FFF)Lnet/minecraft/client/model/geom/builders/CubeDeformation; a
net/minecraft/client/model/geom/builders/CubeListBuilder ekz
	cubes a
	mirror d
	xTexOffs b
	yTexOffs c
	addBox (FFFFFF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;FF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFZ)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFFFF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFIIIII)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFIIILnet/minecraft/client/model/geom/builders/CubeDeformation;II)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	create ()Lnet/minecraft/client/model/geom/builders/CubeListBuilder; c
	getCubes ()Ljava/util/List; b
	mirror ()Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	mirror (Z)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	texOffs (II)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
net/minecraft/client/model/geom/builders/LayerDefinition ela
	material b
	mesh a
	bakeRoot ()Lnet/minecraft/client/model/geom/ModelPart; a
	create (Lnet/minecraft/client/model/geom/builders/MeshDefinition;II)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
net/minecraft/client/model/geom/builders/MaterialDefinition elb
	xTexSize a
	yTexSize b
net/minecraft/client/model/geom/builders/MeshDefinition elc
	root a
	getRoot ()Lnet/minecraft/client/model/geom/builders/PartDefinition; a
net/minecraft/client/model/geom/builders/PartDefinition eld
	children c
	cubes a
	partPose b
	addOrReplaceChild (Ljava/lang/String;Lnet/minecraft/client/model/geom/builders/CubeListBuilder;Lnet/minecraft/client/model/geom/PartPose;)Lnet/minecraft/client/model/geom/builders/PartDefinition; a
	bake (II)Lnet/minecraft/client/model/geom/ModelPart; a
	getChild (Ljava/lang/String;)Lnet/minecraft/client/model/geom/builders/PartDefinition; a
net/minecraft/client/model/geom/builders/UVPair ele
	u a
	v b
	u ()F a
	v ()F b
net/minecraft/client/multiplayer/ClientAdvancements eli
	LOGGER a
	advancements c
	listener e
	minecraft b
	progress d
	selectedTab f
	getAdvancements ()Lnet/minecraft/advancements/AdvancementList; a
	setListener (Lnet/minecraft/client/multiplayer/ClientAdvancements$Listener;)V a
	setSelectedTab (Lnet/minecraft/advancements/Advancement;Z)V a
	update (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
net/minecraft/client/multiplayer/ClientAdvancements$Listener eli$a
	onSelectedTabChanged (Lnet/minecraft/advancements/Advancement;)V e
	onUpdateAdvancementProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
net/minecraft/client/multiplayer/ClientChunkCache elj
	LOGGER a
	emptyChunk b
	level e
	lightEngine c
	storage d
	calculateStorageRange (I)I b
	drop (II)V d
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/LevelChunk; b
	getLevel ()Lnet/minecraft/world/level/BlockGetter; n
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; m
	getLoadedChunksCount ()I h
	isValidChunk (Lnet/minecraft/world/level/chunk/LevelChunk;II)Z a
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
	replaceWithPacketData (IILnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/chunk/LevelChunk; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateViewCenter (II)V e
	updateViewRadius (I)V a
net/minecraft/client/multiplayer/ClientChunkCache$Storage elj$a
	chunkCount g
	chunkRadius c
	chunks b
	viewCenterX e
	viewCenterZ f
	viewRange d
	dumpChunks (Ljava/lang/String;)V a
	getChunk (I)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getIndex (II)I a
	inRange (II)Z b
	replace (ILnet/minecraft/world/level/chunk/LevelChunk;)V a
	replace (ILnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/world/level/chunk/LevelChunk; a
net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl elk
	LOGGER a
	connection e
	localGameProfile f
	minecraft b
	parent c
	updateStatus d
	authenticateServer (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	getConnection ()Lnet/minecraft/network/Connection; a
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; b
	handleCompression (Lnet/minecraft/network/protocol/login/ClientboundLoginCompressionPacket;)V a
	handleCustomQuery (Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket;)V a
	handleGameProfile (Lnet/minecraft/network/protocol/login/ClientboundGameProfilePacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ClientboundHelloPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/multiplayer/ClientLevel ell
	CLOUD_COLOR J
	FLUID_PARTICLE_SPAWN_OFFSET a
	LIGHT_UPDATE_QUEUE_SIZE_THRESHOLD c
	MARKER_PARTICLE_ITEMS P
	NORMAL_LIGHT_UPDATES_PER_FRAME b
	chunkSource M
	clientLevelData D
	connection B
	effects E
	entityStorage A
	levelRenderer C
	lightUpdateQueue N
	mapData I
	minecraft F
	players G
	scoreboard H
	serverSimulationDistance O
	skyFlashTime K
	tickingEntities z
	tintCaches L
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V b
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V b
	addDestroyBlockEffect (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	addEntity (ILnet/minecraft/world/entity/Entity;)V b
	addMapData (Ljava/util/Map;)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	addPlayer (ILnet/minecraft/client/player/AbstractClientPlayer;)V a
	animateTick (III)V b
	calculateBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I b
	clearTintCaches ()V f
	createFireworks (DDDDDDLnet/minecraft/nbt/CompoundTag;)V a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	disconnect ()V U
	doAnimateTick (IIIILjava/util/Random;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	effects ()Lnet/minecraft/client/renderer/DimensionSpecialEffects; c
	entitiesForRendering ()Ljava/lang/Iterable; d
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	gatherChunkSourceStats ()Ljava/lang/String; J
	getAllMapData ()Ljava/util/Map; m
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; N
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getChunkSource ()Lnet/minecraft/client/multiplayer/ClientChunkCache; h
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; L
	getCloudColor (F)Lnet/minecraft/world/phys/Vec3; h
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; I
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getEntityCount ()I g
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; M
	getFreeMapId ()I v
	getLevelData ()Lnet/minecraft/client/multiplayer/ClientLevel$ClientLevelData; l
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; n_
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getMarkerParticleTarget ()Lnet/minecraft/world/level/block/Block; u
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; q
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; K
	getServerSimulationDistance ()I o
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSharedSpawnAngle ()F k
	getSharedSpawnPos ()Lnet/minecraft/core/BlockPos; j
	getSkyColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getSkyDarken (F)F g
	getSkyFlashTime ()I i
	getStarBrightness (F)F i
	getTagManager ()Lnet/minecraft/tags/TagContainer; r
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	hasChunk (II)Z b
	isLightUpdateQueueEmpty ()Z b
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	onChunkLoaded (Lnet/minecraft/world/level/ChunkPos;)V a
	playLocalSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playLocalSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; z
	pollLightUpdates ()V a
	putNonPlayerEntity (ILnet/minecraft/world/entity/Entity;)V a
	queueLightUpdate (Ljava/lang/Runnable;)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; t
	removeEntity (ILnet/minecraft/world/entity/Entity$RemovalReason;)V a
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendPacketToServer (Lnet/minecraft/network/protocol/Packet;)V a
	setBlocksDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setDayTime (J)V c
	setDefaultSpawnPos (Lnet/minecraft/core/BlockPos;F)V a
	setGameTime (J)V b
	setKnownState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	setLightReady (II)V g
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setScoreboard (Lnet/minecraft/world/scores/Scoreboard;)V a
	setSectionDirtyWithNeighbors (III)V c
	setServerSimulationDistance (I)V b
	setSkyFlashTime (I)V c
	shouldDelayFallingBlockEntityRemoval (Lnet/minecraft/world/entity/Entity$RemovalReason;)Z a
	shouldTickDeath (Lnet/minecraft/world/entity/Entity;)Z h
	spawnFluidParticle (DDDDDLnet/minecraft/core/particles/ParticleOptions;)V a
	spawnParticle (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickEntities ()V e
	tickNonPassenger (Lnet/minecraft/world/entity/Entity;)V a
	tickPassenger (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V a
	tickTime ()V p
	trySpawnDripParticles (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/particles/ParticleOptions;Z)V a
	unload (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
net/minecraft/client/multiplayer/ClientLevel$ClientLevelData ell$a
	dayTime i
	difficulty k
	difficultyLocked l
	gameRules b
	gameTime h
	hardcore a
	isFlat c
	raining j
	spawnAngle g
	xSpawn d
	ySpawn e
	zSpawn f
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getClearColorScale ()D g
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getHorizonHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)D a
	getSpawnAngle ()F d
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isRaining ()Z k
	isThundering ()Z i
	setDayTime (J)V b
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V a
	setGameTime (J)V a
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/client/multiplayer/ClientLevel$EntityCallbacks ell$b
	onCreated (Ljava/lang/Object;)V f
	onCreated (Lnet/minecraft/world/entity/Entity;)V a
	onDestroyed (Ljava/lang/Object;)V e
	onDestroyed (Lnet/minecraft/world/entity/Entity;)V b
	onTickingEnd (Ljava/lang/Object;)V c
	onTickingEnd (Lnet/minecraft/world/entity/Entity;)V d
	onTickingStart (Ljava/lang/Object;)V d
	onTickingStart (Lnet/minecraft/world/entity/Entity;)V c
	onTrackingEnd (Ljava/lang/Object;)V a
	onTrackingEnd (Lnet/minecraft/world/entity/Entity;)V f
	onTrackingStart (Ljava/lang/Object;)V b
	onTrackingStart (Lnet/minecraft/world/entity/Entity;)V e
net/minecraft/client/multiplayer/ClientPacketListener elm
	GENERIC_DISCONNECT_MESSAGE b
	LOGGER a
	advancements k
	callbackScreen e
	commands r
	connection c
	debugQueryHandler n
	id t
	level g
	levelData h
	levels u
	localGameProfile d
	minecraft f
	playerInfoMap j
	random q
	recipeManager s
	registryAccess v
	serverChunkRadius o
	serverSimulationDistance p
	started i
	suggestionsProvider l
	tags m
	telemetryManager w
	applyLightData (IILnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData;)V b
	cleanup ()V c
	downloadCallback (Ljava/util/concurrent/CompletableFuture;)V a
	enableChunkLight (Lnet/minecraft/world/level/chunk/LevelChunk;II)V a
	findTotem (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	getAdvancements ()Lnet/minecraft/client/multiplayer/ClientAdvancements; h
	getCommands ()Lcom/mojang/brigadier/CommandDispatcher; i
	getConnection ()Lnet/minecraft/network/Connection; a
	getDebugQueryHandler ()Lnet/minecraft/client/DebugQueryHandler; l
	getId ()Ljava/util/UUID; m
	getLevel ()Lnet/minecraft/client/multiplayer/ClientLevel; j
	getLocalGameProfile ()Lcom/mojang/authlib/GameProfile; g
	getOnlinePlayerIds ()Ljava/util/Collection; f
	getOnlinePlayers ()Ljava/util/Collection; e
	getPlayerInfo (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getPlayerInfo (Ljava/util/UUID;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; d
	getSuggestionsProvider ()Lnet/minecraft/client/multiplayer/ClientSuggestionProvider; b
	getTags ()Lnet/minecraft/tags/TagContainer; k
	handleAddEntity (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	handleAddExperienceOrb (Lnet/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket;)V a
	handleAddMob (Lnet/minecraft/network/protocol/game/ClientboundAddMobPacket;)V a
	handleAddObjective (Lnet/minecraft/network/protocol/game/ClientboundSetObjectivePacket;)V a
	handleAddOrRemoveRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket;)V a
	handleAddPainting (Lnet/minecraft/network/protocol/game/ClientboundAddPaintingPacket;)V a
	handleAddPlayer (Lnet/minecraft/network/protocol/game/ClientboundAddPlayerPacket;)V a
	handleAddVibrationSignal (Lnet/minecraft/network/protocol/game/ClientboundAddVibrationSignalPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ClientboundAnimatePacket;)V a
	handleAwardStats (Lnet/minecraft/network/protocol/game/ClientboundAwardStatsPacket;)V a
	handleBlockBreakAck (Lnet/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket;)V a
	handleBlockDestruction (Lnet/minecraft/network/protocol/game/ClientboundBlockDestructionPacket;)V a
	handleBlockEntityData (Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;)V a
	handleBlockEvent (Lnet/minecraft/network/protocol/game/ClientboundBlockEventPacket;)V a
	handleBlockUpdate (Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;)V a
	handleBossUpdate (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ClientboundChatPacket;)V a
	handleChunkBlocksUpdate (Lnet/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket;)V a
	handleCommandSuggestions (Lnet/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket;)V a
	handleCommands (Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ClientboundContainerClosePacket;)V a
	handleContainerContent (Lnet/minecraft/network/protocol/game/ClientboundContainerSetContentPacket;)V a
	handleContainerSetData (Lnet/minecraft/network/protocol/game/ClientboundContainerSetDataPacket;)V a
	handleContainerSetSlot (Lnet/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ClientboundCustomPayloadPacket;)V a
	handleCustomSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundCustomSoundPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/game/ClientboundDisconnectPacket;)V a
	handleEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundEntityEventPacket;)V a
	handleEntityLinkPacket (Lnet/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket;)V a
	handleExplosion (Lnet/minecraft/network/protocol/game/ClientboundExplodePacket;)V a
	handleForgetLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V a
	handleGameEvent (Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket;)V a
	handleHorseScreenOpen (Lnet/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket;)V a
	handleInitializeBorder (Lnet/minecraft/network/protocol/game/ClientboundInitializeBorderPacket;)V a
	handleItemCooldown (Lnet/minecraft/network/protocol/game/ClientboundCooldownPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ClientboundKeepAlivePacket;)V a
	handleLevelChunkWithLight (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket;)V a
	handleLevelEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelEventPacket;)V a
	handleLightUpdatePacket (Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacket;)V a
	handleLogin (Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;)V a
	handleLookAt (Lnet/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket;)V a
	handleMapItemData (Lnet/minecraft/network/protocol/game/ClientboundMapItemDataPacket;)V a
	handleMerchantOffers (Lnet/minecraft/network/protocol/game/ClientboundMerchantOffersPacket;)V a
	handleMoveEntity (Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ClientboundMoveVehiclePacket;)V a
	handleOpenBook (Lnet/minecraft/network/protocol/game/ClientboundOpenBookPacket;)V a
	handleOpenScreen (Lnet/minecraft/network/protocol/game/ClientboundOpenScreenPacket;)V a
	handleOpenSignEditor (Lnet/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket;)V a
	handleParticleEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelParticlesPacket;)V a
	handlePing (Lnet/minecraft/network/protocol/game/ClientboundPingPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;)V a
	handlePlayerCombatEnd (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket;)V a
	handlePlayerCombatEnter (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket;)V a
	handlePlayerCombatKill (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket;)V a
	handlePlayerInfo (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket;)V a
	handleRemoveEntities (Lnet/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket;)V a
	handleRemoveMobEffect (Lnet/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket;)V a
	handleResourcePack (Lnet/minecraft/network/protocol/game/ClientboundResourcePackPacket;)V a
	handleRespawn (Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;)V a
	handleRotateMob (Lnet/minecraft/network/protocol/game/ClientboundRotateHeadPacket;)V a
	handleSelectAdvancementsTab (Lnet/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket;)V a
	handleSetBorderCenter (Lnet/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket;)V a
	handleSetBorderLerpSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket;)V a
	handleSetBorderSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderSizePacket;)V a
	handleSetBorderWarningDelay (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket;)V a
	handleSetBorderWarningDistance (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket;)V a
	handleSetCamera (Lnet/minecraft/network/protocol/game/ClientboundSetCameraPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket;)V a
	handleSetChunkCacheCenter (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket;)V a
	handleSetChunkCacheRadius (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket;)V a
	handleSetDisplayObjective (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket;)V a
	handleSetEntityData (Lnet/minecraft/network/protocol/game/ClientboundSetEntityDataPacket;)V a
	handleSetEntityMotion (Lnet/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket;)V a
	handleSetEntityPassengersPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPassengersPacket;)V a
	handleSetEquipment (Lnet/minecraft/network/protocol/game/ClientboundSetEquipmentPacket;)V a
	handleSetExperience (Lnet/minecraft/network/protocol/game/ClientboundSetExperiencePacket;)V a
	handleSetHealth (Lnet/minecraft/network/protocol/game/ClientboundSetHealthPacket;)V a
	handleSetPlayerTeamPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket;)V a
	handleSetScore (Lnet/minecraft/network/protocol/game/ClientboundSetScorePacket;)V a
	handleSetSimulationDistance (Lnet/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket;)V a
	handleSetSpawn (Lnet/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket;)V a
	handleSetTime (Lnet/minecraft/network/protocol/game/ClientboundSetTimePacket;)V a
	handleSoundEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundEntityPacket;)V a
	handleSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundPacket;)V a
	handleStopSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundStopSoundPacket;)V a
	handleTabListCustomisation (Lnet/minecraft/network/protocol/game/ClientboundTabListPacket;)V a
	handleTagQueryPacket (Lnet/minecraft/network/protocol/game/ClientboundTagQueryPacket;)V a
	handleTakeItemEntity (Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;)V a
	handleTeleportEntity (Lnet/minecraft/network/protocol/game/ClientboundTeleportEntityPacket;)V a
	handleTitlesClear (Lnet/minecraft/network/protocol/game/ClientboundClearTitlesPacket;)V a
	handleUpdateAdvancementsPacket (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
	handleUpdateAttributes (Lnet/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket;)V a
	handleUpdateMobEffect (Lnet/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket;)V a
	handleUpdateRecipes (Lnet/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/game/ClientboundUpdateTagsPacket;)V a
	levels ()Ljava/util/Set; n
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	preparePackPrompt (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	queueLightUpdate (IILnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData;)V a
	queueLightUpdate (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V b
	readSectionList (IILnet/minecraft/world/level/lighting/LevelLightEngine;Lnet/minecraft/world/level/LightLayer;Ljava/util/BitSet;Ljava/util/BitSet;Ljava/util/Iterator;Z)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; o
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action;)V a
	setActionBarText (Lnet/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket;)V a
	setSubtitleText (Lnet/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket;)V a
	setTitleText (Lnet/minecraft/network/protocol/game/ClientboundSetTitleTextPacket;)V a
	setTitlesAnimation (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket;)V a
	updateLevelChunk (IILnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData;)V a
	validateResourcePackUrl (Ljava/lang/String;)Z b
net/minecraft/client/multiplayer/ClientSuggestionProvider eln
	connection a
	minecraft b
	pendingSuggestionsFuture d
	pendingSuggestionsId c
	completeCustomSuggestions (ILcom/mojang/brigadier/suggestion/Suggestions;)V a
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	getAbsoluteCoordinates ()Ljava/util/Collection; t
	getAllTeams ()Ljava/util/Collection; m
	getAvailableSoundEvents ()Ljava/util/Collection; n
	getOnlinePlayerNames ()Ljava/util/Collection; l
	getRecipeNames ()Ljava/util/stream/Stream; o
	getRelevantCoordinates ()Ljava/util/Collection; s
	getSelectedEntities ()Ljava/util/Collection; r
	hasPermission (I)Z c
	levels ()Ljava/util/Set; p
	prettyPrint (D)Ljava/lang/String; a
	prettyPrint (I)Ljava/lang/String; a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; q
net/minecraft/client/multiplayer/MultiPlayerGameMode elo
	LOGGER a
	MAX_ACTIONS_SIZE m
	carriedIndex n
	connection c
	destroyBlockPos d
	destroyDelay h
	destroyProgress f
	destroyTicks g
	destroyingItem e
	isDestroying i
	localPlayerMode j
	minecraft b
	previousLocalPlayerMode k
	unAckedActions l
	adjustPlayer (Lnet/minecraft/world/entity/player/Player;)V a
	attack (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;)V a
	canHurtPlayer ()Z a
	continueDestroyBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	createPlayer (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/stats/StatsCounter;Lnet/minecraft/client/ClientRecipeBook;)Lnet/minecraft/client/player/LocalPlayer; a
	createPlayer (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/stats/StatsCounter;Lnet/minecraft/client/ClientRecipeBook;ZZ)Lnet/minecraft/client/player/LocalPlayer; a
	destroyBlock (Lnet/minecraft/core/BlockPos;)Z a
	ensureHasSentCarriedItem ()V n
	getPickRange ()F c
	getPlayerMode ()Lnet/minecraft/world/level/GameType; l
	getPreviousPlayerMode ()Lnet/minecraft/world/level/GameType; k
	handleBlockBreakAck (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Z)V a
	handleCreativeModeItemAdd (Lnet/minecraft/world/item/ItemStack;I)V a
	handleCreativeModeItemDrop (Lnet/minecraft/world/item/ItemStack;)V a
	handleInventoryButtonClick (II)V a
	handleInventoryMouseClick (IIILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V a
	handlePickItem (I)V a
	handlePlaceRecipe (ILnet/minecraft/world/item/crafting/Recipe;Z)V a
	hasExperience ()Z e
	hasFarPickRange ()Z h
	hasInfiniteItems ()Z g
	hasMissTime ()Z f
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/EntityHitResult;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAlwaysFlying ()Z j
	isDestroying ()Z m
	isServerControlledInventory ()Z i
	releaseUsingItem (Lnet/minecraft/world/entity/player/Player;)V b
	sameDestroyTarget (Lnet/minecraft/core/BlockPos;)Z b
	sendBlockAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	setLocalMode (Lnet/minecraft/world/level/GameType;)V a
	setLocalMode (Lnet/minecraft/world/level/GameType;Lnet/minecraft/world/level/GameType;)V a
	startDestroyBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	stopDestroyBlock ()V b
	tick ()V d
	useItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/client/multiplayer/PlayerInfo elp
	displayHealth i
	gameMode c
	healthBlinkTime k
	lastHealth h
	lastHealthTime j
	latency d
	pendingTextures e
	profile a
	renderVisibilityId l
	skinModel f
	tabListDisplayName g
	textureLocations b
	getCapeLocation ()Lnet/minecraft/resources/ResourceLocation; h
	getDisplayHealth ()I n
	getElytraLocation ()Lnet/minecraft/resources/ResourceLocation; i
	getGameMode ()Lnet/minecraft/world/level/GameType; b
	getHealthBlinkTime ()J p
	getLastHealth ()I m
	getLastHealthTime ()J o
	getLatency ()I c
	getModelName ()Ljava/lang/String; f
	getProfile ()Lcom/mojang/authlib/GameProfile; a
	getRenderVisibilityId ()J q
	getSkinLocation ()Lnet/minecraft/resources/ResourceLocation; g
	getTabListDisplayName ()Lnet/minecraft/network/chat/Component; l
	getTeam ()Lnet/minecraft/world/scores/PlayerTeam; j
	isCapeLoaded ()Z d
	isSkinLoaded ()Z e
	registerTextures ()V k
	setDisplayHealth (I)V c
	setGameMode (Lnet/minecraft/world/level/GameType;)V a
	setHealthBlinkTime (J)V b
	setLastHealth (I)V b
	setLastHealthTime (J)V a
	setLatency (I)V a
	setRenderVisibilityId (J)V c
	setTabListDisplayName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/multiplayer/ServerData elq
	iconB64 k
	ip b
	lan l
	motd d
	name a
	packStatus j
	ping e
	pinged h
	playerList i
	protocol f
	status c
	version g
	copyFrom (Lnet/minecraft/client/multiplayer/ServerData;)V a
	getIconB64 ()Ljava/lang/String; c
	getResourcePackStatus ()Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus; b
	isLan ()Z d
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/client/multiplayer/ServerData; a
	setIconB64 (Ljava/lang/String;)V a
	setResourcePackStatus (Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus;)V a
	write ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/client/multiplayer/ServerData$ServerPackStatus elq$a
	$VALUES e
	DISABLED b
	ENABLED a
	PROMPT c
	name d
	$values ()[Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus; b
	getName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/multiplayer/ServerList elr
	LOGGER a
	minecraft b
	serverList c
	add (Lnet/minecraft/client/multiplayer/ServerData;)V b
	get (I)Lnet/minecraft/client/multiplayer/ServerData; a
	load ()V a
	remove (Lnet/minecraft/client/multiplayer/ServerData;)V a
	replace (ILnet/minecraft/client/multiplayer/ServerData;)V a
	save ()V b
	saveSingleServer (Lnet/minecraft/client/multiplayer/ServerData;)V c
	size ()I c
	swap (II)V a
net/minecraft/client/multiplayer/ServerStatusPinger els
	CANT_CONNECT_MESSAGE c
	LOGGER b
	SPLITTER a
	connections d
	formatPlayerCount (II)Lnet/minecraft/network/chat/Component; a
	onPingFailed (Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/multiplayer/ServerData;)V a
	pingLegacyServer (Ljava/net/InetSocketAddress;Lnet/minecraft/client/multiplayer/ServerData;)V a
	pingServer (Lnet/minecraft/client/multiplayer/ServerData;Ljava/lang/Runnable;)V a
	removeAll ()V b
	tick ()V a
net/minecraft/client/multiplayer/resolver/AddressCheck elu
	createFromService ()Lnet/minecraft/client/multiplayer/resolver/AddressCheck; a
	isAllowed (Lnet/minecraft/client/multiplayer/resolver/ResolvedServerAddress;)Z a
	isAllowed (Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)Z a
net/minecraft/client/multiplayer/resolver/ResolvedServerAddress elv
	asInetSocketAddress ()Ljava/net/InetSocketAddress; d
	from (Ljava/net/InetSocketAddress;)Lnet/minecraft/client/multiplayer/resolver/ResolvedServerAddress; a
	getHostIp ()Ljava/lang/String; b
	getHostName ()Ljava/lang/String; a
	getPort ()I c
net/minecraft/client/multiplayer/resolver/ServerAddress elw
	INVALID c
	LOGGER a
	hostAndPort b
	getHost ()Ljava/lang/String; a
	getPort ()I b
	isValidAddress (Ljava/lang/String;)Z b
	parsePort (Ljava/lang/String;)I c
	parseString (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/resolver/ServerAddress; a
net/minecraft/client/multiplayer/resolver/ServerAddressResolver elx
	LOGGER a
	SYSTEM b
net/minecraft/client/multiplayer/resolver/ServerNameResolver ely
	DEFAULT a
	addressCheck d
	redirectHandler c
	resolver b
	resolveAddress (Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)Ljava/util/Optional; a
net/minecraft/client/multiplayer/resolver/ServerRedirectHandler elz
	EMPTY b
	LOGGER a
net/minecraft/client/particle/AshParticle emc
net/minecraft/client/particle/AshParticle$Provider emc$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/AttackSweepParticle emd
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/AttackSweepParticle$Provider emd$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BaseAshSmokeParticle eme
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BlockMarker emf
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/BlockMarker$Provider emf$a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle emg
	uo a
	vo b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
net/minecraft/client/particle/BreakingItemParticle$Provider emg$a
	createParticle (Lnet/minecraft/core/particles/ItemParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle$SlimeProvider emg$b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle$SnowballProvider emg$c
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubbleColumnUpParticle emh
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubbleColumnUpParticle$Provider emh$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubbleParticle emi
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubbleParticle$Provider emi$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubblePopParticle emj
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubblePopParticle$Provider emj$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CampfireSmokeParticle emk
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CampfireSmokeParticle$CosyProvider emk$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CampfireSmokeParticle$SignalProvider emk$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle eml
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CritParticle$DamageIndicatorProvider eml$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle$MagicProvider eml$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle$Provider eml$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DragonBreathParticle emm
	COLOR_MAX b
	COLOR_MAX_BLUE K
	COLOR_MAX_GREEN J
	COLOR_MAX_RED I
	COLOR_MIN a
	COLOR_MIN_BLUE H
	COLOR_MIN_GREEN G
	COLOR_MIN_RED F
	hasHitGround L
	sprites M
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/DragonBreathParticle$Provider emm$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle emn
	isGlowing a
	type b
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getType ()Lnet/minecraft/world/level/material/Fluid; g
	postMoveUpdate ()V i
	preMoveUpdate ()V h
	tick ()V a
net/minecraft/client/particle/DripParticle$CoolingDripHangParticle emn$a
	preMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$DripHangParticle emn$b
	fallingParticle b
	postMoveUpdate ()V i
	preMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$DripLandParticle emn$c
net/minecraft/client/particle/DripParticle$DripstoneFallAndLandParticle emn$d
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$DripstoneLavaFallProvider emn$e
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$DripstoneLavaHangProvider emn$f
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$DripstoneWaterFallProvider emn$g
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$DripstoneWaterHangProvider emn$h
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$FallAndLandParticle emn$i
	landParticle b
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$FallingParticle emn$j
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$HoneyFallAndLandParticle emn$k
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$HoneyFallProvider emn$l
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$HoneyHangProvider emn$m
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$HoneyLandProvider emn$n
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaFallProvider emn$o
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaHangProvider emn$p
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaLandProvider emn$q
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$NectarFallProvider emn$r
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearFallProvider emn$s
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearHangProvider emn$t
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearLandProvider emn$u
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$SporeBlossomFallProvider emn$v
	random b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$WaterFallProvider emn$w
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$WaterHangProvider emn$x
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustColorTransitionParticle emo
	fromColor a
	toColor b
	lerpColors (F)V f
	randomizeColor (Lcom/mojang/math/Vector3f;F)Lcom/mojang/math/Vector3f; a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/DustColorTransitionParticle$Provider emo$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/DustColorTransitionOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustParticle emp
net/minecraft/client/particle/DustParticle$Provider emp$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/DustParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustParticleBase emq
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	randomizeColor (FF)F a
	tick ()V a
net/minecraft/client/particle/EnchantmentTableParticle emr
	xStart a
	yStart b
	zStart F
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/EnchantmentTableParticle$NautilusProvider emr$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EnchantmentTableParticle$Provider emr$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EndRodParticle ems
	move (DDD)V a
net/minecraft/client/particle/EndRodParticle$Provider ems$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ExplodeParticle emt
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/ExplodeParticle$Provider emt$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FallingDustParticle emu
	rotSpeed a
	sprites b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/FallingDustParticle$Provider emu$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles emv
net/minecraft/client/particle/FireworkParticles$FlashProvider emv$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles$OverlayParticle emv$b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/FireworkParticles$SparkParticle emv$c
	engine G
	fadeB J
	fadeG I
	fadeR H
	flicker F
	hasFade K
	trail b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	setFlicker (Z)V b
	setTrail (Z)V a
	tick ()V a
net/minecraft/client/particle/FireworkParticles$SparkProvider emv$d
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles$Starter emv$e
	engine b
	explosions D
	life a
	twinkleDelay E
	createParticle (DDDDDD[I[IZZ)V a
	createParticleBall (DI[I[IZZ)V a
	createParticleBurst ([I[IZZ)V a
	createParticleShape (D[[D[I[IZZZ)V a
	isFarAwayFromCamera ()Z c
	tick ()V a
net/minecraft/client/particle/FlameParticle emw
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
net/minecraft/client/particle/FlameParticle$Provider emw$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FlameParticle$SmallFlameProvider emw$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle emx
	RANDOM a
	sprites b
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/GlowParticle$ElectricSparkProvider emx$a
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$GlowSquidProvider emx$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$ScrapeProvider emx$c
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$WaxOffProvider emx$d
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$WaxOnProvider emx$e
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HeartParticle emy
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/HeartParticle$AngryVillagerProvider emy$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HeartParticle$Provider emy$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HugeExplosionParticle emz
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/HugeExplosionParticle$Provider emz$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HugeExplosionSeedParticle ena
	life a
	lifeTime b
	tick ()V a
net/minecraft/client/particle/HugeExplosionSeedParticle$Provider ena$a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ItemPickupParticle enb
	LIFE_TIME a
	entityRenderDispatcher G
	itemEntity D
	life F
	renderBuffers b
	target E
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getSafeCopy (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	tick ()V a
net/minecraft/client/particle/LargeSmokeParticle enc
net/minecraft/client/particle/LargeSmokeParticle$Provider enc$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/LavaParticle end
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/LavaParticle$Provider end$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/MobAppearanceParticle ene
	model a
	renderType b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/MobAppearanceParticle$Provider ene$a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/NoRenderParticle enf
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/NoteParticle eng
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/NoteParticle$Provider eng$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/Particle enh
	INITIAL_AABB a
	MAXIMUM_COLLISION_VELOCITY_SQUARED b
	age s
	alpha y
	bCol x
	bb D
	bbHeight q
	bbWidth p
	friction B
	gCol w
	gravity u
	hasPhysics n
	level c
	lifetime t
	oRoll A
	onGround m
	rCol v
	random r
	removed o
	roll z
	speedUpWhenYMotionIsBlocked C
	stoppedByCollision E
	x g
	xd j
	xo d
	y h
	yd k
	yo e
	z i
	zd l
	zo f
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; n
	getLifetime ()I j
	getLightColor (F)I a
	getParticleGroup ()Ljava/util/Optional; o
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	isAlive ()Z m
	move (DDD)V a
	remove ()V k
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	scale (F)Lnet/minecraft/client/particle/Particle; d
	setAlpha (F)V e
	setBoundingBox (Lnet/minecraft/world/phys/AABB;)V a
	setColor (FFF)V a
	setLifetime (I)V a
	setLocationFromBoundingbox ()V l
	setParticleSpeed (DDD)V b
	setPos (DDD)V c
	setPower (F)Lnet/minecraft/client/particle/Particle; c
	setSize (FF)V b
	tick ()V a
net/minecraft/client/particle/ParticleDescription eni
	textures a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/particle/ParticleDescription; a
	getTextures ()Ljava/util/List; a
net/minecraft/client/particle/ParticleEngine enj
	MAX_PARTICLES_PER_LAYER b
	RENDER_ORDER c
	level a
	particles d
	particlesToAdd i
	providers h
	random g
	spriteSets j
	textureAtlas k
	textureManager f
	trackedParticleCounts l
	trackingEmitters e
	add (Lnet/minecraft/client/particle/Particle;)V a
	close ()V a
	countParticles ()Ljava/lang/String; d
	crack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createTrackingEmitter (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleOptions;)V a
	createTrackingEmitter (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleOptions;I)V a
	destroy (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	hasSpaceInParticleLimit (Lnet/minecraft/core/particles/ParticleGroup;)Z a
	loadParticleDescription (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)V a
	makeParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)Lnet/minecraft/client/particle/Particle; b
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration;)V a
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleProvider;)V a
	registerProviders ()V e
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/renderer/LightTexture;Lnet/minecraft/client/Camera;F)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	tick ()V b
	tickParticle (Lnet/minecraft/client/particle/Particle;)V b
	tickParticleList (Ljava/util/Collection;)V a
	updateCount (Lnet/minecraft/core/particles/ParticleGroup;I)V a
net/minecraft/client/particle/ParticleEngine$MutableSpriteSet enj$a
	sprites a
	get (II)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	get (Ljava/util/Random;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	rebind (Ljava/util/List;)V a
net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration enj$b
net/minecraft/client/particle/ParticleProvider enk
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ParticleRenderType enl
	CUSTOM e
	NO_RENDER f
	PARTICLE_SHEET_LIT d
	PARTICLE_SHEET_OPAQUE b
	PARTICLE_SHEET_TRANSLUCENT c
	TERRAIN_SHEET a
	begin (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	end (Lcom/mojang/blaze3d/vertex/Tesselator;)V a
net/minecraft/client/particle/PlayerCloudParticle enm
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/PlayerCloudParticle$Provider enm$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/PlayerCloudParticle$SneezeProvider enm$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/PortalParticle enn
	xStart a
	yStart b
	zStart F
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/PortalParticle$Provider enn$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ReversePortalParticle eno
	getQuadSize (F)F b
	tick ()V a
net/minecraft/client/particle/ReversePortalParticle$ReversePortalProvider eno$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/RisingParticle enp
net/minecraft/client/particle/SimpleAnimatedParticle enq
	fadeB G
	fadeG F
	fadeR b
	hasFade H
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	setColor (I)V b
	setFadeColor (I)V c
	tick ()V a
net/minecraft/client/particle/SingleQuadParticle enr
	quadSize D
	getQuadSize (F)F b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	scale (F)Lnet/minecraft/client/particle/Particle; d
net/minecraft/client/particle/SmokeParticle ens
net/minecraft/client/particle/SmokeParticle$Provider ens$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SnowflakeParticle ent
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SnowflakeParticle$Provider ent$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SoulParticle enu
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SoulParticle$Provider enu$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle env
	RANDOM a
	sprites b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	isCloseToScopingPlayer ()Z g
	tick ()V a
net/minecraft/client/particle/SpellParticle$AmbientMobProvider env$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$InstantProvider env$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$MobProvider env$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$Provider env$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$WitchProvider env$e
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpitParticle enw
net/minecraft/client/particle/SpitParticle$Provider enw$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SplashParticle enx
net/minecraft/client/particle/SplashParticle$Provider enx$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpriteSet eny
	get (II)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	get (Ljava/util/Random;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/particle/SquidInkParticle enz
	tick ()V a
net/minecraft/client/particle/SquidInkParticle$GlowInkProvider enz$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SquidInkParticle$Provider enz$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle eoa
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/SuspendedParticle$CrimsonSporeProvider eoa$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$SporeBlossomAirProvider eoa$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$UnderwaterProvider eoa$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$WarpedSporeProvider eoa$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle eob
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/SuspendedTownParticle$ComposterFillProvider eob$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$DolphinSpeedProvider eob$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$HappyVillagerProvider eob$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$Provider eob$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TerrainParticle eoc
	pos a
	uo b
	vo F
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
net/minecraft/client/particle/TerrainParticle$Provider eoc$a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TextureSheetParticle eod
	sprite E
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	pickSprite (Lnet/minecraft/client/particle/SpriteSet;)V a
	setSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	setSpriteFromAge (Lnet/minecraft/client/particle/SpriteSet;)V b
net/minecraft/client/particle/TotemParticle eoe
net/minecraft/client/particle/TotemParticle$Provider eoe$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TrackingEmitter eof
	entity a
	life b
	lifeTime D
	particleType E
	tick ()V a
net/minecraft/client/particle/VibrationSignalParticle eog
	vibrationPath a
	yRot b
	yRotO F
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	renderSignal (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;FLjava/util/function/Consumer;)V a
	tick ()V a
net/minecraft/client/particle/VibrationSignalParticle$Provider eog$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/VibrationParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WakeParticle eoh
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WakeParticle$Provider eoh$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WaterCurrentDownParticle eoi
	angle a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WaterCurrentDownParticle$Provider eoi$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WaterDropParticle eoj
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WaterDropParticle$Provider eoj$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WhiteAshParticle eok
	COLOR_RGB24 a
net/minecraft/client/particle/WhiteAshParticle$Provider eok$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/player/AbstractClientPlayer eom
	SKIN_HAT_HEIGHT cr
	SKIN_HAT_U f
	SKIN_HAT_V cp
	SKIN_HAT_WIDTH cq
	SKIN_HEAD_HEIGHT e
	SKIN_HEAD_U b
	SKIN_HEAD_V c
	SKIN_HEAD_WIDTH d
	SKIN_TEX_HEIGHT ct
	SKIN_TEX_WIDTH cs
	SKIN_URL_TEMPLATE cy
	clientLevel cx
	elytraRotX cu
	elytraRotY cv
	elytraRotZ cw
	playerInfo cz
	getCloakTextureLocation ()Lnet/minecraft/resources/ResourceLocation; e
	getElytraTextureLocation ()Lnet/minecraft/resources/ResourceLocation; l
	getFieldOfViewModifier ()F o
	getModelName ()Ljava/lang/String; n
	getPlayerInfo ()Lnet/minecraft/client/multiplayer/PlayerInfo; b
	getSkinLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; d
	getSkinTextureLocation ()Lnet/minecraft/resources/ResourceLocation; d
	isCapeLoaded ()Z a
	isCreative ()Z f
	isElytraLoaded ()Z g
	isSkinLoaded ()Z c
	isSpectator ()Z B_
	registerSkinTexture (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)V a
net/minecraft/client/player/Input eon
	down d
	forwardImpulse b
	jumping g
	left e
	leftImpulse a
	right f
	shiftKeyDown h
	up c
	getMoveVector ()Lnet/minecraft/world/phys/Vec2; a
	hasForwardImpulse ()Z b
	tick (Z)V a
net/minecraft/client/player/KeyboardInput eoo
	MOVING_SLOW_FACTOR j
	options i
	tick (Z)V a
net/minecraft/client/player/LocalPlayer eop
	MINOR_COLLISION_ANGLE_THRESHOLD_RADIAN cO
	POSITION_REMINDER_INTERVAL cJ
	SUFFOCATING_COLLISION_CHECK_SCALE cN
	WATER_VISION_MAX_TIME cK
	WATER_VISION_QUICK_PERCENT cM
	WATER_VISION_QUICK_TIME cL
	ambientSoundHandlers cR
	autoJumpEnabled dk
	autoJumpTime dl
	connection cy
	crouching cZ
	flashOnSetHealth dd
	handsBusy dj
	input cz
	jumpRidingScale dg
	jumpRidingTicks df
	lastOnGround cY
	minecraft cA
	oPortalTime cI
	permissionLevel cS
	portalTime cH
	positionReminder dc
	recipeBook cQ
	serverBrand de
	showDeathScreen do
	sprintTime cC
	sprintTriggerTime cB
	startedUsingItem dh
	stats cP
	usingItemHand di
	wasFallFlying dm
	wasShiftKeyDown da
	wasSprinting db
	waterVisionTime dn
	xBob cE
	xBobO cG
	xLast cT
	xRotLast cX
	yBob cD
	yBobO cF
	yLast1 cU
	yRotLast cW
	zLast cV
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	aiStep ()V w_
	canAutoJump ()Z O
	canSpawnSoulSpeedParticle ()Z dx
	canSpawnSprintParticle ()Z ba
	chat (Ljava/lang/String;)V e
	clientSideCloseContainer ()V s
	closeContainer ()V q
	crit (Lnet/minecraft/world/entity/Entity;)V a
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	drop (Z)Z a
	getCurrentMood ()F r
	getJumpRidingScale ()F D
	getPermissionLevel ()I B
	getRecipeBook ()Lnet/minecraft/client/ClientRecipeBook; z
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getServerBrand ()Ljava/lang/String; x
	getStats ()Lnet/minecraft/stats/StatsCounter; y
	getUsedItemHand ()Lnet/minecraft/world/InteractionHand; eM
	getViewXRot (F)F f
	getViewYRot (F)F g
	getWaterVision ()F L
	handleEntityEvent (B)V a
	handleNetherPortalClient ()V N
	hasEnoughImpulseToStartSprinting ()Z Q
	heal (F)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtTo (F)V w
	isAutoJumpEnabled ()Z K
	isControlledCamera ()Z G
	isCrouching ()Z bN
	isEffectiveAi ()Z eH
	isHandsBusy ()Z J
	isHorizontalCollisionMinor (Lnet/minecraft/world/phys/Vec3;)Z c
	isLocalPlayer ()Z fo
	isMoving ()Z P
	isMovingSlowly ()Z E
	isRidingJumpable ()Z C
	isShiftKeyDown ()Z bI
	isSuppressingSlidingDownLadder ()Z eT
	isUnderWater ()Z aU
	isUsingItem ()Z eL
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	moveTowardsClosestSpace (DD)V b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onUpdateAbilities ()V w
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openJigsawBlock (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity;)V a
	openMinecartCommandBlock (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	openStructureBlock (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	removeEffectNoUpdate (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; c
	removeRecipeHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V a
	removeVehicle ()V bt
	resetPos ()V I
	respawn ()V fn
	rideTick ()V bo
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	sendOpenInventory ()V u
	sendPosition ()V M
	sendRidingJump ()V t
	serverAiStep ()V eE
	setExperienceValues (FII)V a
	setPermissionLevel (I)V a
	setServerBrand (Ljava/lang/String;)V f
	setShowDeathScreen (Z)V b
	setSprinting (Z)V g
	shouldShowDeathScreen ()Z A
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startUsingItem (Lnet/minecraft/world/InteractionHand;)V c
	stopUsingItem ()V eR
	suffocatesAt (Lnet/minecraft/core/BlockPos;)Z g
	swing (Lnet/minecraft/world/InteractionHand;)V a
	tick ()V k
	tickDeath ()V dG
	updateAutoJump (FF)V f
	updateIsUnderwater ()Z fi
	updateTutorialInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
net/minecraft/client/player/RemotePlayer eoq
	aiStep ()V w_
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
	updatePlayerPose ()V fj
net/minecraft/client/player/inventory/Hotbar eor
	items a
	createTag ()Lnet/minecraft/nbt/ListTag; a
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
net/minecraft/client/profiling/ClientMetricsSamplersProvider eou
	levelRenderer a
	samplerFactory c
	samplers b
	registerStaticSamplers ()V a
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
net/minecraft/client/renderer/BiomeColors eow
	FOLIAGE_COLOR_RESOLVER b
	GRASS_COLOR_RESOLVER a
	WATER_COLOR_RESOLVER c
	getAverageColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getAverageFoliageColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I b
	getAverageGrassColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getAverageWaterColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I c
net/minecraft/client/renderer/BlockEntityWithoutLevelRenderer eox
	DEFAULT_SHULKER_BOX b
	SHULKER_BOXES a
	banner f
	bed g
	blockEntityRenderDispatcher l
	chest c
	conduit h
	enderChest e
	entityModelSet m
	shieldModel i
	skullModels k
	trappedChest d
	tridentModel j
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	renderByItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/ChunkBufferBuilderPack eoy
	builders a
	builder (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/BufferBuilder; a
	clearAll ()V a
	discardAll ()V b
net/minecraft/client/renderer/CubeMap eoz
	SIDES a
	images b
	preload (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	render (Lnet/minecraft/client/Minecraft;FFF)V a
net/minecraft/client/renderer/DimensionSpecialEffects epa
	EFFECTS a
	cloudLevel c
	constantAmbientLight g
	forceBrightLightmap f
	hasGround d
	skyType e
	sunriseCol b
	constantAmbientLight ()Z e
	forType (Lnet/minecraft/world/level/dimension/DimensionType;)Lnet/minecraft/client/renderer/DimensionSpecialEffects; a
	forceBrightLightmap ()Z d
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getCloudHeight ()F a
	getSunriseColor (FF)[F a
	hasGround ()Z b
	isFoggyAt (II)Z a
	skyType ()Lnet/minecraft/client/renderer/DimensionSpecialEffects$SkyType; c
net/minecraft/client/renderer/DimensionSpecialEffects$EndEffects epa$a
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getSunriseColor (FF)[F a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$NetherEffects epa$b
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$OverworldEffects epa$c
	CLOUD_LEVEL a
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$SkyType epa$d
	$VALUES d
	END c
	NONE a
	NORMAL b
	$values ()[Lnet/minecraft/client/renderer/DimensionSpecialEffects$SkyType; a
net/minecraft/client/renderer/EffectInstance epb
	ALWAYS_REAPPLY d
	DUMMY_UNIFORM c
	EFFECT_SHADER_PATH a
	LOGGER b
	attributeNames r
	attributes q
	blend p
	dirty o
	fragmentProgram t
	lastAppliedEffect e
	lastProgramId f
	name n
	programId m
	samplerLocations i
	samplerMap g
	samplerNames h
	uniformLocations k
	uniformMap l
	uniforms j
	vertexProgram s
	apply ()V g
	attachToProgram ()V e
	clear ()V f
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getName ()Ljava/lang/String; h
	getOrCreate (Lnet/minecraft/server/packs/resources/ResourceManager;Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/EffectProgram; a
	getUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Uniform; a
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
	parseBlendNode (Lcom/google/gson/JsonObject;)Lcom/mojang/blaze3d/shaders/BlendMode; a
	parseSamplerNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	safeGetUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/AbstractUniform; b
	setSampler (Ljava/lang/String;Ljava/util/function/IntSupplier;)V a
	updateLocations ()V i
net/minecraft/client/renderer/FaceInfo epc
	$VALUES i
	BY_FACING g
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	infos h
	$values ()[Lnet/minecraft/client/renderer/FaceInfo; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/FaceInfo; a
	getVertexInfo (I)Lnet/minecraft/client/renderer/FaceInfo$VertexInfo; a
net/minecraft/client/renderer/FaceInfo$Constants epc$a
	MAX_X c
	MAX_Y b
	MAX_Z a
	MIN_X f
	MIN_Y e
	MIN_Z d
net/minecraft/client/renderer/FaceInfo$VertexInfo epc$b
	xFace a
	yFace b
	zFace c
net/minecraft/client/renderer/FogRenderer epd
	BIOME_FOG_TRANSITION_TIME a
	WATER_FOG_DISTANCE b
	biomeChangedTime h
	fogBlue e
	fogGreen d
	fogRed c
	previousBiomeFog g
	targetBiomeFog f
	levelFogColor ()V b
	setupColor (Lnet/minecraft/client/Camera;FLnet/minecraft/client/multiplayer/ClientLevel;IF)V a
	setupFog (Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/FogRenderer$FogMode;FZ)V a
	setupNoFog ()V a
net/minecraft/client/renderer/FogRenderer$FogMode epd$a
	$VALUES c
	FOG_SKY a
	FOG_TERRAIN b
	$values ()[Lnet/minecraft/client/renderer/FogRenderer$FogMode; a
net/minecraft/client/renderer/GameRenderer epe
	DEPTH_BUFFER_DEBUG h
	EFFECTS J
	EFFECT_NONE d
	ITEM_ACTIVATION_ANIMATION_LENGTH c
	LOGGER g
	NAUSEA_LOCATION f
	PROJECTION_Z_NEAR a
	blitShader e
	blockShader T
	darkenWorldAmount r
	darkenWorldAmountO s
	effectActive L
	effectIndex K
	fov p
	hasWorldScreenshot w
	itemActivationItem E
	itemActivationOffX G
	itemActivationOffY H
	itemActivationTicks F
	itemInHandRenderer b
	lastActiveTime x
	lastScreenshotAttempt v
	lightTexture y
	mainCamera M
	mapRenderer m
	minecraft i
	newEntityShader U
	oldFov q
	overlayTexture z
	panoramicMode A
	particleShader V
	positionColorLightmapShader W
	positionColorShader P
	positionColorTexLightmapShader X
	positionColorTexShader Q
	positionShader O
	positionTexColorNormalShader Y
	positionTexColorShader S
	positionTexLightmapColorShader Z
	positionTexShader R
	postEffect I
	random k
	renderBlockOutline u
	renderBuffers n
	renderDistance l
	renderHand t
	rendertypeArmorCutoutNoCullShader ag
	rendertypeArmorEntityGlintShader aA
	rendertypeArmorGlintShader az
	rendertypeBeaconBeamShader ap
	rendertypeCrumblingShader aP
	rendertypeCutoutMippedShader ab
	rendertypeCutoutShader ac
	rendertypeEndGatewayShader aN
	rendertypeEndPortalShader aM
	rendertypeEnergySwirlShader av
	rendertypeEntityAlphaShader at
	rendertypeEntityCutoutNoCullShader aj
	rendertypeEntityCutoutNoCullZOffsetShader ak
	rendertypeEntityCutoutShader ai
	rendertypeEntityDecalShader aq
	rendertypeEntityGlintDirectShader aF
	rendertypeEntityGlintShader aE
	rendertypeEntityNoOutlineShader ar
	rendertypeEntityShadowShader as
	rendertypeEntitySmoothCutoutShader ao
	rendertypeEntitySolidShader ah
	rendertypeEntityTranslucentCullShader am
	rendertypeEntityTranslucentShader an
	rendertypeEyesShader au
	rendertypeGlintDirectShader aD
	rendertypeGlintShader aC
	rendertypeGlintTranslucentShader aB
	rendertypeItemEntityTranslucentCullShader al
	rendertypeLeashShader aw
	rendertypeLightningShader aK
	rendertypeLinesShader aO
	rendertypeOutlineShader ay
	rendertypeSolidShader aa
	rendertypeTextIntensitySeeThroughShader aJ
	rendertypeTextIntensityShader aH
	rendertypeTextSeeThroughShader aI
	rendertypeTextShader aG
	rendertypeTranslucentMovingBlockShader ae
	rendertypeTranslucentNoCrumblingShader af
	rendertypeTranslucentShader ad
	rendertypeTripwireShader aL
	rendertypeWaterMaskShader ax
	resourceManager j
	shaders N
	tick o
	zoom B
	zoomX C
	zoomY D
	bobHurt (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	bobView (Lcom/mojang/blaze3d/vertex/PoseStack;F)V b
	checkEntityPostEffect (Lnet/minecraft/world/entity/Entity;)V a
	currentEffect ()Lnet/minecraft/client/renderer/PostChain; g
	cycleEffect ()V e
	displayItemActivation (Lnet/minecraft/world/item/ItemStack;)V a
	getBlockShader ()Lnet/minecraft/client/renderer/ShaderInstance; u
	getDarkenWorldAmount (F)F b
	getDepthFar ()F h
	getFov (Lnet/minecraft/client/Camera;FZ)D a
	getMainCamera ()Lnet/minecraft/client/Camera; m
	getMapRenderer ()Lnet/minecraft/client/gui/MapRenderer; j
	getMinecraft ()Lnet/minecraft/client/Minecraft; k
	getNewEntityShader ()Lnet/minecraft/client/renderer/ShaderInstance; v
	getNightVisionScale (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getParticleShader ()Lnet/minecraft/client/renderer/ShaderInstance; w
	getPositionColorLightmapShader ()Lnet/minecraft/client/renderer/ShaderInstance; x
	getPositionColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; q
	getPositionColorTexLightmapShader ()Lnet/minecraft/client/renderer/ShaderInstance; y
	getPositionColorTexShader ()Lnet/minecraft/client/renderer/ShaderInstance; r
	getPositionShader ()Lnet/minecraft/client/renderer/ShaderInstance; p
	getPositionTexColorNormalShader ()Lnet/minecraft/client/renderer/ShaderInstance; z
	getPositionTexColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; t
	getPositionTexLightmapColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; A
	getPositionTexShader ()Lnet/minecraft/client/renderer/ShaderInstance; s
	getProjectionMatrix (D)Lcom/mojang/math/Matrix4f; a
	getRenderDistance ()F l
	getRendertypeArmorCutoutNoCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; H
	getRendertypeArmorEntityGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; ab
	getRendertypeArmorGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; aa
	getRendertypeBeaconBeamShader ()Lnet/minecraft/client/renderer/ShaderInstance; Q
	getRendertypeCrumblingShader ()Lnet/minecraft/client/renderer/ShaderInstance; aq
	getRendertypeCutoutMippedShader ()Lnet/minecraft/client/renderer/ShaderInstance; C
	getRendertypeCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; D
	getRendertypeEndGatewayShader ()Lnet/minecraft/client/renderer/ShaderInstance; ao
	getRendertypeEndPortalShader ()Lnet/minecraft/client/renderer/ShaderInstance; an
	getRendertypeEnergySwirlShader ()Lnet/minecraft/client/renderer/ShaderInstance; W
	getRendertypeEntityAlphaShader ()Lnet/minecraft/client/renderer/ShaderInstance; U
	getRendertypeEntityCutoutNoCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; K
	getRendertypeEntityCutoutNoCullZOffsetShader ()Lnet/minecraft/client/renderer/ShaderInstance; L
	getRendertypeEntityCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; J
	getRendertypeEntityDecalShader ()Lnet/minecraft/client/renderer/ShaderInstance; R
	getRendertypeEntityGlintDirectShader ()Lnet/minecraft/client/renderer/ShaderInstance; ag
	getRendertypeEntityGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; af
	getRendertypeEntityNoOutlineShader ()Lnet/minecraft/client/renderer/ShaderInstance; S
	getRendertypeEntityShadowShader ()Lnet/minecraft/client/renderer/ShaderInstance; T
	getRendertypeEntitySmoothCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; P
	getRendertypeEntitySolidShader ()Lnet/minecraft/client/renderer/ShaderInstance; I
	getRendertypeEntityTranslucentCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; N
	getRendertypeEntityTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; O
	getRendertypeEyesShader ()Lnet/minecraft/client/renderer/ShaderInstance; V
	getRendertypeGlintDirectShader ()Lnet/minecraft/client/renderer/ShaderInstance; ae
	getRendertypeGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; ad
	getRendertypeGlintTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; ac
	getRendertypeItemEntityTranslucentCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; M
	getRendertypeLeashShader ()Lnet/minecraft/client/renderer/ShaderInstance; X
	getRendertypeLightningShader ()Lnet/minecraft/client/renderer/ShaderInstance; al
	getRendertypeLinesShader ()Lnet/minecraft/client/renderer/ShaderInstance; ap
	getRendertypeOutlineShader ()Lnet/minecraft/client/renderer/ShaderInstance; Z
	getRendertypeSolidShader ()Lnet/minecraft/client/renderer/ShaderInstance; B
	getRendertypeTextIntensitySeeThroughShader ()Lnet/minecraft/client/renderer/ShaderInstance; ak
	getRendertypeTextIntensityShader ()Lnet/minecraft/client/renderer/ShaderInstance; ai
	getRendertypeTextSeeThroughShader ()Lnet/minecraft/client/renderer/ShaderInstance; aj
	getRendertypeTextShader ()Lnet/minecraft/client/renderer/ShaderInstance; ah
	getRendertypeTranslucentMovingBlockShader ()Lnet/minecraft/client/renderer/ShaderInstance; F
	getRendertypeTranslucentNoCrumblingShader ()Lnet/minecraft/client/renderer/ShaderInstance; G
	getRendertypeTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; E
	getRendertypeTripwireShader ()Lnet/minecraft/client/renderer/ShaderInstance; am
	getRendertypeWaterMaskShader ()Lnet/minecraft/client/renderer/ShaderInstance; Y
	getShader (Ljava/lang/String;)Lnet/minecraft/client/renderer/ShaderInstance; a
	isPanoramicMode ()Z a
	lightTexture ()Lnet/minecraft/client/renderer/LightTexture; n
	loadEffect (Lnet/minecraft/resources/ResourceLocation;)V a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	overlayTexture ()Lnet/minecraft/client/renderer/texture/OverlayTexture; o
	pick (F)V a
	preloadShader (Lnet/minecraft/server/packs/resources/ResourceProvider;Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;)Lnet/minecraft/client/renderer/ShaderInstance; a
	preloadUiShader (Lnet/minecraft/server/packs/resources/ResourceProvider;)V a
	reloadShaders (Lnet/minecraft/server/packs/resources/ResourceManager;)V b
	render (FJZ)V a
	renderConfusionOverlay (F)V c
	renderItemActivationAnimation (IIF)V a
	renderItemInHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Camera;F)V a
	renderLevel (FJLcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderZoomed (FFF)V a
	resetData ()V i
	resetProjectionMatrix (Lcom/mojang/math/Matrix4f;)V a
	resize (II)V a
	setPanoramicMode (Z)V c
	setRenderBlockOutline (Z)V b
	setRenderHand (Z)V a
	shouldRenderBlockOutline ()Z au
	shutdownEffect ()V b
	shutdownShaders ()V ar
	takeAutoScreenshot (Ljava/nio/file/Path;)V a
	tick ()V f
	tickFov ()V as
	togglePostEffect ()V d
	tryTakeScreenshotIfNeeded ()V at
net/minecraft/client/renderer/GpuWarnlistManager epf
	GPU_WARNLIST_LOCATION b
	LOGGER a
	showWarning d
	skipFabulous f
	warningDismissed e
	warnings c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/renderer/GpuWarnlistManager$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	compilePatterns (Lcom/google/gson/JsonArray;Ljava/util/List;)V a
	dismissWarning ()V e
	dismissWarningAndSkipFabulous ()V f
	getAllWarnings ()Ljava/lang/String; m
	getRendererWarnings ()Ljava/lang/String; j
	getVendorWarnings ()Ljava/lang/String; l
	getVersionWarnings ()Ljava/lang/String; k
	hasWarnings ()Z a
	isShowingWarning ()Z g
	isSkippingFabulous ()Z h
	parseJson (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lcom/google/gson/JsonObject; c
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/GpuWarnlistManager$Preparations; a
	resetWarnings ()V i
	showWarning ()V d
	willShowWarning ()Z b
net/minecraft/client/renderer/GpuWarnlistManager$Preparations epf$a
	rendererPatterns a
	vendorPatterns c
	versionPatterns b
	apply ()Lcom/google/common/collect/ImmutableMap; a
	matchAny (Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/renderer/ItemBlockRenderTypes epg
	TYPE_BY_BLOCK a
	TYPE_BY_FLUID b
	renderCutout c
	getChunkRenderType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/RenderType; a
	getMovingBlockRenderType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/RenderType; b
	getRenderLayer (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/client/renderer/RenderType; a
	setFancy (Z)V a
net/minecraft/client/renderer/ItemInHandRenderer eph
	ARM_HEIGHT_SCALE B
	ARM_POSTROTATION_X_OFFSET K
	ARM_POS_SCALE C
	ARM_POS_X D
	ARM_POS_Y E
	ARM_POS_Z F
	ARM_PREROTATION_X_OFFSET H
	ARM_PREROTATION_Y_OFFSET I
	ARM_PREROTATION_Z_OFFSET J
	ARM_PRESWING_ROT_Y G
	ARM_ROT_X L
	ARM_ROT_Y M
	ARM_ROT_Z N
	ARM_SWING_X_POS_SCALE w
	ARM_SWING_Y_POS_SCALE x
	ARM_SWING_Y_ROT_AMOUNT z
	ARM_SWING_Z_POS_SCALE y
	ARM_SWING_Z_ROT_AMOUNT A
	BOW_CHARGE_SHAKE_X_SCALE ap
	BOW_CHARGE_SHAKE_Y_SCALE aq
	BOW_CHARGE_SHAKE_Z_SCALE ar
	BOW_CHARGE_X_POS_SCALE am
	BOW_CHARGE_Y_POS_SCALE an
	BOW_CHARGE_Z_POS_SCALE ao
	BOW_CHARGE_Z_SCALE as
	BOW_MIN_SHAKE_CHARGE at
	EAT_EXTRA_JIGGLE_CUTOFF u
	EAT_EXTRA_JIGGLE_SCALE v
	EAT_JIGGLE_EXPONENT t
	EAT_JIGGLE_X_POS_SCALE q
	EAT_JIGGLE_X_ROT_AMOUNT n
	EAT_JIGGLE_Y_POS_SCALE r
	EAT_JIGGLE_Y_ROT_AMOUNT o
	EAT_JIGGLE_Z_POS_SCALE s
	EAT_JIGGLE_Z_ROT_AMOUNT p
	ITEM_HEIGHT_SCALE f
	ITEM_POS_X g
	ITEM_POS_Y h
	ITEM_POS_Z i
	ITEM_PRESWING_ROT_Y j
	ITEM_SWING_X_POS_SCALE c
	ITEM_SWING_X_ROT_AMOUNT k
	ITEM_SWING_Y_POS_SCALE d
	ITEM_SWING_Y_ROT_AMOUNT l
	ITEM_SWING_Z_POS_SCALE e
	ITEM_SWING_Z_ROT_AMOUNT m
	MAPHAND_X_ROT_AMOUNT X
	MAPHAND_Y_ROT_AMOUNT Y
	MAPHAND_Z_ROT_AMOUNT Z
	MAP_BACKGROUND a
	MAP_BACKGROUND_CHECKERBOARD b
	MAP_BORDER aj
	MAP_FINAL_SCALE ai
	MAP_GLOBAL_X_POS af
	MAP_GLOBAL_Y_POS ag
	MAP_GLOBAL_Z_POS ah
	MAP_HANDS_HEIGHT_SCALE T
	MAP_HANDS_POS_X Q
	MAP_HANDS_POS_Y R
	MAP_HANDS_POS_Z S
	MAP_HANDS_TILT_SCALE U
	MAP_HANDS_Z_ROT_AMOUNT W
	MAP_HAND_X_POS aa
	MAP_HAND_Y_POS ab
	MAP_HAND_Z_POS ac
	MAP_HEIGHT ak
	MAP_PLAYER_PITCH_SCALE V
	MAP_PRE_ROT_SCALE ae
	MAP_SWING_X_POS_SCALE O
	MAP_SWING_X_ROT_AMOUNT ad
	MAP_SWING_Z_POS_SCALE P
	MAP_WIDTH al
	entityRenderDispatcher aB
	itemRenderer aC
	mainHandHeight ax
	mainHandItem av
	minecraft au
	oMainHandHeight ay
	oOffHandHeight aA
	offHandHeight az
	offHandItem aw
	applyEatTransform (Lcom/mojang/blaze3d/vertex/PoseStack;FLnet/minecraft/world/entity/HumanoidArm;Lnet/minecraft/world/item/ItemStack;)V a
	applyItemArmAttackTransform (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/HumanoidArm;F)V a
	applyItemArmTransform (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/HumanoidArm;F)V b
	calculateMapTilt (F)F a
	evaluateWhichHandsToRender (Lnet/minecraft/client/player/LocalPlayer;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
	isChargedCrossbow (Lnet/minecraft/world/item/ItemStack;)Z a
	itemUsed (Lnet/minecraft/world/InteractionHand;)V a
	renderArmWithItem (Lnet/minecraft/client/player/AbstractClientPlayer;FFLnet/minecraft/world/InteractionHand;FLnet/minecraft/world/item/ItemStack;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderHandsWithItems (FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/player/LocalPlayer;I)V a
	renderItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/ItemStack;)V a
	renderMapHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/HumanoidArm;)V a
	renderOneHandedMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFLnet/minecraft/world/entity/HumanoidArm;FLnet/minecraft/world/item/ItemStack;)V a
	renderPlayerArm (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFLnet/minecraft/world/entity/HumanoidArm;)V a
	renderTwoHandedMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFF)V a
	selectionUsingItemWhileHoldingBowLike (Lnet/minecraft/client/player/LocalPlayer;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; b
	tick ()V a
net/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection eph$a
	$VALUES f
	RENDER_BOTH_HANDS a
	RENDER_MAIN_HAND_ONLY b
	RENDER_OFF_HAND_ONLY c
	renderMainHand d
	renderOffHand e
	$values ()[Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
	onlyForHand (Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
net/minecraft/client/renderer/ItemModelShaper epi
	modelManager c
	shapes a
	shapesCache b
	getIndex (Lnet/minecraft/world/item/Item;)I b
	getItemModel (Lnet/minecraft/world/item/Item;)Lnet/minecraft/client/resources/model/BakedModel; a
	getItemModel (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/resources/model/BakedModel; a
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; a
	rebuildCache ()V b
	register (Lnet/minecraft/world/item/Item;Lnet/minecraft/client/resources/model/ModelResourceLocation;)V a
net/minecraft/client/renderer/LevelRenderer epj
	CEILED_SECTION_DIAGONAL g
	CHUNK_SIZE a
	CLOUDS_LOCATION o
	DIRECTIONS b
	END_SKY_LOCATION p
	FORCEFIELD_LOCATION q
	HALF_A_SECOND_IN_MILLIS l
	HALF_CHUNK_SIZE d
	LOGGER c
	MINIMUM_ADVANCED_CULLING_DISTANCE f
	MIN_FOG_DISTANCE h
	MOON_LOCATION m
	RAIN_DIAMETER j
	RAIN_LOCATION r
	RAIN_RADIUS i
	SKY_DISC_RADIUS e
	SNOW_LOCATION s
	SUN_LOCATION n
	TRANSPARENT_SORT_COUNT k
	blockEntityRenderDispatcher v
	captureFrustum ar
	capturedFrustum as
	chunkRenderDispatcher am
	cloudBuffer I
	cloudsTarget U
	culledEntities ap
	cullingFrustum aq
	darkBuffer G
	destroyingBlocks L
	destructionProgress M
	entityEffect P
	entityRenderDispatcher u
	entityTarget O
	frameTimes J
	frustumPoints at
	frustumPos au
	generateClouds H
	globalBlockEntities B
	itemEntityTarget R
	lastCameraChunkX Z
	lastCameraChunkY aa
	lastCameraChunkZ ab
	lastCameraX W
	lastCameraY X
	lastCameraZ Y
	lastFullRenderChunkUpdate C
	lastViewDistance an
	level x
	minecraft t
	needsFrustumUpdate aA
	needsFullRenderChunkUpdate ay
	nextFullUpdateMillis az
	particlesTarget S
	playingRecords N
	prevCamRotX af
	prevCamRotY ag
	prevCamX ac
	prevCamY ad
	prevCamZ ae
	prevCloudColor ak
	prevCloudX ah
	prevCloudY ai
	prevCloudZ aj
	prevCloudsType al
	rainSizeX aC
	rainSizeZ aD
	rainSoundTime aB
	recentlyCompiledChunks y
	renderBuffers w
	renderChunkStorage z
	renderChunksInFrustum A
	renderedEntities ao
	skyBuffer F
	starBuffer E
	ticks K
	translucentTarget Q
	transparencyChain V
	viewArea D
	weatherTarget T
	xTransparentOld av
	yTransparentOld aw
	zTransparentOld ax
	addChainedFilledBoxVertices (Lcom/mojang/blaze3d/vertex/BufferBuilder;DDDDDDFFFF)V a
	addFrustumQuad (Lcom/mojang/blaze3d/vertex/VertexConsumer;IIIIIII)V a
	addFrustumVertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;I)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)V a
	addParticleInternal (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)Lnet/minecraft/client/particle/Particle; b
	addParticleInternal (Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)Lnet/minecraft/client/particle/Particle; b
	addRecentlyCompiledChunk (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)V a
	allChanged ()V f
	applyFrustum (Lnet/minecraft/client/renderer/culling/Frustum;)V a
	blockChanged (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	buildClouds (Lcom/mojang/blaze3d/vertex/BufferBuilder;DDDLnet/minecraft/world/phys/Vec3;)V a
	buildSkyDisc (Lcom/mojang/blaze3d/vertex/BufferBuilder;F)V a
	calculateParticleLevel (Z)Lnet/minecraft/client/ParticleStatus; a
	captureFrustum ()V m
	captureFrustum (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;DDDLnet/minecraft/client/renderer/culling/Frustum;)V a
	checkPoseStack (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	clear ()V p
	closeToBorder (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)Z a
	compileChunks (Lnet/minecraft/client/Camera;)V c
	countRenderedChunks ()I k
	createDarkSky ()V A
	createLightSky ()V B
	createStars ()V C
	deinitTransparency ()V z
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V b
	doEntityOutline ()V b
	drawStars (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	entityTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; s
	getChunkRenderDispatcher ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher; h
	getChunkStatistics ()Ljava/lang/String; g
	getCloudsTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; x
	getEntityStatistics ()Ljava/lang/String; l
	getItemEntityTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; u
	getLastViewDistance ()D j
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)I a
	getParticlesTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; v
	getRelativeFrom (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk; a
	getTotalChunks ()D i
	getTranslucentTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; t
	getWeatherTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; w
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V a
	graphicsChanged ()V e
	hasRenderedAllChunks ()Z q
	initOutline ()V a
	initTransparency ()V y
	initializeQueueForFullUpdate (Lnet/minecraft/client/Camera;Ljava/util/Queue;)V a
	killFrustum ()V n
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	needsUpdate ()V r
	notifyNearbyEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	playStreamingMusic (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/core/BlockPos;)V a
	prepareCullFrustum (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/phys/Vec3;Lcom/mojang/math/Matrix4f;)V a
	removeProgress (Lnet/minecraft/server/level/BlockDestructionProgress;)V a
	renderChunkLayer (Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack;DDDLcom/mojang/math/Matrix4f;)V a
	renderClouds (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/math/Matrix4f;FDDD)V a
	renderDebug (Lnet/minecraft/client/Camera;)V b
	renderEndSky (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderEntity (Lnet/minecraft/world/entity/Entity;DDDFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	renderHitOutline (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;DDDLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	renderLevel (Lcom/mojang/blaze3d/vertex/PoseStack;FJZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lcom/mojang/math/Matrix4f;)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFFFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/AABB;FFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V a
	renderShape (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V b
	renderSky (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/math/Matrix4f;FLjava/lang/Runnable;)V a
	renderSnowAndRain (Lnet/minecraft/client/renderer/LightTexture;FDDD)V a
	renderVoxelShape (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V a
	renderWorldBorder (Lnet/minecraft/client/Camera;)V d
	resize (II)V a
	setBlockDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setBlockDirty (Lnet/minecraft/core/BlockPos;Z)V a
	setBlocksDirty (IIIIII)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	setSectionDirty (III)V b
	setSectionDirty (IIIZ)V a
	setSectionDirtyWithNeighbors (III)V a
	setupRender (Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/culling/Frustum;ZZ)V a
	shouldShowEntityOutlines ()Z d
	tick ()V o
	tickRain (Lnet/minecraft/client/Camera;)V a
	updateGlobalBlockEntities (Ljava/util/Collection;Ljava/util/Collection;)V a
	updateRenderChunks (Ljava/util/LinkedHashSet;Lnet/minecraft/client/renderer/LevelRenderer$RenderInfoMap;Lnet/minecraft/world/phys/Vec3;Ljava/util/Queue;Z)V a
net/minecraft/client/renderer/LevelRenderer$RenderChunkInfo epj$a
	chunk a
	directions c
	sourceDirections b
	step d
	addSourceDirection (Lnet/minecraft/core/Direction;)V b
	hasDirection (Lnet/minecraft/core/Direction;)Z a
	hasSourceDirection (I)Z a
	hasSourceDirections ()Z a
	setDirections (BLnet/minecraft/core/Direction;)V a
net/minecraft/client/renderer/LevelRenderer$RenderChunkStorage epj$b
	renderChunks b
	renderInfoMap a
net/minecraft/client/renderer/LevelRenderer$RenderInfoMap epj$c
	infos a
	get (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)Lnet/minecraft/client/renderer/LevelRenderer$RenderChunkInfo; a
	put (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;Lnet/minecraft/client/renderer/LevelRenderer$RenderChunkInfo;)V a
net/minecraft/client/renderer/LevelRenderer$TransparencyShaderException epj$d
net/minecraft/client/renderer/LightTexture epk
	FULL_BLOCK c
	FULL_BRIGHT a
	FULL_SKY b
	blockLightRedFlicker h
	lightPixels e
	lightTexture d
	lightTextureLocation f
	minecraft j
	renderer i
	updateLightTexture g
	block (I)I a
	getBrightness (Lnet/minecraft/world/level/Level;I)F a
	notGamma (F)F b
	pack (II)I a
	sky (I)I b
	tick ()V a
	turnOffLightLayer ()V b
	turnOnLightLayer ()V c
	updateLightTexture (F)V a
net/minecraft/client/renderer/MultiBufferSource epl
	immediate (Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; a
	immediateWithBuffers (Ljava/util/Map;Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; a
net/minecraft/client/renderer/MultiBufferSource$BufferSource epl$a
	builder a
	fixedBuffers b
	lastState c
	startedBuffers d
	endBatch ()V b
	endBatch (Lnet/minecraft/client/renderer/RenderType;)V a
	endLastBatch ()V a
	getBuilderRaw (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/BufferBuilder; b
net/minecraft/client/renderer/OutlineBufferSource epm
	bufferSource a
	outlineBufferSource b
	teamA f
	teamB e
	teamG d
	teamR c
	endOutlineBatch ()V a
	setColor (IIII)V a
net/minecraft/client/renderer/OutlineBufferSource$EntityOutlineGenerator epm$a
	delegate g
	u k
	v l
	x h
	y i
	z j
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V c
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V j
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
net/minecraft/client/renderer/PanoramaRenderer epn
	cubeMap b
	minecraft a
	time c
	render (FF)V a
net/minecraft/client/renderer/PostChain epo
	MAIN_RENDER_TARGET a
	customRenderTargets f
	fullSizedTargets g
	lastStamp l
	name d
	passes e
	resourceManager c
	screenHeight j
	screenTarget b
	screenWidth i
	shaderOrthoMatrix h
	time k
	addPass (Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Lcom/mojang/blaze3d/pipeline/RenderTarget;)Lnet/minecraft/client/renderer/PostPass; a
	addTempTarget (Ljava/lang/String;II)V a
	getName ()Ljava/lang/String; a
	getRenderTarget (Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget; b
	getTempTarget (Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget; a
	load (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/resources/ResourceLocation;)V a
	parsePassNode (Lnet/minecraft/client/renderer/texture/TextureManager;Lcom/google/gson/JsonElement;)V a
	parseTargetNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	process (F)V a
	resize (II)V a
	updateOrthoMatrix ()V b
net/minecraft/client/renderer/PostPass epp
	auxAssets d
	auxHeights g
	auxNames e
	auxWidths f
	effect c
	inTarget a
	outTarget b
	shaderOrthoMatrix h
	addAuxAsset (Ljava/lang/String;Ljava/util/function/IntSupplier;II)V a
	getEffect ()Lnet/minecraft/client/renderer/EffectInstance; b
	getName ()Ljava/lang/String; a
	process (F)V a
	setOrthoMatrix (Lcom/mojang/math/Matrix4f;)V a
net/minecraft/client/renderer/Rect2i epq
	height d
	width c
	xPos a
	yPos b
	contains (II)Z b
	getHeight ()I d
	getWidth ()I c
	getX ()I a
	getY ()I b
	intersect (Lnet/minecraft/client/renderer/Rect2i;)Lnet/minecraft/client/renderer/Rect2i; a
	setHeight (I)V d
	setPosition (II)V a
	setWidth (I)V c
	setX (I)V a
	setY (I)V b
net/minecraft/client/renderer/RenderBuffers epr
	bufferSource c
	crumblingBufferSource d
	fixedBufferPack a
	fixedBuffers b
	outlineBufferSource e
	bufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; b
	crumblingBufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; c
	fixedBufferPack ()Lnet/minecraft/client/renderer/ChunkBufferBuilderPack; a
	outlineBufferSource ()Lnet/minecraft/client/renderer/OutlineBufferSource; d
	put (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Lnet/minecraft/client/renderer/RenderType;)V a
net/minecraft/client/renderer/RenderStateShard eps
	ADDITIVE_TRANSPARENCY c
	BLOCK_SHADER i
	BLOCK_SHEET ah
	BLOCK_SHEET_MIPPED ag
	CLOUDS_TARGET aG
	COLOR_DEPTH_WRITE av
	COLOR_WRITE aw
	CRUMBLING_TRANSPARENCY f
	CULL aq
	DEFAULT_LINE aI
	DEFAULT_TEXTURING aj
	DEPTH_WRITE ax
	ENTITY_GLINT_TEXTURING al
	EQUAL_DEPTH_TEST at
	GLINT_TEXTURING ak
	GLINT_TRANSPARENCY e
	ITEM_ENTITY_TARGET aH
	LEQUAL_DEPTH_TEST au
	LIGHTMAP am
	LIGHTNING_TRANSPARENCY d
	MAIN_TARGET aB
	NEW_ENTITY_SHADER j
	NO_CULL ar
	NO_DEPTH_TEST as
	NO_LAYERING ay
	NO_LIGHTMAP an
	NO_OVERLAY ap
	NO_SHADER h
	NO_TEXTURE ai
	NO_TRANSPARENCY b
	OUTLINE_TARGET aC
	OVERLAY ao
	PARTICLES_TARGET aE
	POLYGON_OFFSET_LAYERING az
	POSITION_COLOR_LIGHTMAP_SHADER k
	POSITION_COLOR_SHADER p
	POSITION_COLOR_TEX_LIGHTMAP_SHADER o
	POSITION_COLOR_TEX_SHADER m
	POSITION_SHADER l
	POSITION_TEX_SHADER n
	RENDERTYPE_ARMOR_CUTOUT_NO_CULL_SHADER w
	RENDERTYPE_ARMOR_ENTITY_GLINT_SHADER Q
	RENDERTYPE_ARMOR_GLINT_SHADER P
	RENDERTYPE_BEACON_BEAM_SHADER F
	RENDERTYPE_CRUMBLING_SHADER W
	RENDERTYPE_CUTOUT_MIPPED_SHADER r
	RENDERTYPE_CUTOUT_SHADER s
	RENDERTYPE_END_GATEWAY_SHADER ae
	RENDERTYPE_END_PORTAL_SHADER ad
	RENDERTYPE_ENERGY_SWIRL_SHADER L
	RENDERTYPE_ENTITY_ALPHA_SHADER J
	RENDERTYPE_ENTITY_CUTOUT_NO_CULL_SHADER z
	RENDERTYPE_ENTITY_CUTOUT_NO_CULL_Z_OFFSET_SHADER A
	RENDERTYPE_ENTITY_CUTOUT_SHADER y
	RENDERTYPE_ENTITY_DECAL_SHADER G
	RENDERTYPE_ENTITY_GLINT_DIRECT_SHADER V
	RENDERTYPE_ENTITY_GLINT_SHADER U
	RENDERTYPE_ENTITY_NO_OUTLINE_SHADER H
	RENDERTYPE_ENTITY_SHADOW_SHADER I
	RENDERTYPE_ENTITY_SMOOTH_CUTOUT_SHADER E
	RENDERTYPE_ENTITY_SOLID_SHADER x
	RENDERTYPE_ENTITY_TRANSLUCENT_CULL_SHADER C
	RENDERTYPE_ENTITY_TRANSLUCENT_SHADER D
	RENDERTYPE_EYES_SHADER K
	RENDERTYPE_GLINT_DIRECT_SHADER T
	RENDERTYPE_GLINT_SHADER S
	RENDERTYPE_GLINT_TRANSLUCENT_SHADER R
	RENDERTYPE_ITEM_ENTITY_TRANSLUCENT_CULL_SHADER B
	RENDERTYPE_LEASH_SHADER M
	RENDERTYPE_LIGHTNING_SHADER ab
	RENDERTYPE_LINES_SHADER af
	RENDERTYPE_OUTLINE_SHADER O
	RENDERTYPE_SOLID_SHADER q
	RENDERTYPE_TEXT_INTENSITY_SEE_THROUGH_SHADER aa
	RENDERTYPE_TEXT_INTENSITY_SHADER Y
	RENDERTYPE_TEXT_SEE_THROUGH_SHADER Z
	RENDERTYPE_TEXT_SHADER X
	RENDERTYPE_TRANSLUCENT_MOVING_BLOCK_SHADER u
	RENDERTYPE_TRANSLUCENT_NO_CRUMBLING_SHADER v
	RENDERTYPE_TRANSLUCENT_SHADER t
	RENDERTYPE_TRIPWIRE_SHADER ac
	RENDERTYPE_WATER_MASK_SHADER N
	TRANSLUCENT_TARGET aD
	TRANSLUCENT_TRANSPARENCY g
	VIEW_OFFSET_Z_LAYERING aA
	VIEW_SCALE_Z_EPSILON aJ
	WEATHER_TARGET aF
	clearState aL
	name a
	setupState aK
	clearRenderState ()V b
	setupGlintTexturing (F)V a
	setupRenderState ()V a
net/minecraft/client/renderer/RenderStateShard$BooleanStateShard eps$a
	enabled aJ
net/minecraft/client/renderer/RenderStateShard$CullStateShard eps$b
net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard eps$c
	functionName aJ
net/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard eps$d
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$LayeringStateShard eps$e
net/minecraft/client/renderer/RenderStateShard$LightmapStateShard eps$f
net/minecraft/client/renderer/RenderStateShard$LineStateShard eps$g
	width aJ
net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard eps$h
	cutoutTexture aJ
	builder ()Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder; d
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder eps$h$a
	builder a
	add (Lnet/minecraft/resources/ResourceLocation;ZZ)Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder; a
	build ()Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard; a
net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard eps$i
net/minecraft/client/renderer/RenderStateShard$OutputStateShard eps$j
net/minecraft/client/renderer/RenderStateShard$OverlayStateShard eps$k
net/minecraft/client/renderer/RenderStateShard$ShaderStateShard eps$l
	shader aJ
net/minecraft/client/renderer/RenderStateShard$TextureStateShard eps$m
	blur aK
	mipmap aL
	texture aJ
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$TexturingStateShard eps$n
net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard eps$o
net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard eps$p
	writeColor aJ
	writeDepth aK
net/minecraft/client/renderer/RenderType ept
	ARMOR_CUTOUT_NO_CULL aX
	ARMOR_ENTITY_GLINT bp
	ARMOR_GLINT bo
	BEACON_BEAM bg
	BIG_BUFFER_SIZE aJ
	BYTES_IN_INT aP
	CRUMBLING bv
	CUTOUT aT
	CUTOUT_MIPPED aS
	DRAGON_EXPLOSION_ALPHA bk
	END_GATEWAY bF
	END_PORTAL bE
	ENTITY_CUTOUT aZ
	ENTITY_CUTOUT_NO_CULL ba
	ENTITY_CUTOUT_NO_CULL_Z_OFFSET bb
	ENTITY_DECAL bh
	ENTITY_GLINT bt
	ENTITY_GLINT_DIRECT bu
	ENTITY_NO_OUTLINE bi
	ENTITY_SHADOW bj
	ENTITY_SMOOTH_CUTOUT bf
	ENTITY_SOLID aY
	ENTITY_TRANSLUCENT be
	ENTITY_TRANSLUCENT_CULL bd
	EYES bl
	GLINT br
	GLINT_DIRECT bs
	GLINT_TRANSLUCENT bq
	ITEM_ENTITY_TRANSLUCENT_CULL bc
	LEASH bm
	LIGHTNING bC
	LINES aN
	LINE_STRIP aO
	MEDIUM_BUFFER_SIZE aK
	MEGABYTE aQ
	SMALL_BUFFER_SIZE aL
	SOLID aR
	TEXT bw
	TEXT_INTENSITY bx
	TEXT_INTENSITY_POLYGON_OFFSET bz
	TEXT_INTENSITY_SEE_THROUGH bB
	TEXT_POLYGON_OFFSET by
	TEXT_SEE_THROUGH bA
	TRANSIENT_BUFFER_SIZE aM
	TRANSLUCENT aU
	TRANSLUCENT_MOVING_BLOCK aV
	TRANSLUCENT_NO_CRUMBLING aW
	TRIPWIRE bD
	WATER_MASK bn
	affectsCrumbling bJ
	asOptional bL
	bufferSize bI
	format bG
	mode bH
	sortOnUpload bK
	affectsCrumbling ()Z D
	armorCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; a
	armorEntityGlint ()Lnet/minecraft/client/renderer/RenderType; l
	armorGlint ()Lnet/minecraft/client/renderer/RenderType; k
	asOptional ()Ljava/util/Optional; E
	beaconBeam (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; d
	bufferSize ()I y
	chunkBufferLayers ()Ljava/util/List; x
	create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;ILnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;IZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	crumbling (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; p
	cutout ()Lnet/minecraft/client/renderer/RenderType; e
	cutoutMipped ()Lnet/minecraft/client/renderer/RenderType; d
	dragonExplosionAlpha (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; m
	end (Lcom/mojang/blaze3d/vertex/BufferBuilder;III)V a
	endGateway ()Lnet/minecraft/client/renderer/RenderType; u
	endPortal ()Lnet/minecraft/client/renderer/RenderType; t
	energySwirl (Lnet/minecraft/resources/ResourceLocation;FF)Lnet/minecraft/client/renderer/RenderType; a
	entityCutout (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; c
	entityCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; d
	entityCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; a
	entityCutoutNoCullZOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; e
	entityCutoutNoCullZOffset (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; b
	entityDecal (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; j
	entityGlint ()Lnet/minecraft/client/renderer/RenderType; p
	entityGlintDirect ()Lnet/minecraft/client/renderer/RenderType; q
	entityNoOutline (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; k
	entityShadow (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; l
	entitySmoothCutout (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; i
	entitySolid (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; b
	entityTranslucent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; h
	entityTranslucent (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; c
	entityTranslucentCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; g
	eyes (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; n
	format ()Lcom/mojang/blaze3d/vertex/VertexFormat; z
	glint ()Lnet/minecraft/client/renderer/RenderType; n
	glintDirect ()Lnet/minecraft/client/renderer/RenderType; o
	glintTranslucent ()Lnet/minecraft/client/renderer/RenderType; m
	isOutline ()Z C
	itemEntityTranslucentCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; f
	leash ()Lnet/minecraft/client/renderer/RenderType; i
	lightning ()Lnet/minecraft/client/renderer/RenderType; r
	lineStrip ()Lnet/minecraft/client/renderer/RenderType; w
	lines ()Lnet/minecraft/client/renderer/RenderType; v
	mode ()Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; A
	outline ()Ljava/util/Optional; B
	outline (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; o
	solid ()Lnet/minecraft/client/renderer/RenderType; c
	text (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; q
	textIntensity (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; r
	textIntensityPolygonOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; t
	textIntensitySeeThrough (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; v
	textPolygonOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; s
	textSeeThrough (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; u
	translucent ()Lnet/minecraft/client/renderer/RenderType; f
	translucentMovingBlock ()Lnet/minecraft/client/renderer/RenderType; g
	translucentMovingBlockState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; F
	translucentNoCrumbling ()Lnet/minecraft/client/renderer/RenderType; h
	translucentState (Lnet/minecraft/client/renderer/RenderStateShard$ShaderStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	tripwire ()Lnet/minecraft/client/renderer/RenderType; s
	tripwireState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; G
	waterMask ()Lnet/minecraft/client/renderer/RenderType; j
net/minecraft/client/renderer/RenderType$CompositeRenderType ept$a
	OUTLINE aP
	isOutline aS
	outline aR
	state aQ
	isOutline ()Z C
	outline ()Ljava/util/Optional; B
	state ()Lnet/minecraft/client/renderer/RenderType$CompositeState; F
net/minecraft/client/renderer/RenderType$CompositeState ept$b
	cullState e
	depthTestState d
	layeringState h
	lightmapState f
	lineState l
	outlineProperty m
	outputState i
	overlayState g
	shaderState b
	states n
	textureState a
	texturingState j
	transparencyState c
	writeMaskState k
	builder ()Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder ept$b$a
	cullState e
	depthTestState d
	layeringState h
	lightmapState f
	lineState l
	outputState i
	overlayState g
	shaderState b
	textureState a
	texturingState j
	transparencyState c
	writeMaskState k
	createCompositeState (Lnet/minecraft/client/renderer/RenderType$OutlineProperty;)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	createCompositeState (Z)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	setCullState (Lnet/minecraft/client/renderer/RenderStateShard$CullStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setDepthTestState (Lnet/minecraft/client/renderer/RenderStateShard$DepthTestStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLayeringState (Lnet/minecraft/client/renderer/RenderStateShard$LayeringStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLightmapState (Lnet/minecraft/client/renderer/RenderStateShard$LightmapStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLineState (Lnet/minecraft/client/renderer/RenderStateShard$LineStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setOutputState (Lnet/minecraft/client/renderer/RenderStateShard$OutputStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setOverlayState (Lnet/minecraft/client/renderer/RenderStateShard$OverlayStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setShaderState (Lnet/minecraft/client/renderer/RenderStateShard$ShaderStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTextureState (Lnet/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTexturingState (Lnet/minecraft/client/renderer/RenderStateShard$TexturingStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTransparencyState (Lnet/minecraft/client/renderer/RenderStateShard$TransparencyStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setWriteMaskState (Lnet/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
net/minecraft/client/renderer/RenderType$OutlineProperty ept$c
	$VALUES e
	AFFECTS_OUTLINE c
	IS_OUTLINE b
	NONE a
	name d
	$values ()[Lnet/minecraft/client/renderer/RenderType$OutlineProperty; a
net/minecraft/client/renderer/RunningTrimmedMean epu
	count b
	cursor c
	values a
	registerValueAndGetMean (J)J a
net/minecraft/client/renderer/ScreenEffectRenderer epv
	UNDERWATER_LOCATION a
	getViewBlockingState (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	renderFire (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	renderScreenEffect (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderTex (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderWater (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V b
net/minecraft/client/renderer/ShaderInstance epw
	ALWAYS_REAPPLY r
	CHUNK_OFFSET m
	COLOR_MODULATOR e
	DUMMY_UNIFORM q
	FOG_COLOR j
	FOG_END i
	FOG_START h
	GAME_TIME l
	LIGHT0_DIRECTION f
	LIGHT1_DIRECTION g
	LINE_WIDTH k
	LOGGER p
	MODEL_VIEW_MATRIX a
	PROJECTION_MATRIX b
	SCREEN_SIZE d
	SHADER_INCLUDE_PATH o
	SHADER_PATH n
	TEXTURE_MATRIX c
	attributeNames F
	attributes E
	blend D
	dirty C
	fragmentProgram H
	lastAppliedShader s
	lastProgramId t
	name B
	programId A
	samplerLocations w
	samplerMap u
	samplerNames v
	uniformLocations y
	uniformMap z
	uniforms x
	vertexFormat I
	vertexProgram G
	apply ()V g
	attachToProgram ()V e
	clear ()V f
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getName ()Ljava/lang/String; i
	getOrCreate (Lnet/minecraft/server/packs/resources/ResourceProvider;Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Program; a
	getUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Uniform; a
	getVertexFormat ()Lcom/mojang/blaze3d/vertex/VertexFormat; h
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
	parseBlendNode (Lcom/google/gson/JsonObject;)Lcom/mojang/blaze3d/shaders/BlendMode; a
	parseSamplerNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	safeGetUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/AbstractUniform; b
	setSampler (Ljava/lang/String;Ljava/lang/Object;)V a
	updateLocations ()V j
net/minecraft/client/renderer/Sheets epx
	BANNER_MATERIALS j
	BANNER_SHEET c
	BANNER_SHEET_TYPE y
	BED_SHEET b
	BED_SHEET_TYPE x
	BED_TEXTURES l
	CHEST_LOCATION s
	CHEST_LOCATION_LEFT t
	CHEST_LOCATION_RIGHT u
	CHEST_SHEET f
	CHEST_SHEET_TYPE B
	CHEST_TRAP_LOCATION m
	CHEST_TRAP_LOCATION_LEFT n
	CHEST_TRAP_LOCATION_RIGHT o
	CHEST_XMAS_LOCATION p
	CHEST_XMAS_LOCATION_LEFT q
	CHEST_XMAS_LOCATION_RIGHT r
	CUTOUT_BLOCK_SHEET D
	DEFAULT_SHULKER_TEXTURE_LOCATION g
	ENDER_CHEST_LOCATION v
	SHIELD_MATERIALS k
	SHIELD_SHEET d
	SHIELD_SHEET_TYPE z
	SHULKER_BOX_SHEET_TYPE w
	SHULKER_SHEET a
	SHULKER_TEXTURE_LOCATION h
	SIGN_MATERIALS i
	SIGN_SHEET e
	SIGN_SHEET_TYPE A
	SOLID_BLOCK_SHEET C
	TRANSLUCENT_CULL_BLOCK_SHEET F
	TRANSLUCENT_ITEM_CULL_BLOCK_SHEET E
	bannerSheet ()Lnet/minecraft/client/renderer/RenderType; a
	bedSheet ()Lnet/minecraft/client/renderer/RenderType; c
	chestMaterial (Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material; a
	chestSheet ()Lnet/minecraft/client/renderer/RenderType; f
	chooseMaterial (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/state/properties/ChestType;Z)Lnet/minecraft/client/resources/model/Material; a
	chooseMaterial (Lnet/minecraft/world/level/block/state/properties/ChestType;Lnet/minecraft/client/resources/model/Material;Lnet/minecraft/client/resources/model/Material;Lnet/minecraft/client/resources/model/Material;)Lnet/minecraft/client/resources/model/Material; a
	createBannerMaterial (Lnet/minecraft/world/level/block/entity/BannerPattern;)Lnet/minecraft/client/resources/model/Material; c
	createShieldMaterial (Lnet/minecraft/world/level/block/entity/BannerPattern;)Lnet/minecraft/client/resources/model/Material; d
	createSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; b
	cutoutBlockSheet ()Lnet/minecraft/client/renderer/RenderType; h
	getAllMaterials (Ljava/util/function/Consumer;)V a
	getBannerMaterial (Lnet/minecraft/world/level/block/entity/BannerPattern;)Lnet/minecraft/client/resources/model/Material; a
	getShieldMaterial (Lnet/minecraft/world/level/block/entity/BannerPattern;)Lnet/minecraft/client/resources/model/Material; b
	getSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; a
	shieldSheet ()Lnet/minecraft/client/renderer/RenderType; b
	shulkerBoxSheet ()Lnet/minecraft/client/renderer/RenderType; d
	signSheet ()Lnet/minecraft/client/renderer/RenderType; e
	solidBlockSheet ()Lnet/minecraft/client/renderer/RenderType; g
	translucentCullBlockSheet ()Lnet/minecraft/client/renderer/RenderType; j
	translucentItemSheet ()Lnet/minecraft/client/renderer/RenderType; i
net/minecraft/client/renderer/SpriteCoordinateExpander epy
	delegate a
	sprite b
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V c
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V j
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
net/minecraft/client/renderer/ViewArea epz
	chunkGridSizeX d
	chunkGridSizeY c
	chunkGridSizeZ e
	chunks f
	level b
	levelRenderer a
	createChunks (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)V a
	getChunkIndex (III)I a
	getRenderChunkAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk; a
	releaseAllBuffers ()V a
	repositionCamera (DD)V a
	setDirty (IIIZ)V a
	setViewDistance (I)V a
net/minecraft/client/renderer/VirtualScreen eqa
	minecraft a
	screenManager b
	newWindow (Lcom/mojang/blaze3d/platform/DisplayData;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/blaze3d/platform/Window; a
net/minecraft/client/renderer/block/BlockModelShaper eqb
	modelByStateCache a
	modelManager b
	getBlockModel (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/BakedModel; b
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; a
	getParticleIcon (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/String; a
	rebuildCache ()V b
	statePropertiesToString (Ljava/util/Map;)Ljava/lang/String; a
	stateToModelLocation (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/ModelResourceLocation; a
	stateToModelLocation (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/ModelResourceLocation; c
net/minecraft/client/renderer/block/BlockRenderDispatcher eqc
	blockColors f
	blockEntityRenderer c
	blockModelShaper a
	liquidBlockRenderer d
	modelRenderer b
	random e
	getBlockModel (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/BakedModel; a
	getBlockModelShaper ()Lnet/minecraft/client/renderer/block/BlockModelShaper; a
	getModelRenderer ()Lnet/minecraft/client/renderer/block/ModelBlockRenderer; b
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	renderBatched (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;)Z a
	renderBreakingTexture (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderLiquid (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/material/FluidState;)Z a
	renderSingleBlock (Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/block/LiquidBlockRenderer eqd
	MAX_FLUID_HEIGHT a
	lavaIcons b
	waterIcons c
	waterOverlay d
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getWaterHeight (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)F a
	isFaceOccludedByNeighbor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;F)Z a
	isFaceOccludedBySelf (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isFaceOccludedByState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/Direction;FLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isNeighborSameFluid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)Z a
	setupSprites ()V a
	shouldRenderFace (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	tesselate (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/material/FluidState;)Z a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDFFFFFI)V a
net/minecraft/client/renderer/block/ModelBlockRenderer eqe
	CACHE f
	CACHE_SIZE e
	DIRECTIONS c
	FACE_CUBIC a
	FACE_PARTIAL b
	blockColors d
	calculateShape (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;[ILnet/minecraft/core/Direction;[FLjava/util/BitSet;)V a
	clearCache ()V b
	enableCaching ()V a
	putQuadData (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFFIIIII)V a
	renderModel (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/BakedModel;FFFII)V a
	renderModelFaceAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;[FLjava/util/BitSet;Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace;I)V a
	renderModelFaceFlat (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;IIZLcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Ljava/util/BitSet;)V a
	renderQuadList (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFLjava/util/List;II)V a
	tesselateBlock (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;JI)Z a
	tesselateWithAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;JI)Z b
	tesselateWithoutAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;JI)Z c
net/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo eqe$a
	$VALUES n
	BY_FACING m
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	corners g
	doNonCubicWeight h
	vert0Weights i
	vert1Weights j
	vert2Weights k
	vert3Weights l
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo; a
net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace eqe$b
	brightness b
	lightmap c
	blend (IIII)I a
	blend (IIIIFFFF)I a
	calculate (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;[FLjava/util/BitSet;Z)V a
net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap eqe$c
	$VALUES l
	BY_FACING k
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	vert0 g
	vert1 h
	vert2 i
	vert3 j
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap; a
net/minecraft/client/renderer/block/ModelBlockRenderer$Cache eqe$d
	brightnessCache c
	colorCache b
	enabled a
	disable ()V b
	enable ()V a
	getLightColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)F b
net/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo eqe$e
	$VALUES n
	DOWN a
	EAST f
	FLIP_DOWN g
	FLIP_EAST l
	FLIP_NORTH i
	FLIP_SOUTH j
	FLIP_UP h
	FLIP_WEST k
	NORTH c
	SOUTH d
	UP b
	WEST e
	shape m
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo; a
net/minecraft/client/renderer/block/model/BakedQuad eqf
	direction c
	shade e
	sprite d
	tintIndex b
	vertices a
	getDirection ()Lnet/minecraft/core/Direction; e
	getSprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getTintIndex ()I d
	getVertices ()[I b
	isShade ()Z f
	isTinted ()Z c
net/minecraft/client/renderer/block/model/BlockElement eqg
	DEFAULT_RESCALE f
	MAX_EXTENT h
	MIN_EXTENT g
	faces c
	from a
	rotation d
	shade e
	to b
	fillUvs ()V a
	uvsByFace (Lnet/minecraft/core/Direction;)[F a
net/minecraft/client/renderer/block/model/BlockElement$Deserializer eqg$a
	DEFAULT_SHADE a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockElement; a
	filterNullFromFaces (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; b
	getAngle (Lcom/google/gson/JsonObject;)F b
	getAxis (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/Direction$Axis; c
	getFaces (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; a
	getFacing (Ljava/lang/String;)Lnet/minecraft/core/Direction; a
	getFrom (Lcom/google/gson/JsonObject;)Lcom/mojang/math/Vector3f; e
	getRotation (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/BlockElementRotation; a
	getTo (Lcom/google/gson/JsonObject;)Lcom/mojang/math/Vector3f; d
	getVector3f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/mojang/math/Vector3f; a
net/minecraft/client/renderer/block/model/BlockElementFace eqh
	NO_TINT a
	cullForDirection b
	texture d
	tintIndex c
	uv e
net/minecraft/client/renderer/block/model/BlockElementFace$Deserializer eqh$a
	DEFAULT_TINT_INDEX a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockElementFace; a
	getCullFacing (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/Direction; c
	getTexture (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
	getTintIndex (Lcom/google/gson/JsonObject;)I a
net/minecraft/client/renderer/block/model/BlockElementRotation eqi
	angle c
	axis b
	origin a
	rescale d
net/minecraft/client/renderer/block/model/BlockFaceUV eqj
	rotation b
	uvs a
	getReverseIndex (I)I c
	getShiftedIndex (I)I d
	getU (I)F a
	getV (I)F b
	setMissingUv ([F)V a
net/minecraft/client/renderer/block/model/BlockFaceUV$Deserializer eqj$a
	DEFAULT_ROTATION a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockFaceUV; a
	getRotation (Lcom/google/gson/JsonObject;)I a
	getUVs (Lcom/google/gson/JsonObject;)[F b
net/minecraft/client/renderer/block/model/BlockModel eqk
	FACE_BAKERY h
	GSON a
	LOGGER g
	PARTICLE_TEXTURE_REFERENCE b
	REFERENCE_CHAR i
	elements j
	guiLight k
	hasAmbientOcclusion l
	name c
	overrides n
	parent e
	parentLocation f
	textureMap d
	transforms m
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/client/renderer/block/model/BlockModel;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/resources/model/BakedModel; a
	bakeFace (Lnet/minecraft/client/renderer/block/model/BlockElement;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; a
	findTextureEntry (Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; d
	fromStream (Ljava/io/Reader;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	fromString (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getDependencies ()Ljava/util/Collection; f
	getElements ()Ljava/util/List; a
	getGuiLight ()Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; c
	getItemOverrides (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/client/renderer/block/model/BlockModel;)Lnet/minecraft/client/renderer/block/model/ItemOverrides; a
	getMaterial (Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material; c
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getOverrides ()Ljava/util/List; e
	getRootModel ()Lnet/minecraft/client/renderer/block/model/BlockModel; g
	getTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; h
	hasAmbientOcclusion ()Z b
	hasTexture (Ljava/lang/String;)Z b
	isResolved ()Z d
	isTextureReference (Ljava/lang/String;)Z e
net/minecraft/client/renderer/block/model/BlockModel$Deserializer eqk$a
	DEFAULT_AMBIENT_OCCLUSION a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getAmbientOcclusion (Lcom/google/gson/JsonObject;)Z a
	getElements (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; b
	getOverrides (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; a
	getParentName (Lcom/google/gson/JsonObject;)Ljava/lang/String; c
	getTextureMap (Lcom/google/gson/JsonObject;)Ljava/util/Map; b
	parseTextureLocationOrReference (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; a
net/minecraft/client/renderer/block/model/BlockModel$GuiLight eqk$b
	$VALUES d
	FRONT a
	SIDE b
	name c
	$values ()[Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; b
	getByName (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; a
	lightLikeBlock ()Z a
net/minecraft/client/renderer/block/model/BlockModel$LoopException eqk$c
net/minecraft/client/renderer/block/model/BlockModelDefinition eql
	multiPart b
	variants a
	fromStream (Lnet/minecraft/client/renderer/block/model/BlockModelDefinition$Context;Ljava/io/Reader;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	getMultiPart ()Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; d
	getMultiVariants ()Ljava/util/Set; b
	getVariant (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/MultiVariant; b
	getVariants ()Ljava/util/Map; a
	hasVariant (Ljava/lang/String;)Z a
	isMultiPart ()Z c
net/minecraft/client/renderer/block/model/BlockModelDefinition$Context eql$a
	definition b
	gson a
	getDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; a
	setDefinition (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/client/renderer/block/model/BlockModelDefinition$Deserializer eql$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	getMultiPart (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; b
	getVariants (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; a
net/minecraft/client/renderer/block/model/BlockModelDefinition$MissingVariantException eql$c
net/minecraft/client/renderer/block/model/FaceBakery eqm
	COLOR_INDEX f
	RESCALE_22_5 d
	RESCALE_45 e
	UV_INDEX c
	VERTEX_COUNT b
	VERTEX_INT_SIZE a
	applyElementRotation (Lcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;)V a
	applyModelRotation (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Transformation;)V a
	bakeQuad (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;ZLnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; a
	bakeVertex ([IILnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BlockFaceUV;[FLnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lcom/mojang/math/Transformation;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;Z)V a
	calculateFacing ([I)Lnet/minecraft/core/Direction; a
	fillVertex ([IILcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/block/model/BlockFaceUV;)V a
	makeVertices (Lnet/minecraft/client/renderer/block/model/BlockFaceUV;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;[FLcom/mojang/math/Transformation;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;Z)[I a
	recalculateWinding ([ILnet/minecraft/core/Direction;)V a
	recomputeUVs (Lnet/minecraft/client/renderer/block/model/BlockFaceUV;Lnet/minecraft/core/Direction;Lcom/mojang/math/Transformation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockFaceUV; a
	rotateVertexBy (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Vector3f;)V a
	setupShape (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)[F a
net/minecraft/client/renderer/block/model/ItemModelGenerator eqn
	LAYERS a
	MAX_Z c
	MIN_Z b
	checkTransition (Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing;Ljava/util/List;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;IIIIIZ)V a
	createOrExpandSpan (Ljava/util/List;Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing;II)V a
	createSideElements (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Ljava/lang/String;I)Ljava/util/List; a
	generateBlockModel (Ljava/util/function/Function;Lnet/minecraft/client/renderer/block/model/BlockModel;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getSpans (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Ljava/util/List; a
	isTransparent (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;IIIII)Z a
	processFrames (ILjava/lang/String;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/ItemModelGenerator$Span eqn$a
	anchor d
	facing a
	max c
	min b
	expand (I)V a
	getAnchor ()I d
	getFacing ()Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing; a
	getMax ()I c
	getMin ()I b
net/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing eqn$b
	$VALUES h
	DOWN b
	LEFT c
	RIGHT d
	UP a
	direction e
	xOffset f
	yOffset g
	$values ()[Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing; e
	getDirection ()Lnet/minecraft/core/Direction; a
	getXOffset ()I b
	getYOffset ()I c
	isHorizontal ()Z d
net/minecraft/client/renderer/block/model/ItemOverride eqo
	model a
	predicates b
	getModel ()Lnet/minecraft/resources/ResourceLocation; a
	getPredicates ()Ljava/util/stream/Stream; b
net/minecraft/client/renderer/block/model/ItemOverride$Deserializer eqo$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemOverride; a
	getPredicates (Lcom/google/gson/JsonObject;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/ItemOverride$Predicate eqo$b
	property a
	value b
	getProperty ()Lnet/minecraft/resources/ResourceLocation; a
	getValue ()F b
net/minecraft/client/renderer/block/model/ItemOverrides eqp
	EMPTY a
	overrides b
	properties c
	bakeModel (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/client/renderer/block/model/BlockModel;Ljava/util/function/Function;Lnet/minecraft/client/renderer/block/model/ItemOverride;)Lnet/minecraft/client/resources/model/BakedModel; a
	resolve (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/entity/LivingEntity;I)Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/renderer/block/model/ItemOverrides$BakedOverride eqp$a
	matchers a
	model b
	test ([F)Z a
net/minecraft/client/renderer/block/model/ItemOverrides$PropertyMatcher eqp$b
	index a
	value b
net/minecraft/client/renderer/block/model/ItemTransform eqq
	NO_TRANSFORM a
	rotation b
	scale d
	translation c
	apply (ZLcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/renderer/block/model/ItemTransform$Deserializer eqq$a
	DEFAULT_ROTATION c
	DEFAULT_SCALE e
	DEFAULT_TRANSLATION d
	MAX_SCALE b
	MAX_TRANSLATION a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	getVector3f (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/mojang/math/Vector3f;)Lcom/mojang/math/Vector3f; a
net/minecraft/client/renderer/block/model/ItemTransforms eqr
	NO_TRANSFORMS a
	firstPersonLeftHand d
	firstPersonRightHand e
	fixed i
	ground h
	gui g
	head f
	thirdPersonLeftHand b
	thirdPersonRightHand c
	getTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	hasTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Z b
net/minecraft/client/renderer/block/model/ItemTransforms$Deserializer eqr$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemTransforms; a
	getTransform (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
net/minecraft/client/renderer/block/model/ItemTransforms$TransformType eqr$b
	$VALUES j
	FIRST_PERSON_LEFT_HAND d
	FIRST_PERSON_RIGHT_HAND e
	FIXED i
	GROUND h
	GUI g
	HEAD f
	NONE a
	THIRD_PERSON_LEFT_HAND b
	THIRD_PERSON_RIGHT_HAND c
	$values ()[Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType; b
	firstPerson ()Z a
net/minecraft/client/renderer/block/model/MultiVariant eqs
	variants a
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getVariants ()Ljava/util/List; a
net/minecraft/client/renderer/block/model/MultiVariant$Deserializer eqs$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/MultiVariant; a
net/minecraft/client/renderer/block/model/Variant eqt
	modelLocation a
	rotation b
	uvLock c
	weight d
	getModelLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getRotation ()Lcom/mojang/math/Transformation; b
	getWeight ()I d
	isUvLocked ()Z c
net/minecraft/client/renderer/block/model/Variant$Deserializer eqt$a
	DEFAULT_UVLOCK a
	DEFAULT_WEIGHT b
	DEFAULT_X_ROTATION c
	DEFAULT_Y_ROTATION d
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/Variant; a
	getBlockRotation (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/model/BlockModelRotation; a
	getModel (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/ResourceLocation; b
	getUvLock (Lcom/google/gson/JsonObject;)Z d
	getWeight (Lcom/google/gson/JsonObject;)I c
net/minecraft/client/renderer/block/model/multipart/AndCondition equ
	TOKEN a
	conditions d
net/minecraft/client/renderer/block/model/multipart/Condition eqv
	FALSE c
	TRUE b
net/minecraft/client/renderer/block/model/multipart/KeyValueCondition eqw
	PIPE_SPLITTER a
	key d
	value e
	getBlockStatePredicate (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Ljava/util/function/Predicate; a
net/minecraft/client/renderer/block/model/multipart/MultiPart eqx
	definition a
	selectors b
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getMultiVariants ()Ljava/util/Set; b
	getSelectors ()Ljava/util/List; a
net/minecraft/client/renderer/block/model/multipart/MultiPart$Deserializer eqx$a
	context a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; a
	getSelectors (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/multipart/OrCondition eqy
	TOKEN a
	conditions d
net/minecraft/client/renderer/block/model/multipart/Selector eqz
	condition a
	variant b
	getPredicate (Lnet/minecraft/world/level/block/state/StateDefinition;)Ljava/util/function/Predicate; a
	getVariant ()Lnet/minecraft/client/renderer/block/model/MultiVariant; a
net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer eqz$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/multipart/Selector; a
	getCondition (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; a
	getKeyValueCondition (Ljava/util/Map$Entry;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; a
	getSelector (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; b
net/minecraft/client/renderer/blockentity/BannerRenderer erd
	BANNER_HEIGHT c
	BANNER_WIDTH b
	BAR f
	FLAG a
	MAX_PATTERNS d
	POLE e
	bar i
	flag g
	pole h
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lnet/minecraft/world/level/block/entity/BannerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderPatterns (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLjava/util/List;)V a
	renderPatterns (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLjava/util/List;Z)V a
net/minecraft/client/renderer/blockentity/BeaconRenderer ere
	BEAM_LOCATION a
	MAX_RENDER_Y b
	addVertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIFFFF)V a
	getViewDistance ()I an_
	render (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderBeaconBeam (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;FJII[F)V a
	renderBeaconBeam (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/resources/ResourceLocation;FFJII[FFF)V a
	renderPart (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIIFFFFFFFFFFFF)V a
	renderQuad (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIIFFFFFFFF)V a
	shouldRender (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
net/minecraft/client/renderer/blockentity/BedRenderer erf
	footRoot b
	headRoot a
	createFootLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lnet/minecraft/world/level/block/entity/BedBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderPiece (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/Material;IIZ)V a
net/minecraft/client/renderer/blockentity/BellRenderer erg
	BELL_BODY b
	BELL_RESOURCE_LOCATION a
	bellBody c
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lnet/minecraft/world/level/block/entity/BellBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher erh
	blockRenderDispatcher g
	camera b
	cameraHitResult c
	entityModelSet f
	font e
	level a
	renderers d
	getRenderer (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	prepare (Lnet/minecraft/world/level/Level;Lnet/minecraft/client/Camera;Lnet/minecraft/world/phys/HitResult;)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	renderItem (Lnet/minecraft/world/level/block/entity/BlockEntity;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)Z a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setupAndRender (Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer;Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	tryRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Ljava/lang/Runnable;)V a
net/minecraft/client/renderer/blockentity/BlockEntityRenderer eri
	getViewDistance ()I an_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	shouldRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider erj
net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider$Context erj$a
	blockEntityRenderDispatcher a
	blockRenderDispatcher b
	font d
	modelSet c
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	getBlockEntityRenderDispatcher ()Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher; a
	getBlockRenderDispatcher ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; b
	getFont ()Lnet/minecraft/client/gui/Font; d
	getModelSet ()Lnet/minecraft/client/model/geom/EntityModelSet; c
net/minecraft/client/renderer/blockentity/BlockEntityRenderers erk
	PROVIDERS a
	createEntityRenderers (Lnet/minecraft/client/renderer/blockentity/BlockEntityRendererProvider$Context;)Ljava/util/Map; a
	register (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/client/renderer/blockentity/BlockEntityRendererProvider;)V a
net/minecraft/client/renderer/blockentity/BrightnessCombiner erl
	acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
	acceptDouble (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
	acceptNone ()Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
	acceptNone ()Ljava/lang/Object; b
	acceptSingle (Ljava/lang/Object;)Ljava/lang/Object; a
	acceptSingle (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
net/minecraft/client/renderer/blockentity/CampfireRenderer erm
	SIZE a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/ChestRenderer ern
	BOTTOM a
	LID b
	LOCK c
	bottom e
	doubleLeftBottom h
	doubleLeftLid g
	doubleLeftLock i
	doubleRightBottom k
	doubleRightLid j
	doubleRightLock l
	lid d
	lock f
	xmasTextures m
	createDoubleBodyLeftLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; d
	createDoubleBodyRightLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createSingleBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;FII)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/ConduitRenderer ero
	ACTIVE_SHELL_TEXTURE b
	CLOSED_EYE_TEXTURE f
	OPEN_EYE_TEXTURE e
	SHELL_TEXTURE a
	VERTICAL_WIND_TEXTURE d
	WIND_TEXTURE c
	cage j
	eye g
	renderer k
	shell i
	wind h
	createCageLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; e
	createEyeLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createShellLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; d
	createWindLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/EnchantTableRenderer erp
	BOOK_LOCATION a
	bookModel b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/EnchantmentTableBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/LecternRenderer erq
	bookModel a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/LecternBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/PistonHeadRenderer err
	blockRenderer a
	getViewDistance ()I an_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;ZI)V a
net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer ers
	model a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/SignRenderer ert
	BLACK_TEXT_OUTLINE_COLOR d
	LINE_HEIGHT b
	MAX_LINE_WIDTH a
	OUTLINE_RENDER_DISTANCE e
	STICK c
	font g
	signModels f
	createSignLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createSignModel (Lnet/minecraft/client/model/geom/EntityModelSet;Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/renderer/blockentity/SignRenderer$SignModel; a
	getDarkColor (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)I a
	getWoodType (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/properties/WoodType; a
	isOutlineVisible (Lnet/minecraft/world/level/block/entity/SignBlockEntity;I)Z a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SignBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/SignRenderer$SignModel ert$a
	root a
	stick b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/renderer/blockentity/SkullBlockRenderer eru
	SKIN_BY_TYPE b
	modelByType a
	createSkullRenderers (Lnet/minecraft/client/model/geom/EntityModelSet;)Ljava/util/Map; a
	getRenderType (Lnet/minecraft/world/level/block/SkullBlock$Type;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/client/renderer/RenderType; a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SkullBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderSkull (Lnet/minecraft/core/Direction;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/model/SkullModelBase;Lnet/minecraft/client/renderer/RenderType;)V a
net/minecraft/client/renderer/blockentity/SpawnerRenderer erv
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/StructureBlockRenderer erw
	getViewDistance ()I an_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderInvisibleBlocks (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Z a
net/minecraft/client/renderer/blockentity/TheEndGatewayRenderer erx
	BEAM_LOCATION c
	getOffsetDown ()F c
	getOffsetUp ()F b
	getViewDistance ()I an_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; d
net/minecraft/client/renderer/blockentity/TheEndPortalRenderer ery
	END_PORTAL_LOCATION b
	END_SKY_LOCATION a
	getOffsetDown ()F c
	getOffsetUp ()F b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderCube (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderFace (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFFFFLnet/minecraft/core/Direction;)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; d
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher esa
	LOGGER a
	MAX_HIGH_PRIORITY_QUOTA d
	MAX_WORKERS_32_BIT b
	VERTEX_FORMAT c
	camera q
	executor n
	fixedBuffers l
	freeBufferCount k
	freeBuffers h
	highPriorityQuota g
	level o
	mailbox m
	renderer p
	toBatchCount j
	toBatchHighPriority e
	toBatchLowPriority f
	toUpload i
	blockUntilClear ()V g
	clearBatchQueue ()V l
	dispose ()V i
	doUploadChunkLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lcom/mojang/blaze3d/vertex/VertexBuffer;)Ljava/util/concurrent/CompletableFuture; b
	getCameraPosition ()Lnet/minecraft/world/phys/Vec3; e
	getFreeBufferCount ()I d
	getStats ()Ljava/lang/String; a
	getToBatchCount ()I b
	getToUpload ()I c
	isQueueEmpty ()Z h
	pollTask ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask; k
	rebuildChunkSync (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)V a
	runTask ()V j
	schedule (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask;)V a
	setCamera (Lnet/minecraft/world/phys/Vec3;)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	uploadAllPendingUploads ()V f
	uploadChunkLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lcom/mojang/blaze3d/vertex/VertexBuffer;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult esa$a
	$VALUES c
	CANCELLED b
	SUCCESSFUL a
	$values ()[Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult; a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk esa$b
	UNCOMPILED a
	hasBlocks b
	hasLayer c
	isCompletelyEmpty d
	renderableBlockEntities e
	transparencyState g
	visibilitySet f
	facesCanSeeEachother (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Z a
	getRenderableBlockEntities ()Ljava/util/List; b
	hasNoRenderableLayers ()Z a
	isEmpty (Lnet/minecraft/client/renderer/RenderType;)Z a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk esa$c
	SIZE a
	bb d
	buffers i
	compiled c
	dirty j
	globalBlockEntities h
	index b
	lastRebuildTask f
	lastResortTransparencyTask g
	origin k
	playerChanged m
	relativeOrigins l
	beginLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	cancelTasks ()Z i
	compileSync (Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)V b
	createCompileTask (Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask; a
	doesChunkExistAt (Lnet/minecraft/core/BlockPos;)Z a
	getBuffer (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/VertexBuffer; a
	getCompiledChunk ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk; c
	getDistToPlayerSqr ()D b
	getOrigin ()Lnet/minecraft/core/BlockPos; e
	getRelativeOrigin (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos; a
	hasAllNeighbors ()Z a
	isDirty ()Z g
	isDirtyFromPlayer ()Z h
	rebuildChunkAsync (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)V a
	releaseBuffers ()V d
	reset ()V j
	resortTransparency (Lnet/minecraft/client/renderer/RenderType;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)Z a
	setDirty (Z)V a
	setNotDirty ()V f
	setOrigin (III)V a
	updateGlobalBlockEntities (Ljava/util/Set;)V a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask esa$c$a
	distAtCreation a
	isCancelled b
	isHighPriority c
	cancel ()V a
	compareTo (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask;)I a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	name ()Ljava/lang/String; b
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask esa$c$b
	region e
	cancel ()V a
	compile (FFFLnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk;Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/Set; a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	handleBlockEntity (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk;Ljava/util/Set;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	name ()Ljava/lang/String; b
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ResortTransparencyTask esa$c$c
	compiledChunk f
	cancel ()V a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	name ()Ljava/lang/String; b
net/minecraft/client/renderer/chunk/RenderChunk esb
	blockEntities a
	debug c
	sections b
	wrapped d
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/client/renderer/chunk/RenderChunkRegion esc
	centerX c
	centerZ d
	chunks a
	level b
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I v_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l_
	getMinBuildHeight ()I u_
	getShade (Lnet/minecraft/core/Direction;Z)F a
net/minecraft/client/renderer/chunk/RenderRegionCache esd
	chunkInfoCache a
	createRegion (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/client/renderer/chunk/RenderChunkRegion; a
	isAllEmpty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II[[Lnet/minecraft/client/renderer/chunk/RenderRegionCache$ChunkInfo;)Z a
net/minecraft/client/renderer/chunk/RenderRegionCache$ChunkInfo esd$a
	chunk a
	renderChunk b
	chunk ()Lnet/minecraft/world/level/chunk/LevelChunk; a
	renderChunk ()Lnet/minecraft/client/renderer/chunk/RenderChunk; b
net/minecraft/client/renderer/chunk/VisGraph ese
	DIRECTIONS l
	DX h
	DY j
	DZ i
	INDEX_OF_EDGES n
	INVALID_INDEX k
	LEN b
	MASK c
	SIZE d
	SIZE_IN_BITS a
	X_SHIFT e
	Y_SHIFT g
	Z_SHIFT f
	bitSet m
	empty o
	addEdges (ILjava/util/Set;)V a
	floodFill (I)Ljava/util/Set; a
	getIndex (III)I a
	getIndex (Lnet/minecraft/core/BlockPos;)I b
	getNeighborIndexAtFace (ILnet/minecraft/core/Direction;)I a
	resolve ()Lnet/minecraft/client/renderer/chunk/VisibilitySet; a
	setOpaque (Lnet/minecraft/core/BlockPos;)V a
net/minecraft/client/renderer/chunk/VisibilitySet esf
	FACINGS a
	data b
	add (Ljava/util/Set;)V a
	set (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Z)V a
	setAll (Z)V a
	visibilityBetween (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Z a
net/minecraft/client/renderer/culling/Frustum esh
	OFFSET_STEP a
	camX d
	camY e
	camZ f
	frustumData b
	viewVector c
	calculateFrustum (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;)V a
	cubeCompletelyInFrustum (FFFFFF)Z b
	cubeInFrustum (DDDDDD)Z a
	cubeInFrustum (FFFFFF)Z a
	getPlane (Lcom/mojang/math/Matrix4f;IIII)V a
	isVisible (Lnet/minecraft/world/phys/AABB;)Z a
	offsetToFullyIncludeCameraCube (I)Lnet/minecraft/client/renderer/culling/Frustum; a
	prepare (DDD)V a
net/minecraft/client/renderer/debug/BeeDebugRenderer esj
	GRAY x
	GREEN w
	HIVE_TIMEOUT r
	MAX_RENDER_DIST_FOR_BEE_OVERLAY p
	MAX_RENDER_DIST_FOR_HIVE_OVERLAY o
	MAX_TARGETING_DIST q
	ORANGE v
	PINK y
	RED z
	SHOW_BLACKLISTS n
	SHOW_FLOWER_POS_FOR_ALL_BEES d
	SHOW_FLOWER_POS_FOR_SELECTED_BEE j
	SHOW_GOAL_FOR_ALL_BEES a
	SHOW_GOAL_FOR_SELECTED_BEE g
	SHOW_HIVE_FOR_ALL_BEES c
	SHOW_HIVE_FOR_SELECTED_BEE i
	SHOW_HIVE_MEMBERS m
	SHOW_NAME_FOR_ALL_BEES b
	SHOW_NAME_FOR_SELECTED_BEE h
	SHOW_PATH_FOR_ALL_BEES f
	SHOW_PATH_FOR_SELECTED_BEE l
	SHOW_TRAVEL_TICKS_FOR_ALL_BEES e
	SHOW_TRAVEL_TICKS_FOR_SELECTED_BEE k
	TEXT_SCALE s
	WHITE t
	YELLOW u
	beeInfosPerEntity C
	hives B
	lastLookedAtUuid D
	minecraft A
	addOrUpdateBeeInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V a
	addOrUpdateHiveInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;)V a
	clear ()V a
	clearRemovedBees ()V b
	clearRemovedHives ()V c
	createHiveBlacklistMap ()Ljava/util/Map; e
	doRender ()V d
	getBeeUuidsAsString (Ljava/util/Collection;)Ljava/lang/String; a
	getCamera ()Lnet/minecraft/client/Camera; g
	getGhostHives ()Ljava/util/Map; h
	getHiveMemberNames (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;)Ljava/util/Set; b
	getHiveMembers (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; b
	getPosDescription (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	highlightHive (Lnet/minecraft/core/BlockPos;)V a
	isBeeSelected (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)Z d
	isPlayerCloseEnoughToMob (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)Z e
	removeBeeInfo (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderBeeInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V c
	renderFlowerInfos ()V f
	renderGhostHive (Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	renderHiveInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;Ljava/util/Collection;)V a
	renderPath (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V b
	renderTextOverHive (Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;II)V a
	renderTextOverMob (Lnet/minecraft/core/Position;ILjava/lang/String;IF)V a
	renderTextOverPos (Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V a
	renderTransparentFilledBox (Lnet/minecraft/core/BlockPos;FFFFF)V a
	updateLastLookedAtUuid ()V i
net/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo esj$a
	blacklistedHives i
	flowerPos f
	goals h
	hivePos e
	id b
	path d
	pos c
	travelTicks g
	uuid a
	getName ()Ljava/lang/String; b
	getUuid ()Ljava/util/UUID; a
	hasFlower ()Z c
	hasHive (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo esj$b
	hiveType b
	honeyLevel d
	lastSeen f
	occupantCount c
	pos a
	sedated e
net/minecraft/client/renderer/debug/BrainDebugRenderer esk
	CYAN B
	GRAY D
	GREEN C
	LOGGER a
	MAX_RENDER_DIST_FOR_BRAIN_INFO v
	MAX_RENDER_DIST_FOR_POI_INFO w
	MAX_TARGETING_DIST x
	ORANGE G
	PINK E
	RED F
	SHOW_ACTIVITIES_FOR_ALL e
	SHOW_ACTIVITIES_FOR_SELECTED n
	SHOW_BEHAVIORS_FOR_ALL d
	SHOW_BEHAVIORS_FOR_SELECTED m
	SHOW_GOSSIPS_FOR_ALL g
	SHOW_GOSSIPS_FOR_SELECTED q
	SHOW_HEALTH_FOR_ALL i
	SHOW_HEALTH_FOR_SELECTED s
	SHOW_INVENTORY_FOR_ALL f
	SHOW_INVENTORY_FOR_SELECTED p
	SHOW_MEMORIES_FOR_SELECTED o
	SHOW_NAME_FOR_ALL b
	SHOW_NAME_FOR_SELECTED k
	SHOW_PATH_FOR_ALL h
	SHOW_PATH_FOR_SELECTED r
	SHOW_POI_INFO u
	SHOW_PROFESSION_FOR_ALL c
	SHOW_PROFESSION_FOR_SELECTED l
	SHOW_WANTS_GOLEM_FOR_ALL j
	SHOW_WANTS_GOLEM_FOR_SELECTED t
	TEXT_SCALE y
	WHITE z
	YELLOW A
	brainDumpsPerEntity J
	lastLookedAtUuid K
	minecraft H
	pois I
	addOrUpdateBrainDump (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)V a
	addPoi (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V a
	clear ()V a
	clearRemovedEntities ()V b
	doRender (DDD)V a
	getGhostPois ()Ljava/util/Map; c
	getPotentialTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set; d
	getPotentialTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; d
	getTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set; c
	getTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; c
	highlightPoi (Lnet/minecraft/core/BlockPos;)V b
	isMobSelected (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z b
	isPlayerCloseEnoughToMob (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z c
	removeBrainDump (I)V a
	removePoi (Lnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderBrainInfo (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V b
	renderGhostPoi (Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	renderPath (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V a
	renderPoiInfo (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V b
	renderTextOverMob (Lnet/minecraft/core/Position;ILjava/lang/String;IF)V a
	renderTextOverPoi (Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;II)V a
	renderTextOverPos (Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V a
	setFreeTicketCount (Lnet/minecraft/core/BlockPos;I)V a
	updateLastLookedAtUuid ()V d
net/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump esk$a
	activities l
	behaviors m
	gossips o
	health f
	id b
	inventory i
	maxHealth g
	memories n
	name c
	path j
	pois p
	pos h
	potentialPois q
	profession d
	uuid a
	wantsGolem k
	xp e
	getUuid ()Ljava/util/UUID; a
	hasPoi (Lnet/minecraft/core/BlockPos;)Z a
	hasPotentialPoi (Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo esk$b
	freeTicketCount c
	pos a
	type b
net/minecraft/client/renderer/debug/ChunkBorderRenderer esl
	CELL_BORDER b
	YELLOW c
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkDebugRenderer esm
	data d
	lastUpdateTime b
	minecraft a
	radius c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkDebugRenderer$ChunkData esm$a
	clientData b
	serverData c
net/minecraft/client/renderer/debug/CollisionBoxRenderer esn
	lastUpdateTime b
	minecraft a
	shapes c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/DebugRenderer eso
	beeDebugRenderer n
	brainDebugRenderer l
	chunkBorderRenderer c
	chunkRenderer k
	collisionBoxRenderer e
	gameEventListenerRenderer r
	gameTestDebugRenderer q
	goalSelectorRenderer p
	heightMapRenderer d
	lightDebugRenderer h
	neighborsUpdateRenderer f
	pathfindingRenderer a
	raidDebugRenderer o
	renderChunkborder s
	solidFaceRenderer j
	structureRenderer g
	villageSectionsDebugRenderer m
	waterDebugRenderer b
	worldGenAttemptRenderer i
	clear ()V a
	getTargetedEntity (Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;DDD)V a
	renderFilledBox (DDDDDDFFFF)V a
	renderFilledBox (Lnet/minecraft/core/BlockPos;FFFFF)V a
	renderFilledBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;FFFF)V a
	renderFilledBox (Lnet/minecraft/world/phys/AABB;FFFF)V a
	renderFloatingText (Ljava/lang/String;DDDI)V a
	renderFloatingText (Ljava/lang/String;DDDIF)V a
	renderFloatingText (Ljava/lang/String;DDDIFZFZ)V a
	renderFloatingText (Ljava/lang/String;IIII)V a
	switchRenderChunkborder ()Z b
net/minecraft/client/renderer/debug/DebugRenderer$SimpleDebugRenderer eso$a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/GameEventListenerRenderer esp
	BOX_HEIGHT c
	LISTENER_RENDER_DIST b
	minecraft a
	trackedGameEvents d
	trackedListeners e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderTransparentFilledBox (Lnet/minecraft/world/phys/AABB;FFFF)V a
	trackGameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	trackListener (Lnet/minecraft/world/level/gameevent/PositionSource;I)V a
net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedGameEvent esp$a
	gameEvent b
	position c
	timeStamp a
	isExpired ()Z a
net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedListener esp$b
	listenerRange b
	listenerSource a
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	handleGameEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)Z a
	isExpired (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/client/renderer/debug/GameTestDebugRenderer esq
	PADDING a
	markers b
	addMarker (Lnet/minecraft/core/BlockPos;ILjava/lang/String;I)V a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderMarker (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker;)V a
net/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker esq$a
	color a
	removeAtTime c
	text b
	getA ()F d
	getB ()F c
	getG ()F b
	getR ()F a
net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer esr
	MAX_RENDER_DIST a
	goalSelectors c
	minecraft b
	addGoalSelector (ILjava/util/List;)V a
	clear ()V a
	removeGoalSelector (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer$DebugGoal esr$a
	isRunning d
	name c
	pos a
	priority b
net/minecraft/client/renderer/debug/HeightMapRenderer ess
	BOX_HEIGHT c
	CHUNK_DIST b
	minecraft a
	getColor (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lcom/mojang/math/Vector3f; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/LightDebugRenderer est
	MAX_RENDER_DIST b
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/NeighborsUpdateRenderer esu
	lastUpdate b
	minecraft a
	addUpdate (JLnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/PathfindingRenderer esv
	MAX_RENDER_DIST e
	SHOW_GROUND_LABELS j
	SHOW_OPEN_CLOSED f
	SHOW_OPEN_CLOSED_COST_MALUS g
	SHOW_OPEN_CLOSED_NODE_TYPE_WITH_BOX i
	SHOW_OPEN_CLOSED_NODE_TYPE_WITH_TEXT h
	TEXT_SCALE k
	TIMEOUT d
	creationMap c
	pathMap a
	pathMaxDist b
	addPath (ILnet/minecraft/world/level/pathfinder/Path;F)V a
	distanceToCamera (Lnet/minecraft/core/BlockPos;DDD)F a
	doRenderPath (Lnet/minecraft/world/level/pathfinder/Path;FZZDDD)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderPath (Lnet/minecraft/world/level/pathfinder/Path;FZZDDD)V a
	renderPathLine (Lnet/minecraft/world/level/pathfinder/Path;DDD)V a
net/minecraft/client/renderer/debug/RaidDebugRenderer esw
	MAX_RENDER_DIST a
	TEXT_SCALE b
	minecraft c
	raidCenters d
	getCamera ()Lnet/minecraft/client/Camera; b
	highlightRaidCenter (Lnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderTextOverBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;I)V a
	setRaidCenters (Ljava/util/Collection;)V a
net/minecraft/client/renderer/debug/SolidFaceRenderer esx
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/StructureRenderer esy
	MAX_RENDER_DIST e
	minecraft a
	postMainBoxes b
	postPiecesBoxes c
	startPiecesMap d
	addBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/List;Ljava/util/List;Lnet/minecraft/world/level/dimension/DimensionType;)V a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/VillageSectionsDebugRenderer esz
	MAX_RENDER_DIST_FOR_VILLAGE_SECTIONS a
	villageSections b
	clear ()V a
	doRender (DDD)V a
	highlightVillageSection (Lnet/minecraft/core/SectionPos;)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	setNotVillageSection (Lnet/minecraft/core/SectionPos;)V b
	setVillageSection (Lnet/minecraft/core/SectionPos;)V a
net/minecraft/client/renderer/debug/WaterDebugRenderer eta
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/WorldGenAttemptRenderer etb
	alphas c
	blues f
	greens e
	reds d
	scales b
	toRender a
	addPos (Lnet/minecraft/core/BlockPos;FFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/entity/AbstractHorseRenderer etd
	scale a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/AbstractZombieRenderer ete
	ZOMBIE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/Zombie;)Z b
net/minecraft/client/renderer/entity/ArmorStandRenderer etf
	DEFAULT_SKIN_LOCATION a
	getRenderType (Lnet/minecraft/world/entity/LivingEntity;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/entity/decoration/ArmorStand;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/ArmorStand;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/decoration/ArmorStand;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/decoration/ArmorStand;)Z b
net/minecraft/client/renderer/entity/ArrowRenderer etg
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/AbstractArrow;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIIFFIIII)V a
net/minecraft/client/renderer/entity/AxolotlRenderer eth
	TEXTURE_BY_TYPE a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BatRenderer eti
	BAT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/ambient/Bat;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/ambient/Bat;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/ambient/Bat;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/BeeRenderer etj
	ANGRY_BEE_TEXTURE a
	ANGRY_NECTAR_BEE_TEXTURE i
	BEE_TEXTURE j
	NECTAR_BEE_TEXTURE k
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BlazeRenderer etk
	BLAZE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/Blaze;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Blaze;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BoatRenderer etl
	boatResources a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/Boat;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/vehicle/Boat;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/CatRenderer etm
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cat;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/Cat;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Cat;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/CaveSpiderRenderer etn
	CAVE_SPIDER_LOCATION a
	SCALE i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/CaveSpider;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Spider;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/CaveSpider;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/ChestedHorseRenderer eto
	MAP a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ChickenRenderer etp
	CHICKEN_LOCATION a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Chicken;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Chicken;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CodRenderer etq
	COD_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cod;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Cod;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/CowRenderer etr
	COW_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CreeperRenderer ets
	CREEPER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Creeper;)Lnet/minecraft/resources/ResourceLocation; a
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/LivingEntity;F)F b
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/monster/Creeper;F)F a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Creeper;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/DolphinRenderer ett
	DOLPHIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Dolphin;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/DragonFireballRenderer etu
	RENDER_TYPE f
	TEXTURE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/DragonFireball;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/DragonFireball;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/DragonFireball;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;IFIII)V a
net/minecraft/client/renderer/entity/DrownedRenderer etv
	DROWNED_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Drowned;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ElderGuardianRenderer etw
	GUARDIAN_ELDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Guardian;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Guardian;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/EndCrystalRenderer etx
	BASE i
	END_CRYSTAL_LOCATION a
	GLASS h
	RENDER_TYPE f
	SIN_45 g
	base l
	cube j
	glass k
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;)Lnet/minecraft/resources/ResourceLocation; a
	getY (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;F)F a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
net/minecraft/client/renderer/entity/EnderDragonRenderer ety
	BEAM l
	CRYSTAL_BEAM_LOCATION a
	DECAL j
	DRAGON_EXPLODING_LOCATION f
	DRAGON_EYES_LOCATION h
	DRAGON_LOCATION g
	EYES k
	HALF_SQRT_3 m
	RENDER_TYPE i
	model n
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderCrystalBeams (FFFFILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex01 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;I)V a
	vertex2 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V a
	vertex3 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V b
	vertex4 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V c
net/minecraft/client/renderer/entity/EnderDragonRenderer$DragonModel ety$a
	a z
	body g
	entity y
	head a
	jaw f
	leftFrontFoot l
	leftFrontLeg j
	leftFrontLegTip k
	leftRearFoot o
	leftRearLeg m
	leftRearLegTip n
	leftWing h
	leftWingTip i
	neck b
	rightFrontFoot u
	rightFrontLeg r
	rightFrontLegTip t
	rightRearFoot x
	rightRearLeg v
	rightRearLegTip w
	rightWing p
	rightWingTip q
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFF)V a
	renderSide (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFLnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;F)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFFFF)V a
net/minecraft/client/renderer/entity/EndermanRenderer etz
	ENDERMAN_LOCATION a
	random i
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/monster/EnderMan;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/EnderMan;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/EnderMan;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/EndermiteRenderer eua
	ENDERMITE_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Endermite;)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Endermite;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/renderer/entity/EntityRenderDispatcher eub
	SHADOW_RENDER_TYPE e
	camera b
	cameraOrientation i
	crosshairPickEntity c
	entityModels l
	font k
	itemRenderer j
	level h
	options d
	playerRenderers g
	renderHitBoxes n
	renderers f
	shouldRenderShadow m
	textureManager a
	cameraOrientation ()Lcom/mojang/math/Quaternion; b
	distanceToSqr (DDD)D a
	distanceToSqr (Lnet/minecraft/world/entity/Entity;)D b
	fireVertex (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFF)V a
	getPackedLightCoords (Lnet/minecraft/world/entity/Entity;F)I a
	getRenderer (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/client/renderer/entity/EntityRenderer; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	overrideCameraOrientation (Lcom/mojang/math/Quaternion;)V a
	prepare (Lnet/minecraft/world/level/Level;Lnet/minecraft/client/Camera;Lnet/minecraft/world/entity/Entity;)V a
	render (Lnet/minecraft/world/entity/Entity;DDDFFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderBlockShadow (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;DDDFF)V a
	renderFlame (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;)V a
	renderHitbox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;F)V a
	renderShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;FFLnet/minecraft/world/level/LevelReader;F)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRenderHitBoxes (Z)V b
	setRenderShadow (Z)V a
	shadowVertex (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRenderHitBoxes ()Z a
net/minecraft/client/renderer/entity/EntityRenderer euc
	NAMETAG_SCALE b
	entityRenderDispatcher c
	font a
	shadowRadius d
	shadowStrength e
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getFont ()Lnet/minecraft/client/gui/Font; b
	getPackedLightCoords (Lnet/minecraft/world/entity/Entity;F)I b
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getSkyLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
net/minecraft/client/renderer/entity/EntityRendererProvider eud
net/minecraft/client/renderer/entity/EntityRendererProvider$Context eud$a
	entityRenderDispatcher a
	font e
	itemRenderer b
	modelSet d
	resourceManager c
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	getEntityRenderDispatcher ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; a
	getFont ()Lnet/minecraft/client/gui/Font; e
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; b
	getModelSet ()Lnet/minecraft/client/model/geom/EntityModelSet; d
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; c
net/minecraft/client/renderer/entity/EntityRenderers eue
	DEFAULT_PLAYER_MODEL a
	LOGGER b
	PLAYER_PROVIDERS d
	PROVIDERS c
	createEntityRenderers (Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;)Ljava/util/Map; a
	createPlayerRenderers (Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;)Ljava/util/Map; b
	register (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/client/renderer/entity/EntityRendererProvider;)V a
	validateRegistrations ()Z a
net/minecraft/client/renderer/entity/EvokerFangsRenderer euf
	TEXTURE_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/EvokerFangs;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/EvokerFangs;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/EvokerRenderer eug
	EVOKER_ILLAGER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/SpellcasterIllager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ExperienceOrbRenderer euh
	EXPERIENCE_ORB_LOCATION a
	RENDER_TYPE f
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/ExperienceOrb;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/ExperienceOrb;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/ExperienceOrb;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FFIIIFFI)V a
net/minecraft/client/renderer/entity/FallingBlockRenderer eui
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/FallingBlockEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/FallingBlockEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/FireworkEntityRenderer euj
	itemRenderer a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/FishingHookRenderer euk
	RENDER_TYPE f
	TEXTURE_LOCATION a
	VIEW_BOBBING_SCALE g
	fraction (II)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/FishingHook;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/FishingHook;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	stringVertex (FFFLcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;FF)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;IFIII)V a
net/minecraft/client/renderer/entity/FoxRenderer eul
	RED_FOX_SLEEP_TEXTURE i
	RED_FOX_TEXTURE a
	SNOW_FOX_SLEEP_TEXTURE k
	SNOW_FOX_TEXTURE j
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Fox;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Fox;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/GhastRenderer eum
	GHAST_LOCATION a
	GHAST_SHOOTING_LOCATION i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Ghast;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Ghast;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/GiantMobRenderer eun
	ZOMBIE_LOCATION a
	scale i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Giant;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Giant;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/GlowSquidRenderer euo
	GLOW_SQUID_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/GlowSquid;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/GlowSquid;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Squid;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/GoatRenderer eup
	GOAT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/goat/Goat;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/GuardianRenderer euq
	BEAM_RENDER_TYPE j
	GUARDIAN_BEAM_LOCATION i
	GUARDIAN_LOCATION a
	getPosition (Lnet/minecraft/world/entity/LivingEntity;DF)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Guardian;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Guardian;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/monster/Guardian;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FFFIIIFF)V a
net/minecraft/client/renderer/entity/HoglinRenderer eur
	HOGLIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z b
net/minecraft/client/renderer/entity/HorseRenderer eus
	LOCATION_BY_VARIANT a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/Horse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/HumanoidMobRenderer eut
	DEFAULT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/HuskRenderer euu
	HUSK_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Zombie;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/IllagerRenderer euv
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/AbstractIllager;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/IllusionerRenderer euw
	ILLUSIONER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Illusioner;)Lnet/minecraft/resources/ResourceLocation; a
	isBodyVisible (Lnet/minecraft/world/entity/LivingEntity;)Z d
	isBodyVisible (Lnet/minecraft/world/entity/monster/Illusioner;)Z b
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Illusioner;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/IronGolemRenderer eux
	GOLEM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/IronGolem;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/IronGolem;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ItemEntityRenderer euy
	FLAT_ITEM_BUNDLE_OFFSET_X j
	FLAT_ITEM_BUNDLE_OFFSET_Y k
	FLAT_ITEM_BUNDLE_OFFSET_Z l
	ITEM_BUNDLE_OFFSET_SCALE a
	ITEM_COUNT_FOR_2_BUNDLE i
	ITEM_COUNT_FOR_3_BUNDLE h
	ITEM_COUNT_FOR_4_BUNDLE g
	ITEM_COUNT_FOR_5_BUNDLE f
	itemRenderer m
	random n
	getRenderAmount (Lnet/minecraft/world/item/ItemStack;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/ItemEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/ItemEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ItemFrameRenderer euz
	BRIGHT_MAP_LIGHT_ADJUSTMENT f
	FRAME_LOCATION g
	GLOW_FRAME_BRIGHTNESS a
	GLOW_FRAME_LOCATION i
	GLOW_MAP_FRAME_LOCATION j
	MAP_FRAME_LOCATION h
	itemRenderer l
	minecraft k
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/core/BlockPos;)I a
	getFrameModelResourceLoc (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/resources/model/ModelResourceLocation; a
	getLightVal (Lnet/minecraft/world/entity/decoration/ItemFrame;II)I a
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/decoration/ItemFrame;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/ItemFrame;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/ItemFrame;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/decoration/ItemFrame;)Z b
net/minecraft/client/renderer/entity/ItemRenderer eva
	COMPASS_FOIL_FIRST_PERSON_SCALE d
	COMPASS_FOIL_UI_SCALE c
	ENCHANT_GLINT_LOCATION a
	GUI_SLOT_CENTER_X g
	GUI_SLOT_CENTER_Y h
	IGNORED f
	ITEM_COUNT_BLIT_OFFSET b
	blitOffset e
	blockEntityRenderer l
	itemColors k
	itemModelShaper i
	textureManager j
	fillRect (Lcom/mojang/blaze3d/vertex/BufferBuilder;IIIIIIII)V a
	getArmorFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	getCompassFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	getCompassFoilBufferDirect (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	getFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	getFoilBufferDirect (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; c
	getItemModelShaper ()Lnet/minecraft/client/renderer/ItemModelShaper; a
	getModel (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)Lnet/minecraft/client/resources/model/BakedModel; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	render (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/resources/model/BakedModel;)V a
	renderAndDecorateFakeItem (Lnet/minecraft/world/item/ItemStack;II)V c
	renderAndDecorateItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;III)V a
	renderAndDecorateItem (Lnet/minecraft/world/item/ItemStack;II)V b
	renderAndDecorateItem (Lnet/minecraft/world/item/ItemStack;III)V a
	renderAndDecorateItem (Lnet/minecraft/world/item/ItemStack;IIII)V a
	renderGuiItem (Lnet/minecraft/world/item/ItemStack;II)V a
	renderGuiItem (Lnet/minecraft/world/item/ItemStack;IILnet/minecraft/client/resources/model/BakedModel;)V a
	renderGuiItemDecorations (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;II)V a
	renderGuiItemDecorations (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V a
	renderModelLists (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;IILcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderQuadList (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Lnet/minecraft/world/item/ItemStack;II)V a
	renderStatic (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;III)V a
	renderStatic (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;IILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	tryRenderGuiItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;III)V b
	tryRenderGuiItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;IIII)V a
net/minecraft/client/renderer/entity/LeashKnotRenderer evb
	KNOT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/LightningBoltRenderer evc
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/LightningBolt;)Lnet/minecraft/resources/ResourceLocation; a
	quad (Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFIFFFFFFFZZZZ)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LightningBolt;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/LivingEntityRenderer evd
	EYE_BED_OFFSET h
	LOGGER a
	layers g
	model f
	addLayer (Lnet/minecraft/client/renderer/entity/layers/RenderLayer;)Z a
	getAttackAnim (Lnet/minecraft/world/entity/LivingEntity;F)F d
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getModel ()Lnet/minecraft/client/model/EntityModel; a
	getOverlayCoords (Lnet/minecraft/world/entity/LivingEntity;F)I c
	getRenderType (Lnet/minecraft/world/entity/LivingEntity;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/LivingEntity;F)F b
	isBodyVisible (Lnet/minecraft/world/entity/LivingEntity;)Z d
	isEntityUpsideDown (Lnet/minecraft/world/entity/LivingEntity;)Z e
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	sleepDirectionToRotation (Lnet/minecraft/core/Direction;)F a
net/minecraft/client/renderer/entity/LlamaRenderer eve
	LLAMA_LOCATIONS a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/Llama;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/LlamaSpitRenderer evf
	LLAMA_SPIT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/LlamaSpit;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/LlamaSpit;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/MagmaCubeRenderer evg
	MAGMACUBE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/MagmaCube;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/MagmaCube;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/MagmaCube;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/MinecartRenderer evh
	MINECART_LOCATION f
	model a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/MobRenderer evi
	LEASH_RENDER_STEPS h
	addVertexPair (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FFFIIIIFFFFIZ)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderLeash (Lnet/minecraft/world/entity/Mob;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/Mob;)Z b
net/minecraft/client/renderer/entity/MushroomCowRenderer evj
	TEXTURES a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/MushroomCow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/NoopRenderer evk
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/OcelotRenderer evl
	CAT_OCELOT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Ocelot;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PaintingRenderer evm
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/Painting;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/Painting;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderPainting (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/decoration/Painting;IILnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	vertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFIIII)V a
net/minecraft/client/renderer/entity/PandaRenderer evn
	TEXTURES a
	getAngle (FFIFF)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Panda;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Panda;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ParrotRenderer evo
	PARROT_LOCATIONS a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Parrot;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Parrot;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PhantomRenderer evp
	PHANTOM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Phantom;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Phantom;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Phantom;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/PigRenderer evq
	PIG_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Pig;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PiglinRenderer evr
	PIGLIN_CUSTOM_HEAD_SCALE i
	TEXTURES a
	createModel (Lnet/minecraft/client/model/geom/EntityModelSet;Lnet/minecraft/client/model/geom/ModelLayerLocation;Z)Lnet/minecraft/client/model/PiglinModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/Mob;)Z c
net/minecraft/client/renderer/entity/PillagerRenderer evs
	PILLAGER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Pillager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PolarBearRenderer evt
	BEAR_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/PolarBear;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/PolarBear;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/PufferfishRenderer evu
	PUFFER_LOCATION a
	big l
	mid k
	puffStateO i
	small j
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Pufferfish;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Pufferfish;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Pufferfish;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/RabbitRenderer evv
	RABBIT_BLACK_LOCATION j
	RABBIT_BROWN_LOCATION a
	RABBIT_EVIL_LOCATION o
	RABBIT_GOLD_LOCATION k
	RABBIT_SALT_LOCATION l
	RABBIT_TOAST_LOCATION n
	RABBIT_WHITE_LOCATION i
	RABBIT_WHITE_SPLOTCHED_LOCATION m
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Rabbit;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/RavagerRenderer evw
	TEXTURE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Ravager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/RenderLayerParent evx
	getModel ()Lnet/minecraft/client/model/EntityModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SalmonRenderer evy
	SALMON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Salmon;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Salmon;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/SheepRenderer evz
	SHEEP_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Sheep;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ShulkerBulletRenderer ewa
	RENDER_TYPE f
	TEXTURE_LOCATION a
	model g
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/ShulkerBullet;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/ShulkerBullet;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/ShulkerBullet;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ShulkerRenderer ewb
	DEFAULT_TEXTURE_LOCATION a
	TEXTURE_LOCATION i
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/monster/Shulker;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Shulker;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Shulker;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/monster/Shulker;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
net/minecraft/client/renderer/entity/SilverfishRenderer ewc
	SILVERFISH_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Silverfish;)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Silverfish;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/renderer/entity/SkeletonRenderer ewd
	SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Z b
net/minecraft/client/renderer/entity/SlimeRenderer ewe
	SLIME_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Slime;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Slime;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Slime;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/SnowGolemRenderer ewf
	SNOW_GOLEM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/SnowGolem;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SpectralArrowRenderer ewg
	SPECTRAL_ARROW_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/SpectralArrow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SpiderRenderer ewh
	SPIDER_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Spider;)F b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Spider;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SquidRenderer ewi
	SQUID_LOCATION a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Squid;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Squid;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Squid;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/StrayRenderer ewj
	STRAY_SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/StriderRenderer ewk
	COLD_LOCATION i
	STRIDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Strider;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/Strider;)Z b
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Strider;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/ThrownItemRenderer ewl
	MIN_CAMERA_DISTANCE_SQUARED a
	fullBright h
	itemRenderer f
	scale g
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ThrownTridentRenderer ewm
	TRIDENT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/ThrownTrident;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/ThrownTrident;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/TippableArrowRenderer ewn
	NORMAL_ARROW_LOCATION a
	TIPPED_ARROW_LOCATION f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/Arrow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/TntMinecartRenderer ewo
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/MinecartTNT;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderWhiteSolidBlock (Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IZ)V a
net/minecraft/client/renderer/entity/TntRenderer ewp
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/PrimedTnt;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/PrimedTnt;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/TropicalFishRenderer ewq
	modelA a
	modelB i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/TropicalFish;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/TropicalFish;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/TropicalFish;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/TurtleRenderer ewr
	TURTLE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Turtle;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Turtle;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/UndeadHorseRenderer ews
	MAP a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/VexRenderer ewt
	VEX_CHARGING_LOCATION i
	VEX_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/Vex;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Vex;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Vex;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/VillagerRenderer ewu
	VILLAGER_BASE_SKIN a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/npc/Villager;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/VindicatorRenderer ewv
	VINDICATOR a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Vindicator;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/WanderingTraderRenderer eww
	VILLAGER_BASE_SKIN a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/npc/WanderingTrader;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/npc/WanderingTrader;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitchRenderer ewx
	WITCH_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Witch;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Witch;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Witch;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherBossRenderer ewy
	WITHER_INVULNERABLE_LOCATION a
	WITHER_LOCATION i
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/wither/WitherBoss;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherSkeletonRenderer ewz
	WITHER_SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/AbstractSkeleton;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherSkullRenderer exa
	WITHER_INVULNERABLE_LOCATION a
	WITHER_LOCATION f
	model g
	createSkullLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/WitherSkull;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/WitherSkull;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/WolfRenderer exb
	WOLF_ANGRY_LOCATION j
	WOLF_LOCATION a
	WOLF_TAME_LOCATION i
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Wolf;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Wolf;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Wolf;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ZoglinRenderer exc
	ZOGLIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zoglin;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ZombieRenderer exd
net/minecraft/client/renderer/entity/ZombieVillagerRenderer exe
	ZOMBIE_VILLAGER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/ZombieVillager;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/ZombieVillager;)Z b
net/minecraft/client/renderer/entity/layers/ArrowLayer exf
	dispatcher a
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
net/minecraft/client/renderer/entity/layers/BeeStingerLayer exg
	BEE_STINGER_LOCATION a
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FIFFI)V a
net/minecraft/client/renderer/entity/layers/CapeLayer exh
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CarriedBlockLayer exi
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/EnderMan;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CatCollarLayer exj
	CAT_COLLAR_LOCATION a
	catModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Cat;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CreeperPowerLayer exk
	POWER_LOCATION a
	model b
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/CrossedArmsItemLayer exl
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CustomHeadLayer exm
	scaleX a
	scaleY b
	scaleZ c
	skullModels d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	translateToHead (Lcom/mojang/blaze3d/vertex/PoseStack;Z)V a
net/minecraft/client/renderer/entity/layers/Deadmau5EarsLayer exn
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/DolphinCarryingItemLayer exo
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Dolphin;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/DrownedOuterLayer exp
	DROWNED_OUTER_LAYER_LOCATION a
	model b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/Drowned;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ElytraLayer exq
	WINGS_LOCATION a
	elytraModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/EnderEyesLayer exr
	ENDERMAN_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/EnergySwirlLayer exs
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/EyesLayer ext
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/FoxHeldItemLayer exu
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Fox;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HorseArmorLayer exv
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HorseMarkingLayer exw
	LOCATION_BY_MARKINGS a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer exx
	ARMOR_LOCATION_CACHE a
	innerModel b
	outerModel c
	getArmorLocation (Lnet/minecraft/world/item/ArmorItem;ZLjava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getArmorModel (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/client/model/HumanoidModel; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderArmorPiece (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;ILnet/minecraft/client/model/HumanoidModel;)V a
	renderModel (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/ArmorItem;ZLnet/minecraft/client/model/HumanoidModel;ZFFFLjava/lang/String;)V a
	setPartVisibility (Lnet/minecraft/client/model/HumanoidModel;Lnet/minecraft/world/entity/EquipmentSlot;)V a
	usesInnerModel (Lnet/minecraft/world/entity/EquipmentSlot;)Z b
net/minecraft/client/renderer/entity/layers/IronGolemCrackinessLayer exy
	resourceLocations a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/IronGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/IronGolemFlowerLayer exz
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/IronGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ItemInHandLayer eya
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderArmWithItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/layers/LlamaDecorLayer eyb
	TEXTURE_LOCATION a
	TRADER_LLAMA b
	model c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Llama;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/MushroomCowMushroomLayer eyc
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/MushroomCow;FFFFFF)V a
	renderMushroomBlock (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IZLnet/minecraft/client/renderer/block/BlockRenderDispatcher;Lnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/client/resources/model/BakedModel;)V a
net/minecraft/client/renderer/entity/layers/PandaHoldsItemLayer eyd
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Panda;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ParrotOnShoulderLayer eye
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFZ)V a
net/minecraft/client/renderer/entity/layers/PhantomEyesLayer eyf
	PHANTOM_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/PlayerItemInHandLayer eyg
	X_ROT_MAX b
	X_ROT_MIN a
	renderArmWithItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderArmWithSpyglass (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/layers/RenderLayer eyh
	renderer a
	coloredCutoutModelCopyLayerRender (Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFFFFF)V a
	getParentModel ()Lnet/minecraft/client/model/EntityModel; c
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	renderColoredCutoutModel (Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFF)V a
net/minecraft/client/renderer/entity/layers/SaddleLayer eyi
	model b
	textureLocation a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SheepFurLayer eyj
	SHEEP_FUR_LOCATION a
	model b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Sheep;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer eyk
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/Shulker;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SlimeOuterLayer eyl
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SnowGolemHeadLayer eym
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/SnowGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SpiderEyesLayer eyn
	SPIDER_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer eyo
	BOX b
	TEXTURE a
	box c
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/StrayClothingLayer eyp
	STRAY_CLOTHES_LOCATION a
	layerModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Mob;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/StuckInBodyLayer eyq
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer eyr
	modelA a
	modelB b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/TropicalFish;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer eys
	LEVEL_LOCATIONS a
	path e
	professionHatCache c
	resourceManager d
	typeHatCache b
	getHatData (Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lnet/minecraft/core/DefaultedRegistry;Ljava/lang/Object;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
	getResourceLocation (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/WitchItemLayer eyt
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/WitherArmorLayer eyu
	WITHER_ARMOR_LOCATION a
	model b
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/WolfCollarLayer eyv
	WOLF_COLLAR_LOCATION a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Wolf;FFFFFF)V a
net/minecraft/client/renderer/entity/player/PlayerRenderer eyy
	getArmPose (Lnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/client/model/HumanoidModel$ArmPose; a
	getRenderOffset (Lnet/minecraft/client/player/AbstractClientPlayer;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/client/player/AbstractClientPlayer;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/client/player/AbstractClientPlayer;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;)V a
	renderLeftHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;)V b
	renderNameTag (Lnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderRightHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;)V a
	scale (Lnet/minecraft/client/player/AbstractClientPlayer;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setModelProperties (Lnet/minecraft/client/player/AbstractClientPlayer;)V b
	setupRotations (Lnet/minecraft/client/player/AbstractClientPlayer;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/item/ClampedItemPropertyFunction eza
net/minecraft/client/renderer/item/ItemProperties ezb
	DAMAGE d
	DAMAGED c
	GENERIC_PROPERTIES a
	PROPERTIES g
	PROPERTY_DAMAGE f
	PROPERTY_DAMAGED e
	TAG_CUSTOM_MODEL_DATA b
	getProperty (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/item/ItemPropertyFunction; a
	register (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction;)V a
	registerCustomModelData (Lnet/minecraft/client/renderer/item/ItemPropertyFunction;)V a
	registerGeneric (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction;)Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction; a
net/minecraft/client/renderer/item/ItemProperties$CompassWobble ezb$a
	deltaRotation b
	lastUpdateTick c
	rotation a
	shouldUpdate (J)Z a
	update (JD)V a
net/minecraft/client/renderer/item/ItemPropertyFunction ezc
net/minecraft/client/renderer/texture/AbstractTexture ezf
	NOT_ASSIGNED a
	blur c
	id b
	mipmap d
	bind ()V d
	getId ()I b
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	releaseId ()V c
	reset (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)V a
	setFilter (ZZ)V a
net/minecraft/client/renderer/texture/AtlasSet ezg
	atlases a
	getAtlas (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	getSprite (Lnet/minecraft/client/resources/model/Material;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/renderer/texture/DynamicTexture ezh
	LOGGER e
	pixels f
	getPixels ()Lcom/mojang/blaze3d/platform/NativeImage; e
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	setPixels (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	upload ()V a
net/minecraft/client/renderer/texture/HttpTexture ezi
	LEGACY_SKIN_HEIGHT i
	LOGGER f
	SKIN_HEIGHT h
	SKIN_WIDTH g
	file j
	future n
	onDownloaded m
	processLegacySkin l
	uploaded o
	urlString k
	doNotchTransparencyHack (Lcom/mojang/blaze3d/platform/NativeImage;IIII)V a
	load (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	loadCallback (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	processLegacySkin (Lcom/mojang/blaze3d/platform/NativeImage;)Lcom/mojang/blaze3d/platform/NativeImage; c
	setNoAlpha (Lcom/mojang/blaze3d/platform/NativeImage;IIII)V b
	upload (Lcom/mojang/blaze3d/platform/NativeImage;)V b
net/minecraft/client/renderer/texture/MipmapGenerator ezj
	ALPHA_CUTOUT_CUTOFF a
	POW22 b
	alphaBlend (IIIIZ)I a
	gammaBlend (IIIII)I a
	generateMipLevels (Lcom/mojang/blaze3d/platform/NativeImage;I)[Lcom/mojang/blaze3d/platform/NativeImage; a
	getPow22 (I)F a
net/minecraft/client/renderer/texture/MissingTextureAtlasSprite ezk
	INFO h
	MISSING_IMAGE_DATA g
	MISSING_IMAGE_HEIGHT c
	MISSING_IMAGE_WIDTH b
	MISSING_TEXTURE_LOCATION e
	MISSING_TEXTURE_NAME d
	missingTexture f
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getTexture ()Lnet/minecraft/client/renderer/texture/DynamicTexture; c
	info ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info; b
	newInstance (Lnet/minecraft/client/renderer/texture/TextureAtlas;IIIII)Lnet/minecraft/client/renderer/texture/MissingTextureAtlasSprite; a
net/minecraft/client/renderer/texture/OverlayTexture ezl
	NO_OVERLAY d
	NO_WHITE_U a
	RED_OVERLAY_V b
	SIZE e
	WHITE_OVERLAY_V c
	texture f
	pack (FZ)I a
	pack (II)I a
	setupOverlayColor ()V a
	teardownOverlayColor ()V b
	u (F)I a
	v (Z)I a
net/minecraft/client/renderer/texture/PreloadedTexture ezm
	future f
	executor (Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor; a
	getFuture ()Ljava/util/concurrent/CompletableFuture; a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
	reset (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)V a
net/minecraft/client/renderer/texture/SimpleTexture ezn
	LOGGER f
	location e
	doLoad (Lcom/mojang/blaze3d/platform/NativeImage;ZZ)V a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/renderer/texture/SimpleTexture$TextureImage ezn$a
	exception c
	image b
	metadata a
	getImage ()Lcom/mojang/blaze3d/platform/NativeImage; b
	getTextureMetadata ()Lnet/minecraft/client/resources/metadata/texture/TextureMetadataSection; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; a
	throwIfError ()V c
net/minecraft/client/renderer/texture/Stitcher ezo
	HOLDER_COMPARATOR a
	maxHeight h
	maxWidth g
	mipLevel b
	storage d
	storageX e
	storageY f
	texturesToBeStitched c
	addToStorage (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z a
	expand (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z b
	gatherSprites (Lnet/minecraft/client/renderer/texture/Stitcher$SpriteLoader;)V a
	getHeight ()I b
	getWidth ()I a
	registerSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info;)V a
	smallestFittingMinTexel (II)I a
	stitch ()V c
net/minecraft/client/renderer/texture/Stitcher$Holder ezo$a
	height c
	spriteInfo a
	width b
net/minecraft/client/renderer/texture/Stitcher$Region ezo$b
	height d
	holder f
	originX a
	originY b
	subSlots e
	width c
	add (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z a
	getHolder ()Lnet/minecraft/client/renderer/texture/Stitcher$Holder; a
	getX ()I b
	getY ()I c
	walk (Ljava/util/function/Consumer;)V a
net/minecraft/client/renderer/texture/Stitcher$SpriteLoader ezo$c
net/minecraft/client/renderer/texture/StitcherException ezp
	allSprites a
	getAllSprites ()Ljava/util/Collection; a
net/minecraft/client/renderer/texture/TextureAtlas ezq
	FILE_EXTENSION h
	LOCATION_BLOCKS e
	LOCATION_PARTICLES f
	LOGGER g
	animatedTextures i
	location l
	maxSupportedTextureSize m
	sprites j
	texturesByName k
	clearTextureData ()V f
	cycleAnimationFrames ()V a
	getBasicSpriteInfos (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/Set;)Ljava/util/Collection; a
	getLoadedSprites (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/Stitcher;I)Ljava/util/List; a
	getResourceLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info;IIIII)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	location ()Lnet/minecraft/resources/ResourceLocation; g
	prepareToStitch (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/stream/Stream;Lnet/minecraft/util/profiling/ProfilerFiller;I)Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations; a
	reload (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;)V a
	tick ()V e
	updateFilter (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;)V b
net/minecraft/client/renderer/texture/TextureAtlas$Preparations ezq$a
	height c
	mipLevel d
	regions e
	sprites a
	width b
net/minecraft/client/renderer/texture/TextureAtlasSprite ezr
	LOGGER b
	animatedTexture g
	atlas c
	height f
	mainImage a
	name d
	u0 j
	u1 k
	v0 l
	v1 m
	width e
	x h
	y i
	atlas ()Lnet/minecraft/client/renderer/texture/TextureAtlas; m
	atlasSize ()F b
	createTicker (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info;III)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$AnimatedTexture; a
	getAnimationTicker ()Lnet/minecraft/client/renderer/texture/Tickable; q
	getFrameCount ()I a
	getHeight ()I g
	getName ()Lnet/minecraft/resources/ResourceLocation; l
	getU (D)F a
	getU0 ()F h
	getU1 ()F i
	getUOffset (F)F a
	getUniqueFrames ()Ljava/util/stream/IntStream; n
	getV (D)F b
	getV0 ()F j
	getV1 ()F k
	getVOffset (F)F b
	getWidth ()I f
	getX ()I d
	getY ()I e
	isTransparent (III)Z a
	upload (II[Lcom/mojang/blaze3d/platform/NativeImage;)V a
	uploadFirstFrame ()V o
	uvShrinkRatio ()F p
	wrap (Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
net/minecraft/client/renderer/texture/TextureAtlasSprite$AnimatedTexture ezr$a
	frame b
	frameRowSize e
	frames d
	interpolationData f
	subFrame c
	getFrameX (I)I a
	getFrameY (I)I b
	getUniqueFrames ()Ljava/util/stream/IntStream; b
	tick ()V e
	uploadFirstFrame ()V a
	uploadFrame (I)V c
net/minecraft/client/renderer/texture/TextureAtlasSprite$FrameInfo ezr$b
	index a
	time b
net/minecraft/client/renderer/texture/TextureAtlasSprite$Info ezr$c
	height c
	metadata d
	name a
	width b
	height ()I c
	name ()Lnet/minecraft/resources/ResourceLocation; a
	width ()I b
net/minecraft/client/renderer/texture/TextureAtlasSprite$InterpolationData ezr$d
	activeFrame b
	getPixel (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$AnimatedTexture;IIII)I a
	mix (DII)I a
	uploadInterpolatedFrame (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$AnimatedTexture;)V a
net/minecraft/client/renderer/texture/TextureManager ezs
	INTENTIONAL_MISSING_TEXTURE a
	LOGGER b
	byPath c
	prefixRegister e
	resourceManager f
	tickableTextures d
	_bind (Lnet/minecraft/resources/ResourceLocation;)V d
	bindForSetup (Lnet/minecraft/resources/ResourceLocation;)V a
	execute (Ljava/lang/Runnable;)V a
	getTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/AbstractTexture; b
	getTexture (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)Lnet/minecraft/client/renderer/texture/AbstractTexture; b
	loadTexture (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)Lnet/minecraft/client/renderer/texture/AbstractTexture; d
	preload (Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	register (Ljava/lang/String;Lnet/minecraft/client/renderer/texture/DynamicTexture;)Lnet/minecraft/resources/ResourceLocation; a
	register (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)V a
	release (Lnet/minecraft/resources/ResourceLocation;)V c
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	safeClose (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)V c
	tick ()V e
net/minecraft/client/renderer/texture/Tickable ezt
	tick ()V e
net/minecraft/client/resources/AssetIndex ezv
	LOGGER a
	namespacedFiles c
	rootFiles b
	getFile (Lnet/minecraft/resources/ResourceLocation;)Ljava/io/File; a
	getFiles (Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootFile (Ljava/lang/String;)Ljava/io/File; a
net/minecraft/client/resources/ClientPackSource ezw
	APPLYING_PACK_TEXT j
	BUILT_IN a
	LOGGER b
	MAX_KEPT_PACKS e
	MAX_PACK_SIZE_BYTES d
	PROGRAMMER_ART_ID h
	PROGRAMMER_ART_NAME i
	SERVER_ID g
	SHA1 c
	VANILLA_ID f
	assetIndex n
	currentDownload o
	downloadLock m
	serverPack p
	serverPackDir l
	vanillaPack k
	checkHash (Ljava/lang/String;Ljava/io/File;)Z a
	clearOldDownloads ()V d
	clearServerPack ()V b
	createProgrammerArtDirPack (Ljava/io/File;)Lnet/minecraft/server/packs/FolderPackResources; b
	createProgrammerArtPack (Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)Lnet/minecraft/server/packs/repository/Pack; a
	createProgrammerArtPack (Lnet/minecraft/server/packs/repository/Pack$PackConstructor;Ljava/util/function/Supplier;)Lnet/minecraft/server/packs/repository/Pack; a
	createProgrammerArtZipPack (Ljava/io/File;)Lnet/minecraft/server/packs/PackResources; c
	deleteQuietly (Ljava/io/File;)V a
	downloadAndSelectResourcePack (Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture; a
	getDownloadHeaders ()Ljava/util/Map; c
	getVanillaPack ()Lnet/minecraft/server/packs/VanillaPackResources; a
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
	setServerPack (Ljava/io/File;Lnet/minecraft/server/packs/repository/PackSource;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/resources/DefaultClientPackResources ezx
	assetIndex g
	getResourceAsStream (Ljava/lang/String;)Ljava/io/InputStream; a
	getResourceAsStream (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; c
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/client/resources/DefaultPlayerSkin ezy
	ALEX_MODEL d
	ALEX_SKIN_LOCATION b
	STEVE_MODEL c
	STEVE_SKIN_LOCATION a
	getDefaultSkin ()Lnet/minecraft/resources/ResourceLocation; a
	getDefaultSkin (Ljava/util/UUID;)Lnet/minecraft/resources/ResourceLocation; a
	getSkinModelName (Ljava/util/UUID;)Ljava/lang/String; b
	isAlexDefault (Ljava/util/UUID;)Z c
net/minecraft/client/resources/DirectAssetIndex ezz
	assetsDirectory b
	getFile (Lnet/minecraft/resources/ResourceLocation;)Ljava/io/File; a
	getFiles (Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootFile (Ljava/lang/String;)Ljava/io/File; a
net/minecraft/client/resources/FoliageColorReloadListener faa
	LOCATION a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply ([ILnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)[I a
net/minecraft/client/resources/GrassColorReloadListener fab
	LOCATION a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply ([ILnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)[I a
net/minecraft/client/resources/LegacyPackResourcesAdapter fac
	V3 a
	patches e
	source b
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	map (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
	toMetaLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/resources/LegacyStuffWrapper fad
	getPixels (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)[I a
net/minecraft/client/resources/MobEffectTextureManager fae
	get (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getResourcesToLoad ()Ljava/util/stream/Stream; a
net/minecraft/client/resources/PackResourcesAdapterV4 faf
	BANNERS m
	BANNER_BASE b
	CHESTS j
	DEFAULT_BANNER_SIZE g
	DEFAULT_CHEST_SIZE e
	DEFAULT_SHIELD_SIZE f
	NEW_IRON_GOLEM_PATH i
	OLD_IRON_GOLEM_LOCATION h
	PATTERNS k
	SHIELDS l
	SHIELD_BASE a
	pack n
	copyRect (Lcom/mojang/blaze3d/platform/NativeImage;Lcom/mojang/blaze3d/platform/NativeImage;IIIIIIIZZ)V a
	fixConduitEyeTexture (Ljava/io/InputStream;)Ljava/io/InputStream; a
	fixLeftChest (Ljava/io/InputStream;)Ljava/io/InputStream; b
	fixPattern (Ljava/io/InputStream;Ljava/io/InputStream;IIIII)Ljava/io/InputStream; a
	fixRightChest (Ljava/io/InputStream;)Ljava/io/InputStream; c
	fixSingleChest (Ljava/io/InputStream;)Ljava/io/InputStream; d
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/client/resources/PaintingTextureManager fag
	BACK_SPRITE_LOCATION a
	get (Lnet/minecraft/world/entity/decoration/Motive;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getBackSprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; b
	getResourcesToLoad ()Ljava/util/stream/Stream; a
net/minecraft/client/resources/SkinManager fah
	PROPERTY_TEXTURES a
	insecureSkinCache e
	sessionService d
	skinsDirectory c
	textureManager b
	getInsecureSkinInformation (Lcom/mojang/authlib/GameProfile;)Ljava/util/Map; a
	registerSkins (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;Z)V a
	registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Lnet/minecraft/resources/ResourceLocation; a
	registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/resources/SkinManager$SkinTextureCallback fah$a
net/minecraft/client/resources/SplashManager fai
	RANDOM b
	SPLASHES_LOCATION a
	splashes c
	user d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/List;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getSplash ()Ljava/lang/String; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/List; a
net/minecraft/client/resources/TextureAtlasHolder faj
	prefix b
	textureAtlas a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getResourcesToLoad ()Ljava/util/stream/Stream; a
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations; a
	resolveLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/resources/language/ClientLanguage fak
	LOGGER b
	defaultRightToLeft d
	storage c
	appendFrom (Ljava/util/List;Ljava/util/Map;)V a
	getOrDefault (Ljava/lang/String;)Ljava/lang/String; a
	getVisualOrder (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/util/FormattedCharSequence; a
	has (Ljava/lang/String;)Z b
	isDefaultRightToLeft ()Z b
	loadFrom (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;)Lnet/minecraft/client/resources/language/ClientLanguage; a
net/minecraft/client/resources/language/FormattedBidiReorder fal
	reorder (Lnet/minecraft/network/chat/FormattedText;Z)Lnet/minecraft/util/FormattedCharSequence; a
	shape (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/resources/language/I18n fam
	language a
	exists (Ljava/lang/String;)Z a
	get (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; a
	setLanguage (Lnet/minecraft/locale/Language;)V a
net/minecraft/client/resources/language/LanguageInfo fan
	bidirectional d
	code a
	name c
	region b
	compareTo (Lnet/minecraft/client/resources/language/LanguageInfo;)I a
	isBidirectional ()Z a
net/minecraft/client/resources/language/LanguageManager fao
	DEFAULT_LANGUAGE c
	DEFAULT_LANGUAGE_CODE a
	LOGGER b
	currentCode e
	currentLanguage f
	languages d
	extractLanguages (Ljava/util/stream/Stream;)Ljava/util/Map; a
	getLanguage (Ljava/lang/String;)Lnet/minecraft/client/resources/language/LanguageInfo; a
	getLanguages ()Ljava/util/SortedSet; b
	getSelected ()Lnet/minecraft/client/resources/language/LanguageInfo; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	setSelected (Lnet/minecraft/client/resources/language/LanguageInfo;)V a
net/minecraft/client/resources/metadata/animation/AnimationFrame faq
	UNKNOWN_FRAME_TIME a
	index b
	time c
	getIndex ()I a
	getTime (I)I a
net/minecraft/client/resources/metadata/animation/AnimationMetadataSection far
	DEFAULT_FRAME_TIME c
	EMPTY e
	SECTION_NAME b
	SERIALIZER a
	UNKNOWN_SIZE d
	defaultFrameTime i
	frameHeight h
	frameWidth g
	frames f
	interpolatedFrames j
	calculateFrameSize (II)Lcom/mojang/datafixers/util/Pair; c
	forEachFrame (Lnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection$FrameOutput;)V a
	getDefaultFrameTime ()I a
	getFrameHeight (I)I a
	getFrameSize (II)Lcom/mojang/datafixers/util/Pair; a
	getFrameWidth (I)I b
	isDivisionInteger (II)Z b
	isInterpolatedFrames ()Z b
net/minecraft/client/resources/metadata/animation/AnimationMetadataSection$FrameOutput far$a
net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer fas
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection; b
	getFrame (ILcom/google/gson/JsonElement;)Lnet/minecraft/client/resources/metadata/animation/AnimationFrame; a
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection fat
	SECTION_NAME b
	SERIALIZER a
	hat c
	getHat ()Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat fat$a
	$VALUES f
	BY_NAME d
	FULL c
	NONE a
	PARTIAL b
	name e
	$values ()[Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; b
	getByName (Ljava/lang/String;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
	getName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/animation/VillagerMetadataSectionSerializer fau
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/language/LanguageMetadataSection faw
	DEFAULT_BIDIRECTIONAL b
	SERIALIZER a
	languages c
	getLanguages ()Ljava/util/Collection; a
net/minecraft/client/resources/metadata/language/LanguageMetadataSectionSerializer fax
	MAX_LANGUAGE_LENGTH a
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/language/LanguageMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/texture/TextureMetadataSection fba
	DEFAULT_BLUR b
	DEFAULT_CLAMP c
	SERIALIZER a
	blur d
	clamp e
	isBlur ()Z a
	isClamp ()Z b
net/minecraft/client/resources/metadata/texture/TextureMetadataSectionSerializer fbb
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/texture/TextureMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/model/BakedModel fbd
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/BlockModelRotation fbe
	$VALUES v
	BY_INDEX r
	DEGREES q
	X0_Y0 a
	X0_Y180 c
	X0_Y270 d
	X0_Y90 b
	X180_Y0 i
	X180_Y180 k
	X180_Y270 l
	X180_Y90 j
	X270_Y0 m
	X270_Y180 o
	X270_Y270 p
	X270_Y90 n
	X90_Y0 e
	X90_Y180 g
	X90_Y270 h
	X90_Y90 f
	actualRotation t
	index u
	transformation s
	$values ()[Lnet/minecraft/client/resources/model/BlockModelRotation; d
	actualRotation ()Lcom/mojang/math/OctahedralGroup; a
	by (II)Lnet/minecraft/client/resources/model/BlockModelRotation; a
	getIndex (II)I b
	getRotation ()Lcom/mojang/math/Transformation; b
net/minecraft/client/resources/model/BuiltInModel fbf
	itemTransforms a
	overrides b
	particleTexture c
	usesBlockLight d
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/Material fbg
	atlasLocation a
	renderType c
	texture b
	atlasLocation ()Lnet/minecraft/resources/ResourceLocation; a
	buffer (Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/util/function/Function;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	buffer (Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/util/function/Function;Z)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	renderType (Ljava/util/function/Function;)Lnet/minecraft/client/renderer/RenderType; a
	sprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; c
	texture ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/resources/model/ModelBakery fbh
	BANNER_BASE f
	BLOCK_ENTITY_MARKER q
	BREAKING_LOCATIONS k
	BUILTIN_BLOCK_ENTITY w
	BUILTIN_MODELS z
	BUILTIN_SLASH u
	BUILTIN_SLASH_GENERATED v
	COMMA_SPLITTER A
	DESTROY_STAGES j
	DESTROY_STAGE_COUNT i
	DESTROY_TYPES l
	EQUAL_SPLITTER B
	FIRE_0 a
	FIRE_1 b
	GENERATION_MARKER p
	INVISIBLE_MODEL_GROUP s
	ITEM_FRAME_FAKE_DEFINITION C
	ITEM_MODEL_GENERATOR D
	LAVA_FLOW c
	LOGGER t
	MISSING_MODEL_LOCATION n
	MISSING_MODEL_LOCATION_STRING y
	MISSING_MODEL_MESH o
	MISSING_MODEL_NAME x
	NO_PATTERN_SHIELD h
	SHIELD_BASE g
	SINGLETON_MODEL_GROUP m
	STATIC_DEFINITIONS E
	UNREFERENCED_TEXTURES r
	WATER_FLOW d
	WATER_OVERLAY e
	atlasPreparations O
	atlasSet G
	bakedCache L
	bakedTopLevelModels N
	blockColors H
	context J
	loadingStack I
	modelGroups Q
	nextModelGroup P
	resourceManager F
	topLevelModels M
	unbakedCache K
	bake (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/ModelState;)Lnet/minecraft/client/resources/model/BakedModel; a
	cacheAndQueueDependencies (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/UnbakedModel;)V a
	getBakedTopLevelModels ()Ljava/util/Map; a
	getModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/UnbakedModel; a
	getModelGroups ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	getValueHelper (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Ljava/lang/Comparable; a
	loadBlockModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockModel; c
	loadModel (Lnet/minecraft/resources/ResourceLocation;)V b
	loadTopLevel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)V a
	predicate (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/lang/String;)Ljava/util/function/Predicate; a
	registerModelGroup (Ljava/lang/Iterable;)V a
	uploadTextures (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/texture/AtlasSet; a
net/minecraft/client/resources/model/ModelBakery$BlockStateDefinitionException fbh$a
net/minecraft/client/resources/model/ModelBakery$ModelGroupKey fbh$b
	coloringValues b
	models a
	create (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/renderer/block/model/multipart/MultiPart;Ljava/util/Collection;)Lnet/minecraft/client/resources/model/ModelBakery$ModelGroupKey; a
	create (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/UnbakedModel;Ljava/util/Collection;)Lnet/minecraft/client/resources/model/ModelBakery$ModelGroupKey; a
	getColoringValues (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Collection;)Ljava/util/List; a
net/minecraft/client/resources/model/ModelManager fbi
	atlases b
	bakedRegistry a
	blockColors e
	blockModelShaper c
	maxMipmapLevels f
	missingModel g
	modelGroups h
	textureManager d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getAtlas (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	getBlockModelShaper ()Lnet/minecraft/client/renderer/block/BlockModelShaper; b
	getMissingModel ()Lnet/minecraft/client/resources/model/BakedModel; a
	getModel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/resources/model/ModelBakery; a
	requiresRender (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateMaxMipLevel (I)V a
net/minecraft/client/resources/model/ModelResourceLocation fbj
	VARIANT_SEPARATOR g
	variant h
	decompose (Ljava/lang/String;)[Ljava/lang/String; c
	getVariant ()Ljava/lang/String; d
net/minecraft/client/resources/model/ModelState fbk
	getRotation ()Lcom/mojang/math/Transformation; b
	isUvLocked ()Z c
net/minecraft/client/resources/model/MultiPartBakedModel fbl
	hasAmbientOcclusion a
	isGui3d b
	overrides f
	particleIcon d
	selectorCache h
	selectors g
	transforms e
	usesBlockLight c
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/MultiPartBakedModel$Builder fbl$a
	selectors a
	add (Ljava/util/function/Predicate;Lnet/minecraft/client/resources/model/BakedModel;)V a
	build ()Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/resources/model/SimpleBakedModel fbm
	culledFaces b
	hasAmbientOcclusion c
	isGui3d d
	overrides h
	particleIcon f
	transforms g
	unculledFaces a
	usesBlockLight e
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/SimpleBakedModel$Builder fbm$a
	culledFaces b
	hasAmbientOcclusion d
	isGui3d g
	overrides c
	particleIcon e
	transforms h
	unculledFaces a
	usesBlockLight f
	addCulledFace (Lnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BakedQuad;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	addUnculledFace (Lnet/minecraft/client/renderer/block/model/BakedQuad;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	build ()Lnet/minecraft/client/resources/model/BakedModel; b
	item ()Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	particle (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
net/minecraft/client/resources/model/UnbakedModel fbn
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
net/minecraft/client/resources/model/WeightedBakedModel fbo
	list b
	totalWeight a
	wrapped c
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/WeightedBakedModel$Builder fbo$a
	list a
	add (Lnet/minecraft/client/resources/model/BakedModel;I)Lnet/minecraft/client/resources/model/WeightedBakedModel$Builder; a
	build ()Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/resources/sounds/AbstractSoundInstance fbr
	attenuation k
	delay j
	location c
	looping i
	pitch e
	relative l
	sound a
	source b
	volume d
	x f
	y g
	z h
	getAttenuation ()Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; k
	getDelay ()I e
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPitch ()F g
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F f
	getX ()D h
	getY ()D i
	getZ ()D j
	isLooping ()Z d
	isRelative ()Z l
	resolve (Lnet/minecraft/client/sounds/SoundManager;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
net/minecraft/client/resources/sounds/AbstractTickableSoundInstance fbs
	stopped m
	isStopped ()Z m
	stop ()V n
net/minecraft/client/resources/sounds/AmbientSoundHandler fbt
	tick ()V a
net/minecraft/client/resources/sounds/BeeAggressiveSoundInstance fbu
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	shouldSwitchSounds ()Z p
net/minecraft/client/resources/sounds/BeeFlyingSoundInstance fbv
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	shouldSwitchSounds ()Z p
net/minecraft/client/resources/sounds/BeeSoundInstance fbw
	PITCH_MIN p
	VOLUME_MAX o
	VOLUME_MIN n
	bee m
	hasSwitched q
	canPlaySound ()Z s
	canStartSilent ()Z r
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	getMaxPitch ()F u
	getMinPitch ()F t
	shouldSwitchSounds ()Z p
	tick ()V q
net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler fbx
	LOOP_SOUND_CROSS_FADE_TIME a
	SKY_MOOD_RECOVERY_RATE b
	additionsSettings i
	biomeManager e
	loopSounds g
	moodSettings h
	moodiness j
	player c
	previousBiome k
	random f
	soundManager d
	getMoodiness ()F b
	tick ()V a
net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler$LoopSoundInstance fbx$a
	fade n
	fadeDirection m
	fadeIn ()V p
	fadeOut ()V o
	tick ()V q
net/minecraft/client/resources/sounds/BubbleColumnAmbientSoundHandler fby
	firstTick c
	player a
	wasInBubbleColumn b
	tick ()V a
net/minecraft/client/resources/sounds/ElytraOnPlayerSoundInstance fbz
	DELAY m
	player n
	time o
	tick ()V q
net/minecraft/client/resources/sounds/EntityBoundSoundInstance fca
	entity m
	canPlaySound ()Z s
	tick ()V q
net/minecraft/client/resources/sounds/GuardianAttackSoundInstance fcb
	PITCH_MIN o
	PITCH_SCALE p
	VOLUME_MIN m
	VOLUME_SCALE n
	guardian q
	canPlaySound ()Z s
	tick ()V q
net/minecraft/client/resources/sounds/MinecartSoundInstance fcc
	PITCH_DELTA q
	PITCH_MAX p
	PITCH_MIN o
	VOLUME_MAX n
	VOLUME_MIN m
	minecart r
	pitch s
	canPlaySound ()Z s
	canStartSilent ()Z r
	tick ()V q
net/minecraft/client/resources/sounds/RidingMinecartSoundInstance fcd
	VOLUME_MAX n
	VOLUME_MIN m
	minecart p
	player o
	underwaterSound q
	canPlaySound ()Z s
	canStartSilent ()Z r
	tick ()V q
net/minecraft/client/resources/sounds/SimpleSoundInstance fce
	forAmbientAddition (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forAmbientMood (Lnet/minecraft/sounds/SoundEvent;DDD)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forLocalAmbience (Lnet/minecraft/sounds/SoundEvent;FF)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forMusic (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forRecord (Lnet/minecraft/sounds/SoundEvent;DDD)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/sounds/SoundEvent;F)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/sounds/SoundEvent;FF)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
net/minecraft/client/resources/sounds/Sound fcf
	attenuationDistance h
	location a
	pitch c
	preload g
	stream f
	type e
	volume b
	weight d
	getAttenuationDistance ()I j
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPath ()Lnet/minecraft/resources/ResourceLocation; b
	getPitch ()F d
	getSound ()Ljava/lang/Object; k
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; f
	getType ()Lnet/minecraft/client/resources/sounds/Sound$Type; g
	getVolume ()F c
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
	shouldPreload ()Z i
	shouldStream ()Z h
net/minecraft/client/resources/sounds/Sound$Type fcf$a
	$VALUES d
	FILE a
	SOUND_EVENT b
	name c
	$values ()[Lnet/minecraft/client/resources/sounds/Sound$Type; a
	getByName (Ljava/lang/String;)Lnet/minecraft/client/resources/sounds/Sound$Type; a
net/minecraft/client/resources/sounds/SoundEventRegistration fcg
	replace b
	sounds a
	subtitle c
	getSounds ()Ljava/util/List; a
	getSubtitle ()Ljava/lang/String; c
	isReplace ()Z b
net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer fch
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/resources/sounds/SoundEventRegistration; a
	getSound (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/sounds/Sound; b
	getSounds (Lcom/google/gson/JsonObject;)Ljava/util/List; a
	getType (Lcom/google/gson/JsonObject;Lnet/minecraft/client/resources/sounds/Sound$Type;)Lnet/minecraft/client/resources/sounds/Sound$Type; a
net/minecraft/client/resources/sounds/SoundInstance fci
	canPlaySound ()Z s
	canStartSilent ()Z r
	getAttenuation ()Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; k
	getDelay ()I e
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPitch ()F g
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F f
	getX ()D h
	getY ()D i
	getZ ()D j
	isLooping ()Z d
	isRelative ()Z l
	resolve (Lnet/minecraft/client/sounds/SoundManager;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
net/minecraft/client/resources/sounds/SoundInstance$Attenuation fci$a
	$VALUES c
	LINEAR b
	NONE a
	$values ()[Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; a
net/minecraft/client/resources/sounds/TickableSoundInstance fcj
	isStopped ()Z m
	tick ()V q
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler fck
	CHANCE_PER_TICK a
	MINIMUM_TICK_DELAY d
	RARE_CHANCE_PER_TICK b
	ULTRA_RARE_CHANCE_PER_TICK c
	player e
	soundManager f
	tickDelay g
	tick ()V a
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances fcl
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$SubSound fcl$a
	player m
	tick ()V q
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance fcl$b
	FADE_DURATION m
	fade o
	player n
	tick ()V q
net/minecraft/client/searchtree/MutableSearchTree fcn
	add (Ljava/lang/Object;)V a
	clear ()V a
	refresh ()V b
net/minecraft/client/searchtree/ReloadableIdSearchTree fco
	contents d
	idGetter c
	namespaceTree a
	orderT e
	pathTree b
	add (Ljava/lang/Object;)V a
	clear ()V a
	comparePosition (Ljava/lang/Object;Ljava/lang/Object;)I a
	index (Ljava/lang/Object;)V b
	refresh ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/ReloadableIdSearchTree$IntersectionIterator fco$a
	firstIterator a
	orderT c
	secondIterator b
net/minecraft/client/searchtree/ReloadableSearchTree fcp
	filler d
	tree c
	index (Ljava/lang/Object;)V b
	refresh ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/ReloadableSearchTree$MergingUniqueIterator fcp$a
	firstIterator a
	orderT c
	secondIterator b
net/minecraft/client/searchtree/SearchRegistry fcq
	CREATIVE_NAMES a
	CREATIVE_TAGS b
	RECIPE_COLLECTIONS c
	searchTrees d
	getTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/MutableSearchTree; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	register (Lnet/minecraft/client/searchtree/SearchRegistry$Key;Lnet/minecraft/client/searchtree/MutableSearchTree;)V a
net/minecraft/client/searchtree/SearchRegistry$Key fcq$a
net/minecraft/client/searchtree/SearchTree fcr
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/SuffixArray fcs
	DEBUG_ARRAY c
	DEBUG_COMPARISONS b
	END_OF_DATA f
	END_OF_TEXT_MARKER e
	LOGGER d
	chars g
	list a
	maxStringLength k
	offsets j
	suffixToT i
	wordStarts h
	add (Ljava/lang/Object;Ljava/lang/String;)V a
	compare (Ljava/lang/String;I)I a
	generate ()V a
	getString (I)Ljava/lang/String; a
	print ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/server/IntegratedPlayerList fcu
	playerData a
	canPlayerLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	getServer ()Lnet/minecraft/client/server/IntegratedServer; b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getSingleplayerData ()Lnet/minecraft/nbt/CompoundTag; r
	save (Lnet/minecraft/server/level/ServerPlayer;)V b
net/minecraft/client/server/IntegratedServer fcv
	LOGGER r
	MIN_SIM_DISTANCE s
	lanPinger x
	minecraft t
	paused u
	previousSimulationDistance z
	publishedGameType w
	publishedPort v
	uuid y
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	forceSynchronousWrites ()Z aS
	getForcedGameType ()Lnet/minecraft/world/level/GameType; aX
	getFunctionCompilationLevel ()I i
	getModdedStatus ()Lnet/minecraft/util/ModCheck; K
	getOperatorUserPermissionLevel ()I h
	getPort ()I M
	getRateLimitPacketsPerSecond ()I l
	getScaledTrackingDistance (I)I b
	getServerDirectory ()Ljava/io/File; A
	halt (Z)V a
	initServer ()Z e
	isCommandBlockEnabled ()Z n
	isDedicatedServer ()Z k
	isEpollEnabled ()Z m
	isPublished ()Z o
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	setDefaultGameType (Lnet/minecraft/world/level/GameType;)V a
	setUUID (Ljava/util/UUID;)V a
	shouldInformAdmins ()Z F_
	shouldRconBroadcast ()Z j
	stopServer ()V t
	tickPaused ()V a
	tickServer (Ljava/util/function/BooleanSupplier;)V a
net/minecraft/client/server/LanServer fcw
	address b
	motd a
	pingTime c
	getAddress ()Ljava/lang/String; b
	getMotd ()Ljava/lang/String; a
	updatePingTime ()V c
net/minecraft/client/server/LanServerDetection fcx
	LOGGER b
	UNIQUE_THREAD_ID a
net/minecraft/client/server/LanServerDetection$LanServerDetector fcx$a
	pingGroup b
	serverList a
	socket c
net/minecraft/client/server/LanServerDetection$LanServerList fcx$b
	isDirty b
	servers a
	addServer (Ljava/lang/String;Ljava/net/InetAddress;)V a
	getServers ()Ljava/util/List; c
	isDirty ()Z a
	markClean ()V b
net/minecraft/client/server/LanServerPinger fcy
	LOGGER d
	MULTICAST_GROUP a
	PING_INTERVAL e
	PING_PORT b
	UNIQUE_THREAD_ID c
	isRunning h
	motd f
	serverAddress i
	socket g
	createPingString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	parseAddress (Ljava/lang/String;)Ljava/lang/String; b
	parseMotd (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/sounds/AudioStream fda
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
net/minecraft/client/sounds/ChannelAccess fdb
	channels a
	executor c
	library b
	clear ()V b
	createHandle (Lcom/mojang/blaze3d/audio/Library$Pool;)Ljava/util/concurrent/CompletableFuture; a
	executeOnChannels (Ljava/util/function/Consumer;)V a
	scheduleTick ()V a
net/minecraft/client/sounds/ChannelAccess$ChannelHandle fdb$a
	channel b
	stopped c
	execute (Ljava/util/function/Consumer;)V a
	isStopped ()Z a
	release ()V b
net/minecraft/client/sounds/LoopingAudioStream fdc
	bufferedInputStream c
	provider a
	stream b
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
net/minecraft/client/sounds/LoopingAudioStream$AudioStreamProvider fdc$a
net/minecraft/client/sounds/LoopingAudioStream$NoCloseBuffer fdc$b
net/minecraft/client/sounds/MusicManager fdd
	STARTING_DELAY a
	currentMusic d
	minecraft c
	nextSongDelay e
	random b
	isPlayingMusic (Lnet/minecraft/sounds/Music;)Z b
	startPlaying (Lnet/minecraft/sounds/Music;)V a
	stopPlaying ()V b
	tick ()V a
net/minecraft/client/sounds/SoundBufferLibrary fde
	cache b
	resourceManager a
	clear ()V a
	getCompleteBuffer (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/concurrent/CompletableFuture; a
	getStream (Lnet/minecraft/resources/ResourceLocation;Z)Ljava/util/concurrent/CompletableFuture; a
	preload (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/sounds/SoundEngine fdf
	DEFAULT_DEVICE_CHECK_INTERVAL_MS l
	LOGGER e
	MARKER d
	MIN_SOURCE_LIFETIME j
	MISSING_SOUND a
	ONLY_WARN_ONCE k
	OPEN_AL_SOFT_PREFIX b
	OPEN_AL_SOFT_PREFIX_LENGTH c
	PITCH_MAX g
	PITCH_MIN f
	VOLUME_MAX i
	VOLUME_MIN h
	channelAccess t
	devicePoolState w
	executor s
	instanceBySource y
	instanceToChannel x
	lastDeviceCheckTime v
	library p
	listener q
	listeners C
	loaded o
	options n
	preloadQueue E
	queuedSounds A
	queuedTickableSounds D
	soundBuffers r
	soundDeleteTime B
	soundManager m
	tickCount u
	tickingSounds z
	addEventListener (Lnet/minecraft/client/sounds/SoundEventListener;)V a
	calculatePitch (Lnet/minecraft/client/resources/sounds/SoundInstance;)F g
	calculateVolume (Lnet/minecraft/client/resources/sounds/SoundInstance;)F h
	destroy ()V b
	getAvailableSoundDevices ()Ljava/util/List; g
	getDebugString ()Ljava/lang/String; f
	getVolume (Lnet/minecraft/sounds/SoundSource;)F a
	isActive (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z b
	loadLibrary ()V h
	pause ()V d
	play (Lnet/minecraft/client/resources/sounds/SoundInstance;)V c
	playDelayed (Lnet/minecraft/client/resources/sounds/SoundInstance;I)V a
	queueTickingSound (Lnet/minecraft/client/resources/sounds/TickableSoundInstance;)V a
	reload ()V a
	removeEventListener (Lnet/minecraft/client/sounds/SoundEventListener;)V b
	requestPreload (Lnet/minecraft/client/resources/sounds/Sound;)V a
	requiresManualLooping (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z d
	resume ()V e
	shouldChangeDevice ()Z i
	shouldLoopAutomatically (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z f
	shouldLoopManually (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z e
	stop (Lnet/minecraft/client/resources/sounds/SoundInstance;)V a
	stop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;)V a
	stopAll ()V c
	tick (Z)V a
	tickNonPaused ()V j
	updateCategoryVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	updateSource (Lnet/minecraft/client/Camera;)V a
net/minecraft/client/sounds/SoundEngine$DeviceCheckState fdf$a
	$VALUES d
	CHANGE_DETECTED b
	NO_CHANGE c
	ONGOING a
	$values ()[Lnet/minecraft/client/sounds/SoundEngine$DeviceCheckState; a
net/minecraft/client/sounds/SoundEngineExecutor fdg
	shutdown b
	thread a
	createThread ()Ljava/lang/Thread; b
	flush ()V a
	getRunningThread ()Ljava/lang/Thread; at
	run ()V c
	shouldRun (Ljava/lang/Runnable;)Z d
	waitForTasks ()V bq
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/client/sounds/SoundEventListener fdh
	onPlaySound (Lnet/minecraft/client/resources/sounds/SoundInstance;Lnet/minecraft/client/sounds/WeighedSoundEvents;)V a
net/minecraft/client/sounds/SoundManager fdi
	EMPTY_SOUND a
	GSON d
	LOGGER b
	SOUNDS_PATH c
	SOUND_EVENT_REGISTRATION_TYPE e
	registry f
	soundEngine g
	addListener (Lnet/minecraft/client/sounds/SoundEventListener;)V a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/sounds/SoundManager$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	destroy ()V f
	getAvailableSoundDevices ()Ljava/util/List; a
	getAvailableSounds ()Ljava/util/Collection; b
	getDebugString ()Ljava/lang/String; h
	getSoundEvent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
	isActive (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z c
	pause ()V d
	play (Lnet/minecraft/client/resources/sounds/SoundInstance;)V a
	playDelayed (Lnet/minecraft/client/resources/sounds/SoundInstance;I)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/sounds/SoundManager$Preparations; a
	queueTickingSound (Lnet/minecraft/client/resources/sounds/TickableSoundInstance;)V a
	reload ()V i
	removeListener (Lnet/minecraft/client/sounds/SoundEventListener;)V b
	resume ()V g
	stop ()V e
	stop (Lnet/minecraft/client/resources/sounds/SoundInstance;)V b
	stop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;)V a
	tick (Z)V a
	updateSource (Lnet/minecraft/client/Camera;)V a
	updateSourceVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	validateSoundResource (Lnet/minecraft/client/resources/sounds/Sound;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/ResourceManager;)Z a
net/minecraft/client/sounds/SoundManager$Preparations fdi$a
	registry a
	apply (Ljava/util/Map;Lnet/minecraft/client/sounds/SoundEngine;)V a
	handleRegistration (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/sounds/SoundEventRegistration;Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/sounds/WeighedSoundEvents fdj
	list a
	location c
	random b
	subtitle d
	addSound (Lnet/minecraft/client/sounds/Weighted;)V a
	getResourceLocation ()Lnet/minecraft/resources/ResourceLocation; b
	getSound ()Ljava/lang/Object; k
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; a
	getSubtitle ()Lnet/minecraft/network/chat/Component; c
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
net/minecraft/client/sounds/Weighted fdk
	getSound ()Ljava/lang/Object; k
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
net/minecraft/client/tutorial/BundleTutorial fdm
	options b
	toast c
	tutorial a
	clearToast ()V b
	onInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	showToast ()V a
net/minecraft/client/tutorial/CompletedTutorialStepInstance fdn
net/minecraft/client/tutorial/CraftPlanksTutorialStep fdo
	CRAFT_DESCRIPTION c
	CRAFT_TITLE b
	HINT_DELAY a
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	hasCraftedPlanksPreviously (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/tags/Tag;)Z a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	tick ()V a
net/minecraft/client/tutorial/FindTreeTutorialStepInstance fdp
	DESCRIPTION d
	HINT_DELAY a
	TITLE c
	TREE_BLOCKS b
	timeWaiting g
	toast f
	tutorial e
	clear ()V b
	hasPunchedTreesPreviously (Lnet/minecraft/client/player/LocalPlayer;)Z a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	tick ()V a
net/minecraft/client/tutorial/MovementTutorialStepInstance fdq
	INCOMPLETE e
	LOOK_DESCRIPTION i
	LOOK_HINT_DELAY d
	LOOK_TITLE h
	MINIMUM_TIME_LOOKED b
	MINIMUM_TIME_MOVED a
	MOVE_DESCRIPTION g
	MOVE_HINT_DELAY c
	MOVE_TITLE f
	lookCompleted s
	lookToast l
	moveCompleted r
	moveToast k
	moved p
	timeLooked o
	timeMoved n
	timeWaiting m
	turned q
	tutorial j
	clear ()V b
	onInput (Lnet/minecraft/client/player/Input;)V a
	onMouse (DD)V a
	tick ()V a
net/minecraft/client/tutorial/OpenInventoryTutorialStep fdr
	DESCRIPTION c
	HINT_DELAY a
	TITLE b
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	onOpenInventory ()V c
	tick ()V a
net/minecraft/client/tutorial/PunchTreeTutorialStepInstance fds
	DESCRIPTION c
	HINT_DELAY a
	TITLE b
	resetCount g
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	tick ()V a
net/minecraft/client/tutorial/Tutorial fdt
	bundleTutorial d
	instance b
	minecraft a
	timedToasts c
	addTimedToast (Lnet/minecraft/client/gui/components/toasts/TutorialToast;I)V a
	getMinecraft ()Lnet/minecraft/client/Minecraft; e
	isSurvival ()Z f
	key (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onInput (Lnet/minecraft/client/player/Input;)V a
	onInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	onMouse (DD)V a
	onOpenInventory ()V a
	removeTimedToast (Lnet/minecraft/client/gui/components/toasts/TutorialToast;)V a
	setStep (Lnet/minecraft/client/tutorial/TutorialSteps;)V a
	start ()V c
	stop ()V b
	tick ()V d
net/minecraft/client/tutorial/Tutorial$TimedToast fdt$a
	durationTicks b
	progress c
	toast a
	updateProgress ()Z a
net/minecraft/client/tutorial/TutorialStepInstance fdu
	clear ()V b
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onInput (Lnet/minecraft/client/player/Input;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	onMouse (DD)V a
	onOpenInventory ()V c
	tick ()V a
net/minecraft/client/tutorial/TutorialSteps fdv
	$VALUES i
	CRAFT_PLANKS e
	FIND_TREE b
	MOVEMENT a
	NONE f
	OPEN_INVENTORY d
	PUNCH_TREE c
	constructor h
	name g
	$values ()[Lnet/minecraft/client/tutorial/TutorialSteps; b
	create (Lnet/minecraft/client/tutorial/Tutorial;)Lnet/minecraft/client/tutorial/TutorialStepInstance; a
	getByName (Ljava/lang/String;)Lnet/minecraft/client/tutorial/TutorialSteps; a
	getName ()Ljava/lang/String; a
net/minecraft/commands/BrigadierExceptions net/minecraft/commands/CommandExceptionProvider
	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR z
	DISPATCHER_PARSE_EXCEPTION A
	DISPATCHER_UNKNOWN_ARGUMENT y
	DISPATCHER_UNKNOWN_COMMAND x
	DOUBLE_TOO_BIG b
	DOUBLE_TOO_SMALL a
	FLOAT_TOO_BIG d
	FLOAT_TOO_SMALL c
	INTEGER_TOO_BIG f
	INTEGER_TOO_SMALL e
	LITERAL_INCORRECT i
	LONG_TOO_BIG h
	LONG_TOO_SMALL g
	READER_EXPECTED_BOOL v
	READER_EXPECTED_DOUBLE s
	READER_EXPECTED_END_OF_QUOTE k
	READER_EXPECTED_FLOAT u
	READER_EXPECTED_INT o
	READER_EXPECTED_LONG q
	READER_EXPECTED_START_OF_QUOTE j
	READER_EXPECTED_SYMBOL w
	READER_INVALID_BOOL m
	READER_INVALID_DOUBLE r
	READER_INVALID_ESCAPE l
	READER_INVALID_FLOAT t
	READER_INVALID_INT n
	READER_INVALID_LONG p
net/minecraft/commands/CommandFunction net/minecraft/commands/CustomFunction
	entries a
	id b
	fromLines (Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;)Lnet/minecraft/commands/CommandFunction; a
	getEntries ()[Lnet/minecraft/commands/CommandFunction$Entry; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/CommandFunction$CacheableFunction dj$a
	NONE a
	function d
	id b
	resolved c
	get (Lnet/minecraft/server/ServerFunctionManager;)Ljava/util/Optional; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/CommandFunction$CommandEntry dj$b
	parse a
	execute (Lnet/minecraft/server/ServerFunctionManager;Lnet/minecraft/commands/CommandSourceStack;)I a
net/minecraft/commands/CommandFunction$Entry dj$c
net/minecraft/commands/CommandFunction$FunctionEntry dj$d
	function a
net/minecraft/commands/CommandRuntimeException net/minecraft/commands/CommandException
	message a
	getComponent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/CommandSource net/minecraft/commands/ICommandListener
	NULL a
	acceptsFailure ()Z j_
	acceptsSuccess ()Z i_
	alwaysAccepts ()Z d_
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	shouldInformAdmins ()Z F_
net/minecraft/commands/CommandSourceStack net/minecraft/commands/CommandListenerWrapper
	ERROR_NOT_ENTITY b
	ERROR_NOT_PLAYER a
	anchor m
	consumer l
	displayName h
	entity k
	level e
	permissionLevel f
	rotation n
	server i
	silent j
	source c
	textName g
	worldPosition d
	broadcastToAdmins (Lnet/minecraft/network/chat/Component;)V b
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	facing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)Lnet/minecraft/commands/CommandSourceStack; a
	facing (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/commands/CommandSourceStack; b
	getAllTeams ()Ljava/util/Collection; m
	getAnchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; k
	getAvailableSoundEvents ()Ljava/util/Collection; n
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getEntity ()Lnet/minecraft/world/entity/Entity; f
	getEntityOrException ()Lnet/minecraft/world/entity/Entity; g
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getOnlinePlayerNames ()Ljava/util/Collection; l
	getPlayerOrException ()Lnet/minecraft/server/level/ServerPlayer; h
	getPosition ()Lnet/minecraft/world/phys/Vec3; d
	getRecipeNames ()Ljava/util/stream/Stream; o
	getRotation ()Lnet/minecraft/world/phys/Vec2; i
	getServer ()Lnet/minecraft/server/MinecraftServer; j
	getTextName ()Ljava/lang/String; c
	hasPermission (I)Z c
	levels ()Ljava/util/Set; p
	onCommandComplete (Lcom/mojang/brigadier/context/CommandContext;ZI)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; q
	sendFailure (Lnet/minecraft/network/chat/Component;)V a
	sendSuccess (Lnet/minecraft/network/chat/Component;Z)V a
	withAnchor (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)Lnet/minecraft/commands/CommandSourceStack; a
	withCallback (Lcom/mojang/brigadier/ResultConsumer;)Lnet/minecraft/commands/CommandSourceStack; a
	withCallback (Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Lnet/minecraft/commands/CommandSourceStack; a
	withEntity (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/commands/CommandSourceStack; a
	withLevel (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/commands/CommandSourceStack; a
	withMaximumPermission (I)Lnet/minecraft/commands/CommandSourceStack; b
	withPermission (I)Lnet/minecraft/commands/CommandSourceStack; a
	withPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/commands/CommandSourceStack; a
	withRotation (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/commands/CommandSourceStack; a
	withSource (Lnet/minecraft/commands/CommandSource;)Lnet/minecraft/commands/CommandSourceStack; a
	withSuppressedOutput ()Lnet/minecraft/commands/CommandSourceStack; a
net/minecraft/commands/Commands net/minecraft/commands/CommandDispatcher
	LEVEL_ADMINS d
	LEVEL_ALL a
	LEVEL_GAMEMASTERS c
	LEVEL_MODERATORS b
	LEVEL_OWNERS e
	LOGGER f
	dispatcher g
	argument (Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; a
	createValidator (Lnet/minecraft/commands/Commands$ParseFunction;)Ljava/util/function/Predicate; a
	fillUsableCommands (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Map;)V a
	getDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; a
	getParseException (Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; a
	literal (Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	performCommand (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	sendCommands (Lnet/minecraft/server/level/ServerPlayer;)V a
	validate ()V b
net/minecraft/commands/Commands$CommandSelection net/minecraft/commands/CommandDispatcher$ServerType
	$VALUES f
	ALL a
	DEDICATED b
	INTEGRATED c
	includeDedicated e
	includeIntegrated d
	$values ()[Lnet/minecraft/commands/Commands$CommandSelection; a
net/minecraft/commands/Commands$ParseFunction dn$b
net/minecraft/commands/SharedSuggestionProvider net/minecraft/commands/ICompletionProvider
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	filterResources (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V a
	filterResources (Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V a
	getAbsoluteCoordinates ()Ljava/util/Collection; t
	getAllTeams ()Ljava/util/Collection; m
	getAvailableSoundEvents ()Ljava/util/Collection; n
	getOnlinePlayerNames ()Ljava/util/Collection; l
	getRecipeNames ()Ljava/util/stream/Stream; o
	getRelevantCoordinates ()Ljava/util/Collection; s
	getSelectedEntities ()Ljava/util/Collection; r
	hasPermission (I)Z c
	levels ()Ljava/util/Set; p
	matchesSubStr (Ljava/lang/String;Ljava/lang/String;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; q
	suggest (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggest (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	suggest (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggest ([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggest2DCoordinates (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; b
	suggestCoordinates (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/SharedSuggestionProvider$TextCoordinates dp$a
	DEFAULT_GLOBAL b
	DEFAULT_LOCAL a
	x c
	y d
	z e
net/minecraft/commands/arguments/AngleArgument net/minecraft/commands/arguments/ArgumentAngle
	ERROR_INVALID_ANGLE b
	ERROR_NOT_COMPLETE a
	EXAMPLES c
	angle ()Lnet/minecraft/commands/arguments/AngleArgument; a
	getAngle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/AngleArgument$SingleAngle; a
net/minecraft/commands/arguments/AngleArgument$SingleAngle dq$a
	angle a
	isRelative b
	getAngle (Lnet/minecraft/commands/CommandSourceStack;)F a
net/minecraft/commands/arguments/ColorArgument net/minecraft/commands/arguments/ArgumentChatFormat
	ERROR_INVALID_VALUE a
	EXAMPLES b
	color ()Lnet/minecraft/commands/arguments/ColorArgument; a
	getColor (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/ChatFormatting; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/ChatFormatting; a
net/minecraft/commands/arguments/ComponentArgument net/minecraft/commands/arguments/ArgumentChatComponent
	ERROR_INVALID_JSON a
	EXAMPLES b
	getComponent (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/Component; a
	textComponent ()Lnet/minecraft/commands/arguments/ComponentArgument; a
net/minecraft/commands/arguments/CompoundTagArgument net/minecraft/commands/arguments/ArgumentNBTTag
	EXAMPLES a
	compoundTag ()Lnet/minecraft/commands/arguments/CompoundTagArgument; a
	getCompoundTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/commands/arguments/DimensionArgument net/minecraft/commands/arguments/ArgumentDimension
	ERROR_INVALID_VALUE b
	EXAMPLES a
	dimension ()Lnet/minecraft/commands/arguments/DimensionArgument; a
	getDimension (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ServerLevel; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/EntityAnchorArgument net/minecraft/commands/arguments/ArgumentAnchor
	ERROR_INVALID b
	EXAMPLES a
	anchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument; a
	getAnchor (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
net/minecraft/commands/arguments/EntityAnchorArgument$Anchor net/minecraft/commands/arguments/ArgumentAnchor$Anchor
	$VALUES f
	BY_NAME c
	EYES b
	FEET a
	name d
	transform e
	$values ()[Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
	apply (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	apply (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; a
	getByName (Ljava/lang/String;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
net/minecraft/commands/arguments/EntityArgument net/minecraft/commands/arguments/ArgumentEntity
	ERROR_NOT_SINGLE_ENTITY a
	ERROR_NOT_SINGLE_PLAYER b
	ERROR_ONLY_PLAYERS_ALLOWED c
	ERROR_SELECTORS_NOT_ALLOWED f
	EXAMPLES g
	FLAG_PLAYERS_ONLY i
	FLAG_SINGLE h
	NO_ENTITIES_FOUND d
	NO_PLAYERS_FOUND e
	playersOnly k
	single j
	entities ()Lnet/minecraft/commands/arguments/EntityArgument; b
	entity ()Lnet/minecraft/commands/arguments/EntityArgument; a
	getEntities (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; b
	getEntity (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/entity/Entity; a
	getOptionalEntities (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; c
	getOptionalPlayers (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; d
	getPlayer (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer; e
	getPlayers (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; f
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	player ()Lnet/minecraft/commands/arguments/EntityArgument; c
	players ()Lnet/minecraft/commands/arguments/EntityArgument; d
net/minecraft/commands/arguments/EntityArgument$Serializer dw$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/EntityArgument; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/arguments/EntityArgument;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/EntityArgument;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/EntitySummonArgument net/minecraft/commands/arguments/ArgumentEntitySummon
	ERROR_UNKNOWN_ENTITY a
	EXAMPLES b
	getSummonableEntity (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	id ()Lnet/minecraft/commands/arguments/EntitySummonArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
	verifyCanSummon (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/GameProfileArgument net/minecraft/commands/arguments/ArgumentProfile
	ERROR_UNKNOWN_PLAYER a
	EXAMPLES b
	gameProfile ()Lnet/minecraft/commands/arguments/GameProfileArgument; a
	getGameProfiles (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/GameProfileArgument$Result; a
net/minecraft/commands/arguments/GameProfileArgument$Result dy$a
net/minecraft/commands/arguments/GameProfileArgument$SelectorResult dy$b
	selector a
net/minecraft/commands/arguments/ItemEnchantmentArgument net/minecraft/commands/arguments/ArgumentEnchantment
	ERROR_UNKNOWN_ENCHANTMENT a
	EXAMPLES b
	enchantment ()Lnet/minecraft/commands/arguments/ItemEnchantmentArgument; a
	getEnchantment (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/item/enchantment/Enchantment; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/item/enchantment/Enchantment; a
net/minecraft/commands/arguments/MessageArgument net/minecraft/commands/arguments/ArgumentChat
	EXAMPLES a
	getMessage (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	message ()Lnet/minecraft/commands/arguments/MessageArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/MessageArgument$Message; a
net/minecraft/commands/arguments/MessageArgument$Message ea$a
	parts b
	text a
	getParts ()[Lnet/minecraft/commands/arguments/MessageArgument$Part; b
	getText ()Ljava/lang/String; a
	parseText (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/MessageArgument$Message; a
	toComponent (Lnet/minecraft/commands/CommandSourceStack;Z)Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/arguments/MessageArgument$Part ea$b
	end b
	selector c
	start a
	getEnd ()I b
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; c
	getStart ()I a
	toComponent (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/arguments/MobEffectArgument net/minecraft/commands/arguments/ArgumentMobEffect
	ERROR_UNKNOWN_EFFECT a
	EXAMPLES b
	effect ()Lnet/minecraft/commands/arguments/MobEffectArgument; a
	getEffect (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/effect/MobEffect; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/commands/arguments/NbtPathArgument net/minecraft/commands/arguments/ArgumentNBTKey
	ERROR_INVALID_NODE a
	ERROR_NOTHING_FOUND b
	EXAMPLES c
	INDEX_MATCH_END e
	INDEX_MATCH_START d
	KEY_MATCH_END g
	KEY_MATCH_START f
	QUOTED_KEY_START h
	createTagPredicate (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/function/Predicate; a
	getPath (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	isAllowedInUnquotedName (C)Z a
	nbtPath ()Lnet/minecraft/commands/arguments/NbtPathArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	parseNode (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/NbtPathArgument$Node; a
	readObjectNode (Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$Node; a
	readUnquotedName (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; b
net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode ec$a
	INSTANCE a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode ec$b
	name a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode ec$c
	index a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode ec$d
	pattern a
	predicate b
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode ec$e
	name a
	pattern b
	predicate c
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode ec$f
	predicate a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$NbtPath ec$g
	nodeToOriginalPosition b
	nodes c
	original a
	apply (Ljava/util/List;Ljava/util/function/Function;)I a
	countMatching (Lnet/minecraft/nbt/Tag;)I b
	createNotFoundException (Lnet/minecraft/commands/arguments/NbtPathArgument$Node;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; a
	get (Lnet/minecraft/nbt/Tag;)Ljava/util/List; a
	getOrCreate (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)Ljava/util/List; a
	getOrCreateParents (Lnet/minecraft/nbt/Tag;)Ljava/util/List; d
	remove (Lnet/minecraft/nbt/Tag;)I c
	set (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I b
	set (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)I a
net/minecraft/commands/arguments/NbtPathArgument$Node ec$h
	collect (Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List; a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	get (Ljava/util/List;)Ljava/util/List; a
	getOrCreate (Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtTagArgument net/minecraft/commands/arguments/ArgumentNBTBase
	EXAMPLES a
	getNbtTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	nbtTag ()Lnet/minecraft/commands/arguments/NbtTagArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/Tag; a
net/minecraft/commands/arguments/ObjectiveArgument net/minecraft/commands/arguments/ArgumentScoreboardObjective
	ERROR_OBJECTIVE_NOT_FOUND b
	ERROR_OBJECTIVE_READ_ONLY c
	EXAMPLES a
	getObjective (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; a
	getWritableObjective (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; b
	objective ()Lnet/minecraft/commands/arguments/ObjectiveArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
net/minecraft/commands/arguments/ObjectiveCriteriaArgument net/minecraft/commands/arguments/ArgumentScoreboardCriteria
	ERROR_INVALID_VALUE a
	EXAMPLES b
	criteria ()Lnet/minecraft/commands/arguments/ObjectiveCriteriaArgument; a
	getCriteria (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
	getName (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
net/minecraft/commands/arguments/OperationArgument net/minecraft/commands/arguments/ArgumentMathOperation
	ERROR_DIVIDE_BY_ZERO c
	ERROR_INVALID_OPERATION b
	EXAMPLES a
	getOperation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
	getOperation (Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
	getSimpleOperation (Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$SimpleOperation; b
	operation ()Lnet/minecraft/commands/arguments/OperationArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
net/minecraft/commands/arguments/OperationArgument$Operation eg$a
net/minecraft/commands/arguments/OperationArgument$SimpleOperation eg$b
net/minecraft/commands/arguments/ParticleArgument net/minecraft/commands/arguments/ArgumentParticle
	ERROR_UNKNOWN_PARTICLE a
	EXAMPLES b
	getParticle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/particles/ParticleOptions; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; a
	particle ()Lnet/minecraft/commands/arguments/ParticleArgument; a
	readParticle (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; b
	readParticle (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
net/minecraft/commands/arguments/RangeArgument net/minecraft/commands/arguments/ArgumentCriterionValue
	floatRange ()Lnet/minecraft/commands/arguments/RangeArgument$Floats; b
	intRange ()Lnet/minecraft/commands/arguments/RangeArgument$Ints; a
net/minecraft/commands/arguments/RangeArgument$Floats ei$a
	EXAMPLES a
	getRange (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
net/minecraft/commands/arguments/RangeArgument$Ints ei$b
	EXAMPLES a
	getRange (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
net/minecraft/commands/arguments/ResourceLocationArgument net/minecraft/commands/arguments/ArgumentMinecraftKeyRegistered
	ERROR_UNKNOWN_ADVANCEMENT b
	ERROR_UNKNOWN_ATTRIBUTE e
	ERROR_UNKNOWN_ITEM_MODIFIER f
	ERROR_UNKNOWN_PREDICATE d
	ERROR_UNKNOWN_RECIPE c
	EXAMPLES a
	getAdvancement (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; a
	getAttribute (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/entity/ai/attributes/Attribute; e
	getId (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; f
	getItemModifier (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; d
	getPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; c
	getRecipe (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/item/crafting/Recipe; b
	id ()Lnet/minecraft/commands/arguments/ResourceLocationArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/ScoreHolderArgument net/minecraft/commands/arguments/ArgumentScoreholder
	ERROR_NO_RESULTS c
	EXAMPLES b
	FLAG_MULTIPLE d
	SUGGEST_SCORE_HOLDERS a
	multiple e
	getName (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; a
	getNames (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; b
	getNames (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection; a
	getNamesWithDefaultWildcard (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/ScoreHolderArgument$Result; a
	scoreHolder ()Lnet/minecraft/commands/arguments/ScoreHolderArgument; a
	scoreHolders ()Lnet/minecraft/commands/arguments/ScoreHolderArgument; b
net/minecraft/commands/arguments/ScoreHolderArgument$Result ek$a
net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult ek$b
	selector a
net/minecraft/commands/arguments/ScoreHolderArgument$Serializer ek$c
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ScoreHolderArgument; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/arguments/ScoreHolderArgument;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ScoreHolderArgument;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/ScoreboardSlotArgument net/minecraft/commands/arguments/ArgumentScoreboardSlot
	ERROR_INVALID_VALUE a
	EXAMPLES b
	displaySlot ()Lnet/minecraft/commands/arguments/ScoreboardSlotArgument; a
	getDisplaySlot (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
net/minecraft/commands/arguments/SlotArgument net/minecraft/commands/arguments/ArgumentInventorySlot
	ERROR_UNKNOWN_SLOT b
	EXAMPLES a
	SLOTS c
	getSlot (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
	slot ()Lnet/minecraft/commands/arguments/SlotArgument; a
net/minecraft/commands/arguments/TeamArgument net/minecraft/commands/arguments/ArgumentScoreboardTeam
	ERROR_TEAM_NOT_FOUND b
	EXAMPLES a
	getTeam (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
	team ()Lnet/minecraft/commands/arguments/TeamArgument; a
net/minecraft/commands/arguments/TimeArgument net/minecraft/commands/arguments/ArgumentTime
	ERROR_INVALID_TICK_COUNT c
	ERROR_INVALID_UNIT b
	EXAMPLES a
	UNITS d
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
	time ()Lnet/minecraft/commands/arguments/TimeArgument; a
net/minecraft/commands/arguments/UuidArgument net/minecraft/commands/arguments/ArgumentUUID
	ALLOWED_CHARACTERS c
	ERROR_INVALID_UUID a
	EXAMPLES b
	getUuid (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID; a
	uuid ()Lnet/minecraft/commands/arguments/UuidArgument; a
net/minecraft/commands/arguments/blocks/BlockInput net/minecraft/commands/arguments/blocks/ArgumentTileLocation
	properties b
	state a
	tag c
	getDefinedProperties ()Ljava/util/Set; b
	getState ()Lnet/minecraft/world/level/block/state/BlockState; a
	place (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)Z a
	test (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument net/minecraft/commands/arguments/blocks/ArgumentBlockPredicate
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	blockPredicate ()Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument; a
	getBlockPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result; a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate er$a
	nbt c
	properties b
	state a
	requiresNbt ()Z a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result er$b
	create (Lnet/minecraft/tags/TagContainer;)Ljava/util/function/Predicate; a
	requiresNbt ()Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate er$c
	nbt b
	tag a
	vagueProperties c
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockStateArgument net/minecraft/commands/arguments/blocks/ArgumentTile
	EXAMPLES a
	block ()Lnet/minecraft/commands/arguments/blocks/BlockStateArgument; a
	getBlock (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/blocks/BlockInput; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockInput; a
net/minecraft/commands/arguments/blocks/BlockStateParser net/minecraft/commands/arguments/blocks/ArgumentBlock
	ERROR_DUPLICATE_PROPERTY d
	ERROR_EXPECTED_END_OF_PROPERTIES g
	ERROR_EXPECTED_VALUE f
	ERROR_INVALID_VALUE e
	ERROR_NO_TAGS_ALLOWED a
	ERROR_UNKNOWN_BLOCK b
	ERROR_UNKNOWN_PROPERTY c
	SUGGEST_NOTHING n
	SYNTAX_END_PROPERTIES j
	SYNTAX_EQUALS k
	SYNTAX_PROPERTY_SEPARATOR l
	SYNTAX_START_NBT i
	SYNTAX_START_PROPERTIES h
	SYNTAX_TAG m
	definition t
	forTesting p
	id s
	nbt v
	properties q
	reader o
	state u
	suggestions y
	tag w
	tagCursor x
	vagueProperties r
	addSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/world/level/block/state/properties/Property;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder; a
	appendProperty (Ljava/lang/StringBuilder;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)V a
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; a
	getNbt ()Lnet/minecraft/nbt/CompoundTag; c
	getProperties ()Ljava/util/Map; a
	getState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getTag ()Lnet/minecraft/resources/ResourceLocation; d
	getVagueProperties ()Ljava/util/Map; j
	hasBlockEntity (Lnet/minecraft/tags/TagCollection;)Z a
	parse (Z)Lnet/minecraft/commands/arguments/blocks/BlockStateParser; a
	readBlock ()V e
	readNbt ()V i
	readProperties ()V g
	readTag ()V f
	readVagueProperties ()V h
	serialize (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/String; a
	setValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;I)V a
	suggestBlockIdOrTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; l
	suggestEquals (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; g
	suggestNextPropertyOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; h
	suggestOpenNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; f
	suggestOpenPropertiesOrNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; j
	suggestOpenVaguePropertiesOrNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; i
	suggestPropertyName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; d
	suggestPropertyNameOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; b
	suggestTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; k
	suggestVaguePropertyName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; e
	suggestVaguePropertyNameOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; c
	suggestVaguePropertyValue (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/arguments/coordinates/BlockPosArgument net/minecraft/commands/arguments/coordinates/ArgumentPosition
	ERROR_NOT_LOADED a
	ERROR_OUT_OF_BOUNDS c
	ERROR_OUT_OF_WORLD b
	EXAMPLES d
	blockPos ()Lnet/minecraft/commands/arguments/coordinates/BlockPosArgument; a
	getLoadedBlockPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; a
	getSpawnablePos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; b
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
net/minecraft/commands/arguments/coordinates/ColumnPosArgument net/minecraft/commands/arguments/coordinates/ArgumentVec2I
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	columnPos ()Lnet/minecraft/commands/arguments/coordinates/ColumnPosArgument; a
	getColumnPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ColumnPos; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
net/minecraft/commands/arguments/coordinates/Coordinates net/minecraft/commands/arguments/coordinates/IVectorPosition
	getBlockPos (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/core/BlockPos; c
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
net/minecraft/commands/arguments/coordinates/LocalCoordinates net/minecraft/commands/arguments/coordinates/ArgumentVectorPosition
	PREFIX_LOCAL_COORDINATE a
	forwards d
	left b
	up c
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/LocalCoordinates; a
	readDouble (Lcom/mojang/brigadier/StringReader;I)D a
net/minecraft/commands/arguments/coordinates/RotationArgument net/minecraft/commands/arguments/coordinates/ArgumentRotation
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	getRotation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	rotation ()Lnet/minecraft/commands/arguments/coordinates/RotationArgument; a
net/minecraft/commands/arguments/coordinates/SwizzleArgument net/minecraft/commands/arguments/coordinates/ArgumentRotationAxis
	ERROR_INVALID b
	EXAMPLES a
	getSwizzle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet; a
	swizzle ()Lnet/minecraft/commands/arguments/coordinates/SwizzleArgument; a
net/minecraft/commands/arguments/coordinates/Vec2Argument net/minecraft/commands/arguments/coordinates/ArgumentVec2
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	centerCorrect c
	getVec2 (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec2; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	vec2 ()Lnet/minecraft/commands/arguments/coordinates/Vec2Argument; a
	vec2 (Z)Lnet/minecraft/commands/arguments/coordinates/Vec2Argument; a
net/minecraft/commands/arguments/coordinates/Vec3Argument net/minecraft/commands/arguments/coordinates/ArgumentVec3
	ERROR_MIXED_TYPE b
	ERROR_NOT_COMPLETE a
	EXAMPLES c
	centerCorrect d
	getCoordinates (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; b
	getVec3 (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec3; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	vec3 ()Lnet/minecraft/commands/arguments/coordinates/Vec3Argument; a
	vec3 (Z)Lnet/minecraft/commands/arguments/coordinates/Vec3Argument; a
net/minecraft/commands/arguments/coordinates/WorldCoordinate net/minecraft/commands/arguments/coordinates/ArgumentParserPosition
	ERROR_EXPECTED_DOUBLE a
	ERROR_EXPECTED_INT b
	PREFIX_RELATIVE c
	relative d
	value e
	get (D)D a
	isRelative ()Z a
	isRelative (Lcom/mojang/brigadier/StringReader;)Z b
	parseDouble (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinate; a
	parseInt (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinate; a
net/minecraft/commands/arguments/coordinates/WorldCoordinates net/minecraft/commands/arguments/coordinates/VectorPosition
	x a
	y b
	z c
	absolute (DDD)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	absolute (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	current ()Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; d
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
	parseDouble (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	parseInt (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
net/minecraft/commands/arguments/item/FunctionArgument net/minecraft/commands/arguments/item/ArgumentTag
	ERROR_UNKNOWN_FUNCTION c
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	functions ()Lnet/minecraft/commands/arguments/item/FunctionArgument; a
	getFunction (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/CommandFunction; a
	getFunctionOrTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; b
	getFunctionTag (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; b
	getFunctions (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/FunctionArgument$Result; a
net/minecraft/commands/arguments/item/FunctionArgument$Result fg$a
	create (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; a
	unwrap (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; b
net/minecraft/commands/arguments/item/ItemArgument net/minecraft/commands/arguments/item/ArgumentItemStack
	EXAMPLES a
	getItem (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/item/ItemInput; a
	item ()Lnet/minecraft/commands/arguments/item/ItemArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemInput; a
net/minecraft/commands/arguments/item/ItemInput net/minecraft/commands/arguments/item/ArgumentPredicateItemStack
	ERROR_STACK_TOO_BIG a
	item b
	tag c
	createItemStack (IZ)Lnet/minecraft/world/item/ItemStack; a
	getItem ()Lnet/minecraft/world/item/Item; a
	serialize ()Ljava/lang/String; b
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/item/ItemParser net/minecraft/commands/arguments/item/ArgumentParserItemStack
	ERROR_NO_TAGS_ALLOWED a
	ERROR_UNKNOWN_ITEM b
	SUGGEST_NOTHING e
	SYNTAX_START_NBT c
	SYNTAX_TAG d
	forTesting g
	item h
	nbt i
	reader f
	suggestions l
	tag j
	tagCursor k
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; a
	getItem ()Lnet/minecraft/world/item/Item; a
	getNbt ()Lnet/minecraft/nbt/CompoundTag; b
	getTag ()Lnet/minecraft/resources/ResourceLocation; c
	parse ()Lnet/minecraft/commands/arguments/item/ItemParser; g
	readItem ()V d
	readNbt ()V f
	readTag ()V e
	suggestItemIdOrTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; d
	suggestOpenNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; b
	suggestTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; c
net/minecraft/commands/arguments/item/ItemPredicateArgument net/minecraft/commands/arguments/item/ArgumentItemPredicate
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	getItemPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; a
	itemPredicate ()Lnet/minecraft/commands/arguments/item/ItemPredicateArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemPredicateArgument$Result; a
net/minecraft/commands/arguments/item/ItemPredicateArgument$ItemPredicate fk$a
	item a
	nbt b
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/item/ItemPredicateArgument$Result fk$b
net/minecraft/commands/arguments/item/ItemPredicateArgument$TagPredicate fk$c
	nbt b
	tag a
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/selector/EntitySelectorParser net/minecraft/commands/arguments/selector/ArgumentParserSelector
	ERROR_EXPECTED_END_OF_OPTIONS i
	ERROR_EXPECTED_OPTION_VALUE j
	ERROR_INVALID_NAME_OR_UUID e
	ERROR_MISSING_SELECTOR_TYPE h
	ERROR_SELECTORS_NOT_ALLOWED g
	ERROR_UNKNOWN_SELECTOR_TYPE f
	ORDER_ARBITRARY k
	ORDER_FURTHEST m
	ORDER_NEAREST l
	ORDER_RANDOM n
	SELECTOR_ALL_ENTITIES w
	SELECTOR_ALL_PLAYERS t
	SELECTOR_CURRENT_ENTITY v
	SELECTOR_NEAREST_PLAYER s
	SELECTOR_RANDOM_PLAYERS u
	SUGGEST_NOTHING o
	SYNTAX_NOT c
	SYNTAX_OPTIONS_END q
	SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR b
	SYNTAX_OPTIONS_SEPARATOR r
	SYNTAX_OPTIONS_START p
	SYNTAX_SELECTOR_START a
	SYNTAX_TAG d
	allowSelectors y
	currentEntity O
	deltaX H
	deltaY I
	deltaZ J
	distance C
	entityUUID R
	hasAdvancements ae
	hasGamemodeEquals X
	hasGamemodeNotEquals Y
	hasNameEquals T
	hasNameNotEquals U
	hasScores ad
	hasTeamEquals Z
	hasTeamNotEquals aa
	includesEntities A
	isLimited V
	isSorted W
	level D
	maxResults z
	order N
	playerName P
	predicate M
	reader x
	rotX K
	rotY L
	startPosition Q
	suggestions S
	type ab
	typeInverse ac
	usesSelectors af
	worldLimited B
	x E
	y F
	z G
	addPredicate (Ljava/util/function/Predicate;)V a
	createAabb (DDD)Lnet/minecraft/world/phys/AABB; a
	createRotationPredicate (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate; a
	fillSelectorSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; a
	finalizePredicates ()V I
	getDeltaX ()Ljava/lang/Double; p
	getDeltaY ()Ljava/lang/Double; q
	getDeltaZ ()Ljava/lang/Double; r
	getDistance ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; i
	getLevel ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; j
	getOrder ()Ljava/util/function/BiConsumer; s
	getReader ()Lcom/mojang/brigadier/StringReader; g
	getRotX ()Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; k
	getRotY ()Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; l
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	getX ()Ljava/lang/Double; m
	getY ()Ljava/lang/Double; n
	getZ ()Ljava/lang/Double; o
	hasAdvancements ()Z H
	hasGamemodeEquals ()Z z
	hasGamemodeNotEquals ()Z A
	hasNameEquals ()Z v
	hasNameNotEquals ()Z w
	hasScores ()Z G
	hasTeamEquals ()Z B
	hasTeamNotEquals ()Z C
	isCurrentEntity ()Z u
	isLimited ()Z x
	isSorted ()Z y
	isTag ()Z f
	isTypeLimited ()Z E
	isTypeLimitedInversely ()Z F
	limitToType (Lnet/minecraft/world/entity/EntityType;)V a
	parse ()Lnet/minecraft/commands/arguments/selector/EntitySelector; t
	parseNameOrUUID ()V c
	parseOptions ()V d
	parseSelector ()V b
	setDeltaX (D)V d
	setDeltaY (D)V e
	setDeltaZ (D)V f
	setDistance (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)V a
	setHasAdvancements (Z)V k
	setHasGamemodeEquals (Z)V f
	setHasGamemodeNotEquals (Z)V g
	setHasNameEquals (Z)V b
	setHasNameNotEquals (Z)V c
	setHasScores (Z)V j
	setHasTeamEquals (Z)V h
	setHasTeamNotEquals (Z)V i
	setIncludesEntities (Z)V a
	setLevel (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)V a
	setLimited (Z)V d
	setMaxResults (I)V a
	setOrder (Ljava/util/function/BiConsumer;)V a
	setRotX (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V a
	setRotY (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V b
	setSorted (Z)V e
	setSuggestions (Ljava/util/function/BiFunction;)V a
	setTypeLimitedInversely ()V D
	setWorldLimited ()V h
	setX (D)V a
	setY (D)V b
	setZ (D)V c
	shouldInvertValue ()Z e
	suggestEquals (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; i
	suggestName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; c
	suggestNameOrSelector (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; b
	suggestOpenOptions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; e
	suggestOptionsKey (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; g
	suggestOptionsKeyOrClose (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; f
	suggestOptionsNextOrClose (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; h
	suggestSelector (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; d
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions net/minecraft/commands/arguments/selector/options/PlayerSelector
	ERROR_ENTITY_TYPE_INVALID h
	ERROR_GAME_MODE_INVALID g
	ERROR_INAPPLICABLE_OPTION b
	ERROR_LEVEL_NEGATIVE d
	ERROR_LIMIT_TOO_SMALL e
	ERROR_RANGE_NEGATIVE c
	ERROR_SORT_UNKNOWN f
	ERROR_UNKNOWN_OPTION a
	OPTIONS i
	bootStrap ()V a
	get (Lnet/minecraft/commands/arguments/selector/EntitySelectorParser;Ljava/lang/String;I)Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier; a
	register (Ljava/lang/String;Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier;Ljava/util/function/Predicate;Lnet/minecraft/network/chat/Component;)V a
	suggestNames (Lnet/minecraft/commands/arguments/selector/EntitySelectorParser;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier fp$a
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option fp$b
	description c
	modifier a
	predicate b
net/minecraft/commands/synchronization/ArgumentTypes net/minecraft/commands/synchronization/ArgumentRegistry
	BY_CLASS b
	BY_NAME c
	LOGGER a
	bootStrap ()V a
	deserialize (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; a
	findUsedArgumentTypes (Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set; a
	findUsedArgumentTypes (Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V a
	get (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypes$Entry; b
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/synchronization/ArgumentTypes$Entry; a
	isTypeRegistered (Lcom/mojang/brigadier/arguments/ArgumentType;)Z a
	register (Ljava/lang/String;Ljava/lang/Class;Lnet/minecraft/commands/synchronization/ArgumentSerializer;)V a
	serialize (Lnet/minecraft/network/FriendlyByteBuf;Lcom/mojang/brigadier/arguments/ArgumentType;)V a
	serializeNodeToJson (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject; a
	serializeToJson (Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V a
net/minecraft/commands/synchronization/ArgumentTypes$Entry fu$a
	clazz a
	name c
	serializer b
net/minecraft/commands/synchronization/EmptyArgumentSerializer net/minecraft/commands/synchronization/ArgumentSerializerVoid
	constructor a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/SuggestionProviders net/minecraft/commands/synchronization/CompletionProviders
	ALL_RECIPES b
	ASK_SERVER a
	AVAILABLE_BIOMES d
	AVAILABLE_SOUNDS c
	DEFAULT_NAME g
	PROVIDERS_BY_NAME f
	SUMMONABLE_ENTITIES e
	getName (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/resources/ResourceLocation; a
	getProvider (Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; a
	register (Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; a
	safelySwap (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; b
net/minecraft/commands/synchronization/SuggestionProviders$Wrapper fw$a
	delegate a
	name b
net/minecraft/commands/synchronization/brigadier/BrigadierArgumentSerializers net/minecraft/commands/synchronization/brigadier/ArgumentSerializers
	NUMBER_FLAG_MAX b
	NUMBER_FLAG_MIN a
	bootstrap ()V a
	createNumberFlags (ZZ)B a
	numberHasMax (B)Z b
	numberHasMin (B)Z a
net/minecraft/commands/synchronization/brigadier/DoubleArgumentSerializer net/minecraft/commands/synchronization/brigadier/ArgumentSerializerDouble
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/DoubleArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/FloatArgumentSerializer net/minecraft/commands/synchronization/brigadier/ArgumentSerializerFloat
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/FloatArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/IntegerArgumentSerializer net/minecraft/commands/synchronization/brigadier/ArgumentSerializerInteger
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/IntegerArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/LongArgumentSerializer net/minecraft/commands/synchronization/brigadier/ArgumentSerializerLong
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/LongArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/LongArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/LongArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer net/minecraft/commands/synchronization/brigadier/ArgumentSerializerString
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/StringArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/StringArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/StringArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/core/AxisCycle net/minecraft/core/EnumAxisCycle
	$VALUES f
	AXIS_VALUES d
	BACKWARD c
	FORWARD b
	NONE a
	VALUES e
	$values ()[Lnet/minecraft/core/AxisCycle; b
	between (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/AxisCycle; a
	cycle (DDDLnet/minecraft/core/Direction$Axis;)D a
	cycle (IIILnet/minecraft/core/Direction$Axis;)I a
	cycle (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction$Axis; a
	inverse ()Lnet/minecraft/core/AxisCycle; a
net/minecraft/core/BlockMath gg
	LOGGER c
	VANILLA_UV_TRANSFORM_GLOBAL_TO_LOCAL b
	VANILLA_UV_TRANSFORM_LOCAL_TO_GLOBAL a
	blockCenterToCorner (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; a
	blockCornerToCenter (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; b
	getUVLockTransform (Lcom/mojang/math/Transformation;Lnet/minecraft/core/Direction;Ljava/util/function/Supplier;)Lcom/mojang/math/Transformation; a
net/minecraft/core/BlockPos net/minecraft/core/BlockPosition
	CODEC a
	LOGGER d
	PACKED_X_LENGTH e
	PACKED_X_MASK i
	PACKED_Y_LENGTH c
	PACKED_Y_MASK j
	PACKED_Z_LENGTH h
	PACKED_Z_MASK k
	X_OFFSET n
	Y_OFFSET l
	ZERO b
	Z_OFFSET m
	above ()Lnet/minecraft/core/BlockPos; b
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/BlockPos; b
	above (I)Lnet/minecraft/core/Vec3i; n
	asLong ()J a
	asLong (III)J a
	atY (I)Lnet/minecraft/core/BlockPos; h
	below ()Lnet/minecraft/core/BlockPos; c
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/BlockPos; c
	below (I)Lnet/minecraft/core/Vec3i; m
	betweenClosed (IIIIII)Ljava/lang/Iterable; b
	betweenClosed (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/lang/Iterable; a
	betweenClosedStream (IIIIII)Ljava/util/stream/Stream; a
	betweenClosedStream (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; b
	betweenClosedStream (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Ljava/util/stream/Stream; a
	betweenClosedStream (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; a
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; c
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	east ()Lnet/minecraft/core/BlockPos; g
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/BlockPos; g
	east (I)Lnet/minecraft/core/Vec3i; i
	findClosestMatch (Lnet/minecraft/core/BlockPos;IILjava/util/function/Predicate;)Ljava/util/Optional; a
	getFlatIndex (J)J e
	getX (J)I a
	getY (J)I b
	getZ (J)I c
	immutable ()Lnet/minecraft/core/BlockPos; h
	multiply (I)Lnet/minecraft/core/BlockPos; a
	multiply (I)Lnet/minecraft/core/Vec3i; o
	mutable ()Lnet/minecraft/core/BlockPos$MutableBlockPos; i
	north ()Lnet/minecraft/core/BlockPos; d
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/BlockPos; d
	north (I)Lnet/minecraft/core/Vec3i; l
	of (J)Lnet/minecraft/core/BlockPos; d
	offset (DDD)Lnet/minecraft/core/BlockPos; a
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/BlockPos; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (JIII)J a
	offset (JLnet/minecraft/core/Direction;)J a
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; a
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	randomBetweenClosed (Ljava/util/Random;IIIIIII)Ljava/lang/Iterable; a
	randomInCube (Ljava/util/Random;ILnet/minecraft/core/BlockPos;I)Ljava/lang/Iterable; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	south ()Lnet/minecraft/core/BlockPos; e
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/BlockPos; e
	south (I)Lnet/minecraft/core/Vec3i; k
	spiralAround (Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Ljava/lang/Iterable; a
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; b
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	west ()Lnet/minecraft/core/BlockPos; f
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/BlockPos; f
	west (I)Lnet/minecraft/core/Vec3i; j
	withinManhattan (Lnet/minecraft/core/BlockPos;III)Ljava/lang/Iterable; a
	withinManhattanStream (Lnet/minecraft/core/BlockPos;III)Ljava/util/stream/Stream; b
net/minecraft/core/BlockPos$MutableBlockPos net/minecraft/core/BlockPosition$MutableBlockPosition
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/Vec3i; n
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/Vec3i; m
	clamp (Lnet/minecraft/core/Direction$Axis;II)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/Vec3i; i
	immutable ()Lnet/minecraft/core/BlockPos; h
	move (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; e
	move (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	move (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	move (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; h
	multiply (I)Lnet/minecraft/core/BlockPos; a
	multiply (I)Lnet/minecraft/core/Vec3i; o
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/Vec3i; l
	offset (DDD)Lnet/minecraft/core/BlockPos; a
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/BlockPos; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	set (DDD)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	set (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; d
	set (J)Lnet/minecraft/core/BlockPos$MutableBlockPos; f
	set (Lnet/minecraft/core/AxisCycle;III)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	set (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; g
	setWithOffset (Lnet/minecraft/core/Vec3i;III)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setWithOffset (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setWithOffset (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setX (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; p
	setX (I)Lnet/minecraft/core/Vec3i; u
	setY (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; q
	setY (I)Lnet/minecraft/core/Vec3i; t
	setZ (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; r
	setZ (I)Lnet/minecraft/core/Vec3i; s
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/Vec3i; k
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/Vec3i; j
net/minecraft/core/BlockSource net/minecraft/core/ISourceBlock
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; f
	getLevel ()Lnet/minecraft/server/level/ServerLevel; g
	getPos ()Lnet/minecraft/core/BlockPos; d
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/BlockSourceImpl net/minecraft/core/SourceBlock
	level a
	pos b
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; f
	getLevel ()Lnet/minecraft/server/level/ServerLevel; g
	getPos ()Lnet/minecraft/core/BlockPos; d
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/Cursor3D net/minecraft/core/CursorPosition
	TYPE_CORNER d
	TYPE_EDGE c
	TYPE_FACE b
	TYPE_INSIDE a
	depth j
	end k
	height i
	index l
	originX e
	originY f
	originZ g
	width h
	x m
	y n
	z o
	advance ()Z a
	getNextType ()I e
	nextX ()I b
	nextY ()I c
	nextZ ()I d
net/minecraft/core/DefaultedRegistry net/minecraft/core/RegistryBlocks
	defaultKey bz
	defaultValue bA
	byId (I)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getDefaultKey ()Lnet/minecraft/resources/ResourceLocation; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOptional (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getRandom (Ljava/util/Random;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
net/minecraft/core/Direction net/minecraft/core/EnumDirection
	$VALUES u
	BY_2D_DATA s
	BY_3D_DATA r
	BY_NAME q
	BY_NORMAL t
	CODEC g
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	VALUES p
	VERTICAL_CODEC h
	WEST e
	axis m
	axisDirection n
	data2d k
	data3d i
	name l
	normal o
	oppositeIndex j
	$values ()[Lnet/minecraft/core/Direction; u
	byName (Ljava/lang/String;)Lnet/minecraft/core/Direction; a
	from2DDataValue (I)Lnet/minecraft/core/Direction; b
	from3DDataValue (I)Lnet/minecraft/core/Direction; a
	fromAxisAndDirection (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/core/Direction$AxisDirection;)Lnet/minecraft/core/Direction; a
	fromNormal (III)Lnet/minecraft/core/Direction; a
	fromNormal (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; a
	fromYRot (D)Lnet/minecraft/core/Direction; a
	get (Lnet/minecraft/core/Direction$AxisDirection;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	get2DDataValue ()I d
	get3DDataValue ()I b
	getAxis ()Lnet/minecraft/core/Direction$Axis; n
	getAxisDirection ()Lnet/minecraft/core/Direction$AxisDirection; e
	getClockWise ()Lnet/minecraft/core/Direction; g
	getClockWise (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	getClockWiseX ()Lnet/minecraft/core/Direction; q
	getClockWiseZ ()Lnet/minecraft/core/Direction; s
	getCounterClockWise ()Lnet/minecraft/core/Direction; h
	getCounterClockWise (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; b
	getCounterClockWiseX ()Lnet/minecraft/core/Direction; r
	getCounterClockWiseZ ()Lnet/minecraft/core/Direction; t
	getFacingAxis (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	getName ()Ljava/lang/String; m
	getNearest (DDD)Lnet/minecraft/core/Direction; a
	getNearest (FFF)Lnet/minecraft/core/Direction; a
	getNormal ()Lnet/minecraft/core/Vec3i; p
	getOpposite ()Lnet/minecraft/core/Direction; f
	getRandom (Ljava/util/Random;)Lnet/minecraft/core/Direction; a
	getRotation ()Lcom/mojang/math/Quaternion; a
	getSerializedName ()Ljava/lang/String; c
	getStepX ()I i
	getStepY ()I j
	getStepZ ()I k
	isFacingAngle (F)Z a
	makeDirectionArray (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[Lnet/minecraft/core/Direction; a
	orderedByNearest (Lnet/minecraft/world/entity/Entity;)[Lnet/minecraft/core/Direction; a
	rotate (Lcom/mojang/math/Matrix4f;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	step ()Lcom/mojang/math/Vector3f; l
	toYRot ()F o
	verifyVertical (Lnet/minecraft/core/Direction;)Lcom/mojang/serialization/DataResult; a
net/minecraft/core/Direction$Axis net/minecraft/core/EnumDirection$EnumAxis
	$VALUES h
	BY_NAME f
	CODEC e
	VALUES d
	X a
	Y b
	Z c
	name g
	$values ()[Lnet/minecraft/core/Direction$Axis; f
	byName (Ljava/lang/String;)Lnet/minecraft/core/Direction$Axis; a
	choose (DDD)D a
	choose (III)I a
	getName ()Ljava/lang/String; a
	getPlane ()Lnet/minecraft/core/Direction$Plane; e
	getRandom (Ljava/util/Random;)Lnet/minecraft/core/Direction$Axis; a
	getSerializedName ()Ljava/lang/String; c
	isHorizontal ()Z d
	isVertical ()Z b
	test (Lnet/minecraft/core/Direction;)Z a
net/minecraft/core/Direction$AxisDirection net/minecraft/core/EnumDirection$EnumAxisDirection
	$VALUES e
	NEGATIVE b
	POSITIVE a
	name d
	step c
	$values ()[Lnet/minecraft/core/Direction$AxisDirection; d
	getName ()Ljava/lang/String; b
	getStep ()I a
	opposite ()Lnet/minecraft/core/Direction$AxisDirection; c
net/minecraft/core/Direction$Plane net/minecraft/core/EnumDirection$EnumDirectionLimit
	$VALUES e
	HORIZONTAL a
	VERTICAL b
	axis d
	faces c
	$values ()[Lnet/minecraft/core/Direction$Plane; b
	getRandomAxis (Ljava/util/Random;)Lnet/minecraft/core/Direction$Axis; b
	getRandomDirection (Ljava/util/Random;)Lnet/minecraft/core/Direction; a
	stream ()Ljava/util/stream/Stream; a
	test (Lnet/minecraft/core/Direction;)Z a
net/minecraft/core/Direction8 net/minecraft/core/EnumDirection8
	$VALUES j
	EAST c
	NORTH a
	NORTH_EAST b
	NORTH_WEST h
	SOUTH e
	SOUTH_EAST d
	SOUTH_WEST f
	WEST g
	directions i
	$values ()[Lnet/minecraft/core/Direction8; b
	getDirections ()Ljava/util/Set; a
net/minecraft/core/FrontAndTop net/minecraft/core/BlockPropertyJigsawOrientation
	$VALUES q
	DOWN_EAST a
	DOWN_NORTH b
	DOWN_SOUTH c
	DOWN_WEST d
	EAST_UP j
	LOOKUP_TOP_FRONT m
	NORTH_UP k
	SOUTH_UP l
	UP_EAST e
	UP_NORTH f
	UP_SOUTH g
	UP_WEST h
	WEST_UP i
	front p
	name n
	top o
	$values ()[Lnet/minecraft/core/FrontAndTop; d
	fromFrontAndTop (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/FrontAndTop; a
	front ()Lnet/minecraft/core/Direction; a
	getSerializedName ()Ljava/lang/String; c
	lookupKey (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)I b
	top ()Lnet/minecraft/core/Direction; b
net/minecraft/core/IdMap net/minecraft/core/Registry
	DEFAULT a
	byId (I)Ljava/lang/Object; a
	getId (Ljava/lang/Object;)I a
	size ()I b
net/minecraft/core/IdMapper net/minecraft/core/RegistryBlockID
	idToT d
	nextId b
	tToId c
	add (Ljava/lang/Object;)V b
	addMapping (Ljava/lang/Object;I)V a
	byId (I)Ljava/lang/Object; a
	contains (I)Z b
	getId (Ljava/lang/Object;)I a
	size ()I b
net/minecraft/core/MappedRegistry net/minecraft/core/RegistryMaterials
	LOGGER b
	byId bz
	elementsLifecycle bE
	keyStorage bC
	lifecycles bD
	nextId bF
	randomCache c
	storage bB
	toId bA
	byId (I)Ljava/lang/Object; a
	containsKey (Lnet/minecraft/resources/ResourceKey;)Z b
	containsKey (Lnet/minecraft/resources/ResourceLocation;)Z c
	dataPackCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	directCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; c
	elementsLifecycle ()Lcom/mojang/serialization/Lifecycle; c
	entrySet ()Ljava/util/Set; e
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getRandom (Ljava/util/Random;)Ljava/lang/Object; a
	getResourceKey (Ljava/lang/Object;)Ljava/util/Optional; c
	isEmpty ()Z f
	keySet ()Ljava/util/Set; d
	lifecycle (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; d
	networkCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;Z)Ljava/lang/Object; a
	registerOrOverride (Ljava/util/OptionalInt;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	size ()I b
	withNameAndId (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; a
net/minecraft/core/MappedRegistry$RegistryEntry gs$a
	id b
	key a
	value c
	id ()I b
	key ()Lnet/minecraft/resources/ResourceKey; a
	value ()Ljava/lang/Object; c
net/minecraft/core/Position net/minecraft/core/IPosition
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/PositionImpl net/minecraft/core/Position
	x a
	y b
	z c
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/Registry net/minecraft/core/IRegistry
	ACTIVITY av
	ACTIVITY_REGISTRY J
	ATTRIBUTE am
	ATTRIBUTE_REGISTRY z
	BIOME_REGISTRY aR
	BIOME_SOURCE bt
	BIOME_SOURCE_REGISTRY bi
	BLOCK X
	BLOCKSTATE_PROVIDER_TYPES bo
	BLOCK_ENTITY_TYPE ad
	BLOCK_ENTITY_TYPE_REGISTRY q
	BLOCK_PREDICATE_TYPES aJ
	BLOCK_PREDICATE_TYPE_REGISTRY aI
	BLOCK_REGISTRY k
	BLOCK_STATE_PROVIDER_TYPE_REGISTRY bd
	CARVER aU
	CARVER_REGISTRY aT
	CHUNK_GENERATOR bu
	CHUNK_GENERATOR_REGISTRY bj
	CHUNK_STATUS ag
	CHUNK_STATUS_REGISTRY t
	CONDITION bv
	CONDITION_REGISTRY bk
	CONFIGURED_CARVER_REGISTRY aL
	CONFIGURED_FEATURE_REGISTRY aM
	CONFIGURED_STRUCTURE_FEATURE_REGISTRY aO
	CUSTOM_STAT af
	CUSTOM_STAT_REGISTRY s
	DIMENSION_REGISTRY R
	DIMENSION_TYPE_REGISTRY Q
	ENCHANTMENT Y
	ENCHANTMENT_REGISTRY l
	ENTITY_TYPE Z
	ENTITY_TYPE_REGISTRY m
	FEATURE aW
	FEATURE_REGISTRY aV
	FEATURE_SIZE_TYPES bs
	FEATURE_SIZE_TYPE_REGISTRY bh
	FLOAT_PROVIDER_TYPES aD
	FLOAT_PROVIDER_TYPE_REGISTRY aC
	FLUID V
	FLUID_REGISTRY i
	FOLIAGE_PLACER_TYPES bp
	FOLIAGE_PLACER_TYPE_REGISTRY be
	GAME_EVENT T
	GAME_EVENT_REGISTRY A
	HEIGHT_PROVIDER_TYPES aH
	HEIGHT_PROVIDER_TYPE_REGISTRY aG
	INT_PROVIDER_TYPES aF
	INT_PROVIDER_TYPE_REGISTRY aE
	ITEM aa
	ITEM_REGISTRY n
	LEVEL_STEM_REGISTRY S
	LOADERS b
	LOGGER d
	LOOT_CONDITION_TYPE ay
	LOOT_ENTRY_REGISTRY K
	LOOT_FUNCTION_REGISTRY L
	LOOT_FUNCTION_TYPE ax
	LOOT_ITEM_REGISTRY M
	LOOT_NBT_PROVIDER_REGISTRY O
	LOOT_NBT_PROVIDER_TYPE aA
	LOOT_NUMBER_PROVIDER_REGISTRY N
	LOOT_NUMBER_PROVIDER_TYPE az
	LOOT_POOL_ENTRY_TYPE aw
	LOOT_SCORE_PROVIDER_REGISTRY P
	LOOT_SCORE_PROVIDER_TYPE aB
	MEMORY_MODULE_TYPE as
	MEMORY_MODULE_TYPE_REGISTRY G
	MENU aj
	MENU_REGISTRY w
	MOB_EFFECT W
	MOB_EFFECT_REGISTRY j
	MOTIVE ae
	MOTIVE_REGISTRY r
	NOISE_GENERATOR_SETTINGS_REGISTRY aK
	NOISE_REGISTRY aS
	PARTICLE_TYPE ac
	PARTICLE_TYPE_REGISTRY p
	PLACED_FEATURE_REGISTRY aN
	PLACEMENT_MODIFIERS bc
	PLACEMENT_MODIFIER_REGISTRY bb
	POINT_OF_INTEREST_TYPE ar
	POINT_OF_INTEREST_TYPE_REGISTRY F
	POSITION_SOURCE_TYPE an
	POSITION_SOURCE_TYPE_REGISTRY B
	POS_RULE_TEST ai
	POS_RULE_TEST_REGISTRY v
	POTION ab
	POTION_REGISTRY o
	PROCESSOR_LIST_REGISTRY aP
	RECIPE_SERIALIZER al
	RECIPE_SERIALIZER_REGISTRY y
	RECIPE_TYPE ak
	RECIPE_TYPE_REGISTRY x
	REGISTRY g
	ROOT_REGISTRY_NAME e
	RULE bw
	RULE_REGISTRY bl
	RULE_TEST ah
	RULE_TEST_REGISTRY u
	SCHEDULE au
	SCHEDULE_REGISTRY I
	SENSOR_TYPE at
	SENSOR_TYPE_REGISTRY H
	SOUND_EVENT U
	SOUND_EVENT_REGISTRY h
	STAT_TYPE ao
	STAT_TYPE_REGISTRY C
	STRUCTURE_FEATURE aY
	STRUCTURE_FEATURE_REGISTRY aX
	STRUCTURE_PIECE ba
	STRUCTURE_PIECE_REGISTRY aZ
	STRUCTURE_POOL_ELEMENT by
	STRUCTURE_POOL_ELEMENT_REGISTRY bn
	STRUCTURE_PROCESSOR bx
	STRUCTURE_PROCESSOR_REGISTRY bm
	TEMPLATE_POOL_REGISTRY aQ
	TREE_DECORATOR_TYPES br
	TREE_DECORATOR_TYPE_REGISTRY bg
	TRUNK_PLACER_TYPES bq
	TRUNK_PLACER_TYPE_REGISTRY bf
	VILLAGER_PROFESSION aq
	VILLAGER_PROFESSION_REGISTRY E
	VILLAGER_TYPE ap
	VILLAGER_TYPE_REGISTRY D
	WRITABLE_REGISTRY f
	key c
	lifecycle bz
	byNameCodec ()Lcom/mojang/serialization/Codec; i
	checkRegistry (Lnet/minecraft/core/WritableRegistry;)V a
	containsKey (Lnet/minecraft/resources/ResourceKey;)Z b
	containsKey (Lnet/minecraft/resources/ResourceLocation;)Z c
	createRegistryKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	elementsLifecycle ()Lcom/mojang/serialization/Lifecycle; c
	entrySet ()Ljava/util/Set; e
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOptional (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; c
	getOptional (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getOrThrow (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; d
	getRandom (Ljava/util/Random;)Ljava/lang/Object; a
	getResourceKey (Ljava/lang/Object;)Ljava/util/Optional; c
	internalRegister (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Ljava/util/function/Supplier;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/WritableRegistry; a
	key ()Lnet/minecraft/resources/ResourceKey; g
	keySet ()Ljava/util/Set; d
	lifecycle ()Lcom/mojang/serialization/Lifecycle; h
	lifecycle (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; d
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/Object;)Ljava/lang/Object; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lnet/minecraft/core/DefaultedRegistry; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/core/DefaultedRegistry; a
	registerMapping (Lnet/minecraft/core/Registry;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lnet/minecraft/core/Registry; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;)Lnet/minecraft/core/Registry; a
	stream ()Ljava/util/stream/Stream; j
net/minecraft/core/RegistryAccess net/minecraft/core/IRegistryCustom
	BUILTIN c
	LOGGER a
	REGISTRIES b
	addBuiltinElements (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/resources/RegistryResourceAccess$InMemoryStorage;Lnet/minecraft/core/RegistryAccess$RegistryData;)V a
	builtin ()Lnet/minecraft/core/RegistryAccess$RegistryHolder; b
	copy (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/core/Registry;)V a
	copyBuiltin (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/resources/ResourceKey;)V a
	knownRegistries ()Ljava/lang/Iterable; a
	load (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/resources/RegistryReadOps;)V a
	ownedRegistry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	ownedRegistryOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/WritableRegistry; b
	put (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)V a
	put (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V a
	readRegistry (Lnet/minecraft/resources/RegistryReadOps;Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/core/RegistryAccess$RegistryData;)V a
	registry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; c
	registryOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Registry; d
net/minecraft/core/RegistryAccess$RegistryData net/minecraft/core/IRegistryCustom$RegistryData
	codec b
	key a
	networkCodec c
	codec ()Lcom/mojang/serialization/Codec; c
	key ()Lnet/minecraft/resources/ResourceKey; b
	networkCodec ()Lcom/mojang/serialization/Codec; d
	sendToClient ()Z a
net/minecraft/core/RegistryAccess$RegistryHolder net/minecraft/core/IRegistryCustom$Dimension
	NETWORK_CODEC a
	registries b
	captureMap (Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec; a
	createRegistry (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/MappedRegistry; f
	getNetworkCodec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/DataResult; e
	makeNetworkCodec ()Lcom/mojang/serialization/Codec; c
	ownedRegistry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	parseRegistry (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/core/MappedRegistry; a
	readFromDisk (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/core/RegistryAccess; a
net/minecraft/core/Rotations net/minecraft/core/Vector3f
	x a
	y b
	z c
	getWrappedX ()F e
	getWrappedY ()F f
	getWrappedZ ()F g
	getX ()F b
	getY ()F c
	getZ ()F d
	save ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/core/SectionPos net/minecraft/core/SectionPosition
	PACKED_X_LENGTH h
	PACKED_X_MASK k
	PACKED_Y_LENGTH i
	PACKED_Y_MASK l
	PACKED_Z_LENGTH j
	PACKED_Z_MASK m
	RELATIVE_X_SHIFT q
	RELATIVE_Y_SHIFT r
	RELATIVE_Z_SHIFT s
	SECTION_BITS a
	SECTION_HALF_SIZE d
	SECTION_MASK c
	SECTION_MAX_INDEX e
	SECTION_SIZE b
	X_OFFSET p
	Y_OFFSET n
	Z_OFFSET o
	aroundAndAtBlockPos (IIILit/unimi/dsi/fastutil/longs/LongConsumer;)V a
	aroundAndAtBlockPos (JLit/unimi/dsi/fastutil/longs/LongConsumer;)V a
	aroundAndAtBlockPos (Lnet/minecraft/core/BlockPos;Lit/unimi/dsi/fastutil/longs/LongConsumer;)V a
	aroundChunk (Lnet/minecraft/world/level/ChunkPos;III)Ljava/util/stream/Stream; a
	asLong ()J s
	asLong (III)J b
	asLong (Lnet/minecraft/core/BlockPos;)J c
	betweenClosedStream (IIIIII)Ljava/util/stream/Stream; a
	blockToSection (J)J e
	blockToSectionCoord (I)I a
	blocksInside ()Ljava/util/stream/Stream; t
	bottomOf (Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/core/SectionPos; a
	center ()Lnet/minecraft/core/BlockPos; q
	chunk ()Lnet/minecraft/world/level/ChunkPos; r
	cube (Lnet/minecraft/core/SectionPos;I)Ljava/util/stream/Stream; a
	getZeroNode (J)J f
	maxBlockX ()I g
	maxBlockY ()I h
	maxBlockZ ()I i
	minBlockX ()I d
	minBlockY ()I e
	minBlockZ ()I f
	of (III)Lnet/minecraft/core/SectionPos; a
	of (J)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/world/level/ChunkPos;I)Lnet/minecraft/core/SectionPos; a
	offset (III)Lnet/minecraft/core/SectionPos; d
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (JIII)J a
	offset (JLnet/minecraft/core/Direction;)J a
	origin ()Lnet/minecraft/core/BlockPos; p
	posToSectionCoord (D)I a
	relativeToBlockPos (S)Lnet/minecraft/core/BlockPos; g
	relativeToBlockX (S)I d
	relativeToBlockY (S)I e
	relativeToBlockZ (S)I f
	sectionRelative (I)I b
	sectionRelativePos (Lnet/minecraft/core/BlockPos;)S b
	sectionRelativeX (S)I a
	sectionRelativeY (S)I b
	sectionRelativeZ (S)I c
	sectionToBlockCoord (I)I c
	sectionToBlockCoord (II)I a
	x ()I a
	x (J)I b
	y ()I b
	y (J)I c
	z ()I c
	z (J)I d
net/minecraft/core/SerializableUUID net/minecraft/core/MinecraftSerializableUUID
	CODEC a
	leastMostToIntArray (JJ)[I a
	readUUID (Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID; a
	uuidFromIntArray ([I)Ljava/util/UUID; a
	uuidToIntArray (Ljava/util/UUID;)[I a
net/minecraft/core/Vec3i net/minecraft/core/BaseBlockPosition
	CODEC f
	ZERO g
	x a
	y b
	z c
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/Vec3i; n
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/Vec3i; m
	checkOffsetAxes (I)Ljava/util/function/Function; a
	closerThan (Lnet/minecraft/core/Position;D)Z a
	closerThan (Lnet/minecraft/core/Vec3i;D)Z a
	compareTo (Lnet/minecraft/core/Vec3i;)I i
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	distManhattan (Lnet/minecraft/core/Vec3i;)I k
	distSqr (DDDZ)D a
	distSqr (Lnet/minecraft/core/Position;Z)D a
	distSqr (Lnet/minecraft/core/Vec3i;)D j
	distSqr (Lnet/minecraft/core/Vec3i;Z)D a
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/Vec3i; i
	get (Lnet/minecraft/core/Direction$Axis;)I a
	getX ()I u
	getY ()I v
	getZ ()I w
	multiply (I)Lnet/minecraft/core/Vec3i; o
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/Vec3i; l
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	offsetCodec (I)Lcom/mojang/serialization/Codec; v
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	setX (I)Lnet/minecraft/core/Vec3i; u
	setY (I)Lnet/minecraft/core/Vec3i; t
	setZ (I)Lnet/minecraft/core/Vec3i; s
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/Vec3i; k
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	toShortString ()Ljava/lang/String; x
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/Vec3i; j
net/minecraft/core/WritableRegistry net/minecraft/core/IRegistryWritable
	isEmpty ()Z f
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	registerOrOverride (Ljava/util/OptionalInt;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior net/minecraft/core/dispenser/DispenseBehaviorProjectile
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	getPower ()F b
	getProjectile (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/Position;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/Projectile; a
	getUncertainty ()F a
	playSound (Lnet/minecraft/core/BlockSource;)V a
net/minecraft/core/dispenser/BoatDispenseItemBehavior net/minecraft/core/dispenser/DispenseBehaviorBoat
	defaultDispenseItemBehavior c
	type d
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	playSound (Lnet/minecraft/core/BlockSource;)V a
net/minecraft/core/dispenser/DefaultDispenseItemBehavior net/minecraft/core/dispenser/DispenseBehaviorItem
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	playAnimation (Lnet/minecraft/core/BlockSource;Lnet/minecraft/core/Direction;)V a
	playSound (Lnet/minecraft/core/BlockSource;)V a
	spawnItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;Lnet/minecraft/core/Position;)V a
net/minecraft/core/dispenser/DispenseItemBehavior net/minecraft/core/dispenser/IDispenseBehavior
	LOGGER a
	NOOP b
	bootStrap ()V c
	setEntityPokingOutOfBlock (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)V a
net/minecraft/core/dispenser/OptionalDispenseItemBehavior net/minecraft/core/dispenser/DispenseBehaviorMaybe
	success c
	isSuccess ()Z a
	playSound (Lnet/minecraft/core/BlockSource;)V a
	setSuccess (Z)V a
net/minecraft/core/dispenser/ShearsDispenseItemBehavior net/minecraft/core/dispenser/DispenseBehaviorShears
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	tryShearBeehive (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	tryShearLivingEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior net/minecraft/core/dispenser/DispenseBehaviorShulkerBox
	LOGGER c
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/core/particles/BlockParticleOption net/minecraft/core/particles/ParticleParamBlock
	DESERIALIZER a
	state c
	type b
	codec (Lnet/minecraft/core/particles/ParticleType;)Lcom/mojang/serialization/Codec; a
	getState ()Lnet/minecraft/world/level/block/state/BlockState; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/DustParticleOptions net/minecraft/core/particles/ParticleParamRedstone
	CODEC c
	DESERIALIZER d
	REDSTONE b
	REDSTONE_PARTICLE_COLOR a
	getType ()Lnet/minecraft/core/particles/ParticleType; b
net/minecraft/core/particles/ItemParticleOption net/minecraft/core/particles/ParticleParamItem
	DESERIALIZER a
	itemStack c
	type b
	codec (Lnet/minecraft/core/particles/ParticleType;)Lcom/mojang/serialization/Codec; a
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ParticleGroup hu
	SPORE_BLOSSOM a
	limit b
	getLimit ()I a
net/minecraft/core/particles/ParticleOptions net/minecraft/core/particles/ParticleParam
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ParticleOptions$Deserializer hv$a
	fromCommand (Lnet/minecraft/core/particles/ParticleType;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; b
	fromNetwork (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/core/particles/ParticleOptions; b
net/minecraft/core/particles/ParticleType net/minecraft/core/particles/Particle
	deserializer b
	overrideLimiter a
	codec ()Lcom/mojang/serialization/Codec; e
	getDeserializer ()Lnet/minecraft/core/particles/ParticleOptions$Deserializer; d
	getOverrideLimiter ()Z c
net/minecraft/core/particles/ParticleTypes net/minecraft/core/particles/Particles
	AMBIENT_ENTITY_EFFECT a
	ANGRY_VILLAGER b
	ASH ap
	BLOCK c
	BLOCK_MARKER d
	BUBBLE e
	BUBBLE_COLUMN_UP af
	BUBBLE_POP ad
	CAMPFIRE_COSY_SMOKE ai
	CAMPFIRE_SIGNAL_SMOKE aj
	CLOUD f
	CODEC aK
	COMPOSTER G
	CRIMSON_SPORE aq
	CRIT g
	CURRENT_DOWN ae
	DAMAGE_INDICATOR h
	DOLPHIN ah
	DRAGON_BREATH i
	DRIPPING_DRIPSTONE_LAVA aA
	DRIPPING_DRIPSTONE_WATER aC
	DRIPPING_HONEY ak
	DRIPPING_LAVA j
	DRIPPING_OBSIDIAN_TEAR at
	DRIPPING_WATER m
	DUST o
	DUST_COLOR_TRANSITION p
	EFFECT q
	ELDER_GUARDIAN r
	ELECTRIC_SPARK aI
	ENCHANT t
	ENCHANTED_HIT s
	END_ROD u
	ENTITY_EFFECT v
	EXPLOSION x
	EXPLOSION_EMITTER w
	FALLING_DRIPSTONE_LAVA aB
	FALLING_DRIPSTONE_WATER aD
	FALLING_DUST y
	FALLING_HONEY al
	FALLING_LAVA k
	FALLING_NECTAR an
	FALLING_OBSIDIAN_TEAR au
	FALLING_SPORE_BLOSSOM ao
	FALLING_WATER n
	FIREWORK z
	FISHING A
	FLAME B
	FLASH E
	GLOW aF
	GLOW_SQUID_INK aE
	HAPPY_VILLAGER F
	HEART H
	INSTANT_EFFECT I
	ITEM J
	ITEM_SLIME L
	ITEM_SNOWBALL M
	LANDING_HONEY am
	LANDING_LAVA l
	LANDING_OBSIDIAN_TEAR av
	LARGE_SMOKE N
	LAVA O
	MYCELIUM P
	NAUTILUS ag
	NOTE Q
	POOF R
	PORTAL S
	RAIN T
	REVERSE_PORTAL aw
	SCRAPE aJ
	SMALL_FLAME ay
	SMOKE U
	SNEEZE V
	SNOWFLAKE az
	SOUL D
	SOUL_FIRE_FLAME C
	SPIT W
	SPLASH ab
	SPORE_BLOSSOM_AIR as
	SQUID_INK X
	SWEEP_ATTACK Y
	TOTEM_OF_UNDYING Z
	UNDERWATER aa
	VIBRATION K
	WARPED_SPORE ar
	WAX_OFF aH
	WAX_ON aG
	WHITE_ASH ax
	WITCH ac
	register (Ljava/lang/String;Lnet/minecraft/core/particles/ParticleOptions$Deserializer;Ljava/util/function/Function;)Lnet/minecraft/core/particles/ParticleType; a
	register (Ljava/lang/String;Z)Lnet/minecraft/core/particles/SimpleParticleType; a
net/minecraft/core/particles/SimpleParticleType net/minecraft/core/particles/ParticleType
	DESERIALIZER a
	codec b
	codec ()Lcom/mojang/serialization/Codec; e
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	getType ()Lnet/minecraft/core/particles/SimpleParticleType; f
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/data/BlockFamilies ib
	ACACIA_PLANKS a
	ANDESITE i
	BIRCH_PLANKS b
	BLACKSTONE k
	BRICKS n
	COBBLED_DEEPSLATE ad
	COBBLESTONE G
	COPPER_BLOCK q
	CRIMSON_PLANKS c
	CUT_COPPER r
	CUT_RED_SANDSTONE Y
	CUT_SANDSTONE V
	DARK_OAK_PLANKS f
	DARK_PRISMARINE R
	DEEPSLATE ac
	DEEPSLATE_BRICKS af
	DEEPSLATE_TILES ag
	DIORITE I
	END_STONE_BRICKS o
	EXPOSED_COPPER u
	EXPOSED_CUT_COPPER v
	GRANITE K
	JUNGLE_PLANKS d
	MAP ah
	MOSSY_COBBLESTONE H
	MOSSY_STONE_BRICKS p
	NETHER_BRICKS M
	OAK_PLANKS e
	OXIDIZED_COPPER C
	OXIDIZED_CUT_COPPER D
	POLISHED_ANDESITE j
	POLISHED_BLACKSTONE l
	POLISHED_BLACKSTONE_BRICKS m
	POLISHED_DEEPSLATE ae
	POLISHED_DIORITE J
	POLISHED_GRANITE L
	PRISMARINE O
	PRISMARINE_BRICKS Q
	PURPUR P
	QUARTZ S
	RECIPE_GROUP_PREFIX_WOODEN ai
	RECIPE_UNLOCKED_BY_HAS_PLANKS aj
	RED_NETHER_BRICKS N
	RED_SANDSTONE X
	SANDSTONE U
	SMOOTH_QUARTZ T
	SMOOTH_RED_SANDSTONE Z
	SMOOTH_SANDSTONE W
	SPRUCE_PLANKS g
	STONE aa
	STONE_BRICK ab
	WARPED_PLANKS h
	WAXED_COPPER_BLOCK s
	WAXED_CUT_COPPER t
	WAXED_EXPOSED_COPPER w
	WAXED_EXPOSED_CUT_COPPER x
	WAXED_OXIDIZED_COPPER E
	WAXED_OXIDIZED_CUT_COPPER F
	WAXED_WEATHERED_COPPER A
	WAXED_WEATHERED_CUT_COPPER B
	WEATHERED_COPPER y
	WEATHERED_CUT_COPPER z
	familyBuilder (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	getAllFamilies ()Ljava/util/stream/Stream; a
net/minecraft/data/BlockFamily ic
	baseBlock a
	generateModel c
	generateRecipe d
	recipeGroupPrefix e
	recipeUnlockedBy f
	variants b
	get (Lnet/minecraft/data/BlockFamily$Variant;)Lnet/minecraft/world/level/block/Block; a
	getBaseBlock ()Lnet/minecraft/world/level/block/Block; a
	getRecipeGroupPrefix ()Ljava/util/Optional; e
	getRecipeUnlockedBy ()Ljava/util/Optional; f
	getVariants ()Ljava/util/Map; b
	shouldGenerateModel ()Z c
	shouldGenerateRecipe ()Z d
net/minecraft/data/BlockFamily$Builder ic$a
	family a
	button (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	chiseled (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; b
	cracked (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; c
	cut (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; d
	dontGenerateModel ()Lnet/minecraft/data/BlockFamily$Builder; b
	dontGenerateRecipe ()Lnet/minecraft/data/BlockFamily$Builder; c
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; e
	fence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; f
	fenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; g
	getFamily ()Lnet/minecraft/data/BlockFamily; a
	polished (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; k
	pressurePlate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; j
	recipeGroupPrefix (Ljava/lang/String;)Lnet/minecraft/data/BlockFamily$Builder; a
	recipeUnlockedBy (Ljava/lang/String;)Lnet/minecraft/data/BlockFamily$Builder; b
	sign (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	slab (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; h
	stairs (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; i
	trapdoor (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; l
	wall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; m
net/minecraft/data/BlockFamily$Variant ic$b
	$VALUES q
	BUTTON a
	CHISELED b
	CRACKED c
	CUT d
	DOOR e
	FENCE f
	FENCE_GATE g
	POLISHED l
	PRESSURE_PLATE k
	SIGN h
	SLAB i
	STAIRS j
	TRAPDOOR m
	WALL n
	WALL_SIGN o
	name p
	$values ()[Lnet/minecraft/data/BlockFamily$Variant; b
	getName ()Ljava/lang/String; a
net/minecraft/data/BuiltinRegistries net/minecraft/data/RegistryGeneration
	BIOME i
	CONFIGURED_CARVER c
	CONFIGURED_FEATURE d
	CONFIGURED_STRUCTURE_FEATURE e
	LOADERS l
	LOGGER a
	NOISE k
	NOISE_GENERATOR_SETTINGS j
	PLACED_FEATURE f
	PROCESSOR_LIST g
	REGISTRY b
	TEMPLATE_POOL h
	WRITABLE_REGISTRY m
	bootstrap ()V a
	internalRegister (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Ljava/util/function/Supplier;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/WritableRegistry; a
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/Object;)Ljava/lang/Object; a
	registerMapping (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; b
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lnet/minecraft/core/Registry; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;)Lnet/minecraft/core/Registry; a
net/minecraft/data/DataGenerator net/minecraft/data/DebugReportGenerator
	LOGGER a
	inputFolders b
	outputFolder c
	providers d
	addProvider (Lnet/minecraft/data/DataProvider;)V a
	getInputFolders ()Ljava/util/Collection; a
	getOutputFolder ()Ljava/nio/file/Path; b
	run ()V c
net/minecraft/data/DataProvider net/minecraft/data/DebugReportProvider
	SHA1 a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
	save (Lcom/google/gson/Gson;Lnet/minecraft/data/HashCache;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)V a
net/minecraft/data/advancements/AdvancementProvider ii
	GSON c
	LOGGER b
	generator d
	tabs e
	createPath (Ljava/nio/file/Path;Lnet/minecraft/advancements/Advancement;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/advancements/AdventureAdvancements ij
	BEDROCK_THICKNESS d
	DISTANCE_FROM_BOTTOM_TO_TOP a
	MOBS_TO_KILL e
	Y_COORDINATE_AT_BOTTOM c
	Y_COORDINATE_AT_TOP b
	accept (Ljava/util/function/Consumer;)V a
	addBiomes (Lnet/minecraft/advancements/Advancement$Builder;Ljava/util/List;)Lnet/minecraft/advancements/Advancement$Builder; a
	addMobsToKill (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
	fireCountAndBystander (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance; a
	getAllOverworldBiomes ()Ljava/util/List; a
	lookAtThroughItem (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/item/Item;)Lnet/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance; a
net/minecraft/data/advancements/HusbandryAdvancements ik
	BREEDABLE_ANIMALS a
	EDIBLE_ITEMS d
	FISH b
	FISH_BUCKETS c
	WAX_SCRAPING_TOOLS e
	accept (Ljava/util/function/Consumer;)V a
	addBreedable (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; b
	addCatVariants (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; e
	addFish (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; d
	addFishBuckets (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; c
	addFood (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
net/minecraft/data/advancements/NetherAdvancements il
	DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE b
	EXPLORABLE_BIOMES a
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/StoryAdvancements im
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/TheEndAdvancements in
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/info/BlockListReport ip
	GSON b
	generator c
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/info/CommandsReport iq
	GSON b
	generator c
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/info/RegistryDumpReport ir
	GSON b
	generator c
	dumpRegistry (Lnet/minecraft/core/Registry;)Lcom/google/gson/JsonElement; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/info/WorldgenRegistryDumpReport is
	GSON c
	LOGGER b
	generator d
	createPath (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	dumpRegistry (Ljava/nio/file/Path;Lnet/minecraft/data/HashCache;Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Registry;Lcom/mojang/serialization/Encoder;)V a
	dumpRegistryCap (Lnet/minecraft/data/HashCache;Ljava/nio/file/Path;Lnet/minecraft/core/RegistryAccess;Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/core/RegistryAccess$RegistryData;)V a
	dumpValue (Ljava/nio/file/Path;Lnet/minecraft/data/HashCache;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)V a
	getName ()Ljava/lang/String; a
	resolveTopPath (Ljava/nio/file/Path;)Ljava/nio/file/Path; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/loot/BlockLoot iu
	EXPLOSION_RESISTANT f
	HAS_NO_SHEARS_OR_SILK_TOUCH e
	HAS_NO_SILK_TOUCH b
	HAS_SHEARS c
	HAS_SHEARS_OR_SILK_TOUCH d
	HAS_SILK_TOUCH a
	JUNGLE_LEAVES_SAPLING_CHANGES h
	NORMAL_LEAVES_SAPLING_CHANCES g
	map i
	accept (Ljava/util/function/BiConsumer;)V a
	add (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V a
	add (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	addNetherVinesDropTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V c
	applyExplosionCondition (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder;)Ljava/lang/Object; a
	applyExplosionDecay (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder;)Ljava/lang/Object; a
	createAttachedStemDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createBannerDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; k
	createBeeHiveDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; m
	createBeeNestDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; l
	createCandleCakeDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; s
	createCandleDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; r
	createCaveVinesDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; n
	createCopperOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; h
	createCropDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createDoorTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createDoublePlantShearsDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; q
	createDoublePlantWithSeedDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createGlowLichenDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; p
	createGrassDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; o
	createLapisOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; i
	createLeavesDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createMushroomBlockDrop (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createNameableBlockEntityTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; f
	createOakLeavesDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createOreDrop (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createPotFlowerItemTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createRedstoneOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; j
	createSelfDropDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createShearsDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createShearsOnlyDrop (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; d
	createShulkerBoxDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; g
	createSilkTouchDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSilkTouchOnlyTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createSilkTouchOrShearsDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createSingleItemTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTable (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTableWithSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createSingleItemTableWithSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSinglePropConditionTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSlabItemTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; e
	createStemDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	dropOther (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)V a
	dropPottedContents (Lnet/minecraft/world/level/block/Block;)V b
	dropSelf (Lnet/minecraft/world/level/block/Block;)V d
	dropWhenSilkTouch (Lnet/minecraft/world/level/block/Block;)V c
	noDrop ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	otherWhenSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/data/loot/ChestLoot iv
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/EntityLoot iw
	ENTITY_ON_FIRE a
	SPECIAL_LOOT_TABLE_TYPES b
	map c
	accept (Ljava/util/function/BiConsumer;)V a
	add (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	add (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	createSheepTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
net/minecraft/data/loot/FishingLoot ix
	IN_BAMBOO_JUNGLE c
	IN_JUNGLE a
	IN_SPARSE_JUNGLE b
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/GiftLoot iy
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/LootTableProvider iz
	GSON c
	LOGGER b
	generator d
	subProviders e
	createPath (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/loot/PiglinBarterLoot ja
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/models/BlockModelGenerators jc
	MULTIFACE_GENERATOR a
	SHAPE_CONSUMERS h
	blockStateOutput b
	fullBlockModelCustomGenerators f
	modelOutput c
	nonOrientableTrapdoor e
	skippedAutoModelsOutput d
	texturedModels g
	applyRotation (Lnet/minecraft/core/FrontAndTop;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant; a
	blockEntityModels (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	blockEntityModels (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; d
	configureDoorHalf (Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4;Lnet/minecraft/world/level/block/state/properties/DoubleBlockHalf;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	copyModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V h
	createActiveRail (Lnet/minecraft/world/level/block/Block;)V m
	createAirLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V f
	createAirLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)V a
	createAmethystCluster (Lnet/minecraft/world/level/block/Block;)V t
	createAmethystClusters ()V D
	createAnvil (Lnet/minecraft/world/level/block/Block;)V o
	createAxisAlignedPillarBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V a
	createAxisAlignedPillarBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createAxisAlignedPillarBlockCustomModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V e
	createAzalea (Lnet/minecraft/world/level/block/Block;)V p
	createBamboo ()V k
	createBambooModels (I)Ljava/util/List; a
	createBarrel ()V m
	createBedItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V j
	createBeeNest (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V a
	createBell ()V n
	createBigDripLeafBlock ()V g
	createBookshelf ()V p
	createBooleanModelDispatch (Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	createBrewingStand ()V t
	createButton (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createCakeBlock ()V u
	createCampfires ([Lnet/minecraft/world/level/block/Block;)V a
	createCandleAndCandleCake (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V l
	createCartographyTable ()V v
	createCauldrons ()V y
	createCaveVines ()V Z
	createChorusFlower ()V z
	createChorusPlant ()V B
	createCocoa ()V M
	createColoredBlockWithRandomRotations (Lnet/minecraft/data/models/model/TexturedModel$Provider;[Lnet/minecraft/world/level/block/Block;)V a
	createColoredBlockWithStateRotations (Lnet/minecraft/data/models/model/TexturedModel$Provider;[Lnet/minecraft/world/level/block/Block;)V b
	createColumnWithFacing ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; l
	createCommandBlock (Lnet/minecraft/world/level/block/Block;)V n
	createComparator ()V r
	createComposter ()V C
	createCoral (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createCoralFans (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V b
	createCraftingTableLike (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiFunction;)V a
	createCropBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;[I)V a
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V b
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/data/models/model/TextureMapping;)V b
	createCrossBlockWithDefaultItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V a
	createCrossBlockWithDefaultItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createDaylightDetector ()V F
	createDirtPath ()V N
	createDispenserBlock (Lnet/minecraft/world/level/block/Block;)V s
	createDoor (Lnet/minecraft/world/level/block/Block;)V g
	createDoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createDoubleBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)V f
	createDoublePlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V c
	createEmptyOrFullDispatch (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	createEndPortalFrame ()V A
	createFacingDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; e
	createFarmland ()V H
	createFence (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createFenceGate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createFire ()V I
	createFloorFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; w
	createFrostedIce ()V K
	createFullAndCarpetBlocks (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V e
	createFurnace (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V d
	createGlassBlocks (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V f
	createGrassBlocks ()V L
	createGrassLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/blockstates/Variant;)V a
	createGrindstone ()V o
	createGrowingPlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V b
	createHopper ()V O
	createHorizontalFacingDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	createHorizontalFacingDispatchAlt ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; c
	createHorizontallyRotatedBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V b
	createInfestedDeepslate ()V an
	createInfestedStone ()V am
	createIronBars ()V P
	createJigsaw ()V ap
	createLantern (Lnet/minecraft/world/level/block/Block;)V z
	createLever ()V Q
	createLightBlock ()V ar
	createLightningRod ()V G
	createLilyPad ()V R
	createMagmaBlock ()V al
	createMirroredColumnGenerator (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createMirroredCubeGenerator (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createMultiface (Lnet/minecraft/world/level/block/Block;)V B
	createMushroomBlock (Lnet/minecraft/world/level/block/Block;)V r
	createNetherPortalBlock ()V S
	createNetherRoots (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V k
	createNetherrack ()V T
	createNonTemplateHorizontalBlock (Lnet/minecraft/world/level/block/Block;)V A
	createNonTemplateModelBlock (Lnet/minecraft/world/level/block/Block;)V k
	createNonTemplateModelBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createNormalTorch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V i
	createNyliumBlock (Lnet/minecraft/world/level/block/Block;)V u
	createObserver ()V U
	createOrientableTrapdoor (Lnet/minecraft/world/level/block/Block;)V h
	createOrientableTrapdoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createPassiveRail (Lnet/minecraft/world/level/block/Block;)V l
	createPetrifiedOakSlab ()V aq
	createPistonHeads ()V W
	createPistonVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createPistons ()V V
	createPlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V a
	createPointedDripstone ()V E
	createPointedDripstoneVariant (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)Lnet/minecraft/data/models/blockstates/Variant; a
	createPottedAzalea (Lnet/minecraft/world/level/block/Block;)V q
	createPressurePlate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; e
	createPumpkinVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createPumpkins ()V x
	createRedstoneLamp ()V aa
	createRedstoneTorch ()V ab
	createRedstoneWire ()V q
	createRepeater ()V ac
	createRespawnAnchor ()V ao
	createRotatableColumn (Lnet/minecraft/world/level/block/Block;)V v
	createRotatedMirroredVariantBlock (Lnet/minecraft/world/level/block/Block;)V c
	createRotatedPillar ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; f
	createRotatedPillarWithHorizontalVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V a
	createRotatedPillarWithHorizontalVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createRotatedVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; b
	createRotatedVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	createRotatedVariantBlock (Lnet/minecraft/world/level/block/Block;)V d
	createRotatedVariants (Lnet/minecraft/resources/ResourceLocation;)[Lnet/minecraft/data/models/blockstates/Variant; a
	createScaffolding ()V Y
	createSculkSensor ()V X
	createSeaPickle ()V ad
	createShulkerBox (Lnet/minecraft/world/level/block/Block;)V C
	createSideFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; x
	createSimpleBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; c
	createSimpleFlatItemModel (Lnet/minecraft/world/item/Item;)V a
	createSimpleFlatItemModel (Lnet/minecraft/world/level/block/Block;)V b
	createSimpleFlatItemModel (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)V a
	createSlab (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; e
	createSmallDripleaf ()V j
	createSmithingTable ()V w
	createSmoothStoneSlab ()V s
	createSnowBlocks ()V ae
	createSoulFire ()V J
	createStairs (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createStems (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V c
	createStonecutter ()V af
	createStructureBlock ()V ag
	createSuffixedVariant (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/ModelTemplate;Ljava/util/function/Function;)Lnet/minecraft/resources/ResourceLocation; a
	createSunflower ()V h
	createSweetBerryBush ()V ah
	createTallSeagrass ()V i
	createTopFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; y
	createTorchHorizontalDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; d
	createTrapdoor (Lnet/minecraft/world/level/block/Block;)V i
	createTrapdoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createTripwire ()V ai
	createTripwireHook ()V aj
	createTrivialBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	createTrivialBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V c
	createTrivialCube (Lnet/minecraft/world/level/block/Block;)V e
	createTurtleEgg ()V ak
	createTurtleEggModel (ILjava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;)Lnet/minecraft/resources/ResourceLocation; a
	createTurtleEggModel (Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/resources/ResourceLocation; a
	createWall (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createWeightedPressurePlate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V g
	delegateItemModel (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)V a
	delegateItemModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V a
	family (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; f
	run ()V a
	skipAutoItemBlock (Lnet/minecraft/world/level/block/Block;)V a
	woodProvider (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; j
	wrapModels (Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List; a
net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator jc$a
	baseModel b
	create ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	createWithCustomBlockItemModel (Lnet/minecraft/data/models/model/ModelTemplate;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	createWithoutBlockItem ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; b
net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider jc$b
	family d
	fullBlock e
	mapping b
	models c
	button (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; j
	fence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; c
	fenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; d
	fullBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/ModelTemplate;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	fullBlockCopies ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	fullBlockVariant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; i
	generateFor (Lnet/minecraft/data/BlockFamily;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	getOrCreateModel (Lnet/minecraft/data/models/model/ModelTemplate;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; a
	pressurePlate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; e
	sign (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; f
	slab (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; g
	stairs (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; h
	trapdoor (Lnet/minecraft/world/level/block/Block;)V k
	wall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; b
net/minecraft/data/models/BlockModelGenerators$BlockStateGeneratorSupplier jc$c
net/minecraft/data/models/BlockModelGenerators$TintState jc$d
	$VALUES c
	NOT_TINTED b
	TINTED a
	$values ()[Lnet/minecraft/data/models/BlockModelGenerators$TintState; c
	getCross ()Lnet/minecraft/data/models/model/ModelTemplate; a
	getCrossPot ()Lnet/minecraft/data/models/model/ModelTemplate; b
net/minecraft/data/models/BlockModelGenerators$WoodProvider jc$e
	logMapping b
	log (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; b
	logWithHorizontal (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; c
	wood (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; a
net/minecraft/data/models/ItemModelGenerators jd
	output a
	generateFlatItem (Lnet/minecraft/world/item/Item;Ljava/lang/String;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	run ()V a
net/minecraft/data/models/ModelProvider je
	GSON c
	LOGGER b
	generator d
	createBlockStatePath (Ljava/nio/file/Path;Lnet/minecraft/world/level/block/Block;)Ljava/nio/file/Path; a
	createModelPath (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
	saveCollection (Lnet/minecraft/data/HashCache;Ljava/nio/file/Path;Ljava/util/Map;Ljava/util/function/BiFunction;)V a
net/minecraft/data/models/blockstates/BlockStateGenerator jf
	getBlock ()Lnet/minecraft/world/level/block/Block; a
net/minecraft/data/models/blockstates/Condition jg
	and ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition; a
	condition ()Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	or ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition; b
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/Condition$CompositeCondition jg$a
	operation a
	subconditions b
	get ()Lcom/google/gson/JsonElement; b
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/Condition$Operation jg$b
	$VALUES d
	AND a
	OR b
	id c
	$values ()[Lnet/minecraft/data/models/blockstates/Condition$Operation; a
net/minecraft/data/models/blockstates/Condition$TerminalCondition jg$c
	terms a
	get ()Lcom/google/gson/JsonElement; b
	getTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String; c
	joinValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/stream/Stream;)Ljava/lang/String; a
	negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; b
	negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; b
	putValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)V a
	term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiPartGenerator jh
	block a
	parts b
	get ()Lcom/google/gson/JsonElement; b
	getBlock ()Lnet/minecraft/world/level/block/Block; a
	multiPart (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry jh$a
	condition a
	decorate (Lcom/google/gson/JsonObject;)V a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiPartGenerator$Entry jh$b
	variants a
	decorate (Lcom/google/gson/JsonObject;)V a
	get ()Lcom/google/gson/JsonElement; a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiVariantGenerator ji
	baseVariants b
	block a
	declaredPropertySets d
	seenProperties c
	get ()Lcom/google/gson/JsonElement; b
	getBlock ()Lnet/minecraft/world/level/block/Block; a
	mergeVariants (Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	multiVariant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	multiVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	multiVariant (Lnet/minecraft/world/level/block/Block;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	with (Lnet/minecraft/data/models/blockstates/PropertyDispatch;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
net/minecraft/data/models/blockstates/PropertyDispatch jj
	values a
	getDefinedProperties ()Ljava/util/List; b
	getEntries ()Ljava/util/Map; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
	property (Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
	putValue (Lnet/minecraft/data/models/blockstates/Selector;Ljava/util/List;)V a
	verifyComplete ()V c
net/minecraft/data/models/blockstates/PropertyDispatch$C1 jj$a
	property1 a
	generate (Ljava/util/function/Function;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Ljava/util/function/Function;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
	select (Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
net/minecraft/data/models/blockstates/PropertyDispatch$C2 jj$b
	property1 a
	property2 b
	generate (Ljava/util/function/BiFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Ljava/util/function/BiFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
net/minecraft/data/models/blockstates/PropertyDispatch$C3 jj$c
	property1 a
	property2 b
	property3 c
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$TriFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$TriFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
net/minecraft/data/models/blockstates/PropertyDispatch$C4 jj$d
	property1 a
	property2 b
	property3 c
	property4 d
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
net/minecraft/data/models/blockstates/PropertyDispatch$C5 jj$e
	property1 a
	property2 b
	property3 c
	property4 d
	property5 e
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction jj$f
net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction jj$g
net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction jj$h
net/minecraft/data/models/blockstates/Selector jk
	COMPARE_BY_NAME b
	EMPTY a
	values c
	empty ()Lnet/minecraft/data/models/blockstates/Selector; a
	extend (Lnet/minecraft/data/models/blockstates/Selector;)Lnet/minecraft/data/models/blockstates/Selector; a
	extend (Lnet/minecraft/world/level/block/state/properties/Property$Value;)Lnet/minecraft/data/models/blockstates/Selector; a
	getKey ()Ljava/lang/String; b
	of ([Lnet/minecraft/world/level/block/state/properties/Property$Value;)Lnet/minecraft/data/models/blockstates/Selector; a
net/minecraft/data/models/blockstates/Variant jl
	values a
	convertList (Ljava/util/List;)Lcom/google/gson/JsonElement; a
	get ()Lcom/google/gson/JsonElement; b
	merge (Lnet/minecraft/data/models/blockstates/Variant;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant; a
	variant ()Lnet/minecraft/data/models/blockstates/Variant; a
	with (Lnet/minecraft/data/models/blockstates/VariantProperty;Ljava/lang/Object;)Lnet/minecraft/data/models/blockstates/Variant; a
net/minecraft/data/models/blockstates/VariantProperties jm
	MODEL c
	UV_LOCK d
	WEIGHT e
	X_ROT a
	Y_ROT b
net/minecraft/data/models/blockstates/VariantProperties$Rotation jm$a
	$VALUES f
	R0 a
	R180 c
	R270 d
	R90 b
	value e
	$values ()[Lnet/minecraft/data/models/blockstates/VariantProperties$Rotation; a
net/minecraft/data/models/blockstates/VariantProperty jn
	key a
	serializer b
	withValue (Ljava/lang/Object;)Lnet/minecraft/data/models/blockstates/VariantProperty$Value; a
net/minecraft/data/models/blockstates/VariantProperty$Value jn$a
	value b
	addToVariant (Lcom/google/gson/JsonObject;)V a
	getKey ()Lnet/minecraft/data/models/blockstates/VariantProperty; a
net/minecraft/data/models/model/DelegatedModel jp
	parent a
	get ()Lcom/google/gson/JsonElement; a
net/minecraft/data/models/model/ModelLocationUtils jq
	decorateBlockModelLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	decorateItemModelLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; b
	getModelLocation (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/data/models/model/ModelTemplate jr
	model a
	requiredSlots b
	suffix c
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	create (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createMap (Lnet/minecraft/data/models/model/TextureMapping;)Ljava/util/Map; a
	createWithOverride (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; b
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/data/models/model/ModelTemplates js
	ANVIL ao
	ATTACHED_STEM aq
	AZALEA aP
	BANNER_INVENTORY aW
	BED_INVENTORY aV
	BUTTON m
	BUTTON_INVENTORY o
	BUTTON_PRESSED n
	CAMPFIRE ay
	CANDLE aY
	CANDLE_CAKE bc
	CARPET ac
	CAULDRON_FULL aO
	CAULDRON_LEVEL1 aM
	CAULDRON_LEVEL2 aN
	CHORUS_FLOWER ag
	COMMAND_BLOCK an
	CORAL_FAN ad
	CORAL_WALL_FAN ae
	CROP ar
	CROSS U
	CUBE a
	CUBE_ALL c
	CUBE_BOTTOM_TOP i
	CUBE_COLUMN e
	CUBE_COLUMN_HORIZONTAL f
	CUBE_COLUMN_MIRRORED g
	CUBE_DIRECTIONAL b
	CUBE_MIRRORED_ALL d
	CUBE_ORIENTABLE j
	CUBE_ORIENTABLE_TOP_BOTTOM k
	CUBE_ORIENTABLE_VERTICAL l
	CUBE_TOP h
	DAYLIGHT_DETECTOR ah
	DOOR_BOTTOM p
	DOOR_BOTTOM_HINGE q
	DOOR_TOP r
	DOOR_TOP_HINGE s
	FARMLAND as
	FENCE_GATE_CLOSED A
	FENCE_GATE_OPEN B
	FENCE_GATE_WALL_CLOSED C
	FENCE_GATE_WALL_OPEN D
	FENCE_INVENTORY v
	FENCE_POST t
	FENCE_SIDE u
	FIRE_FLOOR at
	FIRE_SIDE au
	FIRE_SIDE_ALT av
	FIRE_UP aw
	FIRE_UP_ALT ax
	FLAT_HANDHELD_ITEM aS
	FLAT_HANDHELD_ROD_ITEM aT
	FLAT_ITEM aR
	FLOWER_POT_CROSS W
	FOUR_CANDLES bb
	FOUR_TURTLE_EGGS aK
	GLAZED_TERRACOTTA af
	HANGING_LANTERN aA
	LANTERN az
	LEAVES J
	ORIENTABLE_TRAPDOOR_BOTTOM R
	ORIENTABLE_TRAPDOOR_OPEN S
	ORIENTABLE_TRAPDOOR_TOP Q
	PARTICLE_ONLY G
	PISTON aD
	PISTON_HEAD aE
	PISTON_HEAD_SHORT aF
	POINTED_DRIPSTONE T
	POTTED_AZALEA aQ
	PRESSURE_PLATE_DOWN F
	PRESSURE_PLATE_UP E
	RAIL_CURVED Z
	RAIL_FLAT Y
	RAIL_RAISED_NE aa
	RAIL_RAISED_SW ab
	SEAGRASS aG
	SHULKER_BOX_INVENTORY aU
	SINGLE_FACE aL
	SKULL_INVENTORY aX
	SLAB_BOTTOM H
	SLAB_TOP I
	STAINED_GLASS_PANE_NOSIDE ai
	STAINED_GLASS_PANE_NOSIDE_ALT aj
	STAINED_GLASS_PANE_POST ak
	STAINED_GLASS_PANE_SIDE al
	STAINED_GLASS_PANE_SIDE_ALT am
	STAIRS_INNER L
	STAIRS_OUTER M
	STAIRS_STRAIGHT K
	STEMS ap
	THREE_CANDLES ba
	THREE_TURTLE_EGGS aJ
	TINTED_CROSS V
	TINTED_FLOWER_POT_CROSS X
	TORCH aB
	TRAPDOOR_BOTTOM O
	TRAPDOOR_OPEN P
	TRAPDOOR_TOP N
	TURTLE_EGG aH
	TWO_CANDLES aZ
	TWO_TURTLE_EGGS aI
	WALL_INVENTORY z
	WALL_LOW_SIDE x
	WALL_POST w
	WALL_TALL_SIDE y
	WALL_TORCH aC
	create (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	create (Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	create ([Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	createItem (Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; b
net/minecraft/data/models/model/TextureMapping jt
	forcedSlots b
	slots a
	attachedStem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; a
	campfire (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; A
	candleCake (Lnet/minecraft/world/level/block/Block;Z)Lnet/minecraft/data/models/model/TextureMapping; a
	cauldron (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; j
	column (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	column (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; j
	columnWithWall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; o
	commandBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; v
	copyAndUpdate (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	copyForced (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureMapping; b
	copySlot (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureMapping; a
	craftingTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; c
	crop (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; g
	cross (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	cross (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; c
	cube (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	cube (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; a
	cubeBottomTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; m
	cubeBottomTopWithWall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; n
	cubeTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; k
	defaultTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	defaultTexture (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; b
	door (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; p
	fan (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; i
	fire0 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; r
	fire1 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; s
	fletchingTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; d
	get (Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/resources/ResourceLocation; a
	getBlockTexture (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; C
	getBlockTexture (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getForced ()Ljava/util/stream/Stream; a
	getItemTexture (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation; c
	getItemTexture (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	lantern (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; t
	layer0 (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; k
	layer0 (Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/models/model/TextureMapping; b
	layer0 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; B
	logColumn (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; l
	orientableCube (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; w
	orientableCubeOnlyTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; x
	orientableCubeSameEnds (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; y
	pane (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; b
	particle (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; h
	particle (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; q
	particleFromItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/models/model/TextureMapping; a
	pattern (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; h
	plant (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; d
	plant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; d
	put (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	putForced (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	rail (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; e
	rail (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; e
	singleSlot (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; d
	stem (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; g
	top (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; z
	torch (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; i
	torch (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; u
	wool (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; f
	wool (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; f
net/minecraft/data/models/model/TextureSlot ju
	ALL a
	BACK h
	BOTTOM e
	CANDLE J
	CONTENT L
	CROP A
	CROSS p
	DIRT B
	DOWN o
	EAST l
	EDGE w
	END d
	FAN x
	FIRE C
	FRONT g
	INSIDE K
	LANTERN D
	LAYER0 H
	LIT_LOG I
	NORTH j
	PANE v
	PARTICLE c
	PATTERN u
	PLANT q
	PLATFORM E
	RAIL s
	SIDE i
	SOUTH k
	STEM y
	TEXTURE b
	TOP f
	TORCH G
	UNSTICKY F
	UP n
	UPPER_STEM z
	WALL r
	WEST m
	WOOL t
	id M
	parent N
	create (Ljava/lang/String;)Lnet/minecraft/data/models/model/TextureSlot; a
	create (Ljava/lang/String;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureSlot; a
	getId ()Ljava/lang/String; a
	getParent ()Lnet/minecraft/data/models/model/TextureSlot; b
net/minecraft/data/models/model/TexturedModel jv
	ANVIL m
	CARPET i
	COLUMN c
	COLUMN_ALT r
	COLUMN_HORIZONTAL d
	COLUMN_HORIZONTAL_ALT s
	COLUMN_WITH_WALL u
	CORAL_FAN k
	CUBE a
	CUBE_MIRRORED b
	CUBE_TOP f
	CUBE_TOP_BOTTOM e
	GLAZED_TERRACOTTA j
	HANGING_LANTERN p
	LANTERN o
	LEAVES n
	ORIENTABLE h
	ORIENTABLE_ONLY_TOP g
	PARTICLE_ONLY l
	SEAGRASS q
	TOP_BOTTOM_WITH_WALL t
	mapping v
	template w
	create (Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createAllSame (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TexturedModel; a
	createDefault (Ljava/util/function/Function;Lnet/minecraft/data/models/model/ModelTemplate;)Lnet/minecraft/data/models/model/TexturedModel$Provider; a
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	getMapping ()Lnet/minecraft/data/models/model/TextureMapping; b
	getTemplate ()Lnet/minecraft/data/models/model/ModelTemplate; a
	updateTextures (Ljava/util/function/Consumer;)Lnet/minecraft/data/models/model/TexturedModel; a
net/minecraft/data/models/model/TexturedModel$Provider jv$a
net/minecraft/data/recipes/FinishedRecipe jz
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipe ()Lcom/google/gson/JsonObject; a
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/RecipeBuilder ka
	getDefaultRecipeId (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/resources/ResourceLocation; a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	save (Ljava/util/function/Consumer;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
net/minecraft/data/recipes/RecipeProvider kb
	COAL_SMELTABLES d
	COPPER_SMELTABLES f
	DIAMOND_SMELTABLES h
	EMERALD_SMELTABLES k
	GOLD_SMELTABLES g
	GSON c
	IRON_SMELTABLES e
	LAPIS_SMELTABLES i
	LOGGER b
	REDSTONE_SMELTABLES j
	generator l
	shapeBuilders m
	banner (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V o
	bedFromPlanksAndWool (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V m
	bedFromWhiteBedAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V n
	buildCraftingRecipes (Ljava/util/function/Consumer;)V a
	buttonBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; e
	candle (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V a
	carpet (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V k
	chiseled (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V e
	chiseledBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; d
	coloredCarpetFromWhiteCarpetAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V l
	coloredTerracottaFromTerracottaAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V s
	coloredWoolFromWhiteWoolAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V j
	concretePowder (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V t
	cookRecipes (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/world/item/crafting/SimpleCookingSerializer;I)V a
	cut (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V d
	cutBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; c
	doorBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; f
	fenceBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; g
	fenceGateBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; h
	generateRecipes (Ljava/util/function/Consumer;Lnet/minecraft/data/BlockFamily;)V a
	getBaseBlock (Lnet/minecraft/data/BlockFamily;Lnet/minecraft/data/BlockFamily$Variant;)Lnet/minecraft/world/level/block/Block; a
	getBlastingRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; f
	getConversionRecipeName (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; a
	getHasName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; b
	getItemName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; c
	getName ()Ljava/lang/String; a
	getSimpleRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; d
	getSmeltingRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; e
	has (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	has (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	has (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	insideOf (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	inventoryTrigger ([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	netheriteSmithing (Ljava/util/function/Consumer;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)V a
	nineBlockStorageRecipes (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V w
	nineBlockStorageRecipes (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V a
	nineBlockStorageRecipesRecipesWithCustomUnpacking (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;)V b
	nineBlockStorageRecipesWithCustomPacking (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;)V a
	oneToOneConversionRecipe (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;)V a
	oneToOneConversionRecipe (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;I)V a
	oreBlasting (Ljava/util/function/Consumer;Ljava/util/List;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;)V b
	oreCooking (Ljava/util/function/Consumer;Lnet/minecraft/world/item/crafting/SimpleCookingSerializer;Ljava/util/List;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;Ljava/lang/String;)V a
	oreSmelting (Ljava/util/function/Consumer;Ljava/util/List;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;)V a
	planksFromLog (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/Tag;)V a
	planksFromLogs (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/Tag;)V b
	polished (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V c
	polishedBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; b
	pressurePlate (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V h
	pressurePlateBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; i
	run (Lnet/minecraft/data/HashCache;)V a
	saveAdvancement (Lnet/minecraft/data/HashCache;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V b
	saveRecipe (Lnet/minecraft/data/HashCache;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V a
	signBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; m
	simpleCookingRecipe (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/world/item/crafting/SimpleCookingSerializer;ILnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;F)V a
	slab (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V i
	slabBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; j
	smeltingResultFromBase (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V v
	stainedGlassFromGlassAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V p
	stainedGlassPaneFromGlassPaneAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V r
	stainedGlassPaneFromStainedGlass (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V q
	stairBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; k
	stonecutterResultFromBase (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V u
	stonecutterResultFromBase (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;I)V a
	trapdoorBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; l
	wall (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V b
	wallBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	waxRecipes (Ljava/util/function/Consumer;)V b
	woodFromLogs (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V f
	woodenBoat (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V g
net/minecraft/data/recipes/ShapedRecipeBuilder kc
	advancement e
	count b
	group f
	key d
	result a
	rows c
	define (Ljava/lang/Character;Lnet/minecraft/tags/Tag;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	define (Ljava/lang/Character;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	define (Ljava/lang/Character;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; c
	pattern (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	shaped (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
	shaped (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
net/minecraft/data/recipes/ShapedRecipeBuilder$Result kc$a
	advancement g
	advancementId h
	count c
	group d
	id a
	key f
	pattern e
	result b
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/ShapelessRecipeBuilder kd
	advancement d
	count b
	group e
	ingredients c
	result a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	requires (Lnet/minecraft/tags/Tag;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/item/crafting/Ingredient;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; c
	requires (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	shapeless (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	shapeless (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
net/minecraft/data/recipes/ShapelessRecipeBuilder$Result kd$a
	advancement f
	advancementId g
	count c
	group d
	id a
	ingredients e
	result b
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SimpleCookingRecipeBuilder ke
	advancement e
	cookingTime d
	experience c
	group f
	ingredient b
	result a
	serializer g
	blasting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
	campfireCooking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	cooking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FILnet/minecraft/world/item/crafting/SimpleCookingSerializer;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	smelting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; c
	smoking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; d
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result ke$a
	advancement g
	advancementId h
	cookingTime f
	experience e
	group b
	id a
	ingredient c
	result d
	serializer i
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SingleItemRecipeBuilder kf
	advancement d
	count c
	group e
	ingredient b
	result a
	type f
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	stonecutting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	stonecutting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; b
net/minecraft/data/recipes/SingleItemRecipeBuilder$Result kf$a
	advancement f
	advancementId g
	count e
	group b
	id a
	ingredient c
	result d
	type h
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SpecialRecipeBuilder kg
	serializer a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	special (Lnet/minecraft/world/item/crafting/SimpleRecipeSerializer;)Lnet/minecraft/data/recipes/SpecialRecipeBuilder; a
net/minecraft/data/recipes/UpgradeRecipeBuilder kh
	addition b
	advancement d
	base a
	result c
	type e
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	smithing (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/recipes/UpgradeRecipeBuilder; a
	unlocks (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/UpgradeRecipeBuilder; a
net/minecraft/data/recipes/UpgradeRecipeBuilder$Result kh$a
	addition c
	advancement e
	advancementId f
	base b
	id a
	result d
	type g
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/structures/NbtToSnbt net/minecraft/data/structures/DebugReportNBT
	LOGGER b
	generator c
	convertStructure (Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	getName (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
	writeSnbt (Ljava/nio/file/Path;Ljava/lang/String;)V a
net/minecraft/data/structures/SnbtToNbt$Filter kk$a
net/minecraft/data/structures/SnbtToNbt$StructureConversionException kk$b
net/minecraft/data/structures/SnbtToNbt$TaskResult kk$c
	hash d
	name a
	payload b
	snbtPayload c
net/minecraft/data/tags/BlockTagsProvider kn
	addTags ()V b
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/EntityTypeTagsProvider ko
	addTags ()V b
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/FluidTagsProvider kp
	addTags ()V b
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/GameEventTagsProvider kq
	addTags ()V b
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/ItemTagsProvider kr
	blockTags d
	addTags ()V b
	copy (Lnet/minecraft/tags/Tag$Named;Lnet/minecraft/tags/Tag$Named;)V a
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/TagsProvider ks
	GSON e
	LOGGER d
	builders f
	generator b
	registry c
	addTags ()V b
	getOrCreateRawBuilder (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/tags/Tag$Builder; b
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	run (Lnet/minecraft/data/HashCache;)V a
	tag (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
net/minecraft/data/tags/TagsProvider$TagAppender ks$a
	builder a
	registry b
	source c
	add (Ljava/lang/Object;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	add ([Ljava/lang/Object;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	addOptional (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	addOptionalTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; b
	addTag (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
net/minecraft/data/worldgen/BastionBridgePools net/minecraft/data/worldgen/WorldGenFeatureBastionBridge
	bootstrap ()V a
net/minecraft/data/worldgen/BastionHoglinStablePools net/minecraft/data/worldgen/WorldGenFeatureBastionHoglinStable
	bootstrap ()V a
net/minecraft/data/worldgen/BastionHousingUnitsPools net/minecraft/data/worldgen/WorldGenFeatureBastionUnits
	bootstrap ()V a
net/minecraft/data/worldgen/BastionPieces net/minecraft/data/worldgen/WorldGenFeatureBastionPieces
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/BastionSharedPools net/minecraft/data/worldgen/WorldGenFeatureBastionExtra
	bootstrap ()V a
net/minecraft/data/worldgen/BastionTreasureRoomPools net/minecraft/data/worldgen/WorldGenFeatureBastionTreasure
	bootstrap ()V a
net/minecraft/data/worldgen/BiomeDefaultFeatures net/minecraft/data/worldgen/BiomeSettings
	addAncientDebris (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ar
	addBadlandExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aa
	addBadlandGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V K
	addBadlandsTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V E
	addBambooVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V p
	addBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V t
	addBlueIce (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ao
	addColdOceanExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ai
	addCommonBerryBushes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V n
	addDefaultCarversAndLakes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V a
	addDefaultCrystalFormations (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V as
	addDefaultExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Z
	addDefaultFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V S
	addDefaultGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V V
	addDefaultMonsterRoom (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V b
	addDefaultMushrooms (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Y
	addDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V e
	addDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;Z)V a
	addDefaultSeagrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aj
	addDefaultSoftDisks (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V i
	addDefaultSprings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V al
	addDefaultUndergroundVariety (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V c
	addDesertExtraDecoration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ag
	addDesertExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ae
	addDesertVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Q
	addDripstone (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V d
	addExtraEmeralds (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V g
	addExtraGold (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V f
	addFerns (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V l
	addForestFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V L
	addForestGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V M
	addFossilDecoration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ah
	addFrozenSprings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V am
	addGiantTaigaVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V R
	addGroveTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V r
	addIcebergs (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V an
	addInfestedStone (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V h
	addJungleGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V G
	addJungleMelons (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ab
	addJungleTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V C
	addJungleVines (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ad
	addLightBambooVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V o
	addLukeWarmKelp (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ak
	addLushCavesSpecialOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V z
	addLushCavesVegetationFeatures (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V y
	addMeadowVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V T
	addMossyStoneBlock (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V k
	addMountainForestTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V B
	addMountainTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V A
	addMushroomFieldVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V O
	addNetherDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aq
	addOtherBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V u
	addPlainGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V X
	addPlainVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V P
	addRareBerryBushes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V m
	addSavannaExtraGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V J
	addSavannaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V H
	addSavannaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V w
	addShatteredSavannaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V I
	addShatteredSavannaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V x
	addSnowyTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V F
	addSparseJungleMelons (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ac
	addSparseJungleTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V D
	addSurfaceFreezing (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ap
	addSwampClayDisk (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V j
	addSwampExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V af
	addSwampVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V N
	addTaigaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V W
	addTaigaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V q
	addTallBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V v
	addWarmFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V U
	addWaterTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V s
	baseJungleSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V i
	caveSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V b
	commonSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V c
	desertSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V f
	dripstoneCavesSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V g
	endSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V j
	farmAnimals (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V a
	monsters (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;IIIZ)V a
	mooshroomSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V h
	oceanSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;III)V a
	plainsSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V d
	snowySpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V e
	warmOceanSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;II)V a
net/minecraft/data/worldgen/Carvers net/minecraft/data/worldgen/WorldGenCarvers
	CANYON c
	CAVE a
	CAVE_EXTRA_UNDERGROUND b
	NETHER_CAVE d
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver;)Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver; a
net/minecraft/data/worldgen/DesertVillagePools net/minecraft/data/worldgen/WorldGenFeatureDesertVillage
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/PillagerOutpostPools net/minecraft/data/worldgen/WorldGenFeaturePillagerOutpostPieces
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/PlainVillagePools net/minecraft/data/worldgen/WorldGenFeatureVillagePlain
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/Pools net/minecraft/data/worldgen/WorldGenFeaturePieces
	BUILTIN_EMPTY b
	EMPTY a
	bootstrap ()Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool; a
	register (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool;)Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool; a
net/minecraft/data/worldgen/SavannaVillagePools net/minecraft/data/worldgen/WorldGenFeatureVillageSavanna
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/SnowyVillagePools net/minecraft/data/worldgen/WorldGenFeatureVillageSnowy
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/TaigaVillagePools net/minecraft/data/worldgen/WorldGenFeatureVillageTaiga
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/VillagePools net/minecraft/data/worldgen/WorldGenFeatureVillages
	bootstrap ()V a
net/minecraft/data/worldgen/biome/Biomes net/minecraft/data/worldgen/biome/BiomeRegistry
	PLAINS b
	THE_VOID a
	register (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/gametest/framework/GameTestAssertException net/minecraft/gametest/framework/GameTestHarnessAssertion
net/minecraft/gametest/framework/GameTestAssertPosException net/minecraft/gametest/framework/GameTestHarnessAssertionPosition
	absolutePos a
	relativePos b
	tick c
	getAbsolutePos ()Lnet/minecraft/core/BlockPos; c
	getMessageToShowAtBlock ()Ljava/lang/String; a
	getRelativePos ()Lnet/minecraft/core/BlockPos; b
net/minecraft/gametest/framework/GameTestBatch net/minecraft/gametest/framework/GameTestHarnessBatch
	DEFAULT_BATCH_NAME a
	afterBatchFunction e
	beforeBatchFunction d
	name b
	testFunctions c
	getName ()Ljava/lang/String; a
	getTestFunctions ()Ljava/util/Collection; b
	runAfterBatchFunction (Lnet/minecraft/server/level/ServerLevel;)V b
	runBeforeBatchFunction (Lnet/minecraft/server/level/ServerLevel;)V a
net/minecraft/gametest/framework/GameTestBatchRunner net/minecraft/gametest/framework/GameTestHarnessBatchRunner
	LOGGER a
	allTestInfos f
	batches g
	firstTestNorthWestCorner b
	level c
	nextTestNorthWestCorner h
	testTicker d
	testsPerRow e
	createStructuresForBatch (Ljava/util/Collection;)Ljava/util/Map; a
	getTestInfos ()Ljava/util/List; a
	runBatch (I)V a
	start ()V b
net/minecraft/gametest/framework/GameTestEvent net/minecraft/gametest/framework/GameTestHarnessEvent
	assertion b
	expectedDelay a
	create (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestEvent; a
	create (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestEvent; a
net/minecraft/gametest/framework/GameTestHelper net/minecraft/gametest/framework/GameTestHarnessHelper
	finalCheckAdded b
	testInfo a
	absolutePos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; i
	absoluteVec (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	assertAtTickTimeContainerContains (JLnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/Item;)V a
	assertAtTickTimeContainerEmpty (JLnet/minecraft/core/BlockPos;)V a
	assertBlock (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertBlock (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V a
	assertBlockNotPresent (Lnet/minecraft/world/level/block/Block;III)V b
	assertBlockNotPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V b
	assertBlockPresent (Lnet/minecraft/world/level/block/Block;III)V a
	assertBlockPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	assertBlockProperty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)V a
	assertBlockProperty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertBlockState (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V b
	assertContainerContains (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/Item;)V a
	assertContainerEmpty (Lnet/minecraft/core/BlockPos;)V g
	assertEntityData (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Function;Ljava/lang/Object;)V a
	assertEntityInstancePresent (Lnet/minecraft/world/entity/Entity;III)V a
	assertEntityInstancePresent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;)V b
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;III)V d
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V d
	assertEntityNotTouching (Lnet/minecraft/world/entity/EntityType;DDD)V b
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;)V a
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;III)V c
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V c
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;D)V a
	assertEntityProperty (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/Object;)V a
	assertEntityProperty (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertEntityTouching (Lnet/minecraft/world/entity/EntityType;DDD)V a
	assertItemEntityCountIs (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;DI)V a
	assertItemEntityPresent (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;D)V a
	assertSameBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V a
	assertSameBlockStates (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;)V f
	ensureSingleFinalCheck ()V h
	fail (Ljava/lang/String;)V a
	fail (Ljava/lang/String;Lnet/minecraft/core/BlockPos;)V a
	fail (Ljava/lang/String;Lnet/minecraft/world/entity/Entity;)V a
	failIf (Ljava/lang/Runnable;)V c
	failIfEver (Ljava/lang/Runnable;)V d
	forEveryBlockInStructure (Ljava/util/function/Consumer;)V a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; b
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getBounds ()Lnet/minecraft/world/phys/AABB; i
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getRelativeBounds ()Lnet/minecraft/world/phys/AABB; j
	getTick ()J g
	killAllEntities ()V b
	makeAboutToDrown (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	makeMockPlayer ()Lnet/minecraft/world/entity/player/Player; c
	onEachTick (Ljava/lang/Runnable;)V e
	pressButton (III)V a
	pressButton (Lnet/minecraft/core/BlockPos;)V c
	pullLever (III)V b
	pullLever (Lnet/minecraft/core/BlockPos;)V e
	pulseRedstone (Lnet/minecraft/core/BlockPos;J)V a
	randomTick (Lnet/minecraft/core/BlockPos;)V h
	relativePos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; j
	runAfterDelay (JLjava/lang/Runnable;)V b
	runAtTickTime (JLjava/lang/Runnable;)V a
	setBlock (IIILnet/minecraft/world/level/block/Block;)V a
	setBlock (IIILnet/minecraft/world/level/block/state/BlockState;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setDayTime (I)V a
	setNight ()V d
	spawn (Lnet/minecraft/world/entity/EntityType;FFF)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;III)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/Entity; a
	spawnItem (Lnet/minecraft/world/item/Item;FFF)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;FFF)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;III)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/Mob; b
	startSequence ()Lnet/minecraft/gametest/framework/GameTestSequence; f
	succeed ()V e
	succeedIf (Ljava/lang/Runnable;)V a
	succeedOnTickWhen (ILjava/lang/Runnable;)V a
	succeedWhen (Ljava/lang/Runnable;)V b
	succeedWhenBlockPresent (Lnet/minecraft/world/level/block/Block;III)V c
	succeedWhenBlockPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V c
	succeedWhenEntityData (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Function;Ljava/lang/Object;)V b
	succeedWhenEntityNotPresent (Lnet/minecraft/world/entity/EntityType;III)V f
	succeedWhenEntityNotPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V f
	succeedWhenEntityPresent (Lnet/minecraft/world/entity/EntityType;III)V e
	succeedWhenEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V e
	useBlock (Lnet/minecraft/core/BlockPos;)V d
	walkTo (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;F)Lnet/minecraft/gametest/framework/GameTestSequence; a
net/minecraft/gametest/framework/GameTestInfo net/minecraft/gametest/framework/GameTestHarnessInfo
	done l
	error n
	level c
	listeners d
	rotation m
	runAtTickTimeMap g
	sequences f
	startTick h
	started j
	structureBlockEntity o
	structureBlockPos b
	testFunction a
	tickCount i
	timeoutTicks e
	timer k
	addListener (Lnet/minecraft/gametest/framework/GameTestListener;)V a
	clearStructure ()V o
	createSequence ()Lnet/minecraft/gametest/framework/GameTestSequence; q
	fail (Ljava/lang/Throwable;)V a
	finish ()V D
	getError ()Ljava/lang/Throwable; n
	getLevel ()Lnet/minecraft/server/level/ServerLevel; g
	getRotation ()Lnet/minecraft/world/level/block/Rotation; u
	getRunTime ()J l
	getStructureBlockEntity ()Lnet/minecraft/world/level/block/entity/StructureBlockEntity; C
	getStructureBlockPos ()Lnet/minecraft/core/BlockPos; d
	getStructureBounds ()Lnet/minecraft/world/phys/AABB; f
	getStructureName ()Ljava/lang/String; t
	getStructureSize ()Lnet/minecraft/core/Vec3i; e
	getTestFunction ()Lnet/minecraft/gametest/framework/TestFunction; v
	getTestName ()Ljava/lang/String; c
	getTick ()J p
	getTimeoutTicks ()I w
	hasFailed ()Z i
	hasStarted ()Z j
	hasSucceeded ()Z h
	isDone ()Z k
	isFlaky ()Z x
	isOptional ()Z s
	isRequired ()Z r
	maxAttempts ()I y
	requiredSuccesses ()I z
	setRunAtTickTime (JLjava/lang/Runnable;)V a
	setStructureBlockPos (Lnet/minecraft/core/BlockPos;)V a
	spawnStructure (Lnet/minecraft/core/BlockPos;I)V a
	startExecution ()V a
	startTest ()V B
	succeed ()V m
	tick ()V b
	tickInternal ()V A
net/minecraft/gametest/framework/GameTestListener net/minecraft/gametest/framework/GameTestHarnessListener
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/GameTestRegistry net/minecraft/gametest/framework/GameTestHarnessRegistry
	AFTER_BATCH_FUNCTIONS d
	BEFORE_BATCH_FUNCTIONS c
	LAST_FAILED_TESTS e
	TEST_CLASS_NAMES b
	TEST_FUNCTIONS a
	findTestFunction (Ljava/lang/String;)Ljava/util/Optional; e
	forgetFailedTests ()V d
	getAfterBatchFunction (Ljava/lang/String;)Ljava/util/function/Consumer; d
	getAllTestClassNames ()Ljava/util/Collection; b
	getAllTestFunctions ()Ljava/util/Collection; a
	getBeforeBatchFunction (Ljava/lang/String;)Ljava/util/function/Consumer; c
	getLastFailedTests ()Ljava/util/Collection; c
	getTestFunction (Ljava/lang/String;)Lnet/minecraft/gametest/framework/TestFunction; f
	getTestFunctionsForClassName (Ljava/lang/String;)Ljava/util/Collection; a
	isTestClass (Ljava/lang/String;)Z b
	isTestFunctionPartOfClass (Lnet/minecraft/gametest/framework/TestFunction;Ljava/lang/String;)Z a
	register (Ljava/lang/Class;)V a
	register (Ljava/lang/reflect/Method;)V a
	registerBatchFunction (Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map;)V a
	rememberFailedTest (Lnet/minecraft/gametest/framework/TestFunction;)V a
	turnMethodIntoConsumer (Ljava/lang/reflect/Method;)Ljava/util/function/Consumer; d
	turnMethodIntoTestFunction (Ljava/lang/reflect/Method;)Lnet/minecraft/gametest/framework/TestFunction; c
	useTestGeneratorMethod (Ljava/lang/reflect/Method;)Ljava/util/Collection; b
net/minecraft/gametest/framework/GameTestRunner net/minecraft/gametest/framework/GameTestHarnessRunner
	DEFAULT_TESTS_PER_ROW d
	MAX_TESTS_PER_BATCH e
	PADDING_AROUND_EACH_STRUCTURE a
	SPACE_BETWEEN_COLUMNS b
	SPACE_BETWEEN_ROWS c
	clearAllTests (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/GameTestTicker;I)V a
	clearMarkers (Lnet/minecraft/server/level/ServerLevel;)V a
	groupTestsIntoBatches (Ljava/util/Collection;)Ljava/util/Collection; a
	runTest (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/GameTestTicker;)V a
	runTestBatches (Ljava/util/Collection;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestTicker;I)Ljava/util/Collection; a
	runTests (Ljava/util/Collection;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestTicker;I)Ljava/util/Collection; b
net/minecraft/gametest/framework/GameTestSequence net/minecraft/gametest/framework/GameTestHarnessSequence
	events b
	lastTick c
	parent a
	executeWithoutFail (Ljava/lang/Runnable;)V c
	thenExecute (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; b
	thenExecuteAfter (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenExecuteFor (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; b
	thenFail (Ljava/util/function/Supplier;)V a
	thenIdle (I)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenSucceed ()V a
	thenTrigger ()Lnet/minecraft/gametest/framework/GameTestSequence$Condition; b
	thenWaitUntil (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenWaitUntil (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	tick (J)V c
	tickAndContinue (J)V a
	tickAndFailIfNotComplete (J)V b
net/minecraft/gametest/framework/GameTestSequence$Condition ng$a
	NOT_TRIGGERED b
	triggerTime c
	assertTriggeredThisTick ()V a
	trigger (J)V a
net/minecraft/gametest/framework/GameTestServer nh
	LOGGER r
	PROGRESS_REPORT_INTERVAL s
	TEST_GAME_RULES v
	TEST_SETTINGS w
	spawnPos u
	testBatches t
	testTracker x
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	getFunctionCompilationLevel ()I i
	getOperatorUserPermissionLevel ()I h
	getRateLimitPacketsPerSecond ()I l
	haveTestsStarted ()Z be
	initServer ()Z e
	isCommandBlockEnabled ()Z n
	isDedicatedServer ()Z k
	isEpollEnabled ()Z m
	isHardcore ()Z g
	isPublished ()Z o
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	onServerExit ()V f
	shouldInformAdmins ()Z F_
	shouldRconBroadcast ()Z j
	startTests (Lnet/minecraft/server/level/ServerLevel;)V b
	tickServer (Ljava/util/function/BooleanSupplier;)V a
net/minecraft/gametest/framework/GameTestTicker net/minecraft/gametest/framework/GameTestHarnessTicker
	SINGLETON a
	testInfos b
	add (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	clear ()V a
	tick ()V b
net/minecraft/gametest/framework/GameTestTimeoutException net/minecraft/gametest/framework/GameTestHarnessTimeout
net/minecraft/gametest/framework/JUnitLikeTestReporter nl
	destination d
	document a
	stopwatch c
	testSuite b
	createTestCase (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)Lorg/w3c/dom/Element; a
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	save (Ljava/io/File;)V a
net/minecraft/gametest/framework/LogTestReporter net/minecraft/gametest/framework/GameTestHarnessLogger
	LOGGER a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/gametest/framework/MultipleTestTracker net/minecraft/gametest/framework/GameTestHarnessCollector
	FAILED_OPTIONAL_TEST_CHAR d
	FAILED_REQUIRED_TEST_CHAR e
	NOT_STARTED_TEST_CHAR a
	ONGOING_TEST_CHAR b
	SUCCESSFUL_TEST_CHAR c
	listeners g
	tests f
	addFailureListener (Ljava/util/function/Consumer;)V a
	addListener (Lnet/minecraft/gametest/framework/GameTestListener;)V a
	addTestToTrack (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	getDoneCount ()I c
	getFailedOptional ()Ljava/util/Collection; g
	getFailedOptionalCount ()I b
	getFailedRequired ()Ljava/util/Collection; f
	getFailedRequiredCount ()I a
	getProgressBar ()Ljava/lang/String; j
	getTotalCount ()I h
	hasFailedOptional ()Z e
	hasFailedRequired ()Z d
	isDone ()Z i
net/minecraft/gametest/framework/StructureUtils net/minecraft/gametest/framework/GameTestHarnessStructures
	DEFAULT_TEST_STRUCTURES_DIR a
	HOW_MANY_CHUNKS_TO_LOAD_IN_EACH_DIRECTION_OF_STRUCTURE d
	LOGGER c
	testStructuresDir b
	addCommandBlockAndButtonToStartTest (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)V a
	clearBlock (ILnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)V a
	clearSpaceForStructure (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ILnet/minecraft/server/level/ServerLevel;)V a
	createNewEmptyStructureBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)V a
	createStructureBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Z)Lnet/minecraft/world/level/block/entity/StructureBlockEntity; a
	doesStructureContain (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
	findNearestStructureBlock (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/core/BlockPos; b
	findStructureBlockContainingPos (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	findStructureBlocks (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Ljava/util/Collection; c
	forceLoadChunks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)V a
	getRotationForRotationSteps (I)Lnet/minecraft/world/level/block/Rotation; a
	getRotationStepsForRotation (Lnet/minecraft/world/level/block/Rotation;)I a
	getStructureBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getStructureBoundingBox (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getStructureBounds (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/world/phys/AABB; a
	getStructureTemplate (Ljava/lang/String;Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	main ([Ljava/lang/String;)V a
	spawnStructure (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;ILnet/minecraft/server/level/ServerLevel;Z)Lnet/minecraft/world/level/block/entity/StructureBlockEntity; a
	tryLoadStructure (Ljava/nio/file/Path;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/gametest/framework/TeamcityTestReporter nq
	ESCAPER b
	LOGGER a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/gametest/framework/TestClassNameArgument net/minecraft/gametest/framework/GameTestHarnessTestClassArgument
	EXAMPLES a
	getTestClassName (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
	testClassName ()Lnet/minecraft/gametest/framework/TestClassNameArgument; a
net/minecraft/gametest/framework/TestCommand net/minecraft/gametest/framework/GameTestHarnessTestCommand
	DEFAULT_CLEAR_RADIUS a
	DEFAULT_X_SIZE g
	DEFAULT_Y_SIZE h
	DEFAULT_Z_SIZE i
	MAX_CLEAR_RADIUS b
	SHOW_POS_DURATION_MS f
	STRUCTURE_BLOCK_FULL_SEARCH_RADIUS d
	STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS c
	TEST_POS_Z_OFFSET_FROM_PLAYER e
	clearAllTests (Lnet/minecraft/commands/CommandSourceStack;I)I a
	createNewStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;III)I a
	exportNearestTestStructure (Lnet/minecraft/commands/CommandSourceStack;)I c
	exportTestStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I c
	importTestStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I d
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	runAllNearbyTests (Lnet/minecraft/commands/CommandSourceStack;)I b
	runAllTests (Lnet/minecraft/commands/CommandSourceStack;II)I a
	runAllTestsInClass (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;II)I a
	runLastFailedTests (Lnet/minecraft/commands/CommandSourceStack;ZII)I a
	runNearbyTest (Lnet/minecraft/commands/CommandSourceStack;)I a
	runTest (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/gametest/framework/TestFunction;I)I a
	runTest (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/MultipleTestTracker;)V a
	runTestPreparation (Lnet/minecraft/gametest/framework/TestFunction;Lnet/minecraft/server/level/ServerLevel;)V a
	runTests (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;II)V a
	say (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)V b
	say (Lnet/minecraft/server/level/ServerLevel;Ljava/lang/String;Lnet/minecraft/ChatFormatting;)V a
	showPos (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	showTestSummaryIfAllDone (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/MultipleTestTracker;)V a
net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer ns$a
	level a
	tracker b
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/TestFunction net/minecraft/gametest/framework/GameTestHarnessTestFunction
	batchName a
	function g
	maxAttempts e
	maxTicks h
	required d
	requiredSuccesses f
	rotation j
	setupTicks i
	structureName c
	testName b
	getBatchName ()Ljava/lang/String; e
	getMaxAttempts ()I i
	getMaxTicks ()I c
	getRequiredSuccesses ()I j
	getRotation ()Lnet/minecraft/world/level/block/Rotation; g
	getSetupTicks ()J f
	getStructureName ()Ljava/lang/String; b
	getTestName ()Ljava/lang/String; a
	isFlaky ()Z h
	isRequired ()Z d
	run (Lnet/minecraft/gametest/framework/GameTestHelper;)V a
net/minecraft/gametest/framework/TestFunctionArgument net/minecraft/gametest/framework/GameTestHarnessTestFunctionArgument
	EXAMPLES a
	getTestFunction (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/gametest/framework/TestFunction; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/gametest/framework/TestFunction; a
	testFunctionArgument ()Lnet/minecraft/gametest/framework/TestFunctionArgument; a
net/minecraft/gametest/framework/TestReporter net/minecraft/gametest/framework/GameTestHarnessITestReporter
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/locale/Language net/minecraft/locale/LocaleLanguage
	DEFAULT a
	GSON c
	LOGGER b
	UNSUPPORTED_FORMAT_PATTERN d
	instance e
	getInstance ()Lnet/minecraft/locale/Language; a
	getOrDefault (Ljava/lang/String;)Ljava/lang/String; a
	getVisualOrder (Ljava/util/List;)Ljava/util/List; a
	getVisualOrder (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/util/FormattedCharSequence; a
	has (Ljava/lang/String;)Z b
	inject (Lnet/minecraft/locale/Language;)V a
	isDefaultRightToLeft ()Z b
	loadDefault ()Lnet/minecraft/locale/Language; c
	loadFromJson (Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V a
net/minecraft/nbt/ByteArrayTag net/minecraft/nbt/NBTTagByteArray
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/ByteTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/ByteTag; a
	getAsByteArray ()[B d
	getElementType ()B e
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/ByteTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/ByteTag;)Lnet/minecraft/nbt/ByteTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[B a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ByteTag net/minecraft/nbt/NBTTagByte
	ONE c
	SELF_SIZE_IN_BITS w
	TYPE a
	ZERO b
	data x
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/ByteTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (B)Lnet/minecraft/nbt/ByteTag; a
	valueOf (Z)Lnet/minecraft/nbt/ByteTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ByteTag$Cache oa$a
	cache a
net/minecraft/nbt/CollectionTag net/minecraft/nbt/NBTList
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	getElementType ()B e
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
net/minecraft/nbt/CompoundTag net/minecraft/nbt/NBTTagCompound
	CODEC a
	MAP_ENTRY_SIZE_IN_BITS w
	SELF_SIZE_IN_BITS c
	TYPE b
	tags x
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	contains (Ljava/lang/String;)Z e
	contains (Ljava/lang/String;I)Z b
	copy ()Lnet/minecraft/nbt/CompoundTag; g
	copy ()Lnet/minecraft/nbt/Tag; c
	createReport (Ljava/lang/String;Lnet/minecraft/nbt/TagType;Ljava/lang/ClassCastException;)Lnet/minecraft/CrashReport; a
	entries ()Ljava/util/Map; h
	get (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; c
	getAllKeys ()Ljava/util/Set; d
	getBoolean (Ljava/lang/String;)Z q
	getByte (Ljava/lang/String;)B f
	getByteArray (Ljava/lang/String;)[B m
	getCompound (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; p
	getDouble (Ljava/lang/String;)D k
	getFloat (Ljava/lang/String;)F j
	getId ()B a
	getInt (Ljava/lang/String;)I h
	getIntArray (Ljava/lang/String;)[I n
	getList (Ljava/lang/String;I)Lnet/minecraft/nbt/ListTag; c
	getLong (Ljava/lang/String;)J i
	getLongArray (Ljava/lang/String;)[J o
	getShort (Ljava/lang/String;)S g
	getString (Ljava/lang/String;)Ljava/lang/String; l
	getTagType (Ljava/lang/String;)B d
	getType ()Lnet/minecraft/nbt/TagType; b
	getUUID (Ljava/lang/String;)Ljava/util/UUID; a
	hasUUID (Ljava/lang/String;)Z b
	isEmpty ()Z f
	merge (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	put (Ljava/lang/String;Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; a
	putBoolean (Ljava/lang/String;Z)V a
	putByte (Ljava/lang/String;B)V a
	putByteArray (Ljava/lang/String;Ljava/util/List;)V a
	putByteArray (Ljava/lang/String;[B)V a
	putDouble (Ljava/lang/String;D)V a
	putFloat (Ljava/lang/String;F)V a
	putInt (Ljava/lang/String;I)V a
	putIntArray (Ljava/lang/String;Ljava/util/List;)V b
	putIntArray (Ljava/lang/String;[I)V a
	putLong (Ljava/lang/String;J)V a
	putLongArray (Ljava/lang/String;Ljava/util/List;)V c
	putLongArray (Ljava/lang/String;[J)V a
	putShort (Ljava/lang/String;S)V a
	putString (Ljava/lang/String;Ljava/lang/String;)V a
	putUUID (Ljava/lang/String;Ljava/util/UUID;)V a
	readNamedTagData (Lnet/minecraft/nbt/TagType;Ljava/lang/String;Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; a
	readNamedTagName (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Ljava/lang/String; b
	readNamedTagType (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)B a
	remove (Ljava/lang/String;)V r
	size ()I e
	write (Ljava/io/DataOutput;)V a
	writeNamedTag (Ljava/lang/String;Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V a
net/minecraft/nbt/DoubleTag net/minecraft/nbt/NBTTagDouble
	SELF_SIZE_IN_BITS c
	TYPE b
	ZERO a
	data w
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/DoubleTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (D)Lnet/minecraft/nbt/DoubleTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/EndTag net/minecraft/nbt/NBTTagEnd
	INSTANCE b
	SELF_SIZE_IN_BITS c
	TYPE a
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/EndTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/FloatTag net/minecraft/nbt/NBTTagFloat
	SELF_SIZE_IN_BITS c
	TYPE b
	ZERO a
	data w
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/FloatTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (F)Lnet/minecraft/nbt/FloatTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntArrayTag net/minecraft/nbt/NBTTagIntArray
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/IntTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/IntArrayTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/IntTag; a
	getAsIntArray ()[I f
	getElementType ()B e
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/IntTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/IntTag;)Lnet/minecraft/nbt/IntTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[I a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntTag net/minecraft/nbt/NBTTagInt
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/IntTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (I)Lnet/minecraft/nbt/IntTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntTag$Cache oh$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/ListTag net/minecraft/nbt/NBTTagList
	SELF_SIZE_IN_BITS b
	TYPE a
	list c
	type w
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/ListTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/Tag; k
	getCompound (I)Lnet/minecraft/nbt/CompoundTag; a
	getDouble (I)D h
	getElementType ()B e
	getFloat (I)F i
	getId ()B a
	getInt (I)I e
	getIntArray (I)[I f
	getList (I)Lnet/minecraft/nbt/ListTag; b
	getLongArray (I)[J g
	getShort (I)S d
	getString (I)Ljava/lang/String; j
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	updateType (Lnet/minecraft/nbt/Tag;)Z a
	updateTypeAfterRemove ()V f
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongArrayTag net/minecraft/nbt/NBTTagLongArray
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/LongTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/LongArrayTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/LongTag; a
	getAsLongArray ()[J f
	getElementType ()B e
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/LongTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/LongTag;)Lnet/minecraft/nbt/LongTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[J a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongTag net/minecraft/nbt/NBTTagLong
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/LongTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (J)Lnet/minecraft/nbt/LongTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongTag$Cache ok$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/NbtAccounter net/minecraft/nbt/NBTReadLimiter
	UNLIMITED a
	quota b
	usage c
	accountBits (J)V a
net/minecraft/nbt/NbtIo net/minecraft/nbt/NBTCompressedStreamTools
	parse (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;)V a
	read (Ljava/io/DataInput;)Lnet/minecraft/nbt/CompoundTag; a
	read (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/CompoundTag; a
	read (Ljava/io/File;)Lnet/minecraft/nbt/CompoundTag; b
	readCompressed (Ljava/io/File;)Lnet/minecraft/nbt/CompoundTag; a
	readCompressed (Ljava/io/InputStream;)Lnet/minecraft/nbt/CompoundTag; a
	readUnnamedTag (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; a
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/io/DataOutput;)V a
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/io/File;)V b
	writeCompressed (Lnet/minecraft/nbt/CompoundTag;Ljava/io/File;)V a
	writeCompressed (Lnet/minecraft/nbt/CompoundTag;Ljava/io/OutputStream;)V a
	writeUnnamedTag (Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V a
net/minecraft/nbt/NbtOps net/minecraft/nbt/DynamicOpsNBT
	INSTANCE a
	convertTo (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/nbt/Tag;)Ljava/lang/Object; a
	createBoolean (Z)Lnet/minecraft/nbt/Tag; a
	createByte (B)Lnet/minecraft/nbt/Tag; a
	createByteList (Ljava/nio/ByteBuffer;)Lnet/minecraft/nbt/Tag; a
	createDouble (D)Lnet/minecraft/nbt/Tag; a
	createFloat (F)Lnet/minecraft/nbt/Tag; a
	createGenericList (BB)Lnet/minecraft/nbt/CollectionTag; a
	createInt (I)Lnet/minecraft/nbt/Tag; a
	createIntList (Ljava/util/stream/IntStream;)Lnet/minecraft/nbt/Tag; a
	createList (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/Tag; b
	createLong (J)Lnet/minecraft/nbt/Tag; a
	createLongList (Ljava/util/stream/LongStream;)Lnet/minecraft/nbt/Tag; a
	createMap (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/Tag; a
	createNumeric (Ljava/lang/Number;)Lnet/minecraft/nbt/Tag; a
	createShort (S)Lnet/minecraft/nbt/Tag; a
	createString (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	empty ()Lnet/minecraft/nbt/Tag; a
	fillMany (Lnet/minecraft/nbt/CollectionTag;Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	fillOne (Lnet/minecraft/nbt/CollectionTag;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)V a
	getByteBuffer (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; h
	getIntStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; i
	getList (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; g
	getLongStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; j
	getMap (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; e
	getMapEntries (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; d
	getMapValues (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; c
	getNumberValue (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	getStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; f
	getStringValue (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; b
	mergeToList (Lnet/minecraft/nbt/Tag;Ljava/util/List;)Lcom/mojang/serialization/DataResult; a
	mergeToList (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	mergeToMap (Lnet/minecraft/nbt/Tag;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; a
	mergeToMap (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	remove (Lnet/minecraft/nbt/Tag;Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	typesMatch (BBB)Z a
net/minecraft/nbt/NbtOps$NbtRecordBuilder on$a
	append (Ljava/lang/String;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	build (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	initBuilder ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/nbt/NbtUtils net/minecraft/nbt/GameProfileSerializer
	COLON_SPLITTER i
	COMMA_SPLITTER h
	ELEMENT_SEPARATOR f
	INDENT k
	KEY_VALUE_SEPARATOR g
	LOGGER j
	NOT_FOUND l
	PROPERTIES_END e
	PROPERTIES_START d
	SNBT_DATA_TAG a
	YXZ_LISTTAG_DOUBLE_COMPARATOR c
	YXZ_LISTTAG_INT_COMPARATOR b
	compareNbt (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;Z)Z a
	createUUID (Ljava/util/UUID;)Lnet/minecraft/nbt/IntArrayTag; a
	getName (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/String; a
	indent (ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder; a
	loadUUID (Lnet/minecraft/nbt/Tag;)Ljava/util/UUID; a
	packBlockState (Lnet/minecraft/nbt/CompoundTag;)Ljava/lang/String; g
	packStructureTemplate (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; e
	prettyPrint (Ljava/lang/StringBuilder;Lnet/minecraft/nbt/Tag;IZ)Ljava/lang/StringBuilder; a
	prettyPrint (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; b
	prettyPrint (Lnet/minecraft/nbt/Tag;Z)Ljava/lang/String; a
	readBlockPos (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/core/BlockPos; b
	readBlockState (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/state/BlockState; c
	readGameProfile (Lnet/minecraft/nbt/CompoundTag;)Lcom/mojang/authlib/GameProfile; a
	setValueHelper (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/state/StateHolder; a
	snbtToStructure (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	structureToSnbt (Lnet/minecraft/nbt/CompoundTag;)Ljava/lang/String; d
	toPrettyComponent (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; c
	unpackBlockState (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; b
	unpackStructureTemplate (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; f
	update (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/util/datafix/DataFixTypes;Lnet/minecraft/nbt/CompoundTag;I)Lnet/minecraft/nbt/CompoundTag; a
	update (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/util/datafix/DataFixTypes;Lnet/minecraft/nbt/CompoundTag;II)Lnet/minecraft/nbt/CompoundTag; a
	writeBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; a
	writeBlockState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/nbt/CompoundTag; a
	writeFluidState (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/nbt/CompoundTag; a
	writeGameProfile (Lnet/minecraft/nbt/CompoundTag;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/nbt/NumericTag net/minecraft/nbt/NBTNumber
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
net/minecraft/nbt/ShortTag net/minecraft/nbt/NBTTagShort
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/ShortTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (S)Lnet/minecraft/nbt/ShortTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ShortTag$Cache oq$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/StreamTagVisitor$EntryResult os$a
	$VALUES e
	BREAK c
	ENTER a
	HALT d
	SKIP b
	$values ()[Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
net/minecraft/nbt/StreamTagVisitor$ValueResult os$b
	$VALUES d
	BREAK b
	CONTINUE a
	HALT c
	$values ()[Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
net/minecraft/nbt/StringTag net/minecraft/nbt/NBTTagString
	DOUBLE_QUOTE w
	EMPTY c
	ESCAPE y
	NOT_SET z
	SELF_SIZE_IN_BITS b
	SINGLE_QUOTE x
	TYPE a
	data A
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/StringTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsString ()Ljava/lang/String; e_
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	quoteAndEscape (Ljava/lang/String;)Ljava/lang/String; b
	skipString (Ljava/io/DataInput;)V a
	valueOf (Ljava/lang/String;)Lnet/minecraft/nbt/StringTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/Tag net/minecraft/nbt/NBTBase
	ARRAY_HEADER e
	MAX_DEPTH v
	OBJECT_HEADER d
	OBJECT_REFERENCE f
	STRING_SIZE g
	TAG_ANY_NUMERIC u
	TAG_BYTE i
	TAG_BYTE_ARRAY o
	TAG_COMPOUND r
	TAG_DOUBLE n
	TAG_END h
	TAG_FLOAT m
	TAG_INT k
	TAG_INT_ARRAY s
	TAG_LIST q
	TAG_LONG l
	TAG_LONG_ARRAY t
	TAG_SHORT j
	TAG_STRING p
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	acceptAsRoot (Lnet/minecraft/nbt/StreamTagVisitor;)V b
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsString ()Ljava/lang/String; e_
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/TagParser net/minecraft/nbt/MojangsonParser
	BYTE_PATTERN p
	DOUBLE_PATTERN n
	DOUBLE_PATTERN_NOSUFFIX m
	ELEMENT_SEPARATOR g
	ERROR_EXPECTED_KEY b
	ERROR_EXPECTED_VALUE c
	ERROR_INSERT_MIXED_ARRAY e
	ERROR_INSERT_MIXED_LIST d
	ERROR_INVALID_ARRAY f
	ERROR_TRAILING_DATA a
	FLOAT_PATTERN o
	INT_PATTERN s
	LIST_CLOSE j
	LIST_OPEN i
	LONG_PATTERN q
	NAME_VALUE_SEPARATOR h
	SHORT_PATTERN r
	STRUCT_CLOSE k
	STRUCT_OPEN l
	reader t
	expect (C)V a
	hasElementSeparator ()Z i
	parseTag (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	readArray (Lnet/minecraft/nbt/TagType;Lnet/minecraft/nbt/TagType;)Ljava/util/List; a
	readArrayTag ()Lnet/minecraft/nbt/Tag; h
	readKey ()Ljava/lang/String; b
	readList ()Lnet/minecraft/nbt/Tag; e
	readListTag ()Lnet/minecraft/nbt/Tag; g
	readSingleStruct ()Lnet/minecraft/nbt/CompoundTag; a
	readStruct ()Lnet/minecraft/nbt/CompoundTag; f
	readTypedValue ()Lnet/minecraft/nbt/Tag; c
	readValue ()Lnet/minecraft/nbt/Tag; d
	type (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; b
net/minecraft/nbt/TagType net/minecraft/nbt/NBTTagType
	createInvalid (I)Lnet/minecraft/nbt/TagType; a
	getName ()Ljava/lang/String; a
	getPrettyName ()Ljava/lang/String; b
	isValue ()Z d
	load (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; b
	parse (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	parseRoot (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;)V b
	skip (Ljava/io/DataInput;)V a
	skip (Ljava/io/DataInput;I)V a
net/minecraft/nbt/TagType$StaticSize ox$a
	size ()I c
	skip (Ljava/io/DataInput;)V a
	skip (Ljava/io/DataInput;I)V a
net/minecraft/nbt/TagType$VariableSize ox$b
	skip (Ljava/io/DataInput;I)V a
net/minecraft/nbt/TagTypes net/minecraft/nbt/NBTTagTypes
	TYPES a
	getType (I)Lnet/minecraft/nbt/TagType; a
net/minecraft/nbt/visitors/CollectFields$StackFrame pc$a
	depth a
	fieldsToGet b
	fieldsToRecurse c
	addEntry (Lnet/minecraft/nbt/visitors/CollectFields$WantedField;)V a
	depth ()I a
	fieldsToGet ()Ljava/util/Map; b
	fieldsToRecurse ()Ljava/util/Map; c
net/minecraft/nbt/visitors/CollectFields$WantedField pc$b
	name c
	path a
	type b
	name ()Ljava/lang/String; c
	path ()Ljava/util/List; a
	type ()Lnet/minecraft/nbt/TagType; b
net/minecraft/nbt/visitors/SkipAll pe
	INSTANCE a
	visit (B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (D)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (F)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (S)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitElement (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; b
	visitEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitList (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/network/CipherBase net/minecraft/network/PacketEncryptionHandler
	cipher a
	heapIn b
	heapOut c
	bufToByte (Lio/netty/buffer/ByteBuf;)[B a
	decipher (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; a
	encipher (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/CipherDecoder net/minecraft/network/PacketDecrypter
	cipher a
	decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V a
net/minecraft/network/CipherEncoder net/minecraft/network/PacketEncrypter
	cipher a
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/CompressionDecoder net/minecraft/network/PacketDecompressor
	MAXIMUM_COMPRESSED_LENGTH a
	MAXIMUM_UNCOMPRESSED_LENGTH b
	inflater c
	threshold d
	validateDecompressed e
	setThreshold (IZ)V a
net/minecraft/network/CompressionEncoder net/minecraft/network/PacketCompressor
	deflater b
	encodeBuf a
	threshold c
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
	getThreshold ()I a
	setThreshold (I)V a
net/minecraft/network/Connection net/minecraft/network/NetworkManager
	ATTRIBUTE_PROTOCOL c
	AVERAGE_PACKETS_SMOOTHING g
	LOCAL_WORKER_GROUP f
	LOGGER h
	NETWORK_EPOLL_WORKER_GROUP e
	NETWORK_WORKER_GROUP d
	PACKET_MARKER b
	ROOT_MARKER a
	address l
	averageReceivedPackets s
	averageSentPackets t
	channel k
	disconnectedReason n
	disconnectionHandled p
	encrypted o
	handlingFault v
	packetListener m
	queue j
	receivedPackets q
	receiving i
	sentPackets r
	tickCount u
	channelRead0 (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;)V a
	connectToLocalServer (Ljava/net/SocketAddress;)Lnet/minecraft/network/Connection; a
	connectToServer (Ljava/net/InetSocketAddress;Z)Lnet/minecraft/network/Connection; a
	disconnect (Lnet/minecraft/network/chat/Component;)V a
	doSendPacket (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;Lnet/minecraft/network/ConnectionProtocol;Lnet/minecraft/network/ConnectionProtocol;)V a
	flushQueue ()V q
	genericsFtw (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;)V a
	getAverageReceivedPackets ()F n
	getAverageSentPackets ()F o
	getCurrentProtocol ()Lnet/minecraft/network/ConnectionProtocol; p
	getDisconnectedReason ()Lnet/minecraft/network/chat/Component; k
	getPacketListener ()Lnet/minecraft/network/PacketListener; j
	getReceiving ()Lnet/minecraft/network/protocol/PacketFlow; e
	getRemoteAddress ()Ljava/net/SocketAddress; c
	getSending ()Lnet/minecraft/network/protocol/PacketFlow; f
	handleDisconnection ()V m
	isConnected ()Z h
	isConnecting ()Z i
	isEncrypted ()Z g
	isMemoryConnection ()Z d
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V a
	sendPacket (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V b
	setEncryptionKey (Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V a
	setListener (Lnet/minecraft/network/PacketListener;)V a
	setProtocol (Lnet/minecraft/network/ConnectionProtocol;)V a
	setReadOnly ()V l
	setupCompression (IZ)V a
	tick ()V a
	tickSecond ()V b
net/minecraft/network/Connection$PacketHolder net/minecraft/network/NetworkManager$QueuedPacket
	listener b
	packet a
net/minecraft/network/ConnectionProtocol net/minecraft/network/EnumProtocol
	$VALUES k
	HANDSHAKING a
	LOGIN d
	LOOKUP g
	MAX_PROTOCOL_ID f
	MIN_PROTOCOL_ID e
	PLAY b
	PROTOCOL_BY_PACKET h
	STATUS c
	flows j
	id i
	$values ()[Lnet/minecraft/network/ConnectionProtocol; c
	createPacket (Lnet/minecraft/network/protocol/PacketFlow;ILnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/Packet; a
	getById (I)Lnet/minecraft/network/ConnectionProtocol; a
	getId ()I a
	getPacketId (Lnet/minecraft/network/protocol/PacketFlow;Lnet/minecraft/network/protocol/Packet;)Ljava/lang/Integer; a
	getPacketsByIds (Lnet/minecraft/network/protocol/PacketFlow;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; a
	getProtocolForPacket (Lnet/minecraft/network/protocol/Packet;)Lnet/minecraft/network/ConnectionProtocol; a
	protocol ()Lnet/minecraft/network/ConnectionProtocol$ProtocolBuilder; b
net/minecraft/network/ConnectionProtocol$PacketSet pm$a
	classToId a
	idToDeserializer b
	addPacket (Ljava/lang/Class;Ljava/util/function/Function;)Lnet/minecraft/network/ConnectionProtocol$PacketSet; a
	createPacket (ILnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/Packet; a
	getAllPackets ()Ljava/lang/Iterable; a
	getId (Ljava/lang/Class;)Ljava/lang/Integer; a
net/minecraft/network/ConnectionProtocol$ProtocolBuilder pm$b
	flows a
	addFlow (Lnet/minecraft/network/protocol/PacketFlow;Lnet/minecraft/network/ConnectionProtocol$PacketSet;)Lnet/minecraft/network/ConnectionProtocol$ProtocolBuilder; a
net/minecraft/network/FriendlyByteBuf net/minecraft/network/PacketDataSerializer
	DEFAULT_NBT_QUOTA e
	MAX_COMPONENT_STRING_LENGTH b
	MAX_STRING_LENGTH a
	MAX_VARINT_SIZE c
	MAX_VARLONG_SIZE d
	source f
	accessByteBufWithCorrectSize ()[B e
	getVarIntSize (I)I a
	getVarLongSize (J)I a
	limitValue (Ljava/util/function/IntFunction;I)Ljava/util/function/IntFunction; a
	readAnySizeNbt ()Lnet/minecraft/nbt/CompoundTag; n
	readBitSet ()Ljava/util/BitSet; t
	readBlockHitResult ()Lnet/minecraft/world/phys/BlockHitResult; s
	readBlockPos ()Lnet/minecraft/core/BlockPos; f
	readByteArray ()[B b
	readByteArray (I)[B b
	readChunkPos ()Lnet/minecraft/world/level/ChunkPos; g
	readCollection (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/Collection; a
	readComponent ()Lnet/minecraft/network/chat/Component; i
	readDate ()Ljava/util/Date; r
	readEnum (Ljava/lang/Class;)Ljava/lang/Enum; a
	readIntIdList ()Lit/unimi/dsi/fastutil/ints/IntList; a
	readItem ()Lnet/minecraft/world/item/ItemStack; o
	readList (Ljava/util/function/Function;)Ljava/util/List; a
	readLongArray ()[J d
	readLongArray ([J)[J b
	readLongArray ([JI)[J a
	readMap (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Map; a
	readMap (Ljava/util/function/IntFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Map; a
	readNbt ()Lnet/minecraft/nbt/CompoundTag; m
	readNbt (Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/CompoundTag; a
	readOptional (Ljava/util/function/Function;)Ljava/util/Optional; b
	readResourceLocation ()Lnet/minecraft/resources/ResourceLocation; q
	readSectionPos ()Lnet/minecraft/core/SectionPos; h
	readUUID ()Ljava/util/UUID; l
	readUtf ()Ljava/lang/String; p
	readUtf (I)Ljava/lang/String; e
	readVarInt ()I j
	readVarIntArray ()[I c
	readVarIntArray (I)[I c
	readVarLong ()J k
	readWithCodec (Lcom/mojang/serialization/Codec;)Ljava/lang/Object; a
	readWithCount (Ljava/util/function/Consumer;)V a
	writeBitSet (Ljava/util/BitSet;)V a
	writeBlockHitResult (Lnet/minecraft/world/phys/BlockHitResult;)V a
	writeBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeByteArray ([B)Lnet/minecraft/network/FriendlyByteBuf; a
	writeChunkPos (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeCollection (Ljava/util/Collection;Ljava/util/function/BiConsumer;)V a
	writeComponent (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeDate (Ljava/util/Date;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeEnum (Ljava/lang/Enum;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeIntIdList (Lit/unimi/dsi/fastutil/ints/IntList;)V a
	writeItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeLongArray ([J)Lnet/minecraft/network/FriendlyByteBuf; a
	writeMap (Ljava/util/Map;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)V a
	writeNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeOptional (Ljava/util/Optional;Ljava/util/function/BiConsumer;)V a
	writeResourceLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeSectionPos (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUUID (Ljava/util/UUID;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUtf (Ljava/lang/String;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUtf (Ljava/lang/String;I)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVarInt (I)Lnet/minecraft/network/FriendlyByteBuf; d
	writeVarIntArray ([I)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVarLong (J)Lnet/minecraft/network/FriendlyByteBuf; b
	writeWithCodec (Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V a
net/minecraft/network/RateKickingConnection net/minecraft/network/NetworkManagerServer
	EXCEED_REASON h
	LOGGER g
	rateLimitPacketsPerSecond i
	tickSecond ()V b
net/minecraft/network/SkipPacketException net/minecraft/network/SkipEncodeException
net/minecraft/network/Varint21FrameDecoder net/minecraft/network/PacketSplitter
net/minecraft/network/Varint21LengthFieldPrepender net/minecraft/network/PacketPrepender
	MAX_BYTES a
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/chat/BaseComponent net/minecraft/network/chat/ChatBaseComponent
	decomposedWith e
	siblings a
	style f
	visualOrderText d
	append (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	copy ()Lnet/minecraft/network/chat/MutableComponent; e
	getContents ()Ljava/lang/String; a
	getSiblings ()Ljava/util/List; b
	getStyle ()Lnet/minecraft/network/chat/Style; c
	getVisualOrderText ()Lnet/minecraft/util/FormattedCharSequence; f
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	setStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/ChatType net/minecraft/network/chat/ChatMessageType
	$VALUES f
	CHAT a
	GAME_INFO c
	SYSTEM b
	index d
	interrupt e
	$values ()[Lnet/minecraft/network/chat/ChatType; c
	getForIndex (B)Lnet/minecraft/network/chat/ChatType; a
	getIndex ()B a
	shouldInterrupt ()Z b
net/minecraft/network/chat/ClickEvent net/minecraft/network/chat/ChatClickable
	action a
	value b
	getAction ()Lnet/minecraft/network/chat/ClickEvent$Action; a
	getValue ()Ljava/lang/String; b
net/minecraft/network/chat/ClickEvent$Action net/minecraft/network/chat/ChatClickable$EnumClickAction
	$VALUES j
	CHANGE_PAGE e
	COPY_TO_CLIPBOARD f
	LOOKUP g
	OPEN_FILE b
	OPEN_URL a
	RUN_COMMAND c
	SUGGEST_COMMAND d
	allowFromServer h
	name i
	$values ()[Lnet/minecraft/network/chat/ClickEvent$Action; c
	getByName (Ljava/lang/String;)Lnet/minecraft/network/chat/ClickEvent$Action; a
	getName ()Ljava/lang/String; b
	isAllowedFromServer ()Z a
net/minecraft/network/chat/CommonComponents py
	CONNECT_FAILED i
	GUI_BACK h
	GUI_CANCEL d
	GUI_DONE c
	GUI_NO f
	GUI_PROCEED g
	GUI_YES e
	NARRATION_SEPARATOR k
	NEW_LINE j
	OPTION_OFF b
	OPTION_ON a
	joinForNarration (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; b
	joinLines (Ljava/util/Collection;)Lnet/minecraft/network/chat/Component; a
	joinLines ([Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	optionNameValue (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	optionStatus (Lnet/minecraft/network/chat/Component;Z)Lnet/minecraft/network/chat/MutableComponent; a
	optionStatus (Z)Lnet/minecraft/network/chat/Component; a
net/minecraft/network/chat/Component net/minecraft/network/chat/IChatBaseComponent
	copy ()Lnet/minecraft/network/chat/MutableComponent; e
	getContents ()Ljava/lang/String; a
	getSiblings ()Ljava/util/List; b
	getString (I)Ljava/lang/String; a
	getStyle ()Lnet/minecraft/network/chat/Style; c
	getVisualOrderText ()Lnet/minecraft/util/FormattedCharSequence; f
	nullToEmpty (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	toFlatList (Lnet/minecraft/network/chat/Style;)Ljava/util/List; b
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
	visitSelf (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; b
	visitSelf (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; b
net/minecraft/network/chat/Component$Serializer net/minecraft/network/chat/IChatBaseComponent$ChatSerializer
	GSON a
	JSON_READER_LINESTART c
	JSON_READER_POS b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJsonLenient (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; b
	getPos (Lcom/google/gson/stream/JsonReader;)I a
	parseSeparator (Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Optional; a
	serialize (Lnet/minecraft/network/chat/Component;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serializeSeparator (Lcom/google/gson/JsonSerializationContext;Lcom/google/gson/JsonObject;Ljava/util/Optional;)V a
	serializeStyle (Lnet/minecraft/network/chat/Style;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
	toJson (Lnet/minecraft/network/chat/Component;)Ljava/lang/String; a
	toJsonTree (Lnet/minecraft/network/chat/Component;)Lcom/google/gson/JsonElement; b
net/minecraft/network/chat/ComponentUtils net/minecraft/network/chat/ChatComponentUtils
	DEFAULT_NO_STYLE_SEPARATOR c
	DEFAULT_SEPARATOR b
	DEFAULT_SEPARATOR_TEXT a
	formatAndSortList (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;Ljava/util/Optional;Ljava/util/function/Function;)Lnet/minecraft/network/chat/MutableComponent; a
	formatList (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/Component; b
	formatList (Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;)Lnet/minecraft/network/chat/MutableComponent; a
	fromMessage (Lcom/mojang/brigadier/Message;)Lnet/minecraft/network/chat/Component; a
	getDisplayName (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	mergeStyles (Lnet/minecraft/network/chat/MutableComponent;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
	resolveStyle (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Style;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/Style; a
	updateForEntity (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Optional;Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; a
	updateForEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	wrapInSquareBrackets (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/ContextAwareComponent net/minecraft/network/chat/ChatComponentContextual
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/FormattedText net/minecraft/network/chat/IChatFormatted
	EMPTY c
	STOP_ITERATION b
	composite (Ljava/util/List;)Lnet/minecraft/network/chat/FormattedText; a
	composite ([Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/network/chat/FormattedText; a
	of (Ljava/lang/String;)Lnet/minecraft/network/chat/FormattedText; b
	of (Ljava/lang/String;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/FormattedText$ContentConsumer qc$a
net/minecraft/network/chat/FormattedText$StyledContentConsumer qc$b
net/minecraft/network/chat/HoverEvent net/minecraft/network/chat/ChatHoverable
	LOGGER a
	action b
	value c
	deserialize (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/HoverEvent; a
	getAction ()Lnet/minecraft/network/chat/HoverEvent$Action; a
	getValue (Lnet/minecraft/network/chat/HoverEvent$Action;)Ljava/lang/Object; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/network/chat/HoverEvent$Action net/minecraft/network/chat/ChatHoverable$EnumHoverAction
	LOOKUP d
	SHOW_ENTITY c
	SHOW_ITEM b
	SHOW_TEXT a
	allowFromServer f
	argDeserializer g
	argSerializer h
	legacyArgDeserializer i
	name e
	cast (Ljava/lang/Object;)Ljava/lang/Object; b
	deserialize (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent; a
	deserializeFromLegacy (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent; a
	getByName (Ljava/lang/String;)Lnet/minecraft/network/chat/HoverEvent$Action; a
	getName ()Ljava/lang/String; b
	isAllowedFromServer ()Z a
	serializeArg (Ljava/lang/Object;)Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/HoverEvent$EntityTooltipInfo qd$b
	id b
	linesCache d
	name c
	type a
	create (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent$EntityTooltipInfo; a
	create (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent$EntityTooltipInfo; a
	getTooltipLines ()Ljava/util/List; b
	serialize ()Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/HoverEvent$ItemStackInfo qd$c
	count b
	item a
	itemStack d
	tag c
	create (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent$ItemStackInfo; a
	create (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent$ItemStackInfo; a
	getItemStack ()Lnet/minecraft/world/item/ItemStack; a
	serialize ()Lcom/google/gson/JsonElement; b
net/minecraft/network/chat/KeybindComponent net/minecraft/network/chat/ChatComponentKeybind
	keyResolver d
	name e
	nameResolver f
	getName ()Ljava/lang/String; i
	getNestedComponent ()Lnet/minecraft/network/chat/Component; j
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/KeybindComponent; h
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	setKeyResolver (Ljava/util/function/Function;)V a
	visitSelf (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; b
	visitSelf (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; b
net/minecraft/network/chat/MutableComponent net/minecraft/network/chat/IChatMutableComponent
	append (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; c
	append (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	setStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; c
	withStyle ([Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/NbtComponent net/minecraft/network/chat/ChatComponentNBT
	LOGGER h
	compiledNbtPath g
	interpreting d
	nbtPathPattern f
	separator e
	compileNbtPath (Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; d
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getNbtPath ()Ljava/lang/String; h
	isInterpreting ()Z i
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/NbtComponent$BlockNbtComponent qg$a
	compiledPos i
	posPattern h
	compilePos (Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; d
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getPos ()Ljava/lang/String; j
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/NbtComponent$BlockNbtComponent; k
net/minecraft/network/chat/NbtComponent$EntityNbtComponent qg$b
	compiledSelector i
	selectorPattern h
	compileSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; d
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getSelector ()Ljava/lang/String; j
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/NbtComponent$EntityNbtComponent; k
net/minecraft/network/chat/NbtComponent$StorageNbtComponent qg$c
	id h
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getId ()Lnet/minecraft/resources/ResourceLocation; j
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/NbtComponent$StorageNbtComponent; k
net/minecraft/network/chat/ScoreComponent net/minecraft/network/chat/ChatComponentScore
	SCORER_PLACEHOLDER d
	name e
	objective g
	selector f
	findTargetName (Lnet/minecraft/commands/CommandSourceStack;)Ljava/lang/String; a
	getName ()Ljava/lang/String; h
	getObjective ()Ljava/lang/String; j
	getScore (Ljava/lang/String;Lnet/minecraft/commands/CommandSourceStack;)Ljava/lang/String; a
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; i
	parseSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; d
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/ScoreComponent; k
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/SelectorComponent net/minecraft/network/chat/ChatComponentSelector
	LOGGER e
	pattern f
	selector g
	separator d
	getContents ()Ljava/lang/String; a
	getPattern ()Ljava/lang/String; h
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; i
	getSeparator ()Ljava/util/Optional; j
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/SelectorComponent; k
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/Style net/minecraft/network/chat/ChatModifier
	DEFAULT_FONT b
	EMPTY a
	bold d
	clickEvent i
	color c
	font l
	hoverEvent j
	insertion k
	italic e
	obfuscated h
	strikethrough g
	underlined f
	applyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; b
	applyFormats ([Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; a
	applyLegacyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; c
	applyTo (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/Style; a
	getClickEvent ()Lnet/minecraft/network/chat/ClickEvent; h
	getColor ()Lnet/minecraft/network/chat/TextColor; a
	getFont ()Lnet/minecraft/resources/ResourceLocation; k
	getHoverEvent ()Lnet/minecraft/network/chat/HoverEvent; i
	getInsertion ()Ljava/lang/String; j
	isBold ()Z b
	isEmpty ()Z g
	isItalic ()Z c
	isObfuscated ()Z f
	isStrikethrough ()Z d
	isUnderlined ()Z e
	withBold (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; a
	withClickEvent (Lnet/minecraft/network/chat/ClickEvent;)Lnet/minecraft/network/chat/Style; a
	withColor (I)Lnet/minecraft/network/chat/Style; a
	withColor (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; a
	withColor (Lnet/minecraft/network/chat/TextColor;)Lnet/minecraft/network/chat/Style; a
	withFont (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/chat/Style; a
	withHoverEvent (Lnet/minecraft/network/chat/HoverEvent;)Lnet/minecraft/network/chat/Style; a
	withInsertion (Ljava/lang/String;)Lnet/minecraft/network/chat/Style; a
	withItalic (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; b
	withObfuscated (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; e
	withStrikethrough (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; d
	withUnderlined (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; c
net/minecraft/network/chat/Style$Serializer net/minecraft/network/chat/ChatModifier$ChatModifierSerializer
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/Style; a
	getClickEvent (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/ClickEvent; c
	getFont (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/ResourceLocation; a
	getHoverEvent (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/HoverEvent; b
	getInsertion (Lcom/google/gson/JsonObject;)Ljava/lang/String; d
	getOptionalFlag (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	getTextColor (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/TextColor; e
	serialize (Lnet/minecraft/network/chat/Style;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/SubStringSource qk
	charStyles b
	plainText a
	reverseCharModifier c
	create (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/network/chat/SubStringSource; a
	create (Lnet/minecraft/network/chat/FormattedText;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/SubStringSource; a
	getPlainText ()Ljava/lang/String; a
	substring (IIZ)Ljava/util/List; a
net/minecraft/network/chat/TextColor net/minecraft/network/chat/ChatHexColor
	CUSTOM_COLOR_PREFIX a
	LEGACY_FORMAT_TO_COLOR b
	NAMED_COLORS c
	name e
	value d
	formatValue ()Ljava/lang/String; c
	fromLegacyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/TextColor; a
	fromRgb (I)Lnet/minecraft/network/chat/TextColor; a
	getValue ()I a
	parseColor (Ljava/lang/String;)Lnet/minecraft/network/chat/TextColor; a
	serialize ()Ljava/lang/String; b
net/minecraft/network/chat/TextComponent net/minecraft/network/chat/ChatComponentText
	EMPTY d
	text e
	getContents ()Ljava/lang/String; a
	getText ()Ljava/lang/String; h
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/TextComponent; i
net/minecraft/network/chat/TranslatableComponent net/minecraft/network/chat/ChatMessage
	FORMAT_PATTERN k
	NO_ARGS d
	TEXT_NULL f
	TEXT_PERCENT e
	args h
	decomposedParts j
	decomposedWith i
	key g
	decompose ()V k
	decomposeTemplate (Ljava/lang/String;Ljava/util/function/Consumer;)V a
	getArgs ()[Ljava/lang/Object; j
	getArgument (I)Lnet/minecraft/network/chat/FormattedText; b
	getKey ()Ljava/lang/String; i
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/TranslatableComponent; h
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	visitSelf (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; b
	visitSelf (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; b
net/minecraft/network/chat/TranslatableFormatException net/minecraft/network/chat/ChatMessageException
net/minecraft/network/protocol/PacketFlow net/minecraft/network/protocol/EnumProtocolDirection
	$VALUES c
	CLIENTBOUND b
	SERVERBOUND a
	$values ()[Lnet/minecraft/network/protocol/PacketFlow; b
	getOpposite ()Lnet/minecraft/network/protocol/PacketFlow; a
net/minecraft/network/protocol/PacketUtils net/minecraft/network/protocol/PlayerConnectionUtils
	LOGGER a
	ensureRunningOnSameThread (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/server/level/ServerLevel;)V a
	ensureRunningOnSameThread (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/util/thread/BlockableEventLoop;)V a
net/minecraft/network/protocol/game/ClientGamePacketListener net/minecraft/network/protocol/game/PacketListenerPlayOut
	handleAddEntity (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	handleAddExperienceOrb (Lnet/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket;)V a
	handleAddMob (Lnet/minecraft/network/protocol/game/ClientboundAddMobPacket;)V a
	handleAddObjective (Lnet/minecraft/network/protocol/game/ClientboundSetObjectivePacket;)V a
	handleAddOrRemoveRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket;)V a
	handleAddPainting (Lnet/minecraft/network/protocol/game/ClientboundAddPaintingPacket;)V a
	handleAddPlayer (Lnet/minecraft/network/protocol/game/ClientboundAddPlayerPacket;)V a
	handleAddVibrationSignal (Lnet/minecraft/network/protocol/game/ClientboundAddVibrationSignalPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ClientboundAnimatePacket;)V a
	handleAwardStats (Lnet/minecraft/network/protocol/game/ClientboundAwardStatsPacket;)V a
	handleBlockBreakAck (Lnet/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket;)V a
	handleBlockDestruction (Lnet/minecraft/network/protocol/game/ClientboundBlockDestructionPacket;)V a
	handleBlockEntityData (Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;)V a
	handleBlockEvent (Lnet/minecraft/network/protocol/game/ClientboundBlockEventPacket;)V a
	handleBlockUpdate (Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;)V a
	handleBossUpdate (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ClientboundChatPacket;)V a
	handleChunkBlocksUpdate (Lnet/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket;)V a
	handleCommandSuggestions (Lnet/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket;)V a
	handleCommands (Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ClientboundContainerClosePacket;)V a
	handleContainerContent (Lnet/minecraft/network/protocol/game/ClientboundContainerSetContentPacket;)V a
	handleContainerSetData (Lnet/minecraft/network/protocol/game/ClientboundContainerSetDataPacket;)V a
	handleContainerSetSlot (Lnet/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ClientboundCustomPayloadPacket;)V a
	handleCustomSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundCustomSoundPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/game/ClientboundDisconnectPacket;)V a
	handleEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundEntityEventPacket;)V a
	handleEntityLinkPacket (Lnet/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket;)V a
	handleExplosion (Lnet/minecraft/network/protocol/game/ClientboundExplodePacket;)V a
	handleForgetLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V a
	handleGameEvent (Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket;)V a
	handleHorseScreenOpen (Lnet/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket;)V a
	handleInitializeBorder (Lnet/minecraft/network/protocol/game/ClientboundInitializeBorderPacket;)V a
	handleItemCooldown (Lnet/minecraft/network/protocol/game/ClientboundCooldownPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ClientboundKeepAlivePacket;)V a
	handleLevelChunkWithLight (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket;)V a
	handleLevelEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelEventPacket;)V a
	handleLightUpdatePacket (Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacket;)V a
	handleLogin (Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;)V a
	handleLookAt (Lnet/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket;)V a
	handleMapItemData (Lnet/minecraft/network/protocol/game/ClientboundMapItemDataPacket;)V a
	handleMerchantOffers (Lnet/minecraft/network/protocol/game/ClientboundMerchantOffersPacket;)V a
	handleMoveEntity (Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ClientboundMoveVehiclePacket;)V a
	handleOpenBook (Lnet/minecraft/network/protocol/game/ClientboundOpenBookPacket;)V a
	handleOpenScreen (Lnet/minecraft/network/protocol/game/ClientboundOpenScreenPacket;)V a
	handleOpenSignEditor (Lnet/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket;)V a
	handleParticleEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelParticlesPacket;)V a
	handlePing (Lnet/minecraft/network/protocol/game/ClientboundPingPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;)V a
	handlePlayerCombatEnd (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket;)V a
	handlePlayerCombatEnter (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket;)V a
	handlePlayerCombatKill (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket;)V a
	handlePlayerInfo (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket;)V a
	handleRemoveEntities (Lnet/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket;)V a
	handleRemoveMobEffect (Lnet/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket;)V a
	handleResourcePack (Lnet/minecraft/network/protocol/game/ClientboundResourcePackPacket;)V a
	handleRespawn (Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;)V a
	handleRotateMob (Lnet/minecraft/network/protocol/game/ClientboundRotateHeadPacket;)V a
	handleSelectAdvancementsTab (Lnet/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket;)V a
	handleSetBorderCenter (Lnet/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket;)V a
	handleSetBorderLerpSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket;)V a
	handleSetBorderSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderSizePacket;)V a
	handleSetBorderWarningDelay (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket;)V a
	handleSetBorderWarningDistance (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket;)V a
	handleSetCamera (Lnet/minecraft/network/protocol/game/ClientboundSetCameraPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket;)V a
	handleSetChunkCacheCenter (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket;)V a
	handleSetChunkCacheRadius (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket;)V a
	handleSetDisplayObjective (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket;)V a
	handleSetEntityData (Lnet/minecraft/network/protocol/game/ClientboundSetEntityDataPacket;)V a
	handleSetEntityMotion (Lnet/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket;)V a
	handleSetEntityPassengersPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPassengersPacket;)V a
	handleSetEquipment (Lnet/minecraft/network/protocol/game/ClientboundSetEquipmentPacket;)V a
	handleSetExperience (Lnet/minecraft/network/protocol/game/ClientboundSetExperiencePacket;)V a
	handleSetHealth (Lnet/minecraft/network/protocol/game/ClientboundSetHealthPacket;)V a
	handleSetPlayerTeamPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket;)V a
	handleSetScore (Lnet/minecraft/network/protocol/game/ClientboundSetScorePacket;)V a
	handleSetSimulationDistance (Lnet/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket;)V a
	handleSetSpawn (Lnet/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket;)V a
	handleSetTime (Lnet/minecraft/network/protocol/game/ClientboundSetTimePacket;)V a
	handleSoundEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundEntityPacket;)V a
	handleSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundPacket;)V a
	handleStopSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundStopSoundPacket;)V a
	handleTabListCustomisation (Lnet/minecraft/network/protocol/game/ClientboundTabListPacket;)V a
	handleTagQueryPacket (Lnet/minecraft/network/protocol/game/ClientboundTagQueryPacket;)V a
	handleTakeItemEntity (Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;)V a
	handleTeleportEntity (Lnet/minecraft/network/protocol/game/ClientboundTeleportEntityPacket;)V a
	handleTitlesClear (Lnet/minecraft/network/protocol/game/ClientboundClearTitlesPacket;)V a
	handleUpdateAdvancementsPacket (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
	handleUpdateAttributes (Lnet/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket;)V a
	handleUpdateMobEffect (Lnet/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket;)V a
	handleUpdateRecipes (Lnet/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/game/ClientboundUpdateTagsPacket;)V a
	setActionBarText (Lnet/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket;)V a
	setSubtitleText (Lnet/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket;)V a
	setTitleText (Lnet/minecraft/network/protocol/game/ClientboundSetTitleTextPacket;)V a
	setTitlesAnimation (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket;)V a
net/minecraft/network/protocol/game/ClientboundAddEntityPacket net/minecraft/network/protocol/game/PacketPlayOutSpawnEntity
	LIMIT b
	MAGICAL_QUANTIZATION a
	data n
	id c
	type m
	uuid d
	x e
	xRot k
	xa h
	y f
	yRot l
	ya i
	z g
	za j
	getData ()I m
	getId ()I b
	getType ()Lnet/minecraft/world/entity/EntityType; l
	getUUID ()Ljava/util/UUID; c
	getX ()D d
	getXa ()D g
	getY ()D e
	getYa ()D h
	getZ ()D f
	getZa ()D i
	getxRot ()I j
	getyRot ()I k
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket net/minecraft/network/protocol/game/PacketPlayOutSpawnEntityExperienceOrb
	id a
	value e
	x b
	y c
	z d
	getId ()I b
	getValue ()I f
	getX ()D c
	getY ()D d
	getZ ()D e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddMobPacket net/minecraft/network/protocol/game/PacketPlayOutSpawnEntityLiving
	id a
	type c
	uuid b
	x d
	xRot k
	xd g
	y e
	yHeadRot l
	yRot j
	yd h
	z f
	zd i
	getId ()I b
	getType ()I d
	getUUID ()Ljava/util/UUID; c
	getX ()D e
	getXd ()I h
	getY ()D f
	getYd ()I i
	getZ ()D g
	getZd ()I j
	getxRot ()B l
	getyHeadRot ()B m
	getyRot ()B k
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddPaintingPacket net/minecraft/network/protocol/game/PacketPlayOutSpawnEntityPainting
	direction d
	id a
	motive e
	pos c
	uuid b
	getDirection ()Lnet/minecraft/core/Direction; e
	getId ()I b
	getMotive ()Lnet/minecraft/world/entity/decoration/Motive; f
	getPos ()Lnet/minecraft/core/BlockPos; d
	getUUID ()Ljava/util/UUID; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddPlayerPacket net/minecraft/network/protocol/game/PacketPlayOutNamedEntitySpawn
	entityId a
	playerId b
	x c
	xRot g
	y d
	yRot f
	z e
	getEntityId ()I b
	getPlayerId ()Ljava/util/UUID; c
	getX ()D d
	getY ()D e
	getZ ()D f
	getxRot ()B h
	getyRot ()B g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAnimatePacket net/minecraft/network/protocol/game/PacketPlayOutAnimation
	CRITICAL_HIT e
	HURT b
	MAGIC_CRITICAL_HIT f
	SWING_MAIN_HAND a
	SWING_OFF_HAND d
	WAKE_UP c
	action h
	id g
	getAction ()I c
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAwardStatsPacket net/minecraft/network/protocol/game/PacketPlayOutStatistic
	stats a
	getStatIdCap (Lnet/minecraft/stats/Stat;)I a
	getStats ()Ljava/util/Map; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	readStatCap (Lnet/minecraft/stats/StatType;I)Lnet/minecraft/stats/Stat; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket net/minecraft/network/protocol/game/PacketPlayOutBlockBreak
	LOGGER e
	action c
	allGood d
	pos a
	state b
	action ()Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; d
	allGood ()Z e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	pos ()Lnet/minecraft/core/BlockPos; b
	state ()Lnet/minecraft/world/level/block/state/BlockState; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket net/minecraft/network/protocol/game/PacketPlayOutBlockBreakAnimation
	id a
	pos b
	progress c
	getId ()I b
	getPos ()Lnet/minecraft/core/BlockPos; c
	getProgress ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket net/minecraft/network/protocol/game/PacketPlayOutTileEntityData
	pos a
	tag c
	type b
	create (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	create (Lnet/minecraft/world/level/block/entity/BlockEntity;Ljava/util/function/Function;)Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getPos ()Lnet/minecraft/core/BlockPos; b
	getTag ()Lnet/minecraft/nbt/CompoundTag; d
	getType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockEventPacket net/minecraft/network/protocol/game/PacketPlayOutBlockAction
	b0 b
	b1 c
	block d
	pos a
	getB0 ()I c
	getB1 ()I d
	getBlock ()Lnet/minecraft/world/level/block/Block; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket net/minecraft/network/protocol/game/PacketPlayOutBlockChange
	blockState b
	pos a
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getPos ()Lnet/minecraft/core/BlockPos; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket net/minecraft/network/protocol/game/PacketPlayOutBoss
	FLAG_DARKEN a
	FLAG_FOG c
	FLAG_MUSIC b
	REMOVE_OPERATION f
	id d
	operation e
	createAddPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; a
	createRemovePacket (Ljava/util/UUID;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; a
	createUpdateNamePacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; c
	createUpdateProgressPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; b
	createUpdatePropertiesPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; e
	createUpdateStylePacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; d
	dispatch (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	encodeProperties (ZZZ)I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$AddOperation ri$a
	color c
	createWorldFog g
	darkenScreen e
	name a
	overlay d
	playMusic f
	progress b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler ri$b
	add (Ljava/util/UUID;Lnet/minecraft/network/chat/Component;FLnet/minecraft/world/BossEvent$BossBarColor;Lnet/minecraft/world/BossEvent$BossBarOverlay;ZZZ)V a
	remove (Ljava/util/UUID;)V a
	updateName (Ljava/util/UUID;Lnet/minecraft/network/chat/Component;)V a
	updateProgress (Ljava/util/UUID;F)V a
	updateProperties (Ljava/util/UUID;ZZZ)V a
	updateStyle (Ljava/util/UUID;Lnet/minecraft/world/BossEvent$BossBarColor;Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation net/minecraft/network/protocol/game/PacketPlayOutBoss$Action
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType ri$d
	$VALUES h
	ADD a
	REMOVE b
	UPDATE_NAME d
	UPDATE_PROGRESS c
	UPDATE_PROPERTIES f
	UPDATE_STYLE e
	reader g
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateNameOperation ri$e
	name a
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateProgressOperation ri$f
	progress a
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdatePropertiesOperation ri$g
	createWorldFog c
	darkenScreen a
	playMusic b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateStyleOperation ri$h
	color a
	overlay b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket net/minecraft/network/protocol/game/PacketPlayOutServerDifficulty
	difficulty a
	locked b
	getDifficulty ()Lnet/minecraft/world/Difficulty; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isLocked ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundChatPacket net/minecraft/network/protocol/game/PacketPlayOutChat
	message a
	sender c
	type b
	getMessage ()Lnet/minecraft/network/chat/Component; b
	getSender ()Ljava/util/UUID; d
	getType ()Lnet/minecraft/network/chat/ChatType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket net/minecraft/network/protocol/game/PacketPlayOutTabComplete
	id a
	suggestions b
	getId ()I b
	getSuggestions ()Lcom/mojang/brigadier/suggestion/Suggestions; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket net/minecraft/network/protocol/game/PacketPlayOutCommands
	FLAG_CUSTOM_SUGGESTIONS d
	FLAG_EXECUTABLE b
	FLAG_REDIRECT c
	MASK_TYPE a
	TYPE_ARGUMENT g
	TYPE_LITERAL f
	TYPE_ROOT e
	root h
	createBuilder (Lnet/minecraft/network/FriendlyByteBuf;B)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	enumerateNodes (Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
	getNodesInIdOrder (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ljava/util/List; a
	getRoot ()Lcom/mojang/brigadier/tree/RootCommandNode; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	readNode (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry; b
	resolveEntries (Ljava/util/List;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeNode (Lnet/minecraft/network/FriendlyByteBuf;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Map;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry rn$a
	builder a
	children d
	flags b
	node e
	redirect c
	build (Ljava/util/List;)Z a
net/minecraft/network/protocol/game/ClientboundContainerClosePacket net/minecraft/network/protocol/game/PacketPlayOutCloseWindow
	containerId a
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket net/minecraft/network/protocol/game/PacketPlayOutWindowItems
	carriedItem d
	containerId a
	items c
	stateId b
	getCarriedItem ()Lnet/minecraft/world/item/ItemStack; d
	getContainerId ()I b
	getItems ()Ljava/util/List; c
	getStateId ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket net/minecraft/network/protocol/game/PacketPlayOutWindowData
	containerId a
	id b
	value c
	getContainerId ()I b
	getId ()I c
	getValue ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket net/minecraft/network/protocol/game/PacketPlayOutSetSlot
	CARRIED_ITEM a
	PLAYER_INVENTORY b
	containerId c
	itemStack f
	slot e
	stateId d
	getContainerId ()I b
	getItem ()Lnet/minecraft/world/item/ItemStack; d
	getSlot ()I c
	getStateId ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCooldownPacket net/minecraft/network/protocol/game/PacketPlayOutSetCooldown
	duration b
	item a
	getDuration ()I c
	getItem ()Lnet/minecraft/world/item/Item; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket net/minecraft/network/protocol/game/PacketPlayOutCustomPayload
	BRAND a
	DEBUG_BEE l
	DEBUG_BRAIN k
	DEBUG_GAME_EVENT q
	DEBUG_GAME_EVENT_LISTENER r
	DEBUG_GAME_TEST_ADD_MARKER n
	DEBUG_GAME_TEST_CLEAR o
	DEBUG_GOAL_SELECTOR j
	DEBUG_HIVE m
	DEBUG_NEIGHBORSUPDATE_PACKET c
	DEBUG_PATHFINDING_PACKET b
	DEBUG_POI_ADDED_PACKET g
	DEBUG_POI_REMOVED_PACKET h
	DEBUG_POI_TICKET_COUNT_PACKET f
	DEBUG_RAIDS p
	DEBUG_STRUCTURES_PACKET d
	DEBUG_VILLAGE_SECTIONS i
	DEBUG_WORLDGENATTEMPT_PACKET e
	MAX_PAYLOAD_SIZE s
	data u
	identifier t
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCustomSoundPacket net/minecraft/network/protocol/game/PacketPlayOutCustomSoundEffect
	LOCATION_ACCURACY a
	name b
	pitch h
	source c
	volume g
	x d
	y e
	z f
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getPitch ()F h
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F g
	getX ()D d
	getY ()D e
	getZ ()D f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundDisconnectPacket net/minecraft/network/protocol/game/PacketPlayOutKickDisconnect
	reason a
	getReason ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundEntityEventPacket net/minecraft/network/protocol/game/PacketPlayOutEntityStatus
	entityId a
	eventId b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getEventId ()B b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundExplodePacket net/minecraft/network/protocol/game/PacketPlayOutExplosion
	knockbackX f
	knockbackY g
	knockbackZ h
	power d
	toBlow e
	x a
	y b
	z c
	getKnockbackX ()F b
	getKnockbackY ()F c
	getKnockbackZ ()F d
	getPower ()F h
	getToBlow ()Ljava/util/List; i
	getX ()D e
	getY ()D f
	getZ ()D g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket net/minecraft/network/protocol/game/PacketPlayOutUnloadChunk
	x a
	z b
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundGameEventPacket net/minecraft/network/protocol/game/PacketPlayOutGameStateChange
	ARROW_HIT_PLAYER g
	CHANGE_GAME_MODE d
	DEMO_EVENT f
	DEMO_PARAM_HINT_1 n
	DEMO_PARAM_HINT_2 o
	DEMO_PARAM_HINT_3 p
	DEMO_PARAM_HINT_4 q
	DEMO_PARAM_INTRO m
	GUARDIAN_ELDER_EFFECT k
	IMMEDIATE_RESPAWN l
	NO_RESPAWN_BLOCK_AVAILABLE a
	PUFFER_FISH_STING j
	RAIN_LEVEL_CHANGE h
	START_RAINING b
	STOP_RAINING c
	THUNDER_LEVEL_CHANGE i
	WIN_GAME e
	event r
	param s
	getEvent ()Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket$Type; b
	getParam ()F c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type rz$a
	TYPES a
	id b
net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket net/minecraft/network/protocol/game/PacketPlayOutOpenWindowHorse
	containerId a
	entityId c
	size b
	getContainerId ()I b
	getEntityId ()I d
	getSize ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundKeepAlivePacket net/minecraft/network/protocol/game/PacketPlayOutKeepAlive
	id a
	getId ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo sd$a
	packedXZ a
	tag d
	type c
	y b
	create (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput sd$b
net/minecraft/network/protocol/game/ClientboundLevelEventPacket net/minecraft/network/protocol/game/PacketPlayOutWorldEvent
	data c
	globalEvent d
	pos b
	type a
	getData ()I d
	getPos ()Lnet/minecraft/core/BlockPos; e
	getType ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isGlobalEvent ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket net/minecraft/network/protocol/game/PacketPlayOutWorldParticles
	count h
	maxSpeed g
	overrideLimiter i
	particle j
	x a
	xDist d
	y b
	yDist e
	z c
	zDist f
	getCount ()I j
	getMaxSpeed ()F i
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; k
	getX ()D c
	getXDist ()F f
	getY ()D d
	getYDist ()F g
	getZ ()D e
	getZDist ()F h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isOverrideLimiter ()Z b
	readParticle (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLightUpdatePacket net/minecraft/network/protocol/game/PacketPlayOutLightUpdate
	lightData c
	x a
	z b
	getLightData ()Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData; d
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLoginPacket net/minecraft/network/protocol/game/PacketPlayOutLogin
	chunkRadius k
	dimension h
	dimensionType g
	gameType c
	hardcore b
	isDebug o
	isFlat p
	levels e
	maxPlayers j
	playerId a
	previousGameType d
	reducedDebugInfo m
	registryHolder f
	seed i
	showDeathScreen n
	simulationDistance l
	chunkRadius ()I l
	dimension ()Lnet/minecraft/resources/ResourceKey; i
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; h
	gameType ()Lnet/minecraft/world/level/GameType; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	hardcore ()Z c
	isDebug ()Z p
	isFlat ()Z q
	levels ()Ljava/util/Set; f
	maxPlayers ()I k
	playerId ()I b
	previousGameType ()Lnet/minecraft/world/level/GameType; e
	reducedDebugInfo ()Z n
	registryHolder ()Lnet/minecraft/core/RegistryAccess$RegistryHolder; g
	seed ()J j
	showDeathScreen ()Z o
	simulationDistance ()I m
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMapItemDataPacket net/minecraft/network/protocol/game/PacketPlayOutMap
	colorPatch e
	decorations d
	locked c
	mapId a
	scale b
	applyToMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	getMapId ()I b
	getScale ()B c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isLocked ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket net/minecraft/network/protocol/game/PacketPlayOutOpenWindowMerchant
	canRestock f
	containerId a
	offers b
	showProgress e
	villagerLevel c
	villagerXp d
	canRestock ()Z g
	getContainerId ()I b
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; c
	getVillagerLevel ()I d
	getVillagerXp ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	showProgress ()Z f
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket net/minecraft/network/protocol/game/PacketPlayOutEntity
	TRUNCATION_STEPS j
	entityId a
	hasPos i
	hasRot h
	onGround g
	xRot f
	xa b
	yRot e
	ya c
	za d
	entityToPacket (D)J a
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getXa ()S b
	getYa ()S c
	getZa ()S d
	getxRot ()B f
	getyRot ()B e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	hasPosition ()Z h
	hasRotation ()Z g
	isOnGround ()Z i
	packetToEntity (J)D a
	packetToEntity (JJJ)Lnet/minecraft/world/phys/Vec3; a
	updateEntityPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos net/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutRelEntityMove
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot net/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutRelEntityMoveLook
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot net/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutEntityLook
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket net/minecraft/network/protocol/game/PacketPlayOutVehicleMove
	x a
	xRot e
	y b
	yRot d
	z c
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenBookPacket net/minecraft/network/protocol/game/PacketPlayOutOpenBook
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenScreenPacket net/minecraft/network/protocol/game/PacketPlayOutOpenWindow
	containerId a
	title c
	type b
	getContainerId ()I b
	getTitle ()Lnet/minecraft/network/chat/Component; d
	getType ()Lnet/minecraft/world/inventory/MenuType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket net/minecraft/network/protocol/game/PacketPlayOutOpenSignEditor
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket net/minecraft/network/protocol/game/PacketPlayOutAutoRecipe
	containerId a
	recipe b
	getContainerId ()I c
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket net/minecraft/network/protocol/game/PacketPlayOutAbilities
	FLAG_CAN_FLY c
	FLAG_FLYING b
	FLAG_INSTABUILD d
	FLAG_INVULNERABLE a
	canFly g
	flyingSpeed i
	instabuild h
	invulnerable e
	isFlying f
	walkingSpeed j
	canFly ()Z d
	canInstabuild ()Z e
	getFlyingSpeed ()F f
	getWalkingSpeed ()F g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isFlying ()Z c
	isInvulnerable ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket net/minecraft/network/protocol/game/PacketPlayOutPlayerInfo
	action a
	entries b
	getAction ()Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action; c
	getEntries ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	readDisplayName (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/chat/Component; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeDisplayName (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/chat/Component;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action net/minecraft/network/protocol/game/PacketPlayOutPlayerInfo$EnumPlayerInfoAction
	$VALUES f
	ADD_PLAYER a
	REMOVE_PLAYER e
	UPDATE_DISPLAY_NAME d
	UPDATE_GAME_MODE b
	UPDATE_LATENCY c
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate net/minecraft/network/protocol/game/PacketPlayOutPlayerInfo$PlayerInfoData
	displayName d
	gameMode b
	latency a
	profile c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getGameMode ()Lnet/minecraft/world/level/GameType; c
	getLatency ()I b
	getProfile ()Lcom/mojang/authlib/GameProfile; a
net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket net/minecraft/network/protocol/game/PacketPlayOutLookAt
	atEntity g
	entity d
	fromAnchor e
	toAnchor f
	x a
	y b
	z c
	getFromAnchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; b
	getPosition (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/phys/Vec3; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket net/minecraft/network/protocol/game/PacketPlayOutPosition
	dismountVehicle h
	id g
	relativeArguments f
	x a
	xRot e
	y b
	yRot d
	z c
	getId ()I g
	getRelativeArguments ()Ljava/util/Set; i
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	requestDismountVehicle ()Z h
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument net/minecraft/network/protocol/game/PacketPlayOutPosition$EnumPlayerTeleportFlags
	$VALUES g
	X a
	X_ROT e
	Y b
	Y_ROT d
	Z c
	bit f
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument; b
	getMask ()I a
	isSet (I)Z b
	pack (Ljava/util/Set;)I a
	unpack (I)Ljava/util/Set; a
net/minecraft/network/protocol/game/ClientboundRecipePacket net/minecraft/network/protocol/game/PacketPlayOutRecipes
	bookSettings d
	recipes b
	state a
	toHighlight c
	getBookSettings ()Lnet/minecraft/stats/RecipeBookSettings; d
	getHighlights ()Ljava/util/List; c
	getRecipes ()Ljava/util/List; b
	getState ()Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State; e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRecipePacket$State net/minecraft/network/protocol/game/PacketPlayOutRecipes$Action
	$VALUES d
	ADD b
	INIT a
	REMOVE c
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State; a
net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket net/minecraft/network/protocol/game/PacketPlayOutEntityDestroy
	entityIds a
	getEntityIds ()Lit/unimi/dsi/fastutil/ints/IntList; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket net/minecraft/network/protocol/game/PacketPlayOutRemoveEntityEffect
	effect b
	entityId a
	getEffect ()Lnet/minecraft/world/effect/MobEffect; b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundResourcePackPacket net/minecraft/network/protocol/game/PacketPlayOutResourcePackSend
	MAX_HASH_LENGTH a
	hash c
	prompt e
	required d
	url b
	getHash ()Ljava/lang/String; c
	getPrompt ()Lnet/minecraft/network/chat/Component; e
	getUrl ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isRequired ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRespawnPacket net/minecraft/network/protocol/game/PacketPlayOutRespawn
	dimension b
	dimensionType a
	isDebug f
	isFlat g
	keepAllPlayerData h
	playerGameType d
	previousPlayerGameType e
	seed c
	getDimension ()Lnet/minecraft/resources/ResourceKey; c
	getDimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; b
	getPlayerGameType ()Lnet/minecraft/world/level/GameType; e
	getPreviousPlayerGameType ()Lnet/minecraft/world/level/GameType; f
	getSeed ()J d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isDebug ()Z g
	isFlat ()Z h
	shouldKeepAllPlayerData ()Z i
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRotateHeadPacket net/minecraft/network/protocol/game/PacketPlayOutEntityHeadRotation
	entityId a
	yHeadRot b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getYHeadRot ()B b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket net/minecraft/network/protocol/game/PacketPlayOutMultiBlockChange
	POS_IN_SECTION_BITS a
	positions c
	sectionPos b
	states d
	suppressLightUpdates e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	runUpdates (Ljava/util/function/BiConsumer;)V a
	shouldSuppressLightUpdates ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket net/minecraft/network/protocol/game/PacketPlayOutSelectAdvancementTab
	tab a
	getTab ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetCameraPacket net/minecraft/network/protocol/game/PacketPlayOutCamera
	cameraId a
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket net/minecraft/network/protocol/game/PacketPlayOutHeldItemSlot
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket net/minecraft/network/protocol/game/PacketPlayOutViewCentre
	x a
	z b
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket net/minecraft/network/protocol/game/PacketPlayOutViewDistance
	radius a
	getRadius ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket net/minecraft/network/protocol/game/PacketPlayOutSpawnPosition
	angle b
	pos a
	getAngle ()F c
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket net/minecraft/network/protocol/game/PacketPlayOutScoreboardDisplayObjective
	objectiveName b
	slot a
	getObjectiveName ()Ljava/lang/String; c
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket net/minecraft/network/protocol/game/PacketPlayOutEntityMetadata
	id a
	packedItems b
	getId ()I c
	getUnpackedData ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket net/minecraft/network/protocol/game/PacketPlayOutAttachEntity
	destId b
	sourceId a
	getDestId ()I c
	getSourceId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket net/minecraft/network/protocol/game/PacketPlayOutEntityVelocity
	id a
	xa b
	ya c
	za d
	getId ()I b
	getXa ()I c
	getYa ()I d
	getZa ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket net/minecraft/network/protocol/game/PacketPlayOutEntityEquipment
	CONTINUE_MASK a
	entity b
	slots c
	getEntity ()I b
	getSlots ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetExperiencePacket net/minecraft/network/protocol/game/PacketPlayOutExperience
	experienceLevel c
	experienceProgress a
	totalExperience b
	getExperienceLevel ()I d
	getExperienceProgress ()F b
	getTotalExperience ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetHealthPacket net/minecraft/network/protocol/game/PacketPlayOutUpdateHealth
	food b
	health a
	saturation c
	getFood ()I c
	getHealth ()F b
	getSaturation ()F d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetObjectivePacket net/minecraft/network/protocol/game/PacketPlayOutScoreboardObjective
	METHOD_ADD a
	METHOD_CHANGE c
	METHOD_REMOVE b
	displayName e
	method g
	objectiveName d
	renderType f
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getMethod ()I d
	getObjectiveName ()Ljava/lang/String; b
	getRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPassengersPacket net/minecraft/network/protocol/game/PacketPlayOutMount
	passengers b
	vehicle a
	getPassengers ()[I b
	getVehicle ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket net/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam
	MAX_COLLISION_LENGTH g
	MAX_VISIBILITY_LENGTH f
	METHOD_ADD a
	METHOD_CHANGE c
	METHOD_JOIN d
	METHOD_LEAVE e
	METHOD_REMOVE b
	method h
	name i
	parameters k
	players j
	createAddOrModifyPacket (Lnet/minecraft/world/scores/PlayerTeam;Z)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	createPlayerPacket (Lnet/minecraft/world/scores/PlayerTeam;Ljava/lang/String;Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action;)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	createRemovePacket (Lnet/minecraft/world/scores/PlayerTeam;)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	getName ()Ljava/lang/String; d
	getParameters ()Ljava/util/Optional; f
	getPlayerAction ()Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; b
	getPlayers ()Ljava/util/Collection; e
	getTeamAction ()Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldHaveParameters (I)Z b
	shouldHavePlayerList (I)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action uc$a
	$VALUES c
	ADD a
	REMOVE b
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Parameters uc$b
	collisionRule e
	color f
	displayName a
	nametagVisibility d
	options g
	playerPrefix b
	playerSuffix c
	getCollisionRule ()Ljava/lang/String; e
	getColor ()Lnet/minecraft/ChatFormatting; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
	getNametagVisibility ()Ljava/lang/String; d
	getOptions ()I b
	getPlayerPrefix ()Lnet/minecraft/network/chat/Component; f
	getPlayerSuffix ()Lnet/minecraft/network/chat/Component; g
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetScorePacket net/minecraft/network/protocol/game/PacketPlayOutScoreboardScore
	method d
	objectiveName b
	owner a
	score c
	getMethod ()Lnet/minecraft/server/ServerScoreboard$Method; e
	getObjectiveName ()Ljava/lang/String; c
	getOwner ()Ljava/lang/String; b
	getScore ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTimePacket net/minecraft/network/protocol/game/PacketPlayOutUpdateTime
	dayTime b
	gameTime a
	getDayTime ()J c
	getGameTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSoundEntityPacket net/minecraft/network/protocol/game/PacketPlayOutEntitySound
	id c
	pitch e
	sound a
	source b
	volume d
	getId ()I d
	getPitch ()F f
	getSound ()Lnet/minecraft/sounds/SoundEvent; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSoundPacket net/minecraft/network/protocol/game/PacketPlayOutNamedSoundEffect
	LOCATION_ACCURACY a
	pitch h
	sound b
	source c
	volume g
	x d
	y e
	z f
	getPitch ()F h
	getSound ()Lnet/minecraft/sounds/SoundEvent; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F g
	getX ()D d
	getY ()D e
	getZ ()D f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundStopSoundPacket net/minecraft/network/protocol/game/PacketPlayOutStopSound
	HAS_SOUND b
	HAS_SOURCE a
	name c
	source d
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTabListPacket net/minecraft/network/protocol/game/PacketPlayOutPlayerListHeaderFooter
	footer b
	header a
	getFooter ()Lnet/minecraft/network/chat/Component; c
	getHeader ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTagQueryPacket net/minecraft/network/protocol/game/PacketPlayOutNBTQuery
	tag b
	transactionId a
	getTag ()Lnet/minecraft/nbt/CompoundTag; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket net/minecraft/network/protocol/game/PacketPlayOutCollect
	amount c
	itemId a
	playerId b
	getAmount ()I d
	getItemId ()I b
	getPlayerId ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket net/minecraft/network/protocol/game/PacketPlayOutEntityTeleport
	id a
	onGround g
	x b
	xRot f
	y c
	yRot e
	z d
	getId ()I b
	getX ()D c
	getY ()D d
	getZ ()D e
	getxRot ()B g
	getyRot ()B f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isOnGround ()Z h
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket net/minecraft/network/protocol/game/PacketPlayOutAdvancements
	added b
	progress d
	removed c
	reset a
	getAdded ()Ljava/util/Map; b
	getProgress ()Ljava/util/Map; d
	getRemoved ()Ljava/util/Set; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldReset ()Z e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket net/minecraft/network/protocol/game/PacketPlayOutUpdateAttributes
	attributes b
	entityId a
	getEntityId ()I b
	getValues ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot net/minecraft/network/protocol/game/PacketPlayOutUpdateAttributes$AttributeSnapshot
	attribute a
	base b
	modifiers c
	getAttribute ()Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getBase ()D b
	getModifiers ()Ljava/util/Collection; c
net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket net/minecraft/network/protocol/game/PacketPlayOutEntityEffect
	FLAG_AMBIENT a
	FLAG_SHOW_ICON c
	FLAG_VISIBLE b
	effectAmplifier f
	effectDurationTicks g
	effectId e
	entityId d
	flags h
	effectShowsIcon ()Z i
	getEffectAmplifier ()B e
	getEffectDurationTicks ()I f
	getEffectId ()B d
	getEntityId ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isEffectAmbient ()Z h
	isEffectVisible ()Z g
	isSuperLongDuration ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket net/minecraft/network/protocol/game/PacketPlayOutRecipeUpdate
	recipes a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; b
	getRecipes ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket net/minecraft/network/protocol/game/PacketPlayOutTags
	tags a
	getTags ()Ljava/util/Map; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/DebugPackets net/minecraft/network/protocol/game/PacketDebug
	LOGGER a
	getMemoryDescriptions (Lnet/minecraft/world/entity/LivingEntity;J)Ljava/util/List; a
	getShortDescription (Lnet/minecraft/server/level/ServerLevel;Ljava/lang/Object;)Ljava/lang/String; a
	sendBeeInfo (Lnet/minecraft/world/entity/animal/Bee;)V a
	sendEntityBrain (Lnet/minecraft/world/entity/LivingEntity;)V a
	sendGameEventInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	sendGameEventListenerInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	sendGameTestAddMarker (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/lang/String;II)V a
	sendGameTestClearPacket (Lnet/minecraft/server/level/ServerLevel;)V a
	sendGoalSelector (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/goal/GoalSelector;)V a
	sendHiveInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity;)V a
	sendNeighborsUpdatePacket (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	sendPacketToAllPlayers (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/resources/ResourceLocation;)V a
	sendPathFindingPacket (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/pathfinder/Path;F)V a
	sendPoiAddedPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	sendPoiPacketsForChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;)V a
	sendPoiRemovedPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V b
	sendPoiTicketCountPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V c
	sendRaids (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Collection;)V a
	sendStructurePacket (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	sendVillageSectionsPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V d
	writeBrain (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerGamePacketListener net/minecraft/network/protocol/game/PacketListenerPlayIn
	handleAcceptTeleportPacket (Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V a
	handleBlockEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V a
	handleClientCommand (Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V a
	handleClientInformation (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	handleContainerButtonClick (Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V a
	handleContainerClick (Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V a
	handleCustomCommandSuggestions (Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ServerboundCustomPayloadPacket;)V a
	handleEditBook (Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V a
	handleEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V a
	handleInteract (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V a
	handleJigsawGenerate (Lnet/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ServerboundKeepAlivePacket;)V a
	handleLockDifficulty (Lnet/minecraft/network/protocol/game/ServerboundLockDifficultyPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V a
	handlePaddleBoat (Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V a
	handlePickItem (Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V a
	handlePlayerAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V a
	handlePlayerCommand (Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V a
	handlePlayerInput (Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V a
	handlePong (Lnet/minecraft/network/protocol/game/ServerboundPongPacket;)V a
	handleRecipeBookChangeSettingsPacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket;)V a
	handleRecipeBookSeenRecipePacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket;)V a
	handleRenameItem (Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket;)V a
	handleSeenAdvancements (Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V a
	handleSelectTrade (Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V a
	handleSetBeaconPacket (Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V a
	handleSetCommandBlock (Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V a
	handleSetCommandMinecart (Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V a
	handleSetCreativeModeSlot (Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V a
	handleSetJigsawBlock (Lnet/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket;)V a
	handleSetStructureBlock (Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V a
	handleSignUpdate (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V a
	handleTeleportToEntityPacket (Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V a
	handleUseItem (Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V a
	handleUseItemOn (Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V a
net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket net/minecraft/network/protocol/game/PacketPlayInTeleportAccept
	id a
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery net/minecraft/network/protocol/game/PacketPlayInTileNBTQuery
	pos b
	transactionId a
	getPos ()Lnet/minecraft/core/BlockPos; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket net/minecraft/network/protocol/game/PacketPlayInDifficultyChange
	difficulty a
	getDifficulty ()Lnet/minecraft/world/Difficulty; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChatPacket net/minecraft/network/protocol/game/PacketPlayInChat
	MAX_MESSAGE_LENGTH a
	message b
	getMessage ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundClientCommandPacket net/minecraft/network/protocol/game/PacketPlayInClientCommand
	action a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action net/minecraft/network/protocol/game/PacketPlayInClientCommand$EnumClientCommand
	$VALUES c
	PERFORM_RESPAWN a
	REQUEST_STATS b
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action; a
net/minecraft/network/protocol/game/ServerboundClientInformationPacket net/minecraft/network/protocol/game/PacketPlayInSettings
	MAX_LANGUAGE_LENGTH a
	allowsListing i
	chatColors e
	chatVisibility d
	language b
	mainHand g
	modelCustomisation f
	textFilteringEnabled h
	viewDistance c
	allowsListing ()Z i
	chatColors ()Z e
	chatVisibility ()Lnet/minecraft/world/entity/player/ChatVisiblity; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	language ()Ljava/lang/String; b
	mainHand ()Lnet/minecraft/world/entity/HumanoidArm; g
	modelCustomisation ()I f
	textFilteringEnabled ()Z h
	viewDistance ()I c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket net/minecraft/network/protocol/game/PacketPlayInTabComplete
	command b
	id a
	getCommand ()Ljava/lang/String; c
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket net/minecraft/network/protocol/game/PacketPlayInEnchantItem
	buttonId b
	containerId a
	getButtonId ()I c
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerClickPacket net/minecraft/network/protocol/game/PacketPlayInWindowClick
	MAX_SLOT_COUNT a
	buttonNum e
	carriedItem g
	changedSlots h
	clickType f
	containerId b
	slotNum d
	stateId c
	getButtonNum ()I d
	getCarriedItem ()Lnet/minecraft/world/item/ItemStack; e
	getChangedSlots ()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; f
	getClickType ()Lnet/minecraft/world/inventory/ClickType; g
	getContainerId ()I b
	getSlotNum ()I c
	getStateId ()I h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerClosePacket net/minecraft/network/protocol/game/PacketPlayInCloseWindow
	containerId a
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket net/minecraft/network/protocol/game/PacketPlayInCustomPayload
	BRAND a
	MAX_PAYLOAD_SIZE b
	data d
	identifier c
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundEditBookPacket net/minecraft/network/protocol/game/PacketPlayInBEdit
	MAX_BYTES_PER_CHAR a
	MAX_PAGES_COUNT d
	PAGE_MAX_CHARS c
	TITLE_MAX_CHARS b
	pages f
	slot e
	title g
	getPages ()Ljava/util/List; b
	getSlot ()I d
	getTitle ()Ljava/util/Optional; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundEntityTagQuery net/minecraft/network/protocol/game/PacketPlayInEntityNBTQuery
	entityId b
	transactionId a
	getEntityId ()I c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket net/minecraft/network/protocol/game/PacketPlayInUseEntity
	ATTACK_ACTION d
	action b
	entityId a
	usingSecondaryAction c
	createAttackPacket (Lnet/minecraft/world/entity/Entity;Z)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	createInteractionPacket (Lnet/minecraft/world/entity/Entity;ZLnet/minecraft/world/InteractionHand;)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	createInteractionPacket (Lnet/minecraft/world/entity/Entity;ZLnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getTarget (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isUsingSecondaryAction ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$Action net/minecraft/network/protocol/game/PacketPlayInUseEntity$EnumEntityUseAction
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType vl$b
	$VALUES e
	ATTACK b
	INTERACT a
	INTERACT_AT c
	reader d
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
net/minecraft/network/protocol/game/ServerboundInteractPacket$Handler vl$c
	onAttack ()V a
	onInteraction (Lnet/minecraft/world/InteractionHand;)V a
	onInteraction (Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAction vl$d
	hand a
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAtLocationAction vl$e
	hand a
	location b
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket net/minecraft/network/protocol/game/PacketPlayInJigsawGenerate
	keepJigsaws c
	levels b
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	keepJigsaws ()Z d
	levels ()I c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundKeepAlivePacket net/minecraft/network/protocol/game/PacketPlayInKeepAlive
	id a
	getId ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket net/minecraft/network/protocol/game/PacketPlayInDifficultyLock
	locked a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isLocked ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket net/minecraft/network/protocol/game/PacketPlayInFlying
	hasPos g
	hasRot h
	onGround f
	x a
	xRot e
	y b
	yRot d
	z c
	getX (D)D a
	getXRot (F)F b
	getY (D)D b
	getYRot (F)F a
	getZ (D)D c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	hasPosition ()Z c
	hasRotation ()Z d
	isOnGround ()Z b
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos net/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInPosition
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot net/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInPositionLook
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot net/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInLook
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly vp$d
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket net/minecraft/network/protocol/game/PacketPlayInVehicleMove
	x a
	xRot e
	y b
	yRot d
	z c
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket net/minecraft/network/protocol/game/PacketPlayInBoatMove
	left a
	right b
	getLeft ()Z b
	getRight ()Z c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPickItemPacket net/minecraft/network/protocol/game/PacketPlayInPickItem
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket net/minecraft/network/protocol/game/PacketPlayInAutoRecipe
	containerId a
	recipe b
	shiftDown c
	getContainerId ()I b
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isShiftDown ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket net/minecraft/network/protocol/game/PacketPlayInAbilities
	FLAG_FLYING a
	isFlying b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFlying ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerActionPacket net/minecraft/network/protocol/game/PacketPlayInBlockDig
	action c
	direction b
	pos a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; d
	getDirection ()Lnet/minecraft/core/Direction; c
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action net/minecraft/network/protocol/game/PacketPlayInBlockDig$EnumPlayerDigType
	$VALUES h
	ABORT_DESTROY_BLOCK b
	DROP_ALL_ITEMS d
	DROP_ITEM e
	RELEASE_USE_ITEM f
	START_DESTROY_BLOCK a
	STOP_DESTROY_BLOCK c
	SWAP_ITEM_WITH_OFFHAND g
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; a
net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket net/minecraft/network/protocol/game/PacketPlayInEntityAction
	action b
	data c
	id a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action; c
	getData ()I d
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action net/minecraft/network/protocol/game/PacketPlayInEntityAction$EnumPlayerAction
	$VALUES j
	OPEN_INVENTORY h
	PRESS_SHIFT_KEY a
	RELEASE_SHIFT_KEY b
	START_FALL_FLYING i
	START_RIDING_JUMP f
	START_SPRINTING d
	STOP_RIDING_JUMP g
	STOP_SLEEPING c
	STOP_SPRINTING e
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action; a
net/minecraft/network/protocol/game/ServerboundPlayerInputPacket net/minecraft/network/protocol/game/PacketPlayInSteerVehicle
	FLAG_JUMPING a
	FLAG_SHIFT_KEY_DOWN b
	isJumping e
	isShiftKeyDown f
	xxa c
	zza d
	getXxa ()F b
	getZza ()F c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isJumping ()Z d
	isShiftKeyDown ()Z e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket net/minecraft/network/protocol/game/PacketPlayInRecipeSettings
	bookType a
	isFiltering c
	isOpen b
	getBookType ()Lnet/minecraft/world/inventory/RecipeBookType; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFiltering ()Z d
	isOpen ()Z c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket net/minecraft/network/protocol/game/PacketPlayInRecipeDisplayed
	recipe a
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRenameItemPacket net/minecraft/network/protocol/game/PacketPlayInItemName
	name a
	getName ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundResourcePackPacket net/minecraft/network/protocol/game/PacketPlayInResourcePackStatus
	action a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action net/minecraft/network/protocol/game/PacketPlayInResourcePackStatus$EnumResourcePackStatus
	$VALUES e
	ACCEPTED d
	DECLINED b
	FAILED_DOWNLOAD c
	SUCCESSFULLY_LOADED a
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action; a
net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket net/minecraft/network/protocol/game/PacketPlayInAdvancements
	action a
	tab b
	closedScreen ()Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket; b
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action; c
	getTab ()Lnet/minecraft/resources/ResourceLocation; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	openedTab (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action net/minecraft/network/protocol/game/PacketPlayInAdvancements$Status
	$VALUES c
	CLOSED_SCREEN b
	OPENED_TAB a
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action; a
net/minecraft/network/protocol/game/ServerboundSelectTradePacket net/minecraft/network/protocol/game/PacketPlayInTrSel
	item a
	getItem ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetBeaconPacket net/minecraft/network/protocol/game/PacketPlayInBeacon
	primary a
	secondary b
	getPrimary ()I b
	getSecondary ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket net/minecraft/network/protocol/game/PacketPlayInHeldItemSlot
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket net/minecraft/network/protocol/game/PacketPlayInSetCommandBlock
	FLAG_AUTOMATIC c
	FLAG_CONDITIONAL b
	FLAG_TRACK_OUTPUT a
	automatic h
	command e
	conditional g
	mode i
	pos d
	trackOutput f
	getCommand ()Ljava/lang/String; c
	getMode ()Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; g
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isAutomatic ()Z f
	isConditional ()Z e
	isTrackOutput ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket net/minecraft/network/protocol/game/PacketPlayInSetCommandMinecart
	command b
	entity a
	trackOutput c
	getCommand ()Ljava/lang/String; b
	getCommandBlock (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/BaseCommandBlock; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isTrackOutput ()Z c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket net/minecraft/network/protocol/game/PacketPlayInSetCreativeSlot
	itemStack b
	slotNum a
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getSlotNum ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket net/minecraft/network/protocol/game/PacketPlayInSetJigsaw
	finalState e
	joint f
	name b
	pool d
	pos a
	target c
	getFinalState ()Ljava/lang/String; f
	getJoint ()Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; g
	getName ()Lnet/minecraft/resources/ResourceLocation; c
	getPool ()Lnet/minecraft/resources/ResourceLocation; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	getTarget ()Lnet/minecraft/resources/ResourceLocation; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket net/minecraft/network/protocol/game/PacketPlayInStruct
	FLAG_IGNORE_ENTITIES a
	FLAG_SHOW_AIR b
	FLAG_SHOW_BOUNDING_BOX c
	data l
	ignoreEntities m
	integrity p
	mirror j
	mode f
	name g
	offset h
	pos d
	rotation k
	seed q
	showAir n
	showBoundingBox o
	size i
	updateType e
	getData ()Ljava/lang/String; j
	getIntegrity ()F n
	getMirror ()Lnet/minecraft/world/level/block/Mirror; h
	getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode; d
	getName ()Ljava/lang/String; e
	getOffset ()Lnet/minecraft/core/BlockPos; f
	getPos ()Lnet/minecraft/core/BlockPos; b
	getRotation ()Lnet/minecraft/world/level/block/Rotation; i
	getSeed ()J o
	getSize ()Lnet/minecraft/core/Vec3i; g
	getUpdateType ()Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isIgnoreEntities ()Z k
	isShowAir ()Z l
	isShowBoundingBox ()Z m
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSignUpdatePacket net/minecraft/network/protocol/game/PacketPlayInUpdateSign
	MAX_STRING_LENGTH a
	lines c
	pos b
	getLines ()[Ljava/lang/String; c
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSwingPacket net/minecraft/network/protocol/game/PacketPlayInArmAnimation
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket net/minecraft/network/protocol/game/PacketPlayInSpectate
	uuid a
	getEntity (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundUseItemOnPacket net/minecraft/network/protocol/game/PacketPlayInUseItem
	blockHit a
	hand b
	getHand ()Lnet/minecraft/world/InteractionHand; b
	getHitResult ()Lnet/minecraft/world/phys/BlockHitResult; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundUseItemPacket net/minecraft/network/protocol/game/PacketPlayInBlockPlace
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/handshake/ClientIntentionPacket net/minecraft/network/protocol/handshake/PacketHandshakingInSetProtocol
	MAX_HOST_LENGTH a
	hostName c
	intention e
	port d
	protocolVersion b
	getHostName ()Ljava/lang/String; d
	getIntention ()Lnet/minecraft/network/ConnectionProtocol; b
	getPort ()I e
	getProtocolVersion ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/handshake/ServerHandshakePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/handshake/ServerHandshakePacketListener net/minecraft/network/protocol/handshake/PacketHandshakingInListener
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
net/minecraft/network/protocol/login/ClientLoginPacketListener net/minecraft/network/protocol/login/PacketLoginOutListener
	handleCompression (Lnet/minecraft/network/protocol/login/ClientboundLoginCompressionPacket;)V a
	handleCustomQuery (Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket;)V a
	handleGameProfile (Lnet/minecraft/network/protocol/login/ClientboundGameProfilePacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ClientboundHelloPacket;)V a
net/minecraft/network/protocol/login/ClientboundCustomQueryPacket net/minecraft/network/protocol/login/PacketLoginOutCustomPayload
	MAX_PAYLOAD_SIZE a
	data d
	identifier c
	transactionId b
	getData ()Lnet/minecraft/network/FriendlyByteBuf; d
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundGameProfilePacket net/minecraft/network/protocol/login/PacketLoginOutSuccess
	gameProfile a
	getGameProfile ()Lcom/mojang/authlib/GameProfile; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundHelloPacket net/minecraft/network/protocol/login/PacketLoginOutEncryptionBegin
	nonce c
	publicKey b
	serverId a
	getNonce ()[B d
	getPublicKey ()Ljava/security/PublicKey; c
	getServerId ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket net/minecraft/network/protocol/login/PacketLoginOutSetCompression
	compressionThreshold a
	getCompressionThreshold ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket net/minecraft/network/protocol/login/PacketLoginOutDisconnect
	reason a
	getReason ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerLoginPacketListener net/minecraft/network/protocol/login/PacketLoginInListener
	handleCustomQueryPacket (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryPacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ServerboundHelloPacket;)V a
	handleKey (Lnet/minecraft/network/protocol/login/ServerboundKeyPacket;)V a
net/minecraft/network/protocol/login/ServerboundCustomQueryPacket net/minecraft/network/protocol/login/PacketLoginInCustomPayload
	MAX_PAYLOAD_SIZE a
	data c
	transactionId b
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerboundHelloPacket net/minecraft/network/protocol/login/PacketLoginInStart
	gameProfile a
	getGameProfile ()Lcom/mojang/authlib/GameProfile; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerboundKeyPacket net/minecraft/network/protocol/login/PacketLoginInEncryptionBegin
	keybytes a
	nonce b
	getNonce (Ljava/security/PrivateKey;)[B b
	getSecretKey (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ClientStatusPacketListener net/minecraft/network/protocol/status/PacketStatusOutListener
	handlePongResponse (Lnet/minecraft/network/protocol/status/ClientboundPongResponsePacket;)V a
	handleStatusResponse (Lnet/minecraft/network/protocol/status/ClientboundStatusResponsePacket;)V a
net/minecraft/network/protocol/status/ClientboundPongResponsePacket net/minecraft/network/protocol/status/PacketStatusOutPong
	time a
	getTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ClientStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ClientboundStatusResponsePacket net/minecraft/network/protocol/status/PacketStatusOutServerInfo
	GSON a
	status b
	getStatus ()Lnet/minecraft/network/protocol/status/ServerStatus; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ClientStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ServerStatus net/minecraft/network/protocol/status/ServerPing
	FAVICON_HEIGHT b
	FAVICON_WIDTH a
	description c
	favicon f
	players d
	version e
	getDescription ()Lnet/minecraft/network/chat/Component; a
	getFavicon ()Ljava/lang/String; d
	getPlayers ()Lnet/minecraft/network/protocol/status/ServerStatus$Players; b
	getVersion ()Lnet/minecraft/network/protocol/status/ServerStatus$Version; c
	setDescription (Lnet/minecraft/network/chat/Component;)V a
	setFavicon (Ljava/lang/String;)V a
	setPlayers (Lnet/minecraft/network/protocol/status/ServerStatus$Players;)V a
	setVersion (Lnet/minecraft/network/protocol/status/ServerStatus$Version;)V a
net/minecraft/network/protocol/status/ServerStatus$Players net/minecraft/network/protocol/status/ServerPing$ServerPingPlayerSample
	maxPlayers a
	numPlayers b
	sample c
	getMaxPlayers ()I a
	getNumPlayers ()I b
	getSample ()[Lcom/mojang/authlib/GameProfile; c
	setSample ([Lcom/mojang/authlib/GameProfile;)V a
net/minecraft/network/protocol/status/ServerStatus$Players$Serializer net/minecraft/network/protocol/status/ServerPing$ServerPingPlayerSample$Serializer
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus$Players; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus$Players;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatus$Serializer net/minecraft/network/protocol/status/ServerPing$Serializer
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatus$Version net/minecraft/network/protocol/status/ServerPing$ServerData
	name a
	protocol b
	getName ()Ljava/lang/String; a
	getProtocol ()I b
net/minecraft/network/protocol/status/ServerStatus$Version$Serializer net/minecraft/network/protocol/status/ServerPing$ServerData$Serializer
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus$Version; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus$Version;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatusPacketListener net/minecraft/network/protocol/status/PacketStatusInListener
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
	handleStatusRequest (Lnet/minecraft/network/protocol/status/ServerboundStatusRequestPacket;)V a
net/minecraft/network/protocol/status/ServerboundPingRequestPacket net/minecraft/network/protocol/status/PacketStatusInPing
	time a
	getTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ServerStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ServerboundStatusRequestPacket net/minecraft/network/protocol/status/PacketStatusInStart
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ServerStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/syncher/EntityDataAccessor net/minecraft/network/syncher/DataWatcherObject
	id a
	serializer b
	getId ()I a
	getSerializer ()Lnet/minecraft/network/syncher/EntityDataSerializer; b
net/minecraft/network/syncher/EntityDataSerializer net/minecraft/network/syncher/DataWatcherSerializer
	copy (Ljava/lang/Object;)Ljava/lang/Object; a
	createAccessor (I)Lnet/minecraft/network/syncher/EntityDataAccessor; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Ljava/lang/Object;)V a
net/minecraft/network/syncher/EntityDataSerializers net/minecraft/network/syncher/DataWatcherRegistry
	BLOCK_POS l
	BLOCK_STATE h
	BOOLEAN i
	BYTE a
	COMPONENT e
	COMPOUND_TAG p
	DIRECTION n
	FLOAT c
	INT b
	ITEM_STACK g
	OPTIONAL_BLOCK_POS m
	OPTIONAL_COMPONENT f
	OPTIONAL_UNSIGNED_INT r
	OPTIONAL_UUID o
	PARTICLE j
	POSE s
	ROTATIONS k
	SERIALIZERS t
	STRING d
	VILLAGER_DATA q
	getSerializedId (Lnet/minecraft/network/syncher/EntityDataSerializer;)I b
	getSerializer (I)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	registerSerializer (Lnet/minecraft/network/syncher/EntityDataSerializer;)V a
net/minecraft/network/syncher/SynchedEntityData net/minecraft/network/syncher/DataWatcher
	ENTITY_ID_POOL b
	EOF_MARKER c
	LOGGER a
	MAX_ID_VALUE d
	entity e
	isDirty i
	isEmpty h
	itemsById f
	lock g
	assignValue (Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;)V a
	assignValues (Ljava/util/List;)V a
	clearDirty ()V e
	createDataItem (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V c
	define (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V a
	defineId (Ljava/lang/Class;Lnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/EntityDataAccessor; a
	genericHelper (Lnet/minecraft/network/FriendlyByteBuf;ILnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; a
	get (Lnet/minecraft/network/syncher/EntityDataAccessor;)Ljava/lang/Object; a
	getAll ()Ljava/util/List; c
	getItem (Lnet/minecraft/network/syncher/EntityDataAccessor;)Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; b
	isDirty ()Z a
	isEmpty ()Z d
	pack (Ljava/util/List;Lnet/minecraft/network/FriendlyByteBuf;)V a
	packDirty ()Ljava/util/List; b
	set (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V b
	unpack (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/util/List; a
	writeDataItem (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;)V a
net/minecraft/network/syncher/SynchedEntityData$DataItem net/minecraft/network/syncher/DataWatcher$Item
	accessor a
	dirty c
	value b
	copy ()Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; d
	getAccessor ()Lnet/minecraft/network/syncher/EntityDataAccessor; a
	getValue ()Ljava/lang/Object; b
	isDirty ()Z c
	setDirty (Z)V a
	setValue (Ljava/lang/Object;)V a
net/minecraft/realms/DisconnectedRealmsScreen fdx
	message b
	parent c
	reason a
	textHeight R
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; ae_
	init ()V b
	onClose ()V ag_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/realms/RealmsConnect fdy
	LOGGER a
	aborted c
	connection d
	onlineScreen b
	abort ()V a
	connect (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)V a
	tick ()V b
net/minecraft/realms/RealmsLabel fdz
	color d
	text a
	x b
	y c
	getText ()Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/realms/RealmsObjectSelectionList fea
	addEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)I b
	addEntry (Lnet/minecraft/client/gui/components/ObjectSelectionList$Entry;)I a
	clear ()V v
	getItemCount ()I l
	getMaxPosition ()I b
	getRowLeft ()I q
	getRowTop (I)I h
	getRowWidth ()I c
	getScrollbarPosition ()I d
	itemClicked (IIDDI)V a
	replaceEntries (Ljava/util/Collection;)V a
	selectItem (I)V a
	setSelectedItem (I)V j
net/minecraft/realms/RealmsScreen feb
	COLOR_BLACK z
	COLOR_BRIGHT_YELLOW B
	COLOR_BUTTON_YELLOW F
	COLOR_DARK_GRAY t
	COLOR_DARK_GREEN w
	COLOR_GRAY s
	COLOR_GREEN v
	COLOR_INFO E
	COLOR_LINK C
	COLOR_LINK_HOVER D
	COLOR_MEDIUM_GRAY u
	COLOR_RED x
	COLOR_RED_FADE y
	COLOR_WHITE r
	COLOR_YELLOW A
	COMPONENT_HEIGHT o
	EXPIRATION_NOTIFICATION_DAYS p
	SIZE_LIMIT q
	SKIN_HAT_HEIGHT O
	SKIN_HAT_U L
	SKIN_HAT_V M
	SKIN_HAT_WIDTH N
	SKIN_HEAD_HEIGHT K
	SKIN_HEAD_U H
	SKIN_HEAD_V I
	SKIN_HEAD_WIDTH J
	SKIN_TEX_HEIGHT Q
	SKIN_TEX_WIDTH P
	TITLE_HEIGHT n
	UPDATE_BREAKS_ADVENTURE_URL G
	labels a
	addLabel (Lnet/minecraft/realms/RealmsLabel;)Lnet/minecraft/realms/RealmsLabel; a
	createLabelNarration ()Lnet/minecraft/network/chat/Component; h
	row (I)I j
net/minecraft/realms/RepeatedNarrator fec
	params b
	permitsPerSecond a
	narrate (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/realms/RepeatedNarrator$Params fec$a
	narration a
	rateLimiter b
net/minecraft/recipebook/PlaceRecipe net/minecraft/recipebook/AutoRecipeAbstract
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	placeRecipe (IIILnet/minecraft/world/item/crafting/Recipe;Ljava/util/Iterator;I)V a
net/minecraft/recipebook/ServerPlaceRecipe net/minecraft/recipebook/AutoRecipe
	LOGGER a
	inventory c
	menu d
	stackedContents b
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	clearGrid (Z)V a
	getAmountOfFreeSlotsInInventory ()I b
	getStackSize (ZIZ)I a
	handleRecipeClicked (Lnet/minecraft/world/item/crafting/Recipe;Z)V a
	moveItemToGrid (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;)V a
	recipeClicked (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;Z)V a
	testClearGrid ()Z a
net/minecraft/resources/DelegatingOps net/minecraft/resources/DynamicOpsWrapper
	delegate a
net/minecraft/resources/RegistryReadOps$ReadCache yd$a
	values a
net/minecraft/resources/ResourceLocation net/minecraft/resources/MinecraftKey
	CODEC a
	DEFAULT_NAMESPACE c
	ERROR_INVALID g
	NAMESPACE_SEPARATOR b
	REALMS_NAMESPACE d
	namespace e
	path f
	compareTo (Lnet/minecraft/resources/ResourceLocation;)I a
	decompose (Ljava/lang/String;C)[Ljava/lang/String; b
	getNamespace ()Ljava/lang/String; b
	getPath ()Ljava/lang/String; a
	isAllowedInResourceLocation (C)Z a
	isValidNamespace (Ljava/lang/String;)Z e
	isValidPath (Ljava/lang/String;)Z d
	isValidResourceLocation (Ljava/lang/String;)Z b
	of (Ljava/lang/String;C)Lnet/minecraft/resources/ResourceLocation; a
	read (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
	read (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; c
	toDebugFileName ()Ljava/lang/String; c
	tryParse (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	validNamespaceChar (C)Z c
	validPathChar (C)Z b
net/minecraft/resources/ResourceLocation$Serializer yh$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/resources/ResourceLocation; a
	serialize (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/server/Bootstrap net/minecraft/server/DispenserRegistry
	LOGGER c
	STDOUT a
	isBootstrapped b
	bootStrap ()V a
	checkBootstrapCalled (Ljava/util/function/Supplier;)V a
	checkGameruleTranslations (Ljava/util/Set;)V a
	checkTranslations (Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V a
	createBootstrapException (Ljava/util/function/Supplier;)Ljava/lang/RuntimeException; b
	getMissingTranslations ()Ljava/util/Set; b
	realStdoutPrintln (Ljava/lang/String;)V a
	validate ()V c
	validateThatAllBiomeFeaturesHaveBiomeFilter ()V d
	wrapStreams ()V e
net/minecraft/server/ChainedJsonException yk
	entries a
	message b
	forException (Ljava/lang/Exception;)Lnet/minecraft/server/ChainedJsonException; a
	prependJsonKey (Ljava/lang/String;)V a
	setFilenameAndFlush (Ljava/lang/String;)V b
net/minecraft/server/ChainedJsonException$Entry yk$a
	filename a
	jsonKeys b
	addJsonKey (Ljava/lang/String;)V a
	getFilename ()Ljava/lang/String; a
	getJsonKeys ()Ljava/lang/String; b
net/minecraft/server/ConsoleInput net/minecraft/server/ServerCommand
	msg a
	source b
net/minecraft/server/DebugLoggedPrintStream net/minecraft/server/DebugOutputStream
	logLine (Ljava/lang/String;)V a
net/minecraft/server/Eula net/minecraft/server/EULA
	LOGGER a
	agreed c
	file b
	hasAgreedToEULA ()Z a
	readFile ()Z b
	saveDefaults ()V c
net/minecraft/server/LoggedPrintStream net/minecraft/server/RedirectStream
	LOGGER a
	name b
	logLine (Ljava/lang/String;)V a
net/minecraft/server/MinecraftServer$TimeProfiler net/minecraft/server/MinecraftServer$a
	startNanos a
	startTick b
	stop (JI)Lnet/minecraft/util/profiling/ProfileResults; a
net/minecraft/server/PlayerAdvancements net/minecraft/server/AdvancementDataPlayer
	GSON c
	LOGGER a
	TYPE_TOKEN d
	VISIBILITY_DEPTH b
	advancements h
	dataFixer e
	file g
	isFirstPacket n
	lastSelectedTab m
	player l
	playerList f
	progressChanged k
	visibilityChanged j
	visible i
	award (Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z a
	checkForAutomaticTriggers (Lnet/minecraft/server/ServerAdvancementManager;)V c
	ensureAllVisible ()V c
	ensureVisibility (Lnet/minecraft/advancements/Advancement;)V e
	flushDirty (Lnet/minecraft/server/level/ServerPlayer;)V b
	getOrStartProgress (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/AdvancementProgress; b
	hasCompletedChildrenOrSelf (Lnet/minecraft/advancements/Advancement;)Z g
	load (Lnet/minecraft/server/ServerAdvancementManager;)V d
	registerListeners (Lnet/minecraft/advancements/Advancement;)V c
	registerListeners (Lnet/minecraft/server/ServerAdvancementManager;)V b
	reload (Lnet/minecraft/server/ServerAdvancementManager;)V a
	revoke (Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z b
	save ()V b
	setPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	setSelectedTab (Lnet/minecraft/advancements/Advancement;)V a
	shouldBeVisible (Lnet/minecraft/advancements/Advancement;)Z f
	startProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
	stopListening ()V a
	unregisterListeners (Lnet/minecraft/advancements/Advancement;)V d
net/minecraft/server/RunningOnDifferentThreadException net/minecraft/server/CancelledPacketHandleException
	RUNNING_ON_DIFFERENT_THREAD a
net/minecraft/server/ServerAdvancementManager net/minecraft/server/AdvancementDataWorld
	GSON b
	LOGGER a
	advancements c
	predicateManager d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getAdvancement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; a
	getAllAdvancements ()Ljava/util/Collection; a
net/minecraft/server/ServerFunctionLibrary net/minecraft/server/CustomFunctionManager
	FILE_EXTENSION b
	LOGGER a
	PATH_PREFIX_LENGTH c
	PATH_SUFFIX_LENGTH d
	dispatcher i
	functionCompilationLevel h
	functions e
	tags g
	tagsLoader f
	getFunction (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getFunctions ()Ljava/util/Map; a
	getTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; b
	getTags ()Lnet/minecraft/tags/TagCollection; b
	readLines (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/ServerFunctionManager net/minecraft/server/CustomFunctionData
	LOAD_FUNCTION_TAG c
	NO_RECURSIVE_TRACES a
	TICK_FUNCTION_TAG b
	context e
	library h
	postReload g
	server d
	ticking f
	execute (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)I a
	execute (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/ServerFunctionManager$TraceCallbacks;)I a
	executeTagFunctions (Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getCommandLimit ()I a
	getDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; b
	getFunctionNames ()Ljava/lang/Iterable; e
	getGameLoopSender ()Lnet/minecraft/commands/CommandSourceStack; d
	getTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; b
	getTagNames ()Ljava/lang/Iterable; f
	postReload (Lnet/minecraft/server/ServerFunctionLibrary;)V b
	replaceLibrary (Lnet/minecraft/server/ServerFunctionLibrary;)V a
	tick ()V c
net/minecraft/server/ServerFunctionManager$ExecutionContext yt$a
	commandQueue d
	depth b
	nestedCalls e
	tracer c
	delayFunctionCall (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)V a
	reportError (Ljava/lang/String;)V a
	runTopCommand (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/ServerFunctionManager$QueuedCommand yt$b
	depth b
	entry c
	sender a
	execute (Lnet/minecraft/server/ServerFunctionManager;Ljava/util/Deque;ILnet/minecraft/server/ServerFunctionManager$TraceCallbacks;)V a
net/minecraft/server/ServerFunctionManager$TraceCallbacks yt$c
	onCall (ILnet/minecraft/resources/ResourceLocation;I)V a
	onCommand (ILjava/lang/String;)V a
	onError (ILjava/lang/String;)V b
	onReturn (ILjava/lang/String;I)V a
net/minecraft/server/ServerInterface net/minecraft/server/IMinecraftServer
	getLevelIdName ()Ljava/lang/String; r
	getMaxPlayers ()I I
	getPlayerCount ()I H
	getPlayerNames ()[Ljava/lang/String; J
	getPluginNames ()Ljava/lang/String; s
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getServerIp ()Ljava/lang/String; b
	getServerName ()Ljava/lang/String; p
	getServerPort ()I d
	getServerVersion ()Ljava/lang/String; G
	runCommand (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/server/ServerResources net/minecraft/server/DataPackResources
	DATA_RELOAD_INITIAL_TASK a
	advancements i
	commands c
	functionLibrary j
	itemModifierManager h
	lootTables g
	predicateManager f
	recipes d
	resources b
	tagManager e
	getAdvancements ()Lnet/minecraft/server/ServerAdvancementManager; h
	getCommands ()Lnet/minecraft/commands/Commands; g
	getFunctionLibrary ()Lnet/minecraft/server/ServerFunctionLibrary; a
	getItemModifierManager ()Lnet/minecraft/world/level/storage/loot/ItemModifierManager; d
	getLootTables ()Lnet/minecraft/world/level/storage/loot/LootTables; c
	getPredicateManager ()Lnet/minecraft/world/level/storage/loot/PredicateManager; b
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; f
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; i
	getTags ()Lnet/minecraft/tags/TagContainer; e
	loadResources (Ljava/util/List;Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/commands/Commands$CommandSelection;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	updateGlobals ()V j
net/minecraft/server/ServerScoreboard net/minecraft/server/ScoreboardServer
	dirtyListeners i
	server g
	trackedObjectives h
	addDirtyListener (Ljava/lang/Runnable;)V a
	addPlayerToTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)Z a
	createData ()Lnet/minecraft/world/scores/ScoreboardSaveData; b
	createData (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/scores/ScoreboardSaveData; a
	getObjectiveDisplaySlotCount (Lnet/minecraft/world/scores/Objective;)I h
	getStartTrackingPackets (Lnet/minecraft/world/scores/Objective;)Ljava/util/List; d
	getStopTrackingPackets (Lnet/minecraft/world/scores/Objective;)Ljava/util/List; f
	onObjectiveAdded (Lnet/minecraft/world/scores/Objective;)V a
	onObjectiveChanged (Lnet/minecraft/world/scores/Objective;)V b
	onObjectiveRemoved (Lnet/minecraft/world/scores/Objective;)V c
	onPlayerRemoved (Ljava/lang/String;)V a
	onPlayerScoreRemoved (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V a
	onScoreChanged (Lnet/minecraft/world/scores/Score;)V a
	onTeamAdded (Lnet/minecraft/world/scores/PlayerTeam;)V a
	onTeamChanged (Lnet/minecraft/world/scores/PlayerTeam;)V b
	onTeamRemoved (Lnet/minecraft/world/scores/PlayerTeam;)V c
	removePlayerFromTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V b
	setDirty ()V a
	setDisplayObjective (ILnet/minecraft/world/scores/Objective;)V a
	startTrackingObjective (Lnet/minecraft/world/scores/Objective;)V e
	stopTrackingObjective (Lnet/minecraft/world/scores/Objective;)V g
net/minecraft/server/ServerScoreboard$Method net/minecraft/server/ScoreboardServer$Action
	$VALUES c
	CHANGE a
	REMOVE b
	$values ()[Lnet/minecraft/server/ServerScoreboard$Method; a
net/minecraft/server/bossevents/CustomBossEvent net/minecraft/server/bossevents/BossBattleCustom
	id h
	max k
	players i
	value j
	addOfflinePlayer (Ljava/util/UUID;)V a
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getMax ()I d
	getTextId ()Lnet/minecraft/resources/ResourceLocation; a
	getValue ()I c
	load (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	onPlayerConnect (Lnet/minecraft/server/level/ServerPlayer;)V c
	onPlayerDisconnect (Lnet/minecraft/server/level/ServerPlayer;)V d
	removeAllPlayers ()V b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	save ()Lnet/minecraft/nbt/CompoundTag; f
	setMax (I)V b
	setPlayers (Ljava/util/Collection;)Z a
	setValue (I)V a
net/minecraft/server/bossevents/CustomBossEvents net/minecraft/server/bossevents/BossBattleCustomData
	events a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	getEvents ()Ljava/util/Collection; b
	getIds ()Ljava/util/Collection; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onPlayerConnect (Lnet/minecraft/server/level/ServerPlayer;)V a
	onPlayerDisconnect (Lnet/minecraft/server/level/ServerPlayer;)V b
	remove (Lnet/minecraft/server/bossevents/CustomBossEvent;)V a
	save ()Lnet/minecraft/nbt/CompoundTag; c
net/minecraft/server/chase/ChaseClient zb
	LOGGER a
	RECONNECT_INTERVAL_SECONDS b
	server e
	serverHost c
	serverPort d
	socket g
	thread h
	wantsToRun f
	executeCommand (Ljava/lang/String;)V b
	handleMessage (Ljava/lang/String;)V a
	handleTeleport (Ljava/util/Scanner;)V a
	parseTarget (Ljava/util/Scanner;)Ljava/util/Optional; b
	run ()V c
	start ()V a
	stop ()V b
net/minecraft/server/chase/ChaseClient$TeleportTarget zb$a
	level a
	pos b
	rot c
	level ()Lnet/minecraft/resources/ResourceKey; a
	pos ()Lnet/minecraft/world/phys/Vec3; b
	rot ()Lnet/minecraft/world/phys/Vec2; c
net/minecraft/server/chase/ChaseServer zc
	LOGGER a
	broadcastIntervalMs e
	clientSockets h
	playerList d
	serverBindAddress b
	serverPort c
	serverSocket g
	wantsToRun f
	getPlayerPosition ()Lnet/minecraft/server/chase/ChaseServer$PlayerPosition; e
	runAcceptor ()V d
	runSender ()V c
	start ()V a
	stop ()V b
net/minecraft/server/chase/ChaseServer$PlayerPosition zc$a
	dimensionName a
	x b
	xRot f
	y c
	yRot e
	z d
	dimensionName ()Ljava/lang/String; a
	format ()Ljava/lang/String; g
	x ()D b
	xRot ()F f
	y ()D c
	yRot ()F e
	z ()D d
net/minecraft/server/commands/AdvancementCommands net/minecraft/server/commands/CommandAdvancement
	SUGGEST_ADVANCEMENTS a
	addChildren (Lnet/minecraft/advancements/Advancement;Ljava/util/List;)V a
	getAdvancements (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/server/commands/AdvancementCommands$Mode;)Ljava/util/List; a
	perform (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/commands/AdvancementCommands$Action;Ljava/util/Collection;)I a
	performCriterion (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/commands/AdvancementCommands$Action;Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/AdvancementCommands$Action net/minecraft/server/commands/CommandAdvancement$Action
	$VALUES d
	GRANT a
	REVOKE b
	key c
	$values ()[Lnet/minecraft/server/commands/AdvancementCommands$Action; b
	getKey ()Ljava/lang/String; a
	perform (Lnet/minecraft/server/level/ServerPlayer;Ljava/lang/Iterable;)I a
	perform (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/advancements/Advancement;)Z a
	performCriterion (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z a
net/minecraft/server/commands/AdvancementCommands$Mode net/minecraft/server/commands/CommandAdvancement$Filter
	$VALUES h
	EVERYTHING e
	FROM c
	ONLY a
	THROUGH b
	UNTIL d
	children g
	parents f
	$values ()[Lnet/minecraft/server/commands/AdvancementCommands$Mode; a
net/minecraft/server/commands/AttributeCommand net/minecraft/server/commands/CommandAttribute
	AVAILABLE_ATTRIBUTES a
	ERROR_MODIFIER_ALREADY_PRESENT e
	ERROR_NOT_LIVING_ENTITY b
	ERROR_NO_SUCH_ATTRIBUTE c
	ERROR_NO_SUCH_MODIFIER d
	addModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)I a
	getAttributeBase (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I b
	getAttributeInstance (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;D)I a
	getAttributeValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I a
	getEntityWithAttribute (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/LivingEntity; b
	getLivingEntity (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/LivingEntity; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)I a
	setAttributeBase (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I c
net/minecraft/server/commands/BanIpCommands net/minecraft/server/commands/CommandBanIp
	ERROR_ALREADY_BANNED c
	ERROR_INVALID_IP b
	IP_ADDRESS_PATTERN a
	banIp (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I b
	banIpOrName (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/BanListCommands net/minecraft/server/commands/CommandBanList
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	showList (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/BanPlayerCommands net/minecraft/server/commands/CommandBan
	ERROR_ALREADY_BANNED a
	banPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/BossBarCommands net/minecraft/server/commands/CommandBossBar
	ERROR_ALREADY_EXISTS b
	ERROR_ALREADY_HIDDEN j
	ERROR_ALREADY_VISIBLE k
	ERROR_DOESNT_EXIST c
	ERROR_NO_COLOR_CHANGE f
	ERROR_NO_MAX_CHANGE i
	ERROR_NO_NAME_CHANGE e
	ERROR_NO_PLAYER_CHANGE d
	ERROR_NO_STYLE_CHANGE g
	ERROR_NO_VALUE_CHANGE h
	SUGGEST_BOSS_BAR a
	createBar (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/chat/Component;)I a
	getBossBar (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	getMax (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I b
	getPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I d
	getValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I a
	getVisible (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I c
	listBars (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeBar (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I e
	setColor (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/world/BossEvent$BossBarColor;)I a
	setMax (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;I)I b
	setName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/network/chat/Component;)I a
	setPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Ljava/util/Collection;)I a
	setStyle (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/world/BossEvent$BossBarOverlay;)I a
	setValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;I)I a
	setVisible (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Z)I a
net/minecraft/server/commands/ChaseCommand zk
	BROADCAST_INTERVAL_MS e
	DEFAULT_BIND_ADDRESS c
	DEFAULT_CONNECT_HOST b
	DEFAULT_PORT d
	DIMENSION_NAMES a
	chaseClient g
	chaseServer f
	alreadyRunning (Lnet/minecraft/commands/CommandSourceStack;)Z b
	follow (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;I)I b
	lead (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	stop (Lnet/minecraft/commands/CommandSourceStack;)I a
net/minecraft/server/commands/ClearInventoryCommands net/minecraft/server/commands/CommandClear
	ERROR_MULTIPLE b
	ERROR_SINGLE a
	clearInventory (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/function/Predicate;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/CloneCommands net/minecraft/server/commands/CommandClone
	ERROR_AREA_TOO_LARGE d
	ERROR_FAILED e
	ERROR_OVERLAP c
	FILTER_AIR a
	MAX_CLONE_AREA b
	clone (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Lnet/minecraft/server/commands/CloneCommands$Mode;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/CloneCommands$CloneBlockInfo net/minecraft/server/commands/CommandClone$CommandCloneStoredTileEntity
	pos a
	state b
	tag c
net/minecraft/server/commands/CloneCommands$Mode net/minecraft/server/commands/CommandClone$Mode
	$VALUES e
	FORCE a
	MOVE b
	NORMAL c
	canOverlap d
	$values ()[Lnet/minecraft/server/commands/CloneCommands$Mode; b
	canOverlap ()Z a
net/minecraft/server/commands/DataPackCommand net/minecraft/server/commands/CommandDatapack
	ERROR_PACK_ALREADY_DISABLED c
	ERROR_PACK_ALREADY_ENABLED b
	ERROR_UNKNOWN_PACK a
	SELECTED_PACKS d
	UNSELECTED_PACKS e
	disablePack (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/packs/repository/Pack;)I a
	enablePack (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/packs/repository/Pack;Lnet/minecraft/server/commands/DataPackCommand$Inserter;)I a
	getPack (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lnet/minecraft/server/packs/repository/Pack; a
	listAvailablePacks (Lnet/minecraft/commands/CommandSourceStack;)I b
	listEnabledPacks (Lnet/minecraft/commands/CommandSourceStack;)I c
	listPacks (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DataPackCommand$Inserter zn$a
net/minecraft/server/commands/DeOpCommands net/minecraft/server/commands/CommandDeop
	ERROR_NOT_OP a
	deopPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DebugCommand net/minecraft/server/commands/CommandDebug
	ERROR_ALREADY_RUNNING c
	ERROR_NOT_RUNNING b
	LOGGER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	start (Lnet/minecraft/commands/CommandSourceStack;)I a
	stop (Lnet/minecraft/commands/CommandSourceStack;)I b
	traceFunction (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/DebugCommand$Tracer zp$a
	INDENT_OFFSET b
	lastIndent d
	output c
	waitingForResult e
	acceptsFailure ()Z j_
	acceptsSuccess ()Z i_
	alwaysAccepts ()Z d_
	indentAndSave (I)V a
	newLine ()V e
	onCall (ILnet/minecraft/resources/ResourceLocation;I)V a
	onCommand (ILjava/lang/String;)V a
	onError (ILjava/lang/String;)V b
	onReturn (ILjava/lang/String;I)V a
	printIndent (I)V b
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	shouldInformAdmins ()Z F_
net/minecraft/server/commands/DebugMobSpawningCommand zq
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spawnMobs (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/server/commands/DebugPathCommand zr
	ERROR_NOT_COMPLETE c
	ERROR_NOT_MOB a
	ERROR_NO_PATH b
	fillBlocks (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DefaultGameModeCommands net/minecraft/server/commands/CommandGamemodeDefault
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setMode (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/GameType;)I a
net/minecraft/server/commands/DifficultyCommand net/minecraft/server/commands/CommandDifficulty
	ERROR_ALREADY_DIFFICULT a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setDifficulty (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/Difficulty;)I a
net/minecraft/server/commands/EffectCommands net/minecraft/server/commands/CommandEffect
	ERROR_CLEAR_EVERYTHING_FAILED b
	ERROR_CLEAR_SPECIFIC_FAILED c
	ERROR_GIVE_FAILED a
	clearEffect (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/effect/MobEffect;)I a
	clearEffects (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	giveEffect (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/effect/MobEffect;Ljava/lang/Integer;IZ)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/EmoteCommands net/minecraft/server/commands/CommandMe
	createMessage (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/EnchantCommand net/minecraft/server/commands/CommandEnchant
	ERROR_INCOMPATIBLE c
	ERROR_LEVEL_TOO_HIGH d
	ERROR_NOTHING_HAPPENED e
	ERROR_NOT_LIVING_ENTITY a
	ERROR_NO_ITEM b
	enchant (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/item/enchantment/Enchantment;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ExecuteCommand net/minecraft/server/commands/CommandExecute
	CALLBACK_CHAINER e
	ERROR_AREA_TOO_LARGE b
	ERROR_CONDITIONAL_FAILED c
	ERROR_CONDITIONAL_FAILED_COUNT d
	MAX_TEST_AREA a
	SUGGEST_PREDICATE f
	addConditional (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLnet/minecraft/server/commands/ExecuteCommand$CommandPredicate;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addConditionals (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addIfBlocksConditional (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	checkCustomPredicate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z a
	checkIfRegions (Lcom/mojang/brigadier/context/CommandContext;Z)I a
	checkMatchingData (Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I a
	checkRegions (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; c
	checkRegions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Z)Ljava/util/OptionalInt; a
	checkScore (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z a
	checkScore (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Z a
	checkUnlessRegions (Lcom/mojang/brigadier/context/CommandContext;Z)I b
	createNumericConditionalHandler (ZLnet/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate;)Lcom/mojang/brigadier/Command; a
	expect (Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	storeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/function/IntFunction;Z)Lnet/minecraft/commands/CommandSourceStack; a
	storeValue (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Z)Lnet/minecraft/commands/CommandSourceStack; a
	storeValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;ZZ)Lnet/minecraft/commands/CommandSourceStack; a
	wrapStores (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate zx$a
net/minecraft/server/commands/ExecuteCommand$CommandPredicate zx$b
net/minecraft/server/commands/ExperienceCommand net/minecraft/server/commands/CommandXp
	ERROR_SET_POINTS_INVALID a
	addExperience (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/server/commands/ExperienceCommand$Type;)I a
	queryExperience (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/commands/ExperienceCommand$Type;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setExperience (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/server/commands/ExperienceCommand$Type;)I b
net/minecraft/server/commands/ExperienceCommand$Type net/minecraft/server/commands/CommandXp$Unit
	$VALUES g
	LEVELS b
	POINTS a
	add c
	name e
	query f
	set d
	$values ()[Lnet/minecraft/server/commands/ExperienceCommand$Type; a
net/minecraft/server/commands/FillCommand net/minecraft/server/commands/CommandFill
	ERROR_AREA_TOO_LARGE b
	ERROR_FAILED d
	HOLLOW_CORE c
	MAX_FILL_AREA a
	fillBlocks (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/commands/arguments/blocks/BlockInput;Lnet/minecraft/server/commands/FillCommand$Mode;Ljava/util/function/Predicate;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/FillCommand$Mode net/minecraft/server/commands/CommandFill$Mode
	$VALUES f
	DESTROY d
	HOLLOW c
	OUTLINE b
	REPLACE a
	filter e
	$values ()[Lnet/minecraft/server/commands/FillCommand$Mode; a
net/minecraft/server/commands/ForceLoadCommand net/minecraft/server/commands/CommandForceload
	ERROR_ALL_ADDED d
	ERROR_NONE_REMOVED e
	ERROR_NOT_TICKING c
	ERROR_TOO_MANY_CHUNKS b
	MAX_CHUNK_LIMIT a
	changeForceLoad (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ColumnPos;Lnet/minecraft/server/level/ColumnPos;Z)I a
	listForceLoad (Lnet/minecraft/commands/CommandSourceStack;)I a
	queryForceLoad (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ColumnPos;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeAll (Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/commands/FunctionCommand net/minecraft/server/commands/CommandFunction
	SUGGEST_FUNCTION a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	runFunction (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/GameModeCommand net/minecraft/server/commands/CommandGamemode
	PERMISSION_LEVEL a
	logGamemodeChange (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/GameType;)V a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setMode (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lnet/minecraft/world/level/GameType;)I a
net/minecraft/server/commands/GameRuleCommand net/minecraft/server/commands/CommandGamerule
	queryRule (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/GameRules$Key;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setRule (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/level/GameRules$Key;)I a
net/minecraft/server/commands/GiveCommand net/minecraft/server/commands/CommandGive
	MAX_ALLOWED_ITEMSTACKS a
	giveItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/item/ItemInput;Ljava/util/Collection;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/HelpCommand net/minecraft/server/commands/CommandHelp
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/KickCommand net/minecraft/server/commands/CommandKick
	kickPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/KillCommand net/minecraft/server/commands/CommandKill
	kill (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ListPlayersCommand net/minecraft/server/commands/CommandList
	format (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/function/Function;)I a
	listPlayers (Lnet/minecraft/commands/CommandSourceStack;)I a
	listPlayersWithUuids (Lnet/minecraft/commands/CommandSourceStack;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/LocateBiomeCommand net/minecraft/server/commands/CommandLocateBiome
	ERROR_BIOME_NOT_FOUND b
	ERROR_INVALID_BIOME a
	MAX_SEARCH_RADIUS c
	SEARCH_STEP d
	locateBiome (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/LocateCommand net/minecraft/server/commands/CommandLocate
	ERROR_FAILED a
	dist (IIII)F a
	locate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	showLocateResult (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/lang/String;)I a
net/minecraft/server/commands/LootCommand net/minecraft/server/commands/CommandLoot
	ERROR_NO_HELD_ITEMS b
	ERROR_NO_LOOT_TABLE c
	SUGGEST_LOOT_TABLE a
	addTargets (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lnet/minecraft/server/commands/LootCommand$TailProvider;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	blockDistribute (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	blockReplace (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;IILjava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	callback (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;)V a
	callback (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;Lnet/minecraft/resources/ResourceLocation;)V a
	canMergeItems (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	distributeToContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;)Z a
	drop (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropBlockLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropChestLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropFishingLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropInWorld (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec3;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	dropKillLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	entityReplace (Ljava/util/Collection;IILjava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	getContainer (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/Container; a
	getSourceHandItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; a
	playerGive (Ljava/util/Collection;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSlots (Lnet/minecraft/world/entity/Entity;Ljava/util/List;IILjava/util/List;)V a
net/minecraft/server/commands/LootCommand$Callback aan$a
net/minecraft/server/commands/LootCommand$DropConsumer aan$b
net/minecraft/server/commands/LootCommand$TailProvider aan$c
net/minecraft/server/commands/MsgCommand net/minecraft/server/commands/CommandTell
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendMessage (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
net/minecraft/server/commands/OpCommand net/minecraft/server/commands/CommandOp
	ERROR_ALREADY_OP a
	opPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PardonCommand net/minecraft/server/commands/CommandPardon
	ERROR_NOT_BANNED a
	pardonPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PardonIpCommand net/minecraft/server/commands/CommandPardonIP
	ERROR_INVALID a
	ERROR_NOT_BANNED b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	unban (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
net/minecraft/server/commands/ParticleCommand net/minecraft/server/commands/CommandParticle
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendParticles (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;FIZLjava/util/Collection;)I a
net/minecraft/server/commands/PlaySoundCommand net/minecraft/server/commands/CommandPlaySound
	ERROR_TOO_FAR a
	playSound (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;Lnet/minecraft/world/phys/Vec3;FFF)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	source (Lnet/minecraft/sounds/SoundSource;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
net/minecraft/server/commands/PublishCommand net/minecraft/server/commands/CommandPublish
	ERROR_ALREADY_PUBLISHED b
	ERROR_FAILED a
	publish (Lnet/minecraft/commands/CommandSourceStack;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/RaidCommand aaw
	check (Lnet/minecraft/commands/CommandSourceStack;)I d
	getRaid (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/world/entity/raid/Raid; a
	glow (Lnet/minecraft/commands/CommandSourceStack;)I a
	playSound (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBadOmenLevel (Lnet/minecraft/commands/CommandSourceStack;I)I a
	spawnLeader (Lnet/minecraft/commands/CommandSourceStack;)I b
	start (Lnet/minecraft/commands/CommandSourceStack;I)I b
	stop (Lnet/minecraft/commands/CommandSourceStack;)I c
net/minecraft/server/commands/RecipeCommand net/minecraft/server/commands/CommandRecipe
	ERROR_GIVE_FAILED a
	ERROR_TAKE_FAILED b
	giveRecipes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	takeRecipes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/Collection;)I b
net/minecraft/server/commands/ReloadCommand net/minecraft/server/commands/CommandReload
	LOGGER a
	discoverNewPacks (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/storage/WorldData;Ljava/util/Collection;)Ljava/util/Collection; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	reloadPacks (Ljava/util/Collection;Lnet/minecraft/commands/CommandSourceStack;)V a
net/minecraft/server/commands/ResetChunksCommand aaz
	LOGGER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetChunks (Lnet/minecraft/commands/CommandSourceStack;IZ)I a
net/minecraft/server/commands/SaveAllCommand net/minecraft/server/commands/CommandSaveAll
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	saveAll (Lnet/minecraft/commands/CommandSourceStack;Z)I a
net/minecraft/server/commands/SaveOffCommand net/minecraft/server/commands/CommandSaveOff
	ERROR_ALREADY_OFF a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SaveOnCommand net/minecraft/server/commands/CommandSaveOn
	ERROR_ALREADY_ON a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SayCommand net/minecraft/server/commands/CommandSay
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ScheduleCommand net/minecraft/server/commands/CommandSchedule
	ERROR_CANT_REMOVE b
	ERROR_SAME_TICK a
	SUGGEST_SCHEDULE c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	remove (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	schedule (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/datafixers/util/Pair;IZ)I a
net/minecraft/server/commands/ScoreboardCommand net/minecraft/server/commands/CommandScoreboard
	ERROR_DISPLAY_SLOT_ALREADY_EMPTY b
	ERROR_DISPLAY_SLOT_ALREADY_SET c
	ERROR_NOT_TRIGGER e
	ERROR_NO_VALUE f
	ERROR_OBJECTIVE_ALREADY_EXISTS a
	ERROR_TRIGGER_ALREADY_ENABLED d
	addObjective (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/network/chat/Component;)I a
	addScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I b
	clearDisplaySlot (Lnet/minecraft/commands/CommandSourceStack;I)I a
	createRenderTypeModify ()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	enableTrigger (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I a
	getScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)I a
	listObjectives (Lnet/minecraft/commands/CommandSourceStack;)I b
	listTrackedPlayerScores (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	listTrackedPlayers (Lnet/minecraft/commands/CommandSourceStack;)I a
	performOperation (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/commands/arguments/OperationArgument$Operation;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeObjective (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;)I a
	removeScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I c
	resetScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I b
	resetScores (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	setDisplayName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/network/chat/Component;)I a
	setDisplaySlot (Lnet/minecraft/commands/CommandSourceStack;ILnet/minecraft/world/scores/Objective;)I a
	setRenderType (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)I a
	setScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I a
	suggestTriggers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/SeedCommand net/minecraft/server/commands/CommandSeed
	register (Lcom/mojang/brigadier/CommandDispatcher;Z)V a
net/minecraft/server/commands/SetBlockCommand net/minecraft/server/commands/CommandSetBlock
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/commands/arguments/blocks/BlockInput;Lnet/minecraft/server/commands/SetBlockCommand$Mode;Ljava/util/function/Predicate;)I a
net/minecraft/server/commands/SetBlockCommand$Filter net/minecraft/server/commands/CommandSetBlock$Filter
net/minecraft/server/commands/SetBlockCommand$Mode net/minecraft/server/commands/CommandSetBlock$Mode
	$VALUES c
	DESTROY b
	REPLACE a
	$values ()[Lnet/minecraft/server/commands/SetBlockCommand$Mode; a
net/minecraft/server/commands/SetPlayerIdleTimeoutCommand net/minecraft/server/commands/CommandIdleTimeout
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setIdleTimeout (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/SetSpawnCommand net/minecraft/server/commands/CommandSpawnpoint
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSpawn (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/core/BlockPos;F)I a
net/minecraft/server/commands/SetWorldSpawnCommand net/minecraft/server/commands/CommandSetWorldSpawn
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSpawn (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;F)I a
net/minecraft/server/commands/SpectateCommand net/minecraft/server/commands/CommandSpectate
	ERROR_NOT_SPECTATOR b
	ERROR_SELF a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spectate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerPlayer;)I a
net/minecraft/server/commands/SpreadPlayersCommand net/minecraft/server/commands/CommandSpreadPlayers
	ERROR_FAILED_TO_SPREAD_ENTITIES c
	ERROR_FAILED_TO_SPREAD_TEAMS b
	MAX_ITERATION_COUNT a
	createInitialPositions (Ljava/util/Random;IDDDD)[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position; a
	getNumberOfTeams (Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setPlayerPositions (Ljava/util/Collection;Lnet/minecraft/server/level/ServerLevel;[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;IZ)D a
	spreadPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec2;FFIZLjava/util/Collection;)I a
	spreadPositions (Lnet/minecraft/world/phys/Vec2;DLnet/minecraft/server/level/ServerLevel;Ljava/util/Random;DDDDI[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;Z)V a
net/minecraft/server/commands/SpreadPlayersCommand$Position abm$a
	x a
	z b
	clamp (DDDD)Z a
	dist (Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;)D a
	getLength ()D b
	getSpawnY (Lnet/minecraft/world/level/BlockGetter;I)I a
	isSafe (Lnet/minecraft/world/level/BlockGetter;I)Z b
	moveAway (Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;)V b
	normalize ()V a
	randomize (Ljava/util/Random;DDDD)V a
net/minecraft/server/commands/StopCommand net/minecraft/server/commands/CommandStop
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/StopSoundCommand net/minecraft/server/commands/CommandStopSound
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	stopSound (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/sounds/SoundSource;Lnet/minecraft/resources/ResourceLocation;)I a
net/minecraft/server/commands/SummonCommand net/minecraft/server/commands/CommandSummon
	ERROR_DUPLICATE_UUID b
	ERROR_FAILED a
	INVALID_POSITION c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spawnEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;Z)I a
net/minecraft/server/commands/TagCommand net/minecraft/server/commands/CommandTag
	ERROR_ADD_FAILED a
	ERROR_REMOVE_FAILED b
	addTag (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/lang/String;)I a
	getTags (Ljava/util/Collection;)Ljava/util/Collection; a
	listTags (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeTag (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/lang/String;)I b
net/minecraft/server/commands/TeamCommand net/minecraft/server/commands/CommandTeam
	ERROR_TEAM_ALREADY_COLOR d
	ERROR_TEAM_ALREADY_EMPTY b
	ERROR_TEAM_ALREADY_EXISTS a
	ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED f
	ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED e
	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED h
	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED g
	ERROR_TEAM_ALREADY_NAME c
	ERROR_TEAM_COLLISION_UNCHANGED k
	ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED j
	ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED i
	createTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	createTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I a
	deleteTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I b
	emptyTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I a
	joinTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Ljava/util/Collection;)I a
	leaveTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	listMembers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I c
	listTeams (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setCollision (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$CollisionRule;)I a
	setColor (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/ChatFormatting;)I a
	setDeathMessageVisibility (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$Visibility;)I b
	setDisplayName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I a
	setFriendlyFire (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Z)I b
	setFriendlySight (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Z)I a
	setNametagVisibility (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$Visibility;)I a
	setPrefix (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I b
	setSuffix (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I c
net/minecraft/server/commands/TeamMsgCommand net/minecraft/server/commands/CommandTeamMsg
	ERROR_NOT_ON_TEAM b
	SUGGEST_STYLE a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendMessage (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;)I a
net/minecraft/server/commands/TeleportCommand net/minecraft/server/commands/CommandTeleport
	INVALID_POSITION a
	formatDouble (D)Ljava/lang/String; a
	performTeleport (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;DDDLjava/util/Set;FFLnet/minecraft/server/commands/TeleportCommand$LookAt;)V a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	teleportToEntity (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/entity/Entity;)I a
	teleportToPos (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/commands/arguments/coordinates/Coordinates;Lnet/minecraft/commands/arguments/coordinates/Coordinates;Lnet/minecraft/server/commands/TeleportCommand$LookAt;)I a
net/minecraft/server/commands/TeleportCommand$LookAt abt$a
	anchor c
	entity b
	position a
	perform (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/server/commands/TellRawCommand net/minecraft/server/commands/CommandTellRaw
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/TimeCommand net/minecraft/server/commands/CommandTime
	addTime (Lnet/minecraft/commands/CommandSourceStack;I)I b
	getDayTime (Lnet/minecraft/server/level/ServerLevel;)I a
	queryTime (Lnet/minecraft/commands/CommandSourceStack;I)I c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setTime (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/TitleCommand net/minecraft/server/commands/CommandTitle
	clearTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I b
	setTimes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;III)I a
	showTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;Ljava/lang/String;Ljava/util/function/Function;)I a
net/minecraft/server/commands/TriggerCommand net/minecraft/server/commands/CommandTrigger
	ERROR_INVALID_OBJECTIVE b
	ERROR_NOT_PRIMED a
	addValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;I)I a
	getScore (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/Score; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;I)I b
	simpleTrigger (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;)I a
	suggestObjectives (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/WeatherCommand net/minecraft/server/commands/CommandWeather
	DEFAULT_TIME a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setClear (Lnet/minecraft/commands/CommandSourceStack;I)I a
	setRain (Lnet/minecraft/commands/CommandSourceStack;I)I b
	setThunder (Lnet/minecraft/commands/CommandSourceStack;I)I c
net/minecraft/server/commands/WhitelistCommand net/minecraft/server/commands/CommandWhitelist
	ERROR_ALREADY_DISABLED b
	ERROR_ALREADY_ENABLED a
	ERROR_ALREADY_WHITELISTED c
	ERROR_NOT_WHITELISTED d
	addPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	disableWhitelist (Lnet/minecraft/commands/CommandSourceStack;)I c
	enableWhitelist (Lnet/minecraft/commands/CommandSourceStack;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	reload (Lnet/minecraft/commands/CommandSourceStack;)I a
	removePlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I b
	showList (Lnet/minecraft/commands/CommandSourceStack;)I d
net/minecraft/server/commands/WorldBorderCommand net/minecraft/server/commands/CommandWorldBorder
	ERROR_SAME_CENTER a
	ERROR_SAME_DAMAGE_AMOUNT i
	ERROR_SAME_DAMAGE_BUFFER h
	ERROR_SAME_SIZE b
	ERROR_SAME_WARNING_DISTANCE g
	ERROR_SAME_WARNING_TIME f
	ERROR_TOO_BIG d
	ERROR_TOO_FAR_OUT e
	ERROR_TOO_SMALL c
	getSize (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setCenter (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec2;)I a
	setDamageAmount (Lnet/minecraft/commands/CommandSourceStack;F)I b
	setDamageBuffer (Lnet/minecraft/commands/CommandSourceStack;F)I a
	setSize (Lnet/minecraft/commands/CommandSourceStack;DJ)I a
	setWarningDistance (Lnet/minecraft/commands/CommandSourceStack;I)I b
	setWarningTime (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/data/BlockDataAccessor net/minecraft/server/commands/data/CommandDataAccessorTile
	ERROR_NOT_A_BLOCK_ENTITY b
	PROVIDER a
	entity c
	pos d
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/DataAccessor net/minecraft/server/commands/data/CommandDataAccessor
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/DataCommands net/minecraft/server/commands/data/CommandData
	ALL_PROVIDERS a
	ERROR_EXPECTED_LIST h
	ERROR_EXPECTED_OBJECT i
	ERROR_GET_NON_EXISTENT f
	ERROR_GET_NOT_NUMBER e
	ERROR_INVALID_INDEX j
	ERROR_MERGE_UNCHANGED d
	ERROR_MULTIPLE_TAGS g
	SOURCE_PROVIDERS c
	TARGET_PROVIDERS b
	decorateModification (Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	getData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;)I a
	getData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I b
	getNumeric (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;D)I a
	getSingleTag (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Lnet/minecraft/server/commands/data/DataAccessor;)Lnet/minecraft/nbt/Tag; a
	insertAtIndex (ILnet/minecraft/nbt/CompoundTag;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/List;)I a
	manipulateData (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/commands/data/DataCommands$DataProvider;Lnet/minecraft/server/commands/data/DataCommands$DataManipulator;Ljava/util/List;)I a
	mergeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/nbt/CompoundTag;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I a
net/minecraft/server/commands/data/DataCommands$DataManipulator acd$a
net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator acd$b
net/minecraft/server/commands/data/DataCommands$DataProvider acd$c
	access (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/commands/data/DataAccessor; a
	wrap (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/data/EntityDataAccessor net/minecraft/server/commands/data/CommandDataAccessorEntity
	ERROR_NO_PLAYERS b
	PROVIDER a
	entity c
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/StorageDataAccessor net/minecraft/server/commands/data/CommandDataStorage
	PROVIDER a
	SUGGEST_STORAGE b
	id d
	storage c
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getGlobalTags (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/world/level/storage/CommandStorage; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/dedicated/ServerWatchdog net/minecraft/server/dedicated/ThreadWatchdog
	LOGGER a
	MAX_SHUTDOWN_TIME b
	SHUTDOWN_STATUS c
	maxTickTime e
	server d
	exit ()V a
net/minecraft/server/dedicated/Settings net/minecraft/server/dedicated/PropertyManager
	LOGGER a
	properties Y
	cloneProperties ()Ljava/util/Properties; a
	dispatchNumberOrString (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function; a
	get (Ljava/lang/String;I)I a
	get (Ljava/lang/String;J)J a
	get (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I a
	get (Ljava/lang/String;Z)Z a
	getLegacy (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; a
	getLegacyBoolean (Ljava/lang/String;)Ljava/lang/Boolean; b
	getLegacyString (Ljava/lang/String;)Ljava/lang/String; a
	getMutable (Ljava/lang/String;I)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Z)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getStringRaw (Ljava/lang/String;)Ljava/lang/String; c
	loadFromFile (Ljava/nio/file/Path;)Ljava/util/Properties; b
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/Settings; b
	store (Ljava/nio/file/Path;)V c
	wrapNumberDeserializer (Ljava/util/function/Function;)Ljava/util/function/Function; a
net/minecraft/server/dedicated/Settings$MutableValue net/minecraft/server/dedicated/PropertyManager$EditableProperty
	key b
	serializer d
	value c
	update (Lnet/minecraft/core/RegistryAccess;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings; a
net/minecraft/server/gui/MinecraftServerGui net/minecraft/server/gui/ServerGUI
	LOGGER b
	MONOSPACED a
	SHUTDOWN_TITLE d
	TITLE c
	finalizers g
	isClosing h
	logAppenderThread f
	server e
	addFinalizer (Ljava/lang/Runnable;)V a
	buildChatPanel ()Ljavax/swing/JComponent; e
	buildInfoPanel ()Ljavax/swing/JComponent; c
	buildPlayerPanel ()Ljavax/swing/JComponent; d
	close ()V b
	print (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V a
	runFinalizers ()V f
	showFrameFor (Lnet/minecraft/server/dedicated/DedicatedServer;)Lnet/minecraft/server/gui/MinecraftServerGui; a
	start ()V a
net/minecraft/server/gui/PlayerListComponent net/minecraft/server/gui/PlayerListBox
	server a
	tickCount b
	tick ()V a
net/minecraft/server/gui/StatsComponent net/minecraft/server/gui/GuiStatsComponent
	DECIMAL_FORMAT a
	msgs d
	server e
	timer f
	values b
	vp c
	close ()V a
	getAverage ([J)D a
	tick ()V b
net/minecraft/server/level/BlockDestructionProgress act
	id a
	pos b
	progress c
	updatedRenderTick d
	compareTo (Lnet/minecraft/server/level/BlockDestructionProgress;)I a
	getId ()I a
	getPos ()Lnet/minecraft/core/BlockPos; b
	getProgress ()I c
	getUpdatedRenderTick ()I d
	setProgress (I)V a
	updateTick (I)V b
net/minecraft/server/level/ChunkHolder net/minecraft/server/level/PlayerChunk
	BLOCKS_BEFORE_RESEND_FUDGE g
	CHUNK_STATUSES e
	FULL_CHUNK_STATUSES f
	UNLOADED_CHUNK a
	UNLOADED_CHUNK_FUTURE b
	UNLOADED_LEVEL_CHUNK c
	UNLOADED_LEVEL_CHUNK_FUTURE d
	blockChangedLightSectionFilter u
	changedBlocksPerSection t
	chunkToSave m
	chunkToSaveHistory n
	entityTickingChunkFuture l
	fullChunkFuture j
	futures h
	hasChangedSections s
	levelHeightAccessor i
	lightEngine w
	oldTicketLevel o
	onLevelChange x
	pendingFullStateConfirmation B
	playerProvider y
	pos r
	queueLevel q
	resendLight A
	skyChangedLightSectionFilter v
	ticketLevel p
	tickingChunkFuture k
	wasAccessibleSinceLastSave z
	addSaveDependency (Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;)V a
	blockChanged (Lnet/minecraft/core/BlockPos;)V a
	broadcast (Lnet/minecraft/network/protocol/Packet;Z)V a
	broadcastBlockEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	broadcastBlockEntityIfNeeded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	broadcastChanges (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	demoteFullChunk (Lnet/minecraft/server/level/ChunkMap;Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)V a
	getChunkToSave ()Ljava/util/concurrent/CompletableFuture; g
	getEntityTickingChunkFuture ()Ljava/util/concurrent/CompletableFuture; b
	getFullChunkFuture ()Ljava/util/concurrent/CompletableFuture; c
	getFullChunkStatus (I)Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; c
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; h
	getFutureIfPresent (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; b
	getFutureIfPresentUnchecked (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; a
	getLastAvailable ()Lnet/minecraft/world/level/chunk/ChunkAccess; f
	getLastAvailableStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; e
	getOrScheduleFuture (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/ChunkMap;)Ljava/util/concurrent/CompletableFuture; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; i
	getQueueLevel ()I k
	getStatus (I)Lnet/minecraft/world/level/chunk/ChunkStatus; b
	getTicketLevel ()I j
	getTickingChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; d
	getTickingChunkFuture ()Ljava/util/concurrent/CompletableFuture; a
	refreshAccessibility ()V m
	replaceProtoChunk (Lnet/minecraft/world/level/chunk/ImposterProtoChunk;)V a
	scheduleFullChunkPromotion (Lnet/minecraft/server/level/ChunkMap;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)V a
	sectionLightChanged (Lnet/minecraft/world/level/LightLayer;I)V a
	setQueueLevel (I)V d
	setTicketLevel (I)V a
	updateChunkToSave (Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V a
	updateFutures (Lnet/minecraft/server/level/ChunkMap;Ljava/util/concurrent/Executor;)V a
	wasAccessibleSinceLastSave ()Z l
net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure net/minecraft/server/level/PlayerChunk$Failure
	UNLOADED b
net/minecraft/server/level/ChunkHolder$ChunkSaveDebug acu$b
	future b
	source c
	thread a
net/minecraft/server/level/ChunkHolder$FullChunkStatus net/minecraft/server/level/PlayerChunk$State
	$VALUES e
	BORDER b
	ENTITY_TICKING d
	INACCESSIBLE a
	TICKING c
	$values ()[Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; a
	isOrAfter (Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)Z a
net/minecraft/server/level/ChunkHolder$LevelChangeListener acu$d
net/minecraft/server/level/ChunkHolder$PlayerProvider acu$e
	getPlayers (Lnet/minecraft/world/level/ChunkPos;Z)Ljava/util/List; a
net/minecraft/server/level/ChunkMap net/minecraft/server/level/PlayerChunkMap
	CHUNK_SAVED_EAGERLY_PER_TICK k
	CHUNK_SAVED_PER_TICK j
	CHUNK_TYPE_FULL h
	CHUNK_TYPE_REPLACEABLE f
	CHUNK_TYPE_UNKNOWN g
	FORCED_TICKET_LEVEL c
	LOGGER i
	MAX_CHUNK_DISTANCE b
	MAX_VIEW_DISTANCE a
	MIN_VIEW_DISTANCE l
	chunkStatusListener C
	chunkTypeCache J
	distanceManager D
	entitiesInLevel p
	entityMap I
	generator t
	level q
	lightEngine r
	mainThreadExecutor s
	mainThreadMailbox A
	modified x
	overworldDataStorage u
	pendingUnloads o
	playerMap H
	poiManager v
	progressListener B
	queueSorter y
	storageName G
	structureManager F
	tickingGenerated E
	toDrop w
	unloadQueue K
	updatingChunkMap m
	viewDistance L
	visibleChunkMap n
	worldgenMailbox z
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	anyPlayerCloseEnoughForSpawning (Lnet/minecraft/world/level/ChunkPos;)Z d
	broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V b
	debugReloadGenerator ()V b
	dumpChunks (Ljava/io/Writer;)V a
	euclideanDistanceSquared (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/Entity;)D a
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String; a
	getChunkQueueLevel (J)Ljava/util/function/IntSupplier; c
	getChunkRangeFuture (Lnet/minecraft/world/level/ChunkPos;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture; a
	getChunks ()Ljava/lang/Iterable; h
	getDependencyStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	getDistanceManager ()Lnet/minecraft/server/level/DistanceManager; g
	getLightEngine ()Lnet/minecraft/server/level/ThreadedLevelLightEngine; c
	getPlayers (Lnet/minecraft/world/level/ChunkPos;Z)Ljava/util/List; a
	getPlayersCloseForSpawning (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/List; e
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; j
	getStorageName ()Ljava/lang/String; k
	getTickingGenerated ()I e
	getUpdatingChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; a
	getVisibleChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; b
	isChunkInEuclideanRange (IIIII)Z a
	isChunkInEuclideanRange (Lnet/minecraft/world/level/ChunkPos;III)Z a
	isChunkInEuclideanRange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/ServerPlayer;ZI)Z a
	isChunkOnEuclideanBorder (IIIII)Z b
	isChunkOnEuclideanBorder (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/ServerPlayer;ZI)Z b
	isExistingChunkFull (Lnet/minecraft/world/level/ChunkPos;)Z i
	markPosition (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;)B a
	markPositionReplaceable (Lnet/minecraft/world/level/ChunkPos;)V h
	move (Lnet/minecraft/server/level/ServerPlayer;)V a
	onFullChunkStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)V a
	playerIsCloseEnoughForSpawning (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/ChunkPos;)Z a
	playerLoadedChunk (Lnet/minecraft/server/level/ServerPlayer;Lorg/apache/commons/lang3/mutable/MutableObject;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	postLoadProtoChunk (Lnet/minecraft/server/level/ServerLevel;Ljava/util/List;)V a
	prepareAccessibleChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; b
	prepareEntityTickingChunk (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; b
	prepareTickingChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; a
	printFuture (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; a
	processUnloads (Ljava/util/function/BooleanSupplier;)V b
	promoteChunkMap ()Z d
	protoChunkToFullChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; c
	readChunk (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; j
	releaseLightTicket (Lnet/minecraft/world/level/ChunkPos;)V c
	removeEntity (Lnet/minecraft/world/entity/Entity;)V b
	save (Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	saveAllChunks (Z)V a
	saveChunkIfNeeded (Lnet/minecraft/server/level/ChunkHolder;)Z d
	schedule (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; a
	scheduleChunkGeneration (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; b
	scheduleChunkLoad (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; g
	scheduleUnload (JLnet/minecraft/server/level/ChunkHolder;)V a
	setViewDistance (I)V a
	size ()I f
	skipPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z b
	tick ()V i
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
	updateChunkTracking (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/ChunkPos;Lorg/apache/commons/lang3/mutable/MutableObject;ZZ)V a
	updatePlayerPos (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/core/SectionPos; c
	updatePlayerStatus (Lnet/minecraft/server/level/ServerPlayer;Z)V a
net/minecraft/server/level/ChunkMap$DistanceManager acv$a
	getChunk (J)Lnet/minecraft/server/level/ChunkHolder; b
	isChunkToRemove (J)Z a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
net/minecraft/server/level/ChunkMap$TrackedEntity net/minecraft/server/level/PlayerChunkMap$EntityTracker
	entity c
	lastSectionPos e
	range d
	seenBy f
	serverEntity b
	broadcast (Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V b
	broadcastRemoved ()V a
	getEffectiveRange ()I b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	scaledRange (I)I a
	updatePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	updatePlayers (Ljava/util/List;)V a
net/minecraft/server/level/ChunkTaskPriorityQueue net/minecraft/server/level/ChunkTaskQueue
	PRIORITY_LEVEL_COUNT a
	acquired e
	firstQueue c
	maxTasks f
	name d
	taskQueue b
	acquire (J)Ljava/lang/Runnable; a
	getAcquired ()Lit/unimi/dsi/fastutil/longs/LongSet; b
	pop ()Ljava/util/stream/Stream; a
	release (JZ)V a
	resortChunkTasks (ILnet/minecraft/world/level/ChunkPos;I)V a
	submit (Ljava/util/Optional;JI)V a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter net/minecraft/server/level/ChunkTaskQueueSorter
	LOGGER a
	mailbox d
	queues b
	sleeping c
	getDebugStatus ()Ljava/lang/String; a
	getProcessor (Lnet/minecraft/util/thread/ProcessorHandle;Z)Lnet/minecraft/util/thread/ProcessorHandle; a
	getQueue (Lnet/minecraft/util/thread/ProcessorHandle;)Lnet/minecraft/server/level/ChunkTaskPriorityQueue; b
	getReleaseProcessor (Lnet/minecraft/util/thread/ProcessorHandle;)Lnet/minecraft/util/thread/ProcessorHandle; a
	message (Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Lnet/minecraft/server/level/ChunkHolder;Ljava/lang/Runnable;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Lnet/minecraft/server/level/ChunkHolder;Ljava/util/function/Function;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	pollTask (Lnet/minecraft/server/level/ChunkTaskPriorityQueue;Lnet/minecraft/util/thread/ProcessorHandle;)V a
	release (Ljava/lang/Runnable;JZ)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release; a
	release (Lnet/minecraft/util/thread/ProcessorHandle;JLjava/lang/Runnable;Z)V a
	submit (Lnet/minecraft/util/thread/ProcessorHandle;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message acx$a
	level c
	pos b
	task a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release acx$b
	clearQueue c
	pos b
	task a
net/minecraft/server/level/ChunkTracker net/minecraft/server/level/ChunkMap
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevelFromSource (J)I b
	isSource (J)Z a
	update (JIZ)V b
net/minecraft/server/level/ColumnPos net/minecraft/server/level/BlockPosition2D
	COORD_BITS c
	COORD_MASK d
	HASH_A e
	HASH_C f
	HASH_Z_XOR g
	x a
	z b
	asLong (II)J a
	toChunkPos ()Lnet/minecraft/world/level/ChunkPos; a
	toLong ()J b
net/minecraft/server/level/DemoMode net/minecraft/server/level/DemoPlayerInteractManager
	DEMO_DAYS a
	TOTAL_PLAY_TICKS b
	demoEndedReminder g
	demoHasEnded f
	displayedIntro e
	gameModeTicks h
	handleBlockBreakAction (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/Direction;I)V a
	outputDemoReminder ()V f
	tick ()V a
	useItem (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/server/level/DistanceManager net/minecraft/server/level/ChunkMapDistance
	BLOCK_TICKING_LEVEL_THRESHOLD f
	ENTITY_TICKING_LEVEL_THRESHOLD e
	ENTITY_TICKING_RANGE b
	INITIAL_TICKET_LIST_CAPACITY d
	LOGGER a
	PLAYER_TICKET_LEVEL c
	chunksToUpdateFutures m
	mainThreadExecutor r
	naturalSpawnChunkCounter j
	playerTicketManager l
	playersPerChunk g
	simulationDistance t
	ticketThrottler n
	ticketThrottlerInput o
	ticketThrottlerReleaser p
	ticketTickCounter s
	ticketTracker i
	tickets h
	ticketsToRelease q
	tickingTicketsTracker k
	addPlayer (Lnet/minecraft/core/SectionPos;Lnet/minecraft/server/level/ServerPlayer;)V a
	addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V c
	addTicket (JLnet/minecraft/server/level/Ticket;)V a
	addTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	dumpTickets (Ljava/lang/String;)V a
	getChunk (J)Lnet/minecraft/server/level/ChunkHolder; b
	getDebugStatus ()Ljava/lang/String; c
	getNaturalSpawnChunkCount ()I b
	getPlayerTicketLevel ()I e
	getTicketDebugString (J)Ljava/lang/String; e
	getTicketLevelAt (Lnet/minecraft/util/SortedArraySet;)I a
	getTickets (J)Lnet/minecraft/util/SortedArraySet; g
	hasPlayersNearby (J)Z f
	inBlockTickingRange (J)Z d
	inEntityTickingRange (J)Z c
	isChunkToRemove (J)Z a
	purgeStaleTickets ()V a
	removePlayer (Lnet/minecraft/core/SectionPos;Lnet/minecraft/server/level/ServerPlayer;)V b
	removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V d
	removeTicket (JLnet/minecraft/server/level/Ticket;)V b
	removeTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	runAllUpdates (Lnet/minecraft/server/level/ChunkMap;)Z a
	tickingTracker ()Lnet/minecraft/server/level/TickingTracker; d
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
	updatePlayerTickets (I)V a
	updateSimulationDistance (I)V b
net/minecraft/server/level/DistanceManager$ChunkTicketTracker adb$a
	getLevel (J)I c
	getLevelFromSource (J)I b
	runDistanceUpdates (I)I a
	setLevel (JI)V a
net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker adb$b
	chunks a
	maxDistance b
	dumpChunks (Ljava/lang/String;)V a
	getLevel (J)I c
	getLevelFromSource (J)I b
	havePlayer (J)Z d
	onLevelChange (JII)V a
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/server/level/DistanceManager$PlayerTicketTracker adb$c
	queueLevels f
	toUpdate g
	viewDistance e
	haveTicketFor (I)Z c
	onLevelChange (JII)V a
	onLevelChange (JIZZ)V a
	runAllUpdates ()V a
	updateViewDistance (I)V a
net/minecraft/server/level/PlayerRespawnLogic net/minecraft/server/level/WorldProviderNormal
	getOverworldRespawnPos (Lnet/minecraft/server/level/ServerLevel;II)Lnet/minecraft/core/BlockPos; a
	getSpawnPosInChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/server/level/SectionTracker net/minecraft/server/level/LightEngineGraphSection
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevelFromSource (J)I b
	isSource (J)Z a
	update (JIZ)V b
net/minecraft/server/level/ServerBossEvent net/minecraft/server/level/BossBattleServer
	players h
	unmodifiablePlayers i
	visible j
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	broadcast (Ljava/util/function/Function;)V a
	getPlayers ()Ljava/util/Collection; h
	isVisible ()Z g
	removeAllPlayers ()V b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	setColor (Lnet/minecraft/world/BossEvent$BossBarColor;)V a
	setCreateWorldFog (Z)Lnet/minecraft/world/BossEvent; c
	setDarkenScreen (Z)Lnet/minecraft/world/BossEvent; a
	setName (Lnet/minecraft/network/chat/Component;)V a
	setOverlay (Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
	setPlayBossMusic (Z)Lnet/minecraft/world/BossEvent; b
	setProgress (F)V a
	setVisible (Z)V d
net/minecraft/server/level/ServerChunkCache net/minecraft/server/level/ChunkProviderServer
	CACHE_SIZE m
	CHUNK_STATUSES c
	LOGGER b
	chunkMap a
	dataStorage i
	distanceManager d
	lastChunk p
	lastChunkPos n
	lastChunkStatus o
	lastInhabitedUpdate j
	lastSpawnState q
	level e
	lightEngine g
	mainThread f
	mainThreadProcessor h
	spawnEnemies k
	spawnFriendlies l
	addEntity (Lnet/minecraft/world/entity/Entity;)V b
	addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	blockChanged (Lnet/minecraft/core/BlockPos;)V a
	broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V b
	broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V a
	chunkAbsent (Lnet/minecraft/server/level/ChunkHolder;I)Z a
	chunkScanner ()Lnet/minecraft/world/level/chunk/storage/ChunkScanAccess; k
	clearCache ()V o
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String; a
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getChunkFuture (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; b
	getChunkFutureMainThread (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; c
	getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getDataStorage ()Lnet/minecraft/world/level/storage/DimensionDataStorage; i
	getFullChunk (JLjava/util/function/Consumer;)V a
	getGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; g
	getLastSpawnState ()Lnet/minecraft/world/level/NaturalSpawner$SpawnState; l
	getLevel ()Lnet/minecraft/world/level/BlockGetter; n
	getLevel ()Lnet/minecraft/world/level/Level; c
	getLightEngine ()Lnet/minecraft/server/level/ThreadedLevelLightEngine; a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; m
	getLoadedChunksCount ()I h
	getPendingTasksCount ()I f
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; j
	getTickingGenerated ()I b
	getVisibleChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; b
	hasChunk (II)Z b
	isPositionTicking (J)Z a
	move (Lnet/minecraft/server/level/ServerPlayer;)V a
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
	pollTask ()Z d
	removeEntity (Lnet/minecraft/world/entity/Entity;)V a
	removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	runDistanceManagerUpdates ()Z p
	save (Z)V a
	setSimulationDistance (I)V b
	setSpawnSettings (ZZ)V a
	setViewDistance (I)V a
	storeInCache (JLnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickChunks ()V q
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
net/minecraft/server/level/ServerChunkCache$ChunkAndHolder adg$a
	chunk a
	holder b
	chunk ()Lnet/minecraft/world/level/chunk/LevelChunk; a
	holder ()Lnet/minecraft/server/level/ChunkHolder; b
net/minecraft/server/level/ServerChunkCache$MainThreadExecutor adg$b
	doRunTask (Ljava/lang/Runnable;)V c
	getRunningThread ()Ljava/lang/Thread; at
	pollTask ()Z y
	scheduleExecutables ()Z as
	shouldRun (Ljava/lang/Runnable;)Z d
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/server/level/ServerEntity net/minecraft/server/level/EntityTrackerEntry
	LOGGER a
	TOLERANCE_LEVEL_ROTATION b
	ap n
	broadcast g
	entity d
	lastPassengers q
	level c
	teleportDelay p
	tickCount o
	trackDelta f
	updateInterval e
	wasOnGround s
	wasRiding r
	xRotp l
	xp h
	yHeadRotp m
	yRotp k
	yp i
	zp j
	addPairing (Lnet/minecraft/server/level/ServerPlayer;)V b
	broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V a
	removePairing (Lnet/minecraft/server/level/ServerPlayer;)V a
	sendChanges ()V a
	sendDirtyEntityData ()V c
	sendPairingData (Ljava/util/function/Consumer;)V a
	sentPos ()Lnet/minecraft/world/phys/Vec3; b
	updateSentPos ()V d
net/minecraft/server/level/ServerLevel net/minecraft/server/level/WorldServer
	EMPTY_TIME_NO_TICK I
	END_SPAWN_POINT a
	LOGGER H
	MAX_RAIN_DELAY_TIME A
	MAX_RAIN_TIME C
	MAX_SCHEDULED_TICKS_PER_TICK J
	MAX_THUNDER_DELAY_TIME E
	MAX_THUNDER_TIME G
	MIN_RAIN_DELAY_TIME z
	MIN_RAIN_TIME B
	MIN_THUNDER_DELAY_TIME D
	MIN_THUNDER_TIME F
	blockEvents W
	blockEventsToReschedule X
	blockTicks T
	chunkSource L
	customSpawners Z
	dragonFight aa
	dragonParts ab
	emptyTime R
	entityManager P
	entityTickList O
	fluidTicks U
	handlingTick Y
	navigatingMobs V
	noSave b
	players K
	portalForcer S
	raids c
	server M
	serverLevelData N
	sleepStatus Q
	structureCheck ad
	structureFeatureManager ac
	tickTime ae
	addDuringCommandTeleport (Lnet/minecraft/server/level/ServerPlayer;)V a
	addDuringPortalTeleport (Lnet/minecraft/server/level/ServerPlayer;)V b
	addDuringTeleport (Lnet/minecraft/world/entity/Entity;)V d
	addEntity (Lnet/minecraft/world/entity/Entity;)Z j
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	addLegacyChunkEntities (Ljava/util/stream/Stream;)V a
	addNewPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V e
	addRespawnedPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
	addWithUUID (Lnet/minecraft/world/entity/Entity;)Z c
	addWorldGenChunkEntities (Ljava/util/stream/Stream;)V b
	advanceWeatherCycle ()V ao
	announceSleepStatus ()V an
	areEntitiesLoaded (J)Z c
	blockEvent (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V a
	blockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	broadcastEntityEvent (Lnet/minecraft/world/entity/Entity;B)V a
	canSleepThroughNights ()Z d
	clearBlockEvents (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	doBlockEvent (Lnet/minecraft/world/level/BlockEventData;)Z a
	dragonFight ()Lnet/minecraft/world/level/dimension/end/EndDragonFight; F
	dumpBlockEntityTickers (Ljava/io/Writer;)V a
	dumpEntities (Ljava/io/Writer;Ljava/lang/Iterable;)V a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	findLightningRod (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; D
	findLightningTargetAround (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findNearestBiome (Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/core/BlockPos;II)Lnet/minecraft/core/BlockPos; a
	findNearestMapFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	gatherChunkSourceStats ()Ljava/lang/String; J
	getAllEntities ()Ljava/lang/Iterable; C
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; N
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTicks; l
	getChunkSource ()Lnet/minecraft/server/level/ServerChunkCache; k
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; L
	getDataStorage ()Lnet/minecraft/world/level/storage/DimensionDataStorage; u
	getDragons ()Ljava/util/List; h
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; I
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getEntity (Ljava/util/UUID;)Lnet/minecraft/world/entity/Entity; a
	getEntityOrPart (I)Lnet/minecraft/world/entity/Entity; b
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; M
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTicks; m
	getForcedChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; y
	getFreeMapId ()I v
	getLevel ()Lnet/minecraft/server/level/ServerLevel; G
	getLogicalHeight ()I j
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getPlayers (Ljava/util/function/Predicate;)Ljava/util/List; a
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; A
	getPortalForcer ()Lnet/minecraft/world/level/portal/PortalForcer; o
	getRaidAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid; c
	getRaids ()Lnet/minecraft/world/entity/raid/Raids; B
	getRandomPlayer ()Lnet/minecraft/server/level/ServerPlayer; i
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; q
	getScoreboard ()Lnet/minecraft/server/ServerScoreboard; f
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; K
	getSeed ()J E
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSharedSpawnAngle ()F x
	getSharedSpawnPos ()Lnet/minecraft/core/BlockPos; w
	getStructureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager; p
	getTagManager ()Lnet/minecraft/tags/TagContainer; r
	getTypeCount (Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String; a
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	getWatchdogStats ()Ljava/lang/String; H
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	isCloseToVillage (Lnet/minecraft/core/BlockPos;I)Z a
	isFlat ()Z D
	isHandlingTick ()Z c
	isPositionEntityTicking (Lnet/minecraft/core/BlockPos;)Z e
	isPositionEntityTicking (Lnet/minecraft/world/level/ChunkPos;)Z a
	isPositionTickingWithEntitiesLoaded (J)Z d
	isRaided (Lnet/minecraft/core/BlockPos;)Z d
	isVillage (Lnet/minecraft/core/BlockPos;)Z b
	isVillage (Lnet/minecraft/core/SectionPos;)Z a
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	makeObsidianPlatform (Lnet/minecraft/server/level/ServerLevel;)V a
	mayInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z a
	noSave ()Z s
	onBlockStateChange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	onReputationEvent (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ReputationEventHandler;)V a
	onStructureStartsAvailable (Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; z
	registryAccess ()Lnet/minecraft/core/RegistryAccess; t
	removePlayerImmediately (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	resetEmptyTime ()V g
	resetWeatherCycle ()V ap
	runBlockEvents ()V ar
	save (Lnet/minecraft/util/ProgressListener;ZZ)V a
	saveDebugReport (Ljava/nio/file/Path;)V a
	saveLevelData ()V aq
	sectionsToVillage (Lnet/minecraft/core/SectionPos;)I b
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendParticles (Lnet/minecraft/core/particles/ParticleOptions;DDDIDDDD)I a
	sendParticles (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/particles/ParticleOptions;ZDDDIDDDD)Z a
	sendParticles (Lnet/minecraft/server/level/ServerPlayer;ZDDDLnet/minecraft/network/protocol/Packet;)Z a
	sendVibrationParticle (Lnet/minecraft/world/level/gameevent/vibrations/VibrationPath;)V a
	setChunkForced (IIZ)Z a
	setDayTime (J)V b
	setDefaultSpawnPos (Lnet/minecraft/core/BlockPos;F)V a
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setWeatherParameters (IIZZ)V a
	shouldDiscardEntity (Lnet/minecraft/world/entity/Entity;)Z i
	shouldTickBlocksAt (J)Z a
	startTickingChunk (Lnet/minecraft/world/level/chunk/LevelChunk;)V b
	startsForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Ljava/util/List; a
	structureFeatureManager ()Lnet/minecraft/world/level/StructureFeatureManager; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V d
	tickChunk (Lnet/minecraft/world/level/chunk/LevelChunk;I)V a
	tickCustomSpawners (ZZ)V a
	tickFluid (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
	tickNonPassenger (Lnet/minecraft/world/entity/Entity;)V a
	tickPassenger (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V a
	tickTime ()V b
	tryAddFreshEntityWithPassengers (Lnet/minecraft/world/entity/Entity;)Z e
	unload (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	updateSleepingPlayerList ()V e
	wakeUpAllPlayers ()V am
net/minecraft/server/level/ServerLevel$EntityCallbacks adi$a
	onCreated (Ljava/lang/Object;)V f
	onCreated (Lnet/minecraft/world/entity/Entity;)V a
	onDestroyed (Ljava/lang/Object;)V e
	onDestroyed (Lnet/minecraft/world/entity/Entity;)V b
	onTickingEnd (Ljava/lang/Object;)V c
	onTickingEnd (Lnet/minecraft/world/entity/Entity;)V d
	onTickingStart (Ljava/lang/Object;)V d
	onTickingStart (Lnet/minecraft/world/entity/Entity;)V c
	onTrackingEnd (Ljava/lang/Object;)V a
	onTrackingEnd (Lnet/minecraft/world/entity/Entity;)V f
	onTrackingStart (Ljava/lang/Object;)V b
	onTrackingStart (Lnet/minecraft/world/entity/Entity;)V e
net/minecraft/server/level/ServerPlayer net/minecraft/server/level/EntityPlayer
	LOGGER cp
	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ cq
	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y cr
	advancements cs
	allowsListing cZ
	camera cI
	canChatColor cG
	chatVisibility cF
	connection b
	containerCounter dc
	containerListener db
	containerSynchronizer da
	disconnected cO
	enteredLavaOnVehiclePosition cR
	enteredNetherPosition cQ
	gameMode d
	isChangingDimension cJ
	lastActionTime cH
	lastFoodSaturationZero cC
	lastRecordedAirLevel cw
	lastRecordedArmor cx
	lastRecordedExperience cz
	lastRecordedFoodLevel cv
	lastRecordedHealthAndAbsorption cu
	lastRecordedLevel cy
	lastSectionPos cS
	lastSentExp cD
	lastSentFood cB
	lastSentHealth cA
	latency e
	levitationStartPos cM
	levitationStartTime cN
	recipeBook cL
	respawnAngle cW
	respawnDimension cT
	respawnForced cV
	respawnPosition cU
	seenCredits cK
	server c
	spawnInvulnerableTime cE
	startingToFallPosition cP
	stats ct
	textFilter cX
	textFilteringEnabled cY
	wonGame f
	acceptsChat (Lnet/minecraft/network/chat/ChatType;)Z a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	allowsListing ()Z V
	attack (Lnet/minecraft/world/entity/Entity;)V d
	awardKillScore (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V a
	awardRecipes (Ljava/util/Collection;)I a
	awardRecipesByKey ([Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/stats/Stat;I)V a
	bedBlocked (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	bedInRange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	broadcastToPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z a
	calculateGameModeForNewPlayer (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; b
	canChatInColor ()Z z
	canHarmPlayer (Lnet/minecraft/world/entity/player/Player;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	closeContainer ()V q
	completeUsingItem ()V v
	createEndPlatform (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	createItemCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; j
	crit (Lnet/minecraft/world/entity/Entity;)V a
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	disconnect ()V s
	dismountTo (DDD)V a
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	doCheckFallDamage (DZ)V a
	doCloseContainer ()V r
	doTick ()V l
	drop (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity; a
	drop (Z)Z a
	findDimensionEntryPoint (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/portal/PortalInfo; a
	fudgeSpawnLocation (Lnet/minecraft/server/level/ServerLevel;)V d
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAdvancements ()Lnet/minecraft/server/PlayerAdvancements; M
	getCamera ()Lnet/minecraft/world/entity/Entity; G
	getChatVisibility ()Lnet/minecraft/world/entity/player/ChatVisiblity; A
	getCoprime (I)I u
	getExitPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; a
	getIpAddress ()Ljava/lang/String; y
	getLastActionTime ()J I
	getLastSectionPos ()Lnet/minecraft/core/SectionPos; R
	getLevel ()Lnet/minecraft/server/level/ServerLevel; x
	getLevel ()Lnet/minecraft/world/level/Level; W
	getPermissionLevel ()I B
	getRecipeBook ()Lnet/minecraft/stats/ServerRecipeBook; E
	getRespawnAngle ()F O
	getRespawnDimension ()Lnet/minecraft/resources/ResourceKey; P
	getRespawnPosition ()Lnet/minecraft/core/BlockPos; N
	getStats ()Lnet/minecraft/stats/ServerStatsCounter; D
	getTabListDisplayName ()Lnet/minecraft/network/chat/Component; J
	getTextFilter ()Lnet/minecraft/server/network/TextFilter; T
	giveExperienceLevels (I)V c
	giveExperiencePoints (I)V d
	handleTeamKill (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;)V a
	hasChangedDimension ()V L
	hasDisconnected ()Z t
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	initInventoryMenu ()V g
	initMenu (Lnet/minecraft/world/inventory/AbstractContainerMenu;)V a
	isChangingDimension ()Z K
	isCreative ()Z f
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isPvpAllowed ()Z fP
	isReachableBedBlock (Lnet/minecraft/core/BlockPos;)Z g
	isRespawnForced ()Z Q
	isSpectator ()Z B_
	isTextFilteringEnabled ()Z U
	loadGameTypes (Lnet/minecraft/nbt/CompoundTag;)V c
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)V a
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	moveTo (DDD)V c
	nextContainerCounter ()V fQ
	onChangedBlock (Lnet/minecraft/core/BlockPos;)V c
	onEffectAdded (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V a
	onEffectRemoved (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	onEffectUpdated (Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;)V a
	onEnchantmentPerformed (Lnet/minecraft/world/item/ItemStack;I)V a
	onEnterCombat ()V h
	onInsideBlock (Lnet/minecraft/world/level/block/state/BlockState;)V a
	onLeaveCombat ()V i
	onUpdateAbilities ()V w
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openHorseInventory (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openMenu (Lnet/minecraft/world/MenuProvider;)Ljava/util/OptionalInt; a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	processPortalCooldown ()V H
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readPlayerMode (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;)Lnet/minecraft/world/level/GameType; a
	resetFallDistance ()V m
	resetLastActionTime ()V C
	resetRecipes (Ljava/util/Collection;)I b
	resetSentInfo ()V u
	resetStat (Lnet/minecraft/stats/Stat;)V a
	restoreFrom (Lnet/minecraft/server/level/ServerPlayer;Z)V a
	sendMerchantOffers (ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	sendMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType;Ljava/util/UUID;)V a
	sendTexturePack (Ljava/lang/String;Ljava/lang/String;ZLnet/minecraft/network/chat/Component;)V a
	setCamera (Lnet/minecraft/world/entity/Entity;)V c
	setExperienceLevels (I)V b
	setExperiencePoints (I)V a
	setGameMode (Lnet/minecraft/world/level/GameType;)Z a
	setLastSectionPos (Lnet/minecraft/core/SectionPos;)V a
	setLevel (Lnet/minecraft/server/level/ServerLevel;)V c
	setPlayerInput (FFZZ)V a
	setRespawnPosition (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;FZZ)V a
	shouldFilterMessageTo (Lnet/minecraft/server/level/ServerPlayer;)Z b
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startSleepInBed (Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either; a
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	stopRiding ()V p
	stopSleepInBed (ZZ)V a
	storeGameTypes (Lnet/minecraft/nbt/CompoundTag;)V k
	swing (Lnet/minecraft/world/InteractionHand;)V a
	take (Lnet/minecraft/world/entity/Entity;I)V a
	teleportTo (DDD)V b
	teleportTo (Lnet/minecraft/server/level/ServerLevel;DDDFF)V a
	tellNeutralMobsThatIDied ()V fO
	tick ()V k
	trackChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/network/protocol/Packet;)V a
	trackEnteredOrExitedLavaOnVehicle ()V o
	trackStartFallingPosition ()V n
	triggerDimensionChangeTriggers (Lnet/minecraft/server/level/ServerLevel;)V e
	untrackChunk (Lnet/minecraft/world/level/ChunkPos;)V a
	updateInvisibilityStatus ()V F
	updateOptions (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	updateScoreForCriteria (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;I)V a
	updateUsingItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/server/level/ServerPlayerGameMode net/minecraft/server/level/PlayerInteractManager
	LOGGER a
	delayedDestroyPos k
	delayedTickStart l
	destroyPos h
	destroyProgressStart g
	gameModeForPlayer b
	gameTicks i
	hasDelayedDestroy j
	isDestroyingBlock f
	lastSentState m
	level c
	player d
	previousGameModeForPlayer e
	changeGameModeForPlayer (Lnet/minecraft/world/level/GameType;)Z a
	destroyAndAck (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Ljava/lang/String;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;)Z a
	getGameModeForPlayer ()Lnet/minecraft/world/level/GameType; b
	getPreviousGameModeForPlayer ()Lnet/minecraft/world/level/GameType; c
	handleBlockBreakAction (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/Direction;I)V a
	incrementDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;I)F a
	isCreative ()Z e
	isSurvival ()Z d
	setGameModeForPlayer (Lnet/minecraft/world/level/GameType;Lnet/minecraft/world/level/GameType;)V a
	setLevel (Lnet/minecraft/server/level/ServerLevel;)V a
	tick ()V a
	useItem (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/server/level/ThreadedLevelLightEngine net/minecraft/server/level/LightEngineThreaded
	LOGGER d
	chunkMap g
	lightTasks f
	scheduled j
	sorterMailbox h
	taskMailbox e
	taskPerBatch i
	addTask (IILjava/util/function/IntSupplier;Lnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType;Ljava/lang/Runnable;)V a
	addTask (IILnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType;Ljava/lang/Runnable;)V a
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	lightChunk (Lnet/minecraft/world/level/chunk/ChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runUpdate ()V e
	runUpdates (IZZ)I a
	setTaskPerBatch (I)V a
	tryScheduleUpdate ()V a
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/server/level/ThreadedLevelLightEngine$TaskType net/minecraft/server/level/LightEngineThreaded$Update
	$VALUES c
	POST_UPDATE b
	PRE_UPDATE a
	$values ()[Lnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType; a
net/minecraft/server/level/WorldGenRegion net/minecraft/server/level/RegionLimitedWorldAccess
	LOGGER a
	biomeManager l
	blockTicks j
	cache b
	center c
	currentlyGenerating r
	dimensionType i
	firstPos m
	fluidTicks k
	generatingStatus p
	lastPos n
	level e
	levelData g
	random h
	seed f
	size d
	structureFeatureManager o
	subTickCount s
	writeRadiusCutoff q
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; q_
	ensureCanWrite (Lnet/minecraft/core/BlockPos;)Z e_
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; s_
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; N
	getCenter ()Lnet/minecraft/world/level/ChunkPos; a
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; L
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; M
	getHeight ()I v_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; G
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; n_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l_
	getMinBuildHeight ()I u_
	getNearestPlayer (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player; a
	getRandom ()Ljava/util/Random; r_
	getSeaLevel ()I m_
	getSeed ()J E
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSkyDarken ()I o_
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; p_
	hasChunk (II)Z b
	isClientSide ()Z k_
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V j
	nextSubTickCount ()J t_
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; z
	registryAccess ()Lnet/minecraft/core/RegistryAccess; t
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setCurrentlyGenerating (Ljava/util/function/Supplier;)V a
	startsForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Ljava/util/List; a
net/minecraft/server/level/progress/ChunkProgressListener net/minecraft/server/level/progress/WorldLoadListener
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/ChunkProgressListenerFactory net/minecraft/server/level/progress/WorldLoadListenerFactory
net/minecraft/server/level/progress/LoggerChunkProgressListener net/minecraft/server/level/progress/WorldLoadListenerLogger
	LOGGER a
	count c
	maxCount b
	nextTickTime e
	startTime d
	getProgress ()I c
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/ProcessorChunkProgressListener adu
	delegate a
	mailbox b
	createStarted (Lnet/minecraft/server/level/progress/ChunkProgressListener;Ljava/util/concurrent/Executor;)Lnet/minecraft/server/level/progress/ProcessorChunkProgressListener; a
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/StoringChunkProgressListener adv
	delegate a
	diameter f
	fullDiameter d
	radius e
	spawnPos c
	started g
	statuses b
	getDiameter ()I d
	getFullDiameter ()I c
	getProgress ()I e
	getStatus (II)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/network/LegacyQueryHandler net/minecraft/server/network/LegacyPingHandler
	FAKE_PROTOCOL_VERSION a
	LOGGER b
	serverConnectionListener c
	createReply (Ljava/lang/String;)Lio/netty/buffer/ByteBuf; a
	sendFlushAndClose (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/server/network/ServerConnectionListener net/minecraft/server/network/ServerConnection
	LOGGER d
	SERVER_EPOLL_EVENT_GROUP b
	SERVER_EVENT_GROUP a
	channels f
	connections g
	running c
	server e
	getConnections ()Ljava/util/List; e
	getServer ()Lnet/minecraft/server/MinecraftServer; d
	startMemoryChannel ()Ljava/net/SocketAddress; a
	startTcpServerListener (Ljava/net/InetAddress;I)V a
	stop ()V b
	tick ()V c
net/minecraft/server/network/ServerConnectionListener$LatencySimulator net/minecraft/server/network/ServerConnection$LatencySimulator
	TIMER a
	delay b
	jitter c
	queuedMessages d
	delayDownstream (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V a
	onTimeout (Lio/netty/util/Timeout;)V a
net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage net/minecraft/server/network/ServerConnection$LatencySimulator$DelayedMessage
	ctx a
	msg b
net/minecraft/server/network/ServerGamePacketListenerImpl net/minecraft/server/network/PlayerConnection
	LATENCY_CHECK_INTERVAL d
	LOGGER c
	aboveGroundTickCount C
	aboveGroundVehicleTickCount E
	awaitingPositionFromClient y
	awaitingTeleport z
	awaitingTeleportTime A
	chatSpamTickCount j
	clientIsFloating B
	clientVehicleIsFloating D
	connection a
	dropSpamTickCount k
	firstGoodX l
	firstGoodY m
	firstGoodZ n
	keepAliveChallenge i
	keepAlivePending h
	keepAliveTime g
	knownMovePacketCount G
	lastGoodX o
	lastGoodY p
	lastGoodZ q
	lastVehicle r
	player b
	receivedMovePacketCount F
	server e
	tickCount f
	vehicleFirstGoodX s
	vehicleFirstGoodY t
	vehicleFirstGoodZ u
	vehicleLastGoodX v
	vehicleLastGoodY w
	vehicleLastGoodZ x
	clampHorizontal (D)D a
	clampVertical (D)D b
	containsInvalidValues (DDDFF)Z c
	disconnect (Lnet/minecraft/network/chat/Component;)V b
	dismount (DDDFF)V a
	filterTextPacket (Ljava/lang/Object;Ljava/util/function/Consumer;Ljava/util/function/BiFunction;)V a
	filterTextPacket (Ljava/lang/String;Ljava/util/function/Consumer;)V a
	filterTextPacket (Ljava/util/List;Ljava/util/function/Consumer;)V a
	getConnection ()Lnet/minecraft/network/Connection; a
	getPlayer ()Lnet/minecraft/server/level/ServerPlayer; d
	handleAcceptTeleportPacket (Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V a
	handleBlockEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V a
	handleChat (Lnet/minecraft/server/network/TextFilter$FilteredText;)V a
	handleClientCommand (Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V a
	handleClientInformation (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	handleCommand (Ljava/lang/String;)V a
	handleContainerButtonClick (Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V a
	handleContainerClick (Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V a
	handleCustomCommandSuggestions (Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ServerboundCustomPayloadPacket;)V a
	handleEditBook (Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V a
	handleEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V a
	handleInteract (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V a
	handleJigsawGenerate (Lnet/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ServerboundKeepAlivePacket;)V a
	handleLockDifficulty (Lnet/minecraft/network/protocol/game/ServerboundLockDifficultyPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V a
	handlePaddleBoat (Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V a
	handlePickItem (Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V a
	handlePlayerAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V a
	handlePlayerCommand (Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V a
	handlePlayerInput (Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V a
	handlePong (Lnet/minecraft/network/protocol/game/ServerboundPongPacket;)V a
	handleRecipeBookChangeSettingsPacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket;)V a
	handleRecipeBookSeenRecipePacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket;)V a
	handleRenameItem (Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket;)V a
	handleSeenAdvancements (Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V a
	handleSelectTrade (Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V a
	handleSetBeaconPacket (Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V a
	handleSetCommandBlock (Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V a
	handleSetCommandMinecart (Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V a
	handleSetCreativeModeSlot (Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V a
	handleSetJigsawBlock (Lnet/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket;)V a
	handleSetStructureBlock (Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V a
	handleSignUpdate (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V a
	handleTeleportToEntityPacket (Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V a
	handleUseItem (Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V a
	handleUseItemOn (Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V a
	isPlayerCollidingWithAnythingNew (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/phys/AABB;)Z a
	isSingleplayerOwner ()Z e
	noBlocksAround (Lnet/minecraft/world/entity/Entity;)Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	resetPosition ()V c
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V a
	signBook (Lnet/minecraft/server/network/TextFilter$FilteredText;Ljava/util/List;I)V a
	teleport (DDDFF)V b
	teleport (DDDFFLjava/util/Set;)V a
	teleport (DDDFFLjava/util/Set;Z)V a
	tick ()V b
	updateBookContents (Ljava/util/List;I)V a
	updateBookPages (Ljava/util/List;Ljava/util/function/UnaryOperator;Lnet/minecraft/world/item/ItemStack;)V a
	updateSignText (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;Ljava/util/List;)V a
	wasBlockPlacementAttempt (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/server/network/ServerGamePacketListenerImpl$EntityInteraction aea$a
net/minecraft/server/network/ServerHandshakePacketListenerImpl net/minecraft/server/network/HandshakeListener
	IGNORE_STATUS_REASON a
	connection c
	server b
	getConnection ()Lnet/minecraft/network/Connection; a
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/ServerLoginPacketListenerImpl net/minecraft/server/network/LoginListener
	LOGGER c
	MAX_TICKS_BEFORE_LOGIN d
	RANDOM e
	UNIQUE_THREAD_ID b
	connection a
	delayedAcceptPlayer l
	gameProfile j
	nonce f
	server g
	serverId k
	state h
	tick i
	createFakeProfile (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; a
	disconnect (Lnet/minecraft/network/chat/Component;)V b
	getConnection ()Lnet/minecraft/network/Connection; a
	getUserName ()Ljava/lang/String; d
	handleAcceptedLogin ()V c
	handleCustomQueryPacket (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryPacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ServerboundHelloPacket;)V a
	handleKey (Lnet/minecraft/network/protocol/login/ServerboundKeyPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	placeNewPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	tick ()V b
net/minecraft/server/network/ServerLoginPacketListenerImpl$State net/minecraft/server/network/LoginListener$EnumProtocolState
	$VALUES h
	ACCEPTED g
	AUTHENTICATING c
	DELAY_ACCEPT f
	HELLO a
	KEY b
	NEGOTIATING d
	READY_TO_ACCEPT e
	$values ()[Lnet/minecraft/server/network/ServerLoginPacketListenerImpl$State; a
net/minecraft/server/network/ServerStatusPacketListenerImpl net/minecraft/server/network/PacketStatusListener
	DISCONNECT_REASON a
	connection c
	hasRequestedStatus d
	server b
	getConnection ()Lnet/minecraft/network/Connection; a
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
	handleStatusRequest (Lnet/minecraft/network/protocol/status/ServerboundStatusRequestPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/TextFilter net/minecraft/server/network/ITextFilter
	DUMMY a
	join ()V a
	leave ()V b
	processMessageBundle (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	processStreamMessage (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilter$FilteredText aef$a
	EMPTY a
	filtered c
	raw b
	fullyFiltered (Ljava/lang/String;)Lnet/minecraft/server/network/TextFilter$FilteredText; b
	getFiltered ()Ljava/lang/String; b
	getRaw ()Ljava/lang/String; a
	passThrough (Ljava/lang/String;)Lnet/minecraft/server/network/TextFilter$FilteredText; a
net/minecraft/server/network/TextFilterClient net/minecraft/server/network/TextFilter
	LOGGER a
	THREAD_FACTORY c
	WORKER_COUNT b
	authKey g
	chatEndpoint d
	chatIgnoreStrategy j
	joinEndpoint e
	leaveEndpoint f
	ruleId h
	serverId i
	workerPool k
	createContext (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/network/TextFilter; a
	createFromConfig (Ljava/lang/String;)Lnet/minecraft/server/network/TextFilterClient; a
	drainStream (Ljava/io/InputStream;)V a
	makeRequest (Lcom/google/gson/JsonObject;Ljava/net/URL;)Ljava/net/HttpURLConnection; c
	processJoinOrLeave (Lcom/mojang/authlib/GameProfile;Ljava/net/URL;Ljava/util/concurrent/Executor;)V a
	processRequest (Lcom/google/gson/JsonObject;Ljava/net/URL;)V b
	processRequestResponse (Lcom/google/gson/JsonObject;Ljava/net/URL;)Lcom/google/gson/JsonObject; a
	requestMessageProcessing (Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lnet/minecraft/server/network/TextFilterClient$IgnoreStrategy;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilterClient$IgnoreStrategy aeg$a
	IGNORE_FULLY_FILTERED b
	NEVER_IGNORE a
net/minecraft/server/network/TextFilterClient$PlayerContext aeg$b
	profile c
	streamExecutor d
	join ()V a
	leave ()V b
	processMessageBundle (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	processStreamMessage (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilterClient$RequestFailedException aeg$c
net/minecraft/server/packs/AbstractPackResources net/minecraft/server/packs/ResourcePackAbstract
	LOGGER b
	file a
	getMetadataFromStream (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/io/InputStream;)Ljava/lang/Object; a
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getPathFromLocation (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; c
	getRelativePath (Ljava/io/File;Ljava/io/File;)Ljava/lang/String; a
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Ljava/lang/String;)Z c
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	logWarning (Ljava/lang/String;)V d
net/minecraft/server/packs/FilePackResources net/minecraft/server/packs/ResourcePackFile
	SPLITTER b
	zipFile e
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getOrCreateZipFile ()Ljava/util/zip/ZipFile; b
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Ljava/lang/String;)Z c
net/minecraft/server/packs/FolderPackResources net/minecraft/server/packs/ResourcePackFolder
	BACKSLASH_MATCHER f
	LOGGER b
	ON_WINDOWS e
	getFile (Ljava/lang/String;)Ljava/io/File; e
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Ljava/lang/String;)Z c
	listResources (Ljava/io/File;ILjava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/function/Predicate;)V a
	validatePath (Ljava/io/File;Ljava/lang/String;)Z a
net/minecraft/server/packs/PackResources net/minecraft/server/packs/IResourcePack
	METADATA_EXTENSION c
	PACK_META d
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/server/packs/PackType net/minecraft/server/packs/EnumResourcePackType
	$VALUES e
	CLIENT_RESOURCES a
	SERVER_DATA b
	bridgeType d
	directory c
	$values ()[Lnet/minecraft/server/packs/PackType; b
	getDirectory ()Ljava/lang/String; a
	getVersion (Lcom/mojang/bridge/game/GameVersion;)I a
net/minecraft/server/packs/ResourcePackFileNotFoundException net/minecraft/server/packs/ResourceNotFoundException
net/minecraft/server/packs/VanillaPackResources net/minecraft/server/packs/ResourcePackVanilla
	LOGGER g
	ROOT_DIR_BY_TYPE h
	clientObject b
	generatedDir a
	namespaces f
	packMetadata e
	createPath (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; d
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResourceAsStream (Ljava/lang/String;)Ljava/io/InputStream; a
	getResourceAsStream (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; c
	getResources (Ljava/util/Collection;ILjava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/function/Predicate;)V a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	isResourceUrlValid (Ljava/lang/String;Ljava/net/URL;)Z a
	safeGetPath (Ljava/net/URI;)Ljava/nio/file/Path; a
net/minecraft/server/packs/metadata/MetadataSectionSerializer net/minecraft/server/packs/metadata/ResourcePackMetaParser
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/server/packs/metadata/pack/PackMetadataSection net/minecraft/server/packs/metadata/pack/ResourcePackInfo
	SERIALIZER a
	description b
	packFormat c
	getDescription ()Lnet/minecraft/network/chat/Component; a
	getPackFormat ()I b
net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer net/minecraft/server/packs/metadata/pack/ResourcePackInfoDeserializer
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/server/packs/repository/FolderRepositorySource net/minecraft/server/packs/repository/ResourcePackSourceFolder
	RESOURCEPACK_FILTER a
	folder b
	packSource c
	createSupplier (Ljava/io/File;)Ljava/util/function/Supplier; a
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/repository/Pack net/minecraft/server/packs/repository/ResourcePackLoader
	LOGGER a
	compatibility f
	defaultPosition g
	description e
	fixedPosition i
	id b
	packSource j
	required h
	supplier c
	title d
	create (Ljava/lang/String;ZLjava/util/function/Supplier;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;Lnet/minecraft/server/packs/repository/Pack$Position;Lnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/Pack; a
	getChatLink (Z)Lnet/minecraft/network/chat/Component; a
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; c
	getDefaultPosition ()Lnet/minecraft/server/packs/repository/Pack$Position; h
	getDescription ()Lnet/minecraft/network/chat/Component; b
	getId ()Ljava/lang/String; e
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; i
	getTitle ()Lnet/minecraft/network/chat/Component; a
	isFixedPosition ()Z g
	isRequired ()Z f
	open ()Lnet/minecraft/server/packs/PackResources; d
net/minecraft/server/packs/repository/Pack$PackConstructor aex$a
net/minecraft/server/packs/repository/Pack$Position net/minecraft/server/packs/repository/ResourcePackLoader$Position
	$VALUES c
	BOTTOM b
	TOP a
	$values ()[Lnet/minecraft/server/packs/repository/Pack$Position; b
	insert (Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I a
	opposite ()Lnet/minecraft/server/packs/repository/Pack$Position; a
net/minecraft/server/packs/repository/PackCompatibility net/minecraft/server/packs/repository/EnumResourcePackVersion
	$VALUES f
	COMPATIBLE c
	TOO_NEW b
	TOO_OLD a
	confirmation e
	description d
	$values ()[Lnet/minecraft/server/packs/repository/PackCompatibility; d
	forFormat (ILnet/minecraft/server/packs/PackType;)Lnet/minecraft/server/packs/repository/PackCompatibility; a
	forMetadata (Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection;Lnet/minecraft/server/packs/PackType;)Lnet/minecraft/server/packs/repository/PackCompatibility; a
	getConfirmation ()Lnet/minecraft/network/chat/Component; c
	getDescription ()Lnet/minecraft/network/chat/Component; b
	isCompatible ()Z a
net/minecraft/server/packs/repository/PackRepository net/minecraft/server/packs/repository/ResourcePackRepository
	available b
	constructor d
	selected c
	sources a
	discoverAvailable ()Ljava/util/Map; g
	getAvailableIds ()Ljava/util/Collection; b
	getAvailablePacks ()Ljava/util/Collection; c
	getAvailablePacks (Ljava/util/Collection;)Ljava/util/stream/Stream; c
	getPack (Ljava/lang/String;)Lnet/minecraft/server/packs/repository/Pack; a
	getSelectedIds ()Ljava/util/Collection; d
	getSelectedPacks ()Ljava/util/Collection; e
	isAvailable (Ljava/lang/String;)Z b
	openAllSelected ()Ljava/util/List; f
	rebuildSelected (Ljava/util/Collection;)Ljava/util/List; b
	reload ()V a
	setSelected (Ljava/util/Collection;)V a
net/minecraft/server/packs/repository/RepositorySource net/minecraft/server/packs/repository/ResourcePackSource
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/repository/ServerPacksSource net/minecraft/server/packs/repository/ResourcePackSourceVanilla
	BUILT_IN_METADATA a
	VANILLA_ID b
	vanillaPack c
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/resources/FallbackResourceManager net/minecraft/server/packs/resources/ResourceManagerFallback
	LOGGER b
	fallbacks a
	namespace d
	type c
	add (Lnet/minecraft/server/packs/PackResources;)V a
	getMetadataLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; d
	getNamespaces ()Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	getWrappedResource (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/PackResources;)Ljava/io/InputStream; a
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	isValidLocation (Lnet/minecraft/resources/ResourceLocation;)Z f
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	validateLocation (Lnet/minecraft/resources/ResourceLocation;)V e
net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream afe$a
	closed b
	message a
net/minecraft/server/packs/resources/PreparableReloadListener net/minecraft/server/packs/resources/IReloadListener
	getName ()Ljava/lang/String; c
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier aff$a
	wait (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/ProfiledReloadInstance net/minecraft/server/packs/resources/ReloadableProfiled
	LOGGER d
	total e
	finish (Ljava/util/List;)V a
net/minecraft/server/packs/resources/ProfiledReloadInstance$State afg$a
	name a
	preparationNanos d
	preparationResult b
	reloadNanos e
	reloadResult c
net/minecraft/server/packs/resources/ReloadInstance net/minecraft/server/packs/resources/IReloadable
	checkExceptions ()V d
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isDone ()Z c
net/minecraft/server/packs/resources/ReloadableResourceManager net/minecraft/server/packs/resources/IReloadableResourceManager
	createReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	registerReloadListener (Lnet/minecraft/server/packs/resources/PreparableReloadListener;)V a
	reload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/Resource net/minecraft/server/packs/resources/IResource
	getInputStream ()Ljava/io/InputStream; b
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getMetadata (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getSourceName ()Ljava/lang/String; d
	hasMetadata ()Z c
net/minecraft/server/packs/resources/ResourceManager net/minecraft/server/packs/resources/IResourceManager
	getNamespaces ()Ljava/util/Set; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
net/minecraft/server/packs/resources/ResourceManager$Empty net/minecraft/server/packs/resources/IResourceManager$Empty
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/server/packs/resources/ResourceManager$Empty; c
	getNamespaces ()Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
net/minecraft/server/packs/resources/ResourceManagerReloadListener afl
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener net/minecraft/server/packs/resources/ResourceDataJson
	LOGGER a
	PATH_SUFFIX b
	PATH_SUFFIX_LENGTH c
	directory e
	gson d
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/Map; a
net/minecraft/server/packs/resources/SimplePreparableReloadListener net/minecraft/server/packs/resources/ResourceDataAbstract
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/SimpleReloadInstance net/minecraft/server/packs/resources/Reloadable
	EXTRA_RELOAD_PROGRESS_WEIGHT e
	LISTENER_PROGRESS_WEIGHT f
	PREPARATION_PROGRESS_WEIGHT d
	allDone c
	allPreparations b
	doneTaskCounter l
	finishedReloads j
	listenerCount h
	preparingListeners g
	resourceManager a
	startedReloads i
	startedTaskCounter k
	checkExceptions ()V d
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isDone ()Z c
	of (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/SimpleReloadInstance; a
net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory afp$a
net/minecraft/server/packs/resources/SimpleReloadableResourceManager net/minecraft/server/packs/resources/ResourceManager
	LOGGER a
	listeners c
	namespacedPacks b
	namespaces d
	packs e
	type f
	add (Lnet/minecraft/server/packs/PackResources;)V a
	clear ()V c
	createReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	getNamespaces ()Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	registerReloadListener (Lnet/minecraft/server/packs/resources/PreparableReloadListener;)V a
net/minecraft/server/packs/resources/SimpleReloadableResourceManager$FailingReloadInstance afq$a
	exception a
	failedFuture b
	checkExceptions ()V d
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isDone ()Z c
net/minecraft/server/packs/resources/SimpleReloadableResourceManager$ResourcePackLoadingFailure afq$b
	pack a
	getPack ()Lnet/minecraft/server/packs/PackResources; a
net/minecraft/server/packs/resources/SimpleResource net/minecraft/server/packs/resources/Resource
	location b
	metadata f
	metadataStream d
	resourceStream c
	sourceName a
	triedMetadata e
	getInputStream ()Ljava/io/InputStream; b
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getMetadata (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getSourceName ()Ljava/lang/String; d
	hasMetadata ()Z c
net/minecraft/server/players/BanListEntry net/minecraft/server/players/ExpirableListEntry
	DATE_FORMAT a
	EXPIRES_NEVER b
	created c
	expires e
	reason f
	source d
	getCreated ()Ljava/util/Date; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getExpires ()Ljava/util/Date; c
	getReason ()Ljava/lang/String; d
	getSource ()Ljava/lang/String; b
	hasExpired ()Z f
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/GameProfileCache net/minecraft/server/players/UserCache
	GAMEPROFILES_EXPIRATION_MONTHS c
	GAMEPROFILES_MRU_LIMIT b
	LOGGER a
	executor l
	file j
	gson i
	operationCount k
	profileRepository h
	profilesByName e
	profilesByUUID f
	requests g
	usesAuthentication d
	add (Lcom/mojang/authlib/GameProfile;)V a
	clearExecutor ()V a
	createDateFormat ()Ljava/text/DateFormat; f
	get (Ljava/lang/String;)Ljava/util/Optional; a
	get (Ljava/util/UUID;)Ljava/util/Optional; a
	getAsync (Ljava/lang/String;Ljava/util/function/Consumer;)V a
	getNextOperation ()J e
	getTopMRUProfiles (I)Ljava/util/stream/Stream; a
	load ()Ljava/util/List; b
	lookupGameProfile (Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Ljava/util/Optional; a
	readGameProfile (Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Ljava/util/Optional; a
	safeAdd (Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo;)V a
	save ()V c
	setExecutor (Ljava/util/concurrent/Executor;)V a
	setUsesAuthentication (Z)V a
	usesAuthentication ()Z d
	writeGameProfile (Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement; a
net/minecraft/server/players/GameProfileCache$GameProfileInfo net/minecraft/server/players/UserCache$UserCacheEntry
	expirationDate b
	lastAccess c
	profile a
	getExpirationDate ()Ljava/util/Date; b
	getLastAccess ()J c
	getProfile ()Lcom/mojang/authlib/GameProfile; a
	setLastAccess (J)V a
net/minecraft/server/players/IpBanListEntry net/minecraft/server/players/IpBanEntry
	createIpInfo (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/OldUsersConverter net/minecraft/server/players/NameReferencingFileConverter
	LOGGER e
	OLD_IPBANLIST a
	OLD_OPLIST c
	OLD_USERBANLIST b
	OLD_WHITELIST d
	areOldPlayersConverted (Lnet/minecraft/server/MinecraftServer;)Z f
	areOldUserlistsRemoved ()Z a
	convertIpBanlist (Lnet/minecraft/server/MinecraftServer;)Z b
	convertMobOwnerIfNecessary (Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID; a
	convertOpsList (Lnet/minecraft/server/MinecraftServer;)Z c
	convertPlayers (Lnet/minecraft/server/dedicated/DedicatedServer;)Z a
	convertUserBanlist (Lnet/minecraft/server/MinecraftServer;)Z a
	convertWhiteList (Lnet/minecraft/server/MinecraftServer;)Z d
	ensureDirectoryExists (Ljava/io/File;)V a
	getWorldPlayersDirectory (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; g
	lookupPlayers (Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V a
	parseDate (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; a
	readOldListFormat (Ljava/io/File;Ljava/util/Map;)Ljava/util/List; a
	renameOldFile (Ljava/io/File;)V b
	serverReadyAfterUserconversion (Lnet/minecraft/server/MinecraftServer;)Z e
net/minecraft/server/players/OldUsersConverter$ConversionError net/minecraft/server/players/NameReferencingFileConverter$FileConversionException
net/minecraft/server/players/ServerOpList net/minecraft/server/players/OpList
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z a
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
net/minecraft/server/players/ServerOpListEntry net/minecraft/server/players/OpListEntry
	bypassesPlayerLimit b
	level a
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	getBypassesPlayerLimit ()Z b
	getLevel ()I a
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/StoredUserEntry net/minecraft/server/players/JsonListEntry
	user a
	getUser ()Ljava/lang/Object; g
	hasExpired ()Z f
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/StoredUserList net/minecraft/server/players/JsonList
	GSON b
	LOGGER a
	file c
	map d
	add (Lnet/minecraft/server/players/StoredUserEntry;)V a
	contains (Ljava/lang/Object;)Z d
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	get (Ljava/lang/Object;)Lnet/minecraft/server/players/StoredUserEntry; b
	getEntries ()Ljava/util/Collection; d
	getFile ()Ljava/io/File; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isEmpty ()Z c
	load ()V f
	remove (Ljava/lang/Object;)V c
	remove (Lnet/minecraft/server/players/StoredUserEntry;)V b
	removeExpired ()V g
	save ()V e
net/minecraft/server/players/UserBanList net/minecraft/server/players/GameProfileBanList
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isBanned (Lcom/mojang/authlib/GameProfile;)Z a
net/minecraft/server/players/UserBanListEntry net/minecraft/server/players/GameProfileBanEntry
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/UserWhiteList net/minecraft/server/players/WhiteList
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z a
net/minecraft/server/players/UserWhiteListEntry net/minecraft/server/players/WhiteListEntry
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/rcon/NetworkDataOutputStream net/minecraft/server/rcon/RemoteStatusReply
	dataOutputStream b
	outputStream a
	reset ()V b
	toByteArray ()[B a
	write (I)V a
	writeBytes ([B)V a
	writeFloat (F)V a
	writeInt (I)V b
	writeShort (S)V a
	writeString (Ljava/lang/String;)V a
net/minecraft/server/rcon/PktUtils net/minecraft/server/rcon/StatusChallengeUtils
	HEX_CHAR b
	MAX_PACKET_SIZE a
	intFromByteArray ([BI)I a
	intFromByteArray ([BII)I b
	intFromNetworkByteArray ([BII)I c
	stringFromByteArray ([BII)Ljava/lang/String; a
	toHexString (B)Ljava/lang/String; a
net/minecraft/server/rcon/RconConsoleSource net/minecraft/server/rcon/RemoteControlCommandListener
	RCON b
	RCON_COMPONENT c
	buffer d
	server e
	acceptsFailure ()Z j_
	acceptsSuccess ()Z i_
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; g
	getCommandResponse ()Ljava/lang/String; f
	prepareForCommand ()V e
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	shouldInformAdmins ()Z F_
net/minecraft/server/rcon/thread/GenericThread net/minecraft/server/rcon/thread/RemoteConnectionThread
	LOGGER d
	MAX_STOP_WAIT f
	UNIQUE_THREAD_ID e
	name b
	running a
	thread c
	isRunning ()Z c
	start ()Z a
	stop ()V b
net/minecraft/server/rcon/thread/QueryThreadGs4 net/minecraft/server/rcon/thread/RemoteStatusListener
	CHALLENGE_CHECK_INTERVAL g
	GAME_ID f
	GAME_TYPE e
	LOGGER d
	RESPONSE_CACHE_TIME h
	buffer p
	hostIp q
	lastChallengeCheck i
	lastRulesResponse u
	maxPlayers l
	port j
	rulesResponse t
	serverInterface v
	serverIp r
	serverName m
	serverPort k
	socket o
	validChallenges s
	worldName n
	buildRuleResponse (Ljava/net/DatagramPacket;)[B b
	create (Lnet/minecraft/server/ServerInterface;)Lnet/minecraft/server/rcon/thread/QueryThreadGs4; a
	getIdentBytes (Ljava/net/SocketAddress;)[B a
	initSocket ()Z e
	processPacket (Ljava/net/DatagramPacket;)Z a
	pruneChallenges ()V d
	recoverSocketError (Ljava/lang/Exception;)V a
	sendChallenge (Ljava/net/DatagramPacket;)V d
	sendTo ([BLjava/net/DatagramPacket;)V a
	start ()Z a
	validChallenge (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; c
net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge net/minecraft/server/rcon/thread/RemoteStatusListener$RemoteStatusChallenge
	challenge b
	challengeBytes d
	ident e
	identBytes c
	time a
	before (J)Ljava/lang/Boolean; a
	getChallenge ()I a
	getChallengeBytes ()[B b
	getIdent ()Ljava/lang/String; d
	getIdentBytes ()[B c
net/minecraft/server/rcon/thread/RconClient net/minecraft/server/rcon/thread/RemoteControlSession
	LOGGER d
	SERVERDATA_AUTH e
	SERVERDATA_AUTH_FAILURE i
	SERVERDATA_AUTH_RESPONSE h
	SERVERDATA_EXECCOMMAND f
	SERVERDATA_RESPONSE_VALUE g
	authed j
	buf l
	client k
	rconPassword m
	serverInterface n
	closeSocket ()V e
	send (IILjava/lang/String;)V a
	sendAuthFailure ()V d
	sendCmdResponse (ILjava/lang/String;)V a
	stop ()V b
net/minecraft/server/rcon/thread/RconThread net/minecraft/server/rcon/thread/RemoteControlListener
	LOGGER d
	clients g
	rconPassword f
	serverInterface h
	socket e
	clearClients ()V d
	closeSocket (Ljava/net/ServerSocket;)V a
	create (Lnet/minecraft/server/ServerInterface;)Lnet/minecraft/server/rcon/thread/RconThread; a
	stop ()V b
net/minecraft/sounds/SoundEvent net/minecraft/sounds/SoundEffect
	CODEC a
	location b
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/sounds/SoundEvents net/minecraft/sounds/SoundEffects
	AMBIENT_BASALT_DELTAS_ADDITIONS b
	AMBIENT_BASALT_DELTAS_LOOP c
	AMBIENT_BASALT_DELTAS_MOOD d
	AMBIENT_CAVE a
	AMBIENT_CRIMSON_FOREST_ADDITIONS e
	AMBIENT_CRIMSON_FOREST_LOOP f
	AMBIENT_CRIMSON_FOREST_MOOD g
	AMBIENT_NETHER_WASTES_ADDITIONS h
	AMBIENT_NETHER_WASTES_LOOP i
	AMBIENT_NETHER_WASTES_MOOD j
	AMBIENT_SOUL_SAND_VALLEY_ADDITIONS k
	AMBIENT_SOUL_SAND_VALLEY_LOOP l
	AMBIENT_SOUL_SAND_VALLEY_MOOD m
	AMBIENT_UNDERWATER_ENTER q
	AMBIENT_UNDERWATER_EXIT r
	AMBIENT_UNDERWATER_LOOP s
	AMBIENT_UNDERWATER_LOOP_ADDITIONS t
	AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE u
	AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE v
	AMBIENT_WARPED_FOREST_ADDITIONS n
	AMBIENT_WARPED_FOREST_LOOP o
	AMBIENT_WARPED_FOREST_MOOD p
	AMETHYST_BLOCK_BREAK w
	AMETHYST_BLOCK_CHIME x
	AMETHYST_BLOCK_FALL y
	AMETHYST_BLOCK_HIT z
	AMETHYST_BLOCK_PLACE A
	AMETHYST_BLOCK_STEP B
	AMETHYST_CLUSTER_BREAK C
	AMETHYST_CLUSTER_FALL D
	AMETHYST_CLUSTER_HIT E
	AMETHYST_CLUSTER_PLACE F
	AMETHYST_CLUSTER_STEP G
	ANCIENT_DEBRIS_BREAK H
	ANCIENT_DEBRIS_FALL L
	ANCIENT_DEBRIS_HIT K
	ANCIENT_DEBRIS_PLACE J
	ANCIENT_DEBRIS_STEP I
	ANVIL_BREAK M
	ANVIL_DESTROY N
	ANVIL_FALL O
	ANVIL_HIT P
	ANVIL_LAND Q
	ANVIL_PLACE R
	ANVIL_STEP S
	ANVIL_USE T
	ARMOR_EQUIP_CHAIN U
	ARMOR_EQUIP_DIAMOND V
	ARMOR_EQUIP_ELYTRA W
	ARMOR_EQUIP_GENERIC X
	ARMOR_EQUIP_GOLD Y
	ARMOR_EQUIP_IRON Z
	ARMOR_EQUIP_LEATHER aa
	ARMOR_EQUIP_NETHERITE ab
	ARMOR_EQUIP_TURTLE ac
	ARMOR_STAND_BREAK ad
	ARMOR_STAND_FALL ae
	ARMOR_STAND_HIT af
	ARMOR_STAND_PLACE ag
	ARROW_HIT ah
	ARROW_HIT_PLAYER ai
	ARROW_SHOOT aj
	AXE_SCRAPE al
	AXE_STRIP ak
	AXE_WAX_OFF am
	AXOLOTL_ATTACK an
	AXOLOTL_DEATH ao
	AXOLOTL_HURT ap
	AXOLOTL_IDLE_AIR aq
	AXOLOTL_IDLE_WATER ar
	AXOLOTL_SPLASH as
	AXOLOTL_SWIM at
	AZALEA_BREAK au
	AZALEA_FALL av
	AZALEA_HIT aw
	AZALEA_LEAVES_BREAK az
	AZALEA_LEAVES_FALL aA
	AZALEA_LEAVES_HIT aB
	AZALEA_LEAVES_PLACE aC
	AZALEA_LEAVES_STEP aD
	AZALEA_PLACE ax
	AZALEA_STEP ay
	BAMBOO_BREAK aE
	BAMBOO_FALL aF
	BAMBOO_HIT aG
	BAMBOO_PLACE aH
	BAMBOO_SAPLING_BREAK aJ
	BAMBOO_SAPLING_HIT aK
	BAMBOO_SAPLING_PLACE aL
	BAMBOO_STEP aI
	BARREL_CLOSE aM
	BARREL_OPEN aN
	BASALT_BREAK aO
	BASALT_FALL aS
	BASALT_HIT aR
	BASALT_PLACE aQ
	BASALT_STEP aP
	BAT_AMBIENT aT
	BAT_DEATH aU
	BAT_HURT aV
	BAT_LOOP aW
	BAT_TAKEOFF aX
	BEACON_ACTIVATE aY
	BEACON_AMBIENT aZ
	BEACON_DEACTIVATE ba
	BEACON_POWER_SELECT bb
	BEEHIVE_DRIP bi
	BEEHIVE_ENTER bj
	BEEHIVE_EXIT bk
	BEEHIVE_SHEAR bl
	BEEHIVE_WORK bm
	BEE_DEATH bc
	BEE_HURT bd
	BEE_LOOP bf
	BEE_LOOP_AGGRESSIVE be
	BEE_POLLINATE bh
	BEE_STING bg
	BELL_BLOCK bn
	BELL_RESONATE bo
	BIG_DRIPLEAF_BREAK bp
	BIG_DRIPLEAF_FALL bq
	BIG_DRIPLEAF_HIT br
	BIG_DRIPLEAF_PLACE bs
	BIG_DRIPLEAF_STEP bt
	BIG_DRIPLEAF_TILT_DOWN eM
	BIG_DRIPLEAF_TILT_UP eN
	BLASTFURNACE_FIRE_CRACKLE bJ
	BLAZE_AMBIENT bu
	BLAZE_BURN bv
	BLAZE_DEATH bw
	BLAZE_HURT bx
	BLAZE_SHOOT by
	BOAT_PADDLE_LAND bz
	BOAT_PADDLE_WATER bA
	BONE_BLOCK_BREAK bB
	BONE_BLOCK_FALL bC
	BONE_BLOCK_HIT bD
	BONE_BLOCK_PLACE bE
	BONE_BLOCK_STEP bF
	BONE_MEAL_USE bG
	BOOK_PAGE_TURN bH
	BOOK_PUT bI
	BOTTLE_EMPTY bK
	BOTTLE_FILL bL
	BOTTLE_FILL_DRAGONBREATH bM
	BREWING_STAND_BREW bN
	BUBBLE_COLUMN_BUBBLE_POP bO
	BUBBLE_COLUMN_UPWARDS_AMBIENT bP
	BUBBLE_COLUMN_UPWARDS_INSIDE bQ
	BUBBLE_COLUMN_WHIRLPOOL_AMBIENT bR
	BUBBLE_COLUMN_WHIRLPOOL_INSIDE bS
	BUCKET_EMPTY bT
	BUCKET_EMPTY_AXOLOTL bU
	BUCKET_EMPTY_FISH bV
	BUCKET_EMPTY_LAVA bW
	BUCKET_EMPTY_POWDER_SNOW bX
	BUCKET_FILL bY
	BUCKET_FILL_AXOLOTL bZ
	BUCKET_FILL_FISH ca
	BUCKET_FILL_LAVA cb
	BUCKET_FILL_POWDER_SNOW cc
	BUNDLE_DROP_CONTENTS cd
	BUNDLE_INSERT ce
	BUNDLE_REMOVE_ONE cf
	CAKE_ADD_CANDLE cg
	CALCITE_BREAK ch
	CALCITE_FALL cl
	CALCITE_HIT ck
	CALCITE_PLACE cj
	CALCITE_STEP ci
	CAMPFIRE_CRACKLE cm
	CANDLE_AMBIENT cn
	CANDLE_BREAK co
	CANDLE_EXTINGUISH cp
	CANDLE_FALL cq
	CANDLE_HIT cr
	CANDLE_PLACE cs
	CANDLE_STEP ct
	CAT_AMBIENT cu
	CAT_BEG_FOR_FOOD cz
	CAT_DEATH cw
	CAT_EAT cx
	CAT_HISS cy
	CAT_HURT cA
	CAT_PURR cB
	CAT_PURREOW cC
	CAT_STRAY_AMBIENT cv
	CAVE_VINES_BREAK cD
	CAVE_VINES_FALL cE
	CAVE_VINES_HIT cF
	CAVE_VINES_PICK_BERRIES cI
	CAVE_VINES_PLACE cG
	CAVE_VINES_STEP cH
	CHAIN_BREAK cJ
	CHAIN_FALL cK
	CHAIN_HIT cL
	CHAIN_PLACE cM
	CHAIN_STEP cN
	CHEST_CLOSE cO
	CHEST_LOCKED cP
	CHEST_OPEN cQ
	CHICKEN_AMBIENT cR
	CHICKEN_DEATH cS
	CHICKEN_EGG cT
	CHICKEN_HURT cU
	CHICKEN_STEP cV
	CHORUS_FLOWER_DEATH cW
	CHORUS_FLOWER_GROW cX
	CHORUS_FRUIT_TELEPORT cY
	COD_AMBIENT cZ
	COD_DEATH da
	COD_FLOP db
	COD_HURT dc
	COMPARATOR_CLICK dd
	COMPOSTER_EMPTY de
	COMPOSTER_FILL df
	COMPOSTER_FILL_SUCCESS dg
	COMPOSTER_READY dh
	CONDUIT_ACTIVATE di
	CONDUIT_AMBIENT dj
	CONDUIT_AMBIENT_SHORT dk
	CONDUIT_ATTACK_TARGET dl
	CONDUIT_DEACTIVATE dm
	COPPER_BREAK dn
	COPPER_FALL dr
	COPPER_HIT dq
	COPPER_PLACE dp
	COPPER_STEP do
	CORAL_BLOCK_BREAK ds
	CORAL_BLOCK_FALL dt
	CORAL_BLOCK_HIT du
	CORAL_BLOCK_PLACE dv
	CORAL_BLOCK_STEP dw
	COW_AMBIENT dx
	COW_DEATH dy
	COW_HURT dz
	COW_MILK dA
	COW_STEP dB
	CREEPER_DEATH dC
	CREEPER_HURT dD
	CREEPER_PRIMED dE
	CROP_BREAK dF
	CROP_PLANTED dG
	CROSSBOW_HIT dH
	CROSSBOW_LOADING_END dI
	CROSSBOW_LOADING_MIDDLE dJ
	CROSSBOW_LOADING_START dK
	CROSSBOW_QUICK_CHARGE_1 dL
	CROSSBOW_QUICK_CHARGE_2 dM
	CROSSBOW_QUICK_CHARGE_3 dN
	CROSSBOW_SHOOT dO
	DEEPSLATE_BREAK dU
	DEEPSLATE_BRICKS_BREAK dP
	DEEPSLATE_BRICKS_FALL dQ
	DEEPSLATE_BRICKS_HIT dR
	DEEPSLATE_BRICKS_PLACE dS
	DEEPSLATE_BRICKS_STEP dT
	DEEPSLATE_FALL dV
	DEEPSLATE_HIT dW
	DEEPSLATE_PLACE dX
	DEEPSLATE_STEP dY
	DEEPSLATE_TILES_BREAK dZ
	DEEPSLATE_TILES_FALL ea
	DEEPSLATE_TILES_HIT eb
	DEEPSLATE_TILES_PLACE ec
	DEEPSLATE_TILES_STEP ed
	DISPENSER_DISPENSE ee
	DISPENSER_FAIL ef
	DISPENSER_LAUNCH eg
	DOLPHIN_AMBIENT eh
	DOLPHIN_AMBIENT_WATER ei
	DOLPHIN_ATTACK ej
	DOLPHIN_DEATH ek
	DOLPHIN_EAT el
	DOLPHIN_HURT em
	DOLPHIN_JUMP en
	DOLPHIN_PLAY eo
	DOLPHIN_SPLASH ep
	DOLPHIN_SWIM eq
	DONKEY_AMBIENT er
	DONKEY_ANGRY es
	DONKEY_CHEST et
	DONKEY_DEATH eu
	DONKEY_EAT ev
	DONKEY_HURT ew
	DRAGON_FIREBALL_EXPLODE fn
	DRIPSTONE_BLOCK_BREAK ex
	DRIPSTONE_BLOCK_FALL eB
	DRIPSTONE_BLOCK_HIT eA
	DRIPSTONE_BLOCK_PLACE ez
	DRIPSTONE_BLOCK_STEP ey
	DROWNED_AMBIENT eO
	DROWNED_AMBIENT_WATER eP
	DROWNED_DEATH eQ
	DROWNED_DEATH_WATER eR
	DROWNED_HURT eS
	DROWNED_HURT_WATER eT
	DROWNED_SHOOT eU
	DROWNED_STEP eV
	DROWNED_SWIM eW
	DYE_USE eX
	EGG_THROW eY
	ELDER_GUARDIAN_AMBIENT eZ
	ELDER_GUARDIAN_AMBIENT_LAND fa
	ELDER_GUARDIAN_CURSE fb
	ELDER_GUARDIAN_DEATH fc
	ELDER_GUARDIAN_DEATH_LAND fd
	ELDER_GUARDIAN_FLOP fe
	ELDER_GUARDIAN_HURT ff
	ELDER_GUARDIAN_HURT_LAND fg
	ELYTRA_FLYING fh
	ENCHANTMENT_TABLE_USE fi
	ENDERMAN_AMBIENT fu
	ENDERMAN_DEATH fv
	ENDERMAN_HURT fw
	ENDERMAN_SCREAM fx
	ENDERMAN_STARE fy
	ENDERMAN_TELEPORT fz
	ENDERMITE_AMBIENT fA
	ENDERMITE_DEATH fB
	ENDERMITE_HURT fC
	ENDERMITE_STEP fD
	ENDER_CHEST_CLOSE fj
	ENDER_CHEST_OPEN fk
	ENDER_DRAGON_AMBIENT fl
	ENDER_DRAGON_DEATH fm
	ENDER_DRAGON_FLAP fo
	ENDER_DRAGON_GROWL fp
	ENDER_DRAGON_HURT fq
	ENDER_DRAGON_SHOOT fr
	ENDER_EYE_DEATH fs
	ENDER_EYE_LAUNCH ft
	ENDER_PEARL_THROW fE
	END_GATEWAY_SPAWN fF
	END_PORTAL_FRAME_FILL fG
	END_PORTAL_SPAWN fH
	EVOKER_AMBIENT fI
	EVOKER_CAST_SPELL fJ
	EVOKER_CELEBRATE fK
	EVOKER_DEATH fL
	EVOKER_FANGS_ATTACK fM
	EVOKER_HURT fN
	EVOKER_PREPARE_ATTACK fO
	EVOKER_PREPARE_SUMMON fP
	EVOKER_PREPARE_WOLOLO fQ
	EXPERIENCE_BOTTLE_THROW fR
	EXPERIENCE_ORB_PICKUP fS
	FENCE_GATE_CLOSE fT
	FENCE_GATE_OPEN fU
	FIRECHARGE_USE fV
	FIREWORK_ROCKET_BLAST fW
	FIREWORK_ROCKET_BLAST_FAR fX
	FIREWORK_ROCKET_LARGE_BLAST fY
	FIREWORK_ROCKET_LARGE_BLAST_FAR fZ
	FIREWORK_ROCKET_LAUNCH ga
	FIREWORK_ROCKET_SHOOT gb
	FIREWORK_ROCKET_TWINKLE gc
	FIREWORK_ROCKET_TWINKLE_FAR gd
	FIRE_AMBIENT ge
	FIRE_EXTINGUISH gf
	FISHING_BOBBER_RETRIEVE gh
	FISHING_BOBBER_SPLASH gi
	FISHING_BOBBER_THROW gj
	FISH_SWIM gg
	FLINTANDSTEEL_USE gk
	FLOWERING_AZALEA_BREAK gl
	FLOWERING_AZALEA_FALL gm
	FLOWERING_AZALEA_HIT gn
	FLOWERING_AZALEA_PLACE go
	FLOWERING_AZALEA_STEP gp
	FOX_AGGRO gq
	FOX_AMBIENT gr
	FOX_BITE gs
	FOX_DEATH gt
	FOX_EAT gu
	FOX_HURT gv
	FOX_SCREECH gw
	FOX_SLEEP gx
	FOX_SNIFF gy
	FOX_SPIT gz
	FOX_TELEPORT gA
	FUNGUS_BREAK lY
	FUNGUS_FALL mc
	FUNGUS_HIT mb
	FUNGUS_PLACE ma
	FUNGUS_STEP lZ
	FURNACE_FIRE_CRACKLE gG
	GENERIC_BIG_FALL gH
	GENERIC_BURN gI
	GENERIC_DEATH gJ
	GENERIC_DRINK gK
	GENERIC_EAT gL
	GENERIC_EXPLODE gM
	GENERIC_EXTINGUISH_FIRE gN
	GENERIC_HURT gO
	GENERIC_SMALL_FALL gP
	GENERIC_SPLASH gQ
	GENERIC_SWIM gR
	GHAST_AMBIENT gS
	GHAST_DEATH gT
	GHAST_HURT gU
	GHAST_SCREAM gV
	GHAST_SHOOT gW
	GHAST_WARN gX
	GILDED_BLACKSTONE_BREAK gY
	GILDED_BLACKSTONE_FALL gZ
	GILDED_BLACKSTONE_HIT ha
	GILDED_BLACKSTONE_PLACE hb
	GILDED_BLACKSTONE_STEP hc
	GLASS_BREAK hd
	GLASS_FALL he
	GLASS_HIT hf
	GLASS_PLACE hg
	GLASS_STEP hh
	GLOW_INK_SAC_USE hi
	GLOW_ITEM_FRAME_ADD_ITEM hj
	GLOW_ITEM_FRAME_BREAK hk
	GLOW_ITEM_FRAME_PLACE hl
	GLOW_ITEM_FRAME_REMOVE_ITEM hm
	GLOW_ITEM_FRAME_ROTATE_ITEM hn
	GLOW_SQUID_AMBIENT ho
	GLOW_SQUID_DEATH hp
	GLOW_SQUID_HURT hq
	GLOW_SQUID_SQUIRT hr
	GOAT_AMBIENT hs
	GOAT_DEATH ht
	GOAT_EAT hu
	GOAT_HURT hv
	GOAT_LONG_JUMP hw
	GOAT_MILK hx
	GOAT_PREPARE_RAM hy
	GOAT_RAM_IMPACT hz
	GOAT_SCREAMING_AMBIENT hA
	GOAT_SCREAMING_DEATH hB
	GOAT_SCREAMING_EAT hC
	GOAT_SCREAMING_HURT hD
	GOAT_SCREAMING_LONG_JUMP hE
	GOAT_SCREAMING_MILK hF
	GOAT_SCREAMING_PREPARE_RAM hG
	GOAT_SCREAMING_RAM_IMPACT hH
	GOAT_STEP hI
	GRASS_BREAK hJ
	GRASS_FALL hK
	GRASS_HIT hL
	GRASS_PLACE hM
	GRASS_STEP hN
	GRAVEL_BREAK hO
	GRAVEL_FALL hP
	GRAVEL_HIT hQ
	GRAVEL_PLACE hR
	GRAVEL_STEP hS
	GRINDSTONE_USE hT
	GROWING_PLANT_CROP hU
	GUARDIAN_AMBIENT hV
	GUARDIAN_AMBIENT_LAND hW
	GUARDIAN_ATTACK hX
	GUARDIAN_DEATH hY
	GUARDIAN_DEATH_LAND hZ
	GUARDIAN_FLOP ia
	GUARDIAN_HURT ib
	GUARDIAN_HURT_LAND ic
	HANGING_ROOTS_BREAK id
	HANGING_ROOTS_FALL ie
	HANGING_ROOTS_HIT if
	HANGING_ROOTS_PLACE ig
	HANGING_ROOTS_STEP ih
	HOE_TILL ii
	HOGLIN_AMBIENT ij
	HOGLIN_ANGRY ik
	HOGLIN_ATTACK il
	HOGLIN_CONVERTED_TO_ZOMBIFIED im
	HOGLIN_DEATH in
	HOGLIN_HURT io
	HOGLIN_RETREAT ip
	HOGLIN_STEP iq
	HONEYCOMB_WAX_ON ix
	HONEY_BLOCK_BREAK ir
	HONEY_BLOCK_FALL is
	HONEY_BLOCK_HIT it
	HONEY_BLOCK_PLACE iu
	HONEY_BLOCK_SLIDE iv
	HONEY_BLOCK_STEP iw
	HONEY_DRINK iy
	HORSE_AMBIENT iz
	HORSE_ANGRY iA
	HORSE_ARMOR iB
	HORSE_BREATHE iC
	HORSE_DEATH iD
	HORSE_EAT iE
	HORSE_GALLOP iF
	HORSE_HURT iG
	HORSE_JUMP iH
	HORSE_LAND iI
	HORSE_SADDLE iJ
	HORSE_STEP iK
	HORSE_STEP_WOOD iL
	HOSTILE_BIG_FALL iM
	HOSTILE_DEATH iN
	HOSTILE_HURT iO
	HOSTILE_SMALL_FALL iP
	HOSTILE_SPLASH iQ
	HOSTILE_SWIM iR
	HUSK_AMBIENT iS
	HUSK_CONVERTED_TO_ZOMBIE iT
	HUSK_DEATH iU
	HUSK_HURT iV
	HUSK_STEP iW
	ILLUSIONER_AMBIENT iX
	ILLUSIONER_CAST_SPELL iY
	ILLUSIONER_DEATH iZ
	ILLUSIONER_HURT ja
	ILLUSIONER_MIRROR_MOVE jb
	ILLUSIONER_PREPARE_BLINDNESS jc
	ILLUSIONER_PREPARE_MIRROR jd
	INK_SAC_USE je
	IRON_DOOR_CLOSE jf
	IRON_DOOR_OPEN jg
	IRON_GOLEM_ATTACK jh
	IRON_GOLEM_DAMAGE ji
	IRON_GOLEM_DEATH jj
	IRON_GOLEM_HURT jk
	IRON_GOLEM_REPAIR jl
	IRON_GOLEM_STEP jm
	IRON_TRAPDOOR_CLOSE jn
	IRON_TRAPDOOR_OPEN jo
	ITEM_BREAK ju
	ITEM_FRAME_ADD_ITEM jp
	ITEM_FRAME_BREAK jq
	ITEM_FRAME_PLACE jr
	ITEM_FRAME_REMOVE_ITEM js
	ITEM_FRAME_ROTATE_ITEM jt
	ITEM_PICKUP jv
	LADDER_BREAK jw
	LADDER_FALL jx
	LADDER_HIT jy
	LADDER_PLACE jz
	LADDER_STEP jA
	LANTERN_BREAK jB
	LANTERN_FALL jC
	LANTERN_HIT jD
	LANTERN_PLACE jE
	LANTERN_STEP jF
	LARGE_AMETHYST_BUD_BREAK jG
	LARGE_AMETHYST_BUD_PLACE jH
	LAVA_AMBIENT jI
	LAVA_EXTINGUISH jJ
	LAVA_POP jK
	LEASH_KNOT_BREAK jL
	LEASH_KNOT_PLACE jM
	LEVER_CLICK jN
	LIGHTNING_BOLT_IMPACT jO
	LIGHTNING_BOLT_THUNDER jP
	LILY_PAD_PLACE uu
	LINGERING_POTION_THROW jQ
	LLAMA_AMBIENT jR
	LLAMA_ANGRY jS
	LLAMA_CHEST jT
	LLAMA_DEATH jU
	LLAMA_EAT jV
	LLAMA_HURT jW
	LLAMA_SPIT jX
	LLAMA_STEP jY
	LLAMA_SWAG jZ
	LODESTONE_BREAK kb
	LODESTONE_COMPASS_LOCK kg
	LODESTONE_FALL kf
	LODESTONE_HIT ke
	LODESTONE_PLACE kd
	LODESTONE_STEP kc
	MAGMA_CUBE_DEATH kh
	MAGMA_CUBE_DEATH_SMALL ka
	MAGMA_CUBE_HURT ki
	MAGMA_CUBE_HURT_SMALL kj
	MAGMA_CUBE_JUMP kk
	MAGMA_CUBE_SQUISH kl
	MAGMA_CUBE_SQUISH_SMALL km
	MEDIUM_AMETHYST_BUD_BREAK kn
	MEDIUM_AMETHYST_BUD_PLACE ko
	METAL_BREAK kp
	METAL_FALL kq
	METAL_HIT kr
	METAL_PLACE ks
	METAL_PRESSURE_PLATE_CLICK_OFF kt
	METAL_PRESSURE_PLATE_CLICK_ON ku
	METAL_STEP kv
	MINECART_INSIDE kx
	MINECART_INSIDE_UNDERWATER kw
	MINECART_RIDING ky
	MOOSHROOM_CONVERT kz
	MOOSHROOM_EAT kA
	MOOSHROOM_MILK kB
	MOOSHROOM_MILK_SUSPICIOUSLY kC
	MOOSHROOM_SHEAR kD
	MOSS_BREAK kJ
	MOSS_CARPET_BREAK kE
	MOSS_CARPET_FALL kF
	MOSS_CARPET_HIT kG
	MOSS_CARPET_PLACE kH
	MOSS_CARPET_STEP kI
	MOSS_FALL kK
	MOSS_HIT kL
	MOSS_PLACE kM
	MOSS_STEP kN
	MULE_AMBIENT kO
	MULE_ANGRY kP
	MULE_CHEST kQ
	MULE_DEATH kR
	MULE_EAT kS
	MULE_HURT kT
	MUSIC_BIOME_BASALT_DELTAS lo
	MUSIC_BIOME_CRIMSON_FOREST lp
	MUSIC_BIOME_DRIPSTONE_CAVES lq
	MUSIC_BIOME_FROZEN_PEAKS lw
	MUSIC_BIOME_GROVE lr
	MUSIC_BIOME_JAGGED_PEAKS ls
	MUSIC_BIOME_LUSH_CAVES lt
	MUSIC_BIOME_MEADOW lu
	MUSIC_BIOME_NETHER_WASTES lv
	MUSIC_BIOME_SNOWY_SLOPES lx
	MUSIC_BIOME_SOUL_SAND_VALLEY ly
	MUSIC_BIOME_STONY_PEAKS lz
	MUSIC_BIOME_WARPED_FOREST lA
	MUSIC_CREATIVE kU
	MUSIC_CREDITS kV
	MUSIC_DISC_11 kW
	MUSIC_DISC_13 kX
	MUSIC_DISC_BLOCKS kY
	MUSIC_DISC_CAT kZ
	MUSIC_DISC_CHIRP la
	MUSIC_DISC_FAR lb
	MUSIC_DISC_MALL lc
	MUSIC_DISC_MELLOHI ld
	MUSIC_DISC_OTHERSIDE lj
	MUSIC_DISC_PIGSTEP le
	MUSIC_DISC_STAL lf
	MUSIC_DISC_STRAD lg
	MUSIC_DISC_WAIT lh
	MUSIC_DISC_WARD li
	MUSIC_DRAGON lk
	MUSIC_END ll
	MUSIC_GAME lm
	MUSIC_MENU ln
	MUSIC_UNDER_WATER lB
	NETHERITE_BLOCK_BREAK mn
	NETHERITE_BLOCK_FALL mr
	NETHERITE_BLOCK_HIT mq
	NETHERITE_BLOCK_PLACE mp
	NETHERITE_BLOCK_STEP mo
	NETHERRACK_BREAK ms
	NETHERRACK_FALL mw
	NETHERRACK_HIT mv
	NETHERRACK_PLACE mu
	NETHERRACK_STEP mt
	NETHER_BRICKS_BREAK lC
	NETHER_BRICKS_FALL lG
	NETHER_BRICKS_HIT lF
	NETHER_BRICKS_PLACE lE
	NETHER_BRICKS_STEP lD
	NETHER_GOLD_ORE_BREAK pF
	NETHER_GOLD_ORE_FALL pG
	NETHER_GOLD_ORE_HIT pH
	NETHER_GOLD_ORE_PLACE pI
	NETHER_GOLD_ORE_STEP pJ
	NETHER_ORE_BREAK pK
	NETHER_ORE_FALL pL
	NETHER_ORE_HIT pM
	NETHER_ORE_PLACE pN
	NETHER_ORE_STEP pO
	NETHER_SPROUTS_BREAK lT
	NETHER_SPROUTS_FALL lX
	NETHER_SPROUTS_HIT lW
	NETHER_SPROUTS_PLACE lV
	NETHER_SPROUTS_STEP lU
	NETHER_WART_BREAK lH
	NETHER_WART_PLANTED lI
	NOTE_BLOCK_BANJO mM
	NOTE_BLOCK_BASEDRUM mx
	NOTE_BLOCK_BASS my
	NOTE_BLOCK_BELL mz
	NOTE_BLOCK_BIT mL
	NOTE_BLOCK_CHIME mA
	NOTE_BLOCK_COW_BELL mJ
	NOTE_BLOCK_DIDGERIDOO mK
	NOTE_BLOCK_FLUTE mB
	NOTE_BLOCK_GUITAR mC
	NOTE_BLOCK_HARP mD
	NOTE_BLOCK_HAT mE
	NOTE_BLOCK_IRON_XYLOPHONE mI
	NOTE_BLOCK_PLING mF
	NOTE_BLOCK_SNARE mG
	NOTE_BLOCK_XYLOPHONE mH
	NYLIUM_BREAK lO
	NYLIUM_FALL lS
	NYLIUM_HIT lR
	NYLIUM_PLACE lQ
	NYLIUM_STEP lP
	OCELOT_AMBIENT mO
	OCELOT_DEATH mP
	OCELOT_HURT mN
	PAINTING_BREAK mQ
	PAINTING_PLACE mR
	PANDA_AGGRESSIVE_AMBIENT mZ
	PANDA_AMBIENT mU
	PANDA_BITE nc
	PANDA_CANT_BREED mY
	PANDA_DEATH mV
	PANDA_EAT mW
	PANDA_HURT nb
	PANDA_PRE_SNEEZE mS
	PANDA_SNEEZE mT
	PANDA_STEP mX
	PANDA_WORRIED_AMBIENT na
	PARROT_AMBIENT nd
	PARROT_DEATH ne
	PARROT_EAT nf
	PARROT_FLY ng
	PARROT_HURT nh
	PARROT_IMITATE_BLAZE ni
	PARROT_IMITATE_CREEPER nj
	PARROT_IMITATE_DROWNED nk
	PARROT_IMITATE_ELDER_GUARDIAN nl
	PARROT_IMITATE_ENDERMITE nn
	PARROT_IMITATE_ENDER_DRAGON nm
	PARROT_IMITATE_EVOKER no
	PARROT_IMITATE_GHAST np
	PARROT_IMITATE_GUARDIAN nq
	PARROT_IMITATE_HOGLIN nr
	PARROT_IMITATE_HUSK ns
	PARROT_IMITATE_ILLUSIONER nt
	PARROT_IMITATE_MAGMA_CUBE nu
	PARROT_IMITATE_PHANTOM nv
	PARROT_IMITATE_PIGLIN nw
	PARROT_IMITATE_PIGLIN_BRUTE nx
	PARROT_IMITATE_PILLAGER ny
	PARROT_IMITATE_RAVAGER nz
	PARROT_IMITATE_SHULKER nA
	PARROT_IMITATE_SILVERFISH nB
	PARROT_IMITATE_SKELETON nC
	PARROT_IMITATE_SLIME nD
	PARROT_IMITATE_SPIDER nE
	PARROT_IMITATE_STRAY nF
	PARROT_IMITATE_VEX nG
	PARROT_IMITATE_VINDICATOR nH
	PARROT_IMITATE_WITCH nI
	PARROT_IMITATE_WITHER nJ
	PARROT_IMITATE_WITHER_SKELETON nK
	PARROT_IMITATE_ZOGLIN nL
	PARROT_IMITATE_ZOMBIE nM
	PARROT_IMITATE_ZOMBIE_VILLAGER nN
	PARROT_STEP nO
	PHANTOM_AMBIENT nP
	PHANTOM_BITE nQ
	PHANTOM_DEATH nR
	PHANTOM_FLAP nS
	PHANTOM_HURT nT
	PHANTOM_SWOOP nU
	PIGLIN_ADMIRING_ITEM oa
	PIGLIN_AMBIENT ob
	PIGLIN_ANGRY oc
	PIGLIN_BRUTE_AMBIENT ok
	PIGLIN_BRUTE_ANGRY ol
	PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED op
	PIGLIN_BRUTE_DEATH om
	PIGLIN_BRUTE_HURT on
	PIGLIN_BRUTE_STEP oo
	PIGLIN_CELEBRATE od
	PIGLIN_CONVERTED_TO_ZOMBIFIED oj
	PIGLIN_DEATH oe
	PIGLIN_HURT og
	PIGLIN_JEALOUS of
	PIGLIN_RETREAT oh
	PIGLIN_STEP oi
	PIG_AMBIENT nV
	PIG_DEATH nW
	PIG_HURT nX
	PIG_SADDLE nY
	PIG_STEP nZ
	PILLAGER_AMBIENT oq
	PILLAGER_CELEBRATE or
	PILLAGER_DEATH os
	PILLAGER_HURT ot
	PISTON_CONTRACT ou
	PISTON_EXTEND ov
	PLAYER_ATTACK_CRIT ow
	PLAYER_ATTACK_KNOCKBACK ox
	PLAYER_ATTACK_NODAMAGE oy
	PLAYER_ATTACK_STRONG oz
	PLAYER_ATTACK_SWEEP oA
	PLAYER_ATTACK_WEAK oB
	PLAYER_BIG_FALL oC
	PLAYER_BREATH oD
	PLAYER_BURP oE
	PLAYER_DEATH oF
	PLAYER_HURT oG
	PLAYER_HURT_DROWN oH
	PLAYER_HURT_FREEZE oI
	PLAYER_HURT_ON_FIRE oJ
	PLAYER_HURT_SWEET_BERRY_BUSH oK
	PLAYER_LEVELUP oL
	PLAYER_SMALL_FALL oM
	PLAYER_SPLASH oN
	PLAYER_SPLASH_HIGH_SPEED oO
	PLAYER_SWIM oP
	POINTED_DRIPSTONE_BREAK eC
	POINTED_DRIPSTONE_DRIP_LAVA eI
	POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON eK
	POINTED_DRIPSTONE_DRIP_WATER eJ
	POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON eL
	POINTED_DRIPSTONE_FALL eG
	POINTED_DRIPSTONE_HIT eF
	POINTED_DRIPSTONE_LAND eH
	POINTED_DRIPSTONE_PLACE eE
	POINTED_DRIPSTONE_STEP eD
	POLAR_BEAR_AMBIENT oQ
	POLAR_BEAR_AMBIENT_BABY oR
	POLAR_BEAR_DEATH oS
	POLAR_BEAR_HURT oT
	POLAR_BEAR_STEP oU
	POLAR_BEAR_WARNING oV
	POLISHED_DEEPSLATE_BREAK oW
	POLISHED_DEEPSLATE_FALL oX
	POLISHED_DEEPSLATE_HIT oY
	POLISHED_DEEPSLATE_PLACE oZ
	POLISHED_DEEPSLATE_STEP pa
	PORTAL_AMBIENT pb
	PORTAL_TRAVEL pc
	PORTAL_TRIGGER pd
	POWDER_SNOW_BREAK pe
	POWDER_SNOW_FALL pf
	POWDER_SNOW_HIT pg
	POWDER_SNOW_PLACE ph
	POWDER_SNOW_STEP pi
	PUFFER_FISH_AMBIENT pj
	PUFFER_FISH_BLOW_OUT pk
	PUFFER_FISH_BLOW_UP pl
	PUFFER_FISH_DEATH pm
	PUFFER_FISH_FLOP pn
	PUFFER_FISH_HURT po
	PUFFER_FISH_STING pp
	PUMPKIN_CARVE pq
	RABBIT_AMBIENT pr
	RABBIT_ATTACK ps
	RABBIT_DEATH pt
	RABBIT_HURT pu
	RABBIT_JUMP pv
	RAID_HORN pw
	RAVAGER_AMBIENT px
	RAVAGER_ATTACK py
	RAVAGER_CELEBRATE pz
	RAVAGER_DEATH pA
	RAVAGER_HURT pB
	RAVAGER_ROAR pE
	RAVAGER_STEP pC
	RAVAGER_STUNNED pD
	REDSTONE_TORCH_BURNOUT pP
	RESPAWN_ANCHOR_AMBIENT pQ
	RESPAWN_ANCHOR_CHARGE pR
	RESPAWN_ANCHOR_DEPLETE pS
	RESPAWN_ANCHOR_SET_SPAWN pT
	ROOTED_DIRT_BREAK pU
	ROOTED_DIRT_FALL pV
	ROOTED_DIRT_HIT pW
	ROOTED_DIRT_PLACE pX
	ROOTED_DIRT_STEP pY
	ROOTS_BREAK gB
	ROOTS_FALL gF
	ROOTS_HIT gE
	ROOTS_PLACE gD
	ROOTS_STEP gC
	SALMON_AMBIENT pZ
	SALMON_DEATH qa
	SALMON_FLOP qb
	SALMON_HURT qc
	SAND_BREAK qd
	SAND_FALL qe
	SAND_HIT qf
	SAND_PLACE qg
	SAND_STEP qh
	SCAFFOLDING_BREAK qi
	SCAFFOLDING_FALL qj
	SCAFFOLDING_HIT qk
	SCAFFOLDING_PLACE ql
	SCAFFOLDING_STEP qm
	SCULK_CLICKING qn
	SCULK_CLICKING_STOP qo
	SCULK_SENSOR_BREAK qp
	SCULK_SENSOR_FALL qq
	SCULK_SENSOR_HIT qr
	SCULK_SENSOR_PLACE qs
	SCULK_SENSOR_STEP qt
	SHEEP_AMBIENT qu
	SHEEP_DEATH qv
	SHEEP_HURT qw
	SHEEP_SHEAR qx
	SHEEP_STEP qy
	SHIELD_BLOCK qz
	SHIELD_BREAK qA
	SHOVEL_FLATTEN qG
	SHROOMLIGHT_BREAK qB
	SHROOMLIGHT_FALL qF
	SHROOMLIGHT_HIT qE
	SHROOMLIGHT_PLACE qD
	SHROOMLIGHT_STEP qC
	SHULKER_AMBIENT qH
	SHULKER_BOX_CLOSE qI
	SHULKER_BOX_OPEN qJ
	SHULKER_BULLET_HIT qK
	SHULKER_BULLET_HURT qL
	SHULKER_CLOSE qM
	SHULKER_DEATH qN
	SHULKER_HURT qO
	SHULKER_HURT_CLOSED qP
	SHULKER_OPEN qQ
	SHULKER_SHOOT qR
	SHULKER_TELEPORT qS
	SILVERFISH_AMBIENT qT
	SILVERFISH_DEATH qU
	SILVERFISH_HURT qV
	SILVERFISH_STEP qW
	SKELETON_AMBIENT qX
	SKELETON_CONVERTED_TO_STRAY qY
	SKELETON_DEATH qZ
	SKELETON_HORSE_AMBIENT ra
	SKELETON_HORSE_AMBIENT_WATER re
	SKELETON_HORSE_DEATH rb
	SKELETON_HORSE_GALLOP_WATER rf
	SKELETON_HORSE_HURT rc
	SKELETON_HORSE_JUMP_WATER rg
	SKELETON_HORSE_STEP_WATER rh
	SKELETON_HORSE_SWIM rd
	SKELETON_HURT ri
	SKELETON_SHOOT rj
	SKELETON_STEP rk
	SLIME_ATTACK rl
	SLIME_BLOCK_BREAK rq
	SLIME_BLOCK_FALL rr
	SLIME_BLOCK_HIT rs
	SLIME_BLOCK_PLACE rt
	SLIME_BLOCK_STEP ru
	SLIME_DEATH rm
	SLIME_DEATH_SMALL sb
	SLIME_HURT rn
	SLIME_HURT_SMALL sc
	SLIME_JUMP ro
	SLIME_JUMP_SMALL sd
	SLIME_SQUISH rp
	SLIME_SQUISH_SMALL se
	SMALL_AMETHYST_BUD_BREAK rv
	SMALL_AMETHYST_BUD_PLACE rw
	SMALL_DRIPLEAF_BREAK rx
	SMALL_DRIPLEAF_FALL ry
	SMALL_DRIPLEAF_HIT rz
	SMALL_DRIPLEAF_PLACE rA
	SMALL_DRIPLEAF_STEP rB
	SMITHING_TABLE_USE sf
	SMOKER_SMOKE sg
	SNOWBALL_THROW sh
	SNOW_BREAK si
	SNOW_FALL sj
	SNOW_GOLEM_AMBIENT sk
	SNOW_GOLEM_DEATH sl
	SNOW_GOLEM_HURT sm
	SNOW_GOLEM_SHEAR so
	SNOW_GOLEM_SHOOT sn
	SNOW_HIT sp
	SNOW_PLACE sq
	SNOW_STEP sr
	SOUL_ESCAPE rM
	SOUL_SAND_BREAK rC
	SOUL_SAND_FALL rG
	SOUL_SAND_HIT rF
	SOUL_SAND_PLACE rE
	SOUL_SAND_STEP rD
	SOUL_SOIL_BREAK rH
	SOUL_SOIL_FALL rL
	SOUL_SOIL_HIT rK
	SOUL_SOIL_PLACE rJ
	SOUL_SOIL_STEP rI
	SPIDER_AMBIENT ss
	SPIDER_DEATH st
	SPIDER_HURT su
	SPIDER_STEP sv
	SPLASH_POTION_BREAK sw
	SPLASH_POTION_THROW sx
	SPORE_BLOSSOM_BREAK rN
	SPORE_BLOSSOM_FALL rO
	SPORE_BLOSSOM_HIT rP
	SPORE_BLOSSOM_PLACE rQ
	SPORE_BLOSSOM_STEP rR
	SPYGLASS_STOP_USING sz
	SPYGLASS_USE sy
	SQUID_AMBIENT sA
	SQUID_DEATH sB
	SQUID_HURT sC
	SQUID_SQUIRT sD
	STEM_BREAK lJ
	STEM_FALL lN
	STEM_HIT lM
	STEM_PLACE lL
	STEM_STEP lK
	STONE_BREAK sE
	STONE_BUTTON_CLICK_OFF sF
	STONE_BUTTON_CLICK_ON sG
	STONE_FALL sH
	STONE_HIT sI
	STONE_PLACE sJ
	STONE_PRESSURE_PLATE_CLICK_OFF sK
	STONE_PRESSURE_PLATE_CLICK_ON sL
	STONE_STEP sM
	STRAY_AMBIENT sN
	STRAY_DEATH sO
	STRAY_HURT sP
	STRAY_STEP sQ
	STRIDER_AMBIENT rS
	STRIDER_DEATH rV
	STRIDER_EAT rZ
	STRIDER_HAPPY rT
	STRIDER_HURT rW
	STRIDER_RETREAT rU
	STRIDER_SADDLE sa
	STRIDER_STEP rX
	STRIDER_STEP_LAVA rY
	SWEET_BERRY_BUSH_BREAK sR
	SWEET_BERRY_BUSH_PICK_BERRIES sT
	SWEET_BERRY_BUSH_PLACE sS
	THORNS_HIT sU
	TNT_PRIMED sV
	TOTEM_USE sW
	TRIDENT_HIT sX
	TRIDENT_HIT_GROUND sY
	TRIDENT_RETURN sZ
	TRIDENT_RIPTIDE_1 ta
	TRIDENT_RIPTIDE_2 tb
	TRIDENT_RIPTIDE_3 tc
	TRIDENT_THROW td
	TRIDENT_THUNDER te
	TRIPWIRE_ATTACH tf
	TRIPWIRE_CLICK_OFF tg
	TRIPWIRE_CLICK_ON th
	TRIPWIRE_DETACH ti
	TROPICAL_FISH_AMBIENT tj
	TROPICAL_FISH_DEATH tk
	TROPICAL_FISH_FLOP tl
	TROPICAL_FISH_HURT tm
	TUFF_BREAK tn
	TUFF_FALL tr
	TUFF_HIT tq
	TUFF_PLACE tp
	TUFF_STEP to
	TURTLE_AMBIENT_LAND ts
	TURTLE_DEATH tt
	TURTLE_DEATH_BABY tu
	TURTLE_EGG_BREAK tv
	TURTLE_EGG_CRACK tw
	TURTLE_EGG_HATCH tx
	TURTLE_HURT ty
	TURTLE_HURT_BABY tz
	TURTLE_LAY_EGG tA
	TURTLE_SHAMBLE tB
	TURTLE_SHAMBLE_BABY tC
	TURTLE_SWIM tD
	UI_BUTTON_CLICK tE
	UI_CARTOGRAPHY_TABLE_TAKE_RESULT tH
	UI_LOOM_SELECT_PATTERN tF
	UI_LOOM_TAKE_RESULT tG
	UI_STONECUTTER_SELECT_RECIPE tJ
	UI_STONECUTTER_TAKE_RESULT tI
	UI_TOAST_CHALLENGE_COMPLETE tK
	UI_TOAST_IN tL
	UI_TOAST_OUT tM
	VEX_AMBIENT tN
	VEX_CHARGE tO
	VEX_DEATH tP
	VEX_HURT tQ
	VILLAGER_AMBIENT tR
	VILLAGER_CELEBRATE tS
	VILLAGER_DEATH tT
	VILLAGER_HURT tU
	VILLAGER_NO tV
	VILLAGER_TRADE tW
	VILLAGER_WORK_ARMORER tY
	VILLAGER_WORK_BUTCHER tZ
	VILLAGER_WORK_CARTOGRAPHER ua
	VILLAGER_WORK_CLERIC ub
	VILLAGER_WORK_FARMER uc
	VILLAGER_WORK_FISHERMAN ud
	VILLAGER_WORK_FLETCHER ue
	VILLAGER_WORK_LEATHERWORKER uf
	VILLAGER_WORK_LIBRARIAN ug
	VILLAGER_WORK_MASON uh
	VILLAGER_WORK_SHEPHERD ui
	VILLAGER_WORK_TOOLSMITH uj
	VILLAGER_WORK_WEAPONSMITH uk
	VILLAGER_YES tX
	VINDICATOR_AMBIENT ul
	VINDICATOR_CELEBRATE um
	VINDICATOR_DEATH un
	VINDICATOR_HURT uo
	VINE_BREAK up
	VINE_FALL uq
	VINE_HIT ur
	VINE_PLACE us
	VINE_STEP ut
	WANDERING_TRADER_AMBIENT uv
	WANDERING_TRADER_DEATH uw
	WANDERING_TRADER_DISAPPEARED ux
	WANDERING_TRADER_DRINK_MILK uy
	WANDERING_TRADER_DRINK_POTION uz
	WANDERING_TRADER_HURT uA
	WANDERING_TRADER_NO uB
	WANDERING_TRADER_REAPPEARED uC
	WANDERING_TRADER_TRADE uD
	WANDERING_TRADER_YES uE
	WART_BLOCK_BREAK mi
	WART_BLOCK_FALL mm
	WART_BLOCK_HIT ml
	WART_BLOCK_PLACE mk
	WART_BLOCK_STEP mj
	WATER_AMBIENT uF
	WEATHER_RAIN uG
	WEATHER_RAIN_ABOVE uH
	WEEPING_VINES_BREAK md
	WEEPING_VINES_FALL mh
	WEEPING_VINES_HIT mg
	WEEPING_VINES_PLACE mf
	WEEPING_VINES_STEP me
	WET_GRASS_BREAK uI
	WET_GRASS_FALL uJ
	WET_GRASS_HIT uK
	WET_GRASS_PLACE uL
	WET_GRASS_STEP uM
	WITCH_AMBIENT uN
	WITCH_CELEBRATE uO
	WITCH_DEATH uP
	WITCH_DRINK uQ
	WITCH_HURT uR
	WITCH_THROW uS
	WITHER_AMBIENT uT
	WITHER_BREAK_BLOCK uU
	WITHER_DEATH uV
	WITHER_HURT uW
	WITHER_SHOOT uX
	WITHER_SKELETON_AMBIENT uY
	WITHER_SKELETON_DEATH uZ
	WITHER_SKELETON_HURT va
	WITHER_SKELETON_STEP vb
	WITHER_SPAWN vc
	WOLF_AMBIENT vd
	WOLF_DEATH ve
	WOLF_GROWL vf
	WOLF_HOWL vg
	WOLF_HURT vh
	WOLF_PANT vi
	WOLF_SHAKE vj
	WOLF_STEP vk
	WOLF_WHINE vl
	WOODEN_BUTTON_CLICK_OFF vr
	WOODEN_BUTTON_CLICK_ON vs
	WOODEN_DOOR_CLOSE vm
	WOODEN_DOOR_OPEN vn
	WOODEN_PRESSURE_PLATE_CLICK_OFF vw
	WOODEN_PRESSURE_PLATE_CLICK_ON vx
	WOODEN_TRAPDOOR_CLOSE vo
	WOODEN_TRAPDOOR_OPEN vp
	WOOD_BREAK vq
	WOOD_FALL vt
	WOOD_HIT vu
	WOOD_PLACE vv
	WOOD_STEP vy
	WOOL_BREAK vz
	WOOL_FALL vA
	WOOL_HIT vB
	WOOL_PLACE vC
	WOOL_STEP vD
	ZOGLIN_AMBIENT vE
	ZOGLIN_ANGRY vF
	ZOGLIN_ATTACK vG
	ZOGLIN_DEATH vH
	ZOGLIN_HURT vI
	ZOGLIN_STEP vJ
	ZOMBIE_AMBIENT vK
	ZOMBIE_ATTACK_IRON_DOOR vM
	ZOMBIE_ATTACK_WOODEN_DOOR vL
	ZOMBIE_BREAK_WOODEN_DOOR vN
	ZOMBIE_CONVERTED_TO_DROWNED vO
	ZOMBIE_DEATH vP
	ZOMBIE_DESTROY_EGG vQ
	ZOMBIE_HORSE_AMBIENT vR
	ZOMBIE_HORSE_DEATH vS
	ZOMBIE_HORSE_HURT vT
	ZOMBIE_HURT vU
	ZOMBIE_INFECT vV
	ZOMBIE_STEP wa
	ZOMBIE_VILLAGER_AMBIENT wb
	ZOMBIE_VILLAGER_CONVERTED wc
	ZOMBIE_VILLAGER_CURE wd
	ZOMBIE_VILLAGER_DEATH we
	ZOMBIE_VILLAGER_HURT wf
	ZOMBIE_VILLAGER_STEP wg
	ZOMBIFIED_PIGLIN_AMBIENT vW
	ZOMBIFIED_PIGLIN_ANGRY vX
	ZOMBIFIED_PIGLIN_DEATH vY
	ZOMBIFIED_PIGLIN_HURT vZ
	register (Ljava/lang/String;)Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/sounds/SoundSource net/minecraft/sounds/SoundCategory
	$VALUES l
	AMBIENT i
	BLOCKS e
	HOSTILE f
	MASTER a
	MUSIC b
	NEUTRAL g
	PLAYERS h
	RECORDS c
	VOICE j
	WEATHER d
	name k
	$values ()[Lnet/minecraft/sounds/SoundSource; b
	getName ()Ljava/lang/String; a
net/minecraft/stats/RecipeBookSettings$TypeSettings agz$a
	filtering b
	open a
	copy ()Lnet/minecraft/stats/RecipeBookSettings$TypeSettings; a
net/minecraft/stats/ServerRecipeBook net/minecraft/stats/RecipeBookServer
	LOGGER d
	RECIPE_BOOK_TAG c
	addRecipes (Ljava/util/Collection;Lnet/minecraft/server/level/ServerPlayer;)I a
	fromNbt (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/item/crafting/RecipeManager;)V a
	loadRecipes (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Consumer;Lnet/minecraft/world/item/crafting/RecipeManager;)V a
	removeRecipes (Ljava/util/Collection;Lnet/minecraft/server/level/ServerPlayer;)I b
	sendInitialRecipeBook (Lnet/minecraft/server/level/ServerPlayer;)V a
	sendRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State;Lnet/minecraft/server/level/ServerPlayer;Ljava/util/List;)V a
	toNbt ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/stats/ServerStatsCounter net/minecraft/stats/ServerStatisticManager
	LOGGER b
	dirty e
	file d
	server c
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/nbt/CompoundTag; a
	getDirty ()Ljava/util/Set; d
	getKey (Lnet/minecraft/stats/Stat;)Lnet/minecraft/resources/ResourceLocation; b
	getStat (Lnet/minecraft/stats/StatType;Ljava/lang/String;)Ljava/util/Optional; a
	markAllDirty ()V c
	parseLocal (Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V a
	save ()V a
	sendStats (Lnet/minecraft/server/level/ServerPlayer;)V a
	setValue (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V a
	toJson ()Ljava/lang/String; b
net/minecraft/stats/Stat net/minecraft/stats/Statistic
	formatter n
	type p
	value o
	buildName (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)Ljava/lang/String; a
	format (I)Ljava/lang/String; a
	getType ()Lnet/minecraft/stats/StatType; a
	getValue ()Ljava/lang/Object; b
	locationToKey (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
net/minecraft/stats/StatFormatter net/minecraft/stats/Counter
	DECIMAL_FORMAT a
	DEFAULT b
	DISTANCE d
	DIVIDE_BY_TEN c
	TIME e
net/minecraft/stats/StatType net/minecraft/stats/StatisticWrapper
	displayName c
	map b
	registry a
	contains (Ljava/lang/Object;)Z a
	get (Ljava/lang/Object;)Lnet/minecraft/stats/Stat; b
	get (Ljava/lang/Object;Lnet/minecraft/stats/StatFormatter;)Lnet/minecraft/stats/Stat; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getRegistry ()Lnet/minecraft/core/Registry; a
	getTranslationKey ()Ljava/lang/String; b
net/minecraft/stats/Stats net/minecraft/stats/StatisticList
	ANIMALS_BRED P
	AVIATE_ONE_CM B
	BELL_RING az
	BLOCK_MINED a
	BOAT_ONE_CM y
	CLEAN_ARMOR X
	CLEAN_BANNER Y
	CLEAN_SHULKER_BOX Z
	CLIMB_ONE_CM u
	CROUCH_ONE_CM q
	CROUCH_TIME o
	CUSTOM i
	DAMAGE_ABSORBED L
	DAMAGE_BLOCKED_BY_SHIELD K
	DAMAGE_DEALT G
	DAMAGE_DEALT_ABSORBED H
	DAMAGE_DEALT_RESISTED I
	DAMAGE_RESISTED M
	DAMAGE_TAKEN J
	DEATHS N
	DROP F
	EAT_CAKE_SLICE U
	ENCHANT_ITEM ak
	ENTITY_KILLED g
	ENTITY_KILLED_BY h
	FALL_ONE_CM t
	FILL_CAULDRON V
	FISH_CAUGHT R
	FLY_ONE_CM v
	HORSE_ONE_CM A
	INSPECT_DISPENSER ae
	INSPECT_DROPPER ac
	INSPECT_HOPPER ad
	INTERACT_WITH_ANVIL aC
	INTERACT_WITH_BEACON ab
	INTERACT_WITH_BLAST_FURNACE as
	INTERACT_WITH_BREWINGSTAND aa
	INTERACT_WITH_CAMPFIRE av
	INTERACT_WITH_CARTOGRAPHY_TABLE aw
	INTERACT_WITH_CRAFTING_TABLE an
	INTERACT_WITH_FURNACE am
	INTERACT_WITH_GRINDSTONE aD
	INTERACT_WITH_LECTERN au
	INTERACT_WITH_LOOM ax
	INTERACT_WITH_SMITHING_TABLE aF
	INTERACT_WITH_SMOKER at
	INTERACT_WITH_STONECUTTER ay
	ITEM_BROKEN d
	ITEM_CRAFTED b
	ITEM_DROPPED f
	ITEM_PICKED_UP e
	ITEM_USED c
	JUMP E
	LEAVE_GAME j
	MINECART_ONE_CM x
	MOB_KILLS O
	OPEN_BARREL ar
	OPEN_CHEST ao
	OPEN_ENDERCHEST aj
	OPEN_SHULKER_BOX aq
	PIG_ONE_CM z
	PLAYER_KILLS Q
	PLAY_NOTEBLOCK af
	PLAY_RECORD al
	PLAY_TIME k
	POT_FLOWER ah
	RAID_TRIGGER aA
	RAID_WIN aB
	SLEEP_IN_BED ap
	SPRINT_ONE_CM r
	STRIDER_ONE_CM D
	SWIM_ONE_CM C
	TALKED_TO_VILLAGER S
	TARGET_HIT aE
	TIME_SINCE_DEATH m
	TIME_SINCE_REST n
	TOTAL_WORLD_TIME l
	TRADED_WITH_VILLAGER T
	TRIGGER_TRAPPED_CHEST ai
	TUNE_NOTEBLOCK ag
	USE_CAULDRON W
	WALK_ONE_CM p
	WALK_ON_WATER_ONE_CM s
	WALK_UNDER_WATER_ONE_CM w
	makeCustomStat (Ljava/lang/String;Lnet/minecraft/stats/StatFormatter;)Lnet/minecraft/resources/ResourceLocation; a
	makeRegistryStatType (Ljava/lang/String;Lnet/minecraft/core/Registry;)Lnet/minecraft/stats/StatType; a
net/minecraft/stats/StatsCounter net/minecraft/stats/StatisticManager
	stats a
	getValue (Lnet/minecraft/stats/Stat;)I a
	getValue (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)I a
	increment (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V b
	setValue (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V a
net/minecraft/tags/BlockTags net/minecraft/tags/TagsBlock
	ACACIA_LOGS w
	ANIMALS_SPAWNABLE_ON bs
	ANVIL G
	AXOLOTLS_SPAWNABLE_ON bt
	AZALEA_GROWS_ON bB
	AZALEA_ROOT_REPLACEABLE be
	BAMBOO_PLANTABLE_ON am
	BANNERS B
	BASE_STONE_NETHER aU
	BASE_STONE_OVERWORLD aR
	BEACON_BASE_BLOCKS aA
	BEDS L
	BEEHIVES at
	BEE_GROWABLES av
	BIG_DRIPLEAF_PLACEABLE bg
	BIRCH_LOGS v
	BUTTONS f
	CAMPFIRES aI
	CANDLES Z
	CANDLE_CAKES aV
	CARPETS g
	CAULDRONS aW
	CAVE_VINES bb
	CLIMBABLE aD
	COAL_ORES V
	COPPER_ORES X
	CORALS al
	CORAL_BLOCKS ai
	CORAL_PLANTS ak
	CRIMSON_STEMS z
	CROPS au
	CRYSTAL_SOUND_BLOCKS aX
	DARK_OAK_LOGS t
	DEEPSLATE_ORE_REPLACEABLES aT
	DIAMOND_ORES S
	DIRT aa
	DOORS p
	DRAGON_IMMUNE aq
	DRIPSTONE_REPLACEABLE ba
	EMERALD_ORES W
	ENDERMAN_HOLDABLE ad
	FEATURES_CANNOT_REPLACE bp
	FENCES M
	FENCE_GATES aL
	FIRE ax
	FLOWERS O
	FLOWER_POTS ac
	FOXES_SPAWNABLE_ON bz
	GEODE_INVALID_BLOCKS br
	GOATS_SPAWNABLE_ON bu
	GOLD_ORES Q
	GUARDED_BY_PIGLINS aJ
	HELPER a
	HOGLIN_REPELLENTS aF
	ICE ae
	IMPERMEABLE ag
	INFINIBURN_END aQ
	INFINIBURN_NETHER aP
	INFINIBURN_OVERWORLD aO
	INSIDE_STEP_SOUND_BLOCKS aY
	IRON_ORES R
	JUNGLE_LOGS x
	LAPIS_ORES U
	LAVA_POOL_STONE_CANNOT_REPLACE bq
	LEAVES I
	LOGS s
	LOGS_THAT_BURN r
	LUSH_GROUND_REPLACEABLE bd
	MINEABLE_WITH_AXE bi
	MINEABLE_WITH_HOE bj
	MINEABLE_WITH_PICKAXE bk
	MINEABLE_WITH_SHOVEL bl
	MOOSHROOMS_SPAWNABLE_ON bv
	MOSS_REPLACEABLE bc
	MUSHROOM_GROW_BLOCK aN
	NEEDS_DIAMOND_TOOL bm
	NEEDS_IRON_TOOL bn
	NEEDS_STONE_TOOL bo
	NON_FLAMMABLE_WOOD Y
	NYLIUM ay
	OAK_LOGS u
	OCCLUDES_VIBRATION_SIGNALS aZ
	PARROTS_SPAWNABLE_ON bw
	PIGLIN_REPELLENTS P
	PLANKS c
	POLAR_BEARS_SPAWNABLE_ON_IN_FROZEN_OCEAN bx
	PORTALS aw
	PRESSURE_PLATES l
	PREVENT_MOB_SPAWNING_INSIDE aK
	RABBITS_SPAWNABLE_ON by
	RAILS H
	REDSTONE_ORES T
	REPLACEABLE_PLANTS bC
	SAND C
	SAPLINGS q
	SHULKER_BOXES aE
	SIGNS ap
	SLABS E
	SMALL_DRIPLEAF_PLACEABLE bf
	SMALL_FLOWERS K
	SNOW bh
	SOUL_FIRE_BASE_BLOCKS aG
	SOUL_SPEED_BLOCKS aB
	SPRUCE_LOGS y
	STAIRS D
	STANDING_SIGNS an
	STONE_BRICKS d
	STONE_ORE_REPLACEABLES aS
	STONE_PRESSURE_PLATES n
	STRIDER_WARM_BLOCKS aH
	TALL_FLOWERS N
	TERRACOTTA ab
	TRAPDOORS J
	UNDERWATER_BONEMEALS ah
	UNSTABLE_BOTTOM_CENTER aM
	VALID_SPAWN af
	WALLS F
	WALL_CORALS aj
	WALL_POST_OVERRIDE aC
	WALL_SIGNS ao
	WARPED_STEMS A
	WART_BLOCKS az
	WITHER_IMMUNE ar
	WITHER_SUMMON_BASE_BLOCKS as
	WOLVES_SPAWNABLE_ON bA
	WOODEN_BUTTONS e
	WOODEN_DOORS h
	WOODEN_FENCES k
	WOODEN_PRESSURE_PLATES m
	WOODEN_SLABS j
	WOODEN_STAIRS i
	WOODEN_TRAPDOORS o
	WOOL b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; a
net/minecraft/tags/EntityTypeTags net/minecraft/tags/TagsEntity
	ARROWS e
	AXOLOTL_ALWAYS_HOSTILES h
	AXOLOTL_HUNT_TARGETS i
	BEEHIVE_INHABITORS d
	FREEZE_HURTS_EXTRA_TYPES k
	FREEZE_IMMUNE_ENTITY_TYPES j
	HELPER a
	IMPACT_PROJECTILES f
	POWDER_SNOW_WALKABLE_MOBS g
	RAIDERS c
	SKELETONS b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; a
net/minecraft/tags/FluidTags net/minecraft/tags/TagsFluid
	HELPER a
	KNOWN_TAGS d
	LAVA c
	WATER b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; a
	getStaticTags ()Ljava/util/List; b
net/minecraft/tags/ItemTags net/minecraft/tags/TagsItem
	ACACIA_LOGS u
	ANVIL E
	ARROWS al
	AXOLOTL_TEMPT_ITEMS ar
	BANNERS z
	BEACON_PAYMENT_ITEMS an
	BEDS J
	BIRCH_LOGS t
	BOATS af
	BUTTONS f
	CANDLES ac
	CARPETS g
	CLUSTER_MAX_HARVESTABLES at
	COALS ak
	COAL_ORES X
	COPPER_ORES Z
	CREEPER_DROP_MUSIC_DISCS aj
	CRIMSON_STEMS x
	DARK_OAK_LOGS r
	DIAMOND_ORES U
	DIRT ad
	DOORS n
	EMERALD_ORES Y
	FENCES K
	FISHES ag
	FLOWERS M
	FOX_FOOD R
	FREEZE_IMMUNE_WEARABLES aq
	GOLD_ORES S
	HELPER a
	IGNORED_BY_PIGLIN_BABIES P
	IRON_ORES T
	JUNGLE_LOGS v
	LAPIS_ORES W
	LEAVES G
	LECTERN_BOOKS am
	LOGS q
	LOGS_THAT_BURN p
	MUSIC_DISCS ai
	NON_FLAMMABLE_WOOD aa
	OAK_LOGS s
	OCCLUDES_VIBRATION_SIGNALS as
	PIGLIN_FOOD Q
	PIGLIN_LOVED O
	PIGLIN_REPELLENTS N
	PLANKS c
	RAILS F
	REDSTONE_ORES V
	SAND A
	SAPLINGS o
	SIGNS ah
	SLABS C
	SMALL_FLOWERS I
	SOUL_FIRE_BASE_BLOCKS ab
	SPRUCE_LOGS w
	STAIRS B
	STONE_BRICKS d
	STONE_CRAFTING_MATERIALS ap
	STONE_TOOL_MATERIALS ao
	TALL_FLOWERS L
	TERRACOTTA ae
	TRAPDOORS H
	WALLS D
	WARPED_STEMS y
	WOODEN_BUTTONS e
	WOODEN_DOORS h
	WOODEN_FENCES k
	WOODEN_PRESSURE_PLATES l
	WOODEN_SLABS j
	WOODEN_STAIRS i
	WOODEN_TRAPDOORS m
	WOOL b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; a
net/minecraft/tags/SerializationTags net/minecraft/tags/TagsInstance
	instance a
	bind (Lnet/minecraft/tags/TagContainer;)V a
	getInstance ()Lnet/minecraft/tags/TagContainer; a
net/minecraft/tags/SetTag net/minecraft/tags/TagSet
	closestCommonSuperType a
	values c
	valuesList b
	contains (Ljava/lang/Object;)Z a
	create (Ljava/util/Set;)Lnet/minecraft/tags/SetTag; a
	empty ()Lnet/minecraft/tags/SetTag; a
	findClosestAncestor (Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class; a
	findCommonSuperClass (Ljava/util/Set;)Ljava/lang/Class; c
	getValues ()Ljava/util/List; b
net/minecraft/tags/StaticTagHelper net/minecraft/tags/TagUtil
	directory b
	key a
	source c
	wrappers d
	addToCollection (Lnet/minecraft/tags/TagContainer$Builder;)V a
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; b
	getDirectory ()Ljava/lang/String; d
	getKey ()Lnet/minecraft/resources/ResourceKey; c
	getMissingTags (Lnet/minecraft/tags/TagContainer;)Ljava/util/Set; b
	reset (Lnet/minecraft/tags/TagContainer;)V a
	resetToEmpty ()V a
net/minecraft/tags/StaticTagHelper$Wrapper ahp$a
	name a
	tag b
	contains (Ljava/lang/Object;)Z a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
	getValues ()Ljava/util/List; b
	rebind (Ljava/util/function/Function;)V a
	resolve ()Lnet/minecraft/tags/Tag; c
net/minecraft/tags/StaticTags net/minecraft/tags/TagStatic
	HELPERS b
	HELPERS_IDS a
	bootStrap ()V b
	create (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/tags/StaticTagHelper; a
	createCollection ()Lnet/minecraft/tags/TagContainer; c
	getAllKnownHelpers ()Ljava/util/Set; d
	getAllMissingTags (Lnet/minecraft/tags/TagContainer;)Lcom/google/common/collect/Multimap; b
	makeSureAllKnownHelpersAreLoaded ()V e
	resetAll (Lnet/minecraft/tags/TagContainer;)V a
	resetAllToEmpty ()V a
	visitHelpers (Ljava/util/function/Consumer;)V a
net/minecraft/tags/Tag$Builder ahr$a
	entries a
	add (Lnet/minecraft/tags/Tag$BuilderEntry;)Lnet/minecraft/tags/Tag$Builder; a
	add (Lnet/minecraft/tags/Tag$Entry;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; a
	addElement (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; a
	addFromJson (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; a
	addOptionalElement (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; b
	addOptionalTag (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; d
	addTag (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; c
	build (Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/datafixers/util/Either; a
	getEntries ()Ljava/util/stream/Stream; b
	parseEntry (Lcom/google/gson/JsonElement;)Lnet/minecraft/tags/Tag$Entry; a
	serializeToJson ()Lcom/google/gson/JsonObject; c
	tag ()Lnet/minecraft/tags/Tag$Builder; a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/tags/Tag$BuilderEntry ahr$b
	entry a
	source b
	getEntry ()Lnet/minecraft/tags/Tag$Entry; a
	getSource ()Ljava/lang/String; b
net/minecraft/tags/Tag$ElementEntry ahr$c
	id a
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
	verifyIfPresent (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z a
net/minecraft/tags/Tag$Entry ahr$d
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
	verifyIfPresent (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/tags/Tag$Named ahr$e
	getName ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/tags/Tag$OptionalElementEntry ahr$f
	id a
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
	verifyIfPresent (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z a
net/minecraft/tags/Tag$OptionalTagEntry ahr$g
	id a
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
	verifyIfPresent (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
net/minecraft/tags/Tag$TagEntry ahr$h
	id a
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
	verifyIfPresent (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z a
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/tags/TagCollection net/minecraft/tags/Tags
	createFromNetwork (Lnet/minecraft/tags/TagCollection$NetworkPayload;Lnet/minecraft/core/Registry;)Lnet/minecraft/tags/TagCollection; a
	empty ()Lnet/minecraft/tags/TagCollection; c
	getAllTags ()Ljava/util/Map; a
	getAvailableTags ()Ljava/util/Collection; b
	getId (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/resources/ResourceLocation; a
	getId (Lnet/minecraft/tags/Tag;)Lnet/minecraft/resources/ResourceLocation; a
	getMatchingTags (Ljava/lang/Object;)Ljava/util/Collection; a
	getTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; a
	getTagOrEmpty (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; b
	hasTag (Lnet/minecraft/resources/ResourceLocation;)Z c
	of (Ljava/util/Map;)Lnet/minecraft/tags/TagCollection; a
	serializeToNetwork (Lnet/minecraft/core/Registry;)Lnet/minecraft/tags/TagCollection$NetworkPayload; a
net/minecraft/tags/TagCollection$NetworkPayload ahs$a
	tags a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/tags/TagCollection$NetworkPayload; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/tags/TagContainer net/minecraft/tags/ITagRegistry
	EMPTY a
	LOGGER b
	collections c
	acceptCap (Lnet/minecraft/tags/TagContainer$CollectionConsumer;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/tags/TagCollection;)V a
	addTagsFromPayload (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/tags/TagContainer$Builder;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/tags/TagCollection$NetworkPayload;)V a
	bindToGlobal ()V a
	deserializeFromNetwork (Lnet/minecraft/core/RegistryAccess;Ljava/util/Map;)Lnet/minecraft/tags/TagContainer; a
	get (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/tags/TagCollection; b
	getAll (Lnet/minecraft/tags/TagContainer$CollectionConsumer;)V a
	getIdOrThrow (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/tags/Tag;Ljava/util/function/Supplier;)Lnet/minecraft/resources/ResourceLocation; a
	getOrEmpty (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/tags/TagCollection; a
	getTagOrThrow (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Function;)Lnet/minecraft/tags/Tag; a
	serializeToNetwork (Lnet/minecraft/core/RegistryAccess;)Ljava/util/Map; a
net/minecraft/tags/TagContainer$Builder aht$a
	result a
	add (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/tags/TagCollection;)Lnet/minecraft/tags/TagContainer$Builder; a
	build ()Lnet/minecraft/tags/TagContainer; a
net/minecraft/tags/TagContainer$CollectionConsumer aht$b
net/minecraft/tags/TagLoader net/minecraft/tags/TagDataPack
	GSON b
	LOGGER a
	PATH_SUFFIX c
	PATH_SUFFIX_LENGTH d
	directory f
	idToValue e
	addDependencyIfNotCyclic (Lcom/google/common/collect/Multimap;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)V b
	build (Ljava/util/Map;)Lnet/minecraft/tags/TagCollection; a
	isCyclic (Lcom/google/common/collect/Multimap;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Z a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)Ljava/util/Map; a
	loadAndBuild (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/tags/TagCollection; b
	visitDependenciesAndElement (Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/Set;Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/BiConsumer;)V a
net/minecraft/tags/TagManager net/minecraft/tags/TagRegistry
	LOGGER a
	registryAccess b
	tags c
	createLoader (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;Lnet/minecraft/tags/StaticTagHelper;)Lnet/minecraft/tags/TagManager$LoaderInfo; a
	getTags ()Lnet/minecraft/tags/TagContainer; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/tags/TagManager$LoaderInfo ahv$a
	helper a
	pendingLoad b
	addToBuilder (Lnet/minecraft/tags/TagContainer$Builder;)V a
net/minecraft/util/BitStorage net/minecraft/util/DataBits
	copy ()Lnet/minecraft/util/BitStorage; d
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
	unpack ([I)V a
net/minecraft/util/ClassInstanceMultiMap net/minecraft/util/EntitySlice
	allInstances c
	baseClass b
	byClass a
	find (Ljava/lang/Class;)Ljava/util/Collection; a
	getAllInstances ()Ljava/util/List; a
net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap net/minecraft/util/RegistryID
	EMPTY_SLOT c
	LOADFACTOR d
	NOT_FOUND b
	byId g
	keys e
	nextId h
	size i
	values f
	add (Ljava/lang/Object;)I c
	addMapping (Ljava/lang/Object;I)V a
	byId (I)Ljava/lang/Object; a
	clear ()V a
	contains (I)Z c
	contains (Ljava/lang/Object;)Z b
	copy ()Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap; c
	create (I)Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap; b
	findEmpty (I)I f
	getId (Ljava/lang/Object;)I a
	getValue (I)I d
	grow (I)V e
	hash (Ljava/lang/Object;)I d
	indexOf (Ljava/lang/Object;I)I b
	nextId ()I d
	size ()I b
net/minecraft/util/Crypt net/minecraft/util/MinecraftEncryption
	ASYMMETRIC_ALGORITHM c
	ASYMMETRIC_BITS d
	BYTE_ENCODING e
	HASH_ALGORITHM f
	SYMMETRIC_ALGORITHM a
	SYMMETRIC_BITS b
	byteToPublicKey ([B)Ljava/security/PublicKey; a
	cipherData (ILjava/security/Key;[B)[B a
	decryptByteToSecretKey (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; a
	decryptUsingKey (Ljava/security/Key;[B)[B b
	digestData (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B a
	digestData ([[B)[B a
	encryptUsingKey (Ljava/security/Key;[B)[B a
	generateKeyPair ()Ljava/security/KeyPair; b
	generateSecretKey ()Ljavax/crypto/SecretKey; a
	getCipher (ILjava/security/Key;)Ljavax/crypto/Cipher; a
	setupCipher (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; a
net/minecraft/util/CryptException net/minecraft/util/CryptographyException
net/minecraft/util/CsvOutput net/minecraft/util/CSVWriter
	FIELD_SEPARATOR b
	LINE_SEPARATOR a
	columnCount d
	output c
	builder ()Lnet/minecraft/util/CsvOutput$Builder; a
	getStringValue (Ljava/lang/Object;)Ljava/lang/String; a
	writeLine (Ljava/util/stream/Stream;)V a
	writeRow ([Ljava/lang/Object;)V a
net/minecraft/util/CsvOutput$Builder aic$a
	headers a
	addColumn (Ljava/lang/String;)Lnet/minecraft/util/CsvOutput$Builder; a
	build (Ljava/io/Writer;)Lnet/minecraft/util/CsvOutput; a
net/minecraft/util/CubicSampler aid
	GAUSSIAN_SAMPLE_BREADTH b
	GAUSSIAN_SAMPLE_KERNEL c
	GAUSSIAN_SAMPLE_RADIUS a
	gaussianSampleVec3 (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/util/CubicSampler$Vec3Fetcher;)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/util/CubicSampler$Vec3Fetcher aid$a
net/minecraft/util/CubicSpline$Builder aie$b
	coordinate a
	derivatives e
	locations c
	valueTransformer b
	values d
	addPoint (FFF)Lnet/minecraft/util/CubicSpline$Builder; a
	addPoint (FLnet/minecraft/util/CubicSpline;F)Lnet/minecraft/util/CubicSpline$Builder; a
	build ()Lnet/minecraft/util/CubicSpline; a
net/minecraft/util/CubicSpline$Constant aie$c
	value a
	parityString ()Ljava/lang/String; a
	value ()F b
net/minecraft/util/CubicSpline$Multipoint aie$d
	coordinate a
	derivatives d
	locations b
	values c
	coordinate ()Lnet/minecraft/util/ToFloatFunction; b
	derivatives ()[F e
	locations ()[F c
	parityString ()Ljava/lang/String; a
	toString ([F)Ljava/lang/String; a
	values ()Ljava/util/List; d
net/minecraft/util/DirectoryLock net/minecraft/util/SessionLock
	DUMMY d
	LOCK_FILE a
	lock c
	lockFile b
	create (Ljava/nio/file/Path;)Lnet/minecraft/util/DirectoryLock; a
	isLocked (Ljava/nio/file/Path;)Z b
	isValid ()Z a
net/minecraft/util/DirectoryLock$LockException net/minecraft/util/SessionLock$ExceptionWorldConflict
	alreadyLocked (Ljava/nio/file/Path;)Lnet/minecraft/util/DirectoryLock$LockException; a
net/minecraft/util/ExceptionCollector net/minecraft/util/ExceptionSuppressor
	result a
	add (Ljava/lang/Throwable;)V a
	throwIfPresent ()V a
net/minecraft/util/ExtraCodecs$EitherCodec aii$a
	first a
	second b
	encode (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/util/ExtraCodecs$LazyInitializedCodec aii$b
	delegate a
	delegate ()Ljava/util/function/Supplier; a
net/minecraft/util/ExtraCodecs$XorCodec aii$c
	first a
	second b
	encode (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/util/FastColor net/minecraft/util/ColorUtil
net/minecraft/util/FastColor$ARGB32 aik$a
	alpha (I)I a
	blue (I)I d
	color (IIII)I a
	green (I)I c
	multiply (II)I a
	red (I)I b
net/minecraft/util/FormattedCharSequence net/minecraft/util/FormattedString
	EMPTY a
net/minecraft/util/FormattedCharSink net/minecraft/util/FormattedStringEmpty
net/minecraft/util/FrameTimer net/minecraft/util/CircularTimer
	LOGGING_LENGTH a
	logEnd e
	logLength d
	logStart c
	loggedTimes b
	getAverageDuration (I)J a
	getLog ()[J c
	getLogEnd ()I b
	getLogStart ()I a
	logFrameDuration (J)V a
	scaleAverageDurationTo (II)I a
	scaleSampleTo (JII)I a
	wrapIndex (I)I b
net/minecraft/util/GsonHelper net/minecraft/util/ChatDeserializer
	GSON a
	convertToBigDecimal (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; j
	convertToBigInteger (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; k
	convertToBoolean (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z c
	convertToByte (Lcom/google/gson/JsonElement;Ljava/lang/String;)B h
	convertToCharacter (Lcom/google/gson/JsonElement;Ljava/lang/String;)C i
	convertToDouble (Lcom/google/gson/JsonElement;Ljava/lang/String;)D d
	convertToFloat (Lcom/google/gson/JsonElement;Ljava/lang/String;)F e
	convertToInt (Lcom/google/gson/JsonElement;Ljava/lang/String;)I g
	convertToItem (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lnet/minecraft/world/item/Item; b
	convertToJsonArray (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; n
	convertToJsonObject (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; m
	convertToLong (Lcom/google/gson/JsonElement;Ljava/lang/String;)J f
	convertToObject (Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	convertToShort (Lcom/google/gson/JsonElement;Ljava/lang/String;)S l
	convertToString (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; a
	getAsBigDecimal (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; q
	getAsBigDecimal (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal; a
	getAsBigInteger (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; r
	getAsBigInteger (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger; a
	getAsBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z j
	getAsBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z a
	getAsByte (Lcom/google/gson/JsonObject;Ljava/lang/String;)B o
	getAsByte (Lcom/google/gson/JsonObject;Ljava/lang/String;B)B a
	getAsCharacter (Lcom/google/gson/JsonObject;Ljava/lang/String;)C p
	getAsCharacter (Lcom/google/gson/JsonObject;Ljava/lang/String;C)C a
	getAsDouble (Lcom/google/gson/JsonObject;Ljava/lang/String;)D k
	getAsDouble (Lcom/google/gson/JsonObject;Ljava/lang/String;D)D a
	getAsFloat (Lcom/google/gson/JsonObject;Ljava/lang/String;)F l
	getAsFloat (Lcom/google/gson/JsonObject;Ljava/lang/String;F)F a
	getAsInt (Lcom/google/gson/JsonObject;Ljava/lang/String;)I n
	getAsInt (Lcom/google/gson/JsonObject;Ljava/lang/String;I)I a
	getAsItem (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/world/item/Item; i
	getAsItem (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	getAsJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; u
	getAsJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray; a
	getAsJsonObject (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; t
	getAsJsonObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject; a
	getAsLong (Lcom/google/gson/JsonObject;Ljava/lang/String;)J m
	getAsLong (Lcom/google/gson/JsonObject;Ljava/lang/String;J)J a
	getAsObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	getAsObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	getAsShort (Lcom/google/gson/JsonObject;Ljava/lang/String;)S s
	getAsShort (Lcom/google/gson/JsonObject;Ljava/lang/String;S)S a
	getAsString (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; h
	getAsString (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getType (Lcom/google/gson/JsonElement;)Ljava/lang/String; d
	isArrayNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z d
	isBooleanValue (Lcom/google/gson/JsonElement;)Z c
	isBooleanValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z c
	isNumberValue (Lcom/google/gson/JsonElement;)Z b
	isNumberValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z b
	isObjectNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z e
	isStringValue (Lcom/google/gson/JsonElement;)Z a
	isStringValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z a
	isValidNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z g
	isValidPrimitive (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z f
	parse (Ljava/io/Reader;)Lcom/google/gson/JsonObject; a
	parse (Ljava/io/Reader;Z)Lcom/google/gson/JsonObject; a
	parse (Ljava/lang/String;)Lcom/google/gson/JsonObject; a
	parse (Ljava/lang/String;Z)Lcom/google/gson/JsonObject; a
	parseArray (Ljava/io/Reader;)Lcom/google/gson/JsonArray; b
net/minecraft/util/HttpUtil net/minecraft/util/HttpUtilities
	DOWNLOAD_EXECUTOR a
	LOGGER b
	buildQuery (Ljava/util/Map;)Ljava/lang/String; a
	downloadTo (Ljava/io/File;Ljava/lang/String;Ljava/util/Map;ILnet/minecraft/util/ProgressListener;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture; a
	getAvailablePort ()I a
	performPost (Ljava/net/URL;Ljava/lang/String;ZLjava/net/Proxy;)Ljava/lang/String; a
	performPost (Ljava/net/URL;Ljava/util/Map;ZLjava/net/Proxy;)Ljava/lang/String; a
net/minecraft/util/LazyLoadedValue net/minecraft/util/LazyInitVar
	factory a
	get ()Ljava/lang/Object; a
net/minecraft/util/LowerCaseEnumTypeAdapterFactory net/minecraft/util/ChatTypeAdapterFactory
	toLowercase (Ljava/lang/Object;)Ljava/lang/String; a
net/minecraft/util/ModCheck$Confidence aix$a
	$VALUES f
	DEFINITELY c
	PROBABLY_NOT a
	VERY_LIKELY b
	description d
	shouldReportAsModified e
	$values ()[Lnet/minecraft/util/ModCheck$Confidence; a
net/minecraft/util/Mth net/minecraft/util/MathHelper
	ASIN_TAB v
	BIG_ENOUGH_FLOAT i
	BIG_ENOUGH_INT h
	COS_TAB w
	DEG_TO_RAD d
	EPSILON f
	FRAC_BIAS u
	FRAC_EXP s
	HALF_PI b
	LUT_SIZE t
	MULTIPLY_DE_BRUIJN_BIT_POSITION q
	ONE_SIXTH r
	PI a
	RAD_TO_DEG e
	RANDOM p
	SIN o
	SIN_SCALE n
	SQRT_OF_TWO g
	TWO_PI c
	UUID_VARIANT l
	UUID_VARIANT_2 m
	UUID_VERSION j
	UUID_VERSION_TYPE_4 k
	abs (F)F e
	abs (I)I a
	absFloor (D)I d
	absMax (DD)D a
	approach (FFF)F d
	approachDegrees (FFF)F e
	atan2 (DD)D d
	average ([J)D a
	binBiModalNormalDistribution (DDDDDDII)[D a
	binLogDistribution (DDII)[D a
	binNormalDistribution (DDDII)[D a
	binarySearch (IILjava/util/function/IntPredicate;)I a
	catmullRomSplinePos (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	ceil (D)I e
	ceil (F)I f
	ceillog2 (I)I e
	clamp (BBB)B a
	clamp (DDD)D a
	clamp (FFF)F a
	clamp (III)I a
	clamp (JJJ)J a
	clampedLerp (DDD)D b
	clampedLerp (FFF)F b
	clampedMap (DDDDD)D a
	clampedMap (FFFFF)F a
	color (FFF)I f
	color (III)I b
	colorMultiply (IFFF)I a
	colorMultiply (II)I c
	cos (F)F b
	createInsecureUUID ()Ljava/util/UUID; a
	createInsecureUUID (Ljava/util/Random;)Ljava/util/UUID; a
	cumulativeSum ([D)[D a
	degreesDifference (FF)F c
	degreesDifferenceAbs (FF)F d
	diffuseLight (FFF)F k
	equal (DD)Z b
	equal (FF)Z a
	fastFloor (D)I a
	fastInvCubeRoot (F)F j
	fastInvSqrt (D)D h
	fastInvSqrt (F)F i
	floor (D)I b
	floor (F)I d
	frac (D)D g
	frac (F)F h
	getDouble (Ljava/lang/String;D)D a
	getDouble (Ljava/lang/String;DD)D a
	getInt (Ljava/lang/String;I)I a
	getInt (Ljava/lang/String;II)I a
	getRandomForDistributionIntegral (Ljava/util/Random;[D)I a
	getSeed (III)J c
	getSeed (Lnet/minecraft/core/Vec3i;)J a
	hsvToRgb (FFF)I h
	intFloorDiv (II)I a
	inverseLerp (DDD)D c
	inverseLerp (FFF)F g
	isPowerOfTwo (I)Z d
	length (DD)D e
	length (DDD)D e
	lerp (DDD)D d
	lerp (FFF)F i
	lerp2 (DDDDDD)D a
	lerp3 (DDDDDDDDDDD)D a
	lfloor (D)J c
	log2 (I)I f
	map (DDDDD)D b
	map (FFFFF)F b
	murmurHash3Mixer (I)I g
	murmurHash3Mixer (J)J a
	nextDouble (Ljava/util/Random;DD)D a
	nextFloat (Ljava/util/Random;FF)F a
	nextInt (Ljava/util/Random;II)I a
	normal (Ljava/util/Random;FF)F c
	positiveCeilDiv (II)I e
	positiveModulo (DD)D c
	positiveModulo (FF)F b
	positiveModulo (II)I b
	quantize (DI)I a
	randomBetween (Ljava/util/Random;FF)F b
	randomBetweenInclusive (Ljava/util/Random;II)I b
	rayIntersectsAABB (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;)Z a
	rotLerp (FFF)F j
	rotWrap (D)F l
	rotateIfNecessary (FFF)F c
	rotlerp (FFF)F l
	roundToward (II)I d
	sign (D)I k
	sin (F)F a
	smallestEncompassingPowerOfTwo (I)I c
	smoothstep (D)D i
	smoothstepDerivative (D)D j
	sqrt (F)F c
	square (D)D m
	square (F)F k
	square (I)I h
	square (J)J b
	triangleWave (FF)F e
	wobble (D)D n
	wrapDegrees (D)D f
	wrapDegrees (F)F g
	wrapDegrees (I)I b
net/minecraft/util/NativeModuleLister$NativeModuleInfo aiz$a
	name a
	version b
net/minecraft/util/NativeModuleLister$NativeModuleVersion aiz$b
	company c
	description a
	version b
net/minecraft/util/ProgressListener net/minecraft/util/IProgressUpdate
	progressStage (Lnet/minecraft/network/chat/Component;)V c
	progressStagePercentage (I)V a
	progressStart (Lnet/minecraft/network/chat/Component;)V b
	progressStartNoAbort (Lnet/minecraft/network/chat/Component;)V a
	stop ()V a
net/minecraft/util/SimpleBitStorage$InitializationException ajc$a
net/minecraft/util/SmoothDouble ajd
	lastAmount c
	remainingValue b
	targetValue a
	getNewDeltaValue (DD)D a
	reset ()V a
net/minecraft/util/SortedArraySet net/minecraft/util/ArraySetSorted
	DEFAULT_INITIAL_CAPACITY a
	comparator b
	contents c
	size d
	addInternal (Ljava/lang/Object;I)V a
	addOrGet (Ljava/lang/Object;)Ljava/lang/Object; a
	castRawArray ([Ljava/lang/Object;)[Ljava/lang/Object; a
	create ()Lnet/minecraft/util/SortedArraySet; a
	create (I)Lnet/minecraft/util/SortedArraySet; a
	create (Ljava/util/Comparator;)Lnet/minecraft/util/SortedArraySet; a
	create (Ljava/util/Comparator;I)Lnet/minecraft/util/SortedArraySet; a
	findIndex (Ljava/lang/Object;)I c
	first ()Ljava/lang/Object; b
	get (Ljava/lang/Object;)Ljava/lang/Object; b
	getInsertionPosition (I)I b
	getInternal (I)Ljava/lang/Object; e
	grow (I)V c
	last ()Ljava/lang/Object; c
	removeInternal (I)V d
net/minecraft/util/SortedArraySet$ArrayIterator aje$a
	index b
	last c
net/minecraft/util/StringRepresentable net/minecraft/util/INamable
	fromEnum (Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	getSerializedName ()Ljava/lang/String; c
	keys ([Lnet/minecraft/util/StringRepresentable;)Lcom/mojang/serialization/Keyable; a
net/minecraft/util/StringUtil net/minecraft/util/UtilColor
	LINE_END_PATTERN c
	LINE_PATTERN b
	STRIP_COLOR_PATTERN a
	endsWithNewLine (Ljava/lang/String;)Z d
	formatTickDuration (I)Ljava/lang/String; a
	isNullOrEmpty (Ljava/lang/String;)Z b
	lineCount (Ljava/lang/String;)I c
	stripColor (Ljava/lang/String;)Ljava/lang/String; a
	truncateStringIfNecessary (Ljava/lang/String;IZ)Ljava/lang/String; a
net/minecraft/util/TelemetryConstants aji
	BUILD_DISPLAY_NAME i
	BUILD_PLATFORM l
	CLIENT_ID e
	CLIENT_MODDED j
	DEVICE_SESSION_ID f
	EVENT_TIMESTAMP_UTC h
	EVENT_WORLD_LOADED b
	GAME_MODE_ADVENTURE r
	GAME_MODE_CREATIVE q
	GAME_MODE_HARDCORE t
	GAME_MODE_SPECTATOR s
	GAME_MODE_SURVIVAL p
	JAVA_VERSION n
	PLATFORM m
	PLAYER_GAME_MODE o
	SERVER_MODDED c
	SERVER_TYPE k
	SERVER_TYPE_LOCAL v
	SERVER_TYPE_OTHER w
	SERVER_TYPE_REALM u
	TIMESTAMP_FORMATTER a
	USER_ID d
	WORLD_SESSION_ID g
net/minecraft/util/TimeUtil net/minecraft/util/TimeRange
	NANOSECONDS_PER_MILLISECOND b
	NANOSECONDS_PER_SECOND a
	rangeOfSeconds (II)Lnet/minecraft/util/valueproviders/UniformInt; a
net/minecraft/util/datafix/DataFixers net/minecraft/util/datafix/DataConverterRegistry
	DATA_FIXER c
	SAME a
	SAME_NAMESPACED b
	addFixers (Lcom/mojang/datafixers/DataFixerBuilder;)V a
	createFixerUpper ()Lcom/mojang/datafixers/DataFixer; b
	createRenamer (Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator; a
	createRenamer (Ljava/util/Map;)Ljava/util/function/UnaryOperator; a
	getDataFixer ()Lcom/mojang/datafixers/DataFixer; a
net/minecraft/util/datafix/PackedBitStorage net/minecraft/util/datafix/DataBitsPacked
	BIT_TO_LONG_SHIFT a
	bits c
	data b
	mask d
	size e
	get (I)I a
	getBits ()I b
	getRaw ()[J a
	set (II)V a
net/minecraft/util/datafix/fixes/AbstractUUIDFix net/minecraft/util/datafix/fixes/DataConverterUUIDBase
	LOGGER a
	typeReference b
	createUUIDFromLongs (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; d
	createUUIDFromML (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; a
	createUUIDFromString (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional; a
	createUUIDTag (Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional; a
	replaceUUIDLeastMost (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; c
	replaceUUIDMLTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; b
	replaceUUIDString (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; a
	updateNamedChoice (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/AddNewChoices net/minecraft/util/datafix/fixes/DataConverterAddChoices
	name a
	type b
	cap (Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/AdvancementsFix net/minecraft/util/datafix/fixes/DataConverterAdvancement
	RENAMES a
net/minecraft/util/datafix/fixes/AdvancementsRenameFix net/minecraft/util/datafix/fixes/DataConverterAdvancementBase
	name a
	renamer b
net/minecraft/util/datafix/fixes/AttributesRename net/minecraft/util/datafix/fixes/DataConverterAttributes
	RENAMES a
	fixEntity (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; b
	fixItemStackTag (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixName (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BedItemColorFix net/minecraft/util/datafix/fixes/DataConverterBedItem
net/minecraft/util/datafix/fixes/BeehivePoiRenameFix net/minecraft/util/datafix/fixes/DataConverterBeehive
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/BiomeFix net/minecraft/util/datafix/fixes/DataConverterBiome
	BIOMES a
net/minecraft/util/datafix/fixes/BitStorageAlignFix net/minecraft/util/datafix/fixes/DataConverterBitStorageAlign
	BIT_TO_LONG_SHIFT a
	HEIGHTMAP_BITS e
	HEIGHTMAP_SIZE f
	SECTION_HEIGHT c
	SECTION_SIZE d
	SECTION_WIDTH b
	addPadding (II[J)[J a
	updateBitStorage (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	updateHeightmaps (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateSections (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix net/minecraft/util/datafix/fixes/DataConverterBannerColour
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix net/minecraft/util/datafix/fixes/DataConverterPiston
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix net/minecraft/util/datafix/fixes/DataConverterCustomNameTile
net/minecraft/util/datafix/fixes/BlockEntityIdFix net/minecraft/util/datafix/fixes/DataConverterTileEntity
	ID_MAP a
net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix net/minecraft/util/datafix/fixes/DataConverterJukeBox
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityKeepPacked net/minecraft/util/datafix/fixes/DataConverterBlockEntityKeepPacked
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix net/minecraft/util/datafix/fixes/DataConverterShulkerBoxBlock
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix net/minecraft/util/datafix/fixes/DataConverterSignText
	GSON a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateLine (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityUUIDFix net/minecraft/util/datafix/fixes/DataConverterBlockEntityUUID
	updateConduit (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateSkull (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/BlockNameFlatteningFix net/minecraft/util/datafix/fixes/DataConverterBlockName
net/minecraft/util/datafix/fixes/BlockRenameFix net/minecraft/util/datafix/fixes/DataConverterBlockRename
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; a
	fixBlock (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/BlockStateData net/minecraft/util/datafix/fixes/DataConverterFlattenData
	BLOCK_DEFAULTS d
	FILTER_ME a
	ID_BY_OLD e
	ID_BY_OLD_NAME f
	LOGGER b
	MAP c
	bootstrap0 ()V a
	bootstrap1 ()V b
	bootstrap10 ()V k
	bootstrap11 ()V l
	bootstrap12 ()V m
	bootstrap13 ()V n
	bootstrap14 ()V o
	bootstrap15 ()V p
	bootstrap2 ()V c
	bootstrap3 ()V d
	bootstrap4 ()V e
	bootstrap5 ()V f
	bootstrap6 ()V g
	bootstrap7 ()V h
	bootstrap8 ()V i
	bootstrap9 ()V j
	finalizeMaps ()V q
	getTag (I)Lcom/mojang/serialization/Dynamic; b
	parse (Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; b
	register (ILjava/lang/String;[Ljava/lang/String;)V a
	upgradeBlock (I)Ljava/lang/String; a
	upgradeBlock (Ljava/lang/String;)Ljava/lang/String; a
	upgradeBlockStateTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix net/minecraft/util/datafix/fixes/DataConverterFlattenState
net/minecraft/util/datafix/fixes/CatTypeFix net/minecraft/util/datafix/fixes/DataConverterCatType
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkBedBlockEntityInjecterFix net/minecraft/util/datafix/fixes/DataConverterBedBlock
	cap (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/ChunkBiomeFix net/minecraft/util/datafix/fixes/DataConverterLeavesBiome
net/minecraft/util/datafix/fixes/ChunkLightRemoveFix net/minecraft/util/datafix/fixes/DataConverterChunkLightRemove
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix net/minecraft/util/datafix/fixes/ChunkConverterPalette
	AIR C
	BANNER_BLOCK_MAP B
	BED_BLOCK_MAP A
	DOOR_MAP x
	DYE_COLOR_MAP z
	EAST_MASK f
	FIX k
	FLOWER_POT_MAP v
	LOGGER i
	NORTH_EAST_MASK g
	NORTH_MASK h
	NORTH_WEST_MASK a
	NOTE_BLOCK_MAP y
	PUMPKIN l
	SIZE D
	SKULL_MAP w
	SNOWY_GRASS n
	SNOWY_MYCELIUM o
	SNOWY_PODZOL m
	SOUTH_EAST_MASK e
	SOUTH_MASK d
	SOUTH_WEST_MASK c
	UPPER_LARGE_FERN s
	UPPER_LILAC q
	UPPER_PEONY u
	UPPER_ROSE_BUSH t
	UPPER_SUNFLOWER p
	UPPER_TALL_GRASS r
	VIRTUAL j
	WEST_MASK b
	addBanners (Ljava/util/Map;ILjava/lang/String;)V b
	addBeds (Ljava/util/Map;ILjava/lang/String;)V a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	getName (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; a
	getProperty (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String; a
	getSideMask (ZZZZ)I a
	idFor (Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap;Lcom/mojang/serialization/Dynamic;)I a
	mapDoor (Ljava/util/Map;Ljava/lang/String;I)V a
	mapSkull (Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer akz$a
	NIBBLE_SIZE b
	SIZE a
	data c
	get (III)I a
	getPosition (I)I b
	isFirst (I)Z a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction net/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction
	$VALUES i
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	axis g
	axisDirection h
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction; c
	getAxis ()Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis; b
	getAxisDirection ()Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis net/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$Axis
	$VALUES d
	X a
	Y b
	Z c
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection net/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$AxisDirection
	$VALUES d
	NEGATIVE b
	POSITIVE a
	step c
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection; b
	getStep ()I a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section akz$c
	buffer i
	hasData e
	listTag c
	palette b
	section d
	seen h
	toFix f
	update g
	y a
	addFix (II)V a
	getBlock (I)Lcom/mojang/serialization/Dynamic; a
	setBlock (ILcom/mojang/serialization/Dynamic;)V a
	upgrade (I)I b
	write ()Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk akz$d
	blockEntities f
	level c
	sections b
	sides a
	x d
	z e
	getBlock (I)Lcom/mojang/serialization/Dynamic; a
	getBlockEntity (I)Lcom/mojang/serialization/Dynamic; b
	getSection (I)Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section; d
	relative (ILnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction;)I a
	removeBlockEntity (I)Lcom/mojang/serialization/Dynamic; c
	setBlock (ILcom/mojang/serialization/Dynamic;)V a
	write ()Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkProtoTickListFix$PoorMansPalettedContainer ala$a
	SIZE_BITS a
	bits d
	data c
	mask e
	palette b
	valuesPerLong f
	data ()[J b
	get (III)Lcom/mojang/serialization/Dynamic; a
	getIndex (III)I b
	palette ()Ljava/util/List; a
net/minecraft/util/datafix/fixes/ChunkStatusFix net/minecraft/util/datafix/fixes/DataConverterChunkStatus
net/minecraft/util/datafix/fixes/ChunkStatusFix2 net/minecraft/util/datafix/fixes/DataConverterChunkStatus2
	RENAMES_AND_DOWNGRADES a
net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix net/minecraft/util/datafix/fixes/DataConverterChunkStructuresTemplateRename
	RENAMES a
	fixTag (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkToProtochunkFix net/minecraft/util/datafix/fixes/DataConverterProtoChunk
	NUM_SECTIONS a
	createEmptyChunk (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	fixChunkData (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	packOffsetCoordinates (III)S a
	repackBiomes (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	repackTicks (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix net/minecraft/util/datafix/fixes/DataConverterColorlessShulkerEntity
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/DyeItemRenameFix net/minecraft/util/datafix/fixes/DataConverterDye
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix net/minecraft/util/datafix/fixes/DataConverterArmorStand
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityBlockStateFix net/minecraft/util/datafix/fixes/DataConverterEntityBlockState
	MAP a
	getBlockId (Ljava/lang/String;)I a
	updateBlockToBlockState (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; a
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateFallingBlock (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityCatSplitFix net/minecraft/util/datafix/fixes/DataConverterEntityCatSplit
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityCodSalmonFix net/minecraft/util/datafix/fixes/DataConverterEntityCodSalmon
	RENAMED_EGG_IDS b
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix net/minecraft/util/datafix/fixes/DataConverterCustomNameEntity
	fixTagCustomName (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix net/minecraft/util/datafix/fixes/DataConverterGuardian
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix net/minecraft/util/datafix/fixes/DataConverterEquipment
	cap (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/EntityHealthFix net/minecraft/util/datafix/fixes/DataConverterHealth
	ENTITIES a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityHorseSaddleFix net/minecraft/util/datafix/fixes/DataConverterSaddle
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityHorseSplitFix net/minecraft/util/datafix/fixes/DataConverterHorse
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityIdFix net/minecraft/util/datafix/fixes/DataConverterEntity
	ID_MAP a
net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix net/minecraft/util/datafix/fixes/DataConverterItemFrame
	direction2dTo3d (B)B a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix net/minecraft/util/datafix/fixes/DataConverterMinecart
	MINECART_BY_ID a
net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix net/minecraft/util/datafix/fixes/DataConverterHanging
	DIRECTIONS a
	doFix (Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix net/minecraft/util/datafix/fixes/DataConverterPainting
	MAP a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix net/minecraft/util/datafix/fixes/DataConverterEntityProjectileOwner
	createUUIDArray (JJ)[I a
	setUUID (Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic; a
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateItemPotion (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateOwnerArrow (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateOwnerLlamaSpit (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateOwnerThrowable (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateProjectiles (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix net/minecraft/util/datafix/fixes/DataConverterEntityPufferfish
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityRavagerRenameFix net/minecraft/util/datafix/fixes/DataConverterEntityRavagerRename
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix net/minecraft/util/datafix/fixes/DataConverterDropChances
	FLOAT_LIST_CODEC a
	isZeroList (Lcom/mojang/serialization/OptionalDynamic;I)Z a
net/minecraft/util/datafix/fixes/EntityRenameFix net/minecraft/util/datafix/fixes/DataConverterEntityName
	name a
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
	getEntity (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix net/minecraft/util/datafix/fixes/DataConverterRiding
	cap (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/EntityShulkerColorFix net/minecraft/util/datafix/fixes/DataConverterShulker
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityShulkerRotationFix net/minecraft/util/datafix/fixes/DataConverterEntityShulkerRotation
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix net/minecraft/util/datafix/fixes/DataConverterSkeleton
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityStringUuidFix net/minecraft/util/datafix/fixes/DataConverterUUID
net/minecraft/util/datafix/fixes/EntityTheRenameningFix net/minecraft/util/datafix/fixes/DataConverterEntityRename
	MINECRAFT_BRED d
	RENAMED_BLOCKS b
	RENAMED_IDS a
	RENAMED_ITEMS c
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityTippedArrowFix net/minecraft/util/datafix/fixes/DataConverterEntityTippedArrow
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityUUIDFix net/minecraft/util/datafix/fixes/DataConverterEntityUUID
	ABSTRACT_HORSES c
	ANIMALS e
	LIVING_ENTITIES g
	MOBS f
	PROJECTILES h
	TAMEABLE_ANIMALS d
	updateAnimal (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; m
	updateAnimalOwner (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; l
	updateAreaEffectCloud (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; g
	updateEntityUUID (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateEvokerFangs (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; e
	updateFox (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; j
	updateHurtBy (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; k
	updateItem (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; i
	updateLivingEntity (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateMob (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; n
	updatePiglin (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateProjectile (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; o
	updateShulkerBullet (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; h
	updateZombieVillager (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; f
net/minecraft/util/datafix/fixes/EntityWolfColorFix net/minecraft/util/datafix/fixes/DataConverterWolf
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityZombieSplitFix net/minecraft/util/datafix/fixes/DataConverterZombieType
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix net/minecraft/util/datafix/fixes/DataConverterZombie
	PROFESSION_MAX a
	RANDOM b
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	getVillagerProfession (I)I a
net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix net/minecraft/util/datafix/fixes/DataConverterEntityZombifiedPiglinRename
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ForcePoiRebuild net/minecraft/util/datafix/fixes/DataConverterPOIRebuild
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/FurnaceRecipeFix net/minecraft/util/datafix/fixes/DataConverterFurnaceRecipesUsed
	cap (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
	updateFurnaceContents (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/GossipUUIDFix net/minecraft/util/datafix/fixes/DataConverterGossip
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/HeightmapRenamingFix net/minecraft/util/datafix/fixes/DataConverterHeightmapRenaming
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix net/minecraft/util/datafix/fixes/DataConverterIglooMetadataRemoval
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	isIglooPiece (Lcom/mojang/serialization/Dynamic;)Z c
	removeIglooPieces (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/ItemBannerColorFix net/minecraft/util/datafix/fixes/DataConverterBanner
net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix net/minecraft/util/datafix/fixes/DataConverterCustomNameItem
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemIdFix net/minecraft/util/datafix/fixes/DataConverterMaterialId
	ITEM_NAMES a
	getItem (I)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemLoreFix net/minecraft/util/datafix/fixes/DataConverterItemLoreComponentize
	fixLoreEntry (Ljava/lang/String;)Ljava/lang/String; a
	fixLoreList (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/ItemPotionFix net/minecraft/util/datafix/fixes/DataConverterPotionId
	DEFAULT a
	POTIONS c
	SPLASH b
net/minecraft/util/datafix/fixes/ItemRenameFix net/minecraft/util/datafix/fixes/DataConverterItemName
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; a
	fixItem (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix net/minecraft/util/datafix/fixes/DataConverterShulkerBoxItem
	NAMES_BY_COLOR a
net/minecraft/util/datafix/fixes/ItemSpawnEggFix net/minecraft/util/datafix/fixes/DataConverterSpawnEgg
	ID_TO_ENTITY a
net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix net/minecraft/util/datafix/fixes/DataConverterItemStackEnchantment
	MAP a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemStackMapIdFix net/minecraft/util/datafix/fixes/DataConverterMap
net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix net/minecraft/util/datafix/fixes/DataConverterFlattenSpawnEgg
	MAP a
net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix net/minecraft/util/datafix/fixes/DataConverterFlatten
	DAMAGE_IDS c
	IDS b
	MAP a
	updateItem (Ljava/lang/String;I)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemStackUUIDFix net/minecraft/util/datafix/fixes/DataConverterItemStackUUID
	updateAttributeModifiers (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateSkullOwner (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/ItemWaterPotionFix net/minecraft/util/datafix/fixes/DataConverterPotionWater
net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix net/minecraft/util/datafix/fixes/DataConverterBook
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/JigsawPropertiesFix net/minecraft/util/datafix/fixes/DataConverterJigsawProperties
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/JigsawRotationFix net/minecraft/util/datafix/fixes/DataConverterJigsawRotation
	RENAMES a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/LeavesFix net/minecraft/util/datafix/fixes/DataConverterLeaves
	DECAY_DISTANCE j
	DIRECTIONS i
	EAST_MASK f
	LEAVES m
	LOGS n
	NORTH_EAST_MASK g
	NORTH_MASK h
	NORTH_WEST_MASK a
	SIZE l
	SIZE_BITS k
	SOUTH_EAST_MASK e
	SOUTH_MASK d
	SOUTH_WEST_MASK c
	WEST_MASK b
	getIndex (III)I a
	getSideMask (ZZZZ)I a
	getX (I)I a
	getY (I)I b
	getZ (I)I c
net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection ank$a
	DECAYABLE i
	DISTANCE j
	PERSISTENT h
	leaveIds k
	logIds l
	stateToIdMap m
	getDistance (I)I d
	isLeaf (I)Z b
	isLog (I)Z a
	makeLeafTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic; a
	setDistance (III)V a
	skippable ()Z a
net/minecraft/util/datafix/fixes/LeavesFix$Section ank$b
	BLOCK_STATES_TAG a
	NAME_TAG b
	PROPERTIES_TAG c
	blockStateType h
	index f
	palette e
	paletteFinder d
	storage g
	getBlock (I)I c
	getIndex ()I c
	getStateId (Ljava/lang/String;ZI)I a
	isSkippable ()Z b
	readStorage (Lcom/mojang/serialization/Dynamic;)V a
	skippable ()Z a
	write (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix net/minecraft/util/datafix/fixes/DataConverterLevelDataGeneratorOptions
	GENERATOR_OPTIONS b
	MAP a
	convert (Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	getLayerInfoFromString (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; a
	getLayersInfoFromString (Ljava/lang/String;)Ljava/util/List; b
net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix net/minecraft/util/datafix/fixes/DataConverterWorldGenSettings
	AMOUNT_SPLITTER f
	BLOCK_SPLITTER g
	DEFAULT a
	GENERATOR_OPTIONS b
	LAYER_SPLITTER d
	OLD_AMOUNT_SPLITTER e
	SPLITTER c
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixString (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/LevelUUIDFix net/minecraft/util/datafix/fixes/DataConverterMiscUUID
	updateCustomBossEvents (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateDragonFight (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateWanderingTrader (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/MapIdFix net/minecraft/util/datafix/fixes/DataConverterMapId
net/minecraft/util/datafix/fixes/MemoryExpiryDataFix net/minecraft/util/datafix/fixes/DataConverterMemoryExpiry
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateBrain (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateMemories (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateMemoryEntry (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; a
	wrapMemoryValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
net/minecraft/util/datafix/fixes/MissingDimensionFix net/minecraft/util/datafix/fixes/DataConverterMissingDimension
	fields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; a
	flatType (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/Type; a
	optionalFields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; b
	optionalFields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; a
	recreateSettings (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix net/minecraft/util/datafix/fixes/DataConverterMobSpawner
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/NamedEntityFix net/minecraft/util/datafix/fixes/DataConverterNamedEntity
	entityName b
	name a
	type c
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/NewVillageFix net/minecraft/util/datafix/fixes/DataConverterNewVillage
	cap (Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix net/minecraft/util/datafix/fixes/DataConverterObjectiveDisplayName
net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix net/minecraft/util/datafix/fixes/DataConverterObjectiveRenderType
	getRenderType (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; a
net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix net/minecraft/util/datafix/fixes/DataConverterOminousBannerBlockEntityRename
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OminousBannerRenameFix net/minecraft/util/datafix/fixes/DataConverterOminousBannerRename
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix net/minecraft/util/datafix/fixes/DataConverterOptionsAddTextBackground
	calculateBackground (Ljava/lang/String;)D a
net/minecraft/util/datafix/fixes/OptionsForceVBOFix net/minecraft/util/datafix/fixes/DataConverterVBO
net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix net/minecraft/util/datafix/fixes/DataConverterKeybind
	KEY_UNKNOWN a
	MAP b
net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix net/minecraft/util/datafix/fixes/DataConverterKeybind2
net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix net/minecraft/util/datafix/fixes/DataConverterLang
net/minecraft/util/datafix/fixes/OptionsRenameFieldFix net/minecraft/util/datafix/fixes/DataConverterSettingRename
	fieldFrom b
	fieldTo c
	fixName a
net/minecraft/util/datafix/fixes/PlayerUUIDFix net/minecraft/util/datafix/fixes/DataConverterPlayerUUID
net/minecraft/util/datafix/fixes/PoiTypeRename net/minecraft/util/datafix/fixes/DataConverterPOIRename
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	rename (Ljava/lang/String;)Ljava/lang/String; a
	renameRecords (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; b
net/minecraft/util/datafix/fixes/RecipesFix net/minecraft/util/datafix/fixes/DataConverterRecipes
	RECIPES a
net/minecraft/util/datafix/fixes/RecipesRenameFix net/minecraft/util/datafix/fixes/DataConverterRecipeBase
	name a
	renamer b
net/minecraft/util/datafix/fixes/RecipesRenameningFix net/minecraft/util/datafix/fixes/DataConverterRecipeRename
	RECIPES a
net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix net/minecraft/util/datafix/fixes/DataConverterRedstoneConnections
	isConnected (Ljava/lang/String;)Z a
	updateRedstoneConnections (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/References net/minecraft/util/datafix/fixes/DataConverterTypes
	ADVANCEMENTS i
	BIOME y
	BLOCK_ENTITY l
	BLOCK_NAME r
	BLOCK_STATE n
	CHUNK c
	ENTITY q
	ENTITY_CHUNK k
	ENTITY_NAME o
	ENTITY_TREE p
	HOTBAR d
	ITEM_NAME s
	ITEM_STACK m
	LEVEL a
	OBJECTIVE v
	OPTIONS e
	PLAYER b
	POI_CHUNK j
	RECIPE x
	SAVED_DATA h
	STATS g
	STRUCTURE f
	STRUCTURE_FEATURE u
	TEAM w
	UNTAGGED_SPAWNER t
	WORLD_GEN_SETTINGS z
net/minecraft/util/datafix/fixes/RemoveGolemGossipFix net/minecraft/util/datafix/fixes/DataConverterRemoveGolemGossip
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/RenameBiomesFix net/minecraft/util/datafix/fixes/DataConverterBiomeBase
	biomes b
	name a
net/minecraft/util/datafix/fixes/RenamedCoralFansFix net/minecraft/util/datafix/fixes/DataConverterCoralFan
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/RenamedCoralFix net/minecraft/util/datafix/fixes/DataConverterCoral
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/ReorganizePoi net/minecraft/util/datafix/fixes/DataConverterPOI
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/SavedDataUUIDFix net/minecraft/util/datafix/fixes/DataConverterSavedDataUUID
net/minecraft/util/datafix/fixes/SavedDataVillageCropFix net/minecraft/util/datafix/fixes/DataConverterVillage
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateChildren (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateChildren (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
	updateCrop (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	updateDoubleField (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateSingleField (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/SimpleEntityRenameFix net/minecraft/util/datafix/fixes/DataConverterEntityNameAbstract
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/SimplestEntityRenameFix net/minecraft/util/datafix/fixes/DataConverterEntityRenameAbstract
	name a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/StatsCounterFix net/minecraft/util/datafix/fixes/DataConverterStatistic
	BLOCK_KEY c
	CUSTOM_MAP b
	ENTITIES g
	ENTITY_KEYS f
	ITEM_KEYS e
	NEW_BLOCK_KEY d
	NEW_CUSTOM_KEY h
	SKIP a
	upgradeBlock (Ljava/lang/String;)Ljava/lang/String; b
	upgradeItem (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/StriderGravityFix net/minecraft/util/datafix/fixes/DataConverterStriderGravity
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructureReferenceCountFix net/minecraft/util/datafix/fixes/DataConverterStructureReference
	setCountToAtLeastOne (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/TeamDisplayNameFix net/minecraft/util/datafix/fixes/DataConverterTeamDisplayName
net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix net/minecraft/util/datafix/fixes/DataConverterTrappedChest
	LOGGER a
	SIZE b
	SIZE_BITS c
net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection apb$a
	chestIds h
	isTrappedChest (I)Z a
	skippable ()Z a
net/minecraft/util/datafix/fixes/VillagerDataFix net/minecraft/util/datafix/fixes/DataConverterVillagerProfession
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	upgradeData (II)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/VillagerFollowRangeFix net/minecraft/util/datafix/fixes/DataConverterVillagerFollowRange
	NEW_BASE_VALUE b
	ORIGINAL_VALUE a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix net/minecraft/util/datafix/fixes/DataConverterVillagerLevelXp
	LEVEL_XP_THRESHOLDS b
	TRADES_PER_LEVEL a
	addLevel (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; a
	addXpFromLevel (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; b
	getMinXpPerLevel (I)I a
net/minecraft/util/datafix/fixes/VillagerTradeFix net/minecraft/util/datafix/fixes/DataConverterVillagerTrade
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateItemStack (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/WallPropertyFix net/minecraft/util/datafix/fixes/DataConverterWallProperty
	WALL_BLOCKS a
	fixWallProperty (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	mapProperty (Ljava/lang/String;)Ljava/lang/String; a
	upgradeBlockStateTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WorldGenSettingsFix net/minecraft/util/datafix/fixes/DataConverterWorldGenSettingsBuilding
	DEFAULTS j
	DESERT_PYRAMID b
	END_CITY g
	IGLOO c
	JUNGLE_TEMPLE d
	OCEAN_MONUMENT i
	PILLAGER_OUTPOST f
	SWAMP_HUT e
	VILLAGE a
	WOODLAND_MANSION h
	defaultOverworld (Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic; a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixFlatStructures (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map; a
	getInt (Ljava/lang/String;I)I a
	getInt (Ljava/lang/String;II)I a
	noise (JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	setSpacing (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V a
	vanillaBiomeSource (Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic; a
	vanillaLevels (Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object; a
net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration api$a
	CODEC a
	salt d
	separation c
	spacing b
	serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WriteAndReadFix net/minecraft/util/datafix/fixes/DataConverterShoulderEntity
	name a
	type b
net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix net/minecraft/util/datafix/fixes/DataConverterZombieVillagerLevelXp
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/schemas/NamespacedSchema net/minecraft/util/datafix/schemas/DataConverterSchemaNamed
	NAMESPACED_STRING b
	NAMESPACED_STRING_CODEC a
	ensureNamespaced (Ljava/lang/String;)Ljava/lang/String; a
	namespacedString ()Lcom/mojang/datafixers/types/Type; a
net/minecraft/util/datafix/schemas/V100 net/minecraft/util/datafix/schemas/DataConverterSchemaV100
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V102 net/minecraft/util/datafix/schemas/DataConverterSchemaV102
net/minecraft/util/datafix/schemas/V1022 net/minecraft/util/datafix/schemas/DataConverterSchemaV1022
net/minecraft/util/datafix/schemas/V106 net/minecraft/util/datafix/schemas/DataConverterSchemaV106
net/minecraft/util/datafix/schemas/V107 net/minecraft/util/datafix/schemas/DataConverterSchemaV107
net/minecraft/util/datafix/schemas/V1125 net/minecraft/util/datafix/schemas/DataConverterSchemaV1125
net/minecraft/util/datafix/schemas/V135 net/minecraft/util/datafix/schemas/DataConverterSchemaV135
net/minecraft/util/datafix/schemas/V143 net/minecraft/util/datafix/schemas/DataConverterSchemaV143
net/minecraft/util/datafix/schemas/V1451 net/minecraft/util/datafix/schemas/DataConverterSchemaV1451
net/minecraft/util/datafix/schemas/V1451_1 net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_1
net/minecraft/util/datafix/schemas/V1451_2 net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_2
net/minecraft/util/datafix/schemas/V1451_3 net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_3
net/minecraft/util/datafix/schemas/V1451_4 net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_4
net/minecraft/util/datafix/schemas/V1451_5 net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_5
net/minecraft/util/datafix/schemas/V1451_6 net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_6
	REPACK_OBJECTIVE_ID d
	SPECIAL_OBJECTIVE_MARKER b
	UNPACK_OBJECTIVE_ID c
	createCriterionTypes (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; a
net/minecraft/util/datafix/schemas/V1451_7 net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_7
net/minecraft/util/datafix/schemas/V1460 net/minecraft/util/datafix/schemas/DataConverterSchemaV1460
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1466 net/minecraft/util/datafix/schemas/DataConverterSchemaV1466
net/minecraft/util/datafix/schemas/V1470 net/minecraft/util/datafix/schemas/DataConverterSchemaV1470
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1481 net/minecraft/util/datafix/schemas/DataConverterSchemaV1481
net/minecraft/util/datafix/schemas/V1483 net/minecraft/util/datafix/schemas/DataConverterSchemaV1483
net/minecraft/util/datafix/schemas/V1486 net/minecraft/util/datafix/schemas/DataConverterSchemaV1486
net/minecraft/util/datafix/schemas/V1510 net/minecraft/util/datafix/schemas/DataConverterSchemaV1510
net/minecraft/util/datafix/schemas/V1800 net/minecraft/util/datafix/schemas/DataConverterSchemaV1800
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1801 net/minecraft/util/datafix/schemas/DataConverterSchemaV1801
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1904 net/minecraft/util/datafix/schemas/DataConverterSchemaV1904
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1906 net/minecraft/util/datafix/schemas/DataConverterSchemaV1906
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1909 net/minecraft/util/datafix/schemas/DataConverterSchemaV1909
net/minecraft/util/datafix/schemas/V1920 net/minecraft/util/datafix/schemas/DataConverterSchemaV1920
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1928 net/minecraft/util/datafix/schemas/DataConverterSchemaV1928
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1929 net/minecraft/util/datafix/schemas/DataConverterSchemaV1929
net/minecraft/util/datafix/schemas/V1931 net/minecraft/util/datafix/schemas/DataConverterSchemaV1931
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2100 net/minecraft/util/datafix/schemas/DataConverterSchemaV2100
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2501 net/minecraft/util/datafix/schemas/DataConverterSchemaV2501
	registerFurnace (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2502 net/minecraft/util/datafix/schemas/DataConverterSchemaV2502
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2505 net/minecraft/util/datafix/schemas/DataConverterSchemaV2505
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2509 net/minecraft/util/datafix/schemas/DataConverterSchemaV2509
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2519 net/minecraft/util/datafix/schemas/DataConverterSchemaV2519
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2522 net/minecraft/util/datafix/schemas/DataConverterSchemaV2522
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2551 net/minecraft/util/datafix/schemas/DataConverterSchemaV2551
net/minecraft/util/datafix/schemas/V2568 net/minecraft/util/datafix/schemas/DataConverterSchemaV2568
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V501 net/minecraft/util/datafix/schemas/DataConverterSchemaV501
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V700 net/minecraft/util/datafix/schemas/DataConverterSchemaV700
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V701 net/minecraft/util/datafix/schemas/DataConverterSchemaV701
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V702 net/minecraft/util/datafix/schemas/DataConverterSchemaV702
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V703 net/minecraft/util/datafix/schemas/DataConverterSchemaV703
net/minecraft/util/datafix/schemas/V704 net/minecraft/util/datafix/schemas/DataConverterSchemaV704
	ADD_NAMES b
	ITEM_TO_BLOCKENTITY a
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V705 net/minecraft/util/datafix/schemas/DataConverterSchemaV705
	ADD_NAMES b
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
	registerThrowableProjectile (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
net/minecraft/util/datafix/schemas/V808 net/minecraft/util/datafix/schemas/DataConverterSchemaV808
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V99 net/minecraft/util/datafix/schemas/DataConverterSchemaV99
	ADD_NAMES a
	ITEM_TO_BLOCKENTITY c
	LOGGER b
	addNames (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object; a
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V d
	registerMinecart (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V c
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
	registerThrowableProjectile (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
net/minecraft/util/monitoring/jmx/MinecraftServerStatistics net/minecraft/util/monitoring/jmx/MinecraftServerBeans
	LOGGER a
	attributeDescriptionByName d
	mBeanInfo c
	server b
	getAverageTickTime ()F a
	getTickTimes ()[J b
	registerJmxMonitoring (Lnet/minecraft/server/MinecraftServer;)V a
net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription arx$a
	description c
	getter b
	name a
	type d
	asMBeanAttributeInfo ()Ljavax/management/MBeanAttributeInfo; a
net/minecraft/util/profiling/ActiveProfiler net/minecraft/util/profiling/MethodProfiler
	LOGGER c
	WARNING_TIME_NANOS a
	chartedPaths o
	currentEntry m
	entries f
	getRealTime h
	getTickTime g
	path k
	paths d
	startTimeNano i
	startTimeTicks j
	startTimes e
	started l
	warn n
	endTick ()V b
	getChartedPaths ()Ljava/util/Set; e
	getCurrentEntry ()Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; f
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; c
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
	incrementCounter (Ljava/lang/String;I)V a
	incrementCounter (Ljava/util/function/Supplier;I)V a
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
net/minecraft/util/profiling/ActiveProfiler$PathEntry asa$a
	accumulatedDuration c
	count d
	counters e
	maxDuration a
	minDuration b
	getCount ()J c
	getCounters ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; d
	getDuration ()J a
	getMaxDuration ()J b
net/minecraft/util/profiling/ContinuousProfiler net/minecraft/util/profiling/GameProfilerSwitcher
	profiler c
	realTime a
	tickCount b
	disable ()V b
	enable ()V c
	getFiller ()Lnet/minecraft/util/profiling/ProfilerFiller; d
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; e
	isEnabled ()Z a
net/minecraft/util/profiling/EmptyProfileResults net/minecraft/util/profiling/MethodProfilerResultsEmpty
	EMPTY a
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getProfilerResults ()Ljava/lang/String; e
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/FilledProfileResults net/minecraft/util/profiling/MethodProfilerResultsFilled
	COUNTER_ENTRY_COMPARATOR e
	EMPTY b
	LOGGER a
	SPLITTER c
	endTimeNano i
	endTimeTicks j
	entries f
	startTimeNano g
	startTimeTicks h
	tickDuration k
	appendCounterResults (ILjava/lang/String;Lnet/minecraft/util/profiling/FilledProfileResults$CounterCollector;ILjava/lang/StringBuilder;)V a
	appendCounters (Ljava/util/Map;Ljava/lang/StringBuilder;I)V a
	appendProfilerResults (ILjava/lang/String;Ljava/lang/StringBuilder;)V a
	getComment ()Ljava/lang/String; i
	getCounterValues ()Ljava/util/Map; h
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ProfilerPathEntry; c
	getProfilerResults ()Ljava/lang/String; e
	getProfilerResults (JI)Ljava/lang/String; a
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTickDuration ()I f
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	indentLine (Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder; a
	isDirectChild (Ljava/lang/String;Ljava/lang/String;)Z a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/FilledProfileResults$CounterCollector asd$a
	children c
	selfValue a
	totalValue b
	addValue (Ljava/util/Iterator;J)V a
net/minecraft/util/profiling/InactiveProfiler net/minecraft/util/profiling/GameProfilerDisabled
	INSTANCE a
	endTick ()V b
	getChartedPaths ()Ljava/util/Set; e
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; c
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
	incrementCounter (Ljava/lang/String;I)V a
	incrementCounter (Ljava/util/function/Supplier;I)V a
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
net/minecraft/util/profiling/ProfileCollector net/minecraft/util/profiling/GameProfilerFillerActive
	getChartedPaths ()Ljava/util/Set; e
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; c
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
net/minecraft/util/profiling/ProfileResults net/minecraft/util/profiling/MethodProfilerResults
	PATH_SEPARATOR d
	demanglePath (Ljava/lang/String;)Ljava/lang/String; b
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getNanoDuration ()J g
	getProfilerResults ()Ljava/lang/String; e
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTickDuration ()I f
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/ProfilerFiller net/minecraft/util/profiling/GameProfilerFiller
	ROOT b
	endTick ()V b
	incrementCounter (Ljava/lang/String;)V d
	incrementCounter (Ljava/lang/String;I)V a
	incrementCounter (Ljava/util/function/Supplier;)V c
	incrementCounter (Ljava/util/function/Supplier;I)V a
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
	tee (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/util/profiling/ProfilerFiller; a
net/minecraft/util/profiling/ProfilerPathEntry net/minecraft/util/profiling/MethodProfilerResult
	getCount ()J c
	getCounters ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; d
	getDuration ()J a
	getMaxDuration ()J b
net/minecraft/util/profiling/ResultField net/minecraft/util/profiling/MethodProfilerResultsField
	count c
	globalPercentage b
	name d
	percentage a
	compareTo (Lnet/minecraft/util/profiling/ResultField;)I a
	getColor ()I a
net/minecraft/util/profiling/SingleTickProfiler net/minecraft/util/profiling/GameProfilerTick
	LOGGER a
	location e
	profiler f
	realTime b
	saveThreshold c
	tick d
	createTickProfiler (Ljava/lang/String;)Lnet/minecraft/util/profiling/SingleTickProfiler; a
	decorateFiller (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/SingleTickProfiler;)Lnet/minecraft/util/profiling/ProfilerFiller; a
	endTick ()V b
	startTick ()Lnet/minecraft/util/profiling/ProfilerFiller; a
net/minecraft/util/profiling/jfr/JvmProfiler$NoOpProfiler asn$a
	LOGGER a
	noOpCommit b
	isAvailable ()Z d
	isRunning ()Z c
	onChunkGenerate (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; a
	onPacketReceived (IILjava/net/SocketAddress;I)V a
	onPacketSent (IILjava/net/SocketAddress;I)V b
	onServerTick (F)V a
	onWorldLoadedStarted ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; e
	start (Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	stop ()Ljava/nio/file/Path; b
net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$Fields net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$a
	CHUNK_POS_X c
	CHUNK_POS_Z d
	LEVEL f
	STATUS e
	WORLD_POS_X a
	WORLD_POS_Z b
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$Fields net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$a
	RECEIVED_BYTES c
	RECEIVED_PACKETS e
	REMOTE_ADDRESS a
	SENT_BYTES b
	SENT_PACKETS d
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b
	event e
	receivedBytes c
	receivedPackets d
	sentBytes a
	sentPackets b
	commitEvent ()V a
	trackReceivedPacket (I)V b
	trackSentPacket (I)V a
net/minecraft/util/profiling/jfr/event/PacketEvent$Fields ass$a
	BYTES d
	PACKET_ID c
	PROTOCOL_ID b
	REMOTE_ADDRESS a
net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$Fields net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$a
	AVERAGE_TICK_DURATION a
net/minecraft/util/profiling/jfr/parse/JfrStatsParser$MutableCountAndSize asv$a
	count a
	totalSize b
	increment (I)V a
	toCountAndSize ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize; a
net/minecraft/util/profiling/jfr/stats/FileIOStat$Summary atc$a
	bytesPerSecond b
	counts c
	countsPerSecond d
	timeSpentInIO e
	topTenContributorsByTotalBytes f
	totalBytes a
	bytesPerSecond ()D b
	counts ()J c
	countsPerSecond ()D d
	timeSpentInIO ()Ljava/time/Duration; e
	topTenContributorsByTotalBytes ()Ljava/util/List; f
	totalBytes ()J a
net/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary atd$a
	allocationRateBytesPerSecond d
	duration a
	gcTotalDuration b
	totalGCs c
	allocationRateBytesPerSecond ()D e
	duration ()Ljava/time/Duration; b
	gcOverHead ()F a
	gcTotalDuration ()Ljava/time/Duration; c
	totalGCs ()I d
net/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing atd$b
	$VALUES c
	AFTER_GC b
	BEFORE_GC a
	$values ()[Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing; a
net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize ate$a
	SIZE_THEN_COUNT c
	totalCount a
	totalSize b
	add (Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize;)Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize; a
	totalCount ()J a
	totalSize ()J b
net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification ate$b
	PACKET_NAME_BY_ID d
	direction a
	packetId c
	protocolId b
	direction ()Lnet/minecraft/network/protocol/PacketFlow; b
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification; a
	packetId ()I d
	packetName ()Ljava/lang/String; a
	protocolId ()I c
net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary atf$a
	allocationsPerSecondByThread a
	allocationsPerSecondByThread ()Ljava/util/Map; a
net/minecraft/util/profiling/jfr/stats/TimeStamped ath
	getTimestamp ()Ljava/time/Instant; a
net/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder atm$a
	beforeTick e
	category b
	context d
	name a
	sampler c
	thresholdTest f
	build ()Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	withBeforeTick (Ljava/util/function/Consumer;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
	withThresholdAlert (Lnet/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
net/minecraft/util/profiling/metrics/MetricSampler$SamplerResult atm$b
	firstTick b
	lastTick c
	recording a
	getFirstTick ()I a
	getLastTick ()I b
	valueAtTick (I)D a
net/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest atm$c
net/minecraft/util/profiling/metrics/MetricSampler$ValueIncreasedByPercentage atm$d
	percentageIncreaseThreshold a
	previousValue b
net/minecraft/util/profiling/metrics/MetricsRegistry$AggregatedMetricSampler atn$a
	delegates b
	averageValueFromDelegates (Ljava/util/List;)D c
	beforeTick (Ljava/util/List;)V b
	thresholdTest (Ljava/util/List;)Lnet/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest; a
net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$CpuStats atv$a
	currentLoad e
	lastPollMs f
	nrOfCpus a
	previousCpuLoadTick d
	processor c
	systemInfo b
	loadForCpu (I)D a
net/minecraft/util/random/SimpleWeightedRandomList$Builder aub$a
	result a
	add (Ljava/lang/Object;I)Lnet/minecraft/util/random/SimpleWeightedRandomList$Builder; a
	build ()Lnet/minecraft/util/random/SimpleWeightedRandomList; a
net/minecraft/util/random/WeightedEntry$IntrusiveBase aud$a
	weight a
	getWeight ()Lnet/minecraft/util/random/Weight; a
net/minecraft/util/random/WeightedEntry$Wrapper aud$b
	data a
	weight b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getData ()Ljava/lang/Object; b
	getWeight ()Lnet/minecraft/util/random/Weight; a
net/minecraft/util/random/WeightedRandom net/minecraft/util/random/WeightedRandom2
	getRandomItem (Ljava/util/Random;Ljava/util/List;)Ljava/util/Optional; a
	getRandomItem (Ljava/util/Random;Ljava/util/List;I)Ljava/util/Optional; a
	getTotalWeight (Ljava/util/List;)I a
	getWeightedItem (Ljava/util/List;I)Ljava/util/Optional; a
net/minecraft/util/thread/BlockableEventLoop net/minecraft/util/thread/IAsyncTaskHandler
	LOGGER c
	blockingCount e
	name b
	pendingRunnables d
	doRunTask (Ljava/lang/Runnable;)V c
	dropAllTasks ()V bo
	executeBlocking (Ljava/lang/Runnable;)V g
	getPendingTasksCount ()I bm
	getRunningThread ()Ljava/lang/Thread; at
	isSameThread ()Z bl
	managedBlock (Ljava/util/function/BooleanSupplier;)V c
	name ()Ljava/lang/String; bn
	pollTask ()Z y
	profiledMetrics ()Ljava/util/List; bk
	runAllTasks ()V bp
	scheduleExecutables ()Z as
	shouldRun (Ljava/lang/Runnable;)Z d
	submit (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; f
	submit (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; a
	submitAsync (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; a
	tell (Ljava/lang/Object;)V a
	tell (Ljava/lang/Runnable;)V h
	waitForTasks ()V bq
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/util/thread/NamedThreadFactory aui
	LOGGER a
	group b
	namePrefix d
	threadNumber c
net/minecraft/util/thread/ProcessorHandle net/minecraft/util/thread/Mailbox
	ask (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	askEither (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; c
	name ()Ljava/lang/String; bn
	of (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/util/thread/ProcessorHandle; a
	tell (Ljava/lang/Object;)V a
net/minecraft/util/thread/ProcessorMailbox net/minecraft/util/thread/ThreadedMailbox
	CLOSED_BIT b
	LOGGER a
	SCHEDULED_BIT c
	dispatcher f
	name g
	queue e
	status d
	canBeScheduled ()Z e
	create (Ljava/util/concurrent/Executor;Ljava/lang/String;)Lnet/minecraft/util/thread/ProcessorMailbox; a
	name ()Ljava/lang/String; bn
	pollTask ()Z g
	pollUntil (Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I a
	profiledMetrics ()Ljava/util/List; bk
	registerForExecution ()V h
	runAll ()V a
	setAsIdle ()V d
	setAsScheduled ()Z c
	shouldProcess ()Z f
	size ()I b
	tell (Ljava/lang/Object;)V a
net/minecraft/util/thread/ReentrantBlockableEventLoop net/minecraft/util/thread/IAsyncTaskHandlerReentrant
	reentrantCount b
	doRunTask (Ljava/lang/Runnable;)V c
	runningTask ()Z br
	scheduleExecutables ()Z as
net/minecraft/util/thread/StrictQueue net/minecraft/util/thread/PairedQueue
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	push (Ljava/lang/Object;)Z a
	size ()I c
net/minecraft/util/thread/StrictQueue$FixedPriorityQueue aum$a
	queues a
	size b
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	pop ()Ljava/lang/Runnable; d
	push (Ljava/lang/Object;)Z a
	push (Lnet/minecraft/util/thread/StrictQueue$IntRunnable;)Z a
	size ()I c
net/minecraft/util/thread/StrictQueue$IntRunnable aum$b
	priority a
	task b
	getPriority ()I a
net/minecraft/util/thread/StrictQueue$QueueStrictQueue aum$c
	queue a
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	push (Ljava/lang/Object;)Z a
	size ()I c
net/minecraft/world/BossEvent net/minecraft/world/BossBattle
	color c
	createWorldFog g
	darkenScreen e
	id h
	name a
	overlay d
	playBossMusic f
	progress b
	getColor ()Lnet/minecraft/world/BossEvent$BossBarColor; l
	getId ()Ljava/util/UUID; i
	getName ()Lnet/minecraft/network/chat/Component; j
	getOverlay ()Lnet/minecraft/world/BossEvent$BossBarOverlay; m
	getProgress ()F k
	setColor (Lnet/minecraft/world/BossEvent$BossBarColor;)V a
	setCreateWorldFog (Z)Lnet/minecraft/world/BossEvent; c
	setDarkenScreen (Z)Lnet/minecraft/world/BossEvent; a
	setName (Lnet/minecraft/network/chat/Component;)V a
	setOverlay (Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
	setPlayBossMusic (Z)Lnet/minecraft/world/BossEvent; b
	setProgress (F)V a
	shouldCreateWorldFog ()Z p
	shouldDarkenScreen ()Z n
	shouldPlayBossMusic ()Z o
net/minecraft/world/BossEvent$BossBarColor net/minecraft/world/BossBattle$BarColor
	$VALUES j
	BLUE b
	GREEN d
	PINK a
	PURPLE f
	RED c
	WHITE g
	YELLOW e
	formatting i
	name h
	$values ()[Lnet/minecraft/world/BossEvent$BossBarColor; c
	byName (Ljava/lang/String;)Lnet/minecraft/world/BossEvent$BossBarColor; a
	getFormatting ()Lnet/minecraft/ChatFormatting; a
	getName ()Ljava/lang/String; b
net/minecraft/world/BossEvent$BossBarOverlay net/minecraft/world/BossBattle$BarStyle
	$VALUES g
	NOTCHED_10 c
	NOTCHED_12 d
	NOTCHED_20 e
	NOTCHED_6 b
	PROGRESS a
	name f
	$values ()[Lnet/minecraft/world/BossEvent$BossBarOverlay; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/BossEvent$BossBarOverlay; a
	getName ()Ljava/lang/String; a
net/minecraft/world/CompoundContainer net/minecraft/world/InventoryLargeChest
	container1 b
	container2 c
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	clearContent ()V a
	contains (Lnet/minecraft/world/Container;)Z a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I M_
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
net/minecraft/world/Container net/minecraft/world/IInventory
	LARGE_MAX_STACK_SIZE j_
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	countItem (Lnet/minecraft/world/item/Item;)I a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I M_
	hasAnyOf (Ljava/util/Set;)Z a
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
net/minecraft/world/ContainerHelper net/minecraft/world/ContainerUtil
	clearOrCountMatchingItems (Lnet/minecraft/world/Container;Ljava/util/function/Predicate;IZ)I a
	clearOrCountMatchingItems (Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;IZ)I a
	loadAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;)V b
	removeItem (Ljava/util/List;II)Lnet/minecraft/world/item/ItemStack; a
	saveAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;)Lnet/minecraft/nbt/CompoundTag; a
	saveAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;Z)Lnet/minecraft/nbt/CompoundTag; a
	takeItem (Ljava/util/List;I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/ContainerListener net/minecraft/world/IInventoryListener
	containerChanged (Lnet/minecraft/world/Container;)V a
net/minecraft/world/Containers net/minecraft/world/InventoryUtils
	RANDOM a
	dropContents (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/Container;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/NonNullList;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/Container;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/Container;)V a
	dropItemStack (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/Difficulty net/minecraft/world/EnumDifficulty
	$VALUES h
	BY_ID e
	EASY b
	HARD d
	NORMAL c
	PEACEFUL a
	id f
	key g
	$values ()[Lnet/minecraft/world/Difficulty; d
	byId (I)Lnet/minecraft/world/Difficulty; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/Difficulty; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getId ()I a
	getKey ()Ljava/lang/String; c
net/minecraft/world/DifficultyInstance net/minecraft/world/DifficultyDamageScaler
	DIFFICULTY_TIME_GLOBAL_OFFSET a
	MAX_DIFFICULTY_TIME_GLOBAL b
	MAX_DIFFICULTY_TIME_LOCAL c
	base d
	effectiveDifficulty e
	calculateDifficulty (Lnet/minecraft/world/Difficulty;JJF)F a
	getDifficulty ()Lnet/minecraft/world/Difficulty; a
	getEffectiveDifficulty ()F b
	getSpecialMultiplier ()F d
	isHard ()Z c
	isHarderThan (F)Z a
net/minecraft/world/InteractionHand net/minecraft/world/EnumHand
	$VALUES c
	MAIN_HAND a
	OFF_HAND b
	$values ()[Lnet/minecraft/world/InteractionHand; a
net/minecraft/world/InteractionResult net/minecraft/world/EnumInteractionResult
	$VALUES f
	CONSUME b
	CONSUME_PARTIAL c
	FAIL e
	PASS d
	SUCCESS a
	$values ()[Lnet/minecraft/world/InteractionResult; d
	consumesAction ()Z a
	shouldAwardStats ()Z c
	shouldSwing ()Z b
	sidedSuccess (Z)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/InteractionResultHolder net/minecraft/world/InteractionResultWrapper
	object b
	result a
	consume (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; b
	fail (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; d
	getObject ()Ljava/lang/Object; b
	getResult ()Lnet/minecraft/world/InteractionResult; a
	pass (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; c
	sidedSuccess (Ljava/lang/Object;Z)Lnet/minecraft/world/InteractionResultHolder; a
	success (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/LockCode net/minecraft/world/ChestLock
	NO_LOCK a
	TAG_LOCK b
	key c
	addToTag (Lnet/minecraft/nbt/CompoundTag;)V a
	fromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/LockCode; b
	unlocksWith (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/MenuProvider net/minecraft/world/ITileInventory
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
net/minecraft/world/Nameable net/minecraft/world/INamableTileEntity
	getCustomName ()Lnet/minecraft/network/chat/Component; Z
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
	getName ()Lnet/minecraft/network/chat/Component; X
	hasCustomName ()Z Y
net/minecraft/world/SimpleContainer net/minecraft/world/InventorySubcontainer
	items c
	listeners d
	size b
	addItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	addListener (Lnet/minecraft/world/ContainerListener;)V a
	canAddItem (Lnet/minecraft/world/item/ItemStack;)Z b
	clearContent ()V a
	createTag ()Lnet/minecraft/nbt/ListTag; g
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	isEmpty ()Z c
	moveItemToEmptySlots (Lnet/minecraft/world/item/ItemStack;)V c
	moveItemToOccupiedSlotsWithSameType (Lnet/minecraft/world/item/ItemStack;)V d
	moveItemsBetweenStacks (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	removeAllItems ()Ljava/util/List; f
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	removeItemType (Lnet/minecraft/world/item/Item;I)Lnet/minecraft/world/item/ItemStack; a
	removeListener (Lnet/minecraft/world/ContainerListener;)V b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/SimpleMenuProvider net/minecraft/world/TileInventory
	menuConstructor b
	title a
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
net/minecraft/world/WorldlyContainer net/minecraft/world/IWorldInventory
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
net/minecraft/world/WorldlyContainerHolder net/minecraft/world/IInventoryHolder
	getContainer (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/WorldlyContainer; a
net/minecraft/world/damagesource/BadRespawnPointDamage net/minecraft/world/damagesource/DamageSourceNetherBed
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/damagesource/CombatRules net/minecraft/world/damagesource/CombatMath
	ARMOR_PROTECTION_DIVIDER b
	BASE_ARMOR_TOUGHNESS c
	MAX_ARMOR a
	MIN_ARMOR_RATIO d
	NUM_ARMOR_ITEMS e
	getDamageAfterAbsorb (FFF)F a
	getDamageAfterMagicAbsorb (FF)F a
net/minecraft/world/damagesource/IndirectEntityDamageSource net/minecraft/world/damagesource/EntityDamageSourceIndirect
	owner A
	getDirectEntity ()Lnet/minecraft/world/entity/Entity; k
	getEntity ()Lnet/minecraft/world/entity/Entity; l
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/effect/AbsoptionMobEffect net/minecraft/world/effect/MobEffectAbsorption
	addAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V b
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/AttackDamageMobEffect net/minecraft/world/effect/MobEffectAttackDamage
	multiplier a
	getAttributeModifierValue (ILnet/minecraft/world/entity/ai/attributes/AttributeModifier;)D a
net/minecraft/world/effect/HealthBoostMobEffect net/minecraft/world/effect/MobEffectHealthBoost
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/InstantenousMobEffect net/minecraft/world/effect/InstantMobEffect
	isDurationEffectTick (II)Z a
	isInstantenous ()Z a
net/minecraft/world/effect/MobEffect net/minecraft/world/effect/MobEffectList
	attributeModifiers a
	category b
	color c
	descriptionId d
	addAttributeModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Lnet/minecraft/world/effect/MobEffect; a
	addAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V b
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
	applyInstantenousEffect (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;ID)V a
	byId (I)Lnet/minecraft/world/effect/MobEffect; a
	getAttributeModifierValue (ILnet/minecraft/world/entity/ai/attributes/AttributeModifier;)D a
	getAttributeModifiers ()Ljava/util/Map; g
	getCategory ()Lnet/minecraft/world/effect/MobEffectCategory; e
	getColor ()I f
	getDescriptionId ()Ljava/lang/String; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getId (Lnet/minecraft/world/effect/MobEffect;)I a
	getOrCreateDescriptionId ()Ljava/lang/String; b
	isBeneficial ()Z h
	isDurationEffectTick (II)Z a
	isInstantenous ()Z a
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/MobEffectCategory net/minecraft/world/effect/MobEffectInfo
	$VALUES e
	BENEFICIAL a
	HARMFUL b
	NEUTRAL c
	tooltipFormatting d
	$values ()[Lnet/minecraft/world/effect/MobEffectCategory; b
	getTooltipFormatting ()Lnet/minecraft/ChatFormatting; a
net/minecraft/world/effect/MobEffectInstance net/minecraft/world/effect/MobEffect
	LOGGER a
	ambient e
	amplifier d
	duration c
	effect b
	hiddenEffect i
	noCounter f
	showIcon h
	visible g
	applyEffect (Lnet/minecraft/world/entity/LivingEntity;)V a
	compareTo (Lnet/minecraft/world/effect/MobEffectInstance;)I c
	getAmplifier ()I c
	getDescriptionId ()Ljava/lang/String; g
	getDuration ()I b
	getEffect ()Lnet/minecraft/world/effect/MobEffect; a
	isAmbient ()Z d
	isNoCounter ()Z h
	isVisible ()Z e
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/effect/MobEffectInstance; b
	loadSpecifiedEffect (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/effect/MobEffectInstance; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setDetailsFrom (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	setNoCounter (Z)V a
	showIcon ()Z f
	tick (Lnet/minecraft/world/entity/LivingEntity;Ljava/lang/Runnable;)Z a
	tickDownDuration ()I i
	update (Lnet/minecraft/world/effect/MobEffectInstance;)Z b
	writeDetailsTo (Lnet/minecraft/nbt/CompoundTag;)V c
net/minecraft/world/entity/AgeableMob net/minecraft/world/entity/EntityAgeable
	BABY_START_AGE b
	DATA_BABY_ID bW
	FORCED_AGE_PARTICLE_TICKS bX
	age c
	forcedAge d
	forcedAgeTimer e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V n
	ageUp (I)V a_
	ageUp (IZ)V a
	aiStep ()V w_
	canBreed ()Z g
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAge ()I j
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	isBaby ()Z y_
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setAge (I)V b_
	setBaby (Z)V a
net/minecraft/world/entity/AgeableMob$AgeableMobGroupData awr$a
	babySpawnChance c
	groupSize a
	shouldSpawnBaby b
	getBabySpawnChance ()F d
	getGroupSize ()I a
	increaseGroupSizeByOne ()V b
	isShouldSpawnBaby ()Z c
net/minecraft/world/entity/AreaEffectCloud net/minecraft/world/entity/EntityAreaEffectCloud
	DATA_COLOR e
	DATA_PARTICLE ap
	DATA_RADIUS d
	DATA_WAITING f
	LOGGER b
	MAX_RADIUS aq
	TIME_BETWEEN_APPLICATIONS c
	duration au
	durationOnUse ay
	effects as
	fixedColor ax
	owner aB
	ownerUUID aC
	potion ar
	radiusOnUse az
	radiusPerTick aA
	reapplicationDelay aw
	victims at
	waitTime av
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getColor ()I i
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDuration ()I n
	getDurationOnUse ()I r
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; t
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; j
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; c_
	getPotion ()Lnet/minecraft/world/item/alchemy/Potion; u
	getRadius ()F h
	getRadiusOnUse ()F o
	getRadiusPerTick ()F q
	getWaitTime ()I s
	isWaiting ()Z l
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshDimensions ()V z_
	setDuration (I)V b
	setDurationOnUse (I)V c
	setFixedColor (I)V a
	setOwner (Lnet/minecraft/world/entity/LivingEntity;)V a
	setParticle (Lnet/minecraft/core/particles/ParticleOptions;)V a
	setPotion (Lnet/minecraft/world/item/alchemy/Potion;)V a
	setRadius (F)V a
	setRadiusOnUse (F)V b
	setRadiusPerTick (F)V c
	setWaitTime (I)V d
	setWaiting (Z)V a
	tick ()V k
	updateColor ()V w
net/minecraft/world/entity/EntityDimensions net/minecraft/world/entity/EntitySize
	fixed c
	height b
	width a
	fixed (FF)Lnet/minecraft/world/entity/EntityDimensions; c
	makeBoundingBox (DDD)Lnet/minecraft/world/phys/AABB; a
	makeBoundingBox (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; a
	scalable (FF)Lnet/minecraft/world/entity/EntityDimensions; b
	scale (F)Lnet/minecraft/world/entity/EntityDimensions; a
	scale (FF)Lnet/minecraft/world/entity/EntityDimensions; a
net/minecraft/world/entity/EntityEvent awv
	ARMORSTAND_WOBBLE F
	ATTACK_BLOCKED C
	BAD_OMEN_TRIGGERED Q
	BURNED K
	CANCEL_SHAKE_WETNESS ad
	CHEST_BREAK X
	DEATH c
	DOLPHIN_LOOKING_FOR_TREASURE L
	DROWNED J
	EAT_GRASS j
	END_RAM ag
	FEET_BREAK Z
	FIREWORKS_EXPLODE q
	FISHING_ROD_REEL_IN E
	FOX_EAT S
	FROZEN ae
	FULL_DEBUG_INFO w
	GUARDIAN_ATTACK_SOUND u
	HEAD_BREAK W
	HONEY_JUMP ab
	HONEY_SLIDE aa
	HURT b
	IN_LOVE_HEARTS r
	JUMP a
	LEGS_BREAK Y
	LOVE_HEARTS l
	MAINHAND_BREAK U
	OFFER_FLOWER k
	OFFHAND_BREAK V
	PERMISSION_LEVEL_ADMINS A
	PERMISSION_LEVEL_ALL x
	PERMISSION_LEVEL_GAMEMASTERS z
	PERMISSION_LEVEL_MODERATORS y
	PERMISSION_LEVEL_OWNERS B
	POKED R
	POOF ah
	RAVAGER_STUNNED M
	REDUCED_DEBUG_INFO v
	SHAKE_WETNESS h
	SHIELD_DISABLED D
	SILVERFISH_MERGE_ANIM t
	SQUID_ANIM_SYNCH s
	START_ATTACKING d
	START_RAM af
	STOP_ATTACKING e
	STOP_OFFER_FLOWER H
	SWAP_HANDS ac
	TALISMAN_ACTIVATE I
	TAMING_FAILED f
	TAMING_SUCCEEDED g
	TELEPORT T
	THORNED G
	TRUSTING_FAILED N
	TRUSTING_SUCCEEDED O
	USE_ITEM_COMPLETE i
	VILLAGER_ANGRY m
	VILLAGER_HAPPY n
	VILLAGER_SWEAT P
	WITCH_HAT_MAGIC o
	ZOMBIE_CONVERTING p
net/minecraft/world/entity/EntitySelector net/minecraft/world/entity/IEntitySelector
	CAN_BE_COLLIDED_WITH g
	CONTAINER_ENTITY_SELECTOR d
	ENTITY_NOT_BEING_RIDDEN c
	ENTITY_STILL_ALIVE a
	LIVING_ENTITY_STILL_ALIVE b
	NO_CREATIVE_OR_SPECTATOR e
	NO_SPECTATORS f
	notRiding (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; b
	pushableBy (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; a
	withinDistance (DDDD)Ljava/util/function/Predicate; a
net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector net/minecraft/world/entity/IEntitySelector$EntitySelectorEquipable
	itemStack a
	test (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/EntityType net/minecraft/world/entity/EntityTypes
	AREA_EFFECT_CLOUD b
	ARMOR_STAND c
	ARROW d
	AXOLOTL e
	BAT f
	BEE g
	BLAZE h
	BOAT i
	CAT j
	CAVE_SPIDER k
	CHEST_MINECART aa
	CHICKEN l
	COD m
	COMMAND_BLOCK_MINECART ab
	COW n
	CREEPER o
	DOLPHIN p
	DONKEY q
	DRAGON_FIREBALL r
	DROWNED s
	EGG aM
	ELDER_GUARDIAN t
	ENDERMAN w
	ENDERMITE x
	ENDER_DRAGON v
	ENDER_PEARL aN
	END_CRYSTAL u
	ENTITY_TAG a
	EVOKER y
	EVOKER_FANGS z
	EXPERIENCE_BOTTLE aO
	EXPERIENCE_ORB A
	EYE_OF_ENDER B
	FALLING_BLOCK C
	FIREBALL S
	FIREWORK_ROCKET D
	FISHING_BOBBER bj
	FOX E
	FURNACE_MINECART ac
	GHAST F
	GIANT G
	GLOW_ITEM_FRAME H
	GLOW_SQUID I
	GOAT J
	GUARDIAN K
	HOGLIN L
	HOPPER_MINECART ad
	HORSE M
	HUSK N
	ILLUSIONER O
	IRON_GOLEM P
	ITEM Q
	ITEM_FRAME R
	LEASH_KNOT T
	LIGHTNING_BOLT U
	LLAMA V
	LLAMA_SPIT W
	LOGGER bk
	MAGIC_HORSE_WIDTH bl
	MAGMA_CUBE X
	MARKER Y
	MINECART Z
	MOOSHROOM ah
	MULE ag
	OCELOT ai
	PAINTING aj
	PANDA ak
	PARROT al
	PHANTOM am
	PIG an
	PIGLIN ao
	PIGLIN_BRUTE ap
	PILLAGER aq
	PLAYER bi
	POLAR_BEAR ar
	POTION aP
	PUFFERFISH at
	RABBIT au
	RAVAGER av
	SALMON aw
	SHEEP ax
	SHULKER ay
	SHULKER_BULLET az
	SILVERFISH aA
	SKELETON aB
	SKELETON_HORSE aC
	SLIME aD
	SMALL_FIREBALL aE
	SNOWBALL aG
	SNOW_GOLEM aF
	SPAWNER_MINECART ae
	SPECTRAL_ARROW aH
	SPIDER aI
	SQUID aJ
	STRAY aK
	STRIDER aL
	TNT as
	TNT_MINECART af
	TRADER_LLAMA aR
	TRIDENT aQ
	TROPICAL_FISH aS
	TURTLE aT
	VEX aU
	VILLAGER aV
	VINDICATOR aW
	WANDERING_TRADER aX
	WITCH aY
	WITHER aZ
	WITHER_SKELETON ba
	WITHER_SKULL bb
	WOLF bc
	ZOGLIN bd
	ZOMBIE be
	ZOMBIE_HORSE bf
	ZOMBIE_VILLAGER bg
	ZOMBIFIED_PIGLIN bh
	canSpawnFarFromPlayer bs
	category bn
	clientTrackingRange bt
	description bw
	descriptionId bv
	dimensions by
	factory bm
	fireImmune br
	immuneTo bo
	lootTable bx
	serialize bp
	summon bq
	updateInterval bu
	by (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	byString (Ljava/lang/String;)Ljava/util/Optional; a
	canSerialize ()Z b
	canSpawnFarFromPlayer ()Z e
	canSummon ()Z c
	clientTrackingRange ()I n
	create (ILnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	create (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	create (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; b
	create (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/Entity; a
	fireImmune ()Z d
	getAABB (DDD)Lnet/minecraft/world/phys/AABB; a
	getBaseClass ()Ljava/lang/Class; a
	getCategory ()Lnet/minecraft/world/entity/MobCategory; f
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; j
	getDescription ()Lnet/minecraft/network/chat/Component; h
	getDescriptionId ()Ljava/lang/String; g
	getDimensions ()Lnet/minecraft/world/entity/EntityDimensions; m
	getHeight ()F l
	getKey (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/resources/ResourceLocation; a
	getWidth ()F k
	getYOffset (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/phys/AABB;)D a
	is (Lnet/minecraft/tags/Tag;)Z a
	isBlockDangerous (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	loadEntitiesRecursive (Ljava/util/List;Lnet/minecraft/world/level/Level;)Ljava/util/stream/Stream; a
	loadEntityRecursive (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;Ljava/util/function/Function;)Lnet/minecraft/world/entity/Entity; a
	loadStaticEntity (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; b
	register (Ljava/lang/String;Lnet/minecraft/world/entity/EntityType$Builder;)Lnet/minecraft/world/entity/EntityType; a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; a
	toShortString ()Ljava/lang/String; i
	trackDeltas ()Z p
	tryCast (Ljava/lang/Object;)Ljava/lang/Object; a
	tryCast (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; a
	updateCustomEntityTag (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/nbt/CompoundTag;)V a
	updateInterval ()I o
net/minecraft/world/entity/EntityType$Builder net/minecraft/world/entity/EntityTypes$Builder
	canSpawnFarFromPlayer g
	category b
	clientTrackingRange h
	dimensions j
	factory a
	fireImmune f
	immuneTo c
	serialize d
	summon e
	updateInterval i
	build (Ljava/lang/String;)Lnet/minecraft/world/entity/EntityType; a
	canSpawnFarFromPlayer ()Lnet/minecraft/world/entity/EntityType$Builder; d
	clientTrackingRange (I)Lnet/minecraft/world/entity/EntityType$Builder; a
	createNothing (Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/world/entity/EntityType$Builder; a
	fireImmune ()Lnet/minecraft/world/entity/EntityType$Builder; c
	immuneTo ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/entity/EntityType$Builder; a
	noSave ()Lnet/minecraft/world/entity/EntityType$Builder; b
	noSummon ()Lnet/minecraft/world/entity/EntityType$Builder; a
	of (Lnet/minecraft/world/entity/EntityType$EntityFactory;Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/world/entity/EntityType$Builder; a
	sized (FF)Lnet/minecraft/world/entity/EntityType$Builder; a
	updateInterval (I)Lnet/minecraft/world/entity/EntityType$Builder; b
net/minecraft/world/entity/EntityType$EntityFactory awx$b
net/minecraft/world/entity/EquipmentSlot net/minecraft/world/entity/EnumItemSlot
	$VALUES k
	CHEST e
	FEET c
	HEAD f
	LEGS d
	MAINHAND a
	OFFHAND b
	filterFlag i
	index h
	name j
	type g
	$values ()[Lnet/minecraft/world/entity/EquipmentSlot; e
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/EquipmentSlot; a
	byTypeAndIndex (Lnet/minecraft/world/entity/EquipmentSlot$Type;I)Lnet/minecraft/world/entity/EquipmentSlot; a
	getFilterFlag ()I c
	getIndex ()I b
	getIndex (I)I a
	getName ()Ljava/lang/String; d
	getType ()Lnet/minecraft/world/entity/EquipmentSlot$Type; a
net/minecraft/world/entity/EquipmentSlot$Type net/minecraft/world/entity/EnumItemSlot$Function
	$VALUES c
	ARMOR b
	HAND a
	$values ()[Lnet/minecraft/world/entity/EquipmentSlot$Type; a
net/minecraft/world/entity/ExperienceOrb net/minecraft/world/entity/EntityExperienceOrb
	ENTITY_SCAN_PERIOD c
	LIFETIME b
	MAX_FOLLOW_DIST d
	ORB_GROUPS_PER_AREA e
	ORB_MERGE_DISTANCE f
	age ap
	count as
	followingPlayer at
	health aq
	value ar
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	award (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;I)V a
	canMerge (Lnet/minecraft/world/entity/ExperienceOrb;)Z a
	canMerge (Lnet/minecraft/world/entity/ExperienceOrb;II)Z a
	defineSynchedData ()V a_
	doWaterSplashEffect ()V aY
	durabilityToXp (I)I b
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getExperienceValue (I)I a
	getIcon ()I i
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cO
	getValue ()I h
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAttackable ()Z cf
	merge (Lnet/minecraft/world/entity/ExperienceOrb;)V b
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	repairPlayerItems (Lnet/minecraft/world/entity/player/Player;I)I a
	scanForEntities ()V j
	setUnderwaterMovement ()V l
	tick ()V k
	tryMergeToExisting (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;I)Z b
	xpToDurability (I)I c
net/minecraft/world/entity/FlyingMob net/minecraft/world/entity/EntityFlying
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	onClimbable ()Z b_
	travel (Lnet/minecraft/world/phys/Vec3;)V h
net/minecraft/world/entity/HumanoidArm net/minecraft/world/entity/EnumMainHand
	$VALUES d
	LEFT a
	RIGHT b
	name c
	$values ()[Lnet/minecraft/world/entity/HumanoidArm; c
	getName ()Lnet/minecraft/network/chat/Component; b
	getOpposite ()Lnet/minecraft/world/entity/HumanoidArm; a
net/minecraft/world/entity/ItemBasedSteering net/minecraft/world/entity/SaddleStorage
	MAX_BOOST_TIME e
	MIN_BOOST_TIME d
	boostTime b
	boostTimeAccessor g
	boostTimeTotal c
	boosting a
	entityData f
	hasSaddleAccessor h
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	boost (Ljava/util/Random;)Z a
	hasSaddle ()Z b
	onSynced ()V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	setSaddle (Z)V a
net/minecraft/world/entity/ItemSteerable net/minecraft/world/entity/ISteerable
	boost ()Z a
	getSteeringSpeed ()F b
	travel (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ItemBasedSteering;Lnet/minecraft/world/phys/Vec3;)Z a
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/LightningBolt net/minecraft/world/entity/EntityLightning
	DAMAGE_RADIUS d
	DETECTION_RADIUS e
	START_LIFE c
	blocksSetOnFire at
	cause ar
	flashes ap
	hitEntities as
	life f
	seed b
	visualOnly aq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	clearCopperOnLightningStrike (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBlocksSetOnFire ()I i
	getCause ()Lnet/minecraft/server/level/ServerPlayer; h
	getHitEntities ()Ljava/util/stream/Stream; j
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cO
	getStrikePosition ()Lnet/minecraft/core/BlockPos; n
	powerLightningRod ()V l
	randomStepCleaningCopper (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; c
	randomWalkCleaningCopper (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCause (Lnet/minecraft/server/level/ServerPlayer;)V b
	setVisualOnly (Z)V a
	shouldRenderAtSqrDistance (D)Z a
	spawnFire (I)V a
	tick ()V k
net/minecraft/world/entity/LivingEntity net/minecraft/world/entity/EntityLiving
	ARMOR_SLOTS aq
	ARMOR_SLOT_OFFSET as
	DAMAGE_SOURCE_TIMEOUT bF
	DATA_ARROW_COUNT_ID bN
	DATA_EFFECT_AMBIENCE_ID bM
	DATA_EFFECT_COLOR_ID bL
	DATA_HEALTH_ID bK
	DATA_LIVING_ENTITY_FLAGS aC
	DATA_STINGER_COUNT_ID bO
	DEATH_DURATION ax
	DEFAULT_BASE_GRAVITY aw
	DEFAULT_EYE_HEIGHT aD
	EQUIPMENT_SLOT_OFFSET ar
	EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT aF
	FREE_FALL_EVENTS_PER_ELYTRA_BREAK bI
	HAND_SLOTS ap
	LIVING_ENTITY_FLAG_IS_USING az
	LIVING_ENTITY_FLAG_OFF_HAND aA
	LIVING_ENTITY_FLAG_SPIN_ATTACK aB
	MAX_LINE_OF_SIGHT_TEST_RANGE bJ
	MIN_MOVEMENT_DISTANCE av
	PLAYER_HURT_EXPERIENCE_TIME au
	SLEEPING_DIMENSIONS aE
	SLEEPING_POS_ID bP
	SPEED_MODIFIER_POWDER_SNOW_UUID d
	SPEED_MODIFIER_SOUL_SPEED_UUID c
	SPEED_MODIFIER_SPRINTING e
	SPEED_MODIFIER_SPRINTING_UUID b
	SWING_DURATION at
	TICKS_PER_ELYTRA_FREE_FALL_EVENT bH
	USE_ITEM_INTERVAL ay
	WAIT_TICKS_BEFORE_ITEM_USE_EFFECTS bG
	absorptionAmount cd
	activeEffects bS
	animStep bj
	animStepO bk
	animationPosition aU
	animationSpeed aT
	animationSpeedOld aS
	attackAnim aQ
	attackStrengthTicker aR
	attributes bQ
	autoSpinAttackTicks bD
	brain bE
	combatTracker bR
	dead bf
	deathScore bm
	deathTime aO
	discardFriction bV
	effectsDirty bW
	fallFlyTicks bC
	flyingSpeed bc
	hurtDir aN
	hurtDuration aM
	hurtTime aL
	invulnerableDuration aV
	jumping bo
	lastArmorItemStacks bU
	lastClimbablePos cf
	lastDamageSource cg
	lastDamageStamp ch
	lastHandItemStacks bT
	lastHurt bn
	lastHurtByMob bX
	lastHurtByMobTimestamp bY
	lastHurtByPlayer bd
	lastHurtByPlayerTime be
	lastHurtMob bZ
	lastHurtMobTimestamp ca
	lastPos ce
	lerpHeadSteps bz
	lerpSteps bs
	lerpX bt
	lerpXRot bx
	lerpY bu
	lerpYRot bw
	lerpZ bv
	lyHeadRot by
	noActionTime bg
	noJumpDelay cc
	oAttackAnim aP
	oRun bh
	removeArrowTime aJ
	removeStingerTime aK
	rotA aX
	rotOffs bl
	run bi
	speed cb
	swimAmount ci
	swimAmountO cj
	swingTime aI
	swinging aG
	swingingArm aH
	timeOffs aW
	useItem bA
	useItemRemaining bB
	xxa bp
	yBodyRot aY
	yBodyRotO aZ
	yHeadRot ba
	yHeadRotO bb
	yya bq
	zza br
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEatEffect (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)V a
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)Z b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)Z b
	aiStep ()V w_
	animateHurt ()V bA
	areAllEffectsAmbient (Ljava/util/Collection;)Z c
	attackable ()Z eX
	baseTick ()V an
	blockUsingShield (Lnet/minecraft/world/entity/LivingEntity;)V d
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; du
	breakItem (Lnet/minecraft/world/item/ItemStack;)V j
	broadcastBreakEvent (Lnet/minecraft/world/InteractionHand;)V d
	broadcastBreakEvent (Lnet/minecraft/world/entity/EquipmentSlot;)V c
	calculateEntityAnimation (Lnet/minecraft/world/entity/LivingEntity;Z)V a
	calculateFallDamage (FF)I d
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z a
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	canBeSeenAsEnemy ()Z dS
	canBeSeenByAnyone ()Z dT
	canBreatheUnderwater ()Z dw
	canFreeze ()Z dl
	canSpawnSoulSpeedParticle ()Z dx
	canStandOnFluid (Lnet/minecraft/world/level/material/Fluid;)Z a
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkAutoSpinAttack (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/AABB;)V a
	checkBedExists ()Z E
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkTotemDeathProtection (Lnet/minecraft/world/damagesource/DamageSource;)Z g
	clearSleepingPos ()V fa
	collectEquipmentChanges ()Ljava/util/Map; y
	completeUsingItem ()V v
	createEquipmentSlotAccess (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/entity/SlotAccess; a
	createLivingAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; dv
	createLootContext (ZLnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	createWitherRose (Lnet/minecraft/world/entity/LivingEntity;)V f
	decreaseAirSupply (I)I m
	defineSynchedData ()V a_
	detectEquipmentUpdates ()V x
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	dismountVehicle (Lnet/minecraft/world/entity/Entity;)V a
	doAutoAttackOnTouch (Lnet/minecraft/world/entity/LivingEntity;)V g
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	dropAllDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;)V f
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	dropEquipment ()V ec
	dropExperience ()V ed
	dropFromLootTable (Lnet/minecraft/world/damagesource/DamageSource;Z)V a
	eat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	entityEventForEquipmentBreak (Lnet/minecraft/world/entity/EquipmentSlot;)B f
	equipEventAndSound (Lnet/minecraft/world/item/ItemStack;)V c
	forceAddEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V c
	getAbsorptionAmount ()F eI
	getActiveEffects ()Ljava/util/Collection; dW
	getActiveEffectsMap ()Ljava/util/Map; dX
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getArmorCoverPercentage ()F et
	getArmorSlots ()Ljava/lang/Iterable; bC
	getArmorValue ()I ei
	getArrowCount ()I em
	getAttackAnim (F)F s
	getAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D c
	getAttributeValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D b
	getAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeMap; ep
	getBedOrientation ()Lnet/minecraft/core/Direction; fd
	getBlockSpeedFactor ()F aC
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cx
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dt
	getCombatTracker ()Lnet/minecraft/world/damagesource/CombatTracker; ej
	getCurrentSwingDuration ()I r
	getDamageAfterArmorAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F d
	getDamageAfterMagicAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F e
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDismountPoses ()Lcom/google/common/collect/ImmutableList; eY
	getDrinkingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; e
	getEffect (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; b
	getEquipmentSlot (I)Lnet/minecraft/world/entity/EquipmentSlot; d
	getEquipmentSlotForItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/EquipmentSlot; i
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; c
	getFallFlyingTicks ()I eV
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; ef
	getFluidFallingAdjustedMovement (DZLnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	getFrictionInfluencedSpeed (F)F u
	getHealth ()F dZ
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getItemInHand (Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/item/ItemStack; b
	getJumpBoostPower ()D ey
	getJumpPower ()F ex
	getKillCredit ()Lnet/minecraft/world/entity/LivingEntity; ek
	getLastArmorItem (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; d
	getLastClimbablePos ()Ljava/util/Optional; eg
	getLastDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; eb
	getLastHandItem (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; e
	getLastHurtByMob ()Lnet/minecraft/world/entity/LivingEntity; dL
	getLastHurtByMobTimestamp ()I dM
	getLastHurtMob ()Lnet/minecraft/world/entity/LivingEntity; dN
	getLastHurtMobTimestamp ()I dO
	getLocalBoundsForPose (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/phys/AABB; f
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; ee
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; eK
	getMainHandItem ()Lnet/minecraft/world/item/ItemStack; er
	getMaxHealth ()F el
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	getNoActionTime ()I dP
	getOffhandItem ()Lnet/minecraft/world/item/ItemStack; es
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; h
	getRandom ()Ljava/util/Random; dK
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getScale ()F dE
	getSleepingPos ()Ljava/util/Optional; eZ
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getSoundVolume ()F eu
	getSpeed ()F eC
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStingerCount ()I en
	getSwimAmount (F)F a
	getTicksUsingItem ()I eP
	getUseItem ()Lnet/minecraft/world/item/ItemStack; eN
	getUseItemRemainingTicks ()I eO
	getUsedItemHand ()Lnet/minecraft/world/InteractionHand; eM
	getViewYRot (F)F g
	getVisibilityPercent (Lnet/minecraft/world/entity/Entity;)D y
	getVoicePitch ()F ev
	getWaterSlowDown ()F eB
	getYHeadRot ()F ce
	goDownInWater ()V eA
	handleEntityEvent (B)V a
	handleEquipmentChanges (Ljava/util/Map;)V b
	handleHandSwap (Ljava/util/Map;)V a
	handleOnClimbable (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; j
	handleRelativeFrictionAndCalculateMovement (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	hasEffect (Lnet/minecraft/world/effect/MobEffect;)Z a
	hasItemInSlot (Lnet/minecraft/world/entity/EquipmentSlot;)Z a
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z B
	heal (F)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V b
	hurtCurrentlyUsedShield (F)V q
	hurtHelmet (Lnet/minecraft/world/damagesource/DamageSource;F)V c
	increaseAirSupply (I)I n
	isAffectedByFluids ()Z dF
	isAffectedByPotions ()Z eW
	isAlive ()Z bl
	isAlwaysExperienceDropper ()Z dJ
	isAutoSpinAttack ()Z eG
	isBaby ()Z y_
	isBlocking ()Z eS
	isCurrentlyGlowing ()Z bT
	isDamageSourceBlocked (Lnet/minecraft/world/damagesource/DamageSource;)Z e
	isDeadOrDying ()Z ea
	isEffectiveAi ()Z eH
	isFallFlying ()Z eU
	isHolding (Ljava/util/function/Predicate;)Z b
	isHolding (Lnet/minecraft/world/item/Item;)Z a
	isImmobile ()Z ew
	isInWall ()Z bm
	isInvertedHealAndHarm ()Z dY
	isPickable ()Z bh
	isPushable ()Z bi
	isSensitiveToWater ()Z eD
	isSleeping ()Z fb
	isSuppressingSlidingDownLadder ()Z eT
	isUsingItem ()Z eL
	isVisuallySwimming ()Z bQ
	jumpFromGround ()V ez
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	kill ()V ag
	knockback (DDD)V p
	lerpHeadTo (FI)V a
	lerpTo (DDDFFIZ)V a
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	makePoofParticles ()V u
	markHurt ()V bf
	onChangedBlock (Lnet/minecraft/core/BlockPos;)V c
	onClimbable ()Z b_
	onEffectAdded (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V a
	onEffectRemoved (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	onEffectUpdated (Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;)V a
	onEnterCombat ()V h
	onItemPickup (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onLeaveCombat ()V i
	onSoulSpeedBlock ()Z dz
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	outOfWorld ()V av
	playBlockFallSound ()V eh
	playHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)V d
	push (Lnet/minecraft/world/entity/Entity;)V g
	pushEntities ()V eF
	randomTeleport (DDDZ)Z a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddMobPacket;)V a
	releaseUsingItem ()V eQ
	removeAllEffects ()Z dV
	removeEffect (Lnet/minecraft/world/effect/MobEffect;)Z d
	removeEffectNoUpdate (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; c
	removeEffectParticles ()V dU
	removeFrost ()V dC
	removeSoulSpeed ()V dA
	resetForwardDirectionOfRelativePortalPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; i
	rideTick ()V bo
	rideableUnderWater ()Z bH
	serverAiStep ()V eE
	setAbsorptionAmount (F)V t
	setArrowCount (I)V p
	setDiscardFriction (Z)V p
	setHealth (F)V c
	setItemInHand (Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setJumping (Z)V q
	setLastArmorItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V b
	setLastHandItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V c
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setLastHurtByPlayer (Lnet/minecraft/world/entity/player/Player;)V e
	setLastHurtMob (Lnet/minecraft/world/entity/Entity;)V x
	setLivingEntityFlag (IZ)V c
	setNoActionTime (I)V o
	setOnGround (Z)V c
	setPosToBed (Lnet/minecraft/core/BlockPos;)V a
	setRecordPlayingNearby (Lnet/minecraft/core/BlockPos;Z)V a
	setSleepingPos (Lnet/minecraft/core/BlockPos;)V e
	setSpeed (F)V r
	setSprinting (Z)V g
	setStingerCount (I)V q
	setYBodyRot (F)V m
	setYHeadRot (F)V l
	shouldDiscardFriction ()Z dQ
	shouldDropExperience ()Z dH
	shouldDropLoot ()Z dI
	shouldRemoveSoulSpeed (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	shouldShowName ()Z cs
	shouldTriggerItemUseEffects ()Z C
	spawnItemParticles (Lnet/minecraft/world/item/ItemStack;I)V a
	spawnSoulSpeedParticle ()V dy
	startAutoSpinAttack (I)V r
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	startUsingItem (Lnet/minecraft/world/InteractionHand;)V c
	stopRiding ()V p
	stopSleeping ()V fc
	stopUsingItem ()V eR
	swapHandItems ()V w
	swing (Lnet/minecraft/world/InteractionHand;)V a
	swing (Lnet/minecraft/world/InteractionHand;Z)V a
	take (Lnet/minecraft/world/entity/Entity;I)V a
	tick ()V k
	tickDeath ()V dG
	tickEffects ()V dR
	tickHeadTurn (FF)F e
	trapdoorUsableAsLadder (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z c
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	triggerItemUseEffects (Lnet/minecraft/world/item/ItemStack;I)V b
	tryAddFrost ()V dD
	tryAddSoulSpeed ()V dB
	updateEffectVisibility ()V eJ
	updateFallFlying ()V z
	updateGlowingStatus ()V n
	updateInvisibilityStatus ()V F
	updateSwimAmount ()V D
	updateSwingTime ()V eo
	updateUsingItem (Lnet/minecraft/world/item/ItemStack;)V a
	updatingUsingItem ()V A
	verifyEquippedItem (Lnet/minecraft/world/item/ItemStack;)V f
net/minecraft/world/entity/LivingEntity$Fallsounds axh$a
	big b
	small a
	big ()Lnet/minecraft/sounds/SoundEvent; b
	small ()Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/entity/Mob net/minecraft/world/entity/EntityInsentient
	DATA_MOB_FLAGS_ID b
	DEFAULT_EQUIPMENT_DROP_CHANCE bJ
	LEASH_TAG bI
	MAX_ENCHANTED_ARMOR_CHANCE bG
	MAX_ENCHANTED_WEAPON_CHANCE bH
	MAX_PICKUP_LOOT_CHANCE bF
	MAX_WEARING_ARMOR_CHANCE f
	MOB_FLAG_AGGRESSIVE e
	MOB_FLAG_LEFTHANDED d
	MOB_FLAG_NO_AI c
	PICKUP_REACH bV
	UPDATE_GOAL_SELECTOR_EVERY_N_TICKS bK
	ambientSoundTime bL
	armorDropChances bU
	armorItems ca
	bodyRotationControl bW
	canPickUpLoot cb
	delayedLeashHolderId ch
	goalSelector bR
	handDropChances bT
	handItems bZ
	jumpControl bP
	leashHolder cg
	leashInfoTag ci
	lookControl bN
	lootTable ce
	lootTableSeed cf
	moveControl bO
	navigation bQ
	pathfindingMalus cd
	persistenceRequired cc
	restrictCenter cj
	restrictRadius ck
	sensing bY
	target bX
	targetSelector bS
	xpReward bM
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	ate ()V I
	baseTick ()V an
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canBeControlledByRider ()Z ff
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canCutCorner (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z b
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z k
	canPickUpLoot ()Z fh
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	canReplaceEqualItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	checkAndHandleImportantInteractions (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; c
	checkDespawn ()V dj
	checkMobSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkSpawnRules (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;)Z a
	clearRestriction ()V fm
	convertTo (Lnet/minecraft/world/entity/EntityType;Z)Lnet/minecraft/world/entity/Mob; a
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; y
	createLootContext (ZLnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	createMobAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V R
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	dropFromLootTable (Lnet/minecraft/world/damagesource/DamageSource;Z)V a
	dropLeash (ZZ)V a
	enchantSpawnedArmor (FLnet/minecraft/world/entity/EquipmentSlot;)V a
	enchantSpawnedWeapon (F)V x
	equipItemIfPossible (Lnet/minecraft/world/item/ItemStack;)Z j
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAmbientSoundInterval ()I J
	getArmorSlots ()Ljava/lang/Iterable; bC
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; N
	getEquipmentDropChance (Lnet/minecraft/world/entity/EquipmentSlot;)F e
	getEquipmentForSlot (Lnet/minecraft/world/entity/EquipmentSlot;I)Lnet/minecraft/world/item/Item; a
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHandSlots ()Ljava/lang/Iterable; bB
	getHeadRotSpeed ()I V
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getJumpControl ()Lnet/minecraft/world/entity/ai/control/JumpControl; C
	getLeashHolder ()Lnet/minecraft/world/entity/Entity; fq
	getLookControl ()Lnet/minecraft/world/entity/ai/control/LookControl; z
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; ee
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; eK
	getMaxFallDistance ()I cj
	getMaxHeadXRot ()I T
	getMaxHeadYRot ()I U
	getMaxSpawnClusterSize ()I fe
	getMeleeAttackRangeSqr (Lnet/minecraft/world/entity/LivingEntity;)D i
	getMoveControl ()Lnet/minecraft/world/entity/ai/control/MoveControl; A
	getNavigation ()Lnet/minecraft/world/entity/ai/navigation/PathNavigation; D
	getPathfindingMalus (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)F a
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dk
	getRestrictCenter ()Lnet/minecraft/core/BlockPos; fk
	getRestrictRadius ()F fl
	getSensing ()Lnet/minecraft/world/entity/ai/sensing/Sensing; E
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; G
	handleEntityEvent (B)V a
	hasRestriction ()Z fn
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAggressive ()Z ft
	isControlledByLocalInstance ()Z cM
	isEffectiveAi ()Z eH
	isLeashed ()Z fp
	isLeftHanded ()Z fs
	isMaxGroupSizeReached (I)Z c
	isNoAi ()Z fr
	isPersistenceRequired ()Z fi
	isSunBurnTick ()Z fu
	isWithinRestriction ()Z fj
	isWithinRestriction (Lnet/minecraft/core/BlockPos;)Z a
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	lookAt (Lnet/minecraft/world/entity/Entity;FF)V a
	maybeDisableShield (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onOffspringSpawnedFromEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playAmbientSound ()V K
	playHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)V d
	populateDefaultEquipmentEnchantments (Lnet/minecraft/world/DifficultyInstance;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	removeAfterChangingDimensions ()V ch
	removeFreeWill ()V fv
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z O
	resetAmbientSoundTime ()V n
	restoreLeashFromSave ()V fw
	restrictTo (Lnet/minecraft/core/BlockPos;I)V a
	rotlerp (FFF)F a
	sendDebugPackets ()V Q
	serverAiStep ()V eE
	setAggressive (Z)V u
	setBaby (Z)V a
	setCanPickUpLoot (Z)V r
	setDelayedLeashHolderId (I)V d
	setDropChance (Lnet/minecraft/world/entity/EquipmentSlot;F)V a
	setGuaranteedDrop (Lnet/minecraft/world/entity/EquipmentSlot;)V d
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setItemSlotAndDropWhenKilled (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V b
	setLeashedTo (Lnet/minecraft/world/entity/Entity;Z)V b
	setLeftHanded (Z)V t
	setNoAi (Z)V s
	setPathfindingMalus (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;F)V a
	setPersistenceRequired ()V fg
	setSpeed (F)V r
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	setXxa (F)V w
	setYya (F)V v
	setZza (F)V u
	shouldDespawnInPeaceful ()Z P
	shouldPassengersInheritMalus ()Z x
	spawnAnim ()V L
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	tick ()V k
	tickHeadTurn (FF)F e
	tickLeash ()V fo
	updateControlFlags ()V M
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/MobCategory net/minecraft/world/entity/EnumCreatureType
	$VALUES q
	AMBIENT c
	AXOLOTLS d
	BY_NAME j
	CODEC i
	CREATURE b
	MISC h
	MONSTER a
	UNDERGROUND_WATER_CREATURE e
	WATER_AMBIENT g
	WATER_CREATURE f
	despawnDistance p
	isFriendly l
	isPersistent m
	max k
	name n
	noDespawnDistance o
	$values ()[Lnet/minecraft/world/entity/MobCategory; h
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/MobCategory; a
	getDespawnDistance ()I f
	getMaxInstancesPerChunk ()I b
	getName ()Ljava/lang/String; a
	getNoDespawnDistance ()I g
	getSerializedName ()Ljava/lang/String; c
	isFriendly ()Z d
	isPersistent ()Z e
net/minecraft/world/entity/MobSpawnType net/minecraft/world/entity/EnumMobSpawn
	$VALUES q
	BREEDING e
	BUCKET l
	CHUNK_GENERATION b
	COMMAND n
	CONVERSION i
	DISPENSER o
	EVENT h
	JOCKEY g
	MOB_SUMMONED f
	NATURAL a
	PATROL p
	REINFORCEMENT j
	SPAWNER c
	SPAWN_EGG m
	STRUCTURE d
	TRIGGERED k
	$values ()[Lnet/minecraft/world/entity/MobSpawnType; a
net/minecraft/world/entity/MobType net/minecraft/world/entity/EnumMonsterType
	ARTHROPOD c
	ILLAGER d
	UNDEAD b
	UNDEFINED a
	WATER e
net/minecraft/world/entity/MoverType net/minecraft/world/entity/EnumMoveType
	$VALUES f
	PISTON c
	PLAYER b
	SELF a
	SHULKER e
	SHULKER_BOX d
	$values ()[Lnet/minecraft/world/entity/MoverType; a
net/minecraft/world/entity/NeutralMob net/minecraft/world/entity/IEntityAngerable
	TAG_ANGER_TIME a_
	TAG_ANGRY_AT b_
	addPersistentAngerSaveData (Lnet/minecraft/nbt/CompoundTag;)V c
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	forgetCurrentTargetAndRefreshUniversalAnger ()V I_
	getLastHurtByMob ()Lnet/minecraft/world/entity/LivingEntity; dL
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; G
	isAngry ()Z H_
	isAngryAt (Lnet/minecraft/world/entity/LivingEntity;)Z a_
	isAngryAtAllPlayers (Lnet/minecraft/world/level/Level;)Z b
	playerDied (Lnet/minecraft/world/entity/player/Player;)V a_
	readPersistentAngerSaveData (Lnet/minecraft/world/level/Level;Lnet/minecraft/nbt/CompoundTag;)V a
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setLastHurtByPlayer (Lnet/minecraft/world/entity/player/Player;)V e
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
	stopBeingAngry ()V G_
	updatePersistentAnger (Lnet/minecraft/server/level/ServerLevel;Z)V a
net/minecraft/world/entity/PathfinderMob net/minecraft/world/entity/EntityCreature
	DEFAULT_WALK_TARGET_VALUE bV
	checkSpawnRules (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;)Z a
	followLeashSpeed ()D fx
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;)F f
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isPathFinding ()Z fw
	onLeashDistance (F)V y
	tickLeash ()V fo
net/minecraft/world/entity/PlayerRideableJumping net/minecraft/world/entity/IJumpable
	canJump ()Z a
	handleStartJump (I)V b
	handleStopJump ()V b
	onPlayerJump (I)V a
net/minecraft/world/entity/Pose net/minecraft/world/entity/EntityPose
	$VALUES i
	CROUCHING f
	DYING h
	FALL_FLYING b
	LONG_JUMPING g
	SLEEPING c
	SPIN_ATTACK e
	STANDING a
	SWIMMING d
	$values ()[Lnet/minecraft/world/entity/Pose; a
net/minecraft/world/entity/ReputationEventHandler net/minecraft/world/entity/ReputationHandler
	onReputationEventFrom (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/entity/Saddleable net/minecraft/world/entity/ISaddleable
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	isSaddleable ()Z c
	isSaddled ()Z d
net/minecraft/world/entity/Shearable net/minecraft/world/entity/IShearable
	readyForShearing ()Z a
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/SpawnGroupData net/minecraft/world/entity/GroupDataEntity
net/minecraft/world/entity/SpawnPlacements net/minecraft/world/entity/EntityPositionTypes
	DATA_BY_TYPE a
	checkSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	getHeightmapType (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; b
	getPlacementType (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/SpawnPlacements$Type; a
	register (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/entity/SpawnPlacements$SpawnPredicate;)V a
net/minecraft/world/entity/SpawnPlacements$Data aya$a
	heightMap a
	placement b
	predicate c
net/minecraft/world/entity/SpawnPlacements$SpawnPredicate aya$b
net/minecraft/world/entity/SpawnPlacements$Type net/minecraft/world/entity/EntityPositionTypes$Surface
	$VALUES e
	IN_LAVA d
	IN_WATER b
	NO_RESTRICTIONS c
	ON_GROUND a
	$values ()[Lnet/minecraft/world/entity/SpawnPlacements$Type; a
net/minecraft/world/entity/TamableAnimal net/minecraft/world/entity/EntityTameableAnimal
	DATA_FLAGS_ID bW
	DATA_OWNERUUID_ID bX
	orderedToSit bZ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getOwner ()Lnet/minecraft/world/entity/Entity; e
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; fz
	getOwnerUUID ()Ljava/util/UUID; d
	getTeam ()Lnet/minecraft/world/scores/Team; bW
	handleEntityEvent (B)V a
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	isInSittingPose ()Z fy
	isOrderedToSit ()Z fA
	isOwnedBy (Lnet/minecraft/world/entity/LivingEntity;)Z j
	isTame ()Z q
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTameGoals ()V t
	setInSittingPose (Z)V x
	setOrderedToSit (Z)V y
	setOwnerUUID (Ljava/util/UUID;)V b
	setTame (Z)V w
	spawnTamingParticles (Z)V v
	tame (Lnet/minecraft/world/entity/player/Player;)V f
	wantsToAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/Brain net/minecraft/world/entity/ai/BehaviorController
	LOGGER a
	SCHEDULE_UPDATE_DELAY c
	activeActivities k
	activityMemoriesToEraseWhenStopped i
	activityRequirements h
	availableBehaviorsByPriority f
	codec b
	coreActivities j
	defaultActivity l
	lastScheduleUpdate m
	memories d
	schedule g
	sensors e
	activityRequirementsAreMet (Lnet/minecraft/world/entity/schedule/Activity;)Z f
	addActivity (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;)V a
	addActivity (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;)V a
	addActivityAndRemoveMemoriesWhenStopped (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V a
	addActivityAndRemoveMemoryWhenStopped (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V a
	addActivityWithConditions (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V a
	checkMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryStatus;)Z a
	codec (Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec; b
	copyWithoutBehaviors ()Lnet/minecraft/world/entity/ai/Brain; h
	createPriorityPairs (ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList; a
	eraseMemoriesForOtherActivitesThan (Lnet/minecraft/world/entity/schedule/Activity;)V e
	eraseMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V b
	forgetOutdatedMemories ()V j
	getActiveActivities ()Ljava/util/Set; c
	getActiveNonCoreActivity ()Ljava/util/Optional; f
	getMemories ()Ljava/util/Map; a
	getMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; c
	getRunningBehaviors ()Ljava/util/List; d
	getSchedule ()Lnet/minecraft/world/entity/schedule/Schedule; b
	getTimeUntilExpiry (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)J d
	hasMemoryValue (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Z a
	isActive (Lnet/minecraft/world/entity/schedule/Activity;)Z c
	isEmptyCollection (Ljava/lang/Object;)Z a
	isMemoryValue (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)Z b
	memories ()Ljava/util/stream/Stream; i
	provider (Ljava/util/Collection;Ljava/util/Collection;)Lnet/minecraft/world/entity/ai/Brain$Provider; a
	removeAllBehaviors ()V g
	serializeStart (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; a
	setActiveActivity (Lnet/minecraft/world/entity/schedule/Activity;)V d
	setActiveActivityIfPossible (Lnet/minecraft/world/entity/schedule/Activity;)V a
	setActiveActivityToFirstValid (Ljava/util/List;)V a
	setCoreActivities (Ljava/util/Set;)V a
	setDefaultActivity (Lnet/minecraft/world/entity/schedule/Activity;)V b
	setMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)V a
	setMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V a
	setMemoryInternal (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V b
	setMemoryWithExpiry (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;J)V a
	setSchedule (Lnet/minecraft/world/entity/schedule/Schedule;)V a
	startEachNonRunningBehavior (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V d
	stopAll (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	tickEachRunningBehavior (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V e
	tickSensors (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V c
	updateActivityFromSchedule (JJ)V a
	useDefaultActivity ()V e
net/minecraft/world/entity/ai/Brain$MemoryValue ayc$a
	type a
	value b
	createUnchecked (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/Brain$MemoryValue; a
	serialize (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V a
	setMemoryInternal (Lnet/minecraft/world/entity/ai/Brain;)V a
net/minecraft/world/entity/ai/Brain$Provider ayc$b
	codec c
	memoryTypes a
	sensorTypes b
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
net/minecraft/world/entity/ai/attributes/Attribute net/minecraft/world/entity/ai/attributes/AttributeBase
	MAX_NAME_LENGTH a
	defaultValue b
	descriptionId d
	syncable c
	getDefaultValue ()D a
	getDescriptionId ()Ljava/lang/String; c
	isClientSyncable ()Z b
	sanitizeValue (D)D a
	setSyncable (Z)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
net/minecraft/world/entity/ai/attributes/AttributeInstance net/minecraft/world/entity/ai/attributes/AttributeModifiable
	attribute a
	baseValue e
	cachedValue g
	dirty f
	modifierById c
	modifiersByOperation b
	onDirty h
	permanentModifiers d
	addModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V e
	addPermanentModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V c
	addTransientModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V b
	calculateValue ()D h
	getAttribute ()Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getBaseValue ()D b
	getModifier (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	getModifiers ()Ljava/util/Set; c
	getModifiers (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Set; a
	getModifiersOrEmpty (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Collection; b
	getValue ()D f
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)Z a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeModifier (Ljava/util/UUID;)V b
	removeModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V d
	removeModifiers ()V e
	removePermanentModifier (Ljava/util/UUID;)Z c
	replaceFrom (Lnet/minecraft/world/entity/ai/attributes/AttributeInstance;)V a
	save ()Lnet/minecraft/nbt/CompoundTag; g
	setBaseValue (D)V a
	setDirty ()V d
net/minecraft/world/entity/ai/attributes/AttributeMap net/minecraft/world/entity/ai/attributes/AttributeMapBase
	LOGGER a
	attributes b
	dirtyAttributes c
	supplier d
	addTransientAttributeModifiers (Lcom/google/common/collect/Multimap;)V b
	assignValues (Lnet/minecraft/world/entity/ai/attributes/AttributeMap;)V a
	getBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D d
	getDirtyAttributes ()Ljava/util/Set; a
	getInstance (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getModifierValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)D b
	getSyncableAttributes ()Ljava/util/Collection; b
	getValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D c
	hasAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Z b
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)Z a
	load (Lnet/minecraft/nbt/ListTag;)V a
	onAttributeModified (Lnet/minecraft/world/entity/ai/attributes/AttributeInstance;)V a
	removeAttributeModifiers (Lcom/google/common/collect/Multimap;)V a
	save ()Lnet/minecraft/nbt/ListTag; c
net/minecraft/world/entity/ai/attributes/AttributeSupplier net/minecraft/world/entity/ai/attributes/AttributeProvider
	instances a
	builder ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	createInstance (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeInstance (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; d
	getBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D b
	getModifierValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)D a
	getValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D a
	hasAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Z c
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)Z b
net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder net/minecraft/world/entity/ai/attributes/AttributeProvider$Builder
	builder a
	instanceFrozen b
	add (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	add (Lnet/minecraft/world/entity/ai/attributes/Attribute;D)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	build ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier; a
	create (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; b
net/minecraft/world/entity/ai/attributes/Attributes net/minecraft/world/entity/ai/attributes/GenericAttributes
	ARMOR i
	ARMOR_TOUGHNESS j
	ATTACK_DAMAGE f
	ATTACK_KNOCKBACK g
	ATTACK_SPEED h
	FLYING_SPEED e
	FOLLOW_RANGE b
	JUMP_STRENGTH m
	KNOCKBACK_RESISTANCE c
	LUCK k
	MAX_HEALTH a
	MOVEMENT_SPEED d
	SPAWN_REINFORCEMENTS_CHANCE l
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
net/minecraft/world/entity/ai/attributes/DefaultAttributes net/minecraft/world/entity/ai/attributes/AttributeDefaults
	LOGGER a
	SUPPLIERS b
	getSupplier (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier; a
	hasSupplier (Lnet/minecraft/world/entity/EntityType;)Z b
	validate ()V a
net/minecraft/world/entity/ai/attributes/RangedAttribute net/minecraft/world/entity/ai/attributes/AttributeRanged
	maxValue c
	minValue b
	getMaxValue ()D e
	getMinValue ()D d
	sanitizeValue (D)D a
net/minecraft/world/entity/ai/behavior/AcquirePoi net/minecraft/world/entity/ai/behavior/BehaviorFindPosition
	BATCH_SIZE c
	RATE d
	SCAN_RANGE a
	batchCache j
	memoryToAcquire f
	nextScheduledStart i
	onPoiAcquisitionEvent h
	onlyIfAdult g
	poiType e
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	constructEntryConditionMap (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lcom/google/common/collect/ImmutableMap; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry aym$a
	MAX_INTERVAL_INCREASE b
	MAX_RETRY_PATHFINDING_INTERVAL c
	MIN_INTERVAL_INCREASE a
	currentDelay g
	nextScheduledAttemptTimestamp f
	previousAttemptTimestamp e
	random d
	isStillValid (J)Z b
	markAttempt (J)V a
	shouldRetry (J)Z c
net/minecraft/world/entity/ai/behavior/AnimalMakeLove net/minecraft/world/entity/ai/behavior/BehaviorMakeLoveAnimal
	BREED_RANGE a
	MAX_DURATION d
	MIN_DURATION c
	partnerType e
	spawnChildAtTime g
	speedModifier f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)Z a
	findValidBreedPartner (Lnet/minecraft/world/entity/animal/Animal;)Ljava/util/Optional; c
	getBreedTarget (Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/entity/animal/Animal; a
	hasBreedTargetOfRightType (Lnet/minecraft/world/entity/animal/Animal;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V c
net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite net/minecraft/world/entity/ai/behavior/BehaviorCareer
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/BabyFollowAdult net/minecraft/world/entity/ai/behavior/BehaviorFollowAdult
	followRange a
	speedModifier c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getNearestAdult (Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/BackUpIfTooClose net/minecraft/world/entity/ai/behavior/BehaviorRetreat
	strafeSpeed c
	tooCloseDistance a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; c
	isTargetTooClose (Lnet/minecraft/world/entity/Mob;)Z b
	isTargetVisible (Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent net/minecraft/world/entity/ai/behavior/BehaviorPacify
	pacifyDuration a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/BehaviorUtils net/minecraft/world/entity/ai/behavior/BehaviorUtil
	canSee (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z b
	entityIsVisible (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/LivingEntity;)Z a
	findSectionClosestToVillage (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/SectionPos;I)Lnet/minecraft/core/SectionPos; a
	getLivingEntityFromUUIDMemory (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; a
	getNearbyVillagersWithCondition (Lnet/minecraft/world/entity/npc/Villager;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; a
	getNearestTarget (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/Optional;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	getRandomSwimmablePos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getTargetNearestMe (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	isOtherTargetMuchFurtherAwayThanCurrentAttackTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;D)Z a
	isWithinAttackRange (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;I)Z a
	isWithinMeleeAttackRange (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)Z a
	lockGazeAndWalkToEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;F)V a
	lookAtEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V c
	lookAtEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;FI)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;FI)V a
	setWalkAndLookTargetMemoriesToEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;F)V b
	targetIsValid (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/function/Predicate;)Z a
	targetIsValid (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/EntityType;)Z a
	throwItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/ai/behavior/BlockPosTracker net/minecraft/world/entity/ai/behavior/BehaviorTarget
	blockPos a
	centerPosition b
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid net/minecraft/world/entity/ai/behavior/BehaviorCelebrate
	currentRaid a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getFirework (Lnet/minecraft/world/item/DyeColor;I)Lnet/minecraft/world/item/ItemStack; a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry net/minecraft/world/entity/ai/behavior/BehaviorExpirableMemory
	durationOfCopy e
	predicate a
	sourceMemory c
	targetMemory d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/CrossbowAttack net/minecraft/world/entity/ai/behavior/BehaviorCrossbowAttack
	TIMEOUT a
	attackDelay c
	crossbowState d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	crossbowAttack (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	getAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	lookAtTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState net/minecraft/world/entity/ai/behavior/BehaviorCrossbowAttack$BowState
	$VALUES e
	CHARGED c
	CHARGING b
	READY_TO_ATTACK d
	UNCHARGED a
	$values ()[Lnet/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState; a
net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting net/minecraft/world/entity/ai/behavior/BehaviorStopRiding
	dontRideIf c
	maxWalkDistToRideTarget a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isVehicleValid (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/DoNothing net/minecraft/world/entity/ai/behavior/BehaviorNop
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
net/minecraft/world/entity/ai/behavior/EntityTracker net/minecraft/world/entity/ai/behavior/BehaviorPositionEntity
	entity a
	trackEyeHeight b
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	getEntity ()Lnet/minecraft/world/entity/Entity; c
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/EraseMemoryIf net/minecraft/world/entity/ai/behavior/BehaviorRemoveMemory
	memoryType c
	predicate a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/GateBehavior net/minecraft/world/entity/ai/behavior/BehaviorGate
	behaviors e
	exitErasedMemories a
	orderPolicy c
	runningPolicy d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy net/minecraft/world/entity/ai/behavior/BehaviorGate$Order
	$VALUES d
	ORDERED a
	SHUFFLED b
	consumer c
	$values ()[Lnet/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy; a
	apply (Lnet/minecraft/world/entity/ai/behavior/ShufflingList;)V a
net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy net/minecraft/world/entity/ai/behavior/BehaviorGate$Execution
	$VALUES c
	RUN_ONE a
	TRY_ALL b
	$values ()[Lnet/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy; a
	apply (Ljava/util/stream/Stream;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/GiveGiftToHero net/minecraft/world/entity/ai/behavior/BehaviorVillageHeroGift
	GIFTS f
	MAX_TIME_BETWEEN_GIFTS d
	MIN_TIME_BETWEEN_GIFTS c
	SPEED_MODIFIER g
	THROW_GIFT_AT_DISTANCE a
	TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING e
	giftGivenDuringThisRun i
	timeSinceStart j
	timeUntilNextGift h
	calculateTimeUntilNextGift (Lnet/minecraft/server/level/ServerLevel;)I a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getItemToThrow (Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/List; a
	getNearestTargetableHero (Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; c
	isHero (Lnet/minecraft/world/entity/player/Player;)Z a
	isHeroVisible (Lnet/minecraft/world/entity/npc/Villager;)Z b
	isWithinThrowingDistance (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/player/Player;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	throwGift (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/LivingEntity;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/GoOutsideToCelebrate net/minecraft/world/entity/ai/behavior/BehaviorOutsideCelebrate
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/GoToCelebrateLocation net/minecraft/world/entity/ai/behavior/BehaviorCelebrateLocation
	closeEnoughDist a
	speedModifier c
	getCelebrateLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/core/BlockPos; a
	getNearbyPos (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getRandomOffset (Ljava/util/Random;)I a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/GoToClosestVillage net/minecraft/world/entity/ai/behavior/BehaviorNearestVillage
	closeEnoughDistance c
	speedModifier a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite net/minecraft/world/entity/ai/behavior/BehaviorPotentialJobSite
	TICKS_UNTIL_TIMEOUT c
	speedModifier a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
net/minecraft/world/entity/ai/behavior/GoToWantedItem net/minecraft/world/entity/ai/behavior/BehaviorFindAdmirableItem
	maxDistToWalk c
	predicate a
	speedModifier d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getClosestLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/item/ItemEntity; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/HarvestFarmland net/minecraft/world/entity/ai/behavior/BehaviorFarm
	HARVEST_DURATION c
	SPEED_MODIFIER a
	aboveFarmlandPos d
	nextOkStartTime e
	timeWorkedSoFar f
	validFarmlandAroundVillager g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getValidFarmland (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/core/BlockPos; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	validPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/behavior/InsideBrownianWalk net/minecraft/world/entity/ai/behavior/BehaviorStrollInside
	speedModifier a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/InteractWith net/minecraft/world/entity/ai/behavior/BehaviorInteract
	interactionRangeSqr e
	maxDist a
	memory h
	selfFilter g
	speedModifier c
	targetFilter f
	type d
	canInteract (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isTargetValid (Lnet/minecraft/world/entity/LivingEntity;)Z b
	of (Lnet/minecraft/world/entity/EntityType;ILjava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/InteractWith; a
	of (Lnet/minecraft/world/entity/EntityType;ILnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/InteractWith; a
	seesAtLeastOneValidTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/InteractWithDoor net/minecraft/world/entity/ai/behavior/BehaviorInteractDoor
	COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE a
	MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS d
	SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN c
	lastCheckedNode e
	remainingCooldown f
	areOtherMobsComingThroughDoor (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	closeDoorsThatIHaveOpenedOrPassedThrough (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)V a
	isDoorTooFarAway (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/GlobalPos;)Z a
	isMobComingThroughDoor (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z b
	rememberDoorToClose (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)V c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/JumpOnBed net/minecraft/world/entity/ai/behavior/BehaviorBedJump
	COOLDOWN_BETWEEN_JUMPS e
	MAX_JUMPS d
	MAX_TIME_TO_REACH_BED a
	MIN_JUMPS c
	remainingCooldownUntilNextJump j
	remainingJumps i
	remainingTimeToReachBed h
	speedModifier f
	targetBed g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getNearestBed (Lnet/minecraft/world/entity/Mob;)Ljava/util/Optional; a
	isBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	nearBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z b
	onBedSurface (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z d
	onOrOverBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
	startWalkingTowardsBed (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	timedOut (J)Z a
	tiredOfJumping (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z f
	tiredOfWalking (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z e
net/minecraft/world/entity/ai/behavior/LocateHidingPlace net/minecraft/world/entity/ai/behavior/BehaviorHome
	closeEnoughDist d
	currentPos e
	radius c
	speedModifier a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/LocateHidingPlaceDuringRaid net/minecraft/world/entity/ai/behavior/BehaviorHomeRaid
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos$PossibleJump azu$a
	jumpTarget a
	jumpVector b
	getJumpTarget ()Lnet/minecraft/core/BlockPos; b
	getJumpVector ()Lnet/minecraft/world/phys/Vec3; c
net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink net/minecraft/world/entity/ai/behavior/BehaviorInteractPlayer
	speedModifier a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	followPlayer (Lnet/minecraft/world/entity/npc/Villager;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/LookAtTargetSink net/minecraft/world/entity/ai/behavior/BehaviorLook
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/MeleeAttack net/minecraft/world/entity/ai/behavior/BehaviorAttack
	cooldownBetweenAttacks a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getAttackTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; b
	isHoldingUsableProjectileWeapon (Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/Mount net/minecraft/world/entity/ai/behavior/BehaviorStartRiding
	CLOSE_ENOUGH_TO_START_RIDING_DIST a
	speedModifier c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getRidableEntity (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/Entity; b
	isCloseEnoughToStartRiding (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot net/minecraft/world/entity/ai/behavior/BehaviorOutside
	speedModifier a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getOutdoorPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	hasNoBlocksAbove (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/MoveToTargetSink net/minecraft/world/entity/ai/behavior/BehavorMove
	MAX_COOLDOWN_BEFORE_RETRYING a
	lastTargetPos e
	path d
	remainingCooldown c
	speedModifier f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	reachedTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/memory/WalkTarget;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	tryComputePath (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/memory/WalkTarget;J)Z a
net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids net/minecraft/world/entity/ai/behavior/BehaviorPlay
	AVERAGE_WAIT_TIME_BETWEEN_RUNS g
	CHASE_SPEED_MODIFIER e
	FLEE_SPEED_MODIFIER d
	MAX_CHASERS_PER_TARGET f
	MAX_FLEE_XZ_DIST a
	MAX_FLEE_Y_DIST c
	chaseKid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	checkHowManyChasersEachFriendHas (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Map; c
	findSomeoneBeingChased (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; b
	findSomeoneToChase (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; a
	fleeFromChaser (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V a
	getFriendsNearby (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/List; d
	hasFriendsNearby (Lnet/minecraft/world/entity/PathfinderMob;)Z e
	isChasingSomeone (Lnet/minecraft/world/entity/LivingEntity;)Z c
	isFriendChasingMe (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	seeIfSomeoneIsChasingMe (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
	whoAreYouChasing (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
net/minecraft/world/entity/ai/behavior/PoiCompetitorScan net/minecraft/world/entity/ai/behavior/BehaviorBetterJob
	profession a
	competesForSameJobsite (Lnet/minecraft/core/GlobalPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/world/entity/npc/Villager;)Z a
	hasJobSite (Lnet/minecraft/world/entity/npc/Villager;)Z a
	hasMatchingProfession (Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/world/entity/npc/VillagerProfession;)Z a
	selectWinner (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/world/entity/npc/Villager; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/PositionTracker net/minecraft/world/entity/ai/behavior/BehaviorPosition
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$RamCandidate bae$a
	startPosition a
	target c
	targetPosition b
	getStartPosition ()Lnet/minecraft/core/BlockPos; a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; c
	getTargetPosition ()Lnet/minecraft/core/BlockPos; b
net/minecraft/world/entity/ai/behavior/RandomStroll net/minecraft/world/entity/ai/behavior/BehaviorStrollRandomUnconstrained
	MAX_XZ_DIST d
	MAX_Y_DIST e
	maxHorizontalDistance a
	maxVerticalDistance c
	mayStrollFromWater g
	speedModifier f
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	getTargetPos (Lnet/minecraft/world/entity/PathfinderMob;)Lnet/minecraft/world/phys/Vec3; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/ReactToBell net/minecraft/world/entity/ai/behavior/BehaviorBellAlert
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/ResetProfession net/minecraft/world/entity/ai/behavior/BehaviorProfession
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/ResetRaidStatus net/minecraft/world/entity/ai/behavior/BehaviorRaidReset
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/RingBell net/minecraft/world/entity/ai/behavior/BehaviorBellRing
	BELL_RING_CHANCE c
	RING_BELL_FROM_DISTANCE a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/RunIf net/minecraft/world/entity/ai/behavior/BehaviorRunIf
	checkWhileRunningAlso d
	predicate a
	wrappedBehavior c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	mergeMaps (Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/RunOne net/minecraft/world/entity/ai/behavior/BehaviorGateSingle
net/minecraft/world/entity/ai/behavior/RunSometimes net/minecraft/world/entity/ai/behavior/BehaviorRunSometimes
	interval d
	resetTicks a
	ticksUntilNextStart f
	wasRunning c
	wrappedBehavior e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	resetTicksUntilNextStart (Lnet/minecraft/server/level/ServerLevel;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget net/minecraft/world/entity/ai/behavior/BehaviorWalkHome
	BATCH_SIZE c
	CACHE_TIMEOUT a
	OK_DISTANCE_SQR e
	RATE d
	batchCache g
	lastUpdate i
	speedModifier f
	triedCount h
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetEntityLookTarget net/minecraft/world/entity/ai/behavior/BehaviorLookTarget
	maxDistSqr c
	nearestEntityMatchingTest d
	predicate a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetHiddenState net/minecraft/world/entity/ai/behavior/BehaviorHide
	HIDE_TIMEOUT a
	closeEnoughDist c
	stayHiddenTicks d
	ticksHidden e
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetLookAndInteract net/minecraft/world/entity/ai/behavior/BehaviorLookInteract
	interactionRangeSqr c
	selfFilter e
	targetFilter d
	type a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities; b
	isMatchingTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetRaidStatus net/minecraft/world/entity/ai/behavior/BehaviorRaid
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom net/minecraft/world/entity/ai/behavior/BehaviorWalkAway
	desiredDistance d
	speedModifier c
	toPosition e
	walkAwayFromMemory a
	alreadyWalkingAwayFromPosWithSameSpeed (Lnet/minecraft/world/entity/PathfinderMob;)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	entity (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; b
	getPosToAvoid (Lnet/minecraft/world/entity/PathfinderMob;)Lnet/minecraft/world/phys/Vec3; a
	moveAwayFrom (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/phys/Vec3;F)V a
	pos (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach net/minecraft/world/entity/ai/behavior/BehaviorWalkAwayOutOfRange
	PROJECTILE_ATTACK_RANGE_BUFFER a
	speedModifier c
	clearWalkTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	setWalkAndLookTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory net/minecraft/world/entity/ai/behavior/BehaviorWalkAwayBlock
	closeEnoughDist d
	memoryType a
	speedModifier c
	tooFarDistance e
	tooLongUnreachableDuration f
	closeEnough (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;)Z a
	dropPOI (Lnet/minecraft/world/entity/npc/Villager;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	tiredOfTryingToFindTarget (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	tooFar (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;)Z a
	wrongDimension (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/GlobalPos;)Z a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget net/minecraft/world/entity/ai/behavior/BehaviorLookWalk
	canSetWalkTargetPredicate d
	closeEnoughDistance c
	speedModifier a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer net/minecraft/world/entity/ai/behavior/BehaviorTradePlayer
	MAX_LOOK_TIME a
	STARTING_LOOK_TIME c
	cycleCounter f
	displayIndex g
	displayItems e
	lookTime h
	playerItemStack d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	clearHeldItem (Lnet/minecraft/world/entity/npc/Villager;)V c
	displayAsHeldItem (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/item/ItemStack;)V a
	displayCyclingItems (Lnet/minecraft/world/entity/npc/Villager;)V e
	displayFirstItem (Lnet/minecraft/world/entity/npc/Villager;)V a
	findItemsToDisplay (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/npc/Villager;)V a
	lookAtTarget (Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/world/entity/LivingEntity; d
	playerItemStackMatchesCostOfOffer (Lnet/minecraft/world/item/trading/MerchantOffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	updateDisplayItems (Lnet/minecraft/world/entity/npc/Villager;)V b
net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry baz$a
	data a
	randWeight c
	weight b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getData ()Ljava/lang/Object; a
	getRandWeight ()D c
	getWeight ()I b
	setRandom (F)V a
net/minecraft/world/entity/ai/behavior/SleepInBed net/minecraft/world/entity/ai/behavior/BehaviorSleep
	COOLDOWN_AFTER_BEING_WOKEN a
	nextOkStartTime c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/SocializeAtBell net/minecraft/world/entity/ai/behavior/BehaviorBell
	SPEED_MODIFIER a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/StartAttacking net/minecraft/world/entity/ai/behavior/BehaviorAttackTargetSet
	canAttackPredicate a
	targetFinderFunction c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	setAttackTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead net/minecraft/world/entity/ai/behavior/BehaviorCelebrateDeath
	celebrateDuration a
	dancePredicate c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid net/minecraft/world/entity/ai/behavior/BehaviorAttackTargetForget
	TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE a
	onTargetErased d
	stopAttackingWhen c
	clearAttackTarget (Lnet/minecraft/world/entity/Mob;)V a
	getAttackTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; c
	isCurrentTargetDeadOrRemoved (Lnet/minecraft/world/entity/Mob;)Z d
	isCurrentTargetInDifferentLevel (Lnet/minecraft/world/entity/Mob;)Z b
	isTiredOfTryingToReachTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead net/minecraft/world/entity/ai/behavior/BehaviorForgetAnger
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StrollAroundPoi net/minecraft/world/entity/ai/behavior/BehaviorStrollPosition
	MIN_TIME_BETWEEN_STROLLS a
	STROLL_MAX_XZ_DIST c
	STROLL_MAX_Y_DIST d
	maxDistanceFromPoi g
	memoryType e
	nextOkStartTime f
	speedModifier h
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/StrollToPoi net/minecraft/world/entity/ai/behavior/BehaviorStrollPlace
	closeEnoughDist c
	maxDistanceFromPoi d
	memoryType a
	nextOkStartTime f
	speedModifier e
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/StrollToPoiList net/minecraft/world/entity/ai/behavior/BehaviorStrollPlaceList
	closeEnoughDist e
	maxDistanceFromPoi f
	mustBeCloseToMemoryType c
	nextOkStartTime g
	speedModifier d
	strollToMemoryType a
	targetPos h
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/Swim net/minecraft/world/entity/ai/behavior/BehaviorSwim
	chance a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/ai/behavior/TradeWithVillager net/minecraft/world/entity/ai/behavior/BehaviorTradeVillager
	INTERACT_DIST_SQR a
	SPEED_MODIFIER c
	trades d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	figureOutWhatIAmWillingToTrade (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Set; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	throwHalfStack (Lnet/minecraft/world/entity/npc/Villager;Ljava/util/Set;Lnet/minecraft/world/entity/LivingEntity;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule net/minecraft/world/entity/ai/behavior/BehaviorSchedule
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/UseBonemeal net/minecraft/world/entity/ai/behavior/BehaviorBonemeal
	BONEMEALING_DURATION a
	cropPos f
	lastBonemealingSession d
	nextWorkCycleTime c
	timeWorkedSoFar e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	pickNextTarget (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	setCurrentCropAsTarget (Lnet/minecraft/world/entity/npc/Villager;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	validPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi net/minecraft/world/entity/ai/behavior/BehaviorPositionValidate
	MAX_DISTANCE a
	memoryType c
	poiPredicate d
	bedIsOccupied (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	poiDoesntExist (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/VictoryStroll net/minecraft/world/entity/ai/behavior/BehaviorVictory
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll net/minecraft/world/entity/ai/behavior/BehaviorStrollRandom
	MAX_XZ_DIST a
	MAX_Y_DIST c
	maxXyDist e
	maxYDist f
	speedModifier d
	setRandomPos (Lnet/minecraft/world/entity/PathfinderMob;)V a
	setTargetedPos (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/SectionPos;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/VillagerCalmDown net/minecraft/world/entity/ai/behavior/BehaviorCooldown
	SAFE_DISTANCE_FROM_DANGER a
	isCloseToEntityThatHurtMe (Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/VillagerGoalPackages net/minecraft/world/entity/ai/behavior/Behaviors
	STROLL_SPEED_MODIFIER a
	getCorePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; a
	getFullLookBehavior ()Lcom/mojang/datafixers/util/Pair; a
	getHidePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; i
	getIdlePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; e
	getMeetPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; d
	getMinimalLookBehavior ()Lcom/mojang/datafixers/util/Pair; b
	getPanicPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; f
	getPlayPackage (F)Lcom/google/common/collect/ImmutableList; a
	getPreRaidPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; g
	getRaidPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; h
	getRestPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; c
	getWorkPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; b
net/minecraft/world/entity/ai/behavior/VillagerMakeLove net/minecraft/world/entity/ai/behavior/BehaviorMakeLove
	INTERACT_DIST_SQR a
	SPEED_MODIFIER c
	birthTimestamp d
	breed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	canReach (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	giveBedToChild (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)V a
	isBreedingPossible (Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	takeVacantBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tryToGiveBirth (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger net/minecraft/world/entity/ai/behavior/BehaviorPanic
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	hasHostile (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isHurt (Lnet/minecraft/world/entity/LivingEntity;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/WakeUp net/minecraft/world/entity/ai/behavior/BehaviorWake
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/WorkAtComposter net/minecraft/world/entity/ai/behavior/BehaviorWorkComposter
	COMPOSTABLE_ITEMS a
	compostItems (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	makeBread (Lnet/minecraft/world/entity/npc/Villager;)V a
	spawnComposterFillEffects (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	useWorkstation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/WorkAtPoi net/minecraft/world/entity/ai/behavior/BehaviorWork
	CHECK_COOLDOWN a
	DISTANCE c
	lastCheck d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	useWorkstation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/YieldJobSite net/minecraft/world/entity/ai/behavior/BehaviorLeaveJob
	speedModifier a
	canReachPos (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	eraseMemories (Lnet/minecraft/world/entity/npc/Villager;)V a
	nearbyWantsJobsite (Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	yieldJobSite (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;Z)V a
net/minecraft/world/entity/ai/control/BodyRotationControl net/minecraft/world/entity/ai/control/EntityAIBodyControl
	DELAY_UNTIL_STARTING_TO_FACE_FORWARD c
	HEAD_STABLE_ANGLE b
	HOW_LONG_IT_TAKES_TO_FACE_FORWARD d
	headStableTime e
	lastStableYHeadRot f
	mob a
	clientTick ()V a
	isMoving ()Z f
	notCarryingMobPassengers ()Z e
	rotateBodyIfNecessary ()V b
	rotateHeadIfNecessary ()V c
	rotateHeadTowardsFront ()V d
net/minecraft/world/entity/ai/control/FlyingMoveControl net/minecraft/world/entity/ai/control/ControllerMoveFlying
	hoversInPlace m
	maxTurn l
	tick ()V a
net/minecraft/world/entity/ai/control/JumpControl net/minecraft/world/entity/ai/control/ControllerJump
	jump a
	mob b
	jump ()V a
	tick ()V b
net/minecraft/world/entity/ai/control/LookControl net/minecraft/world/entity/ai/control/ControllerLook
	lookAtCooldown d
	mob a
	wantedX e
	wantedY f
	wantedZ g
	xMaxRotAngle c
	yMaxRotSpeed b
	clampHeadRotationToBody ()V b
	getWantedX ()D e
	getWantedY ()D f
	getWantedY (Lnet/minecraft/world/entity/Entity;)D b
	getWantedZ ()D g
	getXRotD ()Ljava/util/Optional; h
	getYRotD ()Ljava/util/Optional; i
	isLookingAtTarget ()Z d
	resetXRotOnTick ()Z c
	rotateTowards (FFF)F a
	setLookAt (DDD)V a
	setLookAt (DDDFF)V a
	setLookAt (Lnet/minecraft/world/entity/Entity;)V a
	setLookAt (Lnet/minecraft/world/entity/Entity;FF)V a
	setLookAt (Lnet/minecraft/world/phys/Vec3;)V a
	tick ()V a
net/minecraft/world/entity/ai/control/MoveControl net/minecraft/world/entity/ai/control/ControllerMove
	MAX_TURN c
	MIN_SPEED a
	MIN_SPEED_SQR b
	mob d
	operation k
	speedModifier h
	strafeForwards i
	strafeRight j
	wantedX e
	wantedY f
	wantedZ g
	getSpeedModifier ()D c
	getWantedX ()D d
	getWantedY ()D e
	getWantedZ ()D f
	hasWanted ()Z b
	isWalkable (FF)Z b
	rotlerp (FFF)F a
	setWantedPosition (DDDD)V a
	strafe (FF)V a
	tick ()V a
net/minecraft/world/entity/ai/control/MoveControl$Operation net/minecraft/world/entity/ai/control/ControllerMove$Operation
	$VALUES e
	JUMPING d
	MOVE_TO b
	STRAFE c
	WAIT a
	$values ()[Lnet/minecraft/world/entity/ai/control/MoveControl$Operation; a
net/minecraft/world/entity/ai/goal/AvoidEntityGoal net/minecraft/world/entity/ai/goal/PathfinderGoalAvoidTarget
	avoidClass f
	avoidEntityTargeting k
	avoidPredicate g
	maxDist c
	mob a
	path d
	pathNav e
	predicateOnAvoidEntity h
	sprintSpeedModifier j
	toAvoid b
	walkSpeedModifier i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BegGoal net/minecraft/world/entity/ai/goal/PathfinderGoalBeg
	begTargeting f
	level c
	lookDistance d
	lookTime e
	player b
	wolf a
	canContinueToUse ()Z b
	canUse ()Z a
	playerHoldingInteresting (Lnet/minecraft/world/entity/player/Player;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BoatGoals net/minecraft/world/entity/ai/goal/PathfinderGoalBoat
	$VALUES c
	GO_IN_BOAT_DIRECTION b
	GO_TO_BOAT a
	$values ()[Lnet/minecraft/world/entity/ai/goal/BoatGoals; a
net/minecraft/world/entity/ai/goal/BreakDoorGoal net/minecraft/world/entity/ai/goal/PathfinderGoalBreakDoor
	DEFAULT_DOOR_BREAK_TIME g
	breakTime a
	doorBreakTime c
	lastBreakProgress b
	validDifficulties h
	canContinueToUse ()Z b
	canUse ()Z a
	getDoorBreakTime ()I f
	isValidDifficulty (Lnet/minecraft/world/Difficulty;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BreathAirGoal net/minecraft/world/entity/ai/goal/PathfinderGoalBreath
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	findAirPosition ()V g
	givesAir (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isInterruptable ()Z D_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/BreedGoal net/minecraft/world/entity/ai/goal/PathfinderGoalBreed
	PARTNER_TARGETING d
	animal a
	level b
	loveTime f
	partner c
	partnerClass e
	speedModifier g
	breed ()V g
	canContinueToUse ()Z b
	canUse ()Z a
	getFreePartner ()Lnet/minecraft/world/entity/animal/Animal; i
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/CatLieOnBedGoal net/minecraft/world/entity/ai/goal/PathfinderGoalCatSitOnBed
	cat g
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	nextStartTick (Lnet/minecraft/world/entity/PathfinderMob;)I a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal net/minecraft/world/entity/ai/goal/PathfinderGoalJumpOnBlock
	cat g
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/DolphinJumpGoal net/minecraft/world/entity/ai/goal/PathfinderGoalWaterJump
	STEPS_TO_CHECK a
	breached d
	dolphin b
	interval c
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	stop ()V d
	surfaceIsClear (Lnet/minecraft/core/BlockPos;III)Z b
	tick ()V e
	waterIsClear (Lnet/minecraft/core/BlockPos;III)Z a
net/minecraft/world/entity/ai/goal/DoorInteractGoal net/minecraft/world/entity/ai/goal/PathfinderGoalDoorInteract
	doorOpenDirX b
	doorOpenDirZ c
	doorPos e
	hasDoor f
	mob d
	passed a
	canContinueToUse ()Z b
	canUse ()Z a
	isOpen ()Z g
	requiresUpdateEveryTick ()Z h
	setOpen (Z)V a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/EatBlockGoal net/minecraft/world/entity/ai/goal/PathfinderGoalEatTile
	EAT_ANIMATION_TICKS a
	IS_TALL_GRASS b
	eatAnimationTick e
	level d
	mob c
	canContinueToUse ()Z b
	canUse ()Z a
	getEatAnimationTick ()I g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FleeSunGoal net/minecraft/world/entity/ai/goal/PathfinderGoalFleeSun
	level f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getHidePos ()Lnet/minecraft/world/phys/Vec3; i
	setWantedPos ()Z g
	start ()V c
net/minecraft/world/entity/ai/goal/FloatGoal net/minecraft/world/entity/ai/goal/PathfinderGoalFloat
	mob a
	canUse ()Z a
	requiresUpdateEveryTick ()Z h
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowBoatGoal net/minecraft/world/entity/ai/goal/PathfinderGoalFollowBoat
	currentGoal d
	following c
	mob b
	timeToRecalcPath a
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal net/minecraft/world/entity/ai/goal/PathfinderGoalFishSchool
	INTERVAL_TICKS a
	mob b
	nextStartTick d
	timeToRecalcPath c
	canContinueToUse ()Z b
	canUse ()Z a
	nextStartTick (Lnet/minecraft/world/entity/animal/AbstractSchoolingFish;)I a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowMobGoal net/minecraft/world/entity/ai/goal/PathfinderGoalFollowEntity
	areaSize i
	followPredicate b
	followingMob c
	mob a
	navigation e
	oldWaterCost h
	speedModifier d
	stopDistance g
	timeToRecalcPath f
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowOwnerGoal net/minecraft/world/entity/ai/goal/PathfinderGoalFollowOwner
	MAX_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING c
	MAX_VERTICAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING d
	MIN_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING b
	TELEPORT_WHEN_DISTANCE_IS a
	canFly n
	level g
	navigation i
	oldWaterCost m
	owner f
	speedModifier h
	startDistance l
	stopDistance k
	tamable e
	timeToRecalcPath j
	canContinueToUse ()Z b
	canTeleportTo (Lnet/minecraft/core/BlockPos;)Z a
	canUse ()Z a
	maybeTeleportTo (III)Z a
	randomIntInclusive (II)I a
	start ()V c
	stop ()V d
	teleportToOwner ()V g
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowParentGoal net/minecraft/world/entity/ai/goal/PathfinderGoalFollowParent
	DONT_FOLLOW_IF_CLOSER_THAN c
	HORIZONTAL_SCAN_RANGE a
	VERTICAL_SCAN_RANGE b
	animal d
	parent e
	speedModifier f
	timeToRecalcPath g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/Goal net/minecraft/world/entity/ai/goal/PathfinderGoal
	flags a
	adjustedTickDelay (I)I a
	canContinueToUse ()Z b
	canUse ()Z a
	getFlags ()Ljava/util/EnumSet; j
	isInterruptable ()Z D_
	reducedTickDelay (I)I b
	requiresUpdateEveryTick ()Z h
	setFlags (Ljava/util/EnumSet;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/Goal$Flag net/minecraft/world/entity/ai/goal/PathfinderGoal$Type
	$VALUES e
	JUMP c
	LOOK b
	MOVE a
	TARGET d
	$values ()[Lnet/minecraft/world/entity/ai/goal/Goal$Flag; a
net/minecraft/world/entity/ai/goal/GoalSelector net/minecraft/world/entity/ai/goal/PathfinderGoalSelector
	LOGGER a
	NO_GOAL b
	availableGoals d
	disabledFlags f
	lockedFlags c
	newGoalRate h
	profiler e
	tickCount g
	addGoal (ILnet/minecraft/world/entity/ai/goal/Goal;)V a
	disableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V a
	enableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V b
	getAvailableGoals ()Ljava/util/Set; c
	getRunningGoals ()Ljava/util/stream/Stream; d
	goalCanBeReplacedForAllFlags (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;Ljava/util/Map;)Z a
	goalContainsAnyFlags (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;Ljava/util/EnumSet;)Z a
	removeAllGoals ()V a
	removeGoal (Lnet/minecraft/world/entity/ai/goal/Goal;)V a
	setControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;Z)V a
	setNewGoalRate (I)V a
	tick ()V b
	tickRunningGoals (Z)V a
net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal net/minecraft/world/entity/ai/goal/PathfinderGoalStrollVillageGolem
	POI_SECTION_SCAN_RADIUS i
	RANDOM_POS_XY_DISTANCE k
	RANDOM_POS_Y_DISTANCE l
	VILLAGER_SCAN_RADIUS j
	doesVillagerWantGolem (Lnet/minecraft/world/entity/npc/Villager;)Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	getPositionTowardsAnywhere ()Lnet/minecraft/world/phys/Vec3; k
	getPositionTowardsPoi ()Lnet/minecraft/world/phys/Vec3; m
	getPositionTowardsVillagerWhoWantsGolem ()Lnet/minecraft/world/phys/Vec3; l
	getRandomPoiWithinSection (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/core/BlockPos; a
	getRandomVillageSection ()Lnet/minecraft/core/SectionPos; n
net/minecraft/world/entity/ai/goal/InteractGoal net/minecraft/world/entity/ai/goal/PathfinderGoalInteract
net/minecraft/world/entity/ai/goal/JumpGoal net/minecraft/world/entity/ai/goal/PathfinderGoalWaterJumpAbstract
net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal net/minecraft/world/entity/ai/goal/PathfinderGoalPerch
	entity a
	isSittingOnShoulder c
	owner b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/LeapAtTargetGoal net/minecraft/world/entity/ai/goal/PathfinderGoalLeapAtTarget
	mob a
	target b
	yd c
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal net/minecraft/world/entity/ai/goal/PathfinderGoalLlamaFollow
	CARAVAN_LIMIT c
	distCheckCounter d
	llama a
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	firstIsLeashed (Lnet/minecraft/world/entity/animal/horse/Llama;I)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/LookAtPlayerGoal net/minecraft/world/entity/ai/goal/PathfinderGoalLookAtPlayer
	DEFAULT_PROBABILITY a
	lookAt c
	lookAtContext g
	lookAtType f
	lookDistance d
	lookTime h
	mob b
	onlyHorizontal i
	probability e
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal net/minecraft/world/entity/ai/goal/PathfinderGoalLookAtTradingPlayer
	villager h
	canUse ()Z a
net/minecraft/world/entity/ai/goal/MeleeAttackGoal net/minecraft/world/entity/ai/goal/PathfinderGoalMeleeAttack
	COOLDOWN_BETWEEN_CAN_USE_CHECKS l
	attackInterval j
	followingTargetEvenIfNotSeen c
	lastCanUseCheck k
	mob a
	path d
	pathedTargetX e
	pathedTargetY f
	pathedTargetZ g
	speedModifier b
	ticksUntilNextAttack i
	ticksUntilNextPathRecalculation h
	canContinueToUse ()Z b
	canUse ()Z a
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	getAttackInterval ()I l
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
	getTicksUntilNextAttack ()I k
	isTimeToAttack ()Z i
	requiresUpdateEveryTick ()Z h
	resetAttackCooldown ()V g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal net/minecraft/world/entity/ai/goal/PathfinderGoalStrollVillage
	MAX_XZ_DIST i
	MAX_Y_DIST j
	canUse ()Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal net/minecraft/world/entity/ai/goal/PathfinderGoalMoveThroughVillage
	canDealWithDoors h
	distanceToPoi g
	mob a
	onlyAtNight e
	path c
	poiPos d
	speedModifier b
	visited f
	canContinueToUse ()Z b
	canUse ()Z a
	hasNotVisited (Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	updateVisited ()V g
net/minecraft/world/entity/ai/goal/MoveToBlockGoal net/minecraft/world/entity/ai/goal/PathfinderGoalGotoTarget
	GIVE_UP_TICKS g
	INTERVAL_TICKS i
	STAY_TICKS h
	blockPos e
	maxStayTicks j
	mob a
	nextStartTick c
	reachedTarget k
	searchRange l
	speedModifier b
	tryTicks d
	verticalSearchRange m
	verticalSearchStart f
	acceptedDistance ()D i
	canContinueToUse ()Z b
	canUse ()Z a
	findNearestBlock ()Z n
	getMoveToTarget ()Lnet/minecraft/core/BlockPos; k
	isReachedTarget ()Z m
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	moveMobToBlock ()V g
	nextStartTick (Lnet/minecraft/world/entity/PathfinderMob;)I a
	requiresUpdateEveryTick ()Z h
	shouldRecalculatePath ()Z l
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal net/minecraft/world/entity/ai/goal/PathfinderGoalMoveTowardsRestriction
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal net/minecraft/world/entity/ai/goal/PathfinderGoalMoveTowardsTarget
	mob a
	speedModifier f
	target b
	wantedX c
	wantedY d
	wantedZ e
	within g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/OcelotAttackGoal net/minecraft/world/entity/ai/goal/PathfinderGoalOcelotAttack
	attackTime c
	mob a
	target b
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z h
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/OfferFlowerGoal net/minecraft/world/entity/ai/goal/PathfinderGoalOfferFlower
	OFFER_TARGER_CONTEXT b
	OFFER_TICKS a
	golem c
	tick e
	villager d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/OpenDoorGoal net/minecraft/world/entity/ai/goal/PathfinderGoalDoorOpen
	closeDoor a
	forgetTime b
	canContinueToUse ()Z b
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/PanicGoal net/minecraft/world/entity/ai/goal/PathfinderGoalPanic
	WATER_CHECK_DISTANCE_VERTICAL a
	isRunning g
	mob b
	posX d
	posY e
	posZ f
	speedModifier c
	canContinueToUse ()Z b
	canUse ()Z a
	findRandomPosition ()Z g
	isRunning ()Z i
	lookForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/core/BlockPos; a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/PathfindToRaidGoal net/minecraft/world/entity/ai/goal/PathfinderGoalRaid
	RECRUITMENT_SEARCH_TICK_DELAY a
	SPEED_MODIFIER b
	mob c
	recruitmentTick d
	canContinueToUse ()Z b
	canUse ()Z a
	recruitNearby (Lnet/minecraft/world/entity/raid/Raid;)V a
	tick ()V e
net/minecraft/world/entity/ai/goal/RandomLookAroundGoal net/minecraft/world/entity/ai/goal/PathfinderGoalRandomLookaround
	lookTime d
	mob a
	relX b
	relZ c
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z h
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/RandomStrollGoal net/minecraft/world/entity/ai/goal/PathfinderGoalRandomStroll
	DEFAULT_INTERVAL a
	checkNoActionTime i
	forceTrigger h
	interval g
	mob b
	speedModifier f
	wantedX c
	wantedY d
	wantedZ e
	canContinueToUse ()Z b
	canUse ()Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	setInterval (I)V c
	start ()V c
	stop ()V d
	trigger ()V i
net/minecraft/world/entity/ai/goal/RandomSwimmingGoal net/minecraft/world/entity/ai/goal/PathfinderGoalRandomSwim
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
net/minecraft/world/entity/ai/goal/RangedAttackGoal net/minecraft/world/entity/ai/goal/PathfinderGoalArrowAttack
	attackIntervalMax h
	attackIntervalMin g
	attackRadius i
	attackRadiusSqr j
	attackTime d
	mob a
	rangedAttackMob b
	seeTime f
	speedModifier e
	target c
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z h
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedBowAttackGoal net/minecraft/world/entity/ai/goal/PathfinderGoalBowShoot
	attackIntervalMin c
	attackRadiusSqr d
	attackTime e
	mob a
	seeTime f
	speedModifier b
	strafingBackwards h
	strafingClockwise g
	strafingTime i
	canContinueToUse ()Z b
	canUse ()Z a
	isHoldingBow ()Z g
	requiresUpdateEveryTick ()Z h
	setMinAttackInterval (I)V c
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal net/minecraft/world/entity/ai/goal/PathfinderGoalCrossbowAttack
	PATHFINDING_DELAY_RANGE a
	attackDelay g
	attackRadiusSqr e
	crossbowState c
	mob b
	seeTime f
	speedModifier d
	updatePathDelay h
	canContinueToUse ()Z b
	canRun ()Z k
	canUse ()Z a
	isHoldingCrossbow ()Z g
	isValidTarget ()Z i
	requiresUpdateEveryTick ()Z h
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState net/minecraft/world/entity/ai/goal/PathfinderGoalCrossbowAttack$State
	$VALUES e
	CHARGED c
	CHARGING b
	READY_TO_ATTACK d
	UNCHARGED a
	$values ()[Lnet/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState; a
net/minecraft/world/entity/ai/goal/RemoveBlockGoal net/minecraft/world/entity/ai/goal/PathfinderGoalRemoveBlock
	WAIT_AFTER_BLOCK_FOUND j
	blockToRemove g
	removerMob h
	ticksSinceReachedGoal i
	canUse ()Z a
	getPosWithBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/core/BlockPos; a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	playBreakSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	playDestroyProgressSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	start ()V c
	stop ()V d
	tick ()V e
	tryFindBlock ()Z o
net/minecraft/world/entity/ai/goal/RestrictSunGoal net/minecraft/world/entity/ai/goal/PathfinderGoalRestrictSun
	mob a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal net/minecraft/world/entity/ai/goal/PathfinderGoalTame
	horse a
	posX c
	posY d
	posZ e
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal net/minecraft/world/entity/ai/goal/PathfinderGoalSit
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal net/minecraft/world/entity/ai/goal/PathfinderGoalNearestVillage
	DISTANCE_THRESHOLD a
	interval c
	mob b
	wantedPos d
	canContinueToUse ()Z b
	canUse ()Z a
	moveRandomly ()V g
	tick ()V e
net/minecraft/world/entity/ai/goal/SwellGoal net/minecraft/world/entity/ai/goal/PathfinderGoalSwell
	creeper a
	target b
	canUse ()Z a
	requiresUpdateEveryTick ()Z h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TemptGoal net/minecraft/world/entity/ai/goal/PathfinderGoalTempt
	TEMP_TARGETING c
	calmDown k
	canScare n
	isRunning l
	items m
	mob a
	pRotX i
	pRotY j
	player b
	px f
	py g
	pz h
	speedModifier e
	targetingConditions d
	canContinueToUse ()Z b
	canScare ()Z g
	canUse ()Z a
	isRunning ()Z i
	shouldFollow (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal net/minecraft/world/entity/ai/goal/PathfinderGoalTradeWithPlayer
	mob a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/TryFindWaterGoal net/minecraft/world/entity/ai/goal/PathfinderGoalWater
	mob a
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/UseItemGoal net/minecraft/world/entity/ai/goal/PathfinderGoalUseItem
	canUseSelector c
	finishUsingSound d
	item b
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal net/minecraft/world/entity/ai/goal/PathfinderGoalRandomFly
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal net/minecraft/world/entity/ai/goal/PathfinderGoalRandomStrollLand
	PROBABILITY i
	probability j
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
net/minecraft/world/entity/ai/goal/WrappedGoal net/minecraft/world/entity/ai/goal/PathfinderGoalWrapped
	goal a
	isRunning c
	priority b
	adjustedTickDelay (I)I a
	canBeReplacedBy (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;)Z a
	canContinueToUse ()Z b
	canUse ()Z a
	getFlags ()Ljava/util/EnumSet; j
	getGoal ()Lnet/minecraft/world/entity/ai/goal/Goal; k
	getPriority ()I i
	isInterruptable ()Z D_
	isRunning ()Z g
	requiresUpdateEveryTick ()Z h
	setFlags (Ljava/util/EnumSet;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/ZombieAttackGoal net/minecraft/world/entity/ai/goal/PathfinderGoalZombieAttack
	raiseArmTicks c
	zombie b
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal net/minecraft/world/entity/ai/goal/target/PathfinderGoalDefendVillage
	attackTargeting c
	golem a
	potentialTarget b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal net/minecraft/world/entity/ai/goal/target/PathfinderGoalHurtByTarget
	ALERT_RANGE_Y b
	HURT_BY_TARGETING a
	alertSameType c
	timestamp d
	toIgnoreAlert j
	toIgnoreDamage i
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	alertOthers ()V g
	canUse ()Z a
	setAlertOthers ([Ljava/lang/Class;)Lnet/minecraft/world/entity/ai/goal/target/HurtByTargetGoal; a
	start ()V c
net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal net/minecraft/world/entity/ai/goal/target/PathfinderGoalNearestAttackableTarget
	DEFAULT_RANDOM_INTERVAL i
	randomInterval b
	target c
	targetConditions d
	targetType a
	canUse ()Z a
	findTarget ()V g
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal net/minecraft/world/entity/ai/goal/target/PathfinderGoalNearestAttackableTargetWitch
	canAttack i
	canUse ()Z a
	setCanAttack (Z)V a
net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal net/minecraft/world/entity/ai/goal/target/PathfinderGoalNearestHealableRaider
	DEFAULT_COOLDOWN i
	cooldown j
	canUse ()Z a
	decrementCooldown ()V k
	getCooldown ()I i
	start ()V c
net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal net/minecraft/world/entity/ai/goal/target/PathfinderGoalRandomTargetNonTamed
	tamableMob i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal net/minecraft/world/entity/ai/goal/target/PathfinderGoalOwnerHurtByTarget
	ownerLastHurtBy b
	tameAnimal a
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal net/minecraft/world/entity/ai/goal/target/PathfinderGoalOwnerHurtTarget
	ownerLastHurt b
	tameAnimal a
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal net/minecraft/world/entity/ai/goal/target/PathfinderGoalUniversalAngerReset
	ALERT_RANGE_Y a
	alertOthersOfSameType c
	lastHurtByPlayerTimestamp d
	mob b
	canUse ()Z a
	getNearbyMobsOfSameType ()Ljava/util/List; i
	start ()V c
	wasHurtByPlayer ()Z g
net/minecraft/world/entity/ai/goal/target/TargetGoal net/minecraft/world/entity/ai/goal/target/PathfinderGoalTarget
	CANT_REACH_CACHE c
	CAN_REACH_CACHE b
	EMPTY_REACH_CACHE a
	mob e
	mustReach d
	mustSee f
	reachCache i
	reachCacheTime j
	targetMob g
	unseenMemoryTicks h
	unseenTicks k
	canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z a
	canContinueToUse ()Z b
	canReach (Lnet/minecraft/world/entity/LivingEntity;)Z a
	getFollowDistance ()D l
	setUnseenMemoryTicks (I)Lnet/minecraft/world/entity/ai/goal/target/TargetGoal; c
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/gossip/GossipContainer net/minecraft/world/entity/ai/gossip/Reputation
	DISCARD_THRESHOLD a
	gossips b
	add (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V a
	decay ()V b
	getCountForType (Lnet/minecraft/world/entity/ai/gossip/GossipType;Ljava/util/function/DoublePredicate;)J a
	getGossipEntries ()Ljava/util/Map; a
	getOrCreate (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips; a
	getReputation (Ljava/util/UUID;Ljava/util/function/Predicate;)I a
	mergeValuesForAddition (Lnet/minecraft/world/entity/ai/gossip/GossipType;II)I a
	mergeValuesForTransfer (II)I a
	remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V b
	remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	selectGossipsForTransfer (Ljava/util/Random;I)Ljava/util/Collection; a
	store (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	transferFrom (Lnet/minecraft/world/entity/ai/gossip/GossipContainer;Ljava/util/Random;I)V a
	unpack ()Ljava/util/stream/Stream; c
	update (Lcom/mojang/serialization/Dynamic;)V a
net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips bfc$a
	entries a
	decay ()V a
	isEmpty ()Z b
	makeSureValueIsntTooLowOrTooHigh (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V b
	unpack (Ljava/util/UUID;)Ljava/util/stream/Stream; a
	weightedValue (Ljava/util/function/Predicate;)I a
net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry bfc$b
	TAG_TARGET a
	TAG_TYPE b
	TAG_VALUE c
	target d
	type e
	value f
	load (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; a
	store (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	weightedValue ()I a
net/minecraft/world/entity/ai/gossip/GossipType net/minecraft/world/entity/ai/gossip/ReputationType
	$VALUES o
	BY_ID n
	MAJOR_NEGATIVE a
	MAJOR_POSITIVE d
	MINOR_NEGATIVE b
	MINOR_POSITIVE c
	REPUTATION_CHANGE_PER_EVENT f
	REPUTATION_CHANGE_PER_EVERLASTING_MEMORY g
	REPUTATION_CHANGE_PER_TRADE h
	TRADING e
	decayPerDay l
	decayPerTransfer m
	id i
	max k
	weight j
	$values ()[Lnet/minecraft/world/entity/ai/gossip/GossipType; a
	byId (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/gossip/GossipType; a
net/minecraft/world/entity/ai/memory/ExpirableValue net/minecraft/world/entity/ai/memory/ExpirableMemory
	timeToLive b
	value a
	canExpire ()Z e
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getTimeToLive ()J b
	getValue ()Ljava/lang/Object; c
	hasExpired ()Z d
	of (Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/memory/ExpirableValue; a
	of (Ljava/lang/Object;J)Lnet/minecraft/world/entity/ai/memory/ExpirableValue; a
	tick ()V a
net/minecraft/world/entity/ai/memory/WalkTarget net/minecraft/world/entity/ai/memory/MemoryTarget
	closeEnoughDist c
	speedModifier b
	target a
	getCloseEnoughDist ()I c
	getSpeedModifier ()F b
	getTarget ()Lnet/minecraft/world/entity/ai/behavior/PositionTracker; a
net/minecraft/world/entity/ai/navigation/FlyingPathNavigation net/minecraft/world/entity/ai/navigation/NavigationFlying
	canOpenDoors ()Z e
	canPassDoors ()Z d
	canUpdatePath ()Z a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanOpenDoors (Z)V a
	setCanPassDoors (Z)V b
	tick ()V c
net/minecraft/world/entity/ai/navigation/GroundPathNavigation net/minecraft/world/entity/ai/navigation/Navigation
	avoidSun p
	canOpenDoors ()Z f
	canPassDoors ()Z e
	canUpdatePath ()Z a
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getSurfaceY ()I u
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	hasValidPathType (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	setAvoidSun (Z)V c
	setCanOpenDoors (Z)V a
	setCanPassDoors (Z)V b
	trimPath ()V E_
net/minecraft/world/entity/ai/navigation/PathNavigation net/minecraft/world/entity/ai/navigation/NavigationAbstract
	MAX_TIME_RECOMPUTE p
	hasDelayedRecomputation m
	isStuck u
	lastStuckCheck f
	lastStuckCheckPos g
	lastTimeoutCheck j
	level b
	maxDistanceToWaypoint l
	maxVisitedNodesMultiplier s
	mob a
	nodeEvaluator o
	path c
	pathFinder t
	reachRange r
	speedModifier d
	targetPos q
	tick e
	timeLastRecompute n
	timeoutCachedNode h
	timeoutLimit k
	timeoutTimer i
	canFloat ()Z r
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	canUpdatePath ()Z a
	createPath (DDDI)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;IZI)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;IZIF)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/stream/Stream;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/core/BlockPos;II)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	doStuckDetection (Lnet/minecraft/world/phys/Vec3;)V b
	followThePath ()V l
	getGroundY (Lnet/minecraft/world/phys/Vec3;)D a
	getMaxDistanceToWaypoint ()F s
	getNodeEvaluator ()Lnet/minecraft/world/level/pathfinder/NodeEvaluator; q
	getPath ()Lnet/minecraft/world/level/pathfinder/Path; k
	getTargetPos ()Lnet/minecraft/core/BlockPos; h
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	hasDelayedRecomputation ()Z i
	isDone ()Z m
	isInLiquid ()Z p
	isInProgress ()Z n
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	isStuck ()Z t
	moveTo (DDDD)Z a
	moveTo (Lnet/minecraft/world/entity/Entity;D)Z a
	moveTo (Lnet/minecraft/world/level/pathfinder/Path;D)Z a
	recomputePath ()V j
	recomputePath (Lnet/minecraft/core/BlockPos;)V b
	resetMaxVisitedNodesMultiplier ()V g
	resetStuckTimeout ()V f
	setCanFloat (Z)V d
	setMaxVisitedNodesMultiplier (F)V a
	setSpeedModifier (D)V a
	shouldTargetNextNodeInDirection (Lnet/minecraft/world/phys/Vec3;)Z c
	stop ()V o
	tick ()V c
	timeoutPath ()V e
	trimPath ()V E_
net/minecraft/world/entity/ai/navigation/WallClimberNavigation net/minecraft/world/entity/ai/navigation/NavigationSpider
	pathToPosition p
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	moveTo (Lnet/minecraft/world/entity/Entity;D)Z a
	tick ()V c
net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation net/minecraft/world/entity/ai/navigation/NavigationGuardian
	allowBreaching p
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getGroundY (Lnet/minecraft/world/phys/Vec3;)D a
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanFloat (Z)V d
net/minecraft/world/entity/ai/sensing/AdultSensor net/minecraft/world/entity/ai/sensing/SensorAdult
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
	setNearestVisibleAdult (Lnet/minecraft/world/entity/AgeableMob;Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities;)V a
net/minecraft/world/entity/ai/sensing/DummySensor net/minecraft/world/entity/ai/sensing/SensorDummy
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/GolemSensor net/minecraft/world/entity/ai/sensing/SensorGolemLastSeen
	GOLEM_SCAN_RATE a
	MEMORY_TIME_TO_LIVE c
	checkForNearbyGolem (Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	golemDetected (Lnet/minecraft/world/entity/LivingEntity;)V b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor net/minecraft/world/entity/ai/sensing/SensorHoglinSpecific
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)V a
	findNearestRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/HurtBySensor net/minecraft/world/entity/ai/sensing/SensorHurtBy
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestBedSensor net/minecraft/world/entity/ai/sensing/SensorNearestBed
	BATCH_SIZE c
	CACHE_TIMEOUT a
	RATE d
	batchCache e
	lastUpdate g
	triedCount f
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestItemSensor net/minecraft/world/entity/ai/sensing/SensorNearestItems
	MAX_DISTANCE_TO_WANTED_ITEM a
	XZ_RANGE c
	Y_RANGE d
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor net/minecraft/world/entity/ai/sensing/SensorNearestLivingEntities
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor net/minecraft/world/entity/ai/sensing/SensorPiglinBruteSpecific
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor net/minecraft/world/entity/ai/sensing/SensorPiglinSpecific
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	findNearestRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; c
	isValidRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PlayerSensor net/minecraft/world/entity/ai/sensing/SensorNearestPlayers
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor net/minecraft/world/entity/ai/sensing/SensorSecondaryPlaces
	SCAN_RATE a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/Sensing net/minecraft/world/entity/ai/sensing/EntitySenses
	mob a
	seen b
	unseen c
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z a
	tick ()V a
net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor net/minecraft/world/entity/ai/sensing/SensorVillagerBabies
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	getNearestVillagerBabies (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/List; a
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities; c
	isVillagerBaby (Lnet/minecraft/world/entity/LivingEntity;)Z b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor net/minecraft/world/entity/ai/sensing/SensorVillagerHostiles
	ACCEPTABLE_DISTANCE_FROM_HOSTILES a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	isClose (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z e
	isHostile (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/targeting/TargetingConditions net/minecraft/world/entity/ai/targeting/PathfinderTargetCondition
	DEFAULT a
	MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET b
	checkLineOfSight e
	isCombat c
	range d
	selector g
	testInvisible f
	copy ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; c
	forCombat ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	forNonCombat ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; b
	ignoreInvisibilityTesting ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; e
	ignoreLineOfSight ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; d
	range (D)Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	selector (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	test (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/util/GoalUtils net/minecraft/world/entity/ai/util/PathfinderGoalUtil
	hasGroundPathNavigation (Lnet/minecraft/world/entity/Mob;)Z a
	hasMalus (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z b
	isNotStable (Lnet/minecraft/world/entity/ai/navigation/PathNavigation;Lnet/minecraft/core/BlockPos;)Z a
	isOutsideLimits (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	isRestricted (ZLnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	isSolid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z c
	isWater (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	mobRestricted (Lnet/minecraft/world/entity/PathfinderMob;I)Z a
net/minecraft/world/entity/ai/util/RandomPos net/minecraft/world/entity/ai/util/RandomPositionGenerator
	RANDOM_POS_ATTEMPTS a
	generateRandomDirection (Ljava/util/Random;II)Lnet/minecraft/core/BlockPos; a
	generateRandomDirectionWithinRadians (Ljava/util/Random;IIIDDD)Lnet/minecraft/core/BlockPos; a
	generateRandomPos (Ljava/util/function/Supplier;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3; a
	generateRandomPos (Lnet/minecraft/world/entity/PathfinderMob;Ljava/util/function/Supplier;)Lnet/minecraft/world/phys/Vec3; a
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;ILjava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	moveUpOutOfSolid (Lnet/minecraft/core/BlockPos;ILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPos; a
	moveUpToAboveSolid (Lnet/minecraft/core/BlockPos;IILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/entity/ai/village/ReputationEventType net/minecraft/world/entity/ai/village/ReputationEvent
	GOLEM_KILLED b
	TRADE e
	VILLAGER_HURT c
	VILLAGER_KILLED d
	ZOMBIE_VILLAGER_CURED a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/village/ReputationEventType; a
net/minecraft/world/entity/ai/village/poi/PoiManager net/minecraft/world/entity/ai/village/poi/VillagePlace
	MAX_VILLAGE_DISTANCE a
	VILLAGE_SECTION_SIZE b
	distanceTracker d
	loadedChunks e
	add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)V a
	checkConsistencyWithBlocks (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/LevelChunkSection;)V a
	ensureLoadedAndValid (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)V a
	exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	existsAtPosition (Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/core/BlockPos;)Z a
	find (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; c
	findAll (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	findAllClosestFirst (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; b
	findClosest (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; d
	findClosest (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; d
	getCountInRange (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)J a
	getFreeTickets (Lnet/minecraft/core/BlockPos;)I d
	getInChunk (Ljava/util/function/Predicate;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	getInRange (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; c
	getInSquare (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; b
	getRandom (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;Lnet/minecraft/core/BlockPos;ILjava/util/Random;)Ljava/util/Optional; a
	getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; c
	isVillageCenter (J)Z g
	mayHavePoi (Lnet/minecraft/world/level/chunk/LevelChunkSection;)Z a
	onSectionLoad (J)V b
	release (Lnet/minecraft/core/BlockPos;)Z b
	remove (Lnet/minecraft/core/BlockPos;)V a
	sectionsToVillage (Lnet/minecraft/core/SectionPos;)I a
	setDirty (J)V a
	take (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;I)Ljava/util/Optional; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateFromSection (Lnet/minecraft/world/level/chunk/LevelChunkSection;Lnet/minecraft/core/SectionPos;Ljava/util/function/BiConsumer;)V a
net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker bha$a
	levels b
	getLevel (J)I c
	getLevelFromSource (J)I b
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy net/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy
	$VALUES e
	ANY c
	HAS_SPACE a
	IS_OCCUPIED b
	test d
	$values ()[Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy; b
	getTest ()Ljava/util/function/Predicate; a
net/minecraft/world/entity/ai/village/poi/PoiRecord net/minecraft/world/entity/ai/village/poi/VillagePlaceRecord
	freeTickets c
	poiType b
	pos a
	setDirty d
	acquireTicket ()Z b
	codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; a
	getFreeTickets ()I a
	getPoiType ()Lnet/minecraft/world/entity/ai/village/poi/PoiType; g
	getPos ()Lnet/minecraft/core/BlockPos; f
	hasSpace ()Z d
	isOccupied ()Z e
	releaseTicket ()Z c
net/minecraft/world/entity/ai/village/poi/PoiSection net/minecraft/world/entity/ai/village/poi/VillagePlaceSection
	LOGGER a
	byType c
	isValid e
	records b
	setDirty d
	add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)V a
	add (Lnet/minecraft/world/entity/ai/village/poi/PoiRecord;)Z a
	clear ()V b
	codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; a
	exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	getFreeTickets (Lnet/minecraft/core/BlockPos;)I b
	getPoiRecord (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; e
	getRecords (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; d
	isValid ()Z a
	refresh (Ljava/util/function/Consumer;)V a
	release (Lnet/minecraft/core/BlockPos;)Z c
	remove (Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/entity/ai/village/poi/PoiType net/minecraft/world/entity/ai/village/poi/VillagePlaceType
	ALL b
	ALL_JOBS a
	ALL_JOB_POI_TYPES z
	ALL_STATES y
	ARMORER d
	BEDS A
	BEEHIVE t
	BEE_NEST u
	BUTCHER e
	CARTOGRAPHER f
	CAULDRONS B
	CLERIC g
	FARMER h
	FISHERMAN i
	FLETCHER j
	HOME r
	LEATHERWORKER k
	LIBRARIAN l
	LIGHTNING_ROD x
	LODESTONE w
	MASON m
	MEETING s
	NETHER_PORTAL v
	NITWIT n
	SHEPHERD o
	TOOLSMITH p
	TYPE_BY_STATE C
	UNEMPLOYED c
	WEAPONSMITH q
	matchingStates E
	maxTickets F
	name D
	predicate G
	validRange H
	forState (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	getBlockStates (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; a
	getMaxTickets ()I b
	getName ()Ljava/lang/String; a
	getPredicate ()Ljava/util/function/Predicate; c
	getValidRange ()I d
	is (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	register (Ljava/lang/String;Ljava/util/Set;II)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
	register (Ljava/lang/String;Ljava/util/Set;ILjava/util/function/Predicate;I)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
	registerBlockStates (Lnet/minecraft/world/entity/ai/village/poi/PoiType;)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
net/minecraft/world/entity/ambient/AmbientCreature net/minecraft/world/entity/ambient/EntityAmbient
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/ambient/Bat net/minecraft/world/entity/ambient/EntityBat
	BAT_RESTING_TARGETING bV
	DATA_ID_FLAGS d
	FLAG_RESTING e
	FLAP_DEGREES_PER_TICK b
	TICKS_PER_FLAP c
	targetPosition bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkBatSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V R
	defineSynchedData ()V a_
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getSoundVolume ()F eu
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVoicePitch ()F ev
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFlapping ()Z aK
	isHalloween ()Z t
	isIgnoringBlockTriggers ()Z ck
	isPushable ()Z bi
	isResting ()Z q
	pushEntities ()V eF
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setResting (Z)V v
	tick ()V k
net/minecraft/world/entity/animal/AbstractFish net/minecraft/world/entity/animal/EntityFish
	FROM_BUCKET b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	canRandomSwim ()Z fy
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	fromBucket ()Z q
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fz
	getMaxSpawnClusterSize ()I fe
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; t
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aF
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z O
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V m
	setFromBucket (Z)V v
	travel (Lnet/minecraft/world/phys/Vec3;)V h
net/minecraft/world/entity/animal/AbstractFish$FishMoveControl bhi$a
	fish l
	tick ()V a
net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal bhi$b
	fish i
	canUse ()Z a
net/minecraft/world/entity/animal/AbstractGolem net/minecraft/world/entity/animal/EntityGolem
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAmbientSoundInterval ()I J
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	removeWhenFarAway (D)Z h
net/minecraft/world/entity/animal/AbstractSchoolingFish net/minecraft/world/entity/animal/EntityFishSchool
	leader b
	schoolSize c
	addFollower ()V fH
	addFollowers (Ljava/util/stream/Stream;)V a
	canBeFollowed ()Z fD
	canRandomSwim ()Z fy
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getMaxSchoolSize ()I fA
	getMaxSpawnClusterSize ()I fe
	hasFollowers ()Z fE
	inRangeOfLeader ()Z fF
	isFollower ()Z fB
	pathToLeader ()V fG
	registerGoals ()V u
	removeFollower ()V fI
	startFollowing (Lnet/minecraft/world/entity/animal/AbstractSchoolingFish;)Lnet/minecraft/world/entity/animal/AbstractSchoolingFish; a
	stopFollowing ()V fC
	tick ()V k
net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData bhk$a
	leader a
net/minecraft/world/entity/animal/Animal net/minecraft/world/entity/animal/EntityAnimal
	PARENT_AGE_AFTER_BREEDING bY
	inLove bW
	loveCause bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	canFallInLove ()Z fB
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	checkAnimalSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	customServerAiStep ()V R
	getAmbientSoundInterval ()I J
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getInLoveTime ()I fC
	getLoveCause ()Lnet/minecraft/server/level/ServerPlayer; fD
	getMyRidingOffset ()D bp
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBrightEnoughToSpawn (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isInLove ()Z fE
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	resetLove ()V fF
	setInLove (Lnet/minecraft/world/entity/player/Player;)V g
	setInLoveTime (I)V s
	spawnChildFromBreeding (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)V a
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/animal/Bee net/minecraft/world/entity/animal/EntityBee
	COOLDOWN_BEFORE_LOCATING_NEW_FLOWER cG
	COOLDOWN_BEFORE_LOCATING_NEW_HIVE cE
	DATA_FLAGS_ID cg
	DATA_REMAINING_ANGER_TIME ch
	FLAG_HAS_NECTAR ck
	FLAG_HAS_STUNG cj
	FLAG_ROLL ci
	FLAP_DEGREES_PER_TICK bW
	HIVE_CLOSE_ENOUGH_DISTANCE ct
	HIVE_SEARCH_DISTANCE cv
	MAX_CROPS_GROWABLE cp
	MIN_ATTACK_DIST co
	PATHFIND_TO_HIVE_WHEN_CLOSER_THAN cu
	PERSISTENT_ANGER_TIME cw
	POISON_SECONDS_HARD cr
	POISON_SECONDS_NORMAL cq
	STING_DEATH_COUNTDOWN cl
	TAG_CANNOT_ENTER_HIVE_TICKS ca
	TAG_CROPS_GROWN_SINCE_POLLINATION bZ
	TAG_FLOWER_POS ce
	TAG_HAS_NECTAR cd
	TAG_HAS_STUNG cc
	TAG_HIVE_POS cf
	TAG_TICKS_SINCE_POLLINATION cb
	TICKS_BEFORE_GOING_TO_KNOWN_FLOWER cm
	TICKS_PER_FLAP bX
	TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME cn
	TOO_FAR_DISTANCE cs
	beePollinateGoal cK
	goToHiveGoal cL
	goToKnownFlowerGoal cM
	hivePos cJ
	numCropsGrownSincePollination cD
	persistentAngerTarget cx
	remainingCooldownBeforeLocatingNewFlower cH
	remainingCooldownBeforeLocatingNewHive cF
	rollAmount cy
	rollAmountO cz
	savedFlowerPos cI
	stayOutOfHiveCountdown cC
	ticksWithoutNectarSinceExitingHive cB
	timeSinceSting cA
	underWaterTicks cN
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	closerThan (Lnet/minecraft/core/BlockPos;I)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fL
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V R
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doesHiveHaveSpace (Lnet/minecraft/core/BlockPos;)Z i
	dropOffNectar ()V fN
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBlacklistedHives ()Ljava/util/List; fz
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Bee; b
	getCropsGrownSincePollination ()I fS
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFlag (I)Z u
	getGoalSelector ()Lnet/minecraft/world/entity/ai/goal/GoalSelector; fI
	getHivePos ()Lnet/minecraft/core/BlockPos; fH
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cz
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getRollAmount (F)F z
	getSavedFlowerPos ()Lnet/minecraft/core/BlockPos; q
	getSoundVolume ()F eu
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTravellingTicks ()I fy
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasHive ()Z fG
	hasNectar ()Z fJ
	hasSavedFlowerPos ()Z t
	hasStung ()Z fK
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	incrementNumCropsGrownSincePollination ()V fU
	isFlapping ()Z aK
	isFlowerValid (Lnet/minecraft/core/BlockPos;)Z k
	isFlying ()Z fM
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isHiveNearFire ()Z fR
	isHiveValid ()Z fV
	isRolling ()Z fW
	isTiredOfLookingForNectar ()Z fO
	isTooFarAway (Lnet/minecraft/core/BlockPos;)Z j
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	pathfindRandomlyTowards (Lnet/minecraft/core/BlockPos;)V h
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	resetNumCropsGrownSincePollination ()V fT
	resetTicksWithoutNectarSinceExitingHive ()V fA
	sendDebugPackets ()V Q
	setFlag (IZ)V d
	setHasNectar (Z)V v
	setHasStung (Z)V w
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setRolling (Z)V x
	setSavedFlowerPos (Lnet/minecraft/core/BlockPos;)V g
	setStayOutOfHiveCountdown (I)V t
	spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDDLnet/minecraft/core/particles/ParticleOptions;)V a
	startPersistentAngerTimer ()V c
	tick ()V k
	updateRollAmount ()V fQ
	wantsToEnterHive ()Z fP
net/minecraft/world/entity/animal/Bee$BaseBeeGoal bhm$a
	canBeeContinueToUse ()Z i
	canBeeUse ()Z g
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeAttackGoal bhm$b
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal bhm$c
	beeCanTarget ()Z i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal bhm$d
	canBeeContinueToUse ()Z i
	canBeeUse ()Z g
	start ()V c
net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal bhm$e
	MAX_BLACKLISTED_TARGETS e
	MAX_TRAVELLING_TICKS b
	TICKS_BEFORE_HIVE_DROP h
	blacklistedTargets f
	lastPath g
	ticksStuck i
	travellingTicks d
	blacklistTarget (Lnet/minecraft/core/BlockPos;)V c
	canBeeContinueToUse ()Z i
	canBeeUse ()Z g
	canContinueToUse ()Z b
	canUse ()Z a
	clearBlacklist ()V k
	dropAndBlacklistHive ()V l
	dropHive ()V m
	hasReachedTarget (Lnet/minecraft/core/BlockPos;)Z d
	isTargetBlacklisted (Lnet/minecraft/core/BlockPos;)Z b
	pathfindDirectlyTowards (Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal bhm$f
	MAX_TRAVELLING_TICKS c
	travellingTicks d
	canBeeContinueToUse ()Z i
	canBeeUse ()Z g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
	wantsToGoToKnownFlower ()Z k
net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal bhm$g
	GROW_CHANCE b
	canBeeContinueToUse ()Z i
	canBeeUse ()Z g
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal bhm$h
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal bhm$i
	canBeeContinueToUse ()Z i
	canBeeUse ()Z g
	findNearbyHivesWithSpace ()Ljava/util/List; k
	start ()V c
net/minecraft/world/entity/animal/Bee$BeeLookControl bhm$j
	resetXRotOnTick ()Z c
	tick ()V a
net/minecraft/world/entity/animal/Bee$BeePollinateGoal bhm$k
	ARRIVAL_THRESHOLD g
	HOVER_HEIGHT_WITHIN_FLOWER j
	HOVER_POS_OFFSET k
	MAX_FIND_FLOWER_RETRY_COOLDOWN e
	MAX_POLLINATING_TICKS q
	MIN_FIND_FLOWER_RETRY_COOLDOWN d
	MIN_POLLINATION_TICKS c
	POSITION_CHANGE_CHANCE h
	SPEED_MODIFIER i
	VALID_POLLINATION_BLOCKS f
	hoverPos o
	lastSoundPlayedTick m
	pollinating n
	pollinatingTicks p
	successfulPollinatingTicks l
	canBeeContinueToUse ()Z i
	canBeeUse ()Z g
	findNearbyFlower ()Ljava/util/Optional; p
	findNearestBlock (Ljava/util/function/Predicate;D)Ljava/util/Optional; a
	getOffset ()F o
	hasPollinatedLongEnough ()Z k
	isPollinating ()Z l
	requiresUpdateEveryTick ()Z h
	setWantedPos ()V n
	start ()V c
	stop ()V d
	stopPollinating ()V m
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeWanderGoal bhm$l
	WANDER_THRESHOLD b
	canContinueToUse ()Z b
	canUse ()Z a
	findPos ()Lnet/minecraft/world/phys/Vec3; g
	start ()V c
net/minecraft/world/entity/animal/Cat net/minecraft/world/entity/animal/EntityCat
	DATA_COLLAR_COLOR cs
	DATA_TYPE_ID cp
	IS_LYING cq
	NUMBER_OF_CAT_TYPES ct
	NUMBER_OF_CAT_TYPES_EXCEPT_ALL_BLACK cu
	RELAX_STATE_ONE cr
	SPRINT_SPEED_MOD cb
	TEMPT_INGREDIENT co
	TEMPT_SPEED_MOD bZ
	TEXTURE_BY_TYPE cn
	TYPE_ALL_BLACK cm
	TYPE_BLACK cd
	TYPE_BRITISH cg
	TYPE_CALICO ch
	TYPE_JELLIE cl
	TYPE_PERSIAN ci
	TYPE_RAGDOLL cj
	TYPE_RED ce
	TYPE_SIAMESE cf
	TYPE_TABBY cc
	TYPE_WHITE ck
	WALK_SPEED_MOD ca
	avoidPlayersGoal cv
	lieDownAmount cx
	lieDownAmountO cy
	lieDownAmountOTail cA
	lieDownAmountTail cz
	relaxStateOneAmount cB
	relaxStateOneAmountO cC
	temptGoal cw
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fM
	customServerAiStep ()V R
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAmbientSoundInterval ()I J
	getAttackDamage ()F fN
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cat; b
	getCatType ()I fH
	getCollarColor ()Lnet/minecraft/world/item/DyeColor; fK
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLieDownAmount (F)F z
	getLieDownAmountTail (F)F A
	getRelaxStateOneAmount (F)F B
	getResourceLocation ()Lnet/minecraft/resources/ResourceLocation; fG
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleLieDown ()V fO
	hiss ()V fL
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isLying ()Z fI
	isRelaxStateOne ()Z fJ
	isSteppingCarefully ()Z bJ
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTameGoals ()V t
	registerGoals ()V u
	removeWhenFarAway (D)Z h
	setCatType (I)V t
	setCollarColor (Lnet/minecraft/world/item/DyeColor;)V a
	setLying (Z)V z
	setRelaxStateOne (Z)V A
	tick ()V k
	updateLieDownAmount ()V fP
	updateRelaxStateOneAmount ()V fQ
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal bho$a
	cat i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal bho$b
	cat a
	goalPos c
	onBedTicks d
	ownerPlayer b
	canContinueToUse ()Z b
	canUse ()Z a
	giveMorningGift ()V i
	spaceIsOccupied ()Z g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Cat$CatTemptGoal net/minecraft/world/entity/animal/EntityCat$PathfinderGoalTemptChance
	cat d
	selectedPlayer c
	canScare ()Z g
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/animal/Chicken net/minecraft/world/entity/animal/EntityChicken
	FOOD_ITEMS ce
	eggTime cc
	flap bW
	flapSpeed bX
	flapping cb
	isChickenJockey cd
	nextFlap cf
	oFlap ca
	oFlapSpeed bZ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Chicken; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isChickenJockey ()Z t
	isFlapping ()Z aK
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	onFlap ()V aJ
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	removeWhenFarAway (D)Z h
	setChickenJockey (Z)V v
net/minecraft/world/entity/animal/Cod net/minecraft/world/entity/animal/EntityCod
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fz
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
net/minecraft/world/entity/animal/Cow net/minecraft/world/entity/animal/EntityCow
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getSoundVolume ()F eu
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V u
net/minecraft/world/entity/animal/Dolphin net/minecraft/world/entity/animal/EntityDolphin
	ALLOWED_ITEMS c
	GOT_FISH e
	MOISTNESS_LEVEL bW
	SWIM_WITH_PLAYER_TARGETING bX
	TOTAL_AIR_SUPPLY b
	TOTAL_MOISTNESS_LEVEL bY
	TREASURE_POS d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z dw
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	closeToNextPos ()Z fz
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fy
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxAirSupply ()I bX
	getMaxHeadXRot ()I T
	getMaxHeadYRot ()I U
	getMoistnessLevel ()I t
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aF
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aG
	getTreasurePos ()Lnet/minecraft/core/BlockPos; n
	gotFish ()Z q
	handleAirSupply (I)V a
	handleEntityEvent (B)V a
	increaseAirSupply (I)I n
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setGotFish (Z)V v
	setMoisntessLevel (I)V b
	setTreasurePos (Lnet/minecraft/core/BlockPos;)V g
	tick ()V k
	travel (Lnet/minecraft/world/phys/Vec3;)V h
net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal bhs$a
	dolphin a
	stuck b
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal bhs$b
	dolphin a
	player c
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal bhs$c
	cooldown b
	canUse ()Z a
	drop (Lnet/minecraft/world/item/ItemStack;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/FlyingAnimal net/minecraft/world/entity/animal/EntityBird
	isFlying ()Z fM
net/minecraft/world/entity/animal/Fox net/minecraft/world/entity/animal/EntityFox
	ALLOWED_ITEMS ci
	AVOID_PLAYERS cl
	DATA_FLAGS_ID cb
	DATA_TRUSTED_ID_0 cg
	DATA_TRUSTED_ID_1 ch
	DATA_TYPE_ID ca
	FLAG_CROUCHING bW
	FLAG_DEFENDING cf
	FLAG_FACEPLANTED ce
	FLAG_INTERESTED bX
	FLAG_POUNCING bZ
	FLAG_SITTING cc
	FLAG_SLEEPING cd
	MIN_TICKS_BEFORE_EAT cm
	STALKABLE_PREY ck
	TRUSTED_TARGET_SELECTOR cj
	crouchAmount cs
	crouchAmountO ct
	fishTargetGoal cp
	interestedAngle cq
	interestedAngleO cr
	landTargetGoal cn
	ticksSinceEaten cu
	turtleEggTargetGoal co
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addTrustedUUID (Ljava/util/UUID;)V b
	aiStep ()V w_
	calculateFallDamage (FF)I d
	canEat (Lnet/minecraft/world/item/ItemStack;)Z m
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z k
	canMove ()Z fO
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	checkFoxSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	clearStates ()V fN
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	dropAllDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;)V f
	dropItemStack (Lnet/minecraft/world/item/ItemStack;)V p
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Fox; b
	getCrouchAmount (F)F A
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; e
	getFlag (I)Z t
	getFoxType ()Lnet/minecraft/world/entity/animal/Fox$Type; t
	getHeadRollAngle (F)F z
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cz
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTrustedUUIDs ()Ljava/util/List; fK
	handleEntityEvent (B)V a
	isCrouching ()Z bN
	isDefending ()Z fL
	isFaceplanted ()Z fz
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isFullyCrouched ()Z fH
	isImmobile ()Z ew
	isInterested ()Z fI
	isJumping ()Z fG
	isPathClear (Lnet/minecraft/world/entity/animal/Fox;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isPouncing ()Z fA
	isSitting ()Z fy
	isSleeping ()Z fb
	onOffspringSpawnedFromEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playAmbientSound ()V K
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setDefending (Z)V A
	setFaceplanted (Z)V z
	setFlag (IZ)V d
	setFoxType (Lnet/minecraft/world/entity/animal/Fox$Type;)V a
	setIsCrouching (Z)V x
	setIsInterested (Z)V y
	setIsPouncing (Z)V w
	setSitting (Z)V v
	setSleeping (Z)V B
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	setTargetGoals ()V fJ
	spitOutItem (Lnet/minecraft/world/item/ItemStack;)V o
	tick ()V k
	trusts (Ljava/util/UUID;)Z c
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	wakeUp ()V fM
net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal bhu$a
	timestamp l
	trustedLastHurt k
	trustedLastHurtBy j
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FaceplantGoal bhu$b
	countdown a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector bhu$c
	test (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal bhu$d
	alertableTargeting b
	alertable ()Z i
	hasShelter ()Z g
net/minecraft/world/entity/animal/Fox$FoxBreedGoal bhu$e
	breed ()V g
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal bhu$f
	WAIT_TICKS i
	ticksWaited g
	acceptedDistance ()D i
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	onReachedTarget ()V o
	pickGlowBerry (Lnet/minecraft/world/level/block/state/BlockState;)V a
	pickSweetBerries (Lnet/minecraft/world/level/block/state/BlockState;)V b
	shouldRecalculatePath ()Z l
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxFloatGoal bhu$g
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal bhu$h
	fox e
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxGroupData bhu$i
	type a
net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal bhu$j
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Fox$FoxLookControl bhu$k
	resetXRotOnTick ()Z c
	tick ()V a
net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal bhu$l
	canUse ()Z a
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxMoveControl bhu$m
	tick ()V a
net/minecraft/world/entity/animal/Fox$FoxPanicGoal bhu$n
	canUse ()Z a
net/minecraft/world/entity/animal/Fox$FoxPounceGoal bhu$o
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal bhu$p
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal bhu$q
	canContinueToUse ()Z b
	canFoxMove ()Z g
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal bhu$r
	lookTime e
	looksRemaining f
	relX c
	relZ d
	canContinueToUse ()Z b
	canUse ()Z a
	resetLook ()V k
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$SeekShelterGoal bhu$s
	interval c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$SleepGoal bhu$t
	WAIT_TIME_BEFORE_SLEEP c
	countdown d
	canContinueToUse ()Z b
	canSleep ()Z k
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Fox$StalkPreyGoal bhu$u
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$Type net/minecraft/world/entity/animal/EntityFox$Type
	$VALUES g
	BY_ID c
	BY_NAME d
	RED a
	SNOW b
	id e
	name f
	$values ()[Lnet/minecraft/world/entity/animal/Fox$Type; c
	byBiome (Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/world/entity/animal/Fox$Type; a
	byId (I)Lnet/minecraft/world/entity/animal/Fox$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/Fox$Type; a
	getId ()I b
	getName ()Ljava/lang/String; a
net/minecraft/world/entity/animal/IronGolem net/minecraft/world/entity/animal/EntityIronGolem
	DATA_FLAGS_ID c
	IRON_INGOT_HEAL_AMOUNT d
	PERSISTENT_ANGER_TIME bX
	attackAnimationTick e
	offerFlowerTick bW
	persistentAngerTarget bZ
	remainingPersistentAngerTime bY
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	decreaseAirSupply (I)I m
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	getAttackAnimationTick ()I t
	getAttackDamage ()F fA
	getCrackiness ()Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cz
	getOfferFlowerTick ()I fy
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPlayerCreated ()Z fz
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	offerFlower (Z)V v
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setPlayerCreated (Z)V w
	setRemainingPersistentAngerTime (I)V a
	startPersistentAngerTimer ()V c
net/minecraft/world/entity/animal/IronGolem$Crackiness net/minecraft/world/entity/animal/EntityIronGolem$CrackLevel
	$VALUES g
	BY_DAMAGE e
	HIGH d
	LOW b
	MEDIUM c
	NONE a
	fraction f
	$values ()[Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; a
	byFraction (F)Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; a
net/minecraft/world/entity/animal/MushroomCow net/minecraft/world/entity/animal/EntityMushroomCow
	DATA_TYPE bW
	MUTATE_CHANCE bX
	effect bZ
	effectDuration ca
	lastLightningBoltUUID cb
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkMushroomSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	defineSynchedData ()V a_
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cow; b
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/MushroomCow; c
	getEffectFromItemStack (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; m
	getMushroomType ()Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; t
	getOffspringType (Lnet/minecraft/world/entity/animal/MushroomCow;)Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; a
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	setMushroomType (Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType;)V a
	shear (Lnet/minecraft/sounds/SoundSource;)V a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
net/minecraft/world/entity/animal/MushroomCow$MushroomType net/minecraft/world/entity/animal/EntityMushroomCow$Type
	$VALUES e
	BROWN b
	RED a
	blockState d
	type c
	$values ()[Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; b
	byType (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; a
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/entity/animal/Ocelot net/minecraft/world/entity/animal/EntityOcelot
	CROUCH_SPEED_MOD bW
	DATA_TRUSTING cb
	SPRINT_SPEED_MOD bZ
	TEMPT_INGREDIENT ca
	WALK_SPEED_MOD bX
	ocelotAvoidPlayersGoal cc
	temptGoal cd
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkOcelotSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V R
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAmbientSoundInterval ()I J
	getAttackDamage ()F fz
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Ocelot; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cz
	handleEntityEvent (B)V a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isSteppingCarefully ()Z bJ
	isTrusting ()Z fy
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTrustingGoals ()V t
	registerGoals ()V u
	removeWhenFarAway (D)Z h
	setTrusting (Z)V v
	spawnTrustingParticles (Z)V w
net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal bhx$a
	ocelot i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal bhx$b
	ocelot c
	canScare ()Z g
net/minecraft/world/entity/animal/Panda net/minecraft/world/entity/animal/EntityPanda
	BREED_TARGETING cf
	DATA_ID_FLAGS ce
	EAT_COUNTER cb
	EAT_TICK_INTERVAL ck
	FLAG_ON_BACK cj
	FLAG_ROLL ch
	FLAG_SIT ci
	FLAG_SNEEZE cg
	HIDDEN_GENE_ID cd
	MAIN_GENE_ID cc
	PANDA_ITEMS cw
	SNEEZE_COUNTER ca
	TOTAL_ROLL_STEPS bW
	TOTAL_UNHAPPY_TIME cl
	UNHAPPY_COUNTER bZ
	didBite cn
	gotBamboo cm
	lookAtPlayerGoal cv
	onBackAmount cr
	onBackAmountO cs
	rollAmount ct
	rollAmountO cu
	rollCounter bX
	rollDelta co
	sitAmount cp
	sitAmountO cq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEatingParticles ()V fW
	afterSneeze ()V gb
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canPerformAction ()Z fT
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fK
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	eat (Z)V x
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getEatCounter ()I fU
	getFlag (I)Z w
	getHiddenGene ()Lnet/minecraft/world/entity/animal/Panda$Gene; fI
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLieOnBackAmount (F)F A
	getMainGene ()Lnet/minecraft/world/entity/animal/Panda$Gene; fH
	getOneOfGenesRandomly ()Lnet/minecraft/world/entity/animal/Panda$Gene; gc
	getRollAmount (F)F B
	getSitAmount (F)F z
	getSneezeCounter ()I fG
	getUnhappyCounter ()I q
	getVariant ()Lnet/minecraft/world/entity/animal/Panda$Gene; fL
	handleEating ()V fV
	handleRoll ()V ga
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAggressive ()Z ft
	isBrown ()Z fP
	isEating ()Z fA
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isFoodOrCake (Lnet/minecraft/world/item/ItemStack;)Z m
	isLazy ()Z fM
	isOnBack ()Z fz
	isPlayful ()Z fO
	isRolling ()Z fJ
	isScared ()Z fR
	isSitting ()Z fy
	isSneezing ()Z t
	isWeak ()Z fQ
	isWorried ()Z fN
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	roll (Z)V z
	setAttributes ()V fS
	setEatCounter (I)V v
	setFlag (IZ)V d
	setGeneFromParents (Lnet/minecraft/world/entity/animal/Panda;Lnet/minecraft/world/entity/animal/Panda;)V a
	setHiddenGene (Lnet/minecraft/world/entity/animal/Panda$Gene;)V b
	setMainGene (Lnet/minecraft/world/entity/animal/Panda$Gene;)V a
	setOnBack (Z)V w
	setSneezeCounter (I)V u
	setUnhappyCounter (I)V t
	sit (Z)V v
	sneeze (Z)V y
	tick ()V k
	tryToSit ()V gd
	updateOnBackAnimation ()V fY
	updateRollAmount ()V fZ
	updateSitAmount ()V fX
net/minecraft/world/entity/animal/Panda$Gene net/minecraft/world/entity/animal/EntityPanda$Gene
	$VALUES m
	AGGRESSIVE g
	BROWN e
	BY_ID h
	LAZY b
	MAX_GENE i
	NORMAL a
	PLAYFUL d
	WEAK f
	WORRIED c
	id j
	isRecessive l
	name k
	$values ()[Lnet/minecraft/world/entity/animal/Panda$Gene; d
	byId (I)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	getId ()I a
	getName ()Ljava/lang/String; b
	getRandom (Ljava/util/Random;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	getVariantFromGenes (Lnet/minecraft/world/entity/animal/Panda$Gene;Lnet/minecraft/world/entity/animal/Panda$Gene;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	isRecessive ()Z c
net/minecraft/world/entity/animal/Panda$PandaAttackGoal bhy$b
	panda b
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaAvoidGoal bhy$c
	panda i
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaBreedGoal bhy$d
	panda d
	unhappyCooldown e
	canFindBamboo ()Z i
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal bhy$e
	panda a
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal bhy$f
	cooldown b
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal bhy$g
	panda h
	canContinueToUse ()Z b
	canUse ()Z a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	tick ()V e
net/minecraft/world/entity/animal/Panda$PandaMoveControl bhy$h
	panda l
	tick ()V a
net/minecraft/world/entity/animal/Panda$PandaPanicGoal bhy$i
	panda h
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaRollGoal bhy$j
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
net/minecraft/world/entity/animal/Panda$PandaSitGoal bhy$k
	cooldown b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Panda$PandaSneezeGoal bhy$l
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Parrot net/minecraft/world/entity/animal/EntityParrot
	DATA_VARIANT_ID cd
	MOB_SOUND_MAP ci
	NOT_PARROT_PREDICATE ce
	POISONOUS_FOOD cf
	TAME_FOOD cg
	VARIANTS ch
	flap bZ
	flapSpeed ca
	flapping cj
	jukebox cm
	nextFlap ck
	oFlap cc
	oFlapSpeed cb
	partyParrot cl
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	calculateFlapping ()V fK
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkParrotSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fG
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbient (Lnet/minecraft/world/level/Level;Ljava/util/Random;)Lnet/minecraft/sounds/SoundEvent; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getImitatedSound (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/sounds/SoundEvent; b
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cz
	getPitch (Ljava/util/Random;)F a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cO
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVariant ()I fI
	getVoicePitch ()F ev
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	imitateNearbyMobs (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Z a
	isBaby ()Z y_
	isFlapping ()Z aK
	isFlying ()Z fM
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isPartyParrot ()Z fH
	isPushable ()Z bi
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onFlap ()V aJ
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setRecordPlayingNearby (Lnet/minecraft/core/BlockPos;Z)V a
	setVariant (I)V t
net/minecraft/world/entity/animal/Parrot$ParrotWanderGoal bhz$a
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	getTreePos ()Lnet/minecraft/world/phys/Vec3; k
net/minecraft/world/entity/animal/Pig net/minecraft/world/entity/animal/EntityPig
	DATA_BOOST_TIME bX
	DATA_SADDLE_ID bW
	FOOD_ITEMS bZ
	steering ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	boost ()Z a
	canBeControlledByRider ()Z ff
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	dropEquipment ()V ec
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Pig; b
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cE
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cz
	getSteeringSpeed ()F b
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isSaddleable ()Z c
	isSaddled ()Z d
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/animal/PolarBear net/minecraft/world/entity/animal/EntityPolarBear
	DATA_STANDING_ID bW
	PERSISTENT_ANGER_TIME cc
	STAND_ANIMATION_TICKS bX
	clientSideStandAnimation ca
	clientSideStandAnimationO bZ
	persistentAngerTarget ce
	remainingPersistentAngerTime cd
	warningSoundTicks cb
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkPolarBearSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getStandingAnimationScale (F)F z
	getWaterSlowDown ()F eB
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isStanding ()Z fy
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playWarningSound ()V t
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setStanding (Z)V v
	startPersistentAngerTimer ()V c
	tick ()V k
net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal bib$a
	canUse ()Z a
	getFollowDistance ()D l
net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal bib$b
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal bib$c
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
	stop ()V d
net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal bib$d
	canUse ()Z a
net/minecraft/world/entity/animal/Pufferfish net/minecraft/world/entity/animal/EntityPufferFish
	PUFF_STATE e
	SCARY_MOB bY
	STATE_FULL d
	STATE_MID c
	STATE_SMALL b
	deflateTimer bX
	inflateCounter bW
	targetingConditions bZ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fz
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPuffState ()I fA
	getScale (I)F s
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setPuffState (I)V b
	tick ()V k
	touch (Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal bic$a
	fish a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Rabbit net/minecraft/world/entity/animal/EntityRabbit
	ATTACK_SPEED_MOD cb
	BREED_SPEED_MOD bX
	DATA_TYPE_ID cl
	EVIL_ARMOR_VALUE ck
	EVIL_ATTACK_POWER cj
	FLEE_SPEED_MOD ca
	FOLLOW_SPEED_MOD bZ
	KILLER_BUNNY cm
	MORE_CARROTS_DELAY cn
	STROLL_SPEED_MOD bW
	TYPE_BLACK ce
	TYPE_BROWN cc
	TYPE_EVIL ci
	TYPE_GOLD cg
	TYPE_SALT ch
	TYPE_WHITE cd
	TYPE_WHITE_SPLOTCHED cf
	jumpDelayTicks cr
	jumpDuration cp
	jumpTicks co
	moreCarrotTicks cs
	wasOnGround cq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	canSpawnSprintParticle ()Z ba
	checkLandingDelay ()V fI
	checkRabbitSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; t
	customServerAiStep ()V R
	defineSynchedData ()V a_
	disableJumpControl ()V fG
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	enableJumpControl ()V fA
	facePoint (DD)V b
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Rabbit; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getJumpCompletion (F)F z
	getJumpPower ()F ex
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; fy
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cz
	getRabbitType ()I fz
	getRandomRabbitType (Lnet/minecraft/world/level/LevelAccessor;)I a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cO
	handleEntityEvent (B)V a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isTemptingItem (Lnet/minecraft/world/item/ItemStack;)Z m
	jumpFromGround ()V ez
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setJumping (Z)V q
	setLandingDelay ()V fH
	setRabbitType (I)V t
	setSpeedModifier (D)V i
	startJumping ()V q
	wantsMoreFood ()Z fJ
net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal net/minecraft/world/entity/animal/EntityRabbit$PathfinderGoalKillerRabbitMeleeAttack
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal net/minecraft/world/entity/animal/EntityRabbit$PathfinderGoalRabbitAvoidTarget
	rabbit i
	canUse ()Z a
net/minecraft/world/entity/animal/Rabbit$RabbitGroupData net/minecraft/world/entity/animal/EntityRabbit$GroupDataRabbit
	rabbitType a
net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl net/minecraft/world/entity/animal/EntityRabbit$ControllerJumpRabbit
	canJump c
	rabbit b
	canJump ()Z d
	setCanJump (Z)V a
	tick ()V b
	wantJump ()Z c
net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl net/minecraft/world/entity/animal/EntityRabbit$ControllerMoveRabbit
	nextJumpSpeed m
	rabbit l
	setWantedPosition (DDDD)V a
	tick ()V a
net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal net/minecraft/world/entity/animal/EntityRabbit$PathfinderGoalRabbitPanic
	rabbit h
	tick ()V e
net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal net/minecraft/world/entity/animal/EntityRabbit$PathfinderGoalEatCarrots
	canRaid i
	rabbit g
	wantsToRaid h
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	tick ()V e
net/minecraft/world/entity/animal/Salmon net/minecraft/world/entity/animal/EntitySalmon
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fz
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxSchoolSize ()I fA
net/minecraft/world/entity/animal/Sheep net/minecraft/world/entity/animal/EntitySheep
	COLORARRAY_BY_COLOR ca
	DATA_WOOL_ID bX
	EAT_ANIMATION_TICKS bW
	ITEM_BY_DYE bZ
	eatAnimationTick cb
	eatBlockGoal cc
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	ate ()V I
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	createSheepColor (Lnet/minecraft/world/item/DyeColor;)[F c
	customServerAiStep ()V R
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Sheep; b
	getColor ()Lnet/minecraft/world/item/DyeColor; t
	getColorArray (Lnet/minecraft/world/item/DyeColor;)[F a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; N
	getHeadEatAngleScale (F)F A
	getHeadEatPositionScale (F)F z
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getOffspringColor (Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/item/DyeColor; a
	getRandomSheepColor (Ljava/util/Random;)Lnet/minecraft/world/item/DyeColor; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	isSheared ()Z fy
	makeContainer (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/inventory/CraftingContainer; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	registerGoals ()V u
	setColor (Lnet/minecraft/world/item/DyeColor;)V b
	setSheared (Z)V v
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/animal/ShoulderRidingEntity net/minecraft/world/entity/animal/EntityPerchable
	RIDE_COOLDOWN bZ
	rideCooldownCounter ca
	canSitOnShoulder ()Z fJ
	setEntityOnShoulder (Lnet/minecraft/server/level/ServerPlayer;)Z b
	tick ()V k
net/minecraft/world/entity/animal/SnowGolem net/minecraft/world/entity/animal/EntitySnowman
	DATA_PUMPKIN_ID b
	EYE_HEIGHT d
	PUMPKIN_FLAG c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cz
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasPumpkin ()Z q
	isSensitiveToWater ()Z eD
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	registerGoals ()V u
	setPumpkin (Z)V v
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/animal/Squid net/minecraft/world/entity/animal/EntitySquid
	oldTentacleAngle bZ
	oldTentacleMovement bX
	rotateSpeed cc
	speed ca
	tentacleAngle bY
	tentacleMovement bW
	tentacleSpeed cb
	tx cd
	ty ce
	tz cf
	xBodyRot b
	xBodyRotO c
	zBodyRot d
	zBodyRotO e
	aiStep ()V w_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fy
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInkParticle ()Lnet/minecraft/core/particles/ParticleOptions; n
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getSoundVolume ()F eu
	getSquirtSound ()Lnet/minecraft/sounds/SoundEvent; q
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	hasMovementVector ()Z fz
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	registerGoals ()V u
	rotateVector (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; j
	setMovementVector (FFF)V a
	spawnInk ()V t
	travel (Lnet/minecraft/world/phys/Vec3;)V h
net/minecraft/world/entity/animal/Squid$SquidFleeGoal bii$a
	SQUID_FLEE_MAX_DISTANCE d
	SQUID_FLEE_MIN_DISTANCE c
	SQUID_FLEE_SPEED b
	fleeTicks e
	canUse ()Z a
	requiresUpdateEveryTick ()Z h
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal net/minecraft/world/entity/animal/EntitySquid$PathfinderGoalSquid
	squid b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/animal/TropicalFish net/minecraft/world/entity/animal/EntityTropicalFish
	BASES bX
	BASE_LARGE d
	BASE_SMALL c
	BASE_TEXTURE_LOCATIONS bY
	BUCKET_VARIANT_TAG b
	COLORS cc
	COMMON_VARIANTS e
	DATA_ID_TYPE_VARIANT bW
	PATTERNS cb
	PATTERN_A_TEXTURE_LOCATIONS bZ
	PATTERN_B_TEXTURE_LOCATIONS ca
	isSchool cd
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	calculateVariant (Lnet/minecraft/world/entity/animal/TropicalFish$Pattern;Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/item/DyeColor;)I a
	checkTropicalFishSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBaseColor ()[F fI
	getBaseColor (I)Lnet/minecraft/world/item/DyeColor; s
	getBaseColorIdx (I)I x
	getBaseTextureLocation ()Lnet/minecraft/resources/ResourceLocation; fM
	getBaseVariant ()I fK
	getBaseVariant (I)I w
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFishTypeName (I)Ljava/lang/String; u
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fz
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPatternColor ()[F fJ
	getPatternColor (I)Lnet/minecraft/world/item/DyeColor; t
	getPatternColorIdx (I)I y
	getPatternTextureLocation ()Lnet/minecraft/resources/ResourceLocation; fL
	getPatternVariant (I)I z
	getPredefinedName (I)Ljava/lang/String; b
	getVariant ()I fH
	isMaxGroupSizeReached (I)Z c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V m
	setVariant (I)V v
net/minecraft/world/entity/animal/TropicalFish$Pattern net/minecraft/world/entity/animal/EntityTropicalFish$Variant
	$VALUES p
	BETTY k
	BLOCKFISH j
	BRINELY e
	CLAYFISH l
	DASHER d
	FLOPPER g
	GLITTER i
	KOB a
	SNOOPER c
	SPOTTY f
	STRIPEY h
	SUNSTREAK b
	VALUES o
	base m
	index n
	$values ()[Lnet/minecraft/world/entity/animal/TropicalFish$Pattern; d
	getBase ()I a
	getIndex ()I b
	getName ()Ljava/lang/String; c
	getPatternName (II)Ljava/lang/String; a
net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData bij$b
	base b
	baseColor d
	pattern c
	patternColor e
net/minecraft/world/entity/animal/Turtle net/minecraft/world/entity/animal/EntityTurtle
	BABY_ON_LAND_SELECTOR bX
	FOOD_ITEMS bW
	GOING_HOME cd
	HAS_EGG ca
	HOME_POS bZ
	LAYING_EGG cb
	TRAVELLING ce
	TRAVEL_POS cc
	layEggCounter cf
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V n
	aiStep ()V w_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z dw
	canFallInLove ()Z fB
	checkTurtleSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fy
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAmbientSoundInterval ()I J
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHomePos ()Lnet/minecraft/core/BlockPos; fz
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	getScale ()F dE
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aF
	getTravelPos ()Lnet/minecraft/core/BlockPos; fA
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasEgg ()Z q
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isGoingHome ()Z fG
	isLayingEgg ()Z t
	isPushedByFluid ()Z cp
	isTravelling ()Z fH
	nextStep ()F aE
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playSwimSound (F)V d
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setGoingHome (Z)V x
	setHasEgg (Z)V v
	setHomePos (Lnet/minecraft/core/BlockPos;)V g
	setLayingEgg (Z)V w
	setTravelPos (Lnet/minecraft/core/BlockPos;)V h
	setTravelling (Z)V y
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V h
net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal bik$a
	turtle d
	breed ()V g
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal bik$b
	GIVE_UP_TICKS e
	closeToHomeTryTicks d
	speedModifier b
	stuck c
	turtle a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal bik$c
	GIVE_UP_TICKS g
	turtle h
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldRecalculatePath ()Z l
net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal bik$d
	turtle g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleMoveControl bik$e
	turtle l
	tick ()V a
	updateSpeed ()V g
net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal bik$f
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation bik$g
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal bik$h
	turtle i
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal bik$i
	speedModifier b
	stuck c
	turtle a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/WaterAnimal net/minecraft/world/entity/animal/EntityWaterAnimal
	baseTick ()V an
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z dw
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkSurfaceWaterAnimalSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	getAmbientSoundInterval ()I J
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	handleAirSupply (I)V a
	isPushedByFluid ()Z cp
net/minecraft/world/entity/animal/Wolf net/minecraft/world/entity/animal/EntityWolf
	DATA_COLLAR_COLOR cb
	DATA_INTERESTED_ID ca
	DATA_REMAINING_ANGER_TIME cc
	PERSISTENT_ANGER_TIME cl
	PREY_SELECTOR bZ
	START_HEALTH cd
	TAME_HEALTH ce
	interestedAngle cf
	interestedAngleO cg
	isShaking ci
	isWet ch
	persistentAngerTarget cm
	shakeAnim cj
	shakeAnimO ck
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	cancelShake ()V fL
	checkWolfSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fG
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBodyRollAngle (FF)F f
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Wolf; b
	getCollarColor ()Lnet/minecraft/world/item/DyeColor; fJ
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHeadRollAngle (F)F A
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cz
	getMaxHeadXRot ()I T
	getMaxSpawnClusterSize ()I fe
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getSoundVolume ()F eu
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTailAngle ()F fI
	getWetShade (F)F z
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isInterested ()Z fK
	isWet ()Z fH
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setCollarColor (Lnet/minecraft/world/item/DyeColor;)V a
	setIsInterested (Z)V z
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTame (Z)V w
	startPersistentAngerTimer ()V c
	tick ()V k
	wantsToAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal bim$a
	wolf j
	avoidLlama (Lnet/minecraft/world/entity/animal/horse/Llama;)Z a
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlGroupData bin$a
	types a
	getVariant (Ljava/util/Random;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlLookControl bin$b
	tick ()V a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlMoveControl bin$c
	axolotl l
	tick ()V a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlPathNavigation bin$d
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/animal/goat/Goat$GoatNodeEvaluator bis$a
	belowPos l
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
net/minecraft/world/entity/animal/goat/Goat$GoatPathNavigation bis$b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
net/minecraft/world/entity/animal/horse/AbstractChestedHorse net/minecraft/world/entity/animal/horse/EntityHorseChestedAbstract
	DATA_ID_CHEST cm
	INV_CHEST_COUNT bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createBaseChestedHorseAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; t
	defineSynchedData ()V a_
	dropEquipment ()V ec
	getInventoryColumns ()I fG
	getInventorySize ()I fz
	getPassengersRidingOffset ()D bq
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	hasChest ()Z fy
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playChestEquipsSound ()V fA
	randomizeAttributes ()V q
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setChest (Z)V v
net/minecraft/world/entity/animal/horse/AbstractHorse net/minecraft/world/entity/animal/horse/EntityHorseAbstract
	CHEST_SLOT_OFFSET bZ
	DATA_ID_FLAGS co
	DATA_ID_OWNER_UUID cp
	EQUIPMENT_SLOT_OFFSET bX
	FLAG_BRED cs
	FLAG_EATING ct
	FLAG_OPEN_MOUTH cv
	FLAG_SADDLE cr
	FLAG_STANDING cu
	FLAG_TAME cq
	FOOD_ITEMS cn
	INVENTORY_SLOT_OFFSET ca
	INV_BASE_COUNT cd
	INV_SLOT_ARMOR cc
	INV_SLOT_SADDLE cb
	MOMMY_TARGETING cm
	PARENT_HORSE_SELECTOR bW
	allowStandSliding cz
	canGallop ck
	eatAnim cA
	eatAnimO cB
	eatingCounter cw
	gallopSoundCounter cl
	inventory ch
	isJumping cg
	mouthAnim cE
	mouthAnimO cF
	mouthCounter cx
	playerJumpPendingScale cj
	sprintCounter cf
	standAnim cC
	standAnimO cD
	standCounter cy
	tailCounter ce
	temper ci
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V fH
	aiStep ()V w_
	calculateFallDamage (FF)I d
	canBeControlledByRider ()Z ff
	canEatGrass ()Z fX
	canJump ()Z a
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canParent ()Z ga
	canWearArmor ()Z ge
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	containerChanged (Lnet/minecraft/world/Container;)V a
	createBaseHorseAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fU
	createEquipmentSlotAccess (ILjava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	createInventory ()V fP
	defineSynchedData ()V a_
	doPlayerRide (Lnet/minecraft/world/entity/player/Player;)V h
	dropEquipment ()V ec
	eating ()V t
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	fedFood (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/InteractionResult; a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	followMommy ()V fW
	generateRandomJumpStrength ()D gc
	generateRandomMaxHealth ()F gb
	generateRandomSpeed ()D gd
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAmbientSoundInterval ()I J
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fT
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cE
	getCustomJump ()D fR
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDismountLocationInDirection (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; a
	getEatAnim (F)F z
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fS
	getFlag (I)Z t
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventorySize ()I fz
	getMaxSpawnClusterSize ()I fe
	getMaxTemper ()I fV
	getMouthAnim (F)F B
	getOwnerUUID ()Ljava/util/UUID; fJ
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getSoundVolume ()F eu
	getStandAnim (F)F A
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTemper ()I fO
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z b
	handleEntityEvent (B)V a
	handleStartJump (I)V b
	handleStopJump ()V b
	hasInventoryChanged (Lnet/minecraft/world/Container;)Z b
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z m
	isBred ()Z fN
	isEating ()Z fL
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isImmobile ()Z ew
	isJumping ()Z fK
	isPushable ()Z bi
	isSaddleable ()Z c
	isSaddled ()Z d
	isStanding ()Z fM
	isTamed ()Z fI
	isWearingArmor ()Z gf
	makeMad ()V fY
	modifyTemper (I)I v
	moveTail ()V fy
	onClimbable ()Z b_
	onLeashDistance (F)V y
	onPlayerJump (I)V a
	openInventory (Lnet/minecraft/world/entity/player/Player;)V f
	openMouth ()V fA
	playGallopSound (Lnet/minecraft/world/level/block/SoundType;)V a
	playJumpSound ()V fZ
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	randomizeAttributes ()V q
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setBred (Z)V y
	setEating (Z)V z
	setFlag (IZ)V d
	setIsJumping (Z)V x
	setOffspringAttributes (Lnet/minecraft/world/entity/AgeableMob;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)V a
	setOwnerUUID (Ljava/util/UUID;)V b
	setStanding (Z)V A
	setTamed (Z)V w
	setTemper (I)V u
	spawnTamingParticles (Z)V B
	stand ()V fG
	tameWithName (Lnet/minecraft/world/entity/player/Player;)Z i
	tick ()V k
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	updateContainerEquipment ()V fQ
net/minecraft/world/entity/animal/horse/Donkey net/minecraft/world/entity/animal/horse/EntityHorseDonkey
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fT
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fS
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
net/minecraft/world/entity/animal/horse/Horse net/minecraft/world/entity/animal/horse/EntityHorse
	ARMOR_MODIFIER_UUID bW
	DATA_ID_TYPE_VARIANT cm
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canWearArmor ()Z ge
	containerChanged (Lnet/minecraft/world/Container;)V a
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fT
	getArmor ()Lnet/minecraft/world/item/ItemStack; t
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fS
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMarkings ()Lnet/minecraft/world/entity/animal/horse/Markings; fA
	getTypeVariant ()I fG
	getVariant ()Lnet/minecraft/world/entity/animal/horse/Variant; fy
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z m
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playGallopSound (Lnet/minecraft/world/level/block/SoundType;)V a
	randomizeAttributes ()V q
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setArmor (Lnet/minecraft/world/item/ItemStack;)V o
	setArmorEquipment (Lnet/minecraft/world/item/ItemStack;)V p
	setTypeVariant (I)V w
	setVariantAndMarkings (Lnet/minecraft/world/entity/animal/horse/Variant;Lnet/minecraft/world/entity/animal/horse/Markings;)V a
	updateContainerEquipment ()V fQ
net/minecraft/world/entity/animal/horse/Horse$HorseGroupData biy$a
	variant a
net/minecraft/world/entity/animal/horse/Llama net/minecraft/world/entity/animal/horse/EntityLlama
	DATA_STRENGTH_ID cp
	DATA_SWAG_ID cq
	DATA_VARIANT_ID cr
	FOOD_ITEMS co
	MAX_STRENGTH cm
	VARIANTS cn
	caravanHead ct
	caravanTail cu
	didSpit cs
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeControlledByRider ()Z ff
	canEatGrass ()Z fX
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canWearArmor ()Z ge
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	containerChanged (Lnet/minecraft/world/Container;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gi
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	followLeashSpeed ()D fx
	followMommy ()V fW
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fT
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/horse/Llama; b
	getCaravanHead ()Lnet/minecraft/world/entity/animal/horse/Llama; gp
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDyeColor (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/DyeColor; o
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fS
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventoryColumns ()I fG
	getInventorySize ()I fz
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cz
	getMaxTemper ()I fV
	getPassengersRidingOffset ()D bq
	getStrength ()I gh
	getSwag ()Lnet/minecraft/world/item/DyeColor; gk
	getVariant ()I gj
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z b
	hasCaravanTail ()Z gn
	inCaravan ()Z go
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z m
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isImmobile ()Z ew
	isSaddleable ()Z c
	isTraderLlama ()Z gg
	isWearingArmor ()Z gf
	joinCaravan (Lnet/minecraft/world/entity/animal/horse/Llama;)V a
	leaveCaravan ()V gm
	makeBabyLlama ()Lnet/minecraft/world/entity/animal/horse/Llama; gl
	makeMad ()V fY
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	playChestEquipsSound ()V fA
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setDidSpit (Z)V C
	setRandomStrength ()V gq
	setStrength (I)V x
	setSwag (Lnet/minecraft/world/item/DyeColor;)V a
	setVariant (I)V w
	spit (Lnet/minecraft/world/entity/LivingEntity;)V j
	updateContainerEquipment ()V fQ
net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal biz$a
	getFollowDistance ()D l
net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData biz$b
	variant a
net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal biz$c
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/horse/Markings net/minecraft/world/entity/animal/horse/HorseStyle
	$VALUES h
	BLACK_DOTS e
	BY_ID f
	NONE a
	WHITE b
	WHITE_DOTS d
	WHITE_FIELD c
	id g
	$values ()[Lnet/minecraft/world/entity/animal/horse/Markings; b
	byId (I)Lnet/minecraft/world/entity/animal/horse/Markings; a
	getId ()I a
net/minecraft/world/entity/animal/horse/Mule net/minecraft/world/entity/animal/horse/EntityHorseMule
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fT
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fS
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	playChestEquipsSound ()V fA
net/minecraft/world/entity/animal/horse/SkeletonHorse net/minecraft/world/entity/animal/horse/EntityHorseSkeleton
	TRAP_MAX_LIFE cm
	isTrap cn
	skeletonTrapGoal bW
	trapTime co
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V fH
	aiStep ()V w_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; t
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	getPassengersRidingOffset ()D bq
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aF
	getWaterSlowDown ()F eB
	isTrap ()Z fy
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playJumpSound ()V fZ
	playSwimSound (F)V d
	randomizeAttributes ()V q
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rideableUnderWater ()Z bH
	setTrap (Z)V v
net/minecraft/world/entity/animal/horse/SkeletonTrapGoal net/minecraft/world/entity/animal/horse/PathfinderGoalHorseTrap
	horse a
	canUse ()Z a
	createHorse (Lnet/minecraft/world/DifficultyInstance;)Lnet/minecraft/world/entity/animal/horse/AbstractHorse; a
	createSkeleton (Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Lnet/minecraft/world/entity/monster/Skeleton; a
	disenchant (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	tick ()V e
net/minecraft/world/entity/animal/horse/TraderLlama net/minecraft/world/entity/animal/horse/EntityLlamaTrader
	despawnDelay cm
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	canDespawn ()Z gr
	doPlayerRide (Lnet/minecraft/world/entity/player/Player;)V h
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	isLeashedToSomethingOtherThanTheWanderingTrader ()Z gt
	isLeashedToWanderingTrader ()Z gs
	isTraderLlama ()Z gg
	makeBabyLlama ()Lnet/minecraft/world/entity/animal/horse/Llama; gl
	maybeDespawn ()V gq
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setDespawnDelay (I)V x
net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal bje$a
	llama a
	ownerLastHurtBy b
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/horse/Variant net/minecraft/world/entity/animal/horse/HorseColor
	$VALUES j
	BLACK e
	BROWN d
	BY_ID h
	CHESTNUT c
	CREAMY b
	DARKBROWN g
	GRAY f
	WHITE a
	id i
	$values ()[Lnet/minecraft/world/entity/animal/horse/Variant; b
	byId (I)Lnet/minecraft/world/entity/animal/horse/Variant; a
	getId ()I a
net/minecraft/world/entity/animal/horse/ZombieHorse net/minecraft/world/entity/animal/horse/EntityHorseZombie
	addBehaviourGoals ()V fH
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; t
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	randomizeAttributes ()V q
net/minecraft/world/entity/boss/EnderDragonPart net/minecraft/world/entity/boss/EntityComplexPart
	name c
	parentMob b
	size d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	is (Lnet/minecraft/world/entity/Entity;)Z q
	isPickable ()Z bh
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldBeSaved ()Z dr
net/minecraft/world/entity/boss/enderdragon/EndCrystal net/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal
	DATA_BEAM_TARGET c
	DATA_SHOW_BOTTOM d
	time b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBeamTarget ()Lnet/minecraft/core/BlockPos; h
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dk
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bh
	kill ()V ag
	onDestroyedBy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBeamTarget (Lnet/minecraft/core/BlockPos;)V a
	setShowBottom (Z)V a
	shouldRenderAtSqrDistance (D)Z a
	showsBottom ()Z i
	tick ()V k
net/minecraft/world/entity/boss/enderdragon/EnderDragon net/minecraft/world/entity/boss/enderdragon/EntityEnderDragon
	CRYSTAL_DESTROY_TARGETING cc
	DATA_PHASE b
	DRAGON_DEATH_TIME_KEY cg
	DRAGON_PHASE_KEY ch
	GROWL_INTERVAL_MAX ce
	GROWL_INTERVAL_MIN cd
	LOGGER cb
	SITTING_ALLOWED_DAMAGE_PERCENTAGE cf
	body ck
	dragonDeathTime bY
	dragonFight cq
	flapTime bW
	growlTime cs
	head e
	inWall bX
	nearestCrystal ca
	neck cj
	nodeAdjacency cv
	nodes cu
	oFlapTime bV
	openSet cw
	phaseManager cr
	posPointer d
	positions c
	sittingDamageReceived ct
	subEntities ci
	tail1 cl
	tail2 cm
	tail3 cn
	wing1 co
	wing2 cp
	yRotA bZ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)Z b
	aiStep ()V w_
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canChangeDimensions ()Z ci
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	checkCrystals ()V fz
	checkDespawn ()V dj
	checkWalls (Lnet/minecraft/world/phys/AABB;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	defineSynchedData ()V a_
	findClosestNode ()I q
	findClosestNode (DDD)I q
	findPath (IILnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Path; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDragonFight ()Lnet/minecraft/world/level/dimension/end/EndDragonFight; fx
	getHeadLookVector (F)Lnet/minecraft/world/phys/Vec3; y
	getHeadPartYOffset (I[D[D)F a
	getHeadYOffset ()F fy
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLatencyPos (IF)[D a
	getPhaseManager ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager; fw
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cO
	getSoundVolume ()F eu
	getSubEntities ()[Lnet/minecraft/world/entity/boss/EnderDragonPart; t
	hurt (Ljava/util/List;)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurt (Lnet/minecraft/world/entity/boss/EnderDragonPart;Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFlapping ()Z aK
	isPickable ()Z bh
	kill ()V ag
	knockBack (Ljava/util/List;)V a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;)V a
	onFlap ()V aJ
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z g
	reconstructPath (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Path; a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddMobPacket;)V a
	rotWrap (D)F i
	tickDeath ()V dG
	tickPart (Lnet/minecraft/world/entity/boss/EnderDragonPart;DDD)V a
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonController
	dragon a
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getTurnSpeed ()F h
	isSitting ()Z a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonControllerLanded
	isSitting ()Z a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerCharge
	CHARGE_RECOVERY_TIME c
	LOGGER b
	targetLocation d
	timeSinceCharge e
	begin ()V d
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	setTarget (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerDying
	targetLocation b
	time c
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerHold
	NEW_TARGET_TARGETING b
	clockwise e
	currentPath c
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	strafePlayer (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerHover
	targetLocation b
	begin ()V d
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	isSitting ()Z a
net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandingFly
	NEAR_EGG_TARGETING b
	currentPath c
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLanding
	targetLocation b
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	getTurnSpeed ()F h
net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance net/minecraft/world/entity/boss/enderdragon/phases/IDragonController
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	getTurnSpeed ()F h
	isSitting ()Z a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandedAttack
	ROAR_DURATION b
	attackingTicks c
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandedFlame
	FLAME_DURATION b
	SITTING_FLAME_ATTACKS_COUNT c
	WARMUP_TIME d
	flame g
	flameCount f
	flameTicks e
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	resetFlameCount ()V j
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandedSearch
	CHARGE_TARGETING f
	SITTING_ATTACK_VIEW_RANGE d
	SITTING_ATTACK_Y_VIEW_RANGE c
	SITTING_CHARGE_VIEW_RANGE e
	SITTING_SCANNING_IDLE_TICKS b
	scanTargeting g
	scanningTime h
	begin ()V d
	doServerTick ()V c
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerStrafe
	FIREBALL_CHARGE_AMOUNT c
	LOGGER b
	attackTarget g
	currentPath e
	fireballCharge d
	holdingPatternClockwise h
	targetLocation f
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerFly
	currentPath c
	firstTick b
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase
	CHARGING_PLAYER i
	DYING j
	HOLDING_PATTERN a
	HOVERING k
	LANDING d
	LANDING_APPROACH c
	SITTING_ATTACKING h
	SITTING_FLAMING f
	SITTING_SCANNING g
	STRAFE_PLAYER b
	TAKEOFF e
	id n
	instanceClass m
	name o
	phases l
	create (Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; a
	createInstance (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; a
	getById (I)Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; a
	getConstructor ()Ljava/lang/reflect/Constructor; a
	getCount ()I c
	getId ()I b
net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerManager
	LOGGER a
	currentPhase d
	dragon b
	phases c
	getCurrentPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; a
	getPhase (Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; b
	setPhase (Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase;)V a
net/minecraft/world/entity/boss/wither/WitherBoss net/minecraft/world/entity/boss/wither/EntityWither
	DATA_ID_INV bW
	DATA_TARGETS e
	DATA_TARGET_A b
	DATA_TARGET_B c
	DATA_TARGET_C d
	INVULNERABLE_TICKS bX
	LIVING_ENTITY_SELECTOR cg
	TARGETING_CONDITIONS ch
	bossEvent cf
	destroyBlocksTick ce
	idleHeadUpdates cd
	nextHeadUpdate cc
	xRotHeads bY
	xRotOHeads ca
	yRotHeads bZ
	yRotOHeads cb
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)Z b
	aiStep ()V w_
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	canChangeDimensions ()Z ci
	canDestroy (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkDespawn ()V dj
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V R
	defineSynchedData ()V a_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAlternativeTarget (I)I t
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHeadX (I)D u
	getHeadXRot (I)F b
	getHeadY (I)D v
	getHeadYRot (I)F a
	getHeadZ (I)D w
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInvulnerableTicks ()I t
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPowered ()Z a
	makeInvulnerable ()V n
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	performRangedAttack (IDDDZ)V a
	performRangedAttack (ILnet/minecraft/world/entity/LivingEntity;)V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	rotlerp (FFF)F a
	setAlternativeTarget (II)V a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setInvulnerableTicks (I)V s
	startSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	stopSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal bkf$a
	canUse ()Z a
net/minecraft/world/entity/decoration/ArmorStand net/minecraft/world/entity/decoration/EntityArmorStand
	BABY_DIMENSIONS bX
	CHEST_OFFSET bZ
	CLIENT_FLAG_MARKER bG
	CLIENT_FLAG_NO_BASEPLATE bF
	CLIENT_FLAG_SHOW_ARMS f
	CLIENT_FLAG_SMALL e
	DATA_BODY_POSE bJ
	DATA_CLIENT_FLAGS bH
	DATA_HEAD_POSE bI
	DATA_LEFT_ARM_POSE bK
	DATA_LEFT_LEG_POSE bM
	DATA_RIGHT_ARM_POSE bL
	DATA_RIGHT_LEG_POSE bN
	DEFAULT_BODY_POSE bR
	DEFAULT_HEAD_POSE bQ
	DEFAULT_LEFT_ARM_POSE bS
	DEFAULT_LEFT_LEG_POSE bU
	DEFAULT_RIGHT_ARM_POSE bT
	DEFAULT_RIGHT_LEG_POSE bV
	DISABLE_PUTTING_OFFSET d
	DISABLE_TAKING_OFFSET c
	ENABLE_ARMS bP
	FEET_OFFSET bY
	HEAD_OFFSET cb
	LEGS_OFFSET ca
	MARKER_DIMENSIONS bW
	RIDABLE_MINECARTS cc
	WOBBLE_TIME b
	armorItems ce
	bodyPose ci
	disabledSlots cg
	handItems cd
	headPose ch
	invisible cf
	lastHit bO
	leftArmPose cj
	leftLegPose cl
	rightArmPose ck
	rightLegPose cm
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	attackable ()Z eX
	brokenByAnything (Lnet/minecraft/world/damagesource/DamageSource;)V h
	brokenByPlayer (Lnet/minecraft/world/damagesource/DamageSource;)V g
	canBeSeenByAnyone ()Z dT
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	causeDamage (Lnet/minecraft/world/damagesource/DamageSource;F)V g
	defineSynchedData ()V a_
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	getArmorSlots ()Ljava/lang/Iterable; bC
	getBodyPose ()Lnet/minecraft/core/Rotations; w
	getClickedSlot (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/EquipmentSlot; j
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDimensionsMarker (Z)Lnet/minecraft/world/entity/EntityDimensions; u
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; ef
	getHandSlots ()Ljava/lang/Iterable; bB
	getHeadPose ()Lnet/minecraft/core/Rotations; u
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getLeftArmPose ()Lnet/minecraft/core/Rotations; x
	getLeftLegPose ()Lnet/minecraft/core/Rotations; z
	getLightProbePosition (F)Lnet/minecraft/world/phys/Vec3; j
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; eK
	getMyRidingOffset ()D bp
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dk
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; c_
	getRightArmPose ()Lnet/minecraft/core/Rotations; y
	getRightLegPose ()Lnet/minecraft/core/Rotations; A
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	hasPhysics ()Z C
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion ()Z cC
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAffectedByPotions ()Z eW
	isBaby ()Z y_
	isDisabled (Lnet/minecraft/world/entity/EquipmentSlot;)Z d
	isEffectiveAi ()Z eH
	isMarker ()Z t
	isNoBasePlate ()Z r
	isPickable ()Z bh
	isPushable ()Z bi
	isShowArms ()Z q
	isSmall ()Z n
	kill ()V ag
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playBrokenSound ()V G
	pushEntities ()V eF
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readPose (Lnet/minecraft/nbt/CompoundTag;)V c
	refreshDimensions ()V z_
	setBit (BIZ)B a
	setBodyPose (Lnet/minecraft/core/Rotations;)V b
	setHeadPose (Lnet/minecraft/core/Rotations;)V a
	setInvisible (Z)V j
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLeftArmPose (Lnet/minecraft/core/Rotations;)V c
	setLeftLegPose (Lnet/minecraft/core/Rotations;)V e
	setMarker (Z)V t
	setNoBasePlate (Z)V s
	setRightArmPose (Lnet/minecraft/core/Rotations;)V d
	setRightLegPose (Lnet/minecraft/core/Rotations;)V f
	setShowArms (Z)V r
	setSmall (Z)V a
	setYBodyRot (F)V m
	setYHeadRot (F)V l
	shouldRenderAtSqrDistance (D)Z a
	showBreakingParticles ()V E
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z r
	swapItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Z a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
	tickHeadTurn (FF)F e
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	updateInvisibilityStatus ()V F
	writePose ()Lnet/minecraft/nbt/CompoundTag; D
net/minecraft/world/entity/decoration/HangingEntity net/minecraft/world/entity/decoration/EntityHanging
	HANGING_ENTITY b
	checkInterval e
	direction d
	pos c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getDirection ()Lnet/minecraft/core/Direction; ct
	getHeight ()I t
	getPos ()Lnet/minecraft/core/BlockPos; w
	getWidth ()I s
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bh
	mirror (Lnet/minecraft/world/level/block/Mirror;)F a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	offs (I)D a
	playPlacementSound ()V u
	push (DDD)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V q
	refreshDimensions ()V z_
	repositionEntityAfterLoad ()Z bj
	rotate (Lnet/minecraft/world/level/block/Rotation;)F a
	setDirection (Lnet/minecraft/core/Direction;)V a
	setPos (DDD)V e
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z r
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/ItemEntity; a
	survives ()Z r
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
net/minecraft/world/entity/decoration/ItemFrame net/minecraft/world/entity/decoration/EntityItemFrame
	DATA_ITEM ap
	DATA_ROTATION aq
	LOGGER f
	NUM_ROTATIONS e
	dropChance ar
	fixed as
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	dropItem (Lnet/minecraft/world/entity/Entity;Z)V b
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAddItemSound ()Lnet/minecraft/sounds/SoundEvent; l
	getAnalogOutput ()I z
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; i
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFrameItemStack ()Lnet/minecraft/world/item/ItemStack; o
	getHeight ()I t
	getItem ()Lnet/minecraft/world/item/ItemStack; x
	getPickRadius ()F bu
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dk
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; j
	getRemoveItemSound ()Lnet/minecraft/sounds/SoundEvent; h
	getRotateItemSound ()Lnet/minecraft/sounds/SoundEvent; n
	getRotation ()I y
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getWidth ()I s
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	kill ()V ag
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playPlacementSound ()V u
	push (DDD)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V q
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	removeFramedMap (Lnet/minecraft/world/item/ItemStack;)V c
	setDirection (Lnet/minecraft/core/Direction;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;Z)V a
	setRotation (I)V a
	setRotation (IZ)V a
	shouldRenderAtSqrDistance (D)Z a
	survives ()Z r
net/minecraft/world/entity/decoration/LeashFenceKnotEntity net/minecraft/world/entity/decoration/EntityLeash
	OFFSET_Y e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHeight ()I t
	getOrCreateKnot (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity; b
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dk
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getWidth ()I s
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	playPlacementSound ()V u
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V q
	setDirection (Lnet/minecraft/core/Direction;)V a
	shouldRenderAtSqrDistance (D)Z a
	survives ()Z r
net/minecraft/world/entity/decoration/Motive net/minecraft/world/entity/decoration/Paintings
	ALBAN c
	AZTEC b
	AZTEC2 d
	BOMB e
	BURNING_SKULL x
	BUST p
	COURBET i
	CREEBET l
	DONKEY_KONG z
	FIGHTERS u
	GRAHAM n
	KEBAB a
	MATCH o
	PIGSCENE w
	PLANT f
	POINTER v
	POOL h
	SEA j
	SKELETON y
	SKULL_AND_ROSES s
	STAGE q
	SUNSET k
	VOID r
	WANDERER m
	WASTELAND g
	WITHER t
	height B
	width A
	getHeight ()I b
	getWidth ()I a
	register (Ljava/lang/String;II)Lnet/minecraft/world/entity/decoration/Motive; a
net/minecraft/world/entity/decoration/Painting net/minecraft/world/entity/decoration/EntityPainting
	motive e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getHeight ()I t
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dk
	getWidth ()I s
	lerpTo (DDDFFIZ)V a
	moveTo (DDDFF)V b
	playPlacementSound ()V u
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/item/FallingBlockEntity net/minecraft/world/entity/item/EntityFallingBlock
	DATA_START_POS e
	REMOVAL_DELAY_MILLIS f
	blockData d
	blockState ap
	cancelDrop aq
	dropItem c
	fallDamageMax as
	fallDamagePerDistance at
	hurtEntities ar
	removeAtMillis au
	time b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	callOnBrokenAfterFall (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	defineSynchedData ()V a_
	displayFireAnimation ()Z cl
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; i
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getStartPos ()Lnet/minecraft/core/BlockPos; h
	isAttackable ()Z cf
	isPickable ()Z bh
	onlyOpCanSetNbt ()Z cD
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	setHurtsEntities (FI)V b
	setRemoved (Lnet/minecraft/world/entity/Entity$RemovalReason;)V b
	setStartPos (Lnet/minecraft/core/BlockPos;)V a
	tick ()V k
net/minecraft/world/entity/item/ItemEntity net/minecraft/world/entity/item/EntityItem
	DATA_ITEM c
	INFINITE_LIFETIME f
	INFINITE_PICKUP_DELAY e
	LIFETIME d
	age ap
	bobOffs b
	health ar
	owner at
	pickupDelay aq
	thrower as
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	areMergable (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	copy ()Lnet/minecraft/world/entity/item/ItemEntity; w
	defineSynchedData ()V a_
	fireImmune ()Z aP
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAge ()I l
	getItem ()Lnet/minecraft/world/item/ItemStack; h
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getName ()Lnet/minecraft/network/chat/Component; X
	getOwner ()Ljava/util/UUID; i
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cO
	getSpin (F)F a
	getThrower ()Ljava/util/UUID; j
	hasPickUpDelay ()Z r
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAttackable ()Z cf
	isMergable ()Z A
	makeFakeItem ()V u
	merge (Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;)V a
	merge (Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	merge (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; a
	mergeWithNeighbours ()V z
	occludesVibrations ()Z aO
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setDefaultPickUpDelay ()V n
	setExtendedLifetime ()V t
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	setNeverPickUp ()V q
	setNoPickUpDelay ()V o
	setOwner (Ljava/util/UUID;)V b
	setPickUpDelay (I)V a
	setThrower (Ljava/util/UUID;)V c
	setUnderLavaMovement ()V y
	setUnderwaterMovement ()V x
	setUnlimitedLifetime ()V s
	tick ()V k
	tryToMerge (Lnet/minecraft/world/entity/item/ItemEntity;)V a
net/minecraft/world/entity/item/PrimedTnt net/minecraft/world/entity/item/EntityTNTPrimed
	DATA_FUSE_ID b
	DEFAULT_FUSE_TIME c
	owner d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	explode ()V j
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFuse ()I i
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; h
	isPickable ()Z bh
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setFuse (I)V a
	tick ()V k
net/minecraft/world/entity/monster/AbstractIllager net/minecraft/world/entity/monster/EntityIllagerAbstract
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	registerGoals ()V u
net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose bkt$a
	$VALUES i
	ATTACKING b
	BOW_AND_ARROW d
	CELEBRATING g
	CROSSBOW_CHARGE f
	CROSSBOW_HOLD e
	CROSSED a
	NEUTRAL h
	SPELLCASTING c
	$values ()[Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; a
net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal bkt$b
	canUse ()Z a
net/minecraft/world/entity/monster/AbstractSkeleton net/minecraft/world/entity/monster/EntitySkeletonAbstract
	bowGoal b
	meleeGoal c
	aiStep ()V w_
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	getMyRidingOffset ()D bp
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; q
	isShaking ()Z fy
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessWeaponGoal ()V t
	registerGoals ()V u
	rideTick ()V bo
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/monster/Blaze net/minecraft/world/entity/monster/EntityBlaze
	DATA_FLAGS_ID d
	allowedHeightOffset b
	nextHeightOffsetChangeTick c
	aiStep ()V w_
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V R
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBrightness ()F bd
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	isCharged ()Z q
	isOnFire ()Z bE
	isSensitiveToWater ()Z eD
	registerGoals ()V u
	setCharged (Z)V v
net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal net/minecraft/world/entity/monster/EntityBlaze$PathfinderGoalBlazeFireball
	attackStep b
	attackTime c
	blaze a
	lastSeen d
	canUse ()Z a
	getFollowDistance ()D g
	requiresUpdateEveryTick ()Z h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/CaveSpider net/minecraft/world/entity/monster/EntityCaveSpider
	createCaveSpider ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
net/minecraft/world/entity/monster/Creeper net/minecraft/world/entity/monster/EntityCreeper
	DATA_IS_IGNITED d
	DATA_IS_POWERED c
	DATA_SWELL_DIR b
	droppedSkulls bZ
	explosionRadius bY
	maxSwell bX
	oldSwell e
	swell bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canDropMobsSkull ()Z fz
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	explodeCreeper ()V fB
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxFallDistance ()I cj
	getSwellDir ()I q
	getSwelling (F)F z
	ignite ()V fy
	increaseDroppedSkulls ()V fA
	isIgnited ()Z t
	isPowered ()Z a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setSwellDir (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	spawnLingeringCloud ()V fE
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
net/minecraft/world/entity/monster/CrossbowAttackMob net/minecraft/world/entity/monster/ICrossbow
	getProjectileShotVector (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/Vec3;F)Lcom/mojang/math/Vector3f; a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; G
	onCrossbowAttackPerformed ()V a
	performCrossbowAttack (Lnet/minecraft/world/entity/LivingEntity;F)V b
	setChargingCrossbow (Z)V b
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/projectile/Projectile;FF)V a
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
net/minecraft/world/entity/monster/Drowned net/minecraft/world/entity/monster/EntityDrowned
	NAUTILUS_SHELL_CHANCE b
	groundNavigation d
	searchingForLand bZ
	waterNavigation c
	addBehaviourGoals ()V n
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	checkDrownedSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	closeToNextPos ()Z fA
	convertsInWater ()Z fz
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getSkull ()Lnet/minecraft/world/item/ItemStack; fy
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; t
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aF
	isDeepEnoughToSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPushedByFluid ()Z cp
	okTarget (Lnet/minecraft/world/entity/LivingEntity;)Z j
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	setSearchingForLand (Z)V v
	supportsBreakDoorGoal ()Z q
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	updateSwimming ()V aV
	wantsToSwim ()Z fI
net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal bkz$a
	drowned b
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal bkz$b
	drowned g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal bkz$c
	level f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getWaterPos ()Lnet/minecraft/world/phys/Vec3; g
	start ()V c
net/minecraft/world/entity/monster/Drowned$DrownedMoveControl bkz$d
	drowned l
	tick ()V a
net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal bkz$e
	drowned a
	seaLevel c
	speedModifier b
	stuck d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal bkz$f
	drowned a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/monster/ElderGuardian net/minecraft/world/entity/monster/EntityGuardianElder
	ELDER_SIZE_SCALE b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V R
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAttackDuration ()I q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; t
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
net/minecraft/world/entity/monster/EnderMan net/minecraft/world/entity/monster/EntityEnderman
	DATA_CARRY_STATE bX
	DATA_CREEPY bY
	DATA_STARED_AT bZ
	DELAY_BETWEEN_CREEPY_STARE_SOUND e
	MIN_DEAGGRESSION_TIME bW
	PERSISTENT_ANGER_TIME cc
	SPEED_MODIFIER_ATTACKING d
	SPEED_MODIFIER_ATTACKING_UUID c
	lastStareSound ca
	persistentAngerTarget ce
	remainingPersistentAngerTime cd
	targetChangeTime cb
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V R
	defineSynchedData ()V a_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getCarriedBlock ()Lnet/minecraft/world/level/block/state/BlockState; fy
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasBeenStaredAt ()Z fA
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtWithCleanWater (Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/projectile/ThrownPotion;F)Z a
	isCreepy ()Z fz
	isLookingAtMe (Lnet/minecraft/world/entity/player/Player;)Z g
	isSensitiveToWater ()Z eD
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStareSound ()V q
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	requiresCustomPersistence ()Z O
	setBeingStaredAt ()V fB
	setCarriedBlock (Lnet/minecraft/world/level/block/state/BlockState;)V c
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
	teleport ()Z t
	teleport (DDD)Z q
	teleportTowards (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt blb$a
	enderman a
	target b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal net/minecraft/world/entity/monster/EntityEnderman$PathfinderGoalEndermanPlaceBlock
	enderman a
	canPlaceBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Z a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal net/minecraft/world/entity/monster/EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget
	aggroTime k
	continueAggroTargetConditions n
	enderman i
	pendingTarget j
	startAggroTargetConditions m
	teleportTime l
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal net/minecraft/world/entity/monster/EntityEnderman$PathfinderGoalEndermanPickupBlock
	enderman a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Endermite net/minecraft/world/entity/monster/EntityEndermite
	MAX_LIFE b
	life c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	checkEndermiteSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getMyRidingOffset ()D bp
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setYBodyRot (F)V m
	tick ()V k
net/minecraft/world/entity/monster/Enemy net/minecraft/world/entity/monster/IMonster
	XP_REWARD_BOSS h_
	XP_REWARD_HUGE g_
	XP_REWARD_LARGE f_
	XP_REWARD_MEDIUM e_
	XP_REWARD_NONE c_
	XP_REWARD_SMALL d_
net/minecraft/world/entity/monster/Evoker net/minecraft/world/entity/monster/EntityEvoker
	wololoTarget e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V R
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; fy
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; t
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getWololoTarget ()Lnet/minecraft/world/entity/animal/Sheep; fR
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setWololoTarget (Lnet/minecraft/world/entity/animal/Sheep;)V a
net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal ble$a
	createSpellEntity (DDDDFI)V a
	getCastingInterval ()I i
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal ble$b
	tick ()V e
net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal ble$c
	vexCountTargeting e
	canUse ()Z a
	getCastingInterval ()I i
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal ble$d
	wololoTargeting e
	canContinueToUse ()Z b
	canUse ()Z a
	getCastWarmupTime ()I n
	getCastingInterval ()I i
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Ghast net/minecraft/world/entity/monster/EntityGhast
	DATA_IS_CHARGING b
	explosionPower c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkGhastSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; t
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getExplosionPower ()I q
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxSpawnClusterSize ()I fe
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cO
	getSoundVolume ()F eu
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCharging ()Z n
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setCharging (Z)V v
	shouldDespawnInPeaceful ()Z P
net/minecraft/world/entity/monster/Ghast$GhastLookGoal net/minecraft/world/entity/monster/EntityGhast$PathfinderGoalGhastMoveTowardsTarget
	ghast a
	canUse ()Z a
	requiresUpdateEveryTick ()Z h
	tick ()V e
net/minecraft/world/entity/monster/Ghast$GhastMoveControl net/minecraft/world/entity/monster/EntityGhast$ControllerGhast
	floatDuration m
	ghast l
	canReach (Lnet/minecraft/world/phys/Vec3;I)Z a
	tick ()V a
net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal net/minecraft/world/entity/monster/EntityGhast$PathfinderGoalGhastAttackTarget
	chargeTime a
	ghast b
	canUse ()Z a
	requiresUpdateEveryTick ()Z h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal net/minecraft/world/entity/monster/EntityGhast$PathfinderGoalGhastIdleMove
	ghast a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Giant net/minecraft/world/entity/monster/EntityGiantZombie
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
net/minecraft/world/entity/monster/Guardian net/minecraft/world/entity/monster/EntityGuardian
	ATTACK_TIME c
	DATA_ID_ATTACK_TARGET e
	DATA_ID_MOVING b
	clientSideAttackTime cc
	clientSideCachedAttackTarget cb
	clientSideSpikesAnimation bZ
	clientSideSpikesAnimationO ca
	clientSideTailAnimation bW
	clientSideTailAnimationO bX
	clientSideTailAnimationSpeed bY
	clientSideTouchedGround cd
	randomStrollGoal d
	aiStep ()V w_
	canBreatheUnderwater ()Z dw
	checkGuardianSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fy
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	getActiveAttackTarget ()Lnet/minecraft/world/entity/LivingEntity; fB
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAmbientSoundInterval ()I J
	getAttackAnimationScale (F)F B
	getAttackDuration ()I q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; t
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxHeadXRot ()I T
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getSpikesAnimation (F)F A
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTailAnimation (F)F z
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasActiveAttackTarget ()Z fA
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMoving ()Z fz
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	registerGoals ()V u
	setActiveAttackTarget (I)V a
	setMoving (Z)V v
	travel (Lnet/minecraft/world/phys/Vec3;)V h
net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal net/minecraft/world/entity/monster/EntityGuardian$PathfinderGoalGuardianAttack
	attackTime b
	elder c
	guardian a
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector net/minecraft/world/entity/monster/EntityGuardian$EntitySelectorGuardianTargetHumanSquid
	guardian a
	test (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/monster/Guardian$GuardianMoveControl net/minecraft/world/entity/monster/EntityGuardian$ControllerMoveGuardian
	guardian l
	tick ()V a
net/minecraft/world/entity/monster/Husk net/minecraft/world/entity/monster/EntityZombieHusk
	checkHuskSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	convertsInWater ()Z fz
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doUnderWaterConversion ()V fB
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getSkull ()Lnet/minecraft/world/item/ItemStack; fy
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; t
	isSunSensitive ()Z J_
net/minecraft/world/entity/monster/Illusioner net/minecraft/world/entity/monster/EntityIllagerIllusioner
	ILLUSION_SPREAD bX
	ILLUSION_TRANSITION_TICKS bW
	NUM_ILLUSIONS e
	clientSideIllusionOffsets bZ
	clientSideIllusionTicks bY
	aiStep ()V w_
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cx
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; fy
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; t
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getIllusionOffsets (F)[Lnet/minecraft/world/phys/Vec3; z
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	registerGoals ()V u
net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal blj$a
	lastTargetId e
	canUse ()Z a
	getCastingInterval ()I i
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
	start ()V c
net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal blj$b
	canUse ()Z a
	getCastingInterval ()I i
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
net/minecraft/world/entity/monster/MagmaCube net/minecraft/world/entity/monster/EntityMagmaCube
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkMagmaCubeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	decreaseSquish ()V fw
	getAttackDamage ()F fy
	getBrightness ()F bd
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; N
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getJumpDelay ()I t
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; fA
	getParticleType ()Lnet/minecraft/core/particles/ParticleOptions; q
	getSquishSound ()Lnet/minecraft/sounds/SoundEvent; fz
	isDealsDamage ()Z fx
	isOnFire ()Z bE
	jumpFromGround ()V ez
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	setSize (IZ)V a
net/minecraft/world/entity/monster/Monster net/minecraft/world/entity/monster/EntityMonster
	aiStep ()V w_
	checkAnyLightMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	checkMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createMonsterAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fD
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; ef
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; h
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cO
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aF
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aG
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isDarkEnoughToSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	isPreventingPlayerRest (Lnet/minecraft/world/entity/player/Player;)Z f
	shouldDespawnInPeaceful ()Z P
	shouldDropExperience ()Z dH
	shouldDropLoot ()Z dI
	updateNoActionTime ()V fC
net/minecraft/world/entity/monster/PatrollingMonster net/minecraft/world/entity/monster/EntityMonsterPatrolling
	patrolLeader c
	patrolTarget b
	patrolling d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeLeader ()Z fz
	canJoinPatrol ()Z fF
	checkPatrollingMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findPatrolTarget ()V fG
	getMyRidingOffset ()D bp
	getPatrolTarget ()Lnet/minecraft/core/BlockPos; fA
	hasPatrolTarget ()Z fB
	isPatrolLeader ()Z fE
	isPatrolling ()Z fH
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	removeWhenFarAway (D)Z h
	setPatrolLeader (Z)V v
	setPatrolTarget (Lnet/minecraft/core/BlockPos;)V g
	setPatrolling (Z)V w
net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal blm$a
	NAVIGATION_FAILED_COOLDOWN a
	cooldownUntil e
	leaderSpeedModifier d
	mob b
	speedModifier c
	canUse ()Z a
	findPatrolCompanions ()Ljava/util/List; g
	moveRandomly ()Z i
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Phantom net/minecraft/world/entity/monster/EntityPhantom
	FLAP_DEGREES_PER_TICK b
	ID_SIZE d
	TICKS_PER_FLAP c
	anchorPoint bV
	attackPhase bW
	moveTargetPoint e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; y
	customServerAiStep ()V R
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	getPhantomSize ()I n
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cO
	getSoundVolume ()F eu
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getUniqueFlapTickOffset ()I q
	isFlapping ()Z aK
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setPhantomSize (I)V a
	shouldDespawnInPeaceful ()Z P
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
	updatePhantomSizeInfo ()V t
net/minecraft/world/entity/monster/Phantom$AttackPhase net/minecraft/world/entity/monster/EntityPhantom$AttackPhase
	$VALUES c
	CIRCLE a
	SWOOP b
	$values ()[Lnet/minecraft/world/entity/monster/Phantom$AttackPhase; a
net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal bln$b
	attackTargeting b
	nextScanTick c
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal bln$c
	nextSweepTick b
	canUse ()Z a
	setAnchorAboveTarget ()V g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl bln$d
	clientTick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal bln$e
	angle c
	clockwise f
	distance d
	height e
	canUse ()Z a
	selectNext ()V i
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Phantom$PhantomLookControl bln$f
	tick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomMoveControl bln$g
	speed m
	tick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal bln$h
	touchingTarget ()Z g
net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal bln$i
	CAT_SEARCH_TICK_DELAY c
	catSearchTick e
	isScaredOfCat d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Pillager net/minecraft/world/entity/monster/EntityPillager
	CROSSBOW_POWER bX
	INVENTORY_SIZE e
	IS_CHARGING_CROSSBOW b
	SLOT_OFFSET bW
	inventory bY
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	enchantSpawnedWeapon (F)V x
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; t
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventory ()Lnet/minecraft/world/Container; fI
	getMaxSpawnClusterSize ()I fe
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	isChargingCrossbow ()Z fy
	onCrossbowAttackPerformed ()V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setChargingCrossbow (Z)V b
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
	wantsItem (Lnet/minecraft/world/item/ItemStack;)Z m
net/minecraft/world/entity/monster/RangedAttackMob net/minecraft/world/entity/monster/IRangedEntity
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
net/minecraft/world/entity/monster/Ravager net/minecraft/world/entity/monster/EntityRavager
	ATTACK_DURATION cc
	ATTACK_MOVEMENT_SPEED bX
	BASE_MOVEMENT_SPEED bW
	NO_RAVAGER_AND_ALIVE e
	STUNNED_COLOR bY
	STUNNED_COLOR_BLUE bZ
	STUNNED_COLOR_GREEN ca
	STUNNED_COLOR_RED cb
	STUN_DURATION b
	attackTick cd
	roarTick cf
	stunnedTick ce
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	applyRaidBuffs (IZ)V a
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	canBeControlledByRider ()Z ff
	canBeLeader ()Z fz
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAttackTick ()I q
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; t
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cE
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxHeadYRot ()I U
	getPassengersRidingOffset ()D bq
	getRoarTick ()I fI
	getStunnedTick ()I fy
	handleEntityEvent (B)V a
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z B
	isImmobile ()Z ew
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	roar ()V fK
	strongKnockback (Lnet/minecraft/world/entity/Entity;)V a
	stunEffect ()V fJ
	updateControlFlags ()V M
net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal blq$a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Ravager$RavagerNavigation blq$b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
net/minecraft/world/entity/monster/Ravager$RavagerNodeEvaluator blq$c
	evaluateBlockPathType (Lnet/minecraft/world/level/BlockGetter;ZZLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
net/minecraft/world/entity/monster/Shulker net/minecraft/world/entity/monster/EntityShulker
	COVERED_ARMOR_MODIFIER bW
	COVERED_ARMOR_MODIFIER_UUID e
	DATA_ATTACH_FACE_ID b
	DATA_COLOR_ID d
	DATA_PEEK_ID c
	DEFAULT_COLOR bZ
	FORWARD ce
	MAX_LID_OPEN cj
	MAX_TELEPORT_DISTANCE ca
	NO_COLOR bY
	OTHER_SHULKER_LIMIT cc
	OTHER_SHULKER_SCAN_RADIUS cb
	PEEK_PER_TICK cd
	TELEPORT_STEPS bX
	clientOldAttachPosition ch
	clientSideTeleportInterpolation ci
	currentPeekAmount cg
	currentPeekAmountO cf
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeCollidedWith ()Z bn
	canStayAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; y
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findAttachableSurface (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; g
	findNewAttachment ()V fz
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAttachFace ()Lnet/minecraft/core/Direction; t
	getClientPeekAmount (F)F z
	getColor ()Lnet/minecraft/world/item/DyeColor; fy
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDeltaMovement ()Lnet/minecraft/world/phys/Vec3; da
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxHeadXRot ()I T
	getMaxHeadYRot ()I U
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getMyRidingOffset ()D bp
	getPhysicalPeek (F)F B
	getPickRadius ()F bu
	getProgressAabb (Lnet/minecraft/core/Direction;F)Lnet/minecraft/world/phys/AABB; a
	getProgressDeltaAabb (Lnet/minecraft/core/Direction;FF)Lnet/minecraft/world/phys/AABB; a
	getRawPeekAmount ()I fE
	getRenderPosition (F)Ljava/util/Optional; A
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cO
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hitByShulkerBullet ()V fD
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isClosed ()Z fC
	isPositionBlocked (Lnet/minecraft/core/BlockPos;)Z h
	lerpTo (DDDFFIZ)V a
	makeBoundingBox ()Lnet/minecraft/world/phys/AABB; al
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onPeekAmountChange ()V fB
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAmbientSound ()V K
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddMobPacket;)V a
	registerGoals ()V u
	setAttachFace (Lnet/minecraft/core/Direction;)V a
	setColor (Lnet/minecraft/world/item/DyeColor;)V a
	setDeltaMovement (Lnet/minecraft/world/phys/Vec3;)V g
	setPos (DDD)V e
	setRawPeekAmount (I)V a
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	stopRiding ()V p
	teleportSomewhere ()Z q
	tick ()V k
	updatePeekAmount ()Z fA
net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal blr$a
	attackTime b
	canUse ()Z a
	requiresUpdateEveryTick ()Z h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl blr$b
	clientTick ()V a
net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal blr$c
	canUse ()Z a
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/entity/monster/Shulker$ShulkerLookControl blr$d
	clampHeadRotationToBody ()V b
	getXRotD ()Ljava/util/Optional; h
	getYRotD ()Ljava/util/Optional; i
net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal blr$e
	canUse ()Z a
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal blr$f
	peekTime b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Silverfish net/minecraft/world/entity/monster/EntitySilverfish
	friendsGoal b
	checkSilverfishSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getMyRidingOffset ()D bp
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V u
	setYBodyRot (F)V m
	tick ()V k
net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal net/minecraft/world/entity/monster/EntitySilverfish$PathfinderGoalSilverfishHideInBlock
	doMerge j
	selectedDirection i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal net/minecraft/world/entity/monster/EntitySilverfish$PathfinderGoalSilverfishWakeOthers
	lookForFriends b
	silverfish a
	canUse ()Z a
	notifyHurt ()V g
	tick ()V e
net/minecraft/world/entity/monster/Skeleton net/minecraft/world/entity/monster/EntitySkeleton
	CONVERSION_TAG b
	DATA_STRAY_CONVERSION_ID c
	conversionTime e
	inPowderSnowTime d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canFreeze ()Z dl
	defineSynchedData ()V a_
	doFreezeConversion ()V fA
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; q
	isFreezeConverting ()Z fz
	isShaking ()Z fy
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setFreezeConverting (Z)V v
	startFreezeConversion (I)V a
	tick ()V k
net/minecraft/world/entity/monster/Slime net/minecraft/world/entity/monster/EntitySlime
	ID_SIZE bW
	MAX_SIZE c
	MIN_SIZE b
	oSquish bV
	squish e
	targetSquish d
	wasOnGround bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkSlimeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	dealDamage (Lnet/minecraft/world/entity/LivingEntity;)V j
	decreaseSquish ()V fw
	defineSynchedData ()V a_
	doPlayJumpSound ()Z fD
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAttackDamage ()F fy
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; N
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getJumpDelay ()I t
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; fA
	getMaxHeadXRot ()I T
	getParticleType ()Lnet/minecraft/core/particles/ParticleOptions; q
	getSize ()I fB
	getSoundPitch ()F n
	getSoundVolume ()F eu
	getSquishSound ()Lnet/minecraft/sounds/SoundEvent; fz
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getType ()Lnet/minecraft/world/entity/EntityType; ad
	isDealsDamage ()Z fx
	isTiny ()Z fC
	jumpFromGround ()V ez
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshDimensions ()V z_
	registerGoals ()V u
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	setSize (IZ)V a
	shouldDespawnInPeaceful ()Z P
	tick ()V k
net/minecraft/world/entity/monster/Slime$SlimeAttackGoal net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeNearestPlayer
	growTiredTimer b
	slime a
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z h
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeFloatGoal net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeRandomJump
	slime a
	canUse ()Z a
	requiresUpdateEveryTick ()Z h
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeIdle
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeMoveControl net/minecraft/world/entity/monster/EntitySlime$ControllerMoveSlime
	isAggressive o
	jumpDelay m
	slime n
	yRot l
	setDirection (FZ)V a
	setWantedMovement (D)V a
	tick ()V a
net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeRandomDirection
	chosenDegrees b
	nextRandomizeTime c
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/SpellcasterIllager net/minecraft/world/entity/monster/EntityIllagerWizard
	DATA_SPELL_CASTING_ID e
	currentSpell bW
	spellCastingTickCount b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	customServerAiStep ()V R
	defineSynchedData ()V a_
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; fy
	getCurrentSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; fJ
	getSpellCastingTime ()I fK
	isCastingSpell ()Z fI
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setIsCastingSpell (Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;)V a
	tick ()V k
net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell net/minecraft/world/entity/monster/EntityIllagerWizard$Spell
	$VALUES i
	BLINDNESS f
	DISAPPEAR e
	FANGS c
	NONE a
	SUMMON_VEX b
	WOLOLO d
	id g
	spellColor h
	$values ()[Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; a
	byId (I)Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; a
net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal blv$b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal net/minecraft/world/entity/monster/EntityIllagerWizard$PathfinderGoalCastSpell
	attackWarmupDelay b
	nextAttackTickCount c
	canContinueToUse ()Z b
	canUse ()Z a
	getCastWarmupTime ()I n
	getCastingInterval ()I i
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Spider net/minecraft/world/entity/monster/EntitySpider
	DATA_FLAGS_ID b
	SPIDER_SPECIAL_EFFECT_CHANCE c
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	getPassengersRidingOffset ()D bq
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isClimbing ()Z t
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	onClimbable ()Z b_
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V u
	setClimbing (Z)V v
	tick ()V k
net/minecraft/world/entity/monster/Spider$SpiderAttackGoal net/minecraft/world/entity/monster/EntitySpider$PathfinderGoalSpiderMeleeAttack
	canContinueToUse ()Z b
	canUse ()Z a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData net/minecraft/world/entity/monster/EntitySpider$GroupDataSpider
	effect a
	setRandomEffect (Ljava/util/Random;)V a
net/minecraft/world/entity/monster/Spider$SpiderTargetGoal net/minecraft/world/entity/monster/EntitySpider$PathfinderGoalSpiderNearestAttackableTarget
	canUse ()Z a
net/minecraft/world/entity/monster/Stray net/minecraft/world/entity/monster/EntitySkeletonStray
	checkStraySpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; q
net/minecraft/world/entity/monster/Strider net/minecraft/world/entity/monster/EntityStrider
	DATA_BOOST_TIME cc
	DATA_SADDLE_ID ce
	DATA_SUFFOCATING cd
	FOOD_ITEMS ca
	STEERING_MODIFIER bZ
	SUFFOCATE_SPEED_MODIFIER bX
	SUFFOCATE_STEERING_MODIFIER bW
	TEMPT_ITEMS cb
	panicGoal ch
	steering cf
	temptGoal cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	boost ()Z a
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z o
	canBeControlledByRider ()Z ff
	canStandOnFluid (Lnet/minecraft/world/level/material/Fluid;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkStriderSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fy
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	dropEquipment ()V ec
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	floatStrider ()V fG
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/monster/Strider; b
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cE
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cz
	getMoveSpeed ()F t
	getPassengersRidingOffset ()D bq
	getSteeringSpeed ()F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isBeingTempted ()Z fA
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isOnFire ()Z bE
	isPanicking ()Z fz
	isSaddleable ()Z c
	isSaddled ()Z d
	isSensitiveToWater ()Z eD
	isSuffocating ()Z q
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	nextStep ()F aE
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setSuffocating (Z)V v
	shouldPassengersInheritMalus ()Z x
	spawnJockey (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/SpawnGroupData;)Lnet/minecraft/world/entity/SpawnGroupData; a
	tick ()V k
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal bly$a
	strider g
	canContinueToUse ()Z b
	canUse ()Z a
	getMoveToTarget ()Lnet/minecraft/core/BlockPos; k
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldRecalculatePath ()Z l
net/minecraft/world/entity/monster/Strider$StriderPathNavigation bly$b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	hasValidPathType (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/monster/Vex net/minecraft/world/entity/monster/EntityVex
	DATA_FLAGS_ID d
	FLAG_IS_CHARGING e
	FLAP_DEGREES_PER_TICK b
	TICKS_PER_FLAP c
	boundOrigin bX
	hasLimitedLife bY
	limitedLifeTicks bZ
	owner bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBoundOrigin ()Lnet/minecraft/core/BlockPos; t
	getBrightness ()F bd
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getOwner ()Lnet/minecraft/world/entity/Mob; q
	getVexFlag (I)Z b
	isCharging ()Z fy
	isFlapping ()Z aK
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setBoundOrigin (Lnet/minecraft/core/BlockPos;)V g
	setIsCharging (Z)V v
	setLimitedLife (I)V a
	setOwner (Lnet/minecraft/world/entity/Mob;)V a
	setVexFlag (IZ)V a
	tick ()V k
net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal blz$a
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal blz$b
	copyOwnerTargeting b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vex$VexMoveControl blz$c
	tick ()V a
net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal blz$d
	canContinueToUse ()Z b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Vindicator net/minecraft/world/entity/monster/EntityVindicator
	DOOR_BREAKING_PREDICATE e
	TAG_JOHNNY b
	isJohnny bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V R
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; t
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal bma$a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal bma$b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal bma$c
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Witch net/minecraft/world/entity/monster/EntityWitch
	DATA_USING_ITEM bW
	SPEED_MODIFIER_DRINKING e
	SPEED_MODIFIER_DRINKING_UUID b
	attackPlayersGoal bZ
	healRaidersGoal bY
	usingTime bX
	aiStep ()V w_
	applyRaidBuffs (IZ)V a
	canBeLeader ()Z fz
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; t
	getDamageAfterMagicAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F e
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	isDrinkingPotion ()Z n
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	registerGoals ()V u
	setUsingItem (Z)V x
net/minecraft/world/entity/monster/WitherSkeleton net/minecraft/world/entity/monster/EntitySkeletonWither
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; q
	populateDefaultEquipmentEnchantments (Lnet/minecraft/world/DifficultyInstance;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	registerGoals ()V u
net/minecraft/world/entity/monster/Zoglin net/minecraft/world/entity/monster/EntityZoglin
	ATTACK_DAMAGE bY
	ATTACK_DURATION cc
	ATTACK_INTERVAL ca
	ATTACK_KNOCKBACK bW
	BABY_ATTACK_DAMAGE bZ
	BABY_ATTACK_INTERVAL cb
	DATA_BABY_ID d
	KNOCKBACK_RESISTANCE bX
	MAX_HEALTH e
	MEMORY_TYPES c
	MOVEMENT_SPEED_WHEN_FIGHTING cd
	SENSOR_TYPES b
	SPEED_MULTIPLIER_WHEN_IDLING ce
	attackAnimationRemainingTicks cf
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; du
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V R
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	findNearestValidAttackTarget ()Ljava/util/Optional; fA
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAttackAnimationRemainingTicks ()I fy
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dt
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	getPassengersRidingOffset ()D bq
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	isAdult ()Z q
	isBaby ()Z y_
	isTargetable (Lnet/minecraft/world/entity/LivingEntity;)Z j
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAngrySound ()V fz
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V Q
	setAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)V k
	setBaby (Z)V a
	updateActivity ()V t
net/minecraft/world/entity/monster/Zombie net/minecraft/world/entity/monster/EntityZombie
	BREAK_DOOR_CHANCE cb
	DATA_BABY_ID d
	DATA_DROWNED_CONVERSION_ID ca
	DATA_SPECIAL_TYPE_ID bZ
	DOOR_BREAKING_PREDICATE cc
	REINFORCEMENT_ATTEMPTS bW
	REINFORCEMENT_RANGE_MAX bX
	REINFORCEMENT_RANGE_MIN bY
	SPEED_MODIFIER_BABY c
	SPEED_MODIFIER_BABY_UUID b
	ZOMBIE_LEADER_CHANCE e
	breakDoorGoal cd
	canBreakDoors ce
	conversionTime cg
	inWaterTime cf
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V n
	aiStep ()V w_
	canBreakDoors ()Z fG
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z k
	convertToZombieType (Lnet/minecraft/world/entity/EntityType;)V b
	convertsInWater ()Z fz
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fE
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doUnderWaterConversion ()V fB
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	getMyRidingOffset ()D bp
	getSkull ()Lnet/minecraft/world/item/ItemStack; fy
	getSpawnAsBabyOdds (Ljava/util/Random;)Z a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; t
	handleAttributes (F)V z
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBaby ()Z y_
	isSunSensitive ()Z J_
	isUnderWaterConverting ()Z fF
	killed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	randomizeReinforcementsChance ()V fH
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	setBaby (Z)V a
	setCanBreakDoors (Z)V w
	startUnderWaterConversion (I)V a
	supportsBreakDoorGoal ()Z q
	tick ()V k
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal bme$a
	acceptedDistance ()D i
	playBreakSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	playDestroyProgressSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/entity/monster/Zombie$ZombieGroupData net/minecraft/world/entity/monster/EntityZombie$GroupDataZombie
	canSpawnJockey b
	isBaby a
net/minecraft/world/entity/monster/ZombieVillager net/minecraft/world/entity/monster/EntityZombieVillager
	DATA_CONVERTING_ID b
	DATA_VILLAGER_DATA c
	MAX_SPECIAL_BLOCKS_COUNT ca
	SPECIAL_BLOCK_RADIUS cb
	VILLAGER_CONVERSION_WAIT_MAX bZ
	VILLAGER_CONVERSION_WAIT_MIN d
	conversionStarter cd
	gossips ce
	tradeOffers cf
	villagerConversionTime cc
	villagerXp cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	convertsInWater ()Z fz
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getConversionProgress ()I fL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getSkull ()Lnet/minecraft/world/item/ItemStack; fy
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; t
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; fJ
	getVillagerXp ()I fK
	getVoicePitch ()F ev
	handleEntityEvent (B)V a
	isConverting ()Z fI
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	setGossips (Lnet/minecraft/nbt/Tag;)V a
	setTradeOffers (Lnet/minecraft/nbt/CompoundTag;)V c
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
	setVillagerXp (I)V a
	startConverting (Ljava/util/UUID;I)V a
	tick ()V k
net/minecraft/world/entity/monster/ZombifiedPiglin net/minecraft/world/entity/monster/EntityPigZombie
	ALERT_INTERVAL cf
	ALERT_RANGE_Y ce
	FIRST_ANGER_SOUND_DELAY bZ
	PERSISTENT_ANGER_TIME cb
	SPEED_MODIFIER_ATTACKING d
	SPEED_MODIFIER_ATTACKING_UUID c
	persistentAngerTarget cd
	playFirstAngerSoundIn ca
	remainingPersistentAngerTime cc
	ticksUntilNextAlert cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V n
	alertOthers ()V fL
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkZombifiedPiglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	convertsInWater ()Z fz
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fI
	customServerAiStep ()V R
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMyRidingOffset ()D bp
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getSkull ()Lnet/minecraft/world/item/ItemStack; fy
	isPreventingPlayerRest (Lnet/minecraft/world/entity/player/Player;)Z f
	maybeAlertOthers ()V fK
	maybePlayFirstAngerSound ()V fJ
	playAngerSound ()V fM
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	randomizeReinforcementsChance ()V fH
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/monster/hoglin/Hoglin net/minecraft/world/entity/monster/hoglin/EntityHoglin
	ATTACK_DAMAGE cf
	ATTACK_KNOCKBACK cd
	BABY_ATTACK_DAMAGE cg
	CONVERSION_TIME ch
	DATA_IMMUNE_TO_ZOMBIFICATION bZ
	KNOCKBACK_RESISTANCE ce
	MAX_HEALTH cb
	MEMORY_TYPES bX
	MOVEMENT_SPEED_WHEN_FIGHTING cc
	PROBABILITY_OF_SPAWNING_AS_BABY ca
	SENSOR_TYPES bW
	attackAnimationRemainingTicks ci
	cannotBeHunted ck
	timeInOverworld cj
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V n
	aiStep ()V w_
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; du
	canBeHunted ()Z fA
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canFallInLove ()Z fB
	checkHoglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V R
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getAttackAnimationRemainingTicks ()I fy
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dt
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPassengersRidingOffset ()D bq
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cO
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aF
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aG
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAdult ()Z t
	isConverting ()Z fz
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isImmuneToZombification ()Z fG
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	sendDebugPackets ()V Q
	setCannotBeHunted (Z)V w
	setImmuneToZombification (Z)V v
	shouldDropExperience ()Z dH
net/minecraft/world/entity/monster/hoglin/HoglinAi net/minecraft/world/entity/monster/hoglin/HoglinAI
	ADULT_FOLLOW_RANGE j
	ATTACK_DURATION d
	ATTACK_INTERVAL g
	BABY_ATTACK_INTERVAL h
	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_IDLING e
	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_RETREATING f
	REPELLENT_DETECTION_RANGE_HORIZONTAL a
	REPELLENT_DETECTION_RANGE_VERTICAL b
	REPELLENT_PACIFY_TIME i
	RETREAT_DURATION c
	SPEED_MULTIPLIER_WHEN_AVOIDING_REPELLENT k
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT o
	SPEED_MULTIPLIER_WHEN_IDLING n
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE m
	SPEED_MULTIPLIER_WHEN_RETREATING l
	broadcastAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V h
	broadcastRetreat (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; d
	getSoundForActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEvent; a
	getSoundForCurrentActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; b
	getVisibleAdultHoglins (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/List; g
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initRetreatActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	isBreeding (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z i
	isNearRepellent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z h
	isPacified (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z c
	isPosNearNearestRepellent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/core/BlockPos;)Z a
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeRetaliate (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V f
	onHitTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	piglinsOutnumberHoglins (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z f
	retreatFromNearestTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	setAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V g
	setAttackTargetIfCloserThanCurrent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V i
	setAvoidTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	updateActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)V a
	wantsToStopFleeing (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z e
	wasHurtBy (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/monster/hoglin/HoglinBase net/minecraft/world/entity/monster/hoglin/IOglin
	ATTACK_ANIMATION_DURATION i_
	getAttackAnimationRemainingTicks ()I fy
	hurtAndThrowTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	throwTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/monster/piglin/AbstractPiglin net/minecraft/world/entity/monster/piglin/EntityPiglinAbstract
	CONVERSION_TIME c
	DATA_IMMUNE_TO_ZOMBIFICATION b
	timeInOverworld d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyOpenDoorsAbility ()V fE
	canHunt ()Z n
	customServerAiStep ()V R
	defineSynchedData ()V a_
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; fz
	getMyRidingOffset ()D bp
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; G
	isAdult ()Z fy
	isConverting ()Z t
	isHoldingMeleeWeapon ()Z fA
	isImmuneToZombification ()Z q
	playAmbientSound ()V K
	playConvertedSound ()V fB
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V Q
	setImmuneToZombification (Z)V v
net/minecraft/world/entity/monster/piglin/Piglin net/minecraft/world/entity/monster/piglin/EntityPiglin
	ATTACK_DAMAGE ce
	BABY_EYE_HEIGHT_ADJUSTMENT cj
	CHANCE_OF_WEARING_EACH_ARMOUR_ITEM cg
	CROSSBOW_POWER cf
	DATA_BABY_ID bX
	DATA_IS_CHARGING_CROSSBOW bY
	DATA_IS_DANCING bZ
	MAX_HEALTH cc
	MAX_PASSENGERS_ON_ONE_HOGLIN ch
	MEMORY_TYPES bW
	MOVEMENT_SPEED_WHEN_FIGHTING cd
	PROBABILITY_OF_SPAWNING_AS_BABY ci
	PROBABILITY_OF_SPAWNING_WITH_CROSSBOW_INSTEAD_OF_SWORD ck
	SENSOR_TYPES e
	SPEED_MODIFIER_BABY cb
	SPEED_MODIFIER_BABY_UUID ca
	cannotHunt cm
	inventory cl
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addToInventory (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; m
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; du
	canAddToInventory (Lnet/minecraft/world/item/ItemStack;)Z n
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	canHunt ()Z n
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;)Z q
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	checkPiglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fE
	createSpawnWeapon ()Lnet/minecraft/world/item/ItemStack; fG
	customServerAiStep ()V R
	defineSynchedData ()V a_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; fz
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dt
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventory ()Lnet/minecraft/world/Container; fI
	getPassengersRidingOffset ()D bq
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTopPassenger (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/entity/Entity; b
	holdInMainHand (Lnet/minecraft/world/item/ItemStack;)V o
	holdInOffHand (Lnet/minecraft/world/item/ItemStack;)V p
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBaby ()Z y_
	isChargingCrossbow ()Z fH
	isDancing ()Z fF
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeWearArmor (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V c
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onCrossbowAttackPerformed ()V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playConvertedSound ()V fB
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	setBaby (Z)V a
	setCannotHunt (Z)V x
	setChargingCrossbow (Z)V b
	setDancing (Z)V w
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
	shouldDespawnInPeaceful ()Z P
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/monster/piglin/PiglinAi net/minecraft/world/entity/monster/piglin/PiglinAI
	ADMIRE_DURATION f
	ANGER_DURATION e
	AVOID_ZOMBIFIED_DURATION A
	BABY_AVOID_NEMESIS_DURATION B
	BABY_FLEE_DURATION_AFTER_GETTING_HIT l
	BARTERING_ITEM c
	CELEBRATION_TIME j
	DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING t
	DESIRED_DISTANCE_FROM_ZOMBIFIED z
	EAT_COOLDOWN s
	HIT_BY_PLAYER_MEMORY_TIMEOUT m
	HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM i
	INTERACTION_RANGE w
	MAX_DISTANCE_TO_WALK_TO_ITEM g
	MAX_LOOK_DIST u
	MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM v
	MAX_TIME_TO_WALK_TO_ITEM h
	MAX_WALK_DISTANCE_TO_START_RIDING n
	MELEE_ATTACK_COOLDOWN r
	MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW x
	PLAYER_ANGER_RANGE d
	PROBABILITY_OF_CELEBRATION_DANCE C
	REPELLENT_DETECTION_RANGE_HORIZONTAL a
	REPELLENT_DETECTION_RANGE_VERTICAL b
	RETREAT_DURATION q
	RIDE_DURATION p
	RIDE_START_INTERVAL o
	SPEED_MULTIPLIER_WHEN_AVOIDING D
	SPEED_MULTIPLIER_WHEN_DANCING I
	SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION H
	SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM G
	SPEED_MULTIPLIER_WHEN_IDLING J
	SPEED_MULTIPLIER_WHEN_MOUNTING F
	SPEED_MULTIPLIER_WHEN_RETREATING E
	SPEED_WHEN_STRAFING_BACK_FROM_TARGET y
	TIME_BETWEEN_HUNTS k
	admireGoldItem (Lnet/minecraft/world/entity/LivingEntity;)V d
	angerNearbyPiglins (Lnet/minecraft/world/entity/player/Player;Z)V a
	avoidRepellent ()Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; c
	avoidZombified ()Lnet/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry; e
	babyAvoidNemesis ()Lnet/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry; d
	babySometimesRideBabyHoglin ()Lnet/minecraft/world/entity/ai/behavior/RunSometimes; f
	broadcastAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V b
	broadcastDontKillAnyMoreHoglinsForAWhile (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V f
	broadcastRetreat (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	broadcastUniversalAnger (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)V a
	canAdmire (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)Z b
	cancelAdmiring (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V c
	createIdleLookBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; b
	doesntSeeAnyPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z f
	dontKillAnyMoreHoglinsForAWhile (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)V c
	eat (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V s
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; k
	getAdultPiglins (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/List; e
	getAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; f
	getAvoidTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; g
	getBarterResponseItems (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; i
	getNearestVisibleTargetablePlayer (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; b
	getRandomNearbyPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Lnet/minecraft/world/phys/Vec3; t
	getSoundForActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEvent; a
	getSoundForCurrentActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; d
	getVisibleAdultPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; m
	hasAnyoneNearbyHuntedRecently (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z e
	hasCrossbow (Lnet/minecraft/world/entity/LivingEntity;)Z c
	hasEatenRecently (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z u
	hoglinsOutnumberPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z q
	holdInOffhand (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)V c
	initAdmireItemActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initCelebrateActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initFightActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initMemories (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V a
	initRetreatActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initRideHoglinActivity (Lnet/minecraft/world/entity/ai/Brain;)V f
	isAdmiringDisabled (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z x
	isAdmiringItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z v
	isBabyRidingBaby (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z h
	isBarterCurrency (Lnet/minecraft/world/item/ItemStack;)Z b
	isFood (Lnet/minecraft/world/item/ItemStack;)Z c
	isHoldingItemInOffHand (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z y
	isIdle (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Z d
	isLovedItem (Lnet/minecraft/world/item/ItemStack;)Z a
	isNearAvoidTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z l
	isNearRepellent (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z w
	isNearZombified (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z j
	isNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)Z b
	isNotHoldingLovedItemInOffHand (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z z
	isPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isWearingGold (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isZombified (Lnet/minecraft/world/entity/EntityType;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeRetaliate (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	mobInteract (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	pickUpItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/item/ItemEntity;)V a
	piglinsEqualOrOutnumberHoglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z p
	putInInventory (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)V d
	removeOneItemFromItemEntity (Lnet/minecraft/world/entity/item/ItemEntity;)Lnet/minecraft/world/item/ItemStack; a
	retreatFromNearestTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	seesPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z e
	seesPlayerHoldingWantedItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z r
	setAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	setAngerTargetIfCloserThanCurrent (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	setAngerTargetToNearestTargetablePlayerIfFound (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	setAvoidTargetAndDontHuntForAWhile (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	stopHoldingOffHandItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;Z)V a
	stopWalking (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V n
	throwItems (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V a
	throwItemsTowardPlayer (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/player/Player;Ljava/util/List;)V a
	throwItemsTowardPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;Lnet/minecraft/world/phys/Vec3;)V a
	throwItemsTowardRandomPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V b
	updateActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V b
	wantsToDance (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	wantsToPickup (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)Z a
	wantsToStopFleeing (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z o
	wantsToStopRiding (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/Entity;)Z a
	wasHurtBy (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	wasHurtRecently (Lnet/minecraft/world/entity/LivingEntity;)Z g
net/minecraft/world/entity/monster/piglin/PiglinArmPose net/minecraft/world/entity/monster/piglin/EntityPiglinArmPose
	$VALUES g
	ADMIRING_ITEM d
	ATTACKING_WITH_MELEE_WEAPON a
	CROSSBOW_CHARGE c
	CROSSBOW_HOLD b
	DANCING e
	DEFAULT f
	$values ()[Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; a
net/minecraft/world/entity/monster/piglin/PiglinBrute net/minecraft/world/entity/monster/piglin/EntityPiglinBrute
	ATTACK_DAMAGE bZ
	MAX_HEALTH bX
	MEMORY_TYPES bW
	MOVEMENT_SPEED_WHEN_FIGHTING bY
	SENSOR_TYPES e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; du
	canHunt ()Z n
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fE
	customServerAiStep ()V R
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; fz
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dt
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	playAngrySound ()V fF
	playConvertedSound ()V fB
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/monster/piglin/PiglinBruteAi net/minecraft/world/entity/monster/piglin/PiglinBruteAI
	ACTIVITY_SOUND_LIKELIHOOD_PER_TICK c
	ANGER_DURATION a
	HOME_CLOSE_ENOUGH_DISTANCE h
	HOME_STROLL_AROUND_DISTANCE j
	HOME_TOO_FAR_DISTANCE i
	INTERACTION_RANGE e
	MAX_LOOK_DIST d
	MELEE_ATTACK_COOLDOWN b
	SPEED_MULTIPLIER_WHEN_IDLING g
	TARGETING_RANGE f
	createIdleLookBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; b
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; a
	getTargetIfWithinRange (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; a
	initCoreActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V c
	initMemories (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V a
	isNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybePlayActivitySound (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V c
	playActivitySound (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V d
	setAngerTarget (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/LivingEntity;)V b
	updateActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V b
	wasHurtBy (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled net/minecraft/world/entity/monster/piglin/BehaviorRememberHuntedHoglin
	isAttackTargetDeadHoglin (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen net/minecraft/world/entity/monster/piglin/BehaviorStartAdmiringItem
	admireDuration a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StartHuntingHoglin net/minecraft/world/entity/monster/piglin/BehaviorHuntHoglin
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway net/minecraft/world/entity/monster/piglin/BehaviorStopAdmiringItem
	maxDistanceToItem a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem net/minecraft/world/entity/monster/piglin/BehaviorAdmireTimeout
	disableTime c
	maxTimeToReachItem a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring net/minecraft/world/entity/monster/piglin/BehaviorStopAdmiring
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/npc/AbstractVillager net/minecraft/world/entity/npc/EntityVillagerAbstract
	DATA_UNHAPPY_COUNTER bY
	VILLAGER_INVENTORY_SIZE bZ
	VILLAGER_SLOT_OFFSET bW
	inventory cb
	offers bX
	tradingPlayer ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addOffersFromItemListings (Lnet/minecraft/world/item/trading/MerchantOffers;[Lnet/minecraft/world/entity/npc/VillagerTrades$ItemListing;I)V a
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getInventory ()Lnet/minecraft/world/Container; fI
	getInventory ()Lnet/minecraft/world/SimpleContainer; fF
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; fC
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; fA
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTradeUpdatedSound (Z)Lnet/minecraft/sounds/SoundEvent; v
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; fy
	getUnhappyCounter ()I q
	getVillagerXp ()I t
	isClientSide ()Z fH
	isTrading ()Z fz
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V m
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	playCelebrateSound ()V fD
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	setUnhappyCounter (I)V s
	showProgressBar ()Z fB
	stopTrading ()V fE
	updateTrades ()V fG
net/minecraft/world/entity/npc/CatSpawner net/minecraft/world/entity/npc/MobSpawnerCat
	TICK_DELAY a
	nextTick b
	spawnCat (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)I a
	spawnInHut (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)I b
	spawnInVillage (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)I a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/entity/npc/ClientSideMerchant net/minecraft/world/entity/npc/MerchantWrapper
	offers b
	source a
	xp c
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; fC
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; fA
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; fy
	getVillagerXp ()I t
	isClientSide ()Z fH
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V m
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	showProgressBar ()Z fB
net/minecraft/world/entity/npc/Npc net/minecraft/world/entity/npc/NPC
net/minecraft/world/entity/npc/Villager net/minecraft/world/entity/npc/EntityVillager
	BREEDING_FOOD_THRESHOLD bY
	DATA_VILLAGER_DATA cc
	FOOD_POINTS bZ
	GOSSIP_COOLDOWN cg
	GOSSIP_DECAY_INTERVAL ch
	HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS cj
	HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM ck
	MAX_GOSSIP_TOPICS cf
	MEMORY_TYPES cz
	POI_MEMORIES cb
	REPUTATION_CHANGE_PER_EVENT ci
	SENSOR_TYPES cA
	SPEED_MODIFIER ca
	TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING cl
	TRADES_PER_LEVEL cd
	WANTED_ITEMS ce
	assignProfessionWhenSpawned cy
	chasing cp
	foodLevel cq
	gossips cr
	increaseProfessionLevelOnUpdate cn
	lastGossipDecayTime ct
	lastGossipTime cs
	lastRestockCheckDayTime cx
	lastRestockGameTime cv
	lastTradedPlayer co
	numberOfRestocksToday cw
	updateMerchantTimer cm
	villagerXp cu
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V n
	allowedToRestock ()Z fZ
	assignProfessionWhenSpawned ()Z fL
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; du
	canBreed ()Z g
	canRestock ()Z fM
	catchUpDemand ()V ga
	countFoodPointsInInventory ()I gh
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fK
	customServerAiStep ()V R
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	digestFood (I)V v
	eatAndDigestFood ()V fR
	eatUntilFull ()V ge
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findSpawnPositionForGolemInColumn (Lnet/minecraft/core/BlockPos;DD)Lnet/minecraft/core/BlockPos; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dt
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/npc/Villager; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getGossips ()Lnet/minecraft/world/entity/ai/gossip/GossipContainer; fV
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPlayerReputation (Lnet/minecraft/world/entity/player/Player;)I g
	getTypeName ()Lnet/minecraft/network/chat/Component; cd
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; fJ
	getVillagerXp ()I t
	golemSpawnConditionsMet (J)Z b
	gossip (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	handleEntityEvent (B)V a
	hasExcessFood ()Z fS
	hasFarmSeeds ()Z fU
	hungry ()Z gd
	increaseMerchantCareer ()V gg
	isChasing ()Z fQ
	isClientSide ()Z fH
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeDecayGossip ()V gi
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	needsToRestock ()Z fY
	onReputationEventFrom (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playWorkSound ()V fP
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshBrain (Lnet/minecraft/server/level/ServerLevel;)V c
	registerBrainGoals (Lnet/minecraft/world/entity/ai/Brain;)V a
	releaseAllPois ()V gc
	releasePoi (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V a
	removeWhenFarAway (D)Z h
	resetNumberOfRestocks ()V gj
	resetSpecialPrices ()V fX
	restock ()V fN
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	sendDebugPackets ()V Q
	setChasing (Z)V w
	setGossips (Lnet/minecraft/nbt/Tag;)V a
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V b
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	setUnhappy ()V fW
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
	setVillagerXp (I)V u
	shouldIncreaseLevel ()Z gf
	shouldRestock ()Z fO
	spawnGolemIfNeeded (Lnet/minecraft/server/level/ServerLevel;JI)V a
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	startTrading (Lnet/minecraft/world/entity/player/Player;)V h
	stopSleeping ()V fc
	stopTrading ()V fE
	tellWitnessesThatIWasMurdered (Lnet/minecraft/world/entity/Entity;)V a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
	trySpawnGolem (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/animal/IronGolem; d
	updateDemand ()V gb
	updateSpecialPrices (Lnet/minecraft/world/entity/player/Player;)V i
	updateTrades ()V fG
	wantsMoreFood ()Z fT
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
	wantsToSpawnGolem (J)Z a
net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds bni$a
	item a
	maxUses c
	value b
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
	getRandomDye (Ljava/util/Random;)Lnet/minecraft/world/item/DyeItem; a
net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems bni$b
	cost b
	item a
	maxUses c
	priceMultiplier e
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem bni$c
	cost b
	maxUses c
	trades a
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds bni$d
	villagerXp a
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds bni$e
	baseEmeraldCost b
	itemStack a
	maxUses c
	priceMultiplier e
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemListing net/minecraft/world/entity/npc/VillagerTrades$IMerchantRecipeOption
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems bni$g
	emeraldCost c
	fromCount b
	fromItem a
	maxUses f
	priceMultiplier h
	toCount e
	toItem d
	villagerXp g
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds bni$h
	emeraldCost b
	itemStack a
	maxUses d
	numberOfItems c
	priceMultiplier f
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$SuspiciousStewForEmerald bni$i
	duration b
	effect a
	priceMultiplier d
	xp c
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds bni$j
	emeraldCost c
	fromCount g
	fromItem f
	maxUses d
	priceMultiplier h
	toCount b
	toItem a
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds bni$k
	destination b
	destinationType c
	emeraldCost a
	maxUses d
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/WanderingTrader net/minecraft/world/entity/npc/EntityVillagerTrader
	NUMBER_OF_TRADE_OFFERS bY
	despawnDelay ca
	wanderTarget bZ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDespawnDelay ()I fJ
	getDrinkingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; fC
	getTradeUpdatedSound (Z)Lnet/minecraft/sounds/SoundEvent; v
	getWanderTarget ()Lnet/minecraft/core/BlockPos; fL
	maybeDespawn ()V fK
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	removeWhenFarAway (D)Z h
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	setDespawnDelay (I)V u
	setWanderTarget (Lnet/minecraft/core/BlockPos;)V g
	showProgressBar ()Z fB
	updateTrades ()V fG
net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal bnk$a
	speedModifier c
	stopDistance b
	trader a
	canUse ()Z a
	isTooFarAway (Lnet/minecraft/core/BlockPos;D)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/npc/WanderingTraderSpawner net/minecraft/world/entity/npc/MobSpawnerTrader
	DEFAULT_SPAWN_DELAY a
	DEFAULT_TICK_DELAY b
	MAX_SPAWN_CHANCE d
	MIN_SPAWN_CHANCE c
	NUMBER_OF_SPAWN_ATTEMPTS g
	SPAWN_CHANCE_INCREASE e
	SPAWN_ONE_IN_X_CHANCE f
	random h
	serverLevelData i
	spawnChance l
	spawnDelay k
	tickDelay j
	findSpawnPositionNear (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/core/BlockPos; a
	hasEnoughSpace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	spawn (Lnet/minecraft/server/level/ServerLevel;)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
	tryToSpawnLlamaFor (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/WanderingTrader;I)V a
net/minecraft/world/entity/player/Abilities net/minecraft/world/entity/player/PlayerAbilities
	flying b
	flyingSpeed f
	instabuild d
	invulnerable a
	mayBuild e
	mayfly c
	walkingSpeed g
	addSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	getFlyingSpeed ()F a
	getWalkingSpeed ()F b
	loadSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	setFlyingSpeed (F)V a
	setWalkingSpeed (F)V b
net/minecraft/world/entity/player/ChatVisiblity net/minecraft/world/entity/player/EnumChatVisibility
	$VALUES g
	BY_ID d
	FULL a
	HIDDEN c
	SYSTEM b
	id e
	key f
	$values ()[Lnet/minecraft/world/entity/player/ChatVisiblity; c
	byId (I)Lnet/minecraft/world/entity/player/ChatVisiblity; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/world/entity/player/Inventory net/minecraft/world/entity/player/PlayerInventory
	ALL_ARMOR_SLOTS f
	HELMET_SLOT_ONLY g
	INVENTORY_SIZE c
	NOT_FOUND_INDEX e
	POP_TIME_DURATION b
	SELECTION_SIZE m
	SLOT_OFFHAND d
	armor i
	compartments n
	items h
	offhand j
	player l
	selected k
	timesChanged o
	add (ILnet/minecraft/world/item/ItemStack;)Z c
	add (Lnet/minecraft/world/item/ItemStack;)Z e
	addResource (ILnet/minecraft/world/item/ItemStack;)I d
	addResource (Lnet/minecraft/world/item/ItemStack;)I i
	clearContent ()V a
	clearOrCountMatchingItems (Ljava/util/function/Predicate;ILnet/minecraft/world/Container;)I a
	contains (Lnet/minecraft/tags/Tag;)Z a
	contains (Lnet/minecraft/world/item/ItemStack;)Z h
	dropAll ()V k
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	findSlotMatchingItem (Lnet/minecraft/world/item/ItemStack;)I b
	findSlotMatchingUnusedItem (Lnet/minecraft/world/item/ItemStack;)I c
	getArmor (I)Lnet/minecraft/world/item/ItemStack; e
	getContainerSize ()I b
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F a
	getFreeSlot ()I h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getName ()Lnet/minecraft/network/chat/Component; X
	getSelected ()Lnet/minecraft/world/item/ItemStack; f
	getSelectionSize ()I g
	getSlotWithRemainingSpace (Lnet/minecraft/world/item/ItemStack;)I d
	getSuitableHotbarSlot ()I i
	getTimesChanged ()I l
	hasRemainingSpaceForItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F[I)V a
	isEmpty ()Z c
	isHotbarSlot (I)Z d
	load (Lnet/minecraft/nbt/ListTag;)V b
	pickSlot (I)V c
	placeItemBackInInventory (Lnet/minecraft/world/item/ItemStack;)V f
	placeItemBackInInventory (Lnet/minecraft/world/item/ItemStack;Z)V a
	removeFromSelected (Z)Lnet/minecraft/world/item/ItemStack; a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItem (Lnet/minecraft/world/item/ItemStack;)V g
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	replaceWith (Lnet/minecraft/world/entity/player/Inventory;)V a
	save (Lnet/minecraft/nbt/ListTag;)Lnet/minecraft/nbt/ListTag; a
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setPickedItem (Lnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	swapPaint (D)V a
	tick ()V j
net/minecraft/world/entity/player/Player net/minecraft/world/entity/player/EntityHuman
	CROUCH_BB_HEIGHT bL
	DATA_PLAYER_ABSORPTION_ID d
	DATA_PLAYER_MAIN_HAND bR
	DATA_PLAYER_MODE_CUSTOMISATION bQ
	DATA_SCORE_ID e
	DATA_SHOULDER_LEFT bS
	DATA_SHOULDER_RIGHT bT
	DEFAULT_EYE_HEIGHT bO
	ENDER_SLOT_OFFSET bK
	FLY_ACHIEVEMENT_SPEED c
	MAX_HEALTH bH
	MAX_NAME_LENGTH bG
	POSES b
	SLEEP_DURATION bI
	STANDING_DIMENSIONS bP
	SWIMMING_BB_HEIGHT bN
	SWIMMING_BB_WIDTH bM
	UUID_PREFIX_OFFLINE_PLAYER bF
	WAKE_UP_DURATION bJ
	abilities cr
	bob ca
	containerMenu bW
	cooldowns cw
	defaultFlySpeed cn
	enchantmentSeed cm
	enderChestInventory bU
	experienceLevel cj
	experienceProgress cl
	fishing co
	foodData bX
	gameProfile ct
	inventory cp
	inventoryMenu bV
	jumpTriggerTime bY
	lastItemInMainHand cv
	lastLevelUpTime cs
	oBob bZ
	reducedDebugInfo cu
	sleepCounter cq
	takeXpDelay cb
	timeEntitySatOnShoulder f
	totalExperience ck
	wasUnderwater ci
	xCloak cf
	xCloakO cc
	yCloak cg
	yCloakO cd
	zCloak ch
	zCloakO ce
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addItem (Lnet/minecraft/world/item/ItemStack;)Z j
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	aiStep ()V w_
	attack (Lnet/minecraft/world/entity/Entity;)V d
	awardRecipes (Ljava/util/Collection;)I a
	awardRecipesByKey ([Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/resources/ResourceLocation;I)V a
	awardStat (Lnet/minecraft/stats/Stat;)V b
	awardStat (Lnet/minecraft/stats/Stat;I)V a
	blockActionRestricted (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/GameType;)Z a
	blockUsingShield (Lnet/minecraft/world/entity/LivingEntity;)V d
	canBeSeenAsEnemy ()Z dS
	canEat (Z)Z s
	canHarmPlayer (Lnet/minecraft/world/entity/player/Player;)Z a
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	canUseGameMasterBlocks ()Z fM
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	causeFoodExhaustion (F)V u
	checkMovementStatistics (DDD)V q
	checkRidingStatistics (DDD)V r
	closeContainer ()V q
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fe
	createItemCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; j
	createPlayerUUID (Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID; a
	createPlayerUUID (Ljava/lang/String;)Ljava/util/UUID; c
	crit (Lnet/minecraft/world/entity/Entity;)V a
	decorateDisplayNameComponent (Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/MutableComponent; a
	defineSynchedData ()V a_
	destroyVanishingCursedItems ()V fl
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	disableShield (Z)V r
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	doAutoAttackOnTouch (Lnet/minecraft/world/entity/LivingEntity;)V g
	doWaterSplashEffect ()V aY
	drop (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/entity/item/ItemEntity; a
	drop (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity; a
	dropEquipment ()V ec
	eat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	findRespawnPositionAndUseSpawnBlock (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;FZZ)Ljava/util/Optional; a
	freeAt (Lnet/minecraft/core/BlockPos;)Z f
	getAbilities ()Lnet/minecraft/world/entity/player/Abilities; fr
	getAbsorptionAmount ()F eI
	getArmorSlots ()Ljava/lang/Iterable; bC
	getAttackStrengthScale (F)F v
	getBlockSpeedFactor ()F aC
	getCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; fK
	getCurrentItemAttackStrengthDelay ()F fI
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F c
	getDimensionChangingDelay ()I bz
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDismountPoses ()Lcom/google/common/collect/ImmutableList; eY
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
	getEnchantmentSeed ()I fx
	getEnderChestInventory ()Lnet/minecraft/world/inventory/PlayerEnderChestContainer; fC
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; ef
	getFireImmuneTicks ()I cP
	getFoodData ()Lnet/minecraft/world/food/FoodData; fz
	getGameProfile ()Lcom/mojang/authlib/GameProfile; fp
	getHandSlots ()Ljava/lang/Iterable; bB
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventory ()Lnet/minecraft/world/entity/player/Inventory; fq
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getLuck ()F fL
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; eK
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getMyRidingOffset ()D bp
	getName ()Lnet/minecraft/network/chat/Component; X
	getPortalWaitTime ()I ar
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; h
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getScore ()I fk
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; fE
	getScoreboardName ()Ljava/lang/String; co
	getShoulderEntityLeft ()Lnet/minecraft/nbt/CompoundTag; fG
	getShoulderEntityRight ()Lnet/minecraft/nbt/CompoundTag; fH
	getSleepTimer ()I ft
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cO
	getSpeed ()F eC
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimHighSpeedSplashSound ()Lnet/minecraft/sounds/SoundEvent; aH
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aF
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aG
	getXpNeededForNextLevel ()I fy
	giveExperienceLevels (I)V c
	giveExperiencePoints (I)V d
	handleEntityEvent (B)V a
	hasCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V b
	hurtCurrentlyUsedShield (F)V q
	hurtHelmet (Lnet/minecraft/world/damagesource/DamageSource;F)V c
	increaseScore (I)V t
	interactOn (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAboveGround ()Z t
	isAffectedByFluids ()Z dF
	isAlwaysExperienceDropper ()Z dJ
	isAlwaysTicking ()Z ds
	isCreative ()Z f
	isHurt ()Z fA
	isImmobile ()Z ew
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isLocalPlayer ()Z fo
	isModelPartShown (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z a
	isPushedByFluid ()Z cp
	isReducedDebugInfo ()Z fF
	isScoping ()Z fN
	isSecondaryUseActive ()Z ff
	isSleepingLongEnough ()Z fs
	isSpectator ()Z B_
	isStayingOnGroundSurface ()Z fh
	isSwimming ()Z bP
	jumpFromGround ()V ez
	killed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	mayBuild ()Z fB
	mayUseItemAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;)Z a
	maybeBackOffFromEdge (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/MoverType;)Lnet/minecraft/world/phys/Vec3; a
	moveCloak ()V r
	onEnchantmentPerformed (Lnet/minecraft/world/item/ItemStack;I)V a
	onSoulSpeedBlock ()Z dz
	onUpdateAbilities ()V w
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openHorseInventory (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openJigsawBlock (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity;)V a
	openMenu (Lnet/minecraft/world/MenuProvider;)Ljava/util/OptionalInt; a
	openMinecartCommandBlock (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	openStructureBlock (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playShoulderEntityAmbientSound (Lnet/minecraft/nbt/CompoundTag;)V c
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeEntitiesOnShoulder ()V fD
	removeVehicle ()V bt
	resetAttackStrengthTicker ()V fJ
	resetRecipes (Ljava/util/Collection;)I b
	resetStat (Lnet/minecraft/stats/Stat;)V a
	respawn ()V fn
	respawnEntityOnShoulder (Lnet/minecraft/nbt/CompoundTag;)V k
	rideTick ()V bo
	sendMerchantOffers (ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V a
	serverAiStep ()V eE
	setAbsorptionAmount (F)V t
	setEntityOnShoulder (Lnet/minecraft/nbt/CompoundTag;)Z h
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setMainArm (Lnet/minecraft/world/entity/HumanoidArm;)V a
	setReducedDebugInfo (Z)V t
	setRemainingFireTicks (I)V g
	setScore (I)V s
	setShoulderEntityLeft (Lnet/minecraft/nbt/CompoundTag;)V i
	setShoulderEntityRight (Lnet/minecraft/nbt/CompoundTag;)V j
	shouldBeSaved ()Z dr
	shouldRemoveSoulSpeed (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	shouldShowName ()Z cs
	startFallFlying ()V fv
	startSleepInBed (Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either; a
	stopFallFlying ()V fw
	stopSleepInBed (ZZ)V a
	stopSleeping ()V fc
	sweepAttack ()V fm
	tick ()V k
	touch (Lnet/minecraft/world/entity/Entity;)V c
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	tryToStartFallFlying ()Z fu
	turtleHelmetTick ()V n
	updateIsUnderwater ()Z fi
	updatePlayerPose ()V fj
	updateSwimming ()V aV
	updateTutorialInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	wantsToStopRiding ()Z fg
net/minecraft/world/entity/player/Player$BedSleepingProblem net/minecraft/world/entity/player/EntityHuman$EnumBedResult
	$VALUES h
	NOT_POSSIBLE_HERE a
	NOT_POSSIBLE_NOW b
	NOT_SAFE f
	OBSTRUCTED d
	OTHER_PROBLEM e
	TOO_FAR_AWAY c
	message g
	$values ()[Lnet/minecraft/world/entity/player/Player$BedSleepingProblem; b
	getMessage ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/entity/player/StackedContents net/minecraft/world/entity/player/AutoRecipeStackManager
	EMPTY b
	contents a
	accountSimpleStack (Lnet/minecraft/world/item/ItemStack;)V a
	accountStack (Lnet/minecraft/world/item/ItemStack;)V b
	accountStack (Lnet/minecraft/world/item/ItemStack;I)V a
	canCraft (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;)Z a
	canCraft (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;I)Z a
	clear ()V a
	fromStackingIndex (I)Lnet/minecraft/world/item/ItemStack; a
	getBiggestCraftableStack (Lnet/minecraft/world/item/crafting/Recipe;ILit/unimi/dsi/fastutil/ints/IntList;)I a
	getBiggestCraftableStack (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;)I b
	getStackingIndex (Lnet/minecraft/world/item/ItemStack;)I c
	has (I)Z b
	put (II)V b
	take (II)I a
net/minecraft/world/entity/player/StackedContents$RecipePicker bnt$a
	data g
	ingredientCount d
	ingredients c
	itemCount f
	items e
	path h
	recipe b
	dfs (I)Z a
	getIndex (ZII)I d
	getMinIngredientCount ()I b
	getSatisfiedIndex (I)I d
	getUniqueAvailableIngredientItems ()[I a
	getVisitedIndex (ZI)I c
	hasConnection (ZII)Z a
	hasResidual (ZII)Z b
	hasVisited (ZI)Z b
	isSatisfied (I)Z b
	setSatisfied (I)V c
	toggleResidual (ZII)V c
	tryPick (ILit/unimi/dsi/fastutil/ints/IntList;)Z a
	tryPickAll (ILit/unimi/dsi/fastutil/ints/IntList;)I b
	visit (ZI)V a
net/minecraft/world/entity/projectile/AbstractArrow net/minecraft/world/entity/projectile/EntityArrow
	ARROW_BASE_DAMAGE f
	FLAG_CRIT ar
	FLAG_CROSSBOW at
	FLAG_NOPHYSICS as
	ID_FLAGS ap
	PIERCE_LEVEL aq
	baseDamage aw
	inGround b
	inGroundTime c
	knockback ax
	lastState au
	life av
	pickup d
	piercedAndKilledEntities aA
	piercingIgnoreEntityIds az
	shakeTime e
	soundEvent ay
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	defineSynchedData ()V a_
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	findHitEntity (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/EntityHitResult; a
	getBaseDamage ()D n
	getDefaultHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; i
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; j
	getKnockback ()I o
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; l
	getPierceLevel ()B s
	getWaterInertia ()F t
	isAttackable ()Z cf
	isCritArrow ()Z q
	isNoPhysics ()Z u
	lerpMotion (DDD)V k
	lerpTo (DDDFFIZ)V a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	resetPiercedEntities ()V C
	setBaseDamage (D)V h
	setCritArrow (Z)V a
	setEnchantmentEffectsFromEntity (Lnet/minecraft/world/entity/LivingEntity;F)V a
	setFlag (IZ)V a
	setKnockback (I)V a
	setNoPhysics (Z)V p
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	setPierceLevel (B)V b
	setShotFromCrossbow (Z)V q
	setSoundEvent (Lnet/minecraft/sounds/SoundEvent;)V a
	shoot (DDDFF)V c
	shotFromCrossbow ()Z r
	shouldFall ()Z w
	shouldRenderAtSqrDistance (D)Z a
	startFalling ()V A
	tick ()V k
	tickDespawn ()V h
	tryPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/projectile/AbstractArrow$Pickup net/minecraft/world/entity/projectile/EntityArrow$PickupStatus
	$VALUES d
	ALLOWED b
	CREATIVE_ONLY c
	DISALLOWED a
	$values ()[Lnet/minecraft/world/entity/projectile/AbstractArrow$Pickup; a
	byOrdinal (I)Lnet/minecraft/world/entity/projectile/AbstractArrow$Pickup; a
net/minecraft/world/entity/projectile/AbstractHurtingProjectile net/minecraft/world/entity/projectile/EntityFireball
	xPower b
	yPower c
	zPower d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBrightness ()F bd
	getInertia ()F j
	getPickRadius ()F bu
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bh
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	shouldBurn ()Z K_
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
net/minecraft/world/entity/projectile/Arrow net/minecraft/world/entity/projectile/EntityTippedArrow
	EVENT_POTION_PUFF ar
	EXPOSED_POTION_DECAY_TIME f
	ID_EFFECT_COLOR aq
	NO_EFFECT_COLOR ap
	effects at
	fixedColor au
	potion as
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	defineSynchedData ()V a_
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	getColor ()I w
	getCustomColor (Lnet/minecraft/world/item/ItemStack;)I c
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; l
	handleEntityEvent (B)V a
	makeParticle (I)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setEffectsFromItem (Lnet/minecraft/world/item/ItemStack;)V a
	setFixedColor (I)V c
	tick ()V k
	updateColor ()V A
net/minecraft/world/entity/projectile/DragonFireball net/minecraft/world/entity/projectile/EntityDragonFireball
	SPLASH_RANGE e
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bh
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	shouldBurn ()Z K_
net/minecraft/world/entity/projectile/EvokerFangs net/minecraft/world/entity/projectile/EntityEvokerFangs
	ATTACK_DURATION b
	ATTACK_TRIGGER_TICKS d
	LIFE_OFFSET c
	clientSideAttackStarted aq
	lifeTicks ap
	owner ar
	ownerUUID as
	sentSpikeEvent f
	warmupDelayTicks e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dealDamageTo (Lnet/minecraft/world/entity/LivingEntity;)V c
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAnimationProgress (F)F a
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; h
	handleEntityEvent (B)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setOwner (Lnet/minecraft/world/entity/LivingEntity;)V a
	tick ()V k
net/minecraft/world/entity/projectile/EyeOfEnder net/minecraft/world/entity/projectile/EntityEnderSignal
	DATA_ITEM_STACK b
	life f
	surviveAfterDeath ap
	tx c
	ty d
	tz e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBrightness ()F bd
	getItem ()Lnet/minecraft/world/item/ItemStack; h
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; i
	isAttackable ()Z cf
	lerpMotion (DDD)V k
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	shouldRenderAtSqrDistance (D)Z a
	signalTo (Lnet/minecraft/core/BlockPos;)V a
	tick ()V k
net/minecraft/world/entity/projectile/Fireball net/minecraft/world/entity/projectile/EntityFireballFireball
	DATA_ITEM_STACK e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getItem ()Lnet/minecraft/world/item/ItemStack; h
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; l
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/projectile/FireworkRocketEntity net/minecraft/world/entity/projectile/EntityFireworks
	DATA_ATTACHED_TO_TARGET c
	DATA_ID_FIREWORKS_ITEM b
	DATA_SHOT_AT_ANGLE d
	attachedToEntity ap
	life e
	lifetime f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dealExplosionDamage ()V n
	defineSynchedData ()V a_
	explode ()V j
	getItem ()Lnet/minecraft/world/item/ItemStack; h
	handleEntityEvent (B)V a
	hasExplosion ()Z l
	isAttachedToEntity ()Z o
	isAttackable ()Z cf
	isShotAtAngle ()Z i
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldRender (DDD)Z j
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
net/minecraft/world/entity/projectile/FishingHook net/minecraft/world/entity/projectile/EntityFishingHook
	DATA_BITING ap
	DATA_HOOKED_ENTITY f
	MAX_OUT_OF_WATER_TIME e
	biting c
	currentState ax
	fishAngle au
	hookedIn aw
	life aq
	luck ay
	lureSpeed az
	nibble ar
	openWater av
	outOfWaterTime d
	syncronizedRandom b
	timeUntilHooked at
	timeUntilLured as
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	calculateOpenWater (Lnet/minecraft/core/BlockPos;)Z b
	canChangeDimensions ()Z ci
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	catchingFish (Lnet/minecraft/core/BlockPos;)V a
	checkCollision ()V l
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getHookedIn ()Lnet/minecraft/world/entity/Entity; j
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getOpenWaterTypeForArea (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; a
	getOpenWaterTypeForBlock (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; c
	getPlayerOwner ()Lnet/minecraft/world/entity/player/Player; i
	handleEntityEvent (B)V a
	isOpenWaterFishing ()Z h
	lerpTo (DDDFFIZ)V a
	onClientRemoval ()V aj
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	pullEntity (Lnet/minecraft/world/entity/Entity;)V c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	retrieve (Lnet/minecraft/world/item/ItemStack;)I a
	setHookedEntity (Lnet/minecraft/world/entity/Entity;)V x
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	shouldRenderAtSqrDistance (D)Z a
	shouldStopFishing (Lnet/minecraft/world/entity/player/Player;)Z a
	tick ()V k
	updateOwnerInfo (Lnet/minecraft/world/entity/projectile/FishingHook;)V a
net/minecraft/world/entity/projectile/FishingHook$FishHookState net/minecraft/world/entity/projectile/EntityFishingHook$HookState
	$VALUES d
	BOBBING c
	FLYING a
	HOOKED_IN_ENTITY b
	$values ()[Lnet/minecraft/world/entity/projectile/FishingHook$FishHookState; a
net/minecraft/world/entity/projectile/FishingHook$OpenWaterType net/minecraft/world/entity/projectile/EntityFishingHook$WaterPosition
	$VALUES d
	ABOVE_WATER a
	INSIDE_WATER b
	INVALID c
	$values ()[Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; a
net/minecraft/world/entity/projectile/LargeFireball net/minecraft/world/entity/projectile/EntityLargeFireball
	explosionPower e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/projectile/LlamaSpit net/minecraft/world/entity/projectile/EntityLlamaSpit
	defineSynchedData ()V a_
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	tick ()V k
net/minecraft/world/entity/projectile/Projectile net/minecraft/world/entity/projectile/IProjectile
	cachedOwner c
	hasBeenShot e
	leftOwner d
	ownerUUID b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkLeftOwner ()Z i
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getEffectSource ()Lnet/minecraft/world/entity/Entity; y
	getOwner ()Lnet/minecraft/world/entity/Entity; x
	lerpMotion (DDD)V k
	lerpRotation (FF)F d
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	ownedBy (Lnet/minecraft/world/entity/Entity;)Z d
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	shoot (DDDFF)V c
	shootFromRotation (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	tick ()V k
	updateRotation ()V z
net/minecraft/world/entity/projectile/ProjectileUtil net/minecraft/world/entity/projectile/ProjectileHelper
	getEntityHitResult (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;D)Lnet/minecraft/world/phys/EntityHitResult; a
	getEntityHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/EntityHitResult; a
	getEntityHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;F)Lnet/minecraft/world/phys/EntityHitResult; a
	getHitResult (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/HitResult; a
	getMobArrow (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
	getWeaponHoldingHand (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/InteractionHand; a
	rotateTowardsMovement (Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/entity/projectile/ShulkerBullet net/minecraft/world/entity/projectile/EntityShulkerBullet
	SPEED b
	currentMoveDirection d
	finalTarget c
	flightSteps e
	targetDeltaX f
	targetDeltaY ap
	targetDeltaZ aq
	targetId ar
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkDespawn ()V dj
	defineSynchedData ()V a_
	getBrightness ()F bd
	getMoveDirection ()Lnet/minecraft/core/Direction; h
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cO
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isOnFire ()Z bE
	isPickable ()Z bh
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	selectNextMoveDirection (Lnet/minecraft/core/Direction$Axis;)V a
	setMoveDirection (Lnet/minecraft/core/Direction;)V a
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
net/minecraft/world/entity/projectile/SmallFireball net/minecraft/world/entity/projectile/EntitySmallFireball
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bh
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/Snowball net/minecraft/world/entity/projectile/EntitySnowball
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; n
	handleEntityEvent (B)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/SpectralArrow net/minecraft/world/entity/projectile/EntitySpectralArrow
	duration f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; l
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V k
net/minecraft/world/entity/projectile/ThrowableItemProjectile net/minecraft/world/entity/projectile/EntityProjectileThrowable
	DATA_ITEM_STACK b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	getItem ()Lnet/minecraft/world/item/ItemStack; h
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; j
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/projectile/ThrowableProjectile net/minecraft/world/entity/projectile/EntityProjectile
	getGravity ()F l
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
net/minecraft/world/entity/projectile/ThrownEgg net/minecraft/world/entity/projectile/EntityEgg
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	handleEntityEvent (B)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/ThrownEnderpearl net/minecraft/world/entity/projectile/EntityEnderPearl
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	tick ()V k
net/minecraft/world/entity/projectile/ThrownExperienceBottle net/minecraft/world/entity/projectile/EntityThrownExpBottle
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	getGravity ()F l
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
net/minecraft/world/entity/projectile/ThrownPotion net/minecraft/world/entity/projectile/EntityPotion
	SPLASH_RANGE b
	SPLASH_RANGE_SQ d
	WATER_SENSITIVE c
	applySplash (Ljava/util/List;Lnet/minecraft/world/entity/Entity;)V a
	applyWater ()V n
	dowseFire (Lnet/minecraft/core/BlockPos;)V a
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	getGravity ()F l
	isLingering ()Z o
	makeAreaOfEffectCloud (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/Potion;)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
net/minecraft/world/entity/projectile/ThrownTrident net/minecraft/world/entity/projectile/EntityThrownTrident
	ID_FOIL aq
	ID_LOYALTY ap
	clientSideReturnTridentTickCount f
	dealtDamage as
	tridentItem ar
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	findHitEntity (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/EntityHitResult; a
	getDefaultHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; i
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; l
	getWaterInertia ()F t
	isAcceptibleReturnOwner ()Z C
	isChanneling ()Z A
	isFoil ()Z w
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldRender (DDD)Z j
	tick ()V k
	tickDespawn ()V h
	tryPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/projectile/WitherSkull net/minecraft/world/entity/projectile/EntityWitherSkull
	DATA_DANGEROUS e
	defineSynchedData ()V a_
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getInertia ()F j
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isDangerous ()Z l
	isOnFire ()Z bE
	isPickable ()Z bh
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	setDangerous (Z)V a
	shouldBurn ()Z K_
net/minecraft/world/entity/raid/Raid$RaidStatus net/minecraft/world/entity/raid/Raid$Status
	$VALUES f
	LOSS c
	ONGOING a
	STOPPED d
	VALUES e
	VICTORY b
	$values ()[Lnet/minecraft/world/entity/raid/Raid$RaidStatus; b
	getByName (Ljava/lang/String;)Lnet/minecraft/world/entity/raid/Raid$RaidStatus; a
	getName ()Ljava/lang/String; a
net/minecraft/world/entity/raid/Raid$RaiderType net/minecraft/world/entity/raid/Raid$Wave
	$VALUES i
	EVOKER b
	PILLAGER c
	RAVAGER e
	VALUES f
	VINDICATOR a
	WITCH d
	entityType g
	spawnsPerWaveBeforeBonus h
	$values ()[Lnet/minecraft/world/entity/raid/Raid$RaiderType; a
net/minecraft/world/entity/raid/Raider net/minecraft/world/entity/raid/EntityRaider
	ALLOWED_ITEMS b
	IS_CELEBRATING c
	canJoinRaid bW
	raid d
	ticksOutsideRaid bX
	wave e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	applyRaidBuffs (IZ)V a
	canJoinPatrol ()Z fF
	canJoinRaid ()Z fL
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; t
	getCurrentRaid ()Lnet/minecraft/world/entity/raid/Raid; fM
	getTicksOutsideRaid ()I fQ
	getWave ()I fO
	hasActiveRaid ()Z fN
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCelebrating ()Z fP
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V u
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z O
	setCanJoinRaid (Z)V y
	setCelebrating (Z)V z
	setCurrentRaid (Lnet/minecraft/world/entity/raid/Raid;)V a
	setTicksOutsideRaid (I)V b
	setWave (I)V a
	updateNoActionTime ()V fC
net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal box$a
	hostileRadiusSqr d
	mob c
	shoutTargeting a
	canUse ()Z a
	requiresUpdateEveryTick ()Z h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal box$b
	mob b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/raid/Raider$RaiderCelebration box$c
	mob b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal box$d
	distanceToPoi e
	poiPos c
	raider a
	speedModifier b
	stuck f
	visited d
	canContinueToUse ()Z b
	canUse ()Z a
	hasNotVisited (Lnet/minecraft/core/BlockPos;)Z a
	hasSuitablePoi ()Z i
	isValidRaid ()Z g
	start ()V c
	stop ()V d
	tick ()V e
	updateVisited ()V k
net/minecraft/world/entity/raid/Raids net/minecraft/world/entity/raid/PersistentRaid
	RAID_FILE_ID a
	level c
	nextAvailableID d
	raidMap b
	tick e
	canJoinRaid (Lnet/minecraft/world/entity/raid/Raider;Lnet/minecraft/world/entity/raid/Raid;)Z a
	createOrExtendRaid (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/world/entity/raid/Raid; a
	get (I)Lnet/minecraft/world/entity/raid/Raid; a
	getFileId (Lnet/minecraft/world/level/dimension/DimensionType;)Ljava/lang/String; a
	getNearbyRaid (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/entity/raid/Raid; a
	getOrCreateRaid (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid; a
	getUniqueId ()I d
	load (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/raid/Raids; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	tick ()V a
net/minecraft/world/entity/schedule/Keyframe net/minecraft/world/entity/schedule/ActivityFrame
	timeStamp a
	value b
	getTimeStamp ()I a
	getValue ()F b
net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition bpd$a
	activity b
	time a
	getActivity ()Lnet/minecraft/world/entity/schedule/Activity; b
	getTime ()I a
net/minecraft/world/entity/schedule/Timeline net/minecraft/world/entity/schedule/ScheduleActivity
	keyframes a
	previousIndex b
	addKeyframe (IF)Lnet/minecraft/world/entity/schedule/Timeline; a
	addKeyframes (Ljava/util/Collection;)Lnet/minecraft/world/entity/schedule/Timeline; a
	getKeyframes ()Lcom/google/common/collect/ImmutableList; a
	getValueAt (I)F a
	sortAndDeduplicateKeyframes ()V b
net/minecraft/world/entity/vehicle/AbstractMinecart net/minecraft/world/entity/vehicle/EntityMinecartAbstract
	DATA_ID_CUSTOM_DISPLAY aq
	DATA_ID_DAMAGE e
	DATA_ID_DISPLAY_BLOCK f
	DATA_ID_DISPLAY_OFFSET ap
	DATA_ID_HURT c
	DATA_ID_HURTDIR d
	EXITS at
	POSE_DISMOUNT_HEIGHTS ar
	WATER_SLOWDOWN_FACTOR b
	flipped as
	lSteps au
	lx av
	lxd aA
	lxr az
	ly aw
	lyd aB
	lyr ay
	lz ax
	lzd aC
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	animateHurt ()V bA
	applyNaturalSlowdown ()V j
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	comeOffTrack ()V i
	createMinecart (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/entity/vehicle/AbstractMinecart$Type;)Lnet/minecraft/world/entity/vehicle/AbstractMinecart; a
	defineSynchedData ()V a_
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	exits (Lnet/minecraft/world/level/block/state/properties/RailShape;)Lcom/mojang/datafixers/util/Pair; a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBlockSpeedFactor ()F aC
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cx
	getDamage ()F l
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; s
	getDefaultDisplayOffset ()I u
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; r
	getDisplayOffset ()I t
	getHurtDir ()I o
	getHurtTime ()I n
	getMaxSpeed ()D h
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; q
	getMotionDirection ()Lnet/minecraft/core/Direction; cu
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getPassengersRidingOffset ()D bq
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dk
	getPos (DDD)Lnet/minecraft/world/phys/Vec3; p
	getPosOffs (DDDD)Lnet/minecraft/world/phys/Vec3; a
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	hasCustomDisplay ()Z w
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bh
	isPushable ()Z bi
	isRedstoneConductor (Lnet/minecraft/core/BlockPos;)Z a
	lerpMotion (DDD)V k
	lerpTo (DDDFFIZ)V a
	moveAlongTrack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCustomDisplay (Z)V a
	setDamage (F)V a
	setDisplayBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V b
	setDisplayOffset (I)V m
	setHurtDir (I)V d
	setHurtTime (I)V c
	tick ()V k
net/minecraft/world/entity/vehicle/AbstractMinecart$Type net/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType
	$VALUES h
	CHEST b
	COMMAND_BLOCK g
	FURNACE c
	HOPPER f
	RIDEABLE a
	SPAWNER e
	TNT d
	$values ()[Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; a
net/minecraft/world/entity/vehicle/AbstractMinecartContainer net/minecraft/world/entity/vehicle/EntityMinecartContainer
	itemStacks c
	lootTable d
	lootTableSeed e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyNaturalSlowdown ()V j
	clearContent ()V a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isEmpty ()Z c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V d
net/minecraft/world/entity/vehicle/Boat net/minecraft/world/entity/vehicle/EntityBoat
	BUBBLE_TIME e
	DATA_ID_BUBBLE_TIME au
	DATA_ID_DAMAGE aq
	DATA_ID_HURT f
	DATA_ID_HURTDIR ap
	DATA_ID_PADDLE_LEFT as
	DATA_ID_PADDLE_RIGHT at
	DATA_ID_TYPE ar
	PADDLE_LEFT b
	PADDLE_RIGHT c
	PADDLE_SOUND_TIME d
	PADDLE_SPEED aw
	TIME_TO_EJECT av
	bubbleAngle aT
	bubbleAngleO aU
	bubbleColumnDirectionIsDown aR
	bubbleMultiplier aS
	deltaRotation aA
	inputDown aK
	inputLeft aH
	inputRight aI
	inputUp aJ
	invFriction ay
	isAboveBubbleColumn aQ
	landFriction aM
	lastYd aP
	lerpSteps aB
	lerpX aC
	lerpXRot aG
	lerpY aD
	lerpYRot aF
	lerpZ aE
	oldStatus aO
	outOfControlTicks az
	paddlePositions ax
	status aN
	waterLevel aL
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	animateHurt ()V bA
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z o
	canBeCollidedWith ()Z bn
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	canVehicleCollide (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkInWater ()Z w
	clampRotation (Lnet/minecraft/world/entity/Entity;)V a
	controlBoat ()V z
	defineSynchedData ()V a_
	floatBoat ()V y
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBoatType ()Lnet/minecraft/world/entity/vehicle/Boat$Type; r
	getBubbleAngle (F)F b
	getBubbleTime ()I A
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cE
	getDamage ()F n
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDropItem ()Lnet/minecraft/world/item/Item; h
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getGroundFriction ()F l
	getHurtDir ()I q
	getHurtTime ()I o
	getMotionDirection ()Lnet/minecraft/core/Direction; cu
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getPaddleSound ()Lnet/minecraft/sounds/SoundEvent; i
	getPaddleState (I)Z a
	getPassengersRidingOffset ()D bq
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dk
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getRowingTime (IF)F a
	getStatus ()Lnet/minecraft/world/entity/vehicle/Boat$Status; u
	getWaterLevelAbove ()F j
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isPickable ()Z bh
	isPushable ()Z bi
	isUnderWater ()Z aU
	isUnderwater ()Lnet/minecraft/world/entity/vehicle/Boat$Status; x
	lerpTo (DDDFFIZ)V a
	onAboveBubbleCol (Z)V k
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V j
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBubbleTime (I)V d
	setDamage (F)V a
	setHurtDir (I)V c
	setHurtTime (I)V b
	setInput (ZZZZ)V a
	setPaddleState (ZZ)V a
	setType (Lnet/minecraft/world/entity/vehicle/Boat$Type;)V a
	tick ()V k
	tickBubbleColumn ()V s
	tickLerp ()V t
net/minecraft/world/entity/vehicle/Boat$Status net/minecraft/world/entity/vehicle/EntityBoat$EnumStatus
	$VALUES f
	IN_AIR e
	IN_WATER a
	ON_LAND d
	UNDER_FLOWING_WATER c
	UNDER_WATER b
	$values ()[Lnet/minecraft/world/entity/vehicle/Boat$Status; a
net/minecraft/world/entity/vehicle/Boat$Type net/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType
	$VALUES i
	ACACIA e
	BIRCH c
	DARK_OAK f
	JUNGLE d
	OAK a
	SPRUCE b
	name g
	planks h
	$values ()[Lnet/minecraft/world/entity/vehicle/Boat$Type; c
	byId (I)Lnet/minecraft/world/entity/vehicle/Boat$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/vehicle/Boat$Type; a
	getName ()Ljava/lang/String; a
	getPlanks ()Lnet/minecraft/world/level/block/Block; b
net/minecraft/world/entity/vehicle/DismountHelper net/minecraft/world/entity/vehicle/DismountUtil
	canDismountTo (Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Z a
	canDismountTo (Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Pose;)Z a
	findCeilingFrom (Lnet/minecraft/core/BlockPos;ILjava/util/function/Function;)D a
	findSafeDismountLocation (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/phys/Vec3; a
	isBlockFloorValid (D)Z a
	nonClimbableShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	offsetsForDirection (Lnet/minecraft/core/Direction;)[[I a
net/minecraft/world/entity/vehicle/Minecart net/minecraft/world/entity/vehicle/EntityMinecartRideable
	activateMinecart (IIIZ)V a
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; q
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/entity/vehicle/MinecartChest net/minecraft/world/entity/vehicle/EntityMinecartChest
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getContainerSize ()I b
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; s
	getDefaultDisplayOffset ()I u
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; q
net/minecraft/world/entity/vehicle/MinecartCommandBlock net/minecraft/world/entity/vehicle/EntityMinecartCommandBlock
	ACTIVATION_DELAY f
	DATA_ID_COMMAND_NAME c
	DATA_ID_LAST_OUTPUT d
	commandBlock e
	lastActivated ap
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; x
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; s
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; q
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onlyOpCanSetNbt ()Z cD
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase bpm$a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; i
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getMinecart ()Lnet/minecraft/world/entity/vehicle/MinecartCommandBlock; h
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	onUpdated ()V f
net/minecraft/world/entity/vehicle/MinecartFurnace net/minecraft/world/entity/vehicle/EntityMinecartFurnace
	DATA_ID_FUEL e
	INGREDIENT ap
	fuel f
	xPush c
	zPush d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyNaturalSlowdown ()V j
	defineSynchedData ()V a_
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; s
	getMaxSpeed ()D h
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; q
	hasFuel ()Z x
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	moveAlongTrack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setHasFuel (Z)V p
	tick ()V k
net/minecraft/world/entity/vehicle/MinecartHopper net/minecraft/world/entity/vehicle/EntityMinecartHopper
	MOVE_ITEM_SPEED c
	cooldownTime ap
	enabled f
	lastPosition aq
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getContainerSize ()I b
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; s
	getDefaultDisplayOffset ()I u
	getLevelX ()D y
	getLevelY ()D z
	getLevelZ ()D A
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; q
	isEnabled ()Z x
	isOnCooldown ()Z D
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCooldown (I)V n
	setEnabled (Z)V p
	suckInItems ()Z C
	tick ()V k
net/minecraft/world/entity/vehicle/MinecartSpawner net/minecraft/world/entity/vehicle/EntityMinecartMobSpawner
	spawner c
	ticker d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createTicker (Lnet/minecraft/world/level/Level;)Ljava/lang/Runnable; a
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; s
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; q
	getSpawner ()Lnet/minecraft/world/level/BaseSpawner; x
	handleEntityEvent (B)V a
	onlyOpCanSetNbt ()Z cD
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V k
net/minecraft/world/entity/vehicle/MinecartTNT net/minecraft/world/entity/vehicle/EntityMinecartTNT
	EVENT_PRIME c
	fuse d
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	explode (D)V h
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; s
	getFuse ()I y
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; q
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPrimed ()Z z
	primeFuse ()V x
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	tick ()V k
net/minecraft/world/food/FoodConstants bps
	EXHAUSTION_ATTACK u
	EXHAUSTION_CROUCH x
	EXHAUSTION_DAMAGE v
	EXHAUSTION_DROP e
	EXHAUSTION_HEAL q
	EXHAUSTION_JUMP r
	EXHAUSTION_MINE t
	EXHAUSTION_SPRINT y
	EXHAUSTION_SPRINT_JUMP s
	EXHAUSTION_SWIM z
	EXHAUSTION_WALK w
	FOOD_SATURATION_GOOD n
	FOOD_SATURATION_LOW l
	FOOD_SATURATION_MAX o
	FOOD_SATURATION_NORMAL m
	FOOD_SATURATION_POOR k
	FOOD_SATURATION_SUPERNATURAL p
	HEALTH_TICK_COUNT f
	HEALTH_TICK_COUNT_SATURATED g
	HEAL_LEVEL h
	MAX_FOOD a
	MAX_SATURATION b
	SATURATION_FLOOR d
	SPRINT_LEVEL i
	START_SATURATION c
	STARVE_LEVEL j
net/minecraft/world/food/FoodData net/minecraft/world/food/FoodMetaData
	exhaustionLevel c
	foodLevel a
	lastFoodLevel e
	saturationLevel b
	tickTimer d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addExhaustion (F)V a
	eat (IF)V a
	eat (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/ItemStack;)V a
	getExhaustionLevel ()F d
	getFoodLevel ()I a
	getLastFoodLevel ()I b
	getSaturationLevel ()F e
	needsFood ()Z c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setExhaustion (F)V c
	setFoodLevel (I)V a
	setSaturation (F)V b
	tick (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/food/FoodProperties net/minecraft/world/food/FoodInfo
	canAlwaysEat d
	effects f
	fastFood e
	isMeat c
	nutrition a
	saturationModifier b
	canAlwaysEat ()Z d
	getEffects ()Ljava/util/List; f
	getNutrition ()I a
	getSaturationModifier ()F b
	isFastFood ()Z e
	isMeat ()Z c
net/minecraft/world/food/FoodProperties$Builder bpu$a
	canAlwaysEat d
	effects f
	fastFood e
	isMeat c
	nutrition a
	saturationModifier b
	alwaysEat ()Lnet/minecraft/world/food/FoodProperties$Builder; b
	build ()Lnet/minecraft/world/food/FoodProperties; d
	effect (Lnet/minecraft/world/effect/MobEffectInstance;F)Lnet/minecraft/world/food/FoodProperties$Builder; a
	fast ()Lnet/minecraft/world/food/FoodProperties$Builder; c
	meat ()Lnet/minecraft/world/food/FoodProperties$Builder; a
	nutrition (I)Lnet/minecraft/world/food/FoodProperties$Builder; a
	saturationMod (F)Lnet/minecraft/world/food/FoodProperties$Builder; a
net/minecraft/world/inventory/AbstractContainerMenu net/minecraft/world/inventory/Container
	CARRIED_SLOT_SIZE h
	QUICKCRAFT_HEADER_CONTINUE f
	QUICKCRAFT_HEADER_END g
	QUICKCRAFT_HEADER_START e
	QUICKCRAFT_TYPE_CHARITABLE b
	QUICKCRAFT_TYPE_CLONE d
	QUICKCRAFT_TYPE_GREEDY c
	SLOT_CLICKED_OUTSIDE a
	carried m
	containerId j
	containerListeners v
	dataSlots l
	lastSlots k
	menuType r
	quickcraftSlots u
	quickcraftStatus t
	quickcraftType s
	remoteCarried p
	remoteDataSlots o
	remoteSlots n
	slots i
	stateId q
	suppressRemoteUpdates x
	synchronizer w
	addDataSlot (Lnet/minecraft/world/inventory/DataSlot;)Lnet/minecraft/world/inventory/DataSlot; a
	addDataSlots (Lnet/minecraft/world/inventory/ContainerData;)V a
	addSlot (Lnet/minecraft/world/inventory/Slot;)Lnet/minecraft/world/inventory/Slot; a
	addSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V a
	broadcastChanges ()V d
	broadcastFullState ()V e
	canDragTo (Lnet/minecraft/world/inventory/Slot;)Z b
	canItemQuickReplace (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Z)Z a
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	checkContainerDataCount (Lnet/minecraft/world/inventory/ContainerData;I)V a
	checkContainerSize (Lnet/minecraft/world/Container;I)V a
	clearContainer (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/Container;)V a
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	clicked (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V a
	createCarriedSlotAccess ()Lnet/minecraft/world/entity/SlotAccess; m
	doClick (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V b
	findSlot (Lnet/minecraft/world/Container;I)Ljava/util/OptionalInt; b
	getCarried ()Lnet/minecraft/world/item/ItemStack; g
	getItems ()Lnet/minecraft/core/NonNullList; c
	getQuickCraftSlotCount (Ljava/util/Set;ILnet/minecraft/world/item/ItemStack;I)V a
	getQuickcraftHeader (I)I c
	getQuickcraftMask (II)I b
	getQuickcraftType (I)I b
	getRedstoneSignalFromBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)I a
	getRedstoneSignalFromContainer (Lnet/minecraft/world/Container;)I b
	getSlot (I)Lnet/minecraft/world/inventory/Slot; a
	getStateId ()I j
	getType ()Lnet/minecraft/world/inventory/MenuType; a
	incrementStateId ()I k
	initializeContents (ILjava/util/List;Lnet/minecraft/world/item/ItemStack;)V a
	isValidQuickcraftType (ILnet/minecraft/world/entity/player/Player;)Z a
	moveItemStackTo (Lnet/minecraft/world/item/ItemStack;IIZ)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removeSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	resetQuickCraft ()V f
	resumeRemoteUpdates ()V i
	sendAllDataToRemote ()V b
	setCarried (Lnet/minecraft/world/item/ItemStack;)V b
	setData (II)V a
	setItem (IILnet/minecraft/world/item/ItemStack;)V a
	setRemoteCarried (Lnet/minecraft/world/item/ItemStack;)V a
	setRemoteSlot (ILnet/minecraft/world/item/ItemStack;)V a
	setRemoteSlotNoCopy (ILnet/minecraft/world/item/ItemStack;)V b
	setSynchronizer (Lnet/minecraft/world/inventory/ContainerSynchronizer;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stillValid (Lnet/minecraft/world/inventory/ContainerLevelAccess;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/Block;)Z a
	suppressRemoteUpdates ()V h
	synchronizeCarriedToRemote ()V l
	synchronizeDataSlotToRemote (II)V d
	synchronizeSlotToRemote (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V b
	transferState (Lnet/minecraft/world/inventory/AbstractContainerMenu;)V a
	triggerSlotListeners (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V a
	updateDataSlotListeners (II)V c
net/minecraft/world/inventory/AbstractFurnaceMenu net/minecraft/world/inventory/ContainerFurnace
	DATA_COUNT o
	FUEL_SLOT l
	INGREDIENT_SLOT k
	INV_SLOT_END r
	INV_SLOT_START q
	RESULT_SLOT m
	SLOT_COUNT n
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	container u
	data v
	level p
	recipeBookType x
	recipeType w
	canSmelt (Lnet/minecraft/world/item/ItemStack;)Z c
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getBurnProgress ()I q
	getGridHeight ()I o
	getGridWidth ()I n
	getLitProgress ()I r
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	isFuel (Lnet/minecraft/world/item/ItemStack;)Z d
	isLit ()Z s
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	shouldMoveToInventory (I)Z d
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/AnvilMenu net/minecraft/world/inventory/ContainerAnvil
	COST_ADDED_BASE z
	COST_BASE y
	COST_FAIL x
	COST_INCOMPATIBLE_PENALTY C
	COST_RENAME D
	COST_REPAIR_MATERIAL A
	COST_REPAIR_SACRIFICE B
	DEBUG_COST t
	LOGGER s
	MAX_NAME_LENGTH k
	cost w
	itemName v
	repairItemCountCost u
	calculateIncreasedRepairCost (I)I d
	createResult ()V l
	getCost ()I m
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	setItemName (Ljava/lang/String;)V a
net/minecraft/world/inventory/BeaconMenu net/minecraft/world/inventory/ContainerBeacon
	DATA_COUNT m
	INV_SLOT_END o
	INV_SLOT_START n
	PAYMENT_SLOT k
	SLOT_COUNT l
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	access t
	beacon r
	beaconData u
	paymentSlot s
	getLevels ()I l
	getPrimaryEffect ()Lnet/minecraft/world/effect/MobEffect; m
	getSecondaryEffect ()Lnet/minecraft/world/effect/MobEffect; n
	hasPayment ()Z o
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setData (II)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateEffects (II)V c
net/minecraft/world/inventory/BeaconMenu$PaymentSlot net/minecraft/world/inventory/ContainerBeacon$SlotBeacon
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/BlastFurnaceMenu net/minecraft/world/inventory/ContainerBlastFurnace
net/minecraft/world/inventory/BrewingStandMenu net/minecraft/world/inventory/ContainerBrewingStand
	BOTTLE_SLOT_END l
	BOTTLE_SLOT_START k
	DATA_COUNT p
	FUEL_SLOT n
	INGREDIENT_SLOT m
	INV_SLOT_END r
	INV_SLOT_START q
	SLOT_COUNT o
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	brewingStand u
	brewingStandData v
	ingredientSlot w
	getBrewingTicks ()I m
	getFuel ()I l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/BrewingStandMenu$FuelSlot bqc$a
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	mayPlaceItem (Lnet/minecraft/world/item/ItemStack;)Z b
net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot net/minecraft/world/inventory/ContainerBrewingStand$SlotBrewing
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/BrewingStandMenu$PotionSlot net/minecraft/world/inventory/ContainerBrewingStand$SlotPotionBottle
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	mayPlaceItem (Lnet/minecraft/world/item/ItemStack;)Z b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/CartographyTableMenu net/minecraft/world/inventory/ContainerCartography
	ADDITIONAL_SLOT l
	INV_SLOT_END p
	INV_SLOT_START o
	MAP_SLOT k
	RESULT_SLOT m
	USE_ROW_SLOT_END r
	USE_ROW_SLOT_START q
	access s
	container n
	lastSoundTime t
	resultContainer u
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupResultSlot (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ChestMenu net/minecraft/world/inventory/ContainerChest
	SLOTS_PER_ROW k
	container l
	containerRows m
	fiveRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; e
	fourRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; d
	getContainer ()Lnet/minecraft/world/Container; l
	getRowCount ()I m
	oneRow (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	sixRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; f
	sixRows (ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/Container;)Lnet/minecraft/world/inventory/ChestMenu; b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	threeRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; c
	threeRows (ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/Container;)Lnet/minecraft/world/inventory/ChestMenu; a
	twoRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; b
net/minecraft/world/inventory/ClickType net/minecraft/world/inventory/InventoryClickType
	$VALUES h
	CLONE d
	PICKUP a
	PICKUP_ALL g
	QUICK_CRAFT f
	QUICK_MOVE b
	SWAP c
	THROW e
	$values ()[Lnet/minecraft/world/inventory/ClickType; a
net/minecraft/world/inventory/ContainerData net/minecraft/world/inventory/IContainerProperties
	get (I)I a
	getCount ()I a
	set (II)V a
net/minecraft/world/inventory/ContainerLevelAccess net/minecraft/world/inventory/ContainerAccess
	NULL a
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/inventory/ContainerLevelAccess; a
	evaluate (Ljava/util/function/BiFunction;)Ljava/util/Optional; a
	evaluate (Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object; a
	execute (Ljava/util/function/BiConsumer;)V a
net/minecraft/world/inventory/ContainerListener net/minecraft/world/inventory/ICrafting
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/CraftingContainer net/minecraft/world/inventory/InventoryCrafting
	height d
	items b
	menu e
	width c
	clearContent ()V a
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getContainerSize ()I b
	getHeight ()I f
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getWidth ()I g
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/CraftingMenu net/minecraft/world/inventory/ContainerWorkbench
	CRAFT_SLOT_END m
	CRAFT_SLOT_START l
	INV_SLOT_END o
	INV_SLOT_START n
	RESULT_SLOT k
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	access t
	craftSlots r
	player u
	resultSlots s
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getGridHeight ()I o
	getGridWidth ()I n
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldMoveToInventory (I)Z d
	slotChangedCraftingGrid (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/inventory/ResultContainer;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/DataSlot net/minecraft/world/inventory/ContainerProperty
	prevValue a
	checkAndClearUpdateFlag ()Z c
	forContainer (Lnet/minecraft/world/inventory/ContainerData;I)Lnet/minecraft/world/inventory/DataSlot; a
	get ()I b
	set (I)V a
	shared ([II)Lnet/minecraft/world/inventory/DataSlot; a
	standalone ()Lnet/minecraft/world/inventory/DataSlot; a
net/minecraft/world/inventory/DispenserMenu net/minecraft/world/inventory/ContainerDispenser
	INV_SLOT_END m
	INV_SLOT_START l
	SLOT_COUNT k
	USE_ROW_SLOT_END o
	USE_ROW_SLOT_START n
	dispenser p
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/EnchantmentMenu net/minecraft/world/inventory/ContainerEnchantTable
	access o
	costs k
	enchantClue l
	enchantSlots n
	enchantmentSeed q
	levelClue m
	random p
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getEnchantmentList (Lnet/minecraft/world/item/ItemStack;II)Ljava/util/List; a
	getEnchantmentSeed ()I m
	getGoldCount ()I l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/FurnaceFuelSlot net/minecraft/world/inventory/SlotFurnaceFuel
	menu a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	isBucket (Lnet/minecraft/world/item/ItemStack;)Z c
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/FurnaceMenu net/minecraft/world/inventory/ContainerFurnaceFurnace
net/minecraft/world/inventory/FurnaceResultSlot net/minecraft/world/inventory/SlotFurnaceResult
	player a
	removeCount b
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/GrindstoneMenu net/minecraft/world/inventory/ContainerGrindstone
	ADDITIONAL_SLOT m
	INPUT_SLOT l
	INV_SLOT_END p
	INV_SLOT_START o
	MAX_NAME_LENGTH k
	RESULT_SLOT n
	USE_ROW_SLOT_END r
	USE_ROW_SLOT_START q
	access u
	repairSlots t
	resultSlots s
	createResult ()V l
	mergeEnchants (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removeNonCurses (Lnet/minecraft/world/item/ItemStack;II)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/HopperMenu net/minecraft/world/inventory/ContainerHopper
	CONTAINER_SIZE k
	hopper l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/HorseInventoryMenu net/minecraft/world/inventory/ContainerHorse
	horse l
	horseContainer k
	hasChest (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/InventoryMenu net/minecraft/world/inventory/ContainerPlayer
	ARMOR_SLOT_END p
	ARMOR_SLOT_START o
	BLOCK_ATLAS v
	CONTAINER_ID k
	CRAFT_SLOT_END n
	CRAFT_SLOT_START m
	EMPTY_ARMOR_SLOT_BOOTS z
	EMPTY_ARMOR_SLOT_CHESTPLATE x
	EMPTY_ARMOR_SLOT_HELMET w
	EMPTY_ARMOR_SLOT_LEGGINGS y
	EMPTY_ARMOR_SLOT_SHIELD A
	INV_SLOT_END r
	INV_SLOT_START q
	RESULT_SLOT l
	SHIELD_SLOT u
	SLOT_IDS D
	TEXTURE_EMPTY_SLOTS C
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	active B
	craftSlots E
	owner G
	resultSlots F
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getCraftSlots ()Lnet/minecraft/world/inventory/CraftingContainer; q
	getGridHeight ()I o
	getGridWidth ()I n
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	isHotbarSlot (I)Z e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldMoveToInventory (I)Z d
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ItemCombinerMenu net/minecraft/world/inventory/ContainerAnvilAbstract
	ADDITIONAL_SLOT m
	INPUT_SLOT l
	INV_SLOT_END s
	INV_SLOT_START k
	RESULT_SLOT n
	USE_ROW_SLOT_END u
	USE_ROW_SLOT_START t
	access q
	inputSlots p
	player r
	resultSlots o
	createResult ()V l
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldQuickMoveToAdditionalSlot (Lnet/minecraft/world/item/ItemStack;)Z c
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/LecternMenu net/minecraft/world/inventory/ContainerLectern
	BUTTON_NEXT_PAGE l
	BUTTON_PAGE_JUMP_RANGE_START n
	BUTTON_PREV_PAGE k
	BUTTON_TAKE_BOOK m
	DATA_COUNT o
	SLOT_COUNT p
	lectern q
	lecternData r
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getBook ()Lnet/minecraft/world/item/ItemStack; l
	getPage ()I m
	setData (II)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/LoomMenu net/minecraft/world/inventory/ContainerLoom
	INV_SLOT_END l
	INV_SLOT_START k
	USE_ROW_SLOT_END n
	USE_ROW_SLOT_START m
	access o
	bannerSlot r
	dyeSlot s
	inputContainer w
	lastSoundTime v
	outputContainer x
	patternSlot t
	resultSlot u
	selectedBannerPatternIndex p
	slotUpdateListener q
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getBannerSlot ()Lnet/minecraft/world/inventory/Slot; m
	getDyeSlot ()Lnet/minecraft/world/inventory/Slot; n
	getPatternSlot ()Lnet/minecraft/world/inventory/Slot; o
	getResultSlot ()Lnet/minecraft/world/inventory/Slot; p
	getSelectedBannerPatternIndex ()I l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	registerUpdateListener (Ljava/lang/Runnable;)V a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupResultSlot ()V q
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/MenuConstructor net/minecraft/world/inventory/ITileEntityContainer
net/minecraft/world/inventory/MenuType net/minecraft/world/inventory/Containers
	ANVIL h
	BEACON i
	BLAST_FURNACE j
	BREWING_STAND k
	CARTOGRAPHY_TABLE w
	CRAFTING l
	ENCHANTMENT m
	FURNACE n
	GENERIC_3x3 g
	GENERIC_9x1 a
	GENERIC_9x2 b
	GENERIC_9x3 c
	GENERIC_9x4 d
	GENERIC_9x5 e
	GENERIC_9x6 f
	GRINDSTONE o
	HOPPER p
	LECTERN q
	LOOM r
	MERCHANT s
	SHULKER_BOX t
	SMITHING u
	SMOKER v
	STONECUTTER x
	constructor y
	create (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	register (Ljava/lang/String;Lnet/minecraft/world/inventory/MenuType$MenuSupplier;)Lnet/minecraft/world/inventory/MenuType; a
net/minecraft/world/inventory/MenuType$MenuSupplier net/minecraft/world/inventory/Containers$Supplier
net/minecraft/world/inventory/MerchantContainer net/minecraft/world/inventory/InventoryMerchant
	activeOffer d
	futureXp f
	itemStacks c
	merchant b
	selectionHint e
	clearContent ()V a
	getActiveOffer ()Lnet/minecraft/world/item/trading/MerchantOffer; g
	getContainerSize ()I b
	getFutureXp ()I h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	isEmpty ()Z c
	isPaymentSlot (I)Z d
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setSelectionHint (I)V c
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateSellItem ()V f
net/minecraft/world/inventory/MerchantMenu net/minecraft/world/inventory/ContainerMerchant
	BUYSLOT_X t
	INV_SLOT_END o
	INV_SLOT_START n
	PAYMENT1_SLOT k
	PAYMENT2_SLOT l
	RESULT_SLOT m
	ROW_Y u
	SELLSLOT1_X r
	SELLSLOT2_X s
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	canRestock z
	merchantLevel x
	showProgressBar y
	tradeContainer w
	trader v
	canRestock ()Z o
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	getFutureTraderXp ()I m
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; p
	getTraderLevel ()I n
	getTraderXp ()I l
	moveFromInventoryToPaymentSlot (ILnet/minecraft/world/item/ItemStack;)V c
	playTradeSound ()V r
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setCanRestock (Z)V b
	setMerchantLevel (I)V f
	setOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	setSelectionHint (I)V d
	setShowProgressBar (Z)V a
	setXp (I)V e
	showProgressBar ()Z q
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tryMoveItems (I)V g
net/minecraft/world/inventory/MerchantResultSlot net/minecraft/world/inventory/SlotMerchantResult
	merchant h
	player b
	removeCount g
	slots a
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/PlayerEnderChestContainer net/minecraft/world/inventory/InventoryEnderChest
	activeChest b
	createTag ()Lnet/minecraft/nbt/ListTag; g
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
	isActiveChest (Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)Z b
	setActiveChest (Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
net/minecraft/world/inventory/RecipeBookMenu net/minecraft/world/inventory/ContainerRecipeBook
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getGridHeight ()I o
	getGridWidth ()I n
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	handlePlacement (ZLnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/server/level/ServerPlayer;)V a
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	shouldMoveToInventory (I)Z d
net/minecraft/world/inventory/ResultContainer net/minecraft/world/inventory/InventoryCraftResult
	itemStacks b
	recipeUsed c
	clearContent ()V a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; d
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ResultSlot net/minecraft/world/inventory/SlotResult
	craftSlots a
	player b
	removeCount g
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onSwapCraft (I)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/ShulkerBoxMenu net/minecraft/world/inventory/ContainerShulkerBox
	CONTAINER_SIZE k
	container l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ShulkerBoxSlot net/minecraft/world/inventory/SlotShulkerBox
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/SimpleContainerData net/minecraft/world/inventory/ContainerProperties
	ints a
	get (I)I a
	getCount ()I a
	set (II)V a
net/minecraft/world/inventory/SmithingMenu net/minecraft/world/inventory/ContainerSmithing
	level k
	recipes t
	selectedRecipe s
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	createResult ()V l
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	shouldQuickMoveToAdditionalSlot (Lnet/minecraft/world/item/ItemStack;)Z c
	shrinkStackInSlot (I)V d
net/minecraft/world/inventory/SmokerMenu net/minecraft/world/inventory/ContainerSmoker
net/minecraft/world/inventory/StackedContentsCompatible net/minecraft/world/inventory/AutoRecipeOutput
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
net/minecraft/world/inventory/StonecutterMenu net/minecraft/world/inventory/ContainerStonecutter
	INPUT_SLOT k
	INV_SLOT_END q
	INV_SLOT_START p
	RESULT_SLOT l
	USE_ROW_SLOT_END s
	USE_ROW_SLOT_START r
	access t
	container o
	input x
	inputSlot m
	lastSoundTime y
	level v
	recipes w
	resultContainer A
	resultSlot n
	selectedRecipeIndex u
	slotUpdateListener z
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getNumRecipes ()I n
	getRecipes ()Ljava/util/List; m
	getSelectedRecipeIndex ()I l
	getType ()Lnet/minecraft/world/inventory/MenuType; a
	hasInputItem ()Z o
	isValidRecipeIndex (I)Z d
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	registerUpdateListener (Ljava/lang/Runnable;)V a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupRecipeList (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;)V a
	setupResultSlot ()V p
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/item/AirItem net/minecraft/world/item/ItemAir
	block a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/ArmorItem net/minecraft/world/item/ItemArmor
	ARMOR_MODIFIER_UUID_PER_SLOT e
	DISPENSE_ITEM_BEHAVIOR a
	defaultModifiers h
	defense f
	knockbackResistance c
	material d
	slot b
	toughness g
	dispenseArmor (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Z a
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDefense ()I e
	getEnchantmentValue ()I c
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; g
	getMaterial ()Lnet/minecraft/world/item/ArmorMaterial; d
	getSlot ()Lnet/minecraft/world/entity/EquipmentSlot; b
	getToughness ()F f
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ArmorMaterials net/minecraft/world/item/EnumArmorMaterial
	$VALUES q
	CHAIN b
	DIAMOND e
	GOLD d
	HEALTH_PER_SLOT h
	IRON c
	LEATHER a
	NETHERITE g
	TURTLE f
	durabilityMultiplier j
	enchantmentValue l
	knockbackResistance o
	name i
	repairIngredient p
	slotProtections k
	sound m
	toughness n
	$values ()[Lnet/minecraft/world/item/ArmorMaterials; n
	getDefenseForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I b
	getDurabilityForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I a
	getEnchantmentValue ()I a
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; b
	getKnockbackResistance ()F f
	getName ()Ljava/lang/String; d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; c
	getToughness ()F e
net/minecraft/world/item/ArmorStandItem net/minecraft/world/item/ItemArmorStand
	randomizePose (Lnet/minecraft/world/entity/decoration/ArmorStand;Ljava/util/Random;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ArrowItem net/minecraft/world/item/ItemArrow
	createArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
net/minecraft/world/item/AxeItem net/minecraft/world/item/ItemAxe
	STRIPPABLES a
	getStripped (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BannerItem net/minecraft/world/item/ItemBanner
	PATTERN_PREFIX b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	appendHoverTextFromBannerBlockEntityTag (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)V a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
net/minecraft/world/item/BannerPatternItem net/minecraft/world/item/ItemBannerPattern
	bannerPattern a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getBannerPattern ()Lnet/minecraft/world/level/block/entity/BannerPattern; b
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
net/minecraft/world/item/BedItem net/minecraft/world/item/ItemBed
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/BlockItem net/minecraft/world/item/ItemBlock
	BLOCK_ENTITY_TAG b
	BLOCK_STATE_TAG a
	block c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	canFitInsideContainerItems ()Z Q_
	canPlace (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getBlock ()Lnet/minecraft/world/level/block/Block; e
	getBlockEntityData (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/CompoundTag; a
	getDescriptionId ()Ljava/lang/String; a
	getPlaceSound (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/sounds/SoundEvent; a
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
	mustSurvive ()Z d
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	place (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/InteractionResult; a
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	registerBlocks (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V a
	setBlockEntityData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/nbt/CompoundTag;)V a
	updateBlockStateFromTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateCustomBlockEntityTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateCustomBlockEntityTag (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z a
	updatePlacementContext (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/item/context/BlockPlaceContext; b
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/BlockState; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BoatItem net/minecraft/world/item/ItemBoat
	ENTITY_PREDICATE a
	type b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BoneMealItem net/minecraft/world/item/ItemBoneMeal
	GRASS_COUNT_MULTIPLIER c
	GRASS_SPREAD_HEIGHT b
	GRASS_SPREAD_WIDTH a
	addGrowthParticles (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	growCrop (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	growWaterPlant (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BookItem net/minecraft/world/item/ItemBook
	getEnchantmentValue ()I c
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z c_
net/minecraft/world/item/BottleItem net/minecraft/world/item/ItemGlassBottle
	turnBottleIntoItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BowItem net/minecraft/world/item/ItemBow
	DEFAULT_RANGE b
	MAX_DRAW_DURATION a
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getDefaultProjectileRange ()I d
	getPowerForTime (I)F a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BowlFoodItem net/minecraft/world/item/ItemSoup
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/BucketItem net/minecraft/world/item/ItemBucket
	content a
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
	getEmptySuccessItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	playEmptySound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ChorusFruitItem net/minecraft/world/item/ItemChorusFruit
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/CompassItem net/minecraft/world/item/ItemCompass
	LOGGER d
	TAG_LODESTONE_DIMENSION b
	TAG_LODESTONE_POS a
	TAG_LODESTONE_TRACKED c
	addLodestoneTags (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getLodestoneDimension (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	isLodestoneCompass (Lnet/minecraft/world/item/ItemStack;)Z d
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ComplexItem net/minecraft/world/item/ItemWorldMapBase
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	isComplex ()Z N_
net/minecraft/world/item/CrossbowItem net/minecraft/world/item/ItemCrossbow
	ARROW_POWER r
	DEFAULT_RANGE a
	FIREWORK_POWER s
	MAX_CHARGE_DURATION f
	MID_SOUND_PERCENT j
	START_SOUND_PERCENT i
	TAG_CHARGED b
	TAG_CHARGED_PROJECTILES e
	midLoadSoundPlayed h
	startSoundPlayed g
	addChargedProjectile (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	clearChargedProjectiles (Lnet/minecraft/world/item/ItemStack;)V q
	containsChargedProjectile (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/Item;)Z a
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
	getChargeDuration (Lnet/minecraft/world/item/ItemStack;)I k
	getChargedProjectiles (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; p
	getDefaultProjectileRange ()I d
	getPowerForTime (ILnet/minecraft/world/item/ItemStack;)F a
	getRandomShotPitch (ZLjava/util/Random;)F a
	getShootingPower (Lnet/minecraft/world/item/ItemStack;)F o
	getShotPitches (Ljava/util/Random;)[F a
	getStartSound (I)Lnet/minecraft/sounds/SoundEvent; a
	getSupportedHeldProjectiles ()Ljava/util/function/Predicate; e
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	isCharged (Lnet/minecraft/world/item/ItemStack;)Z d
	loadProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;ZZ)Z a
	onCrossbowShot (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	performShooting (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;FF)V a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	setCharged (Lnet/minecraft/world/item/ItemStack;Z)V a
	shootProjectile (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;FZFFF)V a
	tryLoadProjectiles (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOnRelease (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/item/DebugStickItem net/minecraft/world/item/ItemDebugStick
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	cycleState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	getNameHelper (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/String; a
	getRelative (Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object; a
	handleInteraction (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/item/ItemStack;)Z a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	message (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/DiggerItem net/minecraft/world/item/ItemTool
	attackDamageBaseline c
	blocks a
	defaultModifiers d
	speed b
	getAttackDamage ()F d
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/DoubleHighBlockItem net/minecraft/world/item/ItemBisected
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/DyeColor net/minecraft/world/item/EnumColor
	$VALUES y
	BLACK p
	BLUE l
	BROWN m
	BY_FIREWORK_COLOR r
	BY_ID q
	CYAN j
	GRAY h
	GREEN n
	LIGHT_BLUE d
	LIGHT_GRAY i
	LIME f
	MAGENTA c
	ORANGE b
	PINK g
	PURPLE k
	RED o
	WHITE a
	YELLOW e
	color u
	fireworkColor w
	id s
	name t
	textColor x
	textureDiffuseColors v
	$values ()[Lnet/minecraft/world/item/DyeColor; h
	byFireworkColor (I)Lnet/minecraft/world/item/DyeColor; b
	byId (I)Lnet/minecraft/world/item/DyeColor; a
	byName (Ljava/lang/String;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/DyeColor; a
	getFireworkColor ()I f
	getId ()I a
	getMaterialColor ()Lnet/minecraft/world/level/material/MaterialColor; e
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; c
	getTextColor ()I g
	getTextureDiffuseColors ()[F d
net/minecraft/world/item/DyeItem net/minecraft/world/item/ItemDye
	ITEM_BY_COLOR a
	dyeColor b
	byColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/DyeItem; a
	getDyeColor ()Lnet/minecraft/world/item/DyeColor; d
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/DyeableArmorItem net/minecraft/world/item/ItemArmorColorable
net/minecraft/world/item/DyeableHorseArmorItem net/minecraft/world/item/ItemHorseArmorDyeable
net/minecraft/world/item/DyeableLeatherItem net/minecraft/world/item/IDyeable
	DEFAULT_LEATHER_COLOR n_
	TAG_COLOR l_
	TAG_DISPLAY m_
	clearColor (Lnet/minecraft/world/item/ItemStack;)V e_
	dyeArmor (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)Lnet/minecraft/world/item/ItemStack; a
	getColor (Lnet/minecraft/world/item/ItemStack;)I d_
	hasCustomColor (Lnet/minecraft/world/item/ItemStack;)Z a
	setColor (Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/world/item/EggItem net/minecraft/world/item/ItemEgg
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ElytraItem net/minecraft/world/item/ItemElytra
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; g
	isFlyEnabled (Lnet/minecraft/world/item/ItemStack;)Z d
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/EmptyMapItem net/minecraft/world/item/ItemMapEmpty
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/EnchantedBookItem net/minecraft/world/item/ItemEnchantedBook
	TAG_STORED_ENCHANTMENTS a
	addEnchantment (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	createForEnchantment (Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)Lnet/minecraft/world/item/ItemStack; a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getEnchantments (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/ListTag; d
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z c_
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/EnchantedGoldenAppleItem net/minecraft/world/item/ItemGoldenAppleEnchanted
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/EndCrystalItem net/minecraft/world/item/ItemEndCrystal
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/EnderEyeItem net/minecraft/world/item/ItemEnderEye
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/EnderpearlItem net/minecraft/world/item/ItemEnderPearl
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ExperienceBottleItem net/minecraft/world/item/ItemExpBottle
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/FireChargeItem net/minecraft/world/item/ItemFireball
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FireworkRocketItem net/minecraft/world/item/ItemFireworks
	ROCKET_PLACEMENT_OFFSET j
	TAG_EXPLOSION b
	TAG_EXPLOSIONS c
	TAG_EXPLOSION_COLORS h
	TAG_EXPLOSION_FADECOLORS i
	TAG_EXPLOSION_FLICKER g
	TAG_EXPLOSION_TRAIL f
	TAG_EXPLOSION_TYPE e
	TAG_FIREWORKS a
	TAG_FLIGHT d
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; O_
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FireworkRocketItem$Shape net/minecraft/world/item/ItemFireworks$EffectType
	$VALUES i
	BURST e
	BY_ID f
	CREEPER d
	LARGE_BALL b
	SMALL_BALL a
	STAR c
	id g
	name h
	$values ()[Lnet/minecraft/world/item/FireworkRocketItem$Shape; c
	byId (I)Lnet/minecraft/world/item/FireworkRocketItem$Shape; a
	getId ()I a
	getName ()Ljava/lang/String; b
net/minecraft/world/item/FireworkStarItem net/minecraft/world/item/ItemFireworksCharge
	appendColors (Lnet/minecraft/network/chat/MutableComponent;[I)Lnet/minecraft/network/chat/Component; a
	appendHoverText (Lnet/minecraft/nbt/CompoundTag;Ljava/util/List;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getColorName (I)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/item/FishingRodItem net/minecraft/world/item/ItemFishingRod
	getEnchantmentValue ()I c
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/FlintAndSteelItem net/minecraft/world/item/ItemFlintAndSteel
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FoodOnAStickItem net/minecraft/world/item/ItemCarrotStick
	canInteractWith a
	consumeItemDamage b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/GameMasterBlockItem net/minecraft/world/item/ItemRestricted
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/item/HangingEntityItem net/minecraft/world/item/ItemHanging
	type a
	mayPlace (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HoeItem net/minecraft/world/item/ItemHoe
	TILLABLES a
	changeIntoState (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/function/Consumer; b
	changeIntoStateAndDropItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/ItemLike;)Ljava/util/function/Consumer; a
	onlyIfAirAbove (Lnet/minecraft/world/item/context/UseOnContext;)Z b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HoneyBottleItem net/minecraft/world/item/ItemHoneyBottle
	DRINK_DURATION a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; P_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; h
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/HorseArmorItem net/minecraft/world/item/ItemHorseArmor
	TEX_FOLDER a
	protection b
	texture c
	getProtection ()I j
	getTexture ()Lnet/minecraft/resources/ResourceLocation; i
net/minecraft/world/item/Item$Properties net/minecraft/world/item/Item$Info
	category d
	craftingRemainingItem c
	foodProperties f
	isFireResistant g
	maxDamage b
	maxStackSize a
	rarity e
	craftRemainder (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item$Properties; a
	defaultDurability (I)Lnet/minecraft/world/item/Item$Properties; b
	durability (I)Lnet/minecraft/world/item/Item$Properties; c
	fireResistant ()Lnet/minecraft/world/item/Item$Properties; a
	food (Lnet/minecraft/world/food/FoodProperties;)Lnet/minecraft/world/item/Item$Properties; a
	rarity (Lnet/minecraft/world/item/Rarity;)Lnet/minecraft/world/item/Item$Properties; a
	stacksTo (I)Lnet/minecraft/world/item/Item$Properties; a
	tab (Lnet/minecraft/world/item/CreativeModeTab;)Lnet/minecraft/world/item/Item$Properties; a
net/minecraft/world/item/ItemCooldowns net/minecraft/world/item/ItemCooldown
	cooldowns a
	tickCount b
	addCooldown (Lnet/minecraft/world/item/Item;I)V a
	getCooldownPercent (Lnet/minecraft/world/item/Item;F)F a
	isOnCooldown (Lnet/minecraft/world/item/Item;)Z a
	onCooldownEnded (Lnet/minecraft/world/item/Item;)V c
	onCooldownStarted (Lnet/minecraft/world/item/Item;I)V b
	removeCooldown (Lnet/minecraft/world/item/Item;)V b
	tick ()V a
net/minecraft/world/item/ItemCooldowns$CooldownInstance net/minecraft/world/item/ItemCooldown$Info
	endTime b
	startTime a
net/minecraft/world/item/ItemFrameItem net/minecraft/world/item/ItemItemFrame
	mayPlace (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/item/ItemNameBlockItem net/minecraft/world/item/ItemNamedBlock
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/ItemStack$TooltipPart net/minecraft/world/item/ItemStack$HideFlags
	$VALUES i
	ADDITIONAL f
	CAN_DESTROY d
	CAN_PLACE e
	DYE g
	ENCHANTMENTS a
	MODIFIERS b
	UNBREAKABLE c
	mask h
	$values ()[Lnet/minecraft/world/item/ItemStack$TooltipPart; b
	getMask ()I a
net/minecraft/world/item/ItemUtils net/minecraft/world/item/ItemLiquidUtil
	createFilledResult (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	createFilledResult (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/item/ItemStack; a
	onContainerDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;Ljava/util/stream/Stream;)V a
	startUsingInstantly (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/KnowledgeBookItem net/minecraft/world/item/ItemKnowledgeBook
	LOGGER b
	RECIPE_TAG a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/LeadItem net/minecraft/world/item/ItemLeash
	bindPlayerMobs (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/InteractionResult; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/LingeringPotionItem net/minecraft/world/item/ItemLingeringPotion
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/MapItem net/minecraft/world/item/ItemWorldMap
	DEFAULT_MAP_COLOR c
	IMAGE_HEIGHT b
	IMAGE_WIDTH a
	TAG_MAP d
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	create (Lnet/minecraft/world/level/Level;IIBZZ)Lnet/minecraft/world/item/ItemStack; a
	createAndStoreSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;IIIZZLnet/minecraft/resources/ResourceKey;)V a
	createNewSavedData (Lnet/minecraft/world/level/Level;IIIZZLnet/minecraft/resources/ResourceKey;)I a
	getColor (Lnet/minecraft/world/item/ItemStack;)I k
	getCorrectStateForFluidBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getMapId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/Integer; d
	getSavedData (Ljava/lang/Integer;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isBiomeWatery ([ZIII)Z a
	lockMap (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)V a
	makeKey (I)Ljava/lang/String; a
	onCraftedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)V b
	renderBiomePreviewMap (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;)V a
	scaleMap (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;I)V a
	storeMapData (Lnet/minecraft/world/item/ItemStack;I)V a
	update (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/MilkBucketItem net/minecraft/world/item/ItemMilkBucket
	DRINK_DURATION a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/MinecartItem net/minecraft/world/item/ItemMinecart
	DISPENSE_ITEM_BEHAVIOR a
	type b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/NameTagItem net/minecraft/world/item/ItemNameTag
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/PickaxeItem net/minecraft/world/item/ItemPickaxe
net/minecraft/world/item/PlayerHeadItem net/minecraft/world/item/ItemSkullPlayer
	TAG_SKULL_OWNER b
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	verifyTagAfterLoad (Lnet/minecraft/nbt/CompoundTag;)V b
net/minecraft/world/item/PotionItem net/minecraft/world/item/ItemPotion
	DRINK_DURATION a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; O_
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ProjectileWeaponItem net/minecraft/world/item/ItemProjectileWeapon
	ARROW_ONLY c
	ARROW_OR_FIREWORK d
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getDefaultProjectileRange ()I d
	getEnchantmentValue ()I c
	getHeldProjectile (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Lnet/minecraft/world/item/ItemStack; a
	getSupportedHeldProjectiles ()Ljava/util/function/Predicate; e
net/minecraft/world/item/Rarity net/minecraft/world/item/EnumItemRarity
	$VALUES f
	COMMON a
	EPIC d
	RARE c
	UNCOMMON b
	color e
	$values ()[Lnet/minecraft/world/item/Rarity; a
net/minecraft/world/item/RecordItem net/minecraft/world/item/ItemRecord
	BY_NAME a
	analogOutput b
	sound c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getAnalogOutput ()I i
	getBySound (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/item/RecordItem; a
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; j
	getSound ()Lnet/minecraft/sounds/SoundEvent; x
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SaddleItem net/minecraft/world/item/ItemSaddle
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ScaffoldingBlockItem net/minecraft/world/item/ItemScaffolding
	mustSurvive ()Z d
	updatePlacementContext (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/item/context/BlockPlaceContext; b
net/minecraft/world/item/ServerItemCooldowns net/minecraft/world/item/ItemCooldownPlayer
	player a
	onCooldownEnded (Lnet/minecraft/world/item/Item;)V c
	onCooldownStarted (Lnet/minecraft/world/item/Item;I)V b
net/minecraft/world/item/ShearsItem net/minecraft/world/item/ItemShears
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ShieldItem net/minecraft/world/item/ItemShield
	EFFECTIVE_BLOCK_DELAY a
	MINIMUM_DURABILITY_DAMAGE b
	TAG_BASE_COLOR c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getColor (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/DyeColor; d
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ShovelItem net/minecraft/world/item/ItemSpade
	FLATTENABLES a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SignItem net/minecraft/world/item/ItemSign
	updateCustomBlockEntityTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/SimpleFoiledItem net/minecraft/world/item/ItemNetherStar
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/SnowballItem net/minecraft/world/item/ItemSnowball
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/SpawnEggItem net/minecraft/world/item/ItemMonsterEgg
	BY_ID a
	backgroundColor b
	defaultType d
	highlightColor c
	byId (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/item/SpawnEggItem; a
	eggs ()Ljava/lang/Iterable; i
	getColor (I)I a
	getType (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/EntityType; a
	spawnOffspringFromSpawnEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	spawnsEntity (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/entity/EntityType;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SpectralArrowItem net/minecraft/world/item/ItemSpectralArrow
	createArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
net/minecraft/world/item/SplashPotionItem net/minecraft/world/item/ItemSplashPotion
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/StandingAndWallBlockItem net/minecraft/world/item/ItemBlockWallable
	wallBlock c
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
	registerBlocks (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V a
net/minecraft/world/item/SuspiciousStewItem net/minecraft/world/item/ItemSuspiciousStew
	EFFECTS_TAG a
	EFFECT_DURATION_TAG c
	EFFECT_ID_TAG b
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	saveMobEffect (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/effect/MobEffect;I)V a
net/minecraft/world/item/SwordItem net/minecraft/world/item/ItemSword
	attackDamage a
	defaultModifiers b
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	getDamage ()F i
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/ThrowablePotionItem net/minecraft/world/item/ItemPotionThrowable
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Tier net/minecraft/world/item/ToolMaterial
	getAttackDamageBonus ()F c
	getEnchantmentValue ()I e
	getLevel ()I d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; f
	getSpeed ()F b
	getUses ()I a
net/minecraft/world/item/TieredItem net/minecraft/world/item/ItemToolMaterial
	tier a
	getEnchantmentValue ()I c
	getTier ()Lnet/minecraft/world/item/Tier; j
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/item/Tiers net/minecraft/world/item/EnumToolMaterial
	$VALUES m
	DIAMOND d
	GOLD e
	IRON c
	NETHERITE f
	STONE b
	WOOD a
	damage j
	enchantmentValue k
	level g
	repairIngredient l
	speed i
	uses h
	$values ()[Lnet/minecraft/world/item/Tiers; m
	getAttackDamageBonus ()F c
	getEnchantmentValue ()I e
	getLevel ()I d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; f
	getSpeed ()F b
	getUses ()I a
net/minecraft/world/item/TippedArrowItem net/minecraft/world/item/ItemTippedArrow
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; O_
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
net/minecraft/world/item/TooltipFlag$Default bvr$a
	$VALUES d
	ADVANCED b
	NORMAL a
	advanced c
	$values ()[Lnet/minecraft/world/item/TooltipFlag$Default; b
	isAdvanced ()Z a
net/minecraft/world/item/TridentItem net/minecraft/world/item/ItemTrident
	BASE_DAMAGE b
	SHOOT_POWER c
	THROW_THRESHOLD_TIME a
	defaultModifiers d
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getEnchantmentValue ()I c
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/UseAnim net/minecraft/world/item/EnumAnimation
	$VALUES i
	BLOCK d
	BOW e
	CROSSBOW g
	DRINK c
	EAT b
	NONE a
	SPEAR f
	SPYGLASS h
	$values ()[Lnet/minecraft/world/item/UseAnim; a
net/minecraft/world/item/Vanishable net/minecraft/world/item/ItemVanishable
net/minecraft/world/item/WaterLilyBlockItem net/minecraft/world/item/ItemWaterLily
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/Wearable net/minecraft/world/item/ItemWearable
net/minecraft/world/item/WritableBookItem net/minecraft/world/item/ItemBookAndQuill
	makeSureTagIsValid (Lnet/minecraft/nbt/CompoundTag;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/WrittenBookItem net/minecraft/world/item/ItemWrittenBook
	MAX_GENERATION f
	MAX_PAGES e
	PAGE_EDIT_LENGTH c
	PAGE_LENGTH d
	TAG_AUTHOR i
	TAG_FILTERED_PAGES r
	TAG_FILTERED_TITLE h
	TAG_GENERATION s
	TAG_PAGES j
	TAG_RESOLVED t
	TAG_TITLE g
	TITLE_LENGTH a
	TITLE_MAX_LENGTH b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getGeneration (Lnet/minecraft/world/item/ItemStack;)I d
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	getPageCount (Lnet/minecraft/world/item/ItemStack;)I k
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	makeSureTagIsValid (Lnet/minecraft/nbt/CompoundTag;)Z a
	resolveBookComponents (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/player/Player;)Z a
	resolvePage (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/player/Player;Ljava/lang/String;)Ljava/lang/String; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/alchemy/Potion net/minecraft/world/item/alchemy/PotionRegistry
	effects b
	name a
	byName (Ljava/lang/String;)Lnet/minecraft/world/item/alchemy/Potion; a
	getEffects ()Ljava/util/List; a
	getName (Ljava/lang/String;)Ljava/lang/String; b
	hasInstantEffects ()Z b
net/minecraft/world/item/alchemy/PotionBrewing net/minecraft/world/item/alchemy/PotionBrewer
	ALLOWED_CONTAINER e
	ALLOWED_CONTAINERS d
	BREWING_TIME_SECONDS a
	CONTAINER_MIXES c
	POTION_MIXES b
	addContainer (Lnet/minecraft/world/item/Item;)V a
	addContainerRecipe (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)V a
	addMix (Lnet/minecraft/world/item/alchemy/Potion;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/alchemy/Potion;)V a
	bootStrap ()V a
	hasContainerMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	hasMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	hasPotionMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isBrewablePotion (Lnet/minecraft/world/item/alchemy/Potion;)Z a
	isContainerIngredient (Lnet/minecraft/world/item/ItemStack;)Z b
	isIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	isPotionIngredient (Lnet/minecraft/world/item/ItemStack;)Z c
	mix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; d
net/minecraft/world/item/alchemy/PotionBrewing$Mix net/minecraft/world/item/alchemy/PotionBrewer$PredicatedCombination
	from a
	ingredient b
	to c
net/minecraft/world/item/alchemy/PotionUtils net/minecraft/world/item/alchemy/PotionUtil
	EMPTY_COLOR d
	NO_EFFECT e
	TAG_CUSTOM_POTION_COLOR b
	TAG_CUSTOM_POTION_EFFECTS a
	TAG_POTION c
	addPotionTooltip (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;F)V a
	getAllEffects (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; a
	getAllEffects (Lnet/minecraft/world/item/alchemy/Potion;Ljava/util/Collection;)Ljava/util/List; a
	getColor (Ljava/util/Collection;)I a
	getColor (Lnet/minecraft/world/item/ItemStack;)I c
	getColor (Lnet/minecraft/world/item/alchemy/Potion;)I a
	getCustomEffects (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; b
	getCustomEffects (Lnet/minecraft/nbt/CompoundTag;Ljava/util/List;)V a
	getCustomEffects (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
	getMobEffects (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getPotion (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/alchemy/Potion; c
	getPotion (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/alchemy/Potion; d
	setCustomEffects (Lnet/minecraft/world/item/ItemStack;Ljava/util/Collection;)Lnet/minecraft/world/item/ItemStack; a
	setPotion (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/context/BlockPlaceContext net/minecraft/world/item/context/BlockActionContext
	relativePos b
	replaceClicked a
	at (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/context/BlockPlaceContext; a
	canPlace ()Z b
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getNearestLookingDirection ()Lnet/minecraft/core/Direction; d
	getNearestLookingDirections ()[Lnet/minecraft/core/Direction; f
	getNearestLookingVerticalDirection ()Lnet/minecraft/core/Direction; e
	replacingClickedOnBlock ()Z c
net/minecraft/world/item/context/DirectionalPlaceContext net/minecraft/world/item/context/BlockActionContextDirectional
	direction b
	canPlace ()Z b
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getHorizontalDirection ()Lnet/minecraft/core/Direction; g
	getNearestLookingDirection ()Lnet/minecraft/core/Direction; d
	getNearestLookingDirections ()[Lnet/minecraft/core/Direction; f
	getRotation ()F i
	isSecondaryUseActive ()Z h
	replacingClickedOnBlock ()Z c
net/minecraft/world/item/context/UseOnContext net/minecraft/world/item/context/ItemActionContext
	hand b
	hitResult c
	itemStack e
	level d
	player a
	getClickLocation ()Lnet/minecraft/world/phys/Vec3; l
	getClickedFace ()Lnet/minecraft/core/Direction; k
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getHand ()Lnet/minecraft/world/InteractionHand; p
	getHitResult ()Lnet/minecraft/world/phys/BlockHitResult; j
	getHorizontalDirection ()Lnet/minecraft/core/Direction; g
	getItemInHand ()Lnet/minecraft/world/item/ItemStack; n
	getLevel ()Lnet/minecraft/world/level/Level; q
	getPlayer ()Lnet/minecraft/world/entity/player/Player; o
	getRotation ()F i
	isInside ()Z m
	isSecondaryUseActive ()Z h
net/minecraft/world/item/crafting/AbstractCookingRecipe net/minecraft/world/item/crafting/RecipeCooking
	cookingTime g
	experience f
	group c
	id b
	ingredient d
	result e
	type a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getCookingTime ()I e
	getExperience ()F b
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ArmorDyeRecipe net/minecraft/world/item/crafting/RecipeArmorDye
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/BannerDuplicateRecipe net/minecraft/world/item/crafting/RecipeBannerDuplicate
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getRemainingItems (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/core/NonNullList; b
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/BlastingRecipe net/minecraft/world/item/crafting/RecipeBlasting
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/BookCloningRecipe net/minecraft/world/item/crafting/RecipeBookClone
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getRemainingItems (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/core/NonNullList; b
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/CampfireCookingRecipe net/minecraft/world/item/crafting/RecipeCampfire
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/CraftingRecipe net/minecraft/world/item/crafting/RecipeCrafting
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
net/minecraft/world/item/crafting/CustomRecipe net/minecraft/world/item/crafting/IRecipeComplex
	id a
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	isSpecial ()Z R_
net/minecraft/world/item/crafting/FireworkRocketRecipe net/minecraft/world/item/crafting/RecipeFireworks
	GUNPOWDER_INGREDIENT b
	PAPER_INGREDIENT a
	STAR_INGREDIENT c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkStarFadeRecipe net/minecraft/world/item/crafting/RecipeFireworksFade
	STAR_INGREDIENT a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkStarRecipe net/minecraft/world/item/crafting/RecipeFireworksStar
	FLICKER_INGREDIENT c
	GUNPOWDER_INGREDIENT e
	SHAPE_BY_ITEM d
	SHAPE_INGREDIENT a
	TRAIL_INGREDIENT b
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/Ingredient net/minecraft/world/item/crafting/RecipeItemStack
	EMPTY a
	itemStacks c
	stackingIds d
	values b
	dissolve ()V f
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/world/item/crafting/Ingredient; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Ingredient; b
	fromValues (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; b
	getItems ()[Lnet/minecraft/world/item/ItemStack; a
	getStackingIds ()Lit/unimi/dsi/fastutil/ints/IntList; b
	isEmpty ()Z d
	of ()Lnet/minecraft/world/item/crafting/Ingredient; e
	of (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of ([Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/item/crafting/Ingredient; a
	test (Lnet/minecraft/world/item/ItemStack;)Z a
	toJson ()Lcom/google/gson/JsonElement; c
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Ingredient$Value; a
net/minecraft/world/item/crafting/Ingredient$ItemValue net/minecraft/world/item/crafting/RecipeItemStack$StackProvider
	item a
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/Ingredient$TagValue bwt$b
	tag a
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/Ingredient$Value net/minecraft/world/item/crafting/RecipeItemStack$Provider
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/MapCloningRecipe net/minecraft/world/item/crafting/RecipeMapClone
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/MapExtendingRecipe net/minecraft/world/item/crafting/RecipeMapExtend
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	isSpecial ()Z R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/Recipe net/minecraft/world/item/crafting/IRecipe
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	isIncomplete ()Z i
	isSpecial ()Z R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/RecipeManager net/minecraft/world/item/crafting/CraftingManager
	GSON a
	LOGGER b
	byName d
	hasErrors e
	recipes c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	byKey (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	byType (Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/Map; b
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	getAllRecipesFor (Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/List; a
	getRecipeFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getRecipeIds ()Ljava/util/stream/Stream; d
	getRecipes ()Ljava/util/Collection; b
	getRecipesFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/List; b
	getRemainingItemsFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Lnet/minecraft/core/NonNullList; c
	hadErrorsLoading ()Z a
	replaceRecipes (Ljava/lang/Iterable;)V a
net/minecraft/world/item/crafting/RecipeType net/minecraft/world/item/crafting/Recipes
	BLASTING c
	CAMPFIRE_COOKING e
	CRAFTING a
	SMELTING b
	SMITHING g
	SMOKING d
	STONECUTTING f
	register (Ljava/lang/String;)Lnet/minecraft/world/item/crafting/RecipeType; a
	tryMatch (Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/Container;)Ljava/util/Optional; a
net/minecraft/world/item/crafting/RepairItemRecipe net/minecraft/world/item/crafting/RecipeRepair
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShapedRecipe net/minecraft/world/item/crafting/ShapedRecipes
	group f
	height b
	id e
	recipeItems c
	result d
	width a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	dissolvePattern ([Ljava/lang/String;Ljava/util/Map;II)Lnet/minecraft/core/NonNullList; a
	firstNonSpace (Ljava/lang/String;)I a
	getGroup ()Ljava/lang/String; d
	getHeight ()I k
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	getWidth ()I j
	isIncomplete ()Z i
	itemFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/Item; b
	itemStackFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; a
	keyFromJson (Lcom/google/gson/JsonObject;)Ljava/util/Map; c
	lastNonSpace (Ljava/lang/String;)I b
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;IIZ)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
	patternFromJson (Lcom/google/gson/JsonArray;)[Ljava/lang/String; a
	shrink ([Ljava/lang/String;)[Ljava/lang/String; a
net/minecraft/world/item/crafting/ShapedRecipe$Serializer bxb$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/ShapedRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapedRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/ShapedRecipe;)V a
net/minecraft/world/item/crafting/ShapelessRecipe net/minecraft/world/item/crafting/ShapelessRecipes
	group b
	id a
	ingredients d
	result c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShapelessRecipe$Serializer bxc$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/ShapelessRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapelessRecipe; b
	itemsFromJson (Lcom/google/gson/JsonArray;)Lnet/minecraft/core/NonNullList; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/ShapelessRecipe;)V a
net/minecraft/world/item/crafting/ShieldDecorationRecipe net/minecraft/world/item/crafting/RecipiesShield
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShulkerBoxColoring net/minecraft/world/item/crafting/RecipeShulkerBox
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SimpleCookingSerializer net/minecraft/world/item/crafting/RecipeSerializerCooking
	defaultCookingTime v
	factory w
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/AbstractCookingRecipe; b
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/AbstractCookingRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/AbstractCookingRecipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker bxf$a
net/minecraft/world/item/crafting/SimpleRecipeSerializer net/minecraft/world/item/crafting/RecipeSerializerComplex
	constructor v
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/SingleItemRecipe net/minecraft/world/item/crafting/RecipeSingleItem
	group d
	id c
	ingredient a
	result b
	serializer f
	type e
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
net/minecraft/world/item/crafting/SingleItemRecipe$Serializer bxh$a
	factory v
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/SingleItemRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/SingleItemRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/SingleItemRecipe;)V a
net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker bxh$a$a
net/minecraft/world/item/crafting/SmeltingRecipe net/minecraft/world/item/crafting/FurnaceRecipe
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/SmokingRecipe net/minecraft/world/item/crafting/RecipeSmoking
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/StonecutterRecipe net/minecraft/world/item/crafting/RecipeStonecutting
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SuspiciousStewRecipe net/minecraft/world/item/crafting/RecipeSuspiciousStew
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/TippedArrowRecipe net/minecraft/world/item/crafting/RecipeTippedArrow
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/UpgradeRecipe net/minecraft/world/item/crafting/RecipeSmithing
	addition b
	base a
	id d
	result c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; S_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	isAdditionIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	isIncomplete ()Z i
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/UpgradeRecipe$Serializer bxn$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/UpgradeRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/UpgradeRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/UpgradeRecipe;)V a
net/minecraft/world/item/enchantment/ArrowDamageEnchantment net/minecraft/world/item/enchantment/EnchantmentArrowDamage
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowFireEnchantment net/minecraft/world/item/enchantment/EnchantmentFlameArrows
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment net/minecraft/world/item/enchantment/EnchantmentInfiniteArrows
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment net/minecraft/world/item/enchantment/EnchantmentArrowKnockback
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowPiercingEnchantment net/minecraft/world/item/enchantment/EnchantmentPiercing
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/BindingCurseEnchantment net/minecraft/world/item/enchantment/EnchantmentBinding
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isCurse ()Z c
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/DamageEnchantment net/minecraft/world/item/enchantment/EnchantmentWeaponDamage
	ALL a
	ARTHROPODS c
	LEVEL_COST i
	LEVEL_COST_SPAN j
	MIN_COST h
	NAMES g
	UNDEAD b
	type d
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V a
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/DigDurabilityEnchantment net/minecraft/world/item/enchantment/EnchantmentDurability
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	shouldIgnoreDurabilityDrop (Lnet/minecraft/world/item/ItemStack;ILjava/util/Random;)Z a
net/minecraft/world/item/enchantment/DiggingEnchantment net/minecraft/world/item/enchantment/EnchantmentDigging
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/EnchantmentCategory net/minecraft/world/item/enchantment/EnchantmentSlotType
	$VALUES o
	ARMOR a
	ARMOR_CHEST d
	ARMOR_FEET b
	ARMOR_HEAD e
	ARMOR_LEGS c
	BOW k
	BREAKABLE j
	CROSSBOW m
	DIGGER g
	FISHING_ROD h
	TRIDENT i
	VANISHABLE n
	WEAPON f
	WEARABLE l
	$values ()[Lnet/minecraft/world/item/enchantment/EnchantmentCategory; a
	canEnchant (Lnet/minecraft/world/item/Item;)Z a
net/minecraft/world/item/enchantment/EnchantmentHelper net/minecraft/world/item/enchantment/EnchantmentManager
	TAG_ENCH_ID a
	TAG_ENCH_LEVEL b
	deserializeEnchantments (Lnet/minecraft/nbt/ListTag;)Ljava/util/Map; a
	doPostDamageEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V b
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V a
	enchantItem (Ljava/util/Random;Lnet/minecraft/world/item/ItemStack;IZ)Lnet/minecraft/world/item/ItemStack; a
	filterCompatibleEnchantments (Ljava/util/List;Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)V a
	getAvailableEnchantmentResults (ILnet/minecraft/world/item/ItemStack;Z)Ljava/util/List; a
	getBlockEfficiency (Lnet/minecraft/world/entity/LivingEntity;)I f
	getDamageBonus (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/MobType;)F a
	getDamageProtection (Ljava/lang/Iterable;Lnet/minecraft/world/damagesource/DamageSource;)I a
	getDepthStrider (Lnet/minecraft/world/entity/LivingEntity;)I e
	getEnchantmentCost (Ljava/util/Random;IILnet/minecraft/world/item/ItemStack;)I a
	getEnchantmentId (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/resources/ResourceLocation; b
	getEnchantmentId (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/resources/ResourceLocation; a
	getEnchantmentLevel (Lnet/minecraft/nbt/CompoundTag;)I a
	getEnchantmentLevel (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;)I a
	getEnchantments (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Map; a
	getFireAspect (Lnet/minecraft/world/entity/LivingEntity;)I c
	getFishingLuckBonus (Lnet/minecraft/world/item/ItemStack;)I b
	getFishingSpeedBonus (Lnet/minecraft/world/item/ItemStack;)I c
	getItemEnchantmentLevel (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/item/ItemStack;)I a
	getKnockbackBonus (Lnet/minecraft/world/entity/LivingEntity;)I b
	getLoyalty (Lnet/minecraft/world/item/ItemStack;)I f
	getMobLooting (Lnet/minecraft/world/entity/LivingEntity;)I g
	getRandomItemWith (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map$Entry; b
	getRandomItemWith (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Ljava/util/Map$Entry; a
	getRespiration (Lnet/minecraft/world/entity/LivingEntity;)I d
	getRiptide (Lnet/minecraft/world/item/ItemStack;)I g
	getSweepingDamageRatio (Lnet/minecraft/world/entity/LivingEntity;)F a
	hasAquaAffinity (Lnet/minecraft/world/entity/LivingEntity;)Z h
	hasBindingCurse (Lnet/minecraft/world/item/ItemStack;)Z d
	hasChanneling (Lnet/minecraft/world/item/ItemStack;)Z h
	hasFrostWalker (Lnet/minecraft/world/entity/LivingEntity;)Z i
	hasSoulSpeed (Lnet/minecraft/world/entity/LivingEntity;)Z j
	hasVanishingCurse (Lnet/minecraft/world/item/ItemStack;)Z e
	isEnchantmentCompatible (Ljava/util/Collection;Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	runIterationOnInventory (Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;Ljava/lang/Iterable;)V a
	runIterationOnItem (Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;Lnet/minecraft/world/item/ItemStack;)V a
	selectEnchantment (Ljava/util/Random;Lnet/minecraft/world/item/ItemStack;IZ)Ljava/util/List; b
	setEnchantmentLevel (Lnet/minecraft/nbt/CompoundTag;I)V a
	setEnchantments (Ljava/util/Map;Lnet/minecraft/world/item/ItemStack;)V a
	storeEnchantment (Lnet/minecraft/resources/ResourceLocation;I)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor bya$a
net/minecraft/world/item/enchantment/EnchantmentInstance net/minecraft/world/item/enchantment/WeightedRandomEnchant
	enchantment a
	level b
net/minecraft/world/item/enchantment/FireAspectEnchantment net/minecraft/world/item/enchantment/EnchantmentFire
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/FishingSpeedEnchantment net/minecraft/world/item/enchantment/EnchantmentLure
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/FrostWalkerEnchantment net/minecraft/world/item/enchantment/EnchantmentFrostWalker
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isTreasureOnly ()Z b
	onEntityMoved (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
net/minecraft/world/item/enchantment/KnockbackEnchantment net/minecraft/world/item/enchantment/EnchantmentKnockback
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/LootBonusEnchantment net/minecraft/world/item/enchantment/EnchantmentLootBonus
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/MendingEnchantment net/minecraft/world/item/enchantment/EnchantmentMending
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/MultiShotEnchantment net/minecraft/world/item/enchantment/EnchantmentMultishot
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/OxygenEnchantment net/minecraft/world/item/enchantment/EnchantmentOxygen
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ProtectionEnchantment net/minecraft/world/item/enchantment/EnchantmentProtection
	type a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I a
	getExplosionKnockbackAfterDampener (Lnet/minecraft/world/entity/LivingEntity;D)D a
	getFireAfterDampener (Lnet/minecraft/world/entity/LivingEntity;I)I a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ProtectionEnchantment$Type net/minecraft/world/item/enchantment/EnchantmentProtection$DamageType
	$VALUES h
	ALL a
	EXPLOSION d
	FALL c
	FIRE b
	PROJECTILE e
	levelCost g
	minCost f
	$values ()[Lnet/minecraft/world/item/enchantment/ProtectionEnchantment$Type; c
	getLevelCost ()I b
	getMinCost ()I a
net/minecraft/world/item/enchantment/QuickChargeEnchantment net/minecraft/world/item/enchantment/EnchantmentQuickCharge
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/SoulSpeedEnchantment net/minecraft/world/item/enchantment/EnchantmentSoulSpeed
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/SweepingEdgeEnchantment net/minecraft/world/item/enchantment/EnchantmentSweeping
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	getSweepingDamageRatio (I)F e
net/minecraft/world/item/enchantment/ThornsEnchantment net/minecraft/world/item/enchantment/EnchantmentThorns
	CHANCE_PER_LEVEL a
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V b
	getDamage (ILjava/util/Random;)I b
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	shouldHit (ILjava/util/Random;)Z a
net/minecraft/world/item/enchantment/TridentChannelingEnchantment net/minecraft/world/item/enchantment/EnchantmentTridentChanneling
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentImpalerEnchantment net/minecraft/world/item/enchantment/EnchantmentTridentImpaling
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment net/minecraft/world/item/enchantment/EnchantmentTridentLoyalty
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentRiptideEnchantment net/minecraft/world/item/enchantment/EnchantmentTridentRiptide
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/UntouchingEnchantment net/minecraft/world/item/enchantment/EnchantmentSilkTouch
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/VanishingCurseEnchantment net/minecraft/world/item/enchantment/EnchantmentVanishing
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isCurse ()Z c
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/WaterWalkerEnchantment net/minecraft/world/item/enchantment/EnchantmentDepthStrider
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/WaterWorkerEnchantment net/minecraft/world/item/enchantment/EnchantmentWaterWorker
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/trading/Merchant net/minecraft/world/item/trading/IMerchant
	canRestock ()Z fM
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; fC
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; fA
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; fy
	getVillagerXp ()I t
	isClientSide ()Z fH
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V m
	openTradingScreen (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;I)V a
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	showProgressBar ()Z fB
net/minecraft/world/item/trading/MerchantOffer net/minecraft/world/item/trading/MerchantRecipe
	baseCostA a
	costB b
	demand h
	maxUses e
	priceMultiplier i
	result c
	rewardExp f
	specialPriceDiff g
	uses d
	xp j
	addToSpecialPriceDiff (I)V a
	assemble ()Lnet/minecraft/world/item/ItemStack; f
	createTag ()Lnet/minecraft/nbt/CompoundTag; t
	getBaseCostA ()Lnet/minecraft/world/item/ItemStack; a
	getCostA ()Lnet/minecraft/world/item/ItemStack; b
	getCostB ()Lnet/minecraft/world/item/ItemStack; c
	getDemand ()I k
	getMaxUses ()I i
	getPriceMultiplier ()F n
	getResult ()Lnet/minecraft/world/item/ItemStack; d
	getSpecialPriceDiff ()I m
	getUses ()I g
	getXp ()I o
	increaseUses ()V j
	isOutOfStock ()Z p
	isRequiredItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	needsRestock ()Z r
	resetSpecialPriceDiff ()V l
	resetUses ()V h
	satisfiedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	setSpecialPriceDiff (I)V b
	setToOutOfStock ()V q
	shouldRewardExp ()Z s
	take (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	updateDemand ()V e
net/minecraft/world/item/trading/MerchantOffers net/minecraft/world/item/trading/MerchantRecipeList
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/trading/MerchantOffers; b
	createTag ()Lnet/minecraft/nbt/CompoundTag; a
	getRecipeFor (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/trading/MerchantOffer; a
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/BaseCommandBlock net/minecraft/world/level/CommandBlockListenerAbstract
	DEFAULT_NAME c
	TIME_FORMAT b
	command i
	lastExecution d
	lastOutput h
	name j
	successCount f
	trackOutput g
	updateLastExecution e
	acceptsFailure ()Z j_
	acceptsSuccess ()Z i_
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; i
	getCommand ()Ljava/lang/String; l
	getLastOutput ()Lnet/minecraft/network/chat/Component; k
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getName ()Lnet/minecraft/network/chat/Component; m
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	getSuccessCount ()I j
	isTrackOutput ()Z n
	load (Lnet/minecraft/nbt/CompoundTag;)V b
	onUpdated ()V f
	performCommand (Lnet/minecraft/world/level/Level;)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	setCommand (Ljava/lang/String;)V a
	setLastOutput (Lnet/minecraft/network/chat/Component;)V b
	setName (Lnet/minecraft/network/chat/Component;)V a
	setSuccessCount (I)V a
	setTrackOutput (Z)V a
	shouldInformAdmins ()Z F_
	usedBy (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/BaseSpawner net/minecraft/world/level/MobSpawnerAbstract
	EVENT_SPAWN b
	LOGGER a
	displayEntity k
	maxNearbyEntities l
	maxSpawnDelay i
	minSpawnDelay h
	nextSpawnData e
	oSpin g
	random o
	requiredPlayerRange m
	spawnCount j
	spawnDelay c
	spawnPotentials d
	spawnRange n
	spin f
	broadcastEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	delay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	getOrCreateDisplayEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getSpin ()D a
	getoSpin ()D b
	isNearPlayer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z b
	load (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	onEventTriggered (Lnet/minecraft/world/level/Level;I)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	serverTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	setEntityId (Lnet/minecraft/world/entity/EntityType;)V a
	setNextSpawnData (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/SpawnData;)V a
net/minecraft/world/level/BlockAndTintGetter net/minecraft/world/level/IBlockLightAccess
	canSeeSky (Lnet/minecraft/core/BlockPos;)Z f
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getBrightness (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/BlockPos;)I a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l_
	getRawBrightness (Lnet/minecraft/core/BlockPos;I)I b
	getShade (Lnet/minecraft/core/Direction;Z)F a
net/minecraft/world/level/BlockCollisions net/minecraft/world/level/VoxelShapeSpliterator
	box a
	cachedBlockGetter h
	cachedBlockGetterPos i
	collisionGetter f
	context b
	cursor c
	entityShape e
	onlySuffocatingBlocks g
	pos d
	computeNext ()Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getChunk (II)Lnet/minecraft/world/level/BlockGetter; a
net/minecraft/world/level/BlockEventData net/minecraft/world/level/BlockActionData
	block b
	paramA c
	paramB d
	pos a
	block ()Lnet/minecraft/world/level/block/Block; b
	paramA ()I c
	paramB ()I d
	pos ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/BlockGetter net/minecraft/world/level/IBlockAccess
	clip (Lnet/minecraft/world/level/ClipContext;)Lnet/minecraft/world/phys/BlockHitResult; a
	clipWithInteractionOverride (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/BlockHitResult; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getBlockFloorHeight (Lnet/minecraft/core/BlockPos;)D h
	getBlockFloorHeight (Lnet/minecraft/world/phys/shapes/VoxelShape;Ljava/util/function/Supplier;)D a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockStates (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getLightEmission (Lnet/minecraft/core/BlockPos;)I g
	getMaxLightLevel ()I O
	isBlockInLine (Lnet/minecraft/world/level/ClipBlockStateContext;)Lnet/minecraft/world/phys/BlockHitResult; a
	traverseBlocks (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object; a
net/minecraft/world/level/ChunkPos net/minecraft/world/level/ChunkCoordIntPair
	COORD_BITS f
	COORD_MASK g
	HASH_A j
	HASH_C k
	HASH_Z_XOR l
	INVALID_CHUNK_POS a
	REGION_BITS h
	REGION_MASK i
	SAFETY_MARGIN e
	ZERO b
	x c
	z d
	asLong (II)J a
	asLong (Lnet/minecraft/core/BlockPos;)J a
	getBlockAt (III)Lnet/minecraft/core/BlockPos; a
	getBlockX (I)I a
	getBlockZ (I)I b
	getChessboardDistance (Lnet/minecraft/world/level/ChunkPos;)I a
	getMaxBlockX ()I f
	getMaxBlockZ ()I g
	getMiddleBlockPosition (I)Lnet/minecraft/core/BlockPos; c
	getMiddleBlockX ()I b
	getMiddleBlockZ ()I c
	getMinBlockX ()I d
	getMinBlockZ ()I e
	getRegionLocalX ()I j
	getRegionLocalZ ()I k
	getRegionX ()I h
	getRegionZ ()I i
	getWorldPosition ()Lnet/minecraft/core/BlockPos; l
	getX (J)I a
	getZ (J)I b
	rangeClosed (Lnet/minecraft/world/level/ChunkPos;I)Ljava/util/stream/Stream; a
	rangeClosed (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/ChunkPos;)Ljava/util/stream/Stream; a
	toLong ()J a
net/minecraft/world/level/ClipContext net/minecraft/world/level/RayTrace
	block c
	collisionContext e
	fluid d
	from a
	to b
	getBlockShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFluidShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFrom ()Lnet/minecraft/world/phys/Vec3; b
	getTo ()Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/level/ClipContext$Block net/minecraft/world/level/RayTrace$BlockCollisionOption
	$VALUES e
	COLLIDER a
	OUTLINE b
	VISUAL c
	shapeGetter d
	$values ()[Lnet/minecraft/world/level/ClipContext$Block; a
net/minecraft/world/level/ClipContext$Fluid net/minecraft/world/level/RayTrace$FluidCollisionOption
	$VALUES e
	ANY c
	NONE a
	SOURCE_ONLY b
	canPick d
	$values ()[Lnet/minecraft/world/level/ClipContext$Fluid; a
	canPick (Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/ClipContext$ShapeGetter bzm$c
net/minecraft/world/level/CollisionGetter net/minecraft/world/level/ICollisionAccess
	borderCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	collidesWithSuffocatingBlock (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z e
	findFreePosition (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/Vec3;DDD)Ljava/util/Optional; a
	getBlockCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/lang/Iterable; d
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/lang/Iterable; c
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; b
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; p_
	isUnobstructed (Lnet/minecraft/world/entity/Entity;)Z f
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	isUnobstructed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Z a
	noCollision (Lnet/minecraft/world/entity/Entity;)Z g
	noCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z a
	noCollision (Lnet/minecraft/world/phys/AABB;)Z b
net/minecraft/world/level/CommonLevelAccessor net/minecraft/world/level/ICombinedAccess
	getBiomeName (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; i
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; b
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; t
net/minecraft/world/level/CustomSpawner net/minecraft/world/level/MobSpawner
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/DataPackConfig net/minecraft/world/level/DataPackConfiguration
	CODEC b
	DEFAULT a
	disabled d
	enabled c
	getDisabled ()Ljava/util/List; b
	getEnabled ()Ljava/util/List; a
net/minecraft/world/level/EmptyBlockGetter net/minecraft/world/level/BlockAccessAir
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/EmptyBlockGetter; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I v_
	getMinBuildHeight ()I u_
net/minecraft/world/level/EntityBasedExplosionDamageCalculator net/minecraft/world/level/ExplosionDamageCalculatorEntity
	source a
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
net/minecraft/world/level/EntityGetter net/minecraft/world/level/IEntityAccess
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a_
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; b
	getNearbyEntities (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getNearbyPlayers (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getNearestEntity (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDDLnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/entity/LivingEntity; a
	getNearestEntity (Ljava/util/List;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDD)Lnet/minecraft/world/entity/LivingEntity; a
	getNearestPlayer (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (DDDDZ)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/Entity;D)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;DDD)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDD)Lnet/minecraft/world/entity/player/Player; a
	getPlayerByUUID (Ljava/util/UUID;)Lnet/minecraft/world/entity/player/Player; b
	hasNearbyAlivePlayer (DDDD)Z a
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	players ()Ljava/util/List; z
net/minecraft/world/level/Explosion$BlockInteraction net/minecraft/world/level/Explosion$Effect
	$VALUES d
	BREAK b
	DESTROY c
	NONE a
	$values ()[Lnet/minecraft/world/level/Explosion$BlockInteraction; a
net/minecraft/world/level/ForcedChunksSavedData net/minecraft/world/level/ForcedChunk
	FILE_ID a
	TAG_FORCED b
	chunks c
	getChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/ForcedChunksSavedData; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/GameRules$BooleanValue net/minecraft/world/level/GameRules$GameRuleBoolean
	value b
	copy ()Lnet/minecraft/world/level/GameRules$BooleanValue; e
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	create (Z)Lnet/minecraft/world/level/GameRules$Type; a
	create (ZLjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; a
	deserialize (Ljava/lang/String;)V a
	get ()Z a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$BooleanValue; d
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	serialize ()Ljava/lang/String; b
	set (ZLnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$BooleanValue;Lnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$Category net/minecraft/world/level/GameRules$GameRuleCategory
	$VALUES i
	CHAT f
	DROPS d
	MISC g
	MOBS b
	PLAYER a
	SPAWNING c
	UPDATES e
	descriptionId h
	$values ()[Lnet/minecraft/world/level/GameRules$Category; b
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/level/GameRules$GameRuleTypeVisitor net/minecraft/world/level/GameRules$GameRuleVisitor
	visit (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V a
	visitBoolean (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V b
	visitInteger (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V c
net/minecraft/world/level/GameRules$IntegerValue net/minecraft/world/level/GameRules$GameRuleInt
	value b
	copy ()Lnet/minecraft/world/level/GameRules$IntegerValue; e
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	create (I)Lnet/minecraft/world/level/GameRules$Type; a
	create (ILjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; a
	deserialize (Ljava/lang/String;)V a
	get ()I a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$IntegerValue; d
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	safeParse (Ljava/lang/String;)I c
	serialize ()Ljava/lang/String; b
	set (ILnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$IntegerValue;Lnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	tryDeserialize (Ljava/lang/String;)Z b
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$Key net/minecraft/world/level/GameRules$GameRuleKey
	category b
	id a
	getCategory ()Lnet/minecraft/world/level/GameRules$Category; c
	getDescriptionId ()Ljava/lang/String; b
	getId ()Ljava/lang/String; a
net/minecraft/world/level/GameRules$Type net/minecraft/world/level/GameRules$GameRuleDefinition
	argument a
	callback c
	constructor b
	visitorCaller d
	callVisitor (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;Lnet/minecraft/world/level/GameRules$Key;)V a
	createArgument (Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; a
	createRule ()Lnet/minecraft/world/level/GameRules$Value; a
net/minecraft/world/level/GameRules$Value net/minecraft/world/level/GameRules$GameRuleValue
	type a
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	deserialize (Ljava/lang/String;)V a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	onChanged (Lnet/minecraft/server/MinecraftServer;)V a
	serialize ()Ljava/lang/String; b
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	setFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V b
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$VisitorCaller bzz$h
net/minecraft/world/level/GameType net/minecraft/world/level/EnumGamemode
	$VALUES k
	ADVENTURE c
	CREATIVE b
	DEFAULT_MODE e
	NOT_SET f
	SPECTATOR d
	SURVIVAL a
	id g
	longName j
	name h
	shortName i
	$values ()[Lnet/minecraft/world/level/GameType; h
	byId (I)Lnet/minecraft/world/level/GameType; a
	byId (ILnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/GameType; a
	byName (Ljava/lang/String;Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; a
	byNullableId (I)Lnet/minecraft/world/level/GameType; b
	getId ()I a
	getLongDisplayName ()Lnet/minecraft/network/chat/Component; c
	getName ()Ljava/lang/String; b
	getNullableId (Lnet/minecraft/world/level/GameType;)I a
	getShortDisplayName ()Lnet/minecraft/network/chat/Component; d
	isBlockPlacingRestricted ()Z e
	isCreative ()Z f
	isSurvival ()Z g
	updatePlayerAbilities (Lnet/minecraft/world/entity/player/Abilities;)V a
net/minecraft/world/level/ItemLike net/minecraft/world/level/IMaterial
	asItem ()Lnet/minecraft/world/item/Item; k
net/minecraft/world/level/Level net/minecraft/world/level/World
	DIRECTIONS a
	END h
	LOGGER d
	LONG_PARTICLE_CLIP_RANGE j
	MAX_BRIGHTNESS l
	MAX_ENTITY_SPAWN_Y n
	MAX_LEVEL_SIZE i
	MIN_ENTITY_SPAWN_Y o
	NETHER g
	OVERWORLD f
	RESOURCE_KEY_CODEC e
	SHORT_PARTICLE_CLIP_RANGE k
	TICKS_PER_DAY m
	addend r
	biomeManager F
	blockEntityTickers p
	dimension G
	dimensionType C
	isClientSide y
	isDebug A
	levelData x
	oRainLevel s
	oThunderLevel u
	pendingBlockEntityTickers b
	profiler D
	rainLevel t
	randValue q
	random w
	skyDarken B
	subTickCount H
	thread z
	thunderLevel v
	tickingBlockEntities c
	worldBorder E
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V b
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V b
	addBlockEntityTicker (Lnet/minecraft/world/level/block/entity/TickingBlockEntity;)V a
	addDestroyBlockEffect (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	blockEntityChanged (Lnet/minecraft/core/BlockPos;)V o
	blockEvent (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V a
	broadcastEntityEvent (Lnet/minecraft/world/entity/Entity;B)V a
	createFireworks (DDDDDDLnet/minecraft/nbt/CompoundTag;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	dimension ()Lnet/minecraft/resources/ResourceKey; aa
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; q_
	disconnect ()V U
	explode (Lnet/minecraft/world/entity/Entity;DDDFLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	gatherChunkSourceStats ()Ljava/lang/String; J
	getBestNeighborSignal (Lnet/minecraft/core/BlockPos;)I r
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; s_
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockRandomPos (IIII)Lnet/minecraft/core/BlockPos; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (II)Lnet/minecraft/world/level/chunk/LevelChunk; d
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/LevelChunk; l
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getDayTime ()J W
	getDirectSignalTo (Lnet/minecraft/core/BlockPos;)I p
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; I
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFreeMapId ()I v
	getGameRules ()Lnet/minecraft/world/level/GameRules; X
	getGameTime ()J V
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; n_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l_
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; ab
	getProfilerSupplier ()Ljava/util/function/Supplier; ac
	getRainLevel (F)F d
	getRandom ()Ljava/util/Random; r_
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; q
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; K
	getSeaLevel ()I m_
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	getSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSkyDarken ()I o_
	getSunAngle (F)F a
	getTagManager ()Lnet/minecraft/tags/TagContainer; r
	getThunderLevel (F)F b
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; p_
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	guardEntityTick (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/Entity;)V a
	hasNeighborSignal (Lnet/minecraft/core/BlockPos;)Z q
	hasSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isClientSide ()Z k_
	isDay ()Z P
	isDebug ()Z ad
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isHumidAt (Lnet/minecraft/core/BlockPos;)Z t
	isInSpawnableBounds (Lnet/minecraft/core/BlockPos;)Z k
	isInWorldBounds (Lnet/minecraft/core/BlockPos;)Z j
	isInWorldBoundsHorizontal (Lnet/minecraft/core/BlockPos;)Z D
	isLoaded (Lnet/minecraft/core/BlockPos;)Z n
	isNight ()Z Q
	isOutsideSpawnableHeight (I)Z b
	isRaining ()Z Z
	isRainingAt (Lnet/minecraft/core/BlockPos;)Z s
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	isThundering ()Z Y
	loadedAndEntityCanStandOn (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	loadedAndEntityCanStandOnFace (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)Z a
	mayInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	nextSubTickCount ()J t_
	noSave ()Z s
	onBlockStateChange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	playLocalSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	postGameEventInRadius (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;I)V a
	prepareWeather ()V T
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V m
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendPacketToServer (Lnet/minecraft/network/protocol/Packet;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setBlockAndUpdate (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlocksDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setRainLevel (F)V e
	setSkyFlashTime (I)V c
	setSpawnSettings (ZZ)V b
	setThunderLevel (F)V c
	shouldDelayFallingBlockEntityRemoval (Lnet/minecraft/world/entity/Entity$RemovalReason;)Z a
	shouldTickBlocksAt (J)Z a
	shouldTickDeath (Lnet/minecraft/world/entity/Entity;)Z h
	tickBlockEntities ()V R
	updateNeighborsAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V b
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
	updateNeighbourForOutputSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V c
	updateSkyBrightness ()V S
net/minecraft/world/level/LevelAccessor net/minecraft/world/level/GeneratorAccess
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	blockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	createTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;I)Lnet/minecraft/world/ticks/ScheduledTick; a
	createTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/ticks/TickPriority;)Lnet/minecraft/world/ticks/ScheduledTick; a
	dayTime ()J ae
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)V a
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; N
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; L
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getDifficulty ()Lnet/minecraft/world/Difficulty; af
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; M
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; n_
	getRandom ()Ljava/util/Random; r_
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	hasChunk (II)Z b
	levelEvent (ILnet/minecraft/core/BlockPos;I)V c
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	nextSubTickCount ()J t_
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;I)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;ILnet/minecraft/world/ticks/TickPriority;)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;I)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;ILnet/minecraft/world/ticks/TickPriority;)V a
net/minecraft/world/level/LevelReader net/minecraft/world/level/IWorldReader
	canSeeSkyFromBelowWater (Lnet/minecraft/core/BlockPos;)Z x
	containsAnyLiquid (Lnet/minecraft/world/phys/AABB;)Z d
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; q_
	getBiome (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome; v
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; s_
	getBlockStatesIfLoaded (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; c
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getBrightness (Lnet/minecraft/core/BlockPos;)F y
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; z
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getDirectSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I c
	getHeight ()I v_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getMaxLocalRawBrightness (Lnet/minecraft/core/BlockPos;)I B
	getMaxLocalRawBrightness (Lnet/minecraft/core/BlockPos;I)I c
	getMinBuildHeight ()I u_
	getSeaLevel ()I m_
	getSkyDarken ()I o_
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	hasChunk (II)Z b
	hasChunkAt (II)Z f
	hasChunkAt (Lnet/minecraft/core/BlockPos;)Z C
	hasChunksAt (IIII)Z b
	hasChunksAt (IIIIII)Z a
	hasChunksAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	isClientSide ()Z k_
	isEmptyBlock (Lnet/minecraft/core/BlockPos;)Z w
	isWaterAt (Lnet/minecraft/core/BlockPos;)Z A
net/minecraft/world/level/LevelSettings net/minecraft/world/level/WorldSettings
	allowCommands e
	dataPackConfig g
	difficulty d
	gameRules f
	gameType b
	hardcore c
	levelName a
	allowCommands ()Z e
	copy ()Lnet/minecraft/world/level/LevelSettings; h
	difficulty ()Lnet/minecraft/world/Difficulty; d
	gameRules ()Lnet/minecraft/world/level/GameRules; f
	gameType ()Lnet/minecraft/world/level/GameType; b
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; g
	hardcore ()Z c
	levelName ()Ljava/lang/String; a
	parse (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/LevelSettings; a
	withDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/LevelSettings; a
	withDifficulty (Lnet/minecraft/world/Difficulty;)Lnet/minecraft/world/level/LevelSettings; a
	withGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/LevelSettings; a
net/minecraft/world/level/LevelSimulatedRW net/minecraft/world/level/VirtualLevelWritable
net/minecraft/world/level/LevelSimulatedReader net/minecraft/world/level/VirtualLevelReadable
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
net/minecraft/world/level/LevelTimeAccess net/minecraft/world/level/IWorldTime
	dayTime ()J ae
	getMoonBrightness ()F ak
	getMoonPhase ()I al
	getTimeOfDay (F)F f
net/minecraft/world/level/LevelWriter net/minecraft/world/level/IWorldWriter
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	destroyBlock (Lnet/minecraft/core/BlockPos;Z)Z b
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;)Z a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
net/minecraft/world/level/LightLayer net/minecraft/world/level/EnumSkyBlock
	$VALUES d
	BLOCK b
	SKY a
	surrounding c
	$values ()[Lnet/minecraft/world/level/LightLayer; a
net/minecraft/world/level/LocalMobCapCalculator$MobCounts can$a
	counts a
	add (Lnet/minecraft/world/entity/MobCategory;)V a
	canSpawn (Lnet/minecraft/world/entity/MobCategory;)Z b
net/minecraft/world/level/NaturalSpawner net/minecraft/world/level/SpawnerCreature
	LOGGER c
	MAGIC_NUMBER e
	MIN_SPAWN_DISTANCE d
	SPAWNING_CATEGORIES f
	SPAWN_DISTANCE_BLOCK b
	SPAWN_DISTANCE_CHUNK a
	canSpawnMobAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;Lnet/minecraft/core/BlockPos;)Z a
	createState (ILjava/lang/Iterable;Lnet/minecraft/world/level/NaturalSpawner$ChunkGetter;Lnet/minecraft/world/level/LocalMobCapCalculator;)Lnet/minecraft/world/level/NaturalSpawner$SpawnState; a
	getMobForSpawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/Mob; a
	getRandomPosWithin (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/core/BlockPos; a
	getRandomSpawnMobAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
	getRoughBiome (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/biome/Biome; a
	getTopNonCollidingPos (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/entity/EntityType;II)Lnet/minecraft/core/BlockPos; a
	isInNetherFortressBounds (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/StructureFeatureManager;)Z a
	isRightDistanceToPlayerAndSpawnPoint (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;D)Z a
	isSpawnPositionOk (Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Z a
	isValidEmptySpawnBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/entity/EntityType;)Z a
	isValidPositionForMob (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;D)Z a
	isValidSpawnPostitionForType (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;Lnet/minecraft/core/BlockPos$MutableBlockPos;D)Z a
	mobsAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/util/random/WeightedRandomList; a
	spawnCategoryForChunk (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/NaturalSpawner$SpawnPredicate;Lnet/minecraft/world/level/NaturalSpawner$AfterSpawnCallback;)V a
	spawnCategoryForPosition (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	spawnCategoryForPosition (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/NaturalSpawner$SpawnPredicate;Lnet/minecraft/world/level/NaturalSpawner$AfterSpawnCallback;)V a
	spawnForChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/NaturalSpawner$SpawnState;ZZZ)V a
	spawnMobsForChunkGeneration (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Ljava/util/Random;)V a
net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback cao$a
net/minecraft/world/level/NaturalSpawner$ChunkGetter cao$b
net/minecraft/world/level/NaturalSpawner$SpawnPredicate cao$c
net/minecraft/world/level/NaturalSpawner$SpawnState cao$d
	lastCharge h
	lastCheckedPos f
	lastCheckedType g
	localMobCapCalculator e
	mobCategoryCounts b
	spawnPotential c
	spawnableChunkCount a
	unmodifiableMobCategoryCounts d
	afterSpawn (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	canSpawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	canSpawnForCategory (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/ChunkPos;)Z a
	getMobCategoryCounts ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	getSpawnableChunkCount ()I a
net/minecraft/world/level/NoiseColumn net/minecraft/world/level/BlockColumn
	column b
	minY a
	getBlock (I)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlock (ILnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/PathNavigationRegion net/minecraft/world/level/ChunkCache
	allEmpty d
	centerX a
	centerZ b
	chunks c
	level e
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; d
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; b
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I v_
	getMinBuildHeight ()I u_
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; a
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; p_
net/minecraft/world/level/PotentialCalculator net/minecraft/world/level/SpawnerCreatureProbabilities
	charges a
	addCharge (Lnet/minecraft/core/BlockPos;D)V a
	getPotentialEnergyChange (Lnet/minecraft/core/BlockPos;D)D b
net/minecraft/world/level/PotentialCalculator$PointCharge car$a
	charge b
	pos a
	getPotentialChange (Lnet/minecraft/core/BlockPos;)D a
net/minecraft/world/level/ServerLevelAccessor net/minecraft/world/level/WorldAccess
	addFreshEntityWithPassengers (Lnet/minecraft/world/entity/Entity;)V a_
	getLevel ()Lnet/minecraft/server/level/ServerLevel; G
net/minecraft/world/level/SpawnData net/minecraft/world/level/MobSpawnerData
	CODEC a
	DEFAULT_TYPE c
	LIST_CODEC b
	customSpawnRules e
	entityToSpawn d
	customSpawnRules ()Ljava/util/Optional; d
	entityToSpawn ()Lnet/minecraft/nbt/CompoundTag; c
	getCustomSpawnRules ()Ljava/util/Optional; b
	getEntityToSpawn ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/SpawnData$CustomSpawnRules cat$a
	CODEC a
	LIGHT_RANGE d
	blockLightLimit b
	skyLightLimit c
	blockLightLimit ()Lnet/minecraft/util/InclusiveRange; a
	checkLightBoundaries (Lnet/minecraft/util/InclusiveRange;)Lcom/mojang/serialization/DataResult; a
	skyLightLimit ()Lnet/minecraft/util/InclusiveRange; b
net/minecraft/world/level/StructureFeatureManager net/minecraft/world/level/StructureManager
	level a
	structureCheck c
	worldGenSettings b
	addReference (Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	addReferenceForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;JLnet/minecraft/world/level/chunk/FeatureAccess;)V a
	checkStructurePresence (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
	forWorldGenRegion (Lnet/minecraft/server/level/WorldGenRegion;)Lnet/minecraft/world/level/StructureFeatureManager; a
	getStartForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/chunk/FeatureAccess;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureWithPieceAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; b
	hasAnyStructureAt (Lnet/minecraft/core/BlockPos;)Z a
	setStartForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;Lnet/minecraft/world/level/chunk/FeatureAccess;)V a
	shouldGenerateFeatures ()Z a
	startsForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Ljava/util/List; a
net/minecraft/world/level/WorldGenLevel net/minecraft/world/level/GeneratorAccessSeed
	ensureCanWrite (Lnet/minecraft/core/BlockPos;)Z e_
	getSeed ()J E
	setCurrentlyGenerating (Ljava/util/function/Supplier;)V a
	startsForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Ljava/util/List; a
net/minecraft/world/level/biome/AmbientAdditionsSettings net/minecraft/world/level/biome/CaveSound
	CODEC a
	soundEvent b
	tickChance c
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getTickChance ()D b
net/minecraft/world/level/biome/AmbientMoodSettings net/minecraft/world/level/biome/CaveSoundSettings
	CODEC a
	LEGACY_CAVE_SETTINGS b
	blockSearchExtent e
	soundEvent c
	soundPositionOffset f
	tickDelay d
	getBlockSearchExtent ()I c
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getSoundPositionOffset ()D d
	getTickDelay ()I b
net/minecraft/world/level/biome/AmbientParticleSettings net/minecraft/world/level/biome/BiomeParticles
	CODEC a
	options b
	probability c
	canSpawn (Ljava/util/Random;)Z a
	getOptions ()Lnet/minecraft/core/particles/ParticleOptions; a
net/minecraft/world/level/biome/Biome net/minecraft/world/level/biome/BiomeBase
	BIOME_INFO_NOISE f
	CODEC d
	DIRECT_CODEC b
	FROZEN_TEMPERATURE_NOISE h
	LIST_CODEC e
	LOGGER a
	NETWORK_CODEC c
	TEMPERATURE_CACHE_SIZE i
	TEMPERATURE_NOISE g
	biomeCategory m
	climateSettings j
	generationSettings k
	mobSettings l
	specialEffects n
	temperatureCache o
	coldEnoughToSnow (Lnet/minecraft/core/BlockPos;)Z a
	getAmbientAdditions ()Ljava/util/Optional; p
	getAmbientLoop ()Ljava/util/Optional; n
	getAmbientMood ()Ljava/util/Optional; o
	getAmbientParticle ()Ljava/util/Optional; m
	getBackgroundMusic ()Ljava/util/Optional; q
	getBaseTemperature ()F i
	getBiomeCategory ()Lnet/minecraft/world/level/biome/Biome$BiomeCategory; r
	getDownfall ()F h
	getFogColor ()I f
	getFoliageColor ()I g
	getFoliageColorFromTexture ()I t
	getGenerationSettings ()Lnet/minecraft/world/level/biome/BiomeGenerationSettings; e
	getGrassColor (DD)I a
	getGrassColorFromTexture ()I s
	getHeightAdjustedTemperature (Lnet/minecraft/core/BlockPos;)F e
	getMobSettings ()Lnet/minecraft/world/level/biome/MobSpawnSettings; b
	getPrecipitation ()Lnet/minecraft/world/level/biome/Biome$Precipitation; c
	getSkyColor ()I a
	getSpecialEffects ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects; j
	getTemperature (Lnet/minecraft/core/BlockPos;)F f
	getWaterColor ()I k
	getWaterFogColor ()I l
	isHumid ()Z d
	shouldFreeze (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldFreeze (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Z)Z a
	shouldMeltFrozenOceanIcebergSlightly (Lnet/minecraft/core/BlockPos;)Z c
	shouldSnow (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	shouldSnowGolemBurn (Lnet/minecraft/core/BlockPos;)Z d
	warmEnoughToRain (Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/biome/Biome$BiomeBuilder caz$a
	biomeCategory b
	downfall e
	generationSettings h
	mobSpawnSettings g
	precipitation a
	specialEffects f
	temperature c
	temperatureModifier d
	biomeCategory (Lnet/minecraft/world/level/biome/Biome$BiomeCategory;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	build ()Lnet/minecraft/world/level/biome/Biome; a
	downfall (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; b
	generationSettings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	mobSpawnSettings (Lnet/minecraft/world/level/biome/MobSpawnSettings;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	precipitation (Lnet/minecraft/world/level/biome/Biome$Precipitation;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	specialEffects (Lnet/minecraft/world/level/biome/BiomeSpecialEffects;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	temperature (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	temperatureAdjustment (Lnet/minecraft/world/level/biome/Biome$TemperatureModifier;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
net/minecraft/world/level/biome/Biome$BiomeCategory net/minecraft/world/level/biome/BiomeBase$Geography
	$VALUES w
	BEACH j
	BY_NAME u
	CODEC t
	DESERT m
	EXTREME_HILLS c
	FOREST k
	ICY h
	JUNGLE d
	MESA e
	MOUNTAIN s
	MUSHROOM p
	NETHER q
	NONE a
	OCEAN l
	PLAINS f
	RIVER n
	SAVANNA g
	SWAMP o
	TAIGA b
	THEEND i
	UNDERGROUND r
	name v
	$values ()[Lnet/minecraft/world/level/biome/Biome$BiomeCategory; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/Biome$BiomeCategory; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/biome/Biome$ClimateSettings caz$c
	CODEC a
	downfall e
	precipitation b
	temperature c
	temperatureModifier d
net/minecraft/world/level/biome/Biome$Precipitation net/minecraft/world/level/biome/BiomeBase$Precipitation
	$VALUES g
	BY_NAME e
	CODEC d
	NONE a
	RAIN b
	SNOW c
	name f
	$values ()[Lnet/minecraft/world/level/biome/Biome$Precipitation; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/Biome$Precipitation; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/biome/Biome$TemperatureModifier net/minecraft/world/level/biome/BiomeBase$TemperatureModifier
	$VALUES f
	BY_NAME e
	CODEC c
	FROZEN b
	NONE a
	name d
	$values ()[Lnet/minecraft/world/level/biome/Biome$TemperatureModifier; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/Biome$TemperatureModifier; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	modifyTemperature (Lnet/minecraft/core/BlockPos;F)F a
net/minecraft/world/level/biome/BiomeGenerationSettings net/minecraft/world/level/biome/BiomeSettingsGeneration
	CODEC c
	EMPTY b
	LOGGER a
	carvers d
	featureSet g
	features e
	flowerFeatures f
	features ()Ljava/util/List; b
	getCarvers (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/List; a
	getFlowerFeatures ()Ljava/util/List; a
	hasFeature (Lnet/minecraft/world/level/levelgen/placement/PlacedFeature;)Z a
net/minecraft/world/level/biome/BiomeGenerationSettings$Builder cba$a
	carvers a
	features b
	addCarver (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	addFeature (ILjava/util/function/Supplier;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	addFeature (Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/world/level/levelgen/placement/PlacedFeature;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	addFeatureStepsUpTo (I)V a
	build ()Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource net/minecraft/world/level/biome/BiomeManager$Provider
net/minecraft/world/level/biome/BiomeSource net/minecraft/world/level/biome/WorldChunkManager
	CODEC a
	featuresPerStep c
	possibleBiomes b
	addMultinoiseDebugInfo (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	buildFeaturesPerStep (Ljava/util/List;Z)Ljava/util/List; a
	codec ()Lcom/mojang/serialization/Codec; a
	featuresPerStep ()Ljava/util/List; c
	findBiomeHorizontal (IIIIILjava/util/function/Predicate;Ljava/util/Random;ZLnet/minecraft/world/level/biome/Climate$Sampler;)Lnet/minecraft/core/BlockPos; a
	findBiomeHorizontal (IIIILjava/util/function/Predicate;Ljava/util/Random;Lnet/minecraft/world/level/biome/Climate$Sampler;)Lnet/minecraft/core/BlockPos; a
	getBiomesWithin (IIIILnet/minecraft/world/level/biome/Climate$Sampler;)Ljava/util/Set; a
	possibleBiomes ()Ljava/util/Set; b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/BiomeSource$StepFeatureData cbd$b
	features a
	indexMapping b
	features ()Ljava/util/List; a
	indexMapping ()Ljava/util/function/ToIntFunction; b
net/minecraft/world/level/biome/BiomeSpecialEffects net/minecraft/world/level/biome/BiomeFog
	CODEC a
	ambientAdditionsSettings l
	ambientLoopSoundEvent j
	ambientMoodSettings k
	ambientParticleSettings i
	backgroundMusic m
	fogColor b
	foliageColorOverride f
	grassColorModifier h
	grassColorOverride g
	skyColor e
	waterColor c
	waterFogColor d
	getAmbientAdditionsSettings ()Ljava/util/Optional; k
	getAmbientLoopSoundEvent ()Ljava/util/Optional; i
	getAmbientMoodSettings ()Ljava/util/Optional; j
	getAmbientParticleSettings ()Ljava/util/Optional; h
	getBackgroundMusic ()Ljava/util/Optional; l
	getFogColor ()I a
	getFoliageColorOverride ()Ljava/util/Optional; e
	getGrassColorModifier ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier; g
	getGrassColorOverride ()Ljava/util/Optional; f
	getSkyColor ()I d
	getWaterColor ()I b
	getWaterFogColor ()I c
net/minecraft/world/level/biome/BiomeSpecialEffects$Builder cbe$a
	ambientAdditionsSettings k
	ambientLoopSoundEvent i
	ambientMoodSettings j
	ambientParticle h
	backgroundMusic l
	fogColor a
	foliageColorOverride e
	grassColorModifier g
	grassColorOverride f
	skyColor d
	waterColor b
	waterFogColor c
	ambientAdditionsSound (Lnet/minecraft/world/level/biome/AmbientAdditionsSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientLoopSound (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientMoodSound (Lnet/minecraft/world/level/biome/AmbientMoodSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientParticle (Lnet/minecraft/world/level/biome/AmbientParticleSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	backgroundMusic (Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	build ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects; a
	fogColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	foliageColorOverride (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; e
	grassColorModifier (Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	grassColorOverride (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; f
	skyColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; d
	waterColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; b
	waterFogColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; c
net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier net/minecraft/world/level/biome/BiomeFog$GrassColor
	$VALUES g
	BY_NAME f
	CODEC d
	DARK_FOREST b
	NONE a
	SWAMP c
	name e
	$values ()[Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	modifyColor (DDI)I a
net/minecraft/world/level/biome/CheckerboardColumnBiomeSource net/minecraft/world/level/biome/WorldChunkManagerCheckerBoard
	CODEC b
	allowedBiomes c
	bitShift d
	size e
	codec ()Lcom/mojang/serialization/Codec; a
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/Climate$DistanceMetric cbh$a
net/minecraft/world/level/biome/Climate$Parameter cbh$b
	CODEC a
	max c
	min b
	distance (J)J a
	distance (Lnet/minecraft/world/level/biome/Climate$Parameter;)J a
	max ()J b
	min ()J a
	point (F)Lnet/minecraft/world/level/biome/Climate$Parameter; a
	span (FF)Lnet/minecraft/world/level/biome/Climate$Parameter; a
	span (Lnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/world/level/biome/Climate$Parameter; b
	span (Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/world/level/biome/Climate$Parameter; a
net/minecraft/world/level/biome/Climate$ParameterList cbh$c
	index b
	values a
	findValue (Lnet/minecraft/world/level/biome/Climate$TargetPoint;Ljava/lang/Object;)Ljava/lang/Object; a
	findValueBruteForce (Lnet/minecraft/world/level/biome/Climate$TargetPoint;Ljava/lang/Object;)Ljava/lang/Object; b
	findValueIndex (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)Ljava/lang/Object; a
	findValueIndex (Lnet/minecraft/world/level/biome/Climate$TargetPoint;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Ljava/lang/Object; a
	values ()Ljava/util/List; a
net/minecraft/world/level/biome/Climate$ParameterPoint cbh$d
	CODEC a
	continentalness d
	depth f
	erosion e
	humidity c
	offset h
	temperature b
	weirdness g
	continentalness ()Lnet/minecraft/world/level/biome/Climate$Parameter; d
	depth ()Lnet/minecraft/world/level/biome/Climate$Parameter; f
	erosion ()Lnet/minecraft/world/level/biome/Climate$Parameter; e
	fitness (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)J a
	humidity ()Lnet/minecraft/world/level/biome/Climate$Parameter; c
	offset ()J h
	parameterSpace ()Ljava/util/List; a
	temperature ()Lnet/minecraft/world/level/biome/Climate$Parameter; b
	weirdness ()Lnet/minecraft/world/level/biome/Climate$Parameter; g
net/minecraft/world/level/biome/Climate$RTree cbh$e
	CHILDREN_PER_NODE a
	lastResult c
	root b
	bucketize (Ljava/util/List;)Ljava/util/List; b
	build (ILjava/util/List;)Lnet/minecraft/world/level/biome/Climate$RTree$Node; a
	buildParameterSpace (Ljava/util/List;)Ljava/util/List; c
	comparator (IZ)Ljava/util/Comparator; a
	cost ([Lnet/minecraft/world/level/biome/Climate$Parameter;)J a
	create (Ljava/util/List;)Lnet/minecraft/world/level/biome/Climate$RTree; a
	search (Lnet/minecraft/world/level/biome/Climate$TargetPoint;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Ljava/lang/Object; a
	sort (Ljava/util/List;IIZ)V a
net/minecraft/world/level/biome/Climate$RTree$Leaf cbh$e$a
	value b
	search ([JLnet/minecraft/world/level/biome/Climate$RTree$Leaf;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Lnet/minecraft/world/level/biome/Climate$RTree$Leaf; a
net/minecraft/world/level/biome/Climate$RTree$Node cbh$e$b
	parameterSpace a
	distance ([J)J a
	search ([JLnet/minecraft/world/level/biome/Climate$RTree$Leaf;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Lnet/minecraft/world/level/biome/Climate$RTree$Leaf; a
net/minecraft/world/level/biome/Climate$RTree$SubTree cbh$e$c
	children b
	search ([JLnet/minecraft/world/level/biome/Climate$RTree$Leaf;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Lnet/minecraft/world/level/biome/Climate$RTree$Leaf; a
net/minecraft/world/level/biome/Climate$SpawnFinder cbh$g
	result a
	getSpawnPositionAndFitness (Ljava/util/List;Lnet/minecraft/world/level/levelgen/NoiseSampler;II)Lnet/minecraft/world/level/biome/Climate$SpawnFinder$Result; a
	radialSearch (Ljava/util/List;Lnet/minecraft/world/level/levelgen/NoiseSampler;FF)V a
net/minecraft/world/level/biome/Climate$SpawnFinder$Result cbh$g$a
	fitness b
	location a
	fitness ()J b
	location ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/biome/Climate$TargetPoint cbh$h
	continentalness c
	depth e
	erosion d
	humidity b
	temperature a
	weirdness f
	continentalness ()J d
	depth ()J f
	erosion ()J e
	humidity ()J c
	temperature ()J b
	toParameterArray ()[J a
	weirdness ()J g
net/minecraft/world/level/biome/FixedBiomeSource net/minecraft/world/level/biome/WorldChunkManagerHell
	CODEC b
	biome c
	codec ()Lcom/mojang/serialization/Codec; a
	findBiomeHorizontal (IIIIILjava/util/function/Predicate;Ljava/util/Random;ZLnet/minecraft/world/level/biome/Climate$Sampler;)Lnet/minecraft/core/BlockPos; a
	getBiomesWithin (IIIILnet/minecraft/world/level/biome/Climate$Sampler;)Ljava/util/Set; a
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/MobSpawnSettings net/minecraft/world/level/biome/BiomeSettingsMobs
	CODEC d
	DEFAULT_CREATURE_SPAWN_PROBABILITY e
	EMPTY c
	EMPTY_MOB_LIST b
	LOGGER a
	creatureGenerationProbability f
	mobSpawnCosts h
	spawners g
	getCreatureProbability ()F a
	getMobSpawnCost (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost; a
	getMobs (Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/util/random/WeightedRandomList; a
net/minecraft/world/level/biome/MobSpawnSettings$Builder cbj$a
	creatureGenerationProbability c
	mobSpawnCosts b
	spawners a
	addMobCharge (Lnet/minecraft/world/entity/EntityType;DD)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
	addSpawn (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
	build ()Lnet/minecraft/world/level/biome/MobSpawnSettings; a
	creatureGenerationProbability (F)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost cbj$b
	CODEC a
	charge c
	energyBudget b
	getCharge ()D b
	getEnergyBudget ()D a
net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData cbj$c
	CODEC a
	maxCount d
	minCount c
	type b
net/minecraft/world/level/biome/MultiNoiseBiomeSource net/minecraft/world/level/biome/WorldChunkManagerMultiNoise
	CODEC c
	DIRECT_CODEC b
	parameters d
	preset e
	addMultinoiseDebugInfo (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	getNoiseBiome (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)Lnet/minecraft/world/level/biome/Biome; a
	preset ()Ljava/util/Optional; d
	stable (Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset;)Z a
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset cbk$a
	BY_NAME c
	NETHER a
	OVERWORLD b
	name d
	parameterSource e
	biomeSource (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
	biomeSource (Lnet/minecraft/core/Registry;Z)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
	biomeSource (Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource$PresetInstance;Z)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
net/minecraft/world/level/biome/MultiNoiseBiomeSource$PresetInstance cbk$b
	CODEC a
	biomes c
	preset b
	biomeSource ()Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
	biomes ()Lnet/minecraft/core/Registry; c
	preset ()Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset; b
net/minecraft/world/level/biome/TerrainShaper$Coordinate cbm$a
	$VALUES j
	BY_NAME e
	CODEC f
	CONTINENTS a
	EROSION b
	RIDGES d
	WEIRDNESS c
	WIDE_CODEC g
	name i
	reference h
	$values ()[Lnet/minecraft/world/level/biome/TerrainShaper$Coordinate; a
	apply (Lnet/minecraft/world/level/biome/TerrainShaper$Point;)F a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/biome/TerrainShaper$Point cbm$b
	continents a
	erosion b
	ridges c
	weirdness d
	continents ()F a
	erosion ()F b
	ridges ()F c
	weirdness ()F d
net/minecraft/world/level/biome/TheEndBiomeSource net/minecraft/world/level/biome/WorldChunkManagerTheEnd
	CODEC b
	ISLAND_CHUNK_DISTANCE c
	ISLAND_CHUNK_DISTANCE_SQR e
	ISLAND_THRESHOLD d
	barrens m
	biomes g
	end i
	highlands j
	islandNoise f
	islands l
	midlands k
	seed h
	codec ()Lcom/mojang/serialization/Codec; a
	getHeightValue (Lnet/minecraft/world/level/levelgen/synth/SimplexNoise;II)F a
	stable (J)Z b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/block/AbstractBannerBlock net/minecraft/world/level/block/BlockBannerAbstract
	color a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	isPossibleToRespawnInThis ()Z X_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/AbstractChestBlock net/minecraft/world/level/block/BlockChestAbstract
	blockEntityType a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
net/minecraft/world/level/block/AbstractFurnaceBlock net/minecraft/world/level/block/BlockFurnace
	FACING a
	LIT b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createFurnaceTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AbstractGlassBlock net/minecraft/world/level/block/BlockGlassAbstract
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/AbstractSkullBlock net/minecraft/world/level/block/BlockSkullAbstract
	type a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getType ()Lnet/minecraft/world/level/block/SkullBlock$Type; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/AirBlock net/minecraft/world/level/block/BlockAir
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/AnvilBlock net/minecraft/world/level/block/BlockAnvil
	BASE b
	CONTAINER_TITLE k
	FACING a
	FALL_DAMAGE_MAX m
	FALL_DAMAGE_PER_DISTANCE l
	X_AXIS_AABB i
	X_LEG1 c
	X_LEG2 d
	X_TOP e
	Z_AXIS_AABB j
	Z_LEG1 f
	Z_LEG2 g
	Z_TOP h
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	damage (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; e
	falling (Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
	getFallDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; b
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AttachedStemBlock net/minecraft/world/level/block/BlockStemAttached
	AABBS c
	AABB_OFFSET b
	FACING a
	fruit d
	seedSupplier e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BambooBlock net/minecraft/world/level/block/BlockBamboo
	AGE g
	AGE_THICK_BAMBOO n
	AGE_THIN_BAMBOO m
	COLLISION_AABB_OFFSET c
	COLLISION_SHAPE f
	LARGE_LEAVES_AABB_OFFSET b
	LARGE_SHAPE e
	LEAVES h
	MAX_HEIGHT j
	SMALL_LEAVES_AABB_OFFSET a
	SMALL_SHAPE d
	STAGE i
	STAGE_DONE_GROWING l
	STAGE_GROWING k
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getHeightAboveUpToMax (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getHeightBelowUpToMax (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; T_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	growBamboo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;I)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BambooSaplingBlock net/minecraft/world/level/block/BlockBambooSapling
	SAPLING_AABB_OFFSET a
	SAPLING_SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; T_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	growBamboo (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BannerBlock net/minecraft/world/level/block/BlockBanner
	BY_COLOR b
	ROTATION a
	SHAPE c
	byColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BarrelBlock net/minecraft/world/level/block/BlockBarrel
	FACING a
	OPEN b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BarrierBlock net/minecraft/world/level/block/BlockBarrier
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/BaseCoralFanBlock net/minecraft/world/level/block/BlockCoralFanAbstract
	AABB a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/BaseCoralPlantBlock net/minecraft/world/level/block/BlockCoralDead
	AABB_OFFSET a
	SHAPE b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/BaseCoralPlantTypeBlock net/minecraft/world/level/block/BlockCoralBase
	AABB a
	WATERLOGGED c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	scanForWater (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z e
	tryScheduleDieTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseCoralWallFanBlock net/minecraft/world/level/block/BlockCoralFanWallAbstract
	FACING a
	SHAPES b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseEntityBlock net/minecraft/world/level/block/BlockTileEntity
	createTickerHelper (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/block/BaseFireBlock net/minecraft/world/level/block/BlockFireAbstract
	AABB_OFFSET a
	DOWN_AABB b
	SECONDS_ON_FIRE c
	fireDamage d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBePlacedAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	inPortalDimension (Lnet/minecraft/world/level/Level;)Z a
	isPortal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	spawnDestroyParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BasePressurePlateBlock net/minecraft/world/level/block/BlockPressurePlateAbstract
	AABB b
	PRESSED_AABB a
	TOUCH_AABB c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkPressed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getPressedTime ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	isPossibleToRespawnInThis ()Z X_
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighbours (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseRailBlock net/minecraft/world/level/block/BlockMinecartTrackAbstract
	FLAT_AABB a
	HALF_BLOCK_AABB b
	WATERLOGGED c
	isStraight d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isRail (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isRail (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	isStraight ()Z c
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	shouldBeRemoved (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/properties/RailShape;)Z a
	updateDir (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BeaconBeamBlock net/minecraft/world/level/block/IBeaconBeam
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/BeaconBlock net/minecraft/world/level/block/BlockBeacon
	getColor ()Lnet/minecraft/world/item/DyeColor; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BedBlock net/minecraft/world/level/block/BlockBed
	BASE d
	EAST_SHAPE l
	HEIGHT c
	LEG_NORTH_EAST g
	LEG_NORTH_WEST e
	LEG_SOUTH_EAST h
	LEG_SOUTH_WEST f
	LEG_WIDTH m
	NORTH_SHAPE i
	OCCUPIED b
	PART a
	SOUTH_SHAPE j
	WEST_SHAPE k
	color n
	bedAboveStandUpOffsets (Lnet/minecraft/core/Direction;)[[I a
	bedStandUpOffsets (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[[I a
	bedSurroundStandUpOffsets (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[[I b
	bounceUp (Lnet/minecraft/world/entity/Entity;)V a
	canSetSpawn (Lnet/minecraft/world/level/Level;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	findBunkBedStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Ljava/util/Optional; a
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;F)Ljava/util/Optional; a
	findStandUpPositionAtOffset (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;[[IZ)Ljava/util/Optional; a
	getBedOrientation (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; a
	getBlockType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; h
	getColor ()Lnet/minecraft/world/item/DyeColor; c
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; g
	getNeighbourDirection (Lnet/minecraft/world/level/block/state/properties/BedPart;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBunkBed (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	kickVillagerOutOfBed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BeehiveBlock net/minecraft/world/level/block/BlockBeehive
	FACING a
	HONEY_LEVEL b
	MAX_HONEY_LEVELS c
	SHEARED_HONEYCOMB_COUNT e
	SPAWN_DIRECTIONS d
	angerNearbyBees (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropHoneycomb (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getRandomOffset (Ljava/util/Random;)Lnet/minecraft/core/Direction; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	hiveContainsBees (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z c
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	releaseBeesAndResetHoneyLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)V a
	resetHoneyLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDD)V a
	spawnParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V a
	trySpawnDripParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BeetrootBlock net/minecraft/world/level/block/BlockBeetroot
	AGE b
	MAX_AGE a
	SHAPE_BY_AGE e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; c
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getMaxAge ()I d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/BellBlock net/minecraft/world/level/block/BlockBell
	ATTACHMENT b
	BELL_BOTTOM_SHAPE h
	BELL_SHAPE i
	BELL_TOP_SHAPE g
	CEILING_SHAPE G
	EAST_WEST_BETWEEN k
	EAST_WEST_FLOOR_SHAPE f
	EVENT_BELL_RING d
	FACING a
	NORTH_SOUTH_BETWEEN j
	NORTH_SOUTH_FLOOR_SHAPE e
	POWERED c
	TO_EAST m
	TO_NORTH n
	TO_SOUTH F
	TO_WEST l
	attemptToRing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	attemptToRing (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; n
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getVoxelShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isProperHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;D)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/player/Player;Z)Z a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BlastFurnaceBlock net/minecraft/world/level/block/BlockBlastFurnace
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/Block$BlockStatePairKey ccy$a
	direction c
	first a
	second b
net/minecraft/world/level/block/BonemealableBlock net/minecraft/world/level/block/IBlockFragilePlantElement
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BrewingStandBlock net/minecraft/world/level/block/BlockBrewingStand
	HAS_BOTTLE a
	SHAPE b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BubbleColumnBlock net/minecraft/world/level/block/BlockBubbleColumn
	CHECK_PERIOD b
	DRAG_DOWN a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canExistIn (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getColumnState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; n
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPickupSound ()Ljava/util/Optional; W_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	updateColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BucketPickup net/minecraft/world/level/block/IFluidSource
	getPickupSound ()Ljava/util/Optional; W_
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
net/minecraft/world/level/block/BushBlock net/minecraft/world/level/block/BlockPlant
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ButtonBlock net/minecraft/world/level/block/BlockButtonAbstract
	CEILING_AABB_X d
	CEILING_AABB_Z e
	EAST_AABB k
	FLOOR_AABB_X f
	FLOOR_AABB_Z g
	HALF_AABB_HEIGHT b
	HALF_AABB_WIDTH c
	NORTH_AABB h
	POWERED a
	PRESSED_CEILING_AABB_X l
	PRESSED_CEILING_AABB_Z m
	PRESSED_DEPTH L
	PRESSED_EAST_AABB J
	PRESSED_FLOOR_AABB_X n
	PRESSED_FLOOR_AABB_Z F
	PRESSED_NORTH_AABB G
	PRESSED_SOUTH_AABB H
	PRESSED_WEST_AABB I
	SOUTH_AABB i
	UNPRESSED_DEPTH M
	WEST_AABB j
	sensitive N
	checkPressed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getPressDuration ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)V a
	press (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V f
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CactusBlock net/minecraft/world/level/block/BlockCactus
	AABB_OFFSET c
	AGE a
	COLLISION_SHAPE d
	MAX_AGE b
	OUTLINE_SHAPE e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CakeBlock net/minecraft/world/level/block/BlockCake
	AABB_OFFSET d
	AABB_SIZE_PER_BITE e
	BITES b
	FULL_CAKE_SIGNAL c
	MAX_BITES a
	SHAPE_BY_BITE f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	eat (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOutputSignal (I)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CampfireBlock net/minecraft/world/level/block/BlockCampfire
	FACING e
	LIT b
	SHAPE a
	SIGNAL_FIRE c
	SMOKE_DISTANCE g
	VIRTUAL_FENCE_POST f
	WATERLOGGED d
	fireDamage i
	spawnParticles h
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dowse (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isLitCampfire (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSmokeSource (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isSmokeyPos (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	makeParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZZ)V a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarrotBlock net/minecraft/world/level/block/BlockCarrots
	SHAPE_BY_AGE a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/CartographyTableBlock net/minecraft/world/level/block/BlockCartographyTable
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarvedPumpkinBlock net/minecraft/world/level/block/BlockPumpkinCarved
	FACING a
	PUMPKINS_PREDICATE f
	ironGolemBase d
	ironGolemFull e
	snowGolemBase b
	snowGolemFull c
	canSpawnGolem (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOrCreateIronGolemBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; u
	getOrCreateIronGolemFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; v
	getOrCreateSnowGolemBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; c
	getOrCreateSnowGolemFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; q
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	trySpawnGolem (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/CauldronBlock net/minecraft/world/level/block/BlockCauldron
	POWDER_SNOW_FILL_CHANCE d
	RAIN_FILL_CHANCE c
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
	shouldHandlePrecipitation (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/biome/Biome$Precipitation;)Z a
net/minecraft/world/level/block/ChainBlock net/minecraft/world/level/block/BlockChain
	AABB_MAX c
	AABB_MIN b
	WATERLOGGED a
	X_AXIS_AABB f
	Y_AXIS_AABB d
	Z_AXIS_AABB e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ChestBlock net/minecraft/world/level/block/BlockChest
	AABB l
	AABB_HEIGHT g
	AABB_OFFSET f
	CHEST_COMBINER m
	EAST_AABB k
	EVENT_SET_OPEN_COUNT e
	FACING b
	MENU_PROVIDER_COMBINER n
	NORTH_AABB h
	SOUTH_AABB i
	TYPE c
	WATERLOGGED d
	WEST_AABB j
	blockEntityType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; e
	candidatePartnerFacing (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; g
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getContainer (Lnet/minecraft/world/level/block/ChestBlock;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/Container; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOpenChestStat ()Lnet/minecraft/stats/Stat; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isBlockedChestByBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	isCatSittingOnChest (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z b
	isChestBlockedAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	opennessCombiner (Lnet/minecraft/world/level/block/entity/LidBlockEntity;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$Combiner; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChorusFlowerBlock net/minecraft/world/level/block/BlockChorusFlower
	AGE b
	DEAD_AGE a
	plant c
	allNeighborsEmpty (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	generatePlant (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;I)V a
	growTreeRecursive (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;Lnet/minecraft/core/BlockPos;II)V a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	placeDeadFlower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	placeGrownFlower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ChorusPlantBlock net/minecraft/world/level/block/BlockChorusFruit
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CocoaBlock net/minecraft/world/level/block/BlockCocoa
	AGE b
	AGE_0_HALFWIDTH e
	AGE_0_HEIGHT d
	AGE_0_WIDTH c
	AGE_1_HALFWIDTH h
	AGE_1_HEIGHT g
	AGE_1_WIDTH f
	AGE_2_HALFWIDTH k
	AGE_2_HEIGHT j
	AGE_2_WIDTH i
	EAST_AABB l
	MAX_AGE a
	NORTH_AABB n
	SOUTH_AABB F
	WEST_AABB m
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CommandBlock net/minecraft/world/level/block/BlockCommand
	CONDITIONAL b
	FACING a
	LOGGER c
	automatic d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	execute (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BaseCommandBlock;Z)V a
	executeChain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComparatorBlock net/minecraft/world/level/block/BlockRedstoneComparator
	MODE a
	calculateOutputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I e
	checkTickOnNeighbor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getInputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getItemFrame (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/decoration/ItemFrame; a
	getOutputSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	refreshOutputState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V f
	shouldTurnOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComposterBlock net/minecraft/world/level/block/BlockComposter
	AABB_SIDE_THICKNESS f
	COMPOSTABLES e
	LEVEL d
	MAX_LEVEL c
	MIN_LEVEL b
	OUTER_SHAPE g
	READY a
	SHAPES h
	add (FLnet/minecraft/world/level/ItemLike;)V a
	addItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/level/block/state/BlockState; a
	bootStrap ()V c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	empty (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; c
	extractProduce (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getContainer (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/WorldlyContainer; a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	handleFill (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	insertItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComposterBlock$EmptyContainer net/minecraft/world/level/block/BlockComposter$ContainerEmpty
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
net/minecraft/world/level/block/ComposterBlock$InputContainer net/minecraft/world/level/block/BlockComposter$ContainerInput
	changed e
	level c
	pos d
	state b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getMaxStackSize ()I M_
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	setChanged ()V e
net/minecraft/world/level/block/ComposterBlock$OutputContainer net/minecraft/world/level/block/BlockComposter$ContainerOutput
	changed e
	level c
	pos d
	state b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getMaxStackSize ()I M_
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	setChanged ()V e
net/minecraft/world/level/block/ConcretePowderBlock net/minecraft/world/level/block/BlockConcretePowder
	concrete a
	canSolidify (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	shouldSolidify (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	touchesLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ConduitBlock net/minecraft/world/level/block/BlockConduit
	SHAPE b
	SIZE c
	WATERLOGGED a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralBlock net/minecraft/world/level/block/BlockCoral
	deadBlock a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	scanForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralFanBlock net/minecraft/world/level/block/BlockCoralFan
	deadBlock a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralPlantBlock net/minecraft/world/level/block/BlockCoralPlant
	AABB_OFFSET a
	SHAPE b
	deadBlock d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralWallFanBlock net/minecraft/world/level/block/BlockCoralFanWall
	deadBlock b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CraftingTableBlock net/minecraft/world/level/block/BlockWorkbench
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CropBlock net/minecraft/world/level/block/BlockCrops
	AGE d
	MAX_AGE c
	SHAPE_BY_AGE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAge (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; c
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getGrowthSpeed (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getMaxAge ()I d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForAge (I)Lnet/minecraft/world/level/block/state/BlockState; b
	growCrops (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isMaxAge (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/CrossCollisionBlock net/minecraft/world/level/block/BlockTall
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION f
	SOUTH c
	WATERLOGGED e
	WEST d
	collisionShapeByIndex g
	shapeByIndex h
	stateToIndex i
	getAABBIndex (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	indexFor (Lnet/minecraft/core/Direction;)I a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (FFFFF)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CryingObsidianBlock net/minecraft/world/level/block/BlockCryingObsidian
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/DaylightDetectorBlock net/minecraft/world/level/block/BlockDaylightDetector
	INVERTED b
	POWER a
	SHAPE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	tickEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/DaylightDetectorBlockEntity;)V a
	updateSignalStrength (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/DeadBushBlock net/minecraft/world/level/block/BlockDeadBush
	AABB_OFFSET a
	SHAPE b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/DetectorRailBlock net/minecraft/world/level/block/BlockMinecartDetector
	POWERED e
	PRESSED_CHECK_PERIOD f
	SHAPE d
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getInteractingMinecartOfType (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List; a
	getSearchBB (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updatePowerToConnected (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/DiodeBlock net/minecraft/world/level/block/BlockDiodeAbstract
	POWERED c
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkTickOnNeighbor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	getAlternateSignal (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getAlternateSignalAt (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getInputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getOutputSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isAlternateInput (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isDiode (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isLocked (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	shouldPrioritize (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z c
	shouldTurnOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
net/minecraft/world/level/block/DirectionalBlock net/minecraft/world/level/block/BlockDirectional
	FACING a
net/minecraft/world/level/block/DirtPathBlock net/minecraft/world/level/block/BlockGrassPath
	SHAPE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/DispenserBlock net/minecraft/world/level/block/BlockDispenser
	DISPENSER_REGISTRY c
	FACING a
	TRIGGERED b
	TRIGGER_DURATION d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dispenseFrom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDispenseMethod (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior; a
	getDispensePosition (Lnet/minecraft/core/BlockSource;)Lnet/minecraft/core/Position; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	registerBehavior (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/core/dispenser/DispenseItemBehavior;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DoorBlock net/minecraft/world/level/block/BlockDoor
	AABB_DOOR_THICKNESS f
	EAST_AABB j
	FACING a
	HALF e
	HINGE c
	NORTH_AABB h
	OPEN b
	POWERED d
	SOUTH_AABB g
	WEST_AABB i
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloseSound ()I c
	getHinge (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/properties/DoorHingeSide; b
	getOpenSound ()I q
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isOpen (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isWoodenDoor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isWoodenDoor (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setOpen (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DoubleBlockCombiner net/minecraft/world/level/block/DoubleBlockFinder
	combineWithNeigbour (Lnet/minecraft/world/level/block/entity/BlockEntityType;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/properties/DirectionProperty;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/function/BiPredicate;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
net/minecraft/world/level/block/DoubleBlockCombiner$BlockType net/minecraft/world/level/block/DoubleBlockFinder$BlockType
	$VALUES d
	FIRST b
	SECOND c
	SINGLE a
	$values ()[Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; a
net/minecraft/world/level/block/DoubleBlockCombiner$Combiner net/minecraft/world/level/block/DoubleBlockFinder$Combiner
	acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
	acceptNone ()Ljava/lang/Object; b
	acceptSingle (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult net/minecraft/world/level/block/DoubleBlockFinder$Result
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double net/minecraft/world/level/block/DoubleBlockFinder$Result$Double
	first a
	second b
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single net/minecraft/world/level/block/DoubleBlockFinder$Result$Single
	single a
net/minecraft/world/level/block/DoublePlantBlock net/minecraft/world/level/block/BlockTallPlant
	HALF a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	copyWaterloggedFrom (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; T_
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;I)V a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	preventCreativeDropFromBottomPart (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V b
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/DragonEggBlock net/minecraft/world/level/block/BlockDragonEgg
	SHAPE a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	getDelayAfterPlace ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	teleport (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DropperBlock net/minecraft/world/level/block/BlockDropper
	DISPENSE_BEHAVIOUR c
	dispenseFrom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	getDispenseMethod (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EnchantmentTableBlock net/minecraft/world/level/block/BlockEnchantmentTable
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/EndGatewayBlock net/minecraft/world/level/block/BlockEndGateway
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EndPortalBlock net/minecraft/world/level/block/BlockEnderPortal
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EndPortalFrameBlock net/minecraft/world/level/block/BlockEnderPortalFrame
	BASE_SHAPE c
	EYE_SHAPE d
	FACING a
	FULL_SHAPE e
	HAS_EYE b
	portalShape f
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOrCreatePortalShape ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/EndRodBlock net/minecraft/world/level/block/BlockEndRod
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/EnderChestBlock net/minecraft/world/level/block/BlockEnderChest
	CONTAINER_TITLE e
	FACING b
	SHAPE d
	WATERLOGGED c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/EntityBlock net/minecraft/world/level/block/ITileEntity
	getListener (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock net/minecraft/world/level/block/BlockAttachable
	FACE K
	canAttach (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FallingBlock net/minecraft/world/level/block/BlockFalling
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	falling (Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	getDelayAfterPlace ()I c
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
	isFree (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FarmBlock net/minecraft/world/level/block/BlockSoil
	MAX_MOISTURE c
	MOISTURE a
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isNearWater (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isUnderCrops (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	turnToDirt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/FenceBlock net/minecraft/world/level/block/BlockFence
	occlusionByIndex i
	connectsTo (Lnet/minecraft/world/level/block/state/BlockState;ZLnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSameFence (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FenceGateBlock net/minecraft/world/level/block/BlockFenceGate
	IN_WALL c
	OPEN a
	POWERED b
	X_COLLISION_SHAPE i
	X_OCCLUSION_SHAPE k
	X_OCCLUSION_SHAPE_LOW m
	X_SHAPE e
	X_SHAPE_LOW g
	Z_COLLISION_SHAPE h
	Z_OCCLUSION_SHAPE j
	Z_OCCLUSION_SHAPE_LOW l
	Z_SHAPE d
	Z_SHAPE_LOW f
	connectsToDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isWall (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FireBlock net/minecraft/world/level/block/BlockFire
	AGE d
	BURN_EASY M
	BURN_HARD O
	BURN_INSTANT L
	BURN_MEDIUM N
	EAST f
	EAST_AABB m
	FLAME_EASY I
	FLAME_HARD K
	FLAME_INSTANT H
	FLAME_MEDIUM J
	MAX_AGE c
	NORTH e
	NORTH_AABB n
	PROPERTY_BY_DIRECTION j
	SOUTH g
	SOUTH_AABB F
	UP i
	UP_AABB k
	WEST h
	WEST_AABB l
	burnOdds Q
	flameOdds P
	shapesCache G
	bootStrap ()V c
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkBurnOut (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ILjava/util/Random;I)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBurnOdd (Lnet/minecraft/world/level/block/state/BlockState;)I n
	getFireOdds (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)I a
	getFireTickDelay (Ljava/util/Random;)I a
	getFlameOdds (Lnet/minecraft/world/level/block/state/BlockState;)I o
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getStateWithAge (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/block/state/BlockState; a
	isNearRain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isValidFireLocation (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	setFlammable (Lnet/minecraft/world/level/block/Block;II)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FletchingTableBlock net/minecraft/world/level/block/BlockFletchingTable
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FlowerBlock net/minecraft/world/level/block/BlockFlowers
	AABB_OFFSET a
	SHAPE b
	effectDuration d
	suspiciousStewEffect c
	getEffectDuration ()I d
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; T_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSuspiciousStewEffect ()Lnet/minecraft/world/effect/MobEffect; c
net/minecraft/world/level/block/FlowerPotBlock net/minecraft/world/level/block/BlockFlowerPot
	AABB_SIZE a
	POTTED_BY_CONTENT c
	SHAPE b
	content d
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getContent ()Lnet/minecraft/world/level/block/Block; c
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isEmpty ()Z q
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FrostedIceBlock net/minecraft/world/level/block/BlockIceFrost
	AGE b
	MAX_AGE a
	NEIGHBORS_TO_AGE c
	NEIGHBORS_TO_MELT d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fewerNeigboursThan (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;I)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	slightlyMelt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z e
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/FungusBlock net/minecraft/world/level/block/BlockFungi
	BONEMEAL_SUCCESS_PROBABILITY b
	SHAPE a
	feature c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/FurnaceBlock net/minecraft/world/level/block/BlockFurnaceFurace
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/GlassBlock net/minecraft/world/level/block/BlockGlass
net/minecraft/world/level/block/GlazedTerracottaBlock net/minecraft/world/level/block/BlockGlazedTerracotta
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GrassBlock net/minecraft/world/level/block/BlockGrass
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/GravelBlock net/minecraft/world/level/block/BlockGravel
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
net/minecraft/world/level/block/GrindstoneBlock net/minecraft/world/level/block/BlockGrindstone
	CEILING_EAST_WEST_ALL_LEGS aC
	CEILING_EAST_WEST_GRINDSTONE aD
	CEILING_EAST_WEST_LEFT_LEG aA
	CEILING_EAST_WEST_LEFT_PIVOT ay
	CEILING_EAST_WEST_LEFT_POST aw
	CEILING_EAST_WEST_RIGHT_LEG aB
	CEILING_EAST_WEST_RIGHT_PIVOT az
	CEILING_EAST_WEST_RIGHT_POST ax
	CEILING_NORTH_SOUTH_ALL_LEGS au
	CEILING_NORTH_SOUTH_GRINDSTONE av
	CEILING_NORTH_SOUTH_LEFT_LEG as
	CEILING_NORTH_SOUTH_LEFT_PIVOT aq
	CEILING_NORTH_SOUTH_LEFT_POST ao
	CEILING_NORTH_SOUTH_RIGHT_LEG at
	CEILING_NORTH_SOUTH_RIGHT_PIVOT ar
	CEILING_NORTH_SOUTH_RIGHT_POST ap
	CONTAINER_TITLE aR
	FLOOR_EAST_WEST_ALL_LEGS F
	FLOOR_EAST_WEST_GRINDSTONE G
	FLOOR_EAST_WEST_LEFT_LEG m
	FLOOR_EAST_WEST_LEFT_PIVOT k
	FLOOR_EAST_WEST_LEFT_POST i
	FLOOR_EAST_WEST_RIGHT_LEG n
	FLOOR_EAST_WEST_RIGHT_PIVOT l
	FLOOR_EAST_WEST_RIGHT_POST j
	FLOOR_NORTH_SOUTH_ALL_LEGS g
	FLOOR_NORTH_SOUTH_GRINDSTONE h
	FLOOR_NORTH_SOUTH_LEFT_LEG e
	FLOOR_NORTH_SOUTH_LEFT_PIVOT c
	FLOOR_NORTH_SOUTH_LEFT_POST a
	FLOOR_NORTH_SOUTH_RIGHT_LEG f
	FLOOR_NORTH_SOUTH_RIGHT_PIVOT d
	FLOOR_NORTH_SOUTH_RIGHT_POST b
	WALL_EAST_ALL_LEGS am
	WALL_EAST_GRINDSTONE an
	WALL_EAST_LEFT_LEG ak
	WALL_EAST_LEFT_PIVOT ai
	WALL_EAST_LEFT_POST ag
	WALL_EAST_RIGHT_LEG al
	WALL_EAST_RIGHT_PIVOT aj
	WALL_EAST_RIGHT_POST ah
	WALL_NORTH_ALL_LEGS W
	WALL_NORTH_GRINDSTONE X
	WALL_NORTH_LEFT_LEG U
	WALL_NORTH_LEFT_PIVOT S
	WALL_NORTH_LEFT_POST Q
	WALL_NORTH_RIGHT_LEG V
	WALL_NORTH_RIGHT_PIVOT T
	WALL_NORTH_RIGHT_POST R
	WALL_SOUTH_ALL_LEGS O
	WALL_SOUTH_GRINDSTONE P
	WALL_SOUTH_LEFT_LEG M
	WALL_SOUTH_LEFT_PIVOT J
	WALL_SOUTH_LEFT_POST H
	WALL_SOUTH_RIGHT_LEG N
	WALL_SOUTH_RIGHT_PIVOT L
	WALL_SOUTH_RIGHT_POST I
	WALL_WEST_ALL_LEGS ae
	WALL_WEST_GRINDSTONE af
	WALL_WEST_LEFT_LEG ac
	WALL_WEST_LEFT_PIVOT aa
	WALL_WEST_LEFT_POST Y
	WALL_WEST_RIGHT_LEG ad
	WALL_WEST_RIGHT_PIVOT ab
	WALL_WEST_RIGHT_POST Z
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getVoxelShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; n
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/GrowingPlantBlock net/minecraft/world/level/block/BlockGrowingAbstract
	growthDirection a
	scheduleFluidTicks b
	shape c
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; c
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/LevelAccessor;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/GrowingPlantBodyBlock net/minecraft/world/level/block/BlockGrowingStem
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; c
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getHeadPos (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateHeadAfterConvertedFromBody (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GrowingPlantHeadBlock net/minecraft/world/level/block/BlockGrowingTop
	AGE d
	MAX_AGE e
	growPerTickProbability f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getGrowIntoState (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; d
	getMaxAgeState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; n
	getStateForPlacement (Lnet/minecraft/world/level/LevelAccessor;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isMaxAge (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateBodyAfterConvertedFromHead (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HalfTransparentBlock net/minecraft/world/level/block/BlockHalfTransparent
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/HayBlock net/minecraft/world/level/block/BlockHay
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/level/block/HoneyBlock net/minecraft/world/level/block/BlockHoney
	MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING c
	SHAPE a
	SLIDE_ADVANCEMENT_CHECK_INTERVAL e
	SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST b
	THROTTLE_SLIDE_SPEED_TO d
	doSlideMovement (Lnet/minecraft/world/entity/Entity;)V d
	doesEntityDoHoneyBlockSlideEffects (Lnet/minecraft/world/entity/Entity;)Z c
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	isSlidingDown (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	maybeDoSlideAchievement (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	maybeDoSlideEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)V a
	showJumpParticles (Lnet/minecraft/world/entity/Entity;)V b
	showParticles (Lnet/minecraft/world/entity/Entity;I)V a
	showSlideParticles (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/HopperBlock net/minecraft/world/level/block/BlockHopper
	BASE f
	CONVEX_BASE e
	DOWN_INTERACTION_SHAPE l
	DOWN_SHAPE g
	EAST_INTERACTION_SHAPE m
	EAST_SHAPE h
	ENABLED b
	FACING a
	FUNNEL d
	NORTH_INTERACTION_SHAPE n
	NORTH_SHAPE i
	SOUTH_INTERACTION_SHAPE F
	SOUTH_SHAPE j
	TOP c
	WEST_INTERACTION_SHAPE G
	WEST_SHAPE k
	checkPoweredState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/HorizontalDirectionalBlock net/minecraft/world/level/block/BlockFacingHorizontal
	FACING aE
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HugeMushroomBlock net/minecraft/world/level/block/BlockHugeMushroom
	DOWN f
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION g
	SOUTH c
	UP e
	WEST d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/IceBlock net/minecraft/world/level/block/BlockIce
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	melt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/InfestedBlock net/minecraft/world/level/block/BlockMonsterEggs
	BLOCK_BY_HOST_BLOCK b
	HOST_TO_INFESTED_STATES c
	INFESTED_TO_HOST_STATES d
	hostBlock a
	getHostBlock ()Lnet/minecraft/world/level/block/Block; c
	getNewStateWithProperties (Ljava/util/Map;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Supplier;)Lnet/minecraft/world/level/block/state/BlockState; a
	hostStateByInfested (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; o
	infestedStateByHost (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; n
	isCompatibleHostBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	spawnInfestation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/IronBarsBlock net/minecraft/world/level/block/BlockIronBars
	attachsTo (Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/JigsawBlock net/minecraft/world/level/block/BlockJigsaw
	ORIENTATION a
	canAttach (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFrontFacing (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTopFacing (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; n
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/JukeboxBlock net/minecraft/world/level/block/BlockJukeBox
	HAS_RECORD a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropRecording (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	setRecord (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/KelpBlock net/minecraft/world/level/block/BlockKelp
	GROW_PER_TICK_PROBABILITY g
	SHAPE f
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/KelpPlantBlock net/minecraft/world/level/block/BlockKelpPlant
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; d
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/LadderBlock net/minecraft/world/level/block/BlockLadder
	AABB_OFFSET c
	EAST_AABB d
	FACING a
	NORTH_AABB g
	SOUTH_AABB f
	WATERLOGGED b
	WEST_AABB e
	canAttachTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LanternBlock net/minecraft/world/level/block/BlockLantern
	AABB c
	HANGING a
	HANGING_AABB d
	WATERLOGGED b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LeavesBlock net/minecraft/world/level/block/BlockLeaves
	DECAY_DISTANCE a
	DISTANCE b
	PERSISTENT c
	TICK_DELAY d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getDistanceAt (Lnet/minecraft/world/level/block/state/BlockState;)I h
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateDistance (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LecternBlock net/minecraft/world/level/block/BlockLectern
	FACING a
	HAS_BOOK c
	PAGE_CHANGE_IMPULSE_TICKS m
	POWERED b
	SHAPE_BASE d
	SHAPE_COLLISION h
	SHAPE_COMMON f
	SHAPE_EAST k
	SHAPE_NORTH j
	SHAPE_POST e
	SHAPE_SOUTH l
	SHAPE_TOP_PLATE g
	SHAPE_WEST i
	changePowered (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	openScreen (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	placeBook (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)V b
	popBook (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	resetBookState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	signalPageChange (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	tryPlaceBook (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)Z a
	updateBelow (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/LevelEvent cgy
	ANIMATION_DRAGON_SUMMON_ROAR ao
	ANIMATION_END_GATEWAY_SPAWN an
	COMPOSTER_FILL X
	DRIPSTONE_DRIP ab
	END_PORTAL_FRAME_FILL aa
	LAVA_FIZZ Y
	PARTICLES_AND_SOUND_PLANT_GROWTH ac
	PARTICLES_AND_SOUND_WAX_ON aq
	PARTICLES_DESTROY_BLOCK ae
	PARTICLES_DRAGON_BLOCK_BREAK al
	PARTICLES_DRAGON_FIREBALL_SPLASH aj
	PARTICLES_ELECTRIC_SPARK ap
	PARTICLES_EYE_OF_ENDER_DEATH ag
	PARTICLES_INSTANT_POTION_SPLASH ak
	PARTICLES_MOBBLOCK_SPAWN ah
	PARTICLES_PLANT_GROWTH ai
	PARTICLES_SCRAPE as
	PARTICLES_SHOOT ad
	PARTICLES_SPELL_POTION_SPLASH af
	PARTICLES_WATER_EVAPORATING am
	PARTICLES_WAX_OFF ar
	REDSTONE_TORCH_BURNOUT Z
	SOUND_ANVIL_BROKEN D
	SOUND_ANVIL_LAND F
	SOUND_ANVIL_USED E
	SOUND_BAT_LIFTOFF z
	SOUND_BLAZE_FIREBALL s
	SOUND_BREWING_STAND_BREW J
	SOUND_CHORUS_DEATH I
	SOUND_CHORUS_GROW H
	SOUND_CLOSE_FENCE_GATE o
	SOUND_CLOSE_IRON_DOOR l
	SOUND_CLOSE_IRON_TRAP_DOOR K
	SOUND_CLOSE_WOODEN_DOOR m
	SOUND_CLOSE_WOODEN_TRAP_DOOR n
	SOUND_DISPENSER_DISPENSE a
	SOUND_DISPENSER_FAIL b
	SOUND_DISPENSER_PROJECTILE_LAUNCH c
	SOUND_DRAGON_DEATH C
	SOUND_DRAGON_FIREBALL r
	SOUND_DRIP_LAVA_INTO_CAULDRON U
	SOUND_DRIP_WATER_INTO_CAULDRON V
	SOUND_ENDER_EYE_LAUNCH d
	SOUND_END_PORTAL_SPAWN M
	SOUND_EXTINGUISH_FIRE j
	SOUND_FIREWORK_SHOOT e
	SOUND_GHAST_FIREBALL q
	SOUND_GHAST_WARNING p
	SOUND_GRINDSTONE_USED Q
	SOUND_HUSK_TO_ZOMBIE P
	SOUND_OPEN_FENCE_GATE i
	SOUND_OPEN_IRON_DOOR f
	SOUND_OPEN_IRON_TRAP_DOOR L
	SOUND_OPEN_WOODEN_DOOR g
	SOUND_OPEN_WOODEN_TRAP_DOOR h
	SOUND_PAGE_TURN R
	SOUND_PHANTOM_BITE N
	SOUND_PLAY_RECORDING k
	SOUND_POINTED_DRIPSTONE_LAND T
	SOUND_PORTAL_TRAVEL G
	SOUND_SKELETON_TO_STRAY W
	SOUND_SMITHING_TABLE_USED S
	SOUND_WITHER_BLOCK_BREAK w
	SOUND_WITHER_BOSS_SHOOT y
	SOUND_WITHER_BOSS_SPAWN x
	SOUND_ZOMBIE_CONVERTED B
	SOUND_ZOMBIE_DOOR_CRASH v
	SOUND_ZOMBIE_INFECTED A
	SOUND_ZOMBIE_IRON_DOOR u
	SOUND_ZOMBIE_TO_DROWNED O
	SOUND_ZOMBIE_WOODEN_DOOR t
net/minecraft/world/level/block/LeverBlock net/minecraft/world/level/block/BlockLever
	DEPTH b
	DOWN_AABB_X l
	DOWN_AABB_Z k
	EAST_AABB h
	HEIGHT d
	NORTH_AABB e
	POWERED a
	SOUTH_AABB f
	UP_AABB_X j
	UP_AABB_Z i
	WEST_AABB g
	WIDTH c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	makeParticle (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;F)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	pull (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/LiquidBlock net/minecraft/world/level/block/BlockFluids
	LEVEL a
	POSSIBLE_FLOW_DIRECTIONS d
	STABLE_SHAPE c
	fluid b
	stateCache e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fizz (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPickupSound ()Ljava/util/Optional; W_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	shouldSpreadLiquid (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LiquidBlockContainer net/minecraft/world/level/block/IFluidContainer
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/LoomBlock net/minecraft/world/level/block/BlockLoom
	CONTAINER_TITLE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/MagmaBlock net/minecraft/world/level/block/BlockMagma
	BUBBLE_COLUMN_CHECK_DELAY a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MelonBlock net/minecraft/world/level/block/BlockMelon
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; d
	getStem ()Lnet/minecraft/world/level/block/StemBlock; c
net/minecraft/world/level/block/Mirror net/minecraft/world/level/block/EnumBlockMirror
	$VALUES f
	FRONT_BACK c
	LEFT_RIGHT b
	NONE a
	rotation e
	symbol d
	$values ()[Lnet/minecraft/world/level/block/Mirror; c
	getRotation (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/Rotation; a
	mirror (II)I a
	mirror (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; b
	rotation ()Lcom/mojang/math/OctahedralGroup; a
	symbol ()Lnet/minecraft/network/chat/Component; b
net/minecraft/world/level/block/MushroomBlock net/minecraft/world/level/block/BlockMushroom
	AABB_OFFSET a
	SHAPE b
	featureSupplier c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	growMushroom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/MyceliumBlock net/minecraft/world/level/block/BlockMycel
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/NetherPortalBlock net/minecraft/world/level/block/BlockPortal
	AABB_OFFSET b
	AXIS a
	X_AXIS_AABB c
	Z_AXIS_AABB d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/NetherSproutsBlock net/minecraft/world/level/block/BlockNetherSprouts
	SHAPE a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; T_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/NetherVines net/minecraft/world/level/block/BlockNetherVinesUtil
	BONEMEAL_GROW_PROBABILITY_DECREASE_RATE b
	GROW_PER_TICK_PROBABILITY a
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	isValidGrowthState (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/NetherWartBlock net/minecraft/world/level/block/BlockNetherWart
	AGE b
	MAX_AGE a
	SHAPE_BY_AGE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/NetherrackBlock net/minecraft/world/level/block/BlockNetherrack
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/NoteBlock net/minecraft/world/level/block/BlockNote
	INSTRUMENT a
	NOTE c
	POWERED b
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playNote (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/NyliumBlock net/minecraft/world/level/block/BlockNylium
	canBeNylium (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/ObserverBlock net/minecraft/world/level/block/BlockObserver
	POWERED b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	startSignal (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/OreBlock net/minecraft/world/level/block/BlockOre
	xpRange a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PipeBlock net/minecraft/world/level/block/BlockSprawling
	DIRECTIONS i
	DOWN f
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION g
	SOUTH c
	UP e
	WEST d
	shapeByIndex h
	getAABBIndex (Lnet/minecraft/world/level/block/state/BlockState;)I h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	makeShapes (F)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/PlayerHeadBlock net/minecraft/world/level/block/BlockSkullPlayer
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PlayerWallHeadBlock net/minecraft/world/level/block/BlockSkullPlayerWall
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PotatoBlock net/minecraft/world/level/block/BlockPotatoes
	SHAPE_BY_AGE a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/PoweredBlock net/minecraft/world/level/block/BlockPowered
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
net/minecraft/world/level/block/PoweredRailBlock net/minecraft/world/level/block/BlockPoweredRail
	POWERED e
	SHAPE d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	findPoweredRailSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZI)Z a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	isSameRailWithPower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZILnet/minecraft/world/level/block/state/properties/RailShape;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/world/level/block/PressurePlateBlock net/minecraft/world/level/block/BlockPressurePlateBinary
	POWERED d
	sensitivity e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PressurePlateBlock$Sensitivity net/minecraft/world/level/block/BlockPressurePlateBinary$EnumMobType
	$VALUES c
	EVERYTHING a
	MOBS b
	$values ()[Lnet/minecraft/world/level/block/PressurePlateBlock$Sensitivity; a
net/minecraft/world/level/block/PumpkinBlock net/minecraft/world/level/block/BlockPumpkin
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; d
	getStem ()Lnet/minecraft/world/level/block/StemBlock; c
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RailBlock net/minecraft/world/level/block/BlockMinecartTrack
	SHAPE d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/world/level/block/RailState net/minecraft/world/level/block/MinecartTrackLogic
	block c
	connections f
	isStraight e
	level a
	pos b
	state d
	canConnectTo (Lnet/minecraft/world/level/block/RailState;)Z b
	connectTo (Lnet/minecraft/world/level/block/RailState;)V c
	connectsTo (Lnet/minecraft/world/level/block/RailState;)Z a
	countPotentialConnections ()I b
	getConnections ()Ljava/util/List; a
	getRail (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/RailState; b
	getState ()Lnet/minecraft/world/level/block/state/BlockState; c
	hasConnection (Lnet/minecraft/core/BlockPos;)Z c
	hasNeighborRail (Lnet/minecraft/core/BlockPos;)Z d
	hasRail (Lnet/minecraft/core/BlockPos;)Z a
	place (ZZLnet/minecraft/world/level/block/state/properties/RailShape;)Lnet/minecraft/world/level/block/RailState; a
	removeSoftConnections ()V d
	updateConnections (Lnet/minecraft/world/level/block/state/properties/RailShape;)V a
net/minecraft/world/level/block/RedStoneOreBlock net/minecraft/world/level/block/BlockRedstoneOre
	LIT a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	interact (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	spawnParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RedStoneWireBlock net/minecraft/world/level/block/BlockRedstoneWire
	COLORS G
	E i
	EAST b
	H g
	N j
	NORTH a
	PARTICLE_DENSITY H
	POWER e
	PROPERTY_BY_DIRECTION f
	S k
	SHAPES_CACHE F
	SHAPES_FLOOR m
	SHAPES_UP n
	SHAPE_DOT l
	SOUTH c
	W h
	WEST d
	crossState I
	shouldSignal J
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; n
	calculateTargetStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	checkCornerChangeAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getColorForPower (I)I b
	getConnectingSide (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/RedstoneSide; a
	getConnectingSide (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/level/block/state/properties/RedstoneSide; a
	getConnectionState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getMissingConnections (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getWireSignal (Lnet/minecraft/world/level/block/state/BlockState;)I q
	isCross (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isDot (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnParticlesAlongLine (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;FF)V a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateNeighborsOfNeighboringWires (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	updatePowerStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updatesOnShapeChange (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RedstoneLampBlock net/minecraft/world/level/block/BlockRedstoneLamp
	LIT a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/RedstoneTorchBlock net/minecraft/world/level/block/BlockRedstoneTorch
	LIT a
	MAX_RECENT_TOGGLES c
	RECENT_TOGGLES e
	RECENT_TOGGLE_TIMER b
	RESTART_DELAY d
	TOGGLE_DELAY f
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	isToggledTooFrequently (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/RedstoneTorchBlock$Toggle net/minecraft/world/level/block/BlockRedstoneTorch$RedstoneUpdateInfo
	pos a
	when b
net/minecraft/world/level/block/RedstoneWallTorchBlock net/minecraft/world/level/block/BlockRedstoneTorchWall
	FACING e
	LIT f
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/RenderShape net/minecraft/world/level/block/EnumRenderType
	$VALUES d
	ENTITYBLOCK_ANIMATED b
	INVISIBLE a
	MODEL c
	$values ()[Lnet/minecraft/world/level/block/RenderShape; a
net/minecraft/world/level/block/RepeaterBlock net/minecraft/world/level/block/BlockRepeater
	DELAY d
	LOCKED a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isAlternateInput (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isLocked (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RespawnAnchorBlock net/minecraft/world/level/block/BlockRespawnAnchor
	CHARGE c
	MAX_CHARGES b
	MIN_CHARGES a
	RESPAWN_HORIZONTAL_OFFSETS d
	RESPAWN_OFFSETS e
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeCharged (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSetSpawn (Lnet/minecraft/world/level/Level;)Z a
	charge (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	explode (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getScaledChargeLevel (Lnet/minecraft/world/level/block/state/BlockState;I)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRespawnFuel (Lnet/minecraft/world/item/ItemStack;)Z a
	isWaterThatWouldFlow (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RootsBlock net/minecraft/world/level/block/BlockRoots
	AABB_OFFSET a
	SHAPE b
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; T_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/RotatedPillarBlock net/minecraft/world/level/block/BlockRotatable
	AXIS g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotatePillar (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/world/level/block/Rotation net/minecraft/world/level/block/EnumBlockRotation
	$VALUES f
	CLOCKWISE_180 c
	CLOCKWISE_90 b
	COUNTERCLOCKWISE_90 d
	NONE a
	rotation e
	$values ()[Lnet/minecraft/world/level/block/Rotation; b
	getRandom (Ljava/util/Random;)Lnet/minecraft/world/level/block/Rotation; a
	getRotated (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/Rotation; a
	getShuffled (Ljava/util/Random;)Ljava/util/List; b
	rotate (II)I a
	rotate (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	rotation ()Lcom/mojang/math/OctahedralGroup; a
net/minecraft/world/level/block/SandBlock net/minecraft/world/level/block/BlockSand
	dustColor a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
net/minecraft/world/level/block/SaplingBlock net/minecraft/world/level/block/BlockSapling
	AABB_OFFSET b
	SHAPE c
	STAGE a
	treeGrower d
	advanceTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/ScaffoldingBlock net/minecraft/world/level/block/BlockScaffolding
	BELOW_BLOCK i
	BOTTOM d
	DISTANCE b
	STABILITY_MAX_DISTANCE a
	STABLE_SHAPE f
	TICK_DELAY e
	UNSTABLE_SHAPE g
	UNSTABLE_SHAPE_BOTTOM h
	WATERLOGGED c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDistance (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBottom (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;I)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SeaPickleBlock net/minecraft/world/level/block/BlockSeaPickle
	FOUR_AABB g
	MAX_PICKLES a
	ONE_AABB d
	PICKLES b
	THREE_AABB f
	TWO_AABB e
	WATERLOGGED c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDead (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ShulkerBoxBlock net/minecraft/world/level/block/BlockShulkerBox
	CONTENTS b
	FACING a
	color c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	canOpen (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockByColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getColor ()Lnet/minecraft/world/item/DyeColor; c
	getColorFromBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/DyeColor; a
	getColorFromItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/DyeColor; b
	getColoredItemStack (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/ItemStack; b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SignBlock net/minecraft/world/level/block/BlockSign
	AABB_OFFSET b
	SHAPE c
	WATERLOGGED a
	type d
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPossibleToRespawnInThis ()Z X_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	type ()Lnet/minecraft/world/level/block/state/properties/WoodType; e
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SimpleWaterloggedBlock net/minecraft/world/level/block/IBlockWaterlogged
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getPickupSound ()Ljava/util/Optional; W_
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/SkullBlock net/minecraft/world/level/block/BlockSkull
	MAX a
	ROTATION b
	ROTATIONS d
	SHAPE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SkullBlock$Type cje$a
net/minecraft/world/level/block/SkullBlock$Types net/minecraft/world/level/block/BlockSkull$Type
	$VALUES g
	CREEPER e
	DRAGON f
	PLAYER c
	SKELETON a
	WITHER_SKELETON b
	ZOMBIE d
	$values ()[Lnet/minecraft/world/level/block/SkullBlock$Types; a
net/minecraft/world/level/block/SlabBlock net/minecraft/world/level/block/BlockStepAbstract
	BOTTOM_AABB c
	TOP_AABB d
	TYPE a
	WATERLOGGED b
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SlimeBlock net/minecraft/world/level/block/BlockSlime
	bounceUp (Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/SmithingTableBlock net/minecraft/world/level/block/BlockSmithingTable
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SmokerBlock net/minecraft/world/level/block/BlockSmoker
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/SnowLayerBlock net/minecraft/world/level/block/BlockSnow
	HEIGHT_IMPASSABLE d
	LAYERS b
	MAX_HEIGHT a
	SHAPE_BY_LAYER c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SnowyDirtBlock net/minecraft/world/level/block/BlockDirtSnow
	SNOWY a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSnowySetting (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoulFireBlock net/minecraft/world/level/block/BlockSoulFire
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOnBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoulSandBlock net/minecraft/world/level/block/BlockSlowSand
	BUBBLE_COLUMN_CHECK_DELAY b
	SHAPE a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoundType net/minecraft/world/level/block/SoundEffectType
	AMETHYST X
	AMETHYST_CLUSTER Y
	ANCIENT_DEBRIS R
	ANVIL m
	AZALEA aj
	AZALEA_LEAVES ar
	BAMBOO r
	BAMBOO_SAPLING s
	BASALT J
	BIG_DRIPLEAF an
	BONE_BLOCK P
	CALCITE ad
	CANDLE W
	CAVE_VINES ah
	CHAIN T
	COPPER ag
	CORAL_BLOCK q
	CROP v
	DEEPSLATE au
	DEEPSLATE_BRICKS av
	DEEPSLATE_TILES aw
	DRIPSTONE_BLOCK ae
	FLOWERING_AZALEA ak
	FUNGUS C
	GILDED_BLACKSTONE V
	GLASS g
	GLOW_LICHEN at
	GRASS c
	GRAVEL b
	HANGING_ROOTS aq
	HARD_CROP w
	HONEY_BLOCK o
	LADDER l
	LANTERN z
	LARGE_AMETHYST_BUD ab
	LILY_PAD d
	LODESTONE S
	MEDIUM_AMETHYST_BUD aa
	METAL f
	MOSS am
	MOSS_CARPET al
	NETHERITE_BLOCK Q
	NETHERRACK L
	NETHER_BRICKS M
	NETHER_GOLD_ORE U
	NETHER_ORE O
	NETHER_SPROUTS N
	NETHER_WART y
	NYLIUM B
	POINTED_DRIPSTONE af
	POLISHED_DEEPSLATE ax
	POWDER_SNOW k
	ROOTED_DIRT ap
	ROOTS D
	SAND i
	SCAFFOLDING t
	SCULK_SENSOR as
	SHROOMLIGHT E
	SLIME_BLOCK n
	SMALL_AMETHYST_BUD Z
	SMALL_DRIPLEAF ao
	SNOW j
	SOUL_SAND H
	SOUL_SOIL I
	SPORE_BLOSSOM ai
	STEM A
	STONE e
	SWEET_BERRY_BUSH u
	TUFF ac
	TWISTING_VINES G
	VINE x
	WART_BLOCK K
	WEEPING_VINES F
	WET_GRASS p
	WOOD a
	WOOL h
	breakSound aA
	fallSound aE
	hitSound aD
	pitch az
	placeSound aC
	stepSound aB
	volume ay
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; c
	getFallSound ()Lnet/minecraft/sounds/SoundEvent; g
	getHitSound ()Lnet/minecraft/sounds/SoundEvent; f
	getPitch ()F b
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; e
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; d
	getVolume ()F a
net/minecraft/world/level/block/SpawnerBlock net/minecraft/world/level/block/BlockMobSpawner
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/SpongeBlock net/minecraft/world/level/block/BlockSponge
	MAX_COUNT b
	MAX_DEPTH a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	removeWaterBreadthFirstSearch (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z b
	tryAbsorbWater (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/SpreadingSnowyDirtBlock net/minecraft/world/level/block/BlockDirtSnowSpreadable
	canBeGrass (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	canPropagate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/StainedGlassBlock net/minecraft/world/level/block/BlockStainedGlass
	color a
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/StainedGlassPaneBlock net/minecraft/world/level/block/BlockStainedGlassPane
	color i
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/StairBlock net/minecraft/world/level/block/BlockStairs
	BOTTOM_AABB f
	BOTTOM_SHAPES G
	FACING a
	HALF b
	OCTET_NNN g
	OCTET_NNP h
	OCTET_NPN i
	OCTET_NPP j
	OCTET_PNN k
	OCTET_PNP l
	OCTET_PPN m
	OCTET_PPP n
	SHAPE c
	SHAPE_BY_STATE H
	TOP_AABB e
	TOP_SHAPES F
	WATERLOGGED d
	base I
	baseState J
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canTakeShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getExplosionResistance ()F f
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShapeIndex (Lnet/minecraft/world/level/block/state/BlockState;)I n
	getStairsShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/properties/StairsShape; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isStairs (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	makeShapes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	makeStairShape (ILnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/StandingSignBlock net/minecraft/world/level/block/BlockFloorSign
	ROTATION d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/StemBlock net/minecraft/world/level/block/BlockStem
	AABB_OFFSET c
	AGE b
	MAX_AGE a
	SHAPE_BY_AGE d
	fruit e
	seedSupplier f
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFruit ()Lnet/minecraft/world/level/block/StemGrownBlock; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/StemGrownBlock net/minecraft/world/level/block/BlockStemmed
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; d
	getStem ()Lnet/minecraft/world/level/block/StemBlock; c
net/minecraft/world/level/block/StoneButtonBlock net/minecraft/world/level/block/BlockStoneButton
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/level/block/StonecutterBlock net/minecraft/world/level/block/BlockStonecutter
	CONTAINER_TITLE c
	FACING a
	SHAPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/StructureBlock net/minecraft/world/level/block/BlockStructure
	MODE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	trigger (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/StructureVoidBlock net/minecraft/world/level/block/BlockStructureVoid
	SHAPE b
	SIZE a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/SugarCaneBlock net/minecraft/world/level/block/BlockReed
	AABB_OFFSET b
	AGE a
	SHAPE c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SupportType net/minecraft/world/level/block/EnumBlockSupport
	$VALUES d
	CENTER b
	FULL a
	RIGID c
	$values ()[Lnet/minecraft/world/level/block/SupportType; a
	isSupporting (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/SweetBerryBushBlock net/minecraft/world/level/block/BlockSweetBerryBush
	AGE b
	HURT_SPEED_THRESHOLD c
	MAX_AGE a
	MID_GROWTH_SHAPE e
	SAPLING_SHAPE d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/TallFlowerBlock net/minecraft/world/level/block/BlockTallPlantFlower
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TallGrassBlock net/minecraft/world/level/block/BlockLongGrass
	AABB_OFFSET a
	SHAPE b
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; T_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TargetBlock net/minecraft/world/level/block/BlockTarget
	ACTIVATION_TICKS_ARROWS b
	ACTIVATION_TICKS_OTHER c
	OUTPUT_POWER a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRedstoneStrength (Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/phys/Vec3;)I a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	setOutputPower (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/core/BlockPos;I)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateRedstoneOutput (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/Entity;)I a
net/minecraft/world/level/block/TntBlock net/minecraft/world/level/block/BlockTNT
	UNSTABLE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropFromExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	explode (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	explode (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/TorchBlock net/minecraft/world/level/block/BlockTorch
	AABB h
	AABB_STANDING_OFFSET g
	flameParticle i
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/TrapDoorBlock net/minecraft/world/level/block/BlockTrapdoor
	AABB_THICKNESS e
	BOTTOM_AABB j
	EAST_OPEN_AABB f
	HALF b
	NORTH_OPEN_AABB i
	OPEN a
	POWERED c
	SOUTH_OPEN_AABB h
	TOP_AABB k
	WATERLOGGED d
	WEST_OPEN_AABB g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/TrappedChestBlock net/minecraft/world/level/block/BlockChestTrapped
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getOpenChestStat ()Lnet/minecraft/stats/Stat; d
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/TripWireBlock net/minecraft/world/level/block/BlockTripwire
	AABB h
	ATTACHED b
	DISARMED c
	EAST e
	NORTH d
	NOT_ATTACHED_AABB i
	POWERED a
	PROPERTY_BY_DIRECTION j
	RECHECK_PERIOD k
	SOUTH f
	WEST g
	hook l
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateSource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TripWireHookBlock net/minecraft/world/level/block/BlockTripwireHook
	AABB_OFFSET f
	ATTACHED c
	EAST_AABB j
	FACING a
	NORTH_AABB g
	POWERED b
	RECHECK_PERIOD k
	SOUTH_AABB h
	WEST_AABB i
	WIRE_DIST_MAX e
	WIRE_DIST_MIN d
	calculateState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZILnet/minecraft/world/level/block/state/BlockState;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	notifyNeighbors (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZZZZ)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/TurtleEggBlock net/minecraft/world/level/block/BlockTurtleEgg
	EGGS e
	HATCH d
	MAX_EGGS c
	MAX_HATCH_LEVEL a
	MIN_EGGS b
	MULTIPLE_EGGS_AABB g
	ONE_EGG_AABB f
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canDestroyEgg (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	decreaseEggs (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	destroyEgg (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;I)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSand (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onSand (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	shouldUpdateHatchLevel (Lnet/minecraft/world/level/Level;)Z a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/TwistingVinesBlock net/minecraft/world/level/block/BlockTwistingVines
	SHAPE f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; c
net/minecraft/world/level/block/TwistingVinesPlantBlock net/minecraft/world/level/block/BlockTwistingVinesPlant
	SHAPE d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; d
net/minecraft/world/level/block/VineBlock net/minecraft/world/level/block/BlockVine
	AABB_OFFSET g
	EAST c
	EAST_AABB j
	NORTH b
	NORTH_AABB k
	PROPERTY_BY_DIRECTION f
	SOUTH d
	SOUTH_AABB l
	UP a
	UP_AABB h
	WEST e
	WEST_AABB i
	shapesCache m
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSpread (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	canSupportAtFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	copyRandomFaces (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; a
	countFaces (Lnet/minecraft/world/level/block/state/BlockState;)I o
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPropertyForFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getUpdatedState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; h
	hasFaces (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	hasHorizontalConnection (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	isAcceptableNeighbour (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallBannerBlock net/minecraft/world/level/block/BlockBannerWall
	FACING a
	SHAPES b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallBlock net/minecraft/world/level/block/BlockCobbleWall
	EAST_TEST J
	EAST_WALL b
	NORTH_TEST G
	NORTH_WALL c
	POST_COVER_WIDTH l
	POST_TEST F
	POST_WIDTH k
	SOUTH_TEST H
	SOUTH_WALL d
	UP a
	WALL_COVER_END n
	WALL_COVER_START m
	WALL_HEIGHT j
	WALL_WIDTH i
	WATERLOGGED f
	WEST_TEST I
	WEST_WALL e
	collisionShapeByIndex h
	shapeByIndex g
	applyWallShape (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/properties/WallSide;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	connectsTo (Lnet/minecraft/world/level/block/state/BlockState;ZLnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isConnected (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	isCovered (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (FFFFFF)Ljava/util/Map; a
	makeWallState (ZLnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/properties/WallSide; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldRaisePost (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	sideUpdate (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; a
	topUpdate (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZZZ)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateSides (Lnet/minecraft/world/level/block/state/BlockState;ZZZZLnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallSignBlock net/minecraft/world/level/block/BlockWallSign
	AABBS h
	AABB_BOTTOM f
	AABB_THICKNESS e
	AABB_TOP g
	FACING d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallSkullBlock net/minecraft/world/level/block/BlockSkullWall
	AABBS b
	FACING a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallTorchBlock net/minecraft/world/level/block/BlockTorchWall
	AABBS c
	AABB_OFFSET b
	FACING a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WaterlilyBlock net/minecraft/world/level/block/BlockWaterLily
	AABB a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/WeatheringCopper$WeatherState clb$a
	$VALUES e
	EXPOSED b
	OXIDIZED d
	UNAFFECTED a
	WEATHERED c
	$values ()[Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; a
net/minecraft/world/level/block/WebBlock net/minecraft/world/level/block/BlockWeb
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/WeepingVinesBlock net/minecraft/world/level/block/BlockWeepingVines
	SHAPE f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; c
net/minecraft/world/level/block/WeepingVinesPlantBlock net/minecraft/world/level/block/BlockWeepingVinesPlant
	SHAPE d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; d
net/minecraft/world/level/block/WeightedPressurePlateBlock net/minecraft/world/level/block/BlockPressurePlateWeighted
	POWER d
	maxWeight e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPressedTime ()I c
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WetSpongeBlock net/minecraft/world/level/block/BlockWetSponge
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/WitherRoseBlock net/minecraft/world/level/block/BlockWitherRose
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/WitherSkullBlock net/minecraft/world/level/block/BlockWitherSkull
	witherPatternBase e
	witherPatternFull d
	canSpawnMob (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z b
	checkSpawn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/SkullBlockEntity;)V a
	getOrCreateWitherBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; q
	getOrCreateWitherFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; c
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/WitherWallSkullBlock net/minecraft/world/level/block/BlockWitherSkullWall
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/WoodButtonBlock net/minecraft/world/level/block/BlockWoodButton
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/level/block/WoolCarpetBlock net/minecraft/world/level/block/BlockCarpet
	color b
	getColor ()Lnet/minecraft/world/item/DyeColor; c
net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity net/minecraft/world/level/block/entity/TileEntityFurnace
	BURN_COOL_SPEED k
	BURN_TIME_STANDARD j
	DATA_COOKING_PROGRESS g
	DATA_COOKING_TOTAL_TIME h
	DATA_LIT_DURATION f
	DATA_LIT_TIME e
	NUM_DATA_VALUES i
	SLOTS_FOR_DOWN r
	SLOTS_FOR_SIDES s
	SLOTS_FOR_UP q
	SLOT_FUEL c
	SLOT_INPUT b
	SLOT_RESULT d
	cookingProgress v
	cookingTotalTime w
	dataAccess m
	items l
	litDuration u
	litTime t
	recipeType y
	recipesUsed x
	add (Ljava/util/Map;Lnet/minecraft/tags/Tag;I)V a
	add (Ljava/util/Map;Lnet/minecraft/world/level/ItemLike;I)V a
	awardUsedRecipes (Lnet/minecraft/world/entity/player/Player;)V b
	awardUsedRecipesAndPopExperience (Lnet/minecraft/server/level/ServerPlayer;)V a
	burn (Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/core/NonNullList;I)Z b
	canBurn (Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/core/NonNullList;I)Z a
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	clearContent ()V a
	createExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;IF)V a
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getContainerSize ()I b
	getFuel ()Ljava/util/Map; f
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; d
	getRecipesToAwardAndPopExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Ljava/util/List; a
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	getTotalCookTime (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;)I a
	isEmpty ()Z c
	isFuel (Lnet/minecraft/world/item/ItemStack;)Z b
	isLit ()Z i
	isNeverAFurnaceFuel (Lnet/minecraft/world/item/Item;)Z b
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity;)V a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/BannerBlockEntity net/minecraft/world/level/block/entity/TileEntityBanner
	MAX_PATTERNS a
	TAG_COLOR d
	TAG_PATTERN c
	TAG_PATTERNS b
	baseColor f
	itemPatterns g
	name e
	patterns h
	createPatterns (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/nbt/ListTag;)Ljava/util/List; a
	fromItem (Lnet/minecraft/world/item/ItemStack;)V b
	fromItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/DyeColor;)V a
	getBaseColor ()Lnet/minecraft/world/item/DyeColor; g
	getCustomName ()Lnet/minecraft/network/chat/Component; Z
	getItem ()Lnet/minecraft/world/item/ItemStack; f
	getItemPatterns (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/ListTag; a
	getName ()Lnet/minecraft/network/chat/Component; X
	getPatternCount (Lnet/minecraft/world/item/ItemStack;)I c
	getPatterns ()Ljava/util/List; c
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeLastPattern (Lnet/minecraft/world/item/ItemStack;)V d
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/BannerPattern net/minecraft/world/level/block/entity/EnumBannerPatternType
	$VALUES W
	AVAILABLE_PATTERNS R
	BASE a
	BORDER E
	BRICKS I
	CIRCLE_MIDDLE y
	COUNT P
	CREEPER K
	CROSS o
	CURLY_BORDER F
	DIAGONAL_LEFT u
	DIAGONAL_LEFT_MIRROR w
	DIAGONAL_RIGHT v
	DIAGONAL_RIGHT_MIRROR x
	FLOWER M
	GLOBE J
	GRADIENT G
	GRADIENT_UP H
	HALF_HORIZONTAL B
	HALF_HORIZONTAL_MIRROR D
	HALF_VERTICAL A
	HALF_VERTICAL_MIRROR C
	MOJANG N
	PATTERN_ITEM_COUNT Q
	PIGLIN O
	RHOMBUS_MIDDLE z
	SKULL L
	SQUARE_BOTTOM_LEFT b
	SQUARE_BOTTOM_RIGHT c
	SQUARE_TOP_LEFT d
	SQUARE_TOP_RIGHT e
	STRAIGHT_CROSS p
	STRIPE_BOTTOM f
	STRIPE_CENTER j
	STRIPE_DOWNLEFT m
	STRIPE_DOWNRIGHT l
	STRIPE_LEFT h
	STRIPE_MIDDLE k
	STRIPE_RIGHT i
	STRIPE_SMALL n
	STRIPE_TOP g
	TRIANGLES_BOTTOM s
	TRIANGLES_TOP t
	TRIANGLE_BOTTOM q
	TRIANGLE_TOP r
	VALUES S
	filename U
	hasPatternItem T
	hashname V
	$values ()[Lnet/minecraft/world/level/block/entity/BannerPattern; c
	byFilename (Ljava/lang/String;)Lnet/minecraft/world/level/block/entity/BannerPattern; b
	byHash (Ljava/lang/String;)Lnet/minecraft/world/level/block/entity/BannerPattern; a
	getFilename ()Ljava/lang/String; a
	getHashname ()Ljava/lang/String; b
	location (Z)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/block/entity/BannerPattern$Builder clr$a
	patterns a
	addPattern (Lcom/mojang/datafixers/util/Pair;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	addPattern (Lnet/minecraft/world/level/block/entity/BannerPattern;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	toListTag ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/world/level/block/entity/BarrelBlockEntity net/minecraft/world/level/block/entity/TileEntityBarrel
	items b
	openersCounter c
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)V a
	recheckOpen ()V i
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	updateBlockState (Lnet/minecraft/world/level/block/state/BlockState;Z)V a
net/minecraft/world/level/block/entity/BaseContainerBlockEntity net/minecraft/world/level/block/entity/TileEntityContainer
	lockKey b
	name c
	canOpen (Lnet/minecraft/world/entity/player/Player;)Z d
	canUnlock (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/LockCode;Lnet/minecraft/network/chat/Component;)Z a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getCustomName ()Lnet/minecraft/network/chat/Component; Z
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
	getName ()Lnet/minecraft/network/chat/Component; X
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/BeaconBlockEntity net/minecraft/world/level/block/entity/TileEntityBeacon
	BEACON_EFFECTS a
	BLOCKS_CHECK_PER_TICK h
	DATA_LEVELS b
	DATA_PRIMARY c
	DATA_SECONDARY d
	MAX_LEVELS f
	NUM_DATA_VALUES e
	VALID_EFFECTS g
	beamSections i
	checkingBeamSections j
	dataAccess t
	lastCheckY l
	levels k
	lockKey s
	name r
	primaryPower m
	secondaryPower q
	applyEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/effect/MobEffect;)V a
	getBeamSections ()Ljava/util/List; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; f
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	getValidEffectById (I)Lnet/minecraft/world/effect/MobEffect; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRemoved ()V aa_
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)V a
	updateBase (Lnet/minecraft/world/level/Level;III)I a
net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection net/minecraft/world/level/block/entity/TileEntityBeacon$BeaconColorTracker
	color a
	height b
	getColor ()[F b
	getHeight ()I c
	increaseHeight ()V a
net/minecraft/world/level/block/entity/BedBlockEntity net/minecraft/world/level/block/entity/TileEntityBed
	color a
	getColor ()Lnet/minecraft/world/item/DyeColor; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	setColor (Lnet/minecraft/world/item/DyeColor;)V a
net/minecraft/world/level/block/entity/BeehiveBlockEntity net/minecraft/world/level/block/entity/TileEntityBeehive
	BEES f
	ENTITY_DATA c
	HAS_NECTAR e
	IGNORED_BEE_TAGS i
	MAX_OCCUPANTS g
	MIN_OCCUPATION_TICKS b
	MIN_OCCUPATION_TICKS_NECTAR k
	MIN_OCCUPATION_TICKS_NECTARLESS h
	MIN_TICKS_BEFORE_REENTERING_HIVE j
	TAG_FLOWER_POS a
	TICKS_IN_HIVE d
	savedFlowerPos m
	stored l
	addOccupant (Lnet/minecraft/world/entity/Entity;Z)V a
	addOccupantWithPresetTicks (Lnet/minecraft/world/entity/Entity;ZI)V a
	emptyAllLivingFromHive (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)V a
	getHoneyLevel (Lnet/minecraft/world/level/block/state/BlockState;)I a
	getOccupantCount ()I g
	hasSavedFlowerPos ()Z v
	isEmpty ()Z d
	isFireNearby ()Z c
	isFull ()Z f
	isSedated ()Z i
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	releaseAllOccupants (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)Ljava/util/List; a
	releaseOccupant (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData;Ljava/util/List;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;Lnet/minecraft/core/BlockPos;)Z a
	removeIgnoredBeeTags (Lnet/minecraft/nbt/CompoundTag;)V d
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity;)V a
	setBeeReleaseData (ILnet/minecraft/world/entity/animal/Bee;)V a
	setChanged ()V e
	storeBee (Lnet/minecraft/nbt/CompoundTag;IZ)V a
	tickOccupants (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/List;Lnet/minecraft/core/BlockPos;)V a
	writeBees ()Lnet/minecraft/nbt/ListTag; j
net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData net/minecraft/world/level/block/entity/TileEntityBeehive$HiveBee
	entityData a
	minOccupationTicks c
	ticksInHive b
net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus net/minecraft/world/level/block/entity/TileEntityBeehive$ReleaseStatus
	$VALUES d
	BEE_RELEASED b
	EMERGENCY c
	HONEY_DELIVERED a
	$values ()[Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus; a
net/minecraft/world/level/block/entity/BellBlockEntity net/minecraft/world/level/block/entity/TileEntityBell
	DURATION d
	GLOW_DURATION e
	HEAR_BELL_RADIUS j
	HIGHLIGHT_RAIDERS_RADIUS k
	MAX_RESONATION_TICKS g
	MIN_TICKS_BETWEEN_SEARCHES f
	SEARCH_RADIUS i
	TICKS_BEFORE_RESONATION h
	clickDirection c
	lastRingTimestamp l
	nearbyEntities m
	resonating q
	resonationTicks r
	shaking b
	ticks a
	areRaidersNearby (Lnet/minecraft/core/BlockPos;Ljava/util/List;)Z a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;)V a
	glow (Lnet/minecraft/world/entity/LivingEntity;)V a
	isRaiderWithinRange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeRaidersGlow (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	onHit (Lnet/minecraft/core/Direction;)V a
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;)V b
	showBellParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;Lnet/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction;)V a
	triggerEvent (II)Z a_
	updateEntities ()V c
net/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction clx$a
net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity net/minecraft/world/level/block/entity/TileEntityBlastFurnace
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/BlockEntity net/minecraft/world/level/block/entity/TileEntity
	LOGGER b
	blockState d
	level n
	remove p
	type c
	worldPosition o
	addEntityType (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/block/entity/BlockEntityType;)V a
	clearRemoved ()V s
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getBlockPos ()Lnet/minecraft/core/BlockPos; p
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getLevel ()Lnet/minecraft/world/level/Level; k
	getPosFromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/core/BlockPos; c
	getType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; u
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	hasLevel ()Z l
	isRemoved ()Z r
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadStatic (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onlyOpCanSetNbt ()Z t
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	saveId (Lnet/minecraft/nbt/CompoundTag;)V d
	saveMetadata (Lnet/minecraft/nbt/CompoundTag;)V e
	saveToItem (Lnet/minecraft/world/item/ItemStack;)V e
	saveWithFullMetadata ()Lnet/minecraft/nbt/CompoundTag; m
	saveWithId ()Lnet/minecraft/nbt/CompoundTag; n
	saveWithoutMetadata ()Lnet/minecraft/nbt/CompoundTag; o
	setBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V b
	setChanged ()V e
	setChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRemoved ()V aa_
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/BlockEntityType net/minecraft/world/level/block/entity/TileEntityTypes
	BANNER s
	BARREL z
	BEACON n
	BED x
	BEEHIVE G
	BELL D
	BLAST_FURNACE B
	BREWING_STAND k
	CAMPFIRE F
	CHEST b
	COMMAND_BLOCK v
	COMPARATOR r
	CONDUIT y
	DAYLIGHT_DETECTOR p
	DISPENSER f
	DROPPER g
	ENCHANTING_TABLE l
	ENDER_CHEST d
	END_GATEWAY u
	END_PORTAL m
	FURNACE a
	HOPPER q
	JIGSAW E
	JUKEBOX e
	LECTERN C
	LOGGER I
	MOB_SPAWNER i
	PISTON j
	SCULK_SENSOR H
	SHULKER_BOX w
	SIGN h
	SKULL o
	SMOKER A
	STRUCTURE_BLOCK t
	TRAPPED_CHEST c
	dataType L
	factory J
	validBlocks K
	create (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockEntity (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getKey (Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/resources/ResourceLocation; a
	isValid (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/block/entity/BlockEntityType$Builder;)Lnet/minecraft/world/level/block/entity/BlockEntityType; a
net/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier cmb$a
net/minecraft/world/level/block/entity/BlockEntityType$Builder cmb$b
	factory a
	validBlocks b
	build (Lcom/mojang/datafixers/types/Type;)Lnet/minecraft/world/level/block/entity/BlockEntityType; a
	of (Lnet/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/entity/BlockEntityType$Builder; a
net/minecraft/world/level/block/entity/BrewingStandBlockEntity net/minecraft/world/level/block/entity/TileEntityBrewingStand
	DATA_BREW_TIME c
	DATA_FUEL_USES d
	FUEL_SLOT h
	FUEL_USES b
	INGREDIENT_SLOT g
	NUM_DATA_VALUES e
	SLOTS_FOR_DOWN j
	SLOTS_FOR_SIDES k
	SLOTS_FOR_UP i
	brewTime m
	dataAccess f
	fuel s
	ingredient r
	items l
	lastPotionCount q
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	clearContent ()V a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	doBrew (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/NonNullList;)V a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getPotionBits ()[Z f
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	isBrewable (Lnet/minecraft/core/NonNullList;)Z a
	isEmpty ()Z c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BrewingStandBlockEntity;)V a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/CampfireBlockEntity net/minecraft/world/level/block/entity/TileEntityCampfire
	BURN_COOL_SPEED a
	NUM_SLOTS b
	cookingProgress d
	cookingTime e
	items c
	clearContent ()V a
	cookTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V a
	cooldownTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V b
	dowse ()V f
	getCookableRecipe (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	getItems ()Lnet/minecraft/core/NonNullList; c
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; d
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	markUpdated ()V g
	particleTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V c
	placeFood (Lnet/minecraft/world/item/ItemStack;I)Z a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
net/minecraft/world/level/block/entity/ChestBlockEntity net/minecraft/world/level/block/entity/TileEntityChest
	EVENT_SET_OPEN_COUNT b
	chestLidController i
	items c
	openersCounter f
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getOpenCount (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getOpenNess (F)F a
	lidAnimateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ChestBlockEntity;)V a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)V a
	recheckOpen ()V i
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
	signalOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	swapContents (Lnet/minecraft/world/level/block/entity/ChestBlockEntity;Lnet/minecraft/world/level/block/entity/ChestBlockEntity;)V a
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/CommandBlockEntity net/minecraft/world/level/block/entity/TileEntityCommand
	auto b
	commandBlock d
	conditionMet c
	powered a
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; c
	getMode ()Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; v
	isAutomatic ()Z f
	isConditional ()Z w
	isPowered ()Z d
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	markConditionMet ()Z j
	onModeSwitch ()V g
	onlyOpCanSetNbt ()Z t
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	scheduleTick ()V x
	setAutomatic (Z)V b
	setPowered (Z)V a
	wasConditionMet ()Z i
net/minecraft/world/level/block/entity/CommandBlockEntity$Mode net/minecraft/world/level/block/entity/TileEntityCommand$Type
	$VALUES d
	AUTO b
	REDSTONE c
	SEQUENCE a
	$values ()[Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; a
net/minecraft/world/level/block/entity/ComparatorBlockEntity net/minecraft/world/level/block/entity/TileEntityComparator
	output a
	getOutputSignal ()I c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setOutputSignal (I)V a
net/minecraft/world/level/block/entity/ConduitBlockEntity net/minecraft/world/level/block/entity/TileEntityConduit
	BLOCK_REFRESH_RATE b
	EFFECT_DURATION c
	KILL_RANGE g
	MIN_ACTIVE_SIZE e
	MIN_KILL_SIZE f
	ROTATION_SPEED d
	VALID_BLOCKS h
	activeRotation i
	destroyTarget m
	destroyTargetUUID q
	effectBlocks l
	isActive j
	isHunting k
	nextAmbientSoundActivation r
	tickCount a
	animationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/world/entity/Entity;I)V a
	applyEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V b
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	findDestroyTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/UUID;)Lnet/minecraft/world/entity/LivingEntity; a
	getActiveRotation (F)F a
	getDestroyRangeAABB (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	isActive ()Z d
	isHunting ()Z f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V b
	setHunting (Z)V a
	updateClientTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	updateDestroyTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/List;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	updateHunting (Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;Ljava/util/List;)V a
	updateShape (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)Z a
net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity net/minecraft/world/level/block/entity/TileEntityLightDetector
net/minecraft/world/level/block/entity/DispenserBlockEntity net/minecraft/world/level/block/entity/TileEntityDispenser
	CONTAINER_SIZE b
	RANDOM c
	items f
	addItem (Lnet/minecraft/world/item/ItemStack;)I a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getRandomSlot ()I i
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
net/minecraft/world/level/block/entity/DropperBlockEntity net/minecraft/world/level/block/entity/TileEntityDropper
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity net/minecraft/world/level/block/entity/TileEntityEnchantTable
	RANDOM k
	flip b
	flipA e
	flipT d
	name l
	oFlip c
	oOpen g
	oRot i
	open f
	rot h
	tRot j
	time a
	bookAnimationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/EnchantmentTableBlockEntity;)V a
	getCustomName ()Lnet/minecraft/network/chat/Component; Z
	getName ()Lnet/minecraft/network/chat/Component; X
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/EnderChestBlockEntity net/minecraft/world/level/block/entity/TileEntityEnderChest
	chestLidController a
	openersCounter b
	getOpenNess (F)F a
	lidAnimateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)V a
	recheckOpen ()V c
	startOpen (Lnet/minecraft/world/entity/player/Player;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z c
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/FurnaceBlockEntity net/minecraft/world/level/block/entity/TileEntityFurnaceFurnace
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/Hopper net/minecraft/world/level/block/entity/IHopper
	ABOVE t_
	INSIDE k_
	SUCK u_
	getLevelX ()D y
	getLevelY ()D z
	getLevelZ ()D A
	getSuckShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; L_
net/minecraft/world/level/block/entity/HopperBlockEntity net/minecraft/world/level/block/entity/TileEntityHopper
	HOPPER_CONTAINER_SIZE f
	MOVE_ITEM_SPEED c
	cooldownTime j
	items i
	tickedGameTime k
	addItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/ItemStack; a
	addItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/entity/item/ItemEntity;)Z a
	canMergeItems (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	canPlaceItemInContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Z a
	canTakeItemFromContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Z b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	ejectItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/Container;)Z a
	entityInside (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;)V a
	getAttachedContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/Container; b
	getContainerAt (Lnet/minecraft/world/level/Level;DDD)Lnet/minecraft/world/Container; a
	getContainerAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/Container; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getItemsAtAndAbove (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Ljava/util/List; b
	getLevelX ()D y
	getLevelY ()D z
	getLevelZ ()D A
	getSlots (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Ljava/util/stream/IntStream; a
	getSourceContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Lnet/minecraft/world/Container; c
	inventoryFull ()Z i
	isEmptyContainer (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Z c
	isFullContainer (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Z b
	isOnCooldown ()Z j
	isOnCustomCooldown ()Z v
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	pushItemsTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCooldown (I)V c
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	suckInItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Z a
	tryMoveInItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Lnet/minecraft/world/item/ItemStack; a
	tryMoveItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;Ljava/util/function/BooleanSupplier;)Z a
	tryTakeInItemFromSlot (Lnet/minecraft/world/level/block/entity/Hopper;Lnet/minecraft/world/Container;ILnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/entity/JigsawBlockEntity net/minecraft/world/level/block/entity/TileEntityJigsaw
	FINAL_STATE e
	JOINT c
	NAME d
	POOL b
	TARGET a
	finalState j
	joint i
	name f
	pool h
	target g
	generate (Lnet/minecraft/server/level/ServerLevel;IZ)V a
	getFinalState ()Ljava/lang/String; g
	getJoint ()Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; i
	getName ()Lnet/minecraft/resources/ResourceLocation; c
	getPool ()Lnet/minecraft/resources/ResourceLocation; f
	getTarget ()Lnet/minecraft/resources/ResourceLocation; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; j
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setFinalState (Ljava/lang/String;)V a
	setJoint (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType;)V a
	setName (Lnet/minecraft/resources/ResourceLocation;)V a
	setPool (Lnet/minecraft/resources/ResourceLocation;)V c
	setTarget (Lnet/minecraft/resources/ResourceLocation;)V b
net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType net/minecraft/world/level/block/entity/TileEntityJigsaw$JointType
	$VALUES d
	ALIGNED b
	ROLLABLE a
	name c
	$values ()[Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; b
	byName (Ljava/lang/String;)Ljava/util/Optional; a
	getSerializedName ()Ljava/lang/String; c
	getTranslatedName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/level/block/entity/JukeboxBlockEntity net/minecraft/world/level/block/entity/TileEntityJukeBox
	record a
	clearContent ()V a
	getRecord ()Lnet/minecraft/world/item/ItemStack; c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setRecord (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/entity/LecternBlockEntity net/minecraft/world/level/block/entity/TileEntityLectern
	DATA_PAGE a
	NUM_DATA b
	NUM_SLOTS d
	SLOT_BOOK c
	book g
	bookAccess e
	dataAccess f
	page h
	pageCount i
	clearContent ()V a
	createCommandSourceStack (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/commands/CommandSourceStack; a
	getBook ()Lnet/minecraft/world/item/ItemStack; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
	getPage ()I g
	getRedstoneSignal ()I i
	hasBook ()Z f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onBookItemRemove ()V j
	onlyOpCanSetNbt ()Z t
	resolveBook (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setBook (Lnet/minecraft/world/item/ItemStack;)V a
	setBook (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)V a
	setPage (I)V a
net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity net/minecraft/world/level/block/entity/TileEntityLootable
	LOOT_TABLE_SEED_TAG e
	LOOT_TABLE_TAG d
	lootTable g
	lootTableSeed h
	canOpen (Lnet/minecraft/world/entity/player/Player;)Z d
	clearContent ()V a
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItems ()Lnet/minecraft/core/NonNullList; f
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	setLootTable (Lnet/minecraft/world/level/BlockGetter;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tryLoadLootTable (Lnet/minecraft/nbt/CompoundTag;)Z d
	trySaveLootTable (Lnet/minecraft/nbt/CompoundTag;)Z e
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V e
net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity net/minecraft/world/level/block/entity/TileEntityShulkerBox
	COLUMNS b
	CONTAINER_SIZE f
	EVENT_SET_OPEN_COUNT i
	ITEMS_TAG m
	MAX_LID_HEIGHT k
	MAX_LID_ROTATION l
	OPENING_TICK_LENGTH j
	ROWS c
	SLOTS q
	animationStatus t
	color w
	itemStacks r
	openCount s
	progress u
	progressOld v
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	doNeighborUpdates (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
	getAnimationStatus ()Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus; i
	getBoundingBox (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/AABB; a
	getColor ()Lnet/minecraft/world/item/DyeColor; j
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getProgress (F)F a
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	isClosed ()Z v
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadFromTag (Lnet/minecraft/nbt/CompoundTag;)V f
	moveCollidedEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;)V a
	triggerEvent (II)Z a_
	updateAnimation (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus net/minecraft/world/level/block/entity/TileEntityShulkerBox$AnimationPhase
	$VALUES e
	CLOSED a
	CLOSING d
	OPENED c
	OPENING b
	$values ()[Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus; a
net/minecraft/world/level/block/entity/SignBlockEntity net/minecraft/world/level/block/entity/TileEntitySign
	FILTERED_TEXT_FIELD_NAMES c
	LINES a
	RAW_TEXT_FIELD_NAMES b
	color j
	filteredMessages e
	hasGlowingText k
	isEditable f
	messages d
	playerWhoMayEdit g
	renderMessagedFiltered i
	renderMessages h
	createCommandSourceStack (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/commands/CommandSourceStack; b
	deserializeTextSafe (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; b
	executeClickCommands (Lnet/minecraft/server/level/ServerPlayer;)Z a
	getColor ()Lnet/minecraft/world/item/DyeColor; g
	getMessage (IZ)Lnet/minecraft/network/chat/Component; a
	getMessages (Z)[Lnet/minecraft/network/chat/Component; c
	getPlayerWhoMayEdit ()Ljava/util/UUID; f
	getRenderMessages (ZLjava/util/function/Function;)[Lnet/minecraft/util/FormattedCharSequence; a
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	hasGlowingText ()Z i
	isEditable ()Z d
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadLine (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	markUpdated ()V j
	onlyOpCanSetNbt ()Z t
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setAllowedPlayerEditor (Ljava/util/UUID;)V a
	setColor (Lnet/minecraft/world/item/DyeColor;)Z a
	setEditable (Z)V a
	setHasGlowingText (Z)Z b
	setMessage (ILnet/minecraft/network/chat/Component;)V a
	setMessage (ILnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/SkullBlockEntity net/minecraft/world/level/block/entity/TileEntitySkull
	TAG_SKULL_OWNER a
	isMovingMouth g
	mainThreadExecutor d
	mouthTickCount f
	owner e
	profileCache b
	sessionService c
	clear ()V c
	dragonHeadAnimation (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SkullBlockEntity;)V a
	getMouthAnimation (F)F a
	getOwnerProfile ()Lcom/mojang/authlib/GameProfile; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; f
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setOwner (Lcom/mojang/authlib/GameProfile;)V a
	setup (Lnet/minecraft/server/players/GameProfileCache;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Ljava/util/concurrent/Executor;)V a
	updateGameprofile (Lcom/mojang/authlib/GameProfile;Ljava/util/function/Consumer;)V a
	updateOwnerProfile ()V g
net/minecraft/world/level/block/entity/SmokerBlockEntity net/minecraft/world/level/block/entity/TileEntitySmoker
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/SpawnerBlockEntity net/minecraft/world/level/block/entity/TileEntityMobSpawner
	spawner a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;)V a
	getSpawner ()Lnet/minecraft/world/level/BaseSpawner; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onlyOpCanSetNbt ()Z t
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;)V b
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/StructureBlockEntity net/minecraft/world/level/block/entity/TileEntityStructure
	AUTHOR_TAG c
	MAX_OFFSET_PER_AXIS a
	MAX_SIZE_PER_AXIS b
	SCAN_CORNER_BLOCKS_RANGE d
	author f
	ignoreEntities m
	integrity t
	metaData g
	mirror j
	mode l
	powered q
	rotation k
	seed u
	showAir r
	showBoundingBox s
	structureName e
	structurePos h
	structureSize i
	calculateEnclosingBoundingBox (Lnet/minecraft/core/BlockPos;Ljava/util/stream/Stream;)Ljava/util/Optional; a
	createRandom (J)Ljava/util/Random; b
	createdBy (Lnet/minecraft/world/entity/LivingEntity;)V a
	detectSize ()Z C
	getIntegrity ()F A
	getMetaData ()Ljava/lang/String; x
	getMirror ()Lnet/minecraft/world/level/block/Mirror; v
	getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode; y
	getRelatedCorners (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; w
	getSeed ()J B
	getShowAir ()Z H
	getShowBoundingBox ()Z I
	getStructureName ()Ljava/lang/String; d
	getStructurePath ()Ljava/lang/String; f
	getStructurePos ()Lnet/minecraft/core/BlockPos; i
	getStructureSize ()Lnet/minecraft/core/Vec3i; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	hasStructureName ()Z g
	isIgnoreEntities ()Z z
	isPowered ()Z G
	isStructureLoadable ()Z F
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;)Z a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;Z)Z a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;ZLnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate;)Z a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	saveStructure ()Z D
	saveStructure (Z)Z b
	setIgnoreEntities (Z)V a
	setIntegrity (F)V a
	setMetaData (Ljava/lang/String;)V b
	setMirror (Lnet/minecraft/world/level/block/Mirror;)V a
	setMode (Lnet/minecraft/world/level/block/state/properties/StructureMode;)V a
	setPowered (Z)V c
	setRotation (Lnet/minecraft/world/level/block/Rotation;)V a
	setSeed (J)V a
	setShowAir (Z)V d
	setShowBoundingBox (Z)V e
	setStructureName (Ljava/lang/String;)V a
	setStructureName (Lnet/minecraft/resources/ResourceLocation;)V a
	setStructurePos (Lnet/minecraft/core/BlockPos;)V a
	setStructureSize (Lnet/minecraft/core/Vec3i;)V a
	unloadStructure ()V E
	updateBlockState ()V J
	usedBy (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType net/minecraft/world/level/block/entity/TileEntityStructure$UpdateType
	$VALUES e
	LOAD_AREA c
	SAVE_AREA b
	SCAN_AREA d
	UPDATE_DATA a
	$values ()[Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType; a
net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity net/minecraft/world/level/block/entity/TileEntityEndGateway
	ATTENTION_INTERVAL d
	COOLDOWN_TIME c
	EVENT_COOLDOWN e
	GATEWAY_HEIGHT_ABOVE_SURFACE f
	LOGGER a
	SPAWN_TIME b
	age g
	exactTeleport j
	exitPortal i
	teleportCooldown h
	beamAnimationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V a
	canEntityTeleport (Lnet/minecraft/world/entity/Entity;)Z a
	findExitPortalXZPosTentative (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; b
	findExitPosition (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findOrCreateValidTeleportPos (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findTallestBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	findValidSpawnInChunk (Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/core/BlockPos; a
	getChunk (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getCooldownPercent (F)F b
	getParticleAmount ()I g
	getSpawnPercent (F)F a
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; f
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	isChunkEmpty (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	isCoolingDown ()Z d
	isSpawning ()Z c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setExitPosition (Lnet/minecraft/core/BlockPos;Z)V a
	shouldRenderFace (Lnet/minecraft/core/Direction;)Z a
	spawnGatewayPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration;)V a
	teleportEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V a
	teleportTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V b
	triggerCooldown (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V c
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/TheEndPortalBlockEntity net/minecraft/world/level/block/entity/TileEntityEnderPortal
	shouldRenderFace (Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/entity/TrappedChestBlockEntity net/minecraft/world/level/block/entity/TileEntityChestTrapped
	signalOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
net/minecraft/world/level/block/grower/AbstractMegaTreeGrower net/minecraft/world/level/block/grower/WorldGenMegaTreeProvider
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	growTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
	isTwoByTwoSapling (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;II)Z a
	placeMega (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;II)Z a
net/minecraft/world/level/block/grower/AbstractTreeGrower net/minecraft/world/level/block/grower/WorldGenTreeProvider
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	growTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
	hasFlowers (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/block/grower/AcaciaTreeGrower net/minecraft/world/level/block/grower/WorldGenTreeProviderAcacia
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/BirchTreeGrower net/minecraft/world/level/block/grower/WorldGenTreeProviderBirch
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/DarkOakTreeGrower net/minecraft/world/level/block/grower/WorldGenMegaTreeProviderDarkOak
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/JungleTreeGrower net/minecraft/world/level/block/grower/WorldGenMegaTreeProviderJungle
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/OakTreeGrower net/minecraft/world/level/block/grower/WorldGenTreeProviderOak
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/SpruceTreeGrower net/minecraft/world/level/block/grower/WorldGenTreeProviderSpruce
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/piston/MovingPistonBlock net/minecraft/world/level/block/piston/BlockPistonMoving
	FACING a
	TYPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getBlockEntity (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity; a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	newMovingBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;ZZ)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/piston/PistonBaseBlock net/minecraft/world/level/block/piston/BlockPiston
	DOWN_AABB l
	EAST_AABB g
	EXTENDED b
	NORTH_AABB j
	PLATFORM_THICKNESS f
	SOUTH_AABB i
	TRIGGER_CONTRACT d
	TRIGGER_DROP e
	TRIGGER_EXTEND c
	UP_AABB k
	WEST_AABB h
	isSticky m
	checkIfExtend (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isPushable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;ZLnet/minecraft/core/Direction;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	moveBlocks (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/piston/PistonHeadBlock net/minecraft/world/level/block/piston/BlockPistonExtension
	AABB_OFFSET k
	DOWN_AABB j
	DOWN_ARM_AABB F
	EAST_AABB e
	EAST_ARM_AABB I
	EDGE_MAX m
	EDGE_MIN l
	NORTH_AABB h
	NORTH_ARM_AABB H
	PLATFORM d
	SHAPES_LONG R
	SHAPES_SHORT Q
	SHORT c
	SHORT_DOWN_ARM_AABB L
	SHORT_EAST_ARM_AABB O
	SHORT_NORTH_ARM_AABB N
	SHORT_SOUTH_ARM_AABB M
	SHORT_UP_ARM_AABB K
	SHORT_WEST_ARM_AABB P
	SOUTH_AABB g
	SOUTH_ARM_AABB G
	TYPE b
	UP_AABB i
	UP_ARM_AABB n
	WEST_AABB f
	WEST_ARM_AABB J
	calculateShape (Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isFittingBase (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (Z)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/piston/PistonMath net/minecraft/world/level/block/piston/PistonUtil
	getMovementArea (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/core/Direction;D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/level/block/piston/PistonMovingBlockEntity net/minecraft/world/level/block/piston/TileEntityPiston
	NOCLIP h
	PUSH_OFFSET c
	TICKS_TO_EXTEND b
	TICK_MOVEMENT a
	deathTicks l
	direction e
	extending f
	isSourcePiston g
	lastTicked k
	movedState d
	progress i
	progressO j
	finalTick ()V j
	fixEntityWithinPistonBase (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;D)V a
	getCollisionRelatedBlockState ()Lnet/minecraft/world/level/block/state/BlockState; w
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getDirection ()Lnet/minecraft/core/Direction; d
	getExtendedProgress (F)F e
	getLastTicked ()J v
	getMovedState ()Lnet/minecraft/world/level/block/state/BlockState; i
	getMovement (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/core/Direction;Lnet/minecraft/world/phys/AABB;)D a
	getMovementDirection ()Lnet/minecraft/core/Direction; g
	getProgress (F)F a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	getXOff (F)F b
	getYOff (F)F c
	getZOff (F)F d
	isExtending ()Z c
	isSourcePiston ()Z f
	isStickyForEntities ()Z x
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	matchesStickyCritera (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/entity/Entity;)Z a
	moveByPositionAndProgress (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)Lnet/minecraft/world/phys/AABB; a
	moveCollidedEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;FLnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V a
	moveEntityByPiston (Lnet/minecraft/core/Direction;Lnet/minecraft/world/entity/Entity;DLnet/minecraft/core/Direction;)V a
	moveStuckEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;FLnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V a
net/minecraft/world/level/block/piston/PistonStructureResolver net/minecraft/world/level/block/piston/PistonExtendsChecker
	MAX_PUSH_DEPTH a
	extending d
	level b
	pistonDirection i
	pistonPos c
	pushDirection f
	startPos e
	toDestroy h
	toPush g
	addBlockLine (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	addBranchingBlocks (Lnet/minecraft/core/BlockPos;)Z a
	canStickToEachOther (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	getPushDirection ()Lnet/minecraft/core/Direction; b
	getToDestroy ()Ljava/util/List; d
	getToPush ()Ljava/util/List; c
	isSticky (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	reorderListAtCollision (II)V a
	resolve ()Z a
net/minecraft/world/level/block/state/BlockBehaviour net/minecraft/world/level/block/state/BlockBase
	UPDATE_SHAPE_ORDER aF
	drops aQ
	dynamicShape aO
	explosionResistance aI
	friction aL
	hasCollision aH
	isRandomlyTicking aJ
	jumpFactor aN
	material aG
	properties aP
	soundType aK
	speedFactor aM
	asBlock ()Lnet/minecraft/world/level/block/Block; p
	asItem ()Lnet/minecraft/world/item/Item; k
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	defaultDestroyTime ()F t
	defaultMaterialColor ()Lnet/minecraft/world/level/material/MaterialColor; s
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; r
	getMaxHorizontalOffset ()F V_
	getMaxVerticalOffset ()F Y_
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; T_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase net/minecraft/world/level/block/state/BlockBase$BlockData
	cache a
	canOcclude m
	destroySpeed k
	emissiveRendering r
	hasPostProcess q
	isAir h
	isRedstoneConductor n
	isSuffocating o
	isViewBlocking p
	lightEmission b
	material i
	materialColor j
	requiresCorrectToolForDrops l
	useShapeForLightOcclusion g
	asState ()Lnet/minecraft/world/level/block/state/BlockState; q
	attack (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canBeReplaced (Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canBeReplaced (Lnet/minecraft/world/level/material/Fluid;)Z a
	canOcclude ()Z l
	canSurvive (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	emissiveRendering (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z e
	entityCanStandOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	entityCanStandOnFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)Z a
	entityInside (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlock ()Lnet/minecraft/world/level/block/Block; b
	getBlockSupportShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; l
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; k
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getDestroyProgress (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getDestroySpeed (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F h
	getDirectSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I c
	getDrops (Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFaceOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFluidState ()Lnet/minecraft/world/level/material/FluidState; n
	getInteractionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLightBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getLightEmission ()I f
	getMapColor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/MaterialColor; d
	getMaterial ()Lnet/minecraft/world/level/material/Material; c
	getMenuProvider (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOffset (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; n
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; k
	getRenderShape ()Lnet/minecraft/world/level/block/RenderShape; h
	getSeed (Lnet/minecraft/core/BlockPos;)J a
	getShadeBrightness (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F f
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; j
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSoundType ()Lnet/minecraft/world/level/block/SoundType; p
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getVisualShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	hasAnalogOutputSignal ()Z j
	hasBlockEntity ()Z m
	hasLargeCollisionShape ()Z d
	hasPostProcess (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z q
	initCache ()V a
	is (Lnet/minecraft/tags/Tag;)Z a
	is (Lnet/minecraft/tags/Tag;Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/world/level/block/Block;)Z a
	isAir ()Z g
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z r
	isFaceSturdy (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z d
	isFaceSturdy (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)Z a
	isPathfindable (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking ()Z o
	isRedstoneConductor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z g
	isSignalSource ()Z i
	isSolidRender (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z i
	isSuffocating (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z o
	isValidSpawn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Z a
	isViewBlocking (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z p
	mirror (Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	propagatesSkylightDown (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	randomTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	requiresCorrectToolForDrops ()Z r
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnAfterBreak (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	triggerEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V b
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V b
	updateNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	updateNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateShape (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion ()Z e
net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache net/minecraft/world/level/block/state/BlockBase$BlockData$Cache
	DIRECTIONS e
	SUPPORT_TYPE_COUNT f
	collisionShape b
	faceSturdy j
	isCollisionShapeFullBlock d
	largeCollisionShape c
	lightBlock h
	occlusionShapes i
	propagatesSkylightDown g
	solidRender a
	getFaceSupportIndex (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)I b
	isFaceSturdy (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)Z a
net/minecraft/world/level/block/state/BlockBehaviour$OffsetType net/minecraft/world/level/block/state/BlockBase$EnumRandomOffset
	$VALUES d
	NONE a
	XYZ c
	XZ b
	$values ()[Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; a
net/minecraft/world/level/block/state/BlockBehaviour$Properties net/minecraft/world/level/block/state/BlockBase$Info
	canOcclude n
	destroyTime g
	drops m
	dynamicShape v
	emissiveRendering u
	explosionResistance f
	friction j
	hasCollision c
	hasPostProcess t
	isAir o
	isRandomlyTicking i
	isRedstoneConductor q
	isSuffocating r
	isValidSpawn p
	isViewBlocking s
	jumpFactor l
	lightEmission e
	material a
	materialColor b
	requiresCorrectToolForDrops h
	soundType d
	speedFactor k
	air ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; g
	color (Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	copy (Lnet/minecraft/world/level/block/state/BlockBehaviour;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	destroyTime (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	dropsLike (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	dynamicShape ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	emissiveRendering (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	explosionResistance (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; f
	friction (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	hasPostProcess (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	instabreak ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	isRedstoneConductor (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isSuffocating (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	isValidSpawn (Lnet/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isViewBlocking (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	jumpFactor (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	lightLevel (Ljava/util/function/ToIntFunction;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	noCollission ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	noDrops ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; f
	noOcclusion ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	of (Lnet/minecraft/world/level/material/Material;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	randomTicks ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	requiresCorrectToolForDrops ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; h
	sound (Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	speedFactor (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	strength (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	strength (FF)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate cob$d
net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate cob$e
net/minecraft/world/level/block/state/BlockState net/minecraft/world/level/block/state/IBlockData
	CODEC b
	asState ()Lnet/minecraft/world/level/block/state/BlockState; q
net/minecraft/world/level/block/state/StateDefinition net/minecraft/world/level/block/state/BlockStateList
	NAME_PATTERN a
	owner b
	propertiesByName c
	states d
	any ()Lnet/minecraft/world/level/block/state/StateHolder; b
	appendPropertyCodec (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/world/level/block/state/properties/Property;)Lcom/mojang/serialization/MapCodec; a
	getOwner ()Ljava/lang/Object; c
	getPossibleStates ()Lcom/google/common/collect/ImmutableList; a
	getProperties ()Ljava/util/Collection; d
	getProperty (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/Property; a
net/minecraft/world/level/block/state/StateDefinition$Builder cod$a
	owner a
	properties b
	add ([Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/block/state/StateDefinition$Builder; a
	create (Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/StateDefinition$Factory;)Lnet/minecraft/world/level/block/state/StateDefinition; a
	validateProperty (Lnet/minecraft/world/level/block/state/properties/Property;)V a
net/minecraft/world/level/block/state/StateDefinition$Factory cod$b
net/minecraft/world/level/block/state/StateHolder net/minecraft/world/level/block/state/IBlockDataHolder
	NAME_TAG c
	PROPERTIES_TAG d
	PROPERTY_ENTRY_TO_STRING_FUNCTION a
	neighbours g
	owner e
	propertiesCodec f
	values b
	codec (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	cycle (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Object; a
	findNextInCollection (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; a
	getOptionalValue (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/util/Optional; d
	getProperties ()Ljava/util/Collection; s
	getValue (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Comparable; c
	getValues ()Lcom/google/common/collect/ImmutableMap; t
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;)Z b
	makeNeighbourValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/util/Map; b
	populateNeighbours (Ljava/util/Map;)V a
	setValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/Object; a
net/minecraft/world/level/block/state/pattern/BlockInWorld net/minecraft/world/level/block/state/pattern/ShapeDetectorBlock
	cachedEntity f
	entity e
	level a
	loadChunks c
	pos b
	state d
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; b
	getLevel ()Lnet/minecraft/world/level/LevelReader; c
	getPos ()Lnet/minecraft/core/BlockPos; d
	getState ()Lnet/minecraft/world/level/block/state/BlockState; a
	hasState (Ljava/util/function/Predicate;)Ljava/util/function/Predicate; a
net/minecraft/world/level/block/state/pattern/BlockPattern net/minecraft/world/level/block/state/pattern/ShapeDetector
	depth b
	height c
	pattern a
	width d
	createLevelCache (Lnet/minecraft/world/level/LevelReader;Z)Lcom/google/common/cache/LoadingCache; a
	find (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	getDepth ()I a
	getHeight ()I b
	getPattern ()[[[Ljava/util/function/Predicate; d
	getWidth ()I c
	matches (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lcom/google/common/cache/LoadingCache;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	matches (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	translateAndRotate (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;III)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader net/minecraft/world/level/block/state/pattern/ShapeDetector$BlockLoader
	level a
	loadChunks b
	load (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockInWorld; a
net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch net/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection
	cache d
	depth g
	forwards b
	frontTopLeft a
	height f
	up c
	width e
	getBlock (III)Lnet/minecraft/world/level/block/state/pattern/BlockInWorld; a
	getDepth ()I f
	getForwards ()Lnet/minecraft/core/Direction; b
	getFrontTopLeft ()Lnet/minecraft/core/BlockPos; a
	getHeight ()I e
	getUp ()Lnet/minecraft/core/Direction; c
	getWidth ()I d
net/minecraft/world/level/block/state/pattern/BlockPatternBuilder net/minecraft/world/level/block/state/pattern/ShapeDetectorBuilder
	COMMA_JOINED a
	height d
	lookup c
	pattern b
	width e
	aisle ([Ljava/lang/String;)Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
	build ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; b
	createPattern ()[[[Ljava/util/function/Predicate; c
	ensureAllCharactersMatched ()V d
	start ()Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
	where (CLjava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate net/minecraft/world/level/block/state/predicate/MaterialPredicate
	AIR a
	material b
	forMaterial (Lnet/minecraft/world/level/material/Material;)Lnet/minecraft/world/level/block/state/predicate/BlockMaterialPredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/state/properties/AttachFace net/minecraft/world/level/block/state/properties/BlockPropertyAttachPosition
	$VALUES e
	CEILING c
	FLOOR a
	WALL b
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/AttachFace; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BambooLeaves net/minecraft/world/level/block/state/properties/BlockPropertyBambooSize
	$VALUES e
	LARGE c
	NONE a
	SMALL b
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/BambooLeaves; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BedPart net/minecraft/world/level/block/state/properties/BlockPropertyBedPart
	$VALUES d
	FOOT b
	HEAD a
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/BedPart; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BellAttachType net/minecraft/world/level/block/state/properties/BlockPropertyBellAttach
	$VALUES f
	CEILING b
	DOUBLE_WALL d
	FLOOR a
	SINGLE_WALL c
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/BellAttachType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BlockStateProperties net/minecraft/world/level/block/state/properties/BlockProperties
	AGE_1 am
	AGE_15 ar
	AGE_2 an
	AGE_25 as
	AGE_3 ao
	AGE_5 ap
	AGE_7 aq
	ATTACHED a
	ATTACH_FACE R
	AXIS G
	BAMBOO_LEAVES bg
	BED_PART aX
	BELL_ATTACHMENT S
	BERRIES E
	BITES at
	BOTTOM b
	CANDLES au
	CHEST_TYPE aY
	CONDITIONAL c
	DELAY av
	DISARMED d
	DISTANCE ax
	DOOR_HINGE ba
	DOUBLE_BLOCK_HALF ab
	DOWN I
	DRAG e
	DRIPSTONE_THICKNESS bj
	EAST K
	EAST_REDSTONE X
	EAST_WALL T
	EGGS ay
	ENABLED f
	EXTENDED g
	EYE h
	FACING N
	FACING_HOPPER O
	FALLING i
	HALF ac
	HANGING j
	HAS_BOOK o
	HAS_BOTTLE_0 k
	HAS_BOTTLE_1 l
	HAS_BOTTLE_2 m
	HAS_RECORD n
	HATCH az
	HORIZONTAL_AXIS F
	HORIZONTAL_FACING P
	INVERTED p
	IN_WALL q
	LAYERS aA
	LEVEL aK
	LEVEL_CAULDRON aF
	LEVEL_COMPOSTER aG
	LEVEL_FLOWING aH
	LEVEL_HONEY aI
	LIT r
	LOCKED s
	MAX_AGE_1 af
	MAX_AGE_15 ak
	MAX_AGE_2 ag
	MAX_AGE_25 al
	MAX_AGE_3 ah
	MAX_AGE_5 ai
	MAX_AGE_7 aj
	MAX_DISTANCE aw
	MAX_LEVEL_15 aJ
	MAX_LEVEL_3 aD
	MAX_LEVEL_8 aE
	MAX_RESPAWN_ANCHOR_CHARGES aT
	MAX_ROTATIONS_16 aV
	MIN_LEVEL aB
	MIN_LEVEL_CAULDRON aC
	MIN_RESPAWN_ANCHOR_CHARGES aS
	MODE_COMPARATOR aZ
	MOISTURE aL
	NORTH J
	NORTH_REDSTONE Y
	NORTH_WALL U
	NOTE aM
	NOTEBLOCK_INSTRUMENT bb
	OCCUPIED t
	OPEN u
	ORIENTATION Q
	PERSISTENT v
	PICKLES aN
	PISTON_TYPE bc
	POWER aO
	POWERED w
	RAIL_SHAPE ad
	RAIL_SHAPE_STRAIGHT ae
	RESPAWN_ANCHOR_CHARGES aU
	ROTATION_16 aW
	SCULK_SENSOR_PHASE bk
	SHORT x
	SIGNAL_FIRE y
	SLAB_TYPE bd
	SNOWY z
	SOUTH L
	SOUTH_REDSTONE Z
	SOUTH_WALL V
	STABILITY_DISTANCE aR
	STABILITY_MAX_DISTANCE aQ
	STAGE aP
	STAIRS_SHAPE be
	STRUCTUREBLOCK_MODE bf
	TILT bh
	TRIGGERED A
	UNSTABLE B
	UP H
	VERTICAL_DIRECTION bi
	VINE_END D
	WATERLOGGED C
	WEST M
	WEST_REDSTONE aa
	WEST_WALL W
net/minecraft/world/level/block/state/properties/BooleanProperty net/minecraft/world/level/block/state/properties/BlockStateBoolean
	values a
	create (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Boolean;)Ljava/lang/String; a
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/ChestType net/minecraft/world/level/block/state/properties/BlockPropertyChestType
	$VALUES g
	BY_ID d
	LEFT b
	RIGHT c
	SINGLE a
	name e
	opposite f
	$values ()[Lnet/minecraft/world/level/block/state/properties/ChestType; b
	getOpposite ()Lnet/minecraft/world/level/block/state/properties/ChestType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/ComparatorMode net/minecraft/world/level/block/state/properties/BlockPropertyComparatorMode
	$VALUES d
	COMPARE a
	SUBTRACT b
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/ComparatorMode; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/DirectionProperty net/minecraft/world/level/block/state/properties/BlockStateDirection
	create (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;[Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
net/minecraft/world/level/block/state/properties/DoorHingeSide net/minecraft/world/level/block/state/properties/BlockPropertyDoorHinge
	$VALUES c
	LEFT a
	RIGHT b
	$values ()[Lnet/minecraft/world/level/block/state/properties/DoorHingeSide; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/DoubleBlockHalf net/minecraft/world/level/block/state/properties/BlockPropertyDoubleBlockHalf
	$VALUES c
	LOWER b
	UPPER a
	$values ()[Lnet/minecraft/world/level/block/state/properties/DoubleBlockHalf; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/EnumProperty net/minecraft/world/level/block/state/properties/BlockStateEnum
	names b
	values a
	create (Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getName (Ljava/lang/Enum;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/Half net/minecraft/world/level/block/state/properties/BlockPropertyHalf
	$VALUES d
	BOTTOM b
	TOP a
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/Half; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/IntegerProperty net/minecraft/world/level/block/state/properties/BlockStateInteger
	values a
	create (Ljava/lang/String;II)Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getName (Ljava/lang/Integer;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/NoteBlockInstrument net/minecraft/world/level/block/state/properties/BlockPropertyInstrument
	$VALUES s
	BANJO o
	BASEDRUM b
	BASS e
	BELL g
	BIT n
	CHIME i
	COW_BELL l
	DIDGERIDOO m
	FLUTE f
	GUITAR h
	HARP a
	HAT d
	IRON_XYLOPHONE k
	PLING p
	SNARE c
	XYLOPHONE j
	name q
	soundEvent r
	$values ()[Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument; b
	byState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument; a
	getSerializedName ()Ljava/lang/String; c
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/level/block/state/properties/PistonType net/minecraft/world/level/block/state/properties/BlockPropertyPistonType
	$VALUES d
	DEFAULT a
	STICKY b
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/PistonType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/Property net/minecraft/world/level/block/state/properties/IBlockState
	clazz a
	codec d
	hashCode c
	name b
	valueCodec e
	codec ()Lcom/mojang/serialization/Codec; d
	generateHashCode ()I b
	getAllValues ()Ljava/util/stream/Stream; c
	getName ()Ljava/lang/String; f
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
	getValueClass ()Ljava/lang/Class; g
	parseValue (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/block/state/StateHolder;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	value (Ljava/lang/Comparable;)Lnet/minecraft/world/level/block/state/properties/Property$Value; b
	value (Lnet/minecraft/world/level/block/state/StateHolder;)Lnet/minecraft/world/level/block/state/properties/Property$Value; a
	valueCodec ()Lcom/mojang/serialization/Codec; e
net/minecraft/world/level/block/state/properties/Property$Value cpg$a
	property a
	value b
	property ()Lnet/minecraft/world/level/block/state/properties/Property; a
	value ()Ljava/lang/Comparable; b
net/minecraft/world/level/block/state/properties/RailShape net/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition
	$VALUES l
	ASCENDING_EAST c
	ASCENDING_NORTH e
	ASCENDING_SOUTH f
	ASCENDING_WEST d
	EAST_WEST b
	NORTH_EAST j
	NORTH_SOUTH a
	NORTH_WEST i
	SOUTH_EAST g
	SOUTH_WEST h
	name k
	$values ()[Lnet/minecraft/world/level/block/state/properties/RailShape; d
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	isAscending ()Z b
net/minecraft/world/level/block/state/properties/RedstoneSide net/minecraft/world/level/block/state/properties/BlockPropertyRedstoneSide
	$VALUES e
	NONE c
	SIDE b
	UP a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/RedstoneSide; b
	getSerializedName ()Ljava/lang/String; c
	isConnected ()Z a
net/minecraft/world/level/block/state/properties/SlabType net/minecraft/world/level/block/state/properties/BlockPropertySlabType
	$VALUES e
	BOTTOM b
	DOUBLE c
	TOP a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/SlabType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/StairsShape net/minecraft/world/level/block/state/properties/BlockPropertyStairsShape
	$VALUES g
	INNER_LEFT b
	INNER_RIGHT c
	OUTER_LEFT d
	OUTER_RIGHT e
	STRAIGHT a
	name f
	$values ()[Lnet/minecraft/world/level/block/state/properties/StairsShape; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/StructureMode net/minecraft/world/level/block/state/properties/BlockPropertyStructureMode
	$VALUES g
	CORNER c
	DATA d
	LOAD b
	SAVE a
	displayName f
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/StructureMode; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/WallSide net/minecraft/world/level/block/state/properties/BlockPropertyWallHeight
	$VALUES e
	LOW b
	NONE a
	TALL c
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/WallSide; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/WoodType net/minecraft/world/level/block/state/properties/BlockPropertyWood
	ACACIA d
	BIRCH c
	CRIMSON g
	DARK_OAK f
	JUNGLE e
	OAK a
	SPRUCE b
	VALUES i
	WARPED h
	name j
	name ()Ljava/lang/String; b
	register (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/world/level/block/state/properties/WoodType; a
	values ()Ljava/util/stream/Stream; a
net/minecraft/world/level/border/BorderChangeListener net/minecraft/world/level/border/IWorldBorderListener
	onBorderCenterSet (Lnet/minecraft/world/level/border/WorldBorder;DD)V a
	onBorderSetDamagePerBlock (Lnet/minecraft/world/level/border/WorldBorder;D)V b
	onBorderSetDamageSafeZOne (Lnet/minecraft/world/level/border/WorldBorder;D)V c
	onBorderSetWarningBlocks (Lnet/minecraft/world/level/border/WorldBorder;I)V b
	onBorderSetWarningTime (Lnet/minecraft/world/level/border/WorldBorder;I)V a
	onBorderSizeLerping (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V a
	onBorderSizeSet (Lnet/minecraft/world/level/border/WorldBorder;D)V a
net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener cpr$a
	worldBorder a
	onBorderCenterSet (Lnet/minecraft/world/level/border/WorldBorder;DD)V a
	onBorderSetDamagePerBlock (Lnet/minecraft/world/level/border/WorldBorder;D)V b
	onBorderSetDamageSafeZOne (Lnet/minecraft/world/level/border/WorldBorder;D)V c
	onBorderSetWarningBlocks (Lnet/minecraft/world/level/border/WorldBorder;I)V b
	onBorderSetWarningTime (Lnet/minecraft/world/level/border/WorldBorder;I)V a
	onBorderSizeLerping (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V a
	onBorderSizeSet (Lnet/minecraft/world/level/border/WorldBorder;D)V a
net/minecraft/world/level/border/WorldBorder$BorderExtent cpt$a
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
net/minecraft/world/level/border/WorldBorder$MovingBorderExtent cpt$b
	from b
	lerpBegin e
	lerpDuration f
	lerpEnd d
	to c
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
net/minecraft/world/level/border/WorldBorder$Settings cpt$c
	centerX a
	centerZ b
	damagePerBlock c
	safeZone d
	size g
	sizeLerpTarget i
	sizeLerpTime h
	warningBlocks e
	warningTime f
	getCenterX ()D a
	getCenterZ ()D b
	getDamagePerBlock ()D c
	getSafeZone ()D d
	getSize ()D g
	getSizeLerpTarget ()D i
	getSizeLerpTime ()J h
	getWarningBlocks ()I e
	getWarningTime ()I f
	read (Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/world/level/border/WorldBorder$Settings;)Lnet/minecraft/world/level/border/WorldBorder$Settings; a
	write (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/border/WorldBorder$StaticBorderExtent cpt$d
	maxX e
	maxZ f
	minX c
	minZ d
	shape g
	size b
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
	updateBox ()V n
net/minecraft/world/level/chunk/CarvingMask$Mask cpx$a
net/minecraft/world/level/chunk/ChunkAccess net/minecraft/world/level/chunk/IChunkAccess
	LOGGER l
	blendingData f
	blockEntities i
	carverBiome o
	chunkPos c
	heightmaps g
	inhabitedTime n
	isLightCorrect m
	levelHeightAccessor j
	noiseChunk d
	pendingBlockEntities h
	postProcessing a
	sections k
	structureStarts p
	structuresRefences q
	unsaved b
	upgradeData e
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addPackedPostProcess (SI)V a
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	carverBiome (Ljava/util/function/Supplier;)Lnet/minecraft/world/level/biome/Biome; a
	fillBiomesFromNoise (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	getAllReferences ()Ljava/util/Map; h
	getAllStarts ()Ljava/util/Map; g
	getBelowZeroRetrogen ()Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; x
	getBlendingData ()Lnet/minecraft/world/level/levelgen/blending/BlendingData; t
	getBlockEntitiesPos ()Ljava/util/Set; c
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; i
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getEventDispatcher (I)Lnet/minecraft/world/level/gameevent/GameEventDispatcher; a
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getHeight ()I v_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightAccessorForGeneration ()Lnet/minecraft/world/level/LevelHeightAccessor; z
	getHeightmaps ()Ljava/util/Collection; e
	getHighestSection ()Lnet/minecraft/world/level/chunk/LevelChunkSection; a
	getHighestSectionPosition ()I b
	getInhabitedTime ()J u
	getLights ()Ljava/util/stream/Stream; n
	getMinBuildHeight ()I u_
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getOrCreateNoiseChunk (Lnet/minecraft/world/level/levelgen/NoiseSampler;Ljava/util/function/Supplier;Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;Lnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;Lnet/minecraft/world/level/levelgen/blending/Blender;)Lnet/minecraft/world/level/levelgen/NoiseChunk; a
	getOrCreateOffsetList ([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; f
	getPostProcessing ()[Lit/unimi/dsi/fastutil/shorts/ShortList; m
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSection (I)Lnet/minecraft/world/level/chunk/LevelChunkSection; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	getUpgradeData ()Lnet/minecraft/world/level/chunk/UpgradeData; r
	hasAnyStructureReferences ()Z w
	hasPrimedHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Z b
	incrementInhabitedTime (J)V a
	isLightCorrect ()Z v
	isOldNoiseGeneration ()Z s
	isUnsaved ()Z i
	isUpgrading ()Z y
	isYSpaceEmpty (II)Z a
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	replaceMissingSections (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/Registry;[Lnet/minecraft/world/level/chunk/LevelChunkSection;)V a
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBlendingData (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setInhabitedTime (J)V b
	setLightCorrect (Z)V b
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setUnsaved (Z)V a
net/minecraft/world/level/chunk/ChunkAccess$TicksToSave cpy$a
	blocks a
	fluids b
	blocks ()Lnet/minecraft/world/ticks/SerializableTickContainer; a
	fluids ()Lnet/minecraft/world/ticks/SerializableTickContainer; b
net/minecraft/world/level/chunk/ChunkSource net/minecraft/world/level/chunk/IChunkProvider
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IIZ)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; m
	getLoadedChunksCount ()I h
	hasChunk (II)Z b
	setSpawnSettings (ZZ)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
net/minecraft/world/level/chunk/ChunkStatus$ChunkType net/minecraft/world/level/chunk/ChunkStatus$Type
	$VALUES c
	LEVELCHUNK b
	PROTOCHUNK a
	$values ()[Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; a
net/minecraft/world/level/chunk/ChunkStatus$GenerationTask cqb$b
net/minecraft/world/level/chunk/ChunkStatus$LoadingTask cqb$c
net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask cqb$d
net/minecraft/world/level/chunk/DataLayer net/minecraft/world/level/chunk/NibbleArray
	LAYER_COUNT a
	LAYER_SIZE b
	NIBBLE_SIZE e
	SIZE c
	data d
	copy ()Lnet/minecraft/world/level/chunk/DataLayer; b
	get (I)I b
	get (III)I a
	getByteIndex (I)I d
	getData ()[B a
	getIndex (III)I b
	getNibbleIndex (I)I c
	isEmpty ()Z c
	layerToString (I)Ljava/lang/String; a
	set (II)V a
	set (IIII)V a
net/minecraft/world/level/chunk/EmptyLevelChunk net/minecraft/world/level/chunk/ChunkEmpty
	addAndRegisterBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V b
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; B
	getLightEmission (Lnet/minecraft/core/BlockPos;)I g
	isEmpty ()Z A
	isYSpaceEmpty (II)Z a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/chunk/FeatureAccess net/minecraft/world/level/chunk/IStructureAccess
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	getAllReferences ()Ljava/util/Map; h
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	setAllReferences (Ljava/util/Map;)V b
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
net/minecraft/world/level/chunk/GlobalPalette net/minecraft/world/level/chunk/DataPaletteGlobal
	registry a
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/HashMapPalette net/minecraft/world/level/chunk/DataPaletteHash
	bits d
	registry a
	resizeHandler c
	values b
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getEntries ()Ljava/util/List; d
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/ImposterProtoChunk net/minecraft/world/level/chunk/ProtoChunkExtension
	allowWrites m
	wrapped l
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	fillBiomesFromNoise (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	fixType (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; c
	getAllReferences ()Ljava/util/Map; h
	getAllStarts ()Ljava/util/Map; g
	getBlendingData ()Lnet/minecraft/world/level/levelgen/blending/BlendingData; t
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; i
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLights ()Ljava/util/stream/Stream; n
	getMaxLightLevel ()I O
	getOrCreateCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; b
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; f
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSection (I)Lnet/minecraft/world/level/chunk/LevelChunkSection; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	getWrapped ()Lnet/minecraft/world/level/chunk/LevelChunk; A
	isLightCorrect ()Z v
	isUnsaved ()Z i
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBlendingData (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setLightCorrect (Z)V b
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	setUnsaved (Z)V a
net/minecraft/world/level/chunk/LevelChunk net/minecraft/world/level/chunk/Chunk
	LOGGER l
	NULL_TICKER m
	blockTicks u
	clientLightReady p
	fluidTicks v
	fullStatus r
	gameEventDispatcherSections t
	level q
	loaded o
	postLoad s
	tickersInLevel n
	addAndRegisterBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V b
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addGameEventListener (Lnet/minecraft/world/level/block/entity/BlockEntity;)V d
	clearAllBlockEntities ()V G
	createBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; k
	createTicker (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/TickingBlockEntity; a
	getBlockEntities ()Ljava/util/Map; E
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; i
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getEventDispatcher (I)Lnet/minecraft/world/level/gameevent/GameEventDispatcher; a
	getFluidState (III)Lnet/minecraft/world/level/material/FluidState; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; B
	getLevel ()Lnet/minecraft/world/level/Level; D
	getLights ()Ljava/util/stream/Stream; n
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	isClientLightReady ()Z I
	isEmpty ()Z A
	isInLevel ()Z J
	isTicking (Lnet/minecraft/core/BlockPos;)Z l
	postProcessGeneration ()V F
	promotePendingBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	registerAllBlockEntitiesAfterLevelLoad ()V H
	registerTickContainerInLevel (Lnet/minecraft/server/level/ServerLevel;)V a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	removeBlockEntityTicker (Lnet/minecraft/core/BlockPos;)V m
	removeGameEventListener (Lnet/minecraft/world/level/block/entity/BlockEntity;)V c
	replaceWithPacketData (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;)V a
	runPostLoad ()V C
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setClientLightReady (Z)V d
	setFullStatus (Ljava/util/function/Supplier;)V b
	setLoaded (Z)V c
	unpackTicks (J)V c
	unregisterTickContainerFromLevel (Lnet/minecraft/server/level/ServerLevel;)V b
	updateBlockEntityTicker (Lnet/minecraft/world/level/block/entity/BlockEntity;)V e
net/minecraft/world/level/chunk/LevelChunk$BoundTickingBlockEntity cqi$a
	blockEntity b
	loggedInvalidBlockState d
	ticker c
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	tick ()V a
net/minecraft/world/level/chunk/LevelChunk$EntityCreationType net/minecraft/world/level/chunk/Chunk$EnumTileEntityState
	$VALUES d
	CHECK c
	IMMEDIATE a
	QUEUED b
	$values ()[Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType; a
net/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor cqi$c
net/minecraft/world/level/chunk/LevelChunk$RebindableTickingBlockEntityWrapper cqi$d
	ticker b
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	rebind (Lnet/minecraft/world/level/block/entity/TickingBlockEntity;)V a
	tick ()V a
net/minecraft/world/level/chunk/LevelChunkSection net/minecraft/world/level/chunk/ChunkSection
	BIOME_CONTAINER_BITS d
	SECTION_HEIGHT b
	SECTION_SIZE c
	SECTION_WIDTH a
	biomes j
	bottomBlockY e
	nonEmptyBlockCount f
	states i
	tickingBlockCount g
	tickingFluidCount h
	acquire ()V a
	bottomBlockY ()I g
	fillBiomesFromNoise (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;II)V a
	getBiomes ()Lnet/minecraft/world/level/chunk/PalettedContainer; j
	getBlockState (III)Lnet/minecraft/world/level/block/state/BlockState; a
	getBottomBlockY (I)I a
	getFluidState (III)Lnet/minecraft/world/level/material/FluidState; b
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; c
	getSerializedSize ()I k
	getStates ()Lnet/minecraft/world/level/chunk/PalettedContainer; i
	hasOnlyAir ()Z c
	isRandomlyTicking ()Z d
	isRandomlyTickingBlocks ()Z e
	isRandomlyTickingFluids ()Z f
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	recalcBlockCounts ()V h
	release ()V b
	setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/LightChunkGetter net/minecraft/world/level/chunk/ILightAccess
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getLevel ()Lnet/minecraft/world/level/BlockGetter; n
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
net/minecraft/world/level/chunk/LinearPalette net/minecraft/world/level/chunk/DataPaletteLinear
	bits d
	registry a
	resizeHandler c
	size e
	values b
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/Palette net/minecraft/world/level/chunk/DataPalette
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/Palette$Factory cqn$a
net/minecraft/world/level/chunk/PaletteResize net/minecraft/world/level/chunk/DataPaletteExpandable
net/minecraft/world/level/chunk/PalettedContainer net/minecraft/world/level/chunk/DataPaletteBlock
	MIN_PALETTE_BITS a
	data d
	dummyPaletteResize b
	registry c
	strategy e
	threadingDetector f
	acquire ()V a
	codec (Lnet/minecraft/core/IdMap;Lcom/mojang/serialization/Codec;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; a
	copy ()Lnet/minecraft/world/level/chunk/PalettedContainer; d
	count (Lnet/minecraft/world/level/chunk/PalettedContainer$CountConsumer;)V a
	createOrReuseData (Lnet/minecraft/world/level/chunk/PalettedContainer$Data;I)Lnet/minecraft/world/level/chunk/PalettedContainer$Data; a
	get (I)Ljava/lang/Object; a
	get (III)Ljava/lang/Object; a
	getAll (Ljava/util/function/Consumer;)V a
	getAndSet (IIILjava/lang/Object;)Ljava/lang/Object; a
	getAndSet (ILjava/lang/Object;)Ljava/lang/Object; a
	getAndSetUnchecked (IIILjava/lang/Object;)Ljava/lang/Object; b
	getSerializedSize ()I c
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;Lnet/minecraft/world/level/chunk/PalettedContainer$DiscData;)Lcom/mojang/serialization/DataResult; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	release ()V b
	set (IIILjava/lang/Object;)V c
	set (ILjava/lang/Object;)V b
	swapPalette ([ILjava/util/function/IntUnaryOperator;)V a
	write (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;)Lnet/minecraft/world/level/chunk/PalettedContainer$DiscData; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/PalettedContainer$Configuration cqp$a
	bits b
	factory a
	bits ()I b
	createData (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;I)Lnet/minecraft/world/level/chunk/PalettedContainer$Data; a
	factory ()Lnet/minecraft/world/level/chunk/Palette$Factory; a
net/minecraft/world/level/chunk/PalettedContainer$CountConsumer cqp$b
net/minecraft/world/level/chunk/PalettedContainer$Data cqp$c
	configuration a
	palette c
	storage b
	configuration ()Lnet/minecraft/world/level/chunk/PalettedContainer$Configuration; b
	copyFrom (Lnet/minecraft/world/level/chunk/Palette;Lnet/minecraft/util/BitStorage;)V a
	getSerializedSize ()I a
	palette ()Lnet/minecraft/world/level/chunk/Palette; d
	storage ()Lnet/minecraft/util/BitStorage; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/chunk/PalettedContainer$DiscData cqp$d
	paletteEntries a
	storage b
	paletteEntries ()Ljava/util/List; a
	storage ()Ljava/util/Optional; b
net/minecraft/world/level/chunk/PalettedContainer$Strategy cqp$e
	GLOBAL_PALETTE_FACTORY f
	HASHMAP_PALETTE_FACTORY c
	LINEAR_PALETTE_FACTORY b
	SECTION_BIOMES e
	SECTION_STATES d
	SINGLE_VALUE_PALETTE_FACTORY a
	sizeBits g
	calculateBitsForSerialization (Lnet/minecraft/core/IdMap;I)I b
	getConfiguration (Lnet/minecraft/core/IdMap;I)Lnet/minecraft/world/level/chunk/PalettedContainer$Configuration; a
	getIndex (III)I a
	size ()I a
net/minecraft/world/level/chunk/UpgradeData net/minecraft/world/level/chunk/ChunkConverter
	CHUNKY_FIXERS h
	DIRECTIONS d
	EMPTY a
	LOGGER b
	MAP g
	TAG_INDICES c
	index f
	sides e
	isEmpty ()Z a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	upgrade (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	upgradeInside (Lnet/minecraft/world/level/chunk/LevelChunk;)V b
	upgradeSides (Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/core/Direction8;)V a
	write ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/chunk/UpgradeData$BlockFixer cqs$a
	processChunk (Lnet/minecraft/world/level/LevelAccessor;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/chunk/UpgradeData$BlockFixers net/minecraft/world/level/chunk/ChunkConverter$Type
	$VALUES g
	BLACKLIST a
	CHEST c
	DEFAULT b
	DIRECTIONS f
	LEAVES d
	STEM_BLOCK e
	$values ()[Lnet/minecraft/world/level/chunk/UpgradeData$BlockFixers; a
net/minecraft/world/level/chunk/storage/ChunkSerializer net/minecraft/world/level/chunk/storage/ChunkRegionLoader
	BLOCK_STATE_CODEC a
	BLOCK_TICKS_TAG d
	FLUID_TICKS_TAG e
	LOGGER b
	TAG_UPGRADE_DATA c
	getChunkTypeFromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; a
	getListOfCompoundsOrNull (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;)Lnet/minecraft/nbt/ListTag; a
	logErrors (Lnet/minecraft/world/level/ChunkPos;ILjava/lang/String;)V a
	makeBiomeCodec (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
	packOffsets ([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lnet/minecraft/nbt/ListTag; a
	packStructureData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/world/level/ChunkPos;Ljava/util/Map;Ljava/util/Map;)Lnet/minecraft/nbt/CompoundTag; a
	postLoadChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor; a
	read (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/ai/village/poi/PoiManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/ProtoChunk; a
	saveTicks (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave;)V a
	unpackStructureReferences (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Map; a
	unpackStructureStart (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;J)Ljava/util/Map; a
	write (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/chunk/storage/ChunkStorage net/minecraft/world/level/chunk/storage/IChunkLoader
	LAST_MONOLYTH_STRUCTURE_DATA_VERSION d
	fixerUpper e
	legacyStructureHandler b
	worker a
	chunkScanner ()Lnet/minecraft/world/level/chunk/storage/ChunkScanAccess; m
	flushWorker ()V l
	getVersion (Lnet/minecraft/nbt/CompoundTag;)I a
	injectDatafixingContext (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceKey;Ljava/util/Optional;)V a
	read (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; f
	upgradeChunkTag (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;Lnet/minecraft/nbt/CompoundTag;Ljava/util/Optional;)Lnet/minecraft/nbt/CompoundTag; a
	write (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/chunk/storage/IOWorker$PendingStore cqy$a
	data a
	result b
net/minecraft/world/level/chunk/storage/RegionBitmap net/minecraft/world/level/chunk/storage/RegionFileBitSet
	used a
	allocate (I)I a
	force (II)V a
	free (II)V b
	getUsed ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/world/level/chunk/storage/RegionFile$CommitOp cra$b
net/minecraft/world/level/chunk/storage/RegionFileStorage net/minecraft/world/level/chunk/storage/RegionFileCache
	ANVIL_EXTENSION a
	MAX_CACHE_SIZE b
	folder d
	regionCache c
	sync e
	flush ()V a
	getRegionFile (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/chunk/storage/RegionFile; b
	read (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	scanChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/StreamTagVisitor;)V a
	write (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/chunk/storage/RegionFileVersion net/minecraft/world/level/chunk/storage/RegionFileCompression
	VERSIONS d
	VERSION_DEFLATE b
	VERSION_GZIP a
	VERSION_NONE c
	id e
	inputWrapper f
	outputWrapper g
	fromId (I)Lnet/minecraft/world/level/chunk/storage/RegionFileVersion; a
	getId ()I a
	isValidVersion (I)Z b
	register (Lnet/minecraft/world/level/chunk/storage/RegionFileVersion;)Lnet/minecraft/world/level/chunk/storage/RegionFileVersion; a
	wrap (Ljava/io/InputStream;)Ljava/io/InputStream; a
	wrap (Ljava/io/OutputStream;)Ljava/io/OutputStream; a
net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper crc$a
net/minecraft/world/level/chunk/storage/SectionStorage net/minecraft/world/level/chunk/storage/RegionFileSection
	LOGGER a
	SECTIONS_TAG b
	codec g
	dirty f
	factory h
	fixerUpper i
	levelHeightAccessor c
	storage e
	type j
	worker d
	flush (Lnet/minecraft/world/level/ChunkPos;)V a
	get (J)Ljava/util/Optional; c
	getKey (Lnet/minecraft/world/level/ChunkPos;I)J a
	getOrCreate (J)Ljava/lang/Object; f
	getOrLoad (J)Ljava/util/Optional; d
	getVersion (Lcom/mojang/serialization/Dynamic;)I a
	onSectionLoad (J)V b
	outsideStoredRange (J)Z e
	readColumn (Lnet/minecraft/world/level/ChunkPos;)V b
	readColumn (Lnet/minecraft/world/level/ChunkPos;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V a
	setDirty (J)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tryRead (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; c
	writeColumn (Lnet/minecraft/world/level/ChunkPos;)V d
	writeColumn (Lnet/minecraft/world/level/ChunkPos;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/dimension/DimensionDefaults crf
	END_GENERATION_HEIGHT k
	END_LEVEL_HEIGHT j
	END_LOGICAL_HEIGHT l
	END_MIN_Y i
	NETHER_GENERATION_HEIGHT g
	NETHER_LEVEL_HEIGHT f
	NETHER_LOGICAL_HEIGHT h
	NETHER_MIN_Y e
	OVERWORLD_GENERATION_HEIGHT c
	OVERWORLD_LEVEL_HEIGHT b
	OVERWORLD_LOGICAL_HEIGHT d
	OVERWORLD_MIN_Y a
net/minecraft/world/level/dimension/DimensionType net/minecraft/world/level/dimension/DimensionManager
	BITS_FOR_Y a
	CODEC u
	DEFAULT_END r
	DEFAULT_NETHER q
	DEFAULT_OVERWORLD p
	DEFAULT_OVERWORLD_CAVES t
	DIRECT_CODEC k
	END_EFFECTS j
	END_LOCATION o
	MAX_Y d
	MIN_HEIGHT b
	MIN_Y e
	MOON_BRIGHTNESS_PER_PHASE l
	MOON_PHASES v
	NETHER_EFFECTS i
	NETHER_LOCATION n
	OVERWORLD_CAVES_LOCATION s
	OVERWORLD_EFFECTS h
	OVERWORLD_LOCATION m
	WAY_ABOVE_MAX_Y f
	WAY_BELOW_MIN_Y g
	Y_SIZE c
	ambientLight M
	bedWorks E
	brightnessRamp N
	coordinateScale B
	createDragonFight C
	effectsLocation L
	fixedTime w
	hasCeiling y
	hasRaids G
	hasSkylight x
	height I
	infiniburn K
	logicalHeight J
	minY H
	natural A
	piglinSafe D
	respawnAnchorWorks F
	ultraWarm z
	bedWorks ()Z h
	brightness (I)F a
	coordinateScale ()D f
	create (Ljava/util/OptionalLong;ZZZZDZZZZZIIILnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;F)Lnet/minecraft/world/level/dimension/DimensionType; a
	createDragonFight ()Z n
	defaultDimensions (Lnet/minecraft/core/RegistryAccess;J)Lnet/minecraft/core/MappedRegistry; a
	defaultDimensions (Lnet/minecraft/core/RegistryAccess;JZ)Lnet/minecraft/core/MappedRegistry; a
	effectsLocation ()Lnet/minecraft/resources/ResourceLocation; q
	equalTo (Lnet/minecraft/world/level/dimension/DimensionType;)Z a
	fillBrightnessRamp (F)[F a
	getFileSuffix ()Ljava/lang/String; a
	getStorageFolder (Lnet/minecraft/resources/ResourceKey;Ljava/nio/file/Path;)Ljava/nio/file/Path; a
	getTeleportationScale (Lnet/minecraft/world/level/dimension/DimensionType;Lnet/minecraft/world/level/dimension/DimensionType;)D a
	guardY (Lnet/minecraft/world/level/dimension/DimensionType;)Lcom/mojang/serialization/DataResult; b
	hasCeiling ()Z c
	hasFixedTime ()Z o
	hasRaids ()Z j
	hasSkyLight ()Z b
	height ()I l
	infiniburn ()Lnet/minecraft/tags/Tag; p
	logicalHeight ()I m
	minY ()I k
	moonPhase (J)I b
	natural ()Z e
	parseLegacy (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; a
	piglinSafe ()Z g
	registerBuiltin (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/core/RegistryAccess; a
	respawnAnchorWorks ()Z i
	timeOfDay (J)F a
	ultraWarm ()Z d
net/minecraft/world/level/dimension/LevelStem net/minecraft/world/level/dimension/WorldDimension
	BUILTIN_ORDER e
	CODEC a
	END d
	NETHER c
	OVERWORLD b
	generator g
	type f
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; c
	sortMap (Lnet/minecraft/core/MappedRegistry;)Lnet/minecraft/core/MappedRegistry; a
	stable (JLnet/minecraft/core/MappedRegistry;)Z a
	type ()Lnet/minecraft/world/level/dimension/DimensionType; b
	typeSupplier ()Ljava/util/function/Supplier; a
net/minecraft/world/level/dimension/end/DragonRespawnAnimation net/minecraft/world/level/dimension/end/EnumDragonRespawn
	$VALUES f
	END e
	PREPARING_TO_SUMMON_PILLARS b
	START a
	SUMMONING_DRAGON d
	SUMMONING_PILLARS c
	$values ()[Lnet/minecraft/world/level/dimension/end/DragonRespawnAnimation; a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/dimension/end/EndDragonFight;Ljava/util/List;ILnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/dimension/end/EndDragonFight net/minecraft/world/level/dimension/end/EnderDragonBattle
	ARENA_SIZE_CHUNKS g
	ARENA_TICKET_LEVEL a
	DRAGON_SPAWN_Y b
	GATEWAY_COUNT h
	GATEWAY_DISTANCE i
	LOGGER c
	MAX_TICKS_BEFORE_DRAGON_RESPAWN d
	TIME_BETWEEN_CRYSTAL_SCANS e
	TIME_BETWEEN_PLAYER_SCANS f
	VALID_PLAYER j
	crystalsAlive p
	dragonEvent k
	dragonKilled s
	dragonUUID u
	exitPortalPattern n
	gateways m
	level l
	needsStateScanning v
	portalLocation w
	previouslyKilled t
	respawnCrystals z
	respawnStage x
	respawnTime y
	ticksSinceCrystalsScanned q
	ticksSinceDragonSeen o
	ticksSinceLastPlayerScan r
	createNewDragon ()Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon; o
	findExitPortal ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; j
	findOrCreateDragon ()V h
	getCrystalsAlive ()I c
	hasActiveExitPortal ()Z i
	hasPreviouslyKilledDragon ()Z d
	isArenaLoaded ()Z k
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/world/damagesource/DamageSource;)V a
	resetSpikeCrystals ()V f
	respawnDragon (Ljava/util/List;)V a
	saveData ()Lnet/minecraft/nbt/CompoundTag; a
	scanState ()V g
	setDragonKilled (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)V a
	setRespawnStage (Lnet/minecraft/world/level/dimension/end/DragonRespawnAnimation;)V a
	spawnExitPortal (Z)V a
	spawnNewGateway ()V n
	spawnNewGateway (Lnet/minecraft/core/BlockPos;)V a
	tick ()V b
	tryRespawn ()V e
	updateCrystalCount ()V m
	updateDragon (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)V b
	updatePlayers ()V l
net/minecraft/world/level/entity/PersistentEntitySectionManager$Callback crz$a
	currentSection e
	currentSectionKey d
	entity c
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	updateStatus (Lnet/minecraft/world/level/entity/Visibility;Lnet/minecraft/world/level/entity/Visibility;)V a
net/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus crz$b
	$VALUES d
	FRESH a
	LOADED c
	PENDING b
	$values ()[Lnet/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus; a
net/minecraft/world/level/entity/TransientEntitySectionManager csa
	LOGGER a
	callbacks b
	entityGetter f
	entityStorage c
	sectionStorage d
	tickingChunks e
	addEntity (Lnet/minecraft/world/level/entity/EntityAccess;)V a
	count ()I b
	gatherStats ()Ljava/lang/String; c
	getEntityGetter ()Lnet/minecraft/world/level/entity/LevelEntityGetter; a
	removeSectionIfEmpty (JLnet/minecraft/world/level/entity/EntitySection;)V a
	startTicking (Lnet/minecraft/world/level/ChunkPos;)V a
	stopTicking (Lnet/minecraft/world/level/ChunkPos;)V b
net/minecraft/world/level/entity/TransientEntitySectionManager$Callback csa$a
	currentSection e
	currentSectionKey d
	entity c
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
net/minecraft/world/level/gameevent/BlockPositionSource$Type csd$a
	codec ()Lcom/mojang/serialization/Codec; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/BlockPositionSource; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/BlockPositionSource;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/EntityPositionSource$Type cse$a
	codec ()Lcom/mojang/serialization/Codec; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/EntityPositionSource; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/EntityPositionSource;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/vibrations/VibrationListener$VibrationListenerConfig csn$a
	onSignalReceive (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/world/level/gameevent/GameEvent;I)V a
	shouldListen (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/level/levelgen/Aquifer$FluidPicker csq$a
net/minecraft/world/level/levelgen/Aquifer$FluidStatus csq$b
	fluidLevel a
	fluidType b
	at (I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer csq$c
	FLOWING_UPDATE_SIMULARITY k
	MAX_REASONABLE_DISTANCE_TO_AQUIFER_CENTER j
	SURFACE_SAMPLING_OFFSETS_IN_CHUNKS A
	X_RANGE a
	X_SEPARATION d
	X_SPACING g
	Y_RANGE b
	Y_SEPARATION e
	Y_SPACING h
	Z_RANGE c
	Z_SEPARATION f
	Z_SPACING i
	aquiferCache r
	aquiferLocationCache s
	barrierNoise m
	fluidLevelFloodednessNoise n
	fluidLevelSpreadNoise o
	globalFluidPicker t
	gridSizeX y
	gridSizeZ z
	lavaNoise p
	minGridX v
	minGridY w
	minGridZ x
	noiseChunk l
	positionalRandomFactory q
	shouldScheduleFluidUpdate u
	calculatePressure (IIILorg/apache/commons/lang3/mutable/MutableDouble;Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;)D a
	computeSubstance (IIIDD)Lnet/minecraft/world/level/block/state/BlockState; a
	getAquiferStatus (J)Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus; a
	getFluidType (IIILnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;I)Lnet/minecraft/world/level/block/state/BlockState; a
	getIndex (III)I a
	gridX (I)I a
	gridY (I)I b
	gridZ (I)I c
	shouldScheduleFluidUpdate ()Z a
	similarity (II)D a
net/minecraft/world/level/levelgen/Column$Line csu$a
	INSTANCE a
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
net/minecraft/world/level/levelgen/Column$Range csu$b
	ceiling b
	floor a
	ceiling ()I e
	floor ()I f
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
	height ()I g
net/minecraft/world/level/levelgen/Column$Ray csu$c
	edge a
	pointingUp b
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
net/minecraft/world/level/levelgen/DebugLevelSource net/minecraft/world/level/levelgen/ChunkProviderDebug
	AIR e
	ALL_BLOCKS j
	BARRIER f
	BARRIER_HEIGHT h
	BLOCK_MARGIN i
	CODEC d
	GRID_HEIGHT l
	GRID_WIDTH k
	HEIGHT g
	biomes m
	applyBiomeDecoration (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/StructureFeatureManager;)V a
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	biomes ()Lnet/minecraft/core/Registry; i
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	climateSampler ()Lnet/minecraft/world/level/biome/Climate$Sampler; c
	codec ()Lcom/mojang/serialization/Codec; a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	getBlockStateFor (II)Lnet/minecraft/world/level/block/state/BlockState; a
	getGenDepth ()I f
	getMinY ()I h
	getSeaLevel ()I g
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/levelgen/Density csw
	SURFACE a
	UNRECOVERABLY_DENSE b
	UNRECOVERABLY_THIN c
net/minecraft/world/level/levelgen/FlatLevelSource net/minecraft/world/level/levelgen/ChunkProviderFlat
	CODEC d
	settings e
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	climateSampler ()Lnet/minecraft/world/level/biome/Climate$Sampler; c
	codec ()Lcom/mojang/serialization/Codec; a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	getGenDepth ()I f
	getMinY ()I h
	getSeaLevel ()I g
	getSpawnHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; i
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	validBiome (Lnet/minecraft/core/Registry;Ljava/util/function/Predicate;Lnet/minecraft/world/level/biome/Biome;)Z a
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/levelgen/GenerationStep net/minecraft/world/level/levelgen/WorldGenStage
net/minecraft/world/level/levelgen/GenerationStep$Carving net/minecraft/world/level/levelgen/WorldGenStage$Features
	$VALUES f
	AIR a
	BY_NAME d
	CODEC c
	LIQUID b
	name e
	$values ()[Lnet/minecraft/world/level/levelgen/GenerationStep$Carving; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/GenerationStep$Carving; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/GenerationStep$Decoration net/minecraft/world/level/levelgen/WorldGenStage$Decoration
	$VALUES l
	FLUID_SPRINGS i
	LAKES b
	LOCAL_MODIFICATIONS c
	RAW_GENERATION a
	STRONGHOLDS f
	SURFACE_STRUCTURES e
	TOP_LAYER_MODIFICATION k
	UNDERGROUND_DECORATION h
	UNDERGROUND_ORES g
	UNDERGROUND_STRUCTURES d
	VEGETAL_DECORATION j
	$values ()[Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; a
net/minecraft/world/level/levelgen/Heightmap net/minecraft/world/level/levelgen/HeightMap
	LOGGER a
	MATERIAL_MOTION_BLOCKING c
	NOT_AIR b
	chunk f
	data d
	isOpaque e
	getFirstAvailable (I)I a
	getFirstAvailable (II)I a
	getHighestTaken (II)I b
	getIndex (II)I c
	getRawData ()[J a
	primeHeightmaps (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Set;)V a
	setHeight (III)V a
	setRawData (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	update (IIILnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/Heightmap$Types net/minecraft/world/level/levelgen/HeightMap$Type
	$VALUES l
	CODEC g
	MOTION_BLOCKING e
	MOTION_BLOCKING_NO_LEAVES f
	OCEAN_FLOOR d
	OCEAN_FLOOR_WG c
	REVERSE_LOOKUP k
	WORLD_SURFACE b
	WORLD_SURFACE_WG a
	isOpaque j
	serializationKey h
	usage i
	$values ()[Lnet/minecraft/world/level/levelgen/Heightmap$Types; f
	getFromKey (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	getSerializationKey ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	isOpaque ()Ljava/util/function/Predicate; e
	keepAfterWorldgen ()Z d
	sendToClient ()Z b
net/minecraft/world/level/levelgen/Heightmap$Usage net/minecraft/world/level/levelgen/HeightMap$Use
	$VALUES d
	CLIENT c
	LIVE_WORLD b
	WORLDGEN a
	$values ()[Lnet/minecraft/world/level/levelgen/Heightmap$Usage; a
net/minecraft/world/level/levelgen/LegacyRandomSource$LegacyPositionalRandomFactory ctd$a
	seed a
	at (III)Lnet/minecraft/world/level/levelgen/RandomSource; a
	fromHashOf (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/RandomSource; a
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator net/minecraft/world/level/levelgen/ChunkGeneratorAbstract
	AIR g
	CODEC d
	EMPTY_COLUMN h
	defaultBlock e
	globalFluidPicker n
	materialRule m
	noises i
	sampler k
	seed j
	settings f
	surfaceSystem l
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	climateSampler ()Lnet/minecraft/world/level/biome/Climate$Sampler; c
	codec ()Lcom/mojang/serialization/Codec; a
	createBiomes (Lnet/minecraft/core/Registry;Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	debugPreliminarySurfaceLevel (Lnet/minecraft/world/level/levelgen/NoiseChunk;IIILnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	doCreateBiomes (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	doFill (Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	getGenDepth ()I f
	getMinY ()I h
	getMobsAt (Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/util/random/WeightedRandomList; a
	getSeaLevel ()I g
	iterateNoiseColumn (II[Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Predicate;II)Ljava/util/OptionalInt; a
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	stable (JLnet/minecraft/resources/ResourceKey;)Z a
	topMaterial (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller ctg$a
net/minecraft/world/level/levelgen/NoiseChunk$InterpolatableNoise ctg$b
net/minecraft/world/level/levelgen/NoiseChunk$NoiseFiller ctg$c
net/minecraft/world/level/levelgen/NoiseChunk$NoiseInterpolator ctg$d
	noise000 e
	noise001 f
	noise010 i
	noise011 j
	noise100 g
	noise101 h
	noise110 k
	noise111 l
	noiseFiller d
	slice0 b
	slice1 c
	value s
	valueXZ00 m
	valueXZ01 o
	valueXZ10 n
	valueXZ11 p
	valueZ0 q
	valueZ1 r
	advanceCellX (I)V a
	allocateSlice (II)[[D a
	fillSlice ([[DI)V a
	initializeForFirstCellX ()V a
	selectCellYZ (II)V b
	swapSlices ()V b
	updateForX (D)V b
	updateForY (D)V a
	updateForZ (D)V c
net/minecraft/world/level/levelgen/NoiseChunk$Sampler ctg$e
net/minecraft/world/level/levelgen/NoiseGeneratorSettings net/minecraft/world/level/levelgen/GeneratorSettingBase
	AMPLIFIED e
	CAVES h
	CODEC b
	DIRECT_CODEC a
	END g
	FLOATING_ISLANDS i
	LARGE_BIOMES d
	NETHER f
	OVERWORLD c
	aquifersEnabled r
	defaultBlock m
	defaultFluid n
	disableMobGeneration q
	noiseCavesEnabled s
	noiseSettings l
	noodleCavesEnabled u
	oreVeinsEnabled t
	randomSource j
	seaLevel p
	structureSettings k
	surfaceRule o
	bootstrap ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; n
	caves ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; q
	createRandomSource (J)Lnet/minecraft/world/level/levelgen/RandomSource; a
	disableMobGeneration ()Z g
	end ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; o
	floatingIslands ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; r
	getDefaultBlock ()Lnet/minecraft/world/level/block/state/BlockState; c
	getDefaultFluid ()Lnet/minecraft/world/level/block/state/BlockState; d
	getRandomSource ()Lnet/minecraft/world/level/levelgen/WorldgenRandom$Algorithm; m
	isAquifersEnabled ()Z h
	isNoiseCavesEnabled ()Z i
	isNoodleCavesEnabled ()Z k
	isOreVeinsEnabled ()Z j
	nether ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; p
	noiseSettings ()Lnet/minecraft/world/level/levelgen/NoiseSettings; b
	overworld (ZZ)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	register (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;)V a
	seaLevel ()I f
	stable (Lnet/minecraft/resources/ResourceKey;)Z a
	structureSettings ()Lnet/minecraft/world/level/levelgen/StructureSettings; a
	surfaceRule ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; e
	useLegacyRandomSource ()Z l
net/minecraft/world/level/levelgen/NoiseSampler$FlatNoiseData cti$a
	continentalness c
	erosion e
	shiftedX a
	shiftedZ b
	terrainInfo f
	weirdness d
	continentalness ()D c
	erosion ()D e
	shiftedX ()D a
	shiftedZ ()D b
	terrainInfo ()Lnet/minecraft/world/level/levelgen/TerrainInfo; f
	weirdness ()D d
net/minecraft/world/level/levelgen/NoiseSampler$QuantizedSpaghettiRarity cti$b
	getSpaghettiRarity3D (D)D b
	getSphaghettiRarity2D (D)D a
net/minecraft/world/level/levelgen/NoiseSampler$VeinType cti$c
	$VALUES h
	COPPER a
	IRON b
	filler e
	maxY g
	minY f
	ore c
	rawOreBlock d
	$values ()[Lnet/minecraft/world/level/levelgen/NoiseSampler$VeinType; a
net/minecraft/world/level/levelgen/PatrolSpawner net/minecraft/world/level/levelgen/MobSpawnerPatrol
	nextTick a
	spawnPatrolMember (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;Z)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/levelgen/PhantomSpawner net/minecraft/world/level/levelgen/MobSpawnerPhantom
	nextTick a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/levelgen/RandomSupport$Seed128bit ctr$a
	seedHi b
	seedLo a
	seedHi ()J b
	seedLo ()J a
net/minecraft/world/level/levelgen/SingleThreadedRandomSource cts
	INCREMENT f
	MODULUS_BITS c
	MODULUS_MASK d
	MULTIPLIER e
	gaussianSource h
	seed g
	fork ()Lnet/minecraft/world/level/levelgen/RandomSource; a
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; b
	next (I)I a
net/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface ctu$a
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/levelgen/SurfaceRules$Bandlands ctu$b
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Bandlands; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource ctu$c
	CODEC c
	biomes a
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	biomes ()Ljava/util/List; b
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/levelgen/SurfaceRules$BlockRuleSource ctu$d
	CODEC d
	resultState a
	rule c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lcom/mojang/serialization/Codec; a
	resultState ()Lnet/minecraft/world/level/block/state/BlockState; b
	rule ()Lnet/minecraft/world/level/levelgen/SurfaceRules$StateRule; c
net/minecraft/world/level/levelgen/SurfaceRules$Condition ctu$e
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$ConditionSource ctu$f
	CODEC b
	bootstrap ()Lcom/mojang/serialization/Codec; c
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/levelgen/SurfaceRules$Context ctu$g
	HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE a
	SURFACE_CELL_BITS b
	SURFACE_CELL_MASK d
	SURFACE_CELL_SIZE c
	abovePreliminarySurface i
	biome A
	biomeGetter l
	biomeKey B
	biomes m
	blockX r
	blockY C
	blockZ s
	chunk j
	context n
	hole h
	lastMinSurfaceLevelUpdate w
	lastPreliminarySurfaceCellOrigin o
	lastSurfaceDepth2Update u
	lastUpdateXZ q
	lastUpdateY y
	minSurfaceLevel x
	noiseChunk k
	pos z
	preliminarySurfaceCache p
	steep g
	stoneDepthAbove F
	stoneDepthBelow E
	surfaceDepth t
	surfaceSecondaryDepth v
	system e
	temperature f
	waterHeight D
	blockCoordToSurfaceCell (I)I a
	getMinSurfaceLevel ()I b
	getSurfaceSecondaryDepth ()I a
	surfaceCellToBlockCoord (I)I b
	updateXZ (II)V a
	updateY (IIIIII)V a
net/minecraft/world/level/levelgen/SurfaceRules$Context$AbovePreliminarySurfaceCondition ctu$g$a
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$Context$HoleCondition ctu$g$b
	compute ()Z a
net/minecraft/world/level/levelgen/SurfaceRules$Context$SteepMaterialCondition ctu$g$c
	compute ()Z a
net/minecraft/world/level/levelgen/SurfaceRules$Context$TemperatureHelperCondition ctu$g$d
	compute ()Z a
net/minecraft/world/level/levelgen/SurfaceRules$Hole ctu$h
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Hole; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/levelgen/SurfaceRules$LazyCondition ctu$i
	context d
	lastUpdate a
	result e
	compute ()Z a
	getContextLastUpdate ()J c
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$LazyXZCondition ctu$j
	getContextLastUpdate ()J c
net/minecraft/world/level/levelgen/SurfaceRules$LazyYCondition ctu$k
	getContextLastUpdate ()J c
net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource ctu$l
	CODEC e
	maxThreshold d
	minThreshold c
	noise a
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lcom/mojang/serialization/Codec; a
	maxThreshold ()D e
	minThreshold ()D d
	noise ()Lnet/minecraft/resources/ResourceKey; b
net/minecraft/world/level/levelgen/SurfaceRules$NotCondition ctu$m
	target a
	target ()Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$NotConditionSource ctu$n
	CODEC c
	target a
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lcom/mojang/serialization/Codec; a
	target ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
net/minecraft/world/level/levelgen/SurfaceRules$RuleSource ctu$o
	CODEC b
	bootstrap ()Lcom/mojang/serialization/Codec; d
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/levelgen/SurfaceRules$SequenceRule ctu$p
	rules a
	rules ()Ljava/util/List; a
net/minecraft/world/level/levelgen/SurfaceRules$SequenceRuleSource ctu$q
	CODEC c
	sequence a
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lcom/mojang/serialization/Codec; a
	sequence ()Ljava/util/List; b
net/minecraft/world/level/levelgen/SurfaceRules$StateRule ctu$r
	state a
	state ()Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/SurfaceRules$Steep ctu$s
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Steep; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck ctu$t
	CODEC f
	addSurfaceDepth c
	addSurfaceSecondaryDepth d
	offset a
	surfaceType e
	addSurfaceDepth ()Z d
	addSurfaceSecondaryDepth ()Z e
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lcom/mojang/serialization/Codec; a
	offset ()I b
	surfaceType ()Lnet/minecraft/world/level/levelgen/placement/CaveSurface; f
net/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule ctu$u
net/minecraft/world/level/levelgen/SurfaceRules$Temperature ctu$v
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Temperature; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/levelgen/SurfaceRules$TestRule ctu$w
	condition a
	followup b
	condition ()Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	followup ()Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; b
net/minecraft/world/level/levelgen/SurfaceRules$TestRuleSource ctu$x
	CODEC d
	ifTrue a
	thenRun c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lcom/mojang/serialization/Codec; a
	ifTrue ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
	thenRun ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; c
net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource ctu$y
	CODEC e
	falseAtAndAbove d
	randomName a
	trueAtAndBelow c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lcom/mojang/serialization/Codec; a
	falseAtAndAbove ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; e
	randomName ()Lnet/minecraft/resources/ResourceLocation; b
	trueAtAndBelow ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; d
net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource ctu$z
	CODEC e
	addStoneDepth d
	offset a
	surfaceDepthMultiplier c
	addStoneDepth ()Z e
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lcom/mojang/serialization/Codec; a
	offset ()I b
	surfaceDepthMultiplier ()I d
net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource ctu$aa
	CODEC e
	addStoneDepth d
	anchor a
	surfaceDepthMultiplier c
	addStoneDepth ()Z e
	anchor ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lcom/mojang/serialization/Codec; a
	surfaceDepthMultiplier ()I d
net/minecraft/world/level/levelgen/VerticalAnchor$AboveBottom ctx$a
	CODEC b
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/VerticalAnchor$Absolute ctx$b
	CODEC b
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/VerticalAnchor$BelowTop ctx$c
	CODEC b
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/WorldGenSettings net/minecraft/world/level/levelgen/GeneratorSettings
	CODEC a
	LOGGER b
	dimensions f
	generateBonusChest e
	generateFeatures d
	legacyCustomOptions g
	seed c
	create (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	demoSettings (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	dimensions ()Lnet/minecraft/core/MappedRegistry; d
	generateBonusChest ()Z c
	generateFeatures ()Z b
	guardExperimental ()Lcom/mojang/serialization/DataResult; m
	isDebug ()Z g
	isFlatWorld ()Z h
	isOldCustomizedWorld ()Z i
	levelStemToLevel (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; a
	levelToLevelStem (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; b
	levels ()Lcom/google/common/collect/ImmutableSet; f
	makeDefault (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; b
	makeDefaultOverworld (Lnet/minecraft/core/RegistryAccess;J)Lnet/minecraft/world/level/levelgen/NoiseBasedChunkGenerator; a
	makeDefaultOverworld (Lnet/minecraft/core/RegistryAccess;JZ)Lnet/minecraft/world/level/levelgen/NoiseBasedChunkGenerator; a
	makeOverworld (Lnet/minecraft/core/RegistryAccess;JLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/NoiseBasedChunkGenerator; a
	makeOverworld (Lnet/minecraft/core/RegistryAccess;JLnet/minecraft/resources/ResourceKey;Z)Lnet/minecraft/world/level/levelgen/NoiseBasedChunkGenerator; a
	overworld ()Lnet/minecraft/world/level/chunk/ChunkGenerator; e
	seed ()J a
	stable ()Z n
	withBonusChest ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; j
	withBonusChestToggled ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; l
	withFeaturesToggled ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; k
	withOverworld (Lnet/minecraft/core/MappedRegistry;Ljava/util/function/Supplier;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/MappedRegistry; a
	withOverworld (Lnet/minecraft/core/Registry;Lnet/minecraft/core/MappedRegistry;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/MappedRegistry; a
	withSeed (ZLjava/util/OptionalLong;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
net/minecraft/world/level/levelgen/WorldgenRandom net/minecraft/world/level/levelgen/SeededRandom
	count b
	randomSource a
	fork ()Lnet/minecraft/world/level/levelgen/RandomSource; a
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; b
	getCount ()I c
	seedSlimeChunk (IIJJ)Ljava/util/Random; a
	setDecorationSeed (JII)J a
	setFeatureSeed (JII)V b
	setLargeFeatureSeed (JII)V c
	setLargeFeatureWithSalt (JIII)V a
net/minecraft/world/level/levelgen/WorldgenRandom$Algorithm cua$a
	$VALUES d
	LEGACY a
	XOROSHIRO b
	constructor c
	$values ()[Lnet/minecraft/world/level/levelgen/WorldgenRandom$Algorithm; a
	newInstance (J)Lnet/minecraft/world/level/levelgen/RandomSource; a
net/minecraft/world/level/levelgen/XoroshiroRandomSource$XoroshiroPositionalRandomFactory cuc$a
	MD5_128 a
	seedHi c
	seedLo b
	at (III)Lnet/minecraft/world/level/levelgen/RandomSource; a
	fromHashOf (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/RandomSource; a
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/blending/Blender$CellValueGetter cud$a
net/minecraft/world/level/levelgen/blending/Blender$DistanceGetter cud$b
net/minecraft/world/level/levelgen/blending/Blender$PositionedBlendingData cud$c
	blendingData c
	chunkX a
	chunkZ b
	blendingData ()Lnet/minecraft/world/level/levelgen/blending/BlendingData; c
	chunkX ()I a
	chunkZ ()I b
net/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer cue$a
net/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer cue$b
net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$CanyonShapeConfiguration cux$a
	CODEC a
	distanceFactor b
	horizontalRadiusFactor e
	thickness c
	verticalRadiusCenterFactor g
	verticalRadiusDefaultFactor f
	widthSmoothness d
net/minecraft/world/level/levelgen/carver/CanyonWorldCarver net/minecraft/world/level/levelgen/carver/WorldGenCanyon
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	doCarve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDFFFIIDLnet/minecraft/world/level/chunk/CarvingMask;)V a
	initWidthFactors (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Ljava/util/Random;)[F a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Ljava/util/Random;)Z a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Ljava/util/Random;)Z a
	shouldSkip (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;[FDDDI)Z a
	updateVerticalRadius (Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Ljava/util/Random;DFF)D a
net/minecraft/world/level/levelgen/carver/CarverConfiguration net/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration
	CODEC d
	debugSettings h
	lavaLevel g
	y e
	yScale f
net/minecraft/world/level/levelgen/carver/CaveWorldCarver net/minecraft/world/level/levelgen/carver/WorldGenCaves
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	createRoom (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/levelgen/Aquifer;DDDFDLnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)V a
	createTunnel (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDDDFFFIIDLnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)V a
	getCaveBound ()I a
	getThickness (Ljava/util/Random;)F a
	getYScale ()D b
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Ljava/util/Random;)Z a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Ljava/util/Random;)Z a
	shouldSkip (DDDD)Z a
net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver net/minecraft/world/level/levelgen/carver/WorldGenCarverWrapper
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	config e
	worldCarver d
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	config ()Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration; a
	isStartChunk (Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/carver/NetherWorldCarver net/minecraft/world/level/levelgen/carver/WorldGenCavesHell
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	getCaveBound ()I a
	getThickness (Ljava/util/Random;)F a
	getYScale ()D b
net/minecraft/world/level/levelgen/carver/WorldCarver net/minecraft/world/level/levelgen/carver/WorldGenCarverAbstract
	AIR d
	CANYON c
	CAVE a
	CAVE_AIR e
	LAVA g
	NETHER_CAVE b
	WATER f
	configuredCodec j
	liquids i
	replaceableBlocks h
	canReach (Lnet/minecraft/world/level/ChunkPos;DDIIF)Z a
	canReplaceBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveEllipsoid (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/levelgen/Aquifer;DDDDDLnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)Z a
	configured (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver; a
	configuredCodec ()Lcom/mojang/serialization/Codec; c
	getCarveState (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDebugState (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRange ()I d
	isDebugEnabled (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z b
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Ljava/util/Random;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/carver/WorldCarver;)Lnet/minecraft/world/level/levelgen/carver/WorldCarver; a
net/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker cvg$a
net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature net/minecraft/world/level/levelgen/feature/WorldGenMushrooms
	getTreeHeight (Ljava/util/Random;)I a
	getTreeRadiusForHeight (IIII)I a
	isValidPosition (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)Z a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeTrunk (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;ILnet/minecraft/core/BlockPos$MutableBlockPos;)V a
net/minecraft/world/level/levelgen/feature/BambooFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureBamboo
	BAMBOO_FINAL_LARGE b
	BAMBOO_TOP_LARGE c
	BAMBOO_TOP_SMALL d
	BAMBOO_TRUNK a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureBasaltColumns
	CANNOT_PLACE_ON a
	CLUSTERED_REACH b
	CLUSTERED_SIZE c
	UNCLUSTERED_REACH d
	UNCLUSTERED_SIZE e
	canPlaceAt (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	findAir (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Lnet/minecraft/core/BlockPos; a
	findSurface (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;I)Lnet/minecraft/core/BlockPos; a
	isAirOrLavaOcean (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeColumn (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/levelgen/feature/BasaltPillarFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureBasaltPillar
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeBaseHangOff (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
	placeHangOff (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/levelgen/feature/BaseDiskFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureDisk
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BastionFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureBastionRemnant
	BASTION_SPAWN_HEIGHT a
	checkLocation (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;)Z a
net/minecraft/world/level/levelgen/feature/BlockBlobFeature net/minecraft/world/level/levelgen/feature/WorldGenTaigaStructure
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BlockPileFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureBlockPile
	mayPlaceOn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	tryPlaceBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration;)V a
net/minecraft/world/level/levelgen/feature/BlueIceFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureBlueIce
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BonusChestFeature net/minecraft/world/level/levelgen/feature/WorldGenBonusChest
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature net/minecraft/world/level/levelgen/feature/WorldGenBuriedTreasure
	RANDOM_SALT a
	checkLocation (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;)Z a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context;)V a
	getLocatePos (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/levelgen/feature/ChorusPlantFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureChorusPlant
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ConfiguredFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureConfigured
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	LOGGER d
	config f
	feature e
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; b
	feature ()Lnet/minecraft/world/level/levelgen/feature/Feature; a
	filtered (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/placement/PlacedFeature; a
	filteredByBlockSurvival (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/placement/PlacedFeature; a
	getFeatures ()Ljava/util/stream/Stream; d
	onlyWhenEmpty ()Lnet/minecraft/world/level/levelgen/placement/PlacedFeature; c
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
	placed (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/placement/PlacedFeature; a
	placed ([Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lnet/minecraft/world/level/levelgen/placement/PlacedFeature; a
net/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature net/minecraft/world/level/levelgen/feature/StructureFeature
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	config e
	feature d
	generate (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;JLnet/minecraft/world/level/ChunkPos;ILnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
net/minecraft/world/level/levelgen/feature/CoralClawFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoralClaw
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoral
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeCoralBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralMushroomFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoralMushroom
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralTreeFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoralTree
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/DeltaFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureDelta
	CANNOT_REPLACE a
	DIRECTIONS b
	RIM_SPAWN_CHANCE c
	isClear (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/DesertPyramidFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureDesertPyramid
	checkLocation (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;)Z a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context;)V a
net/minecraft/world/level/levelgen/feature/DesertWellFeature net/minecraft/world/level/levelgen/feature/WorldGenDesertWell
	IS_SAND a
	sandSlab b
	sandstone c
	water d
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/DiskReplaceFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureCircle
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/EndCityFeature net/minecraft/world/level/levelgen/feature/WorldGenEndCity
	RANDOM_SALT a
	getYPositionForFeature (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	linearSeparation ()Z a
	pieceGeneratorSupplier (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/feature/EndGatewayFeature net/minecraft/world/level/levelgen/feature/WorldGenEndGateway
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/EndIslandFeature net/minecraft/world/level/levelgen/feature/WorldGenEndIsland
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/EndPodiumFeature net/minecraft/world/level/levelgen/feature/WorldGenEndTrophy
	CORNER_ROUNDING d
	END_PODIUM_LOCATION e
	PODIUM_PILLAR_HEIGHT b
	PODIUM_RADIUS a
	RIM_RADIUS c
	active ao
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/Feature net/minecraft/world/level/levelgen/feature/WorldGenerator
	BAMBOO V
	BASALT_COLUMNS aa
	BASALT_PILLAR af
	BLOCK_COLUMN x
	BLOCK_PILE k
	BLUE_ICE E
	BONUS_CHEST ae
	CHORUS_PLANT m
	CORAL_CLAW S
	CORAL_MUSHROOM R
	CORAL_TREE Q
	DELTA_FEATURE ab
	DESERT_WELL p
	DISK H
	DRIPSTONE_CLUSTER al
	END_GATEWAY N
	END_ISLAND M
	END_SPIKE L
	FILL_LAYER ad
	FLOWER h
	FOREST_ROCK G
	FOSSIL q
	FREEZE_TOP_LAYER v
	GEODE ak
	GLOWSTONE_BLOB u
	GLOW_LICHEN B
	HUGE_BROWN_MUSHROOM s
	HUGE_FUNGUS W
	HUGE_RED_MUSHROOM r
	ICEBERG F
	ICE_PATCH I
	ICE_SPIKE t
	KELP P
	LAKE J
	LARGE_DRIPSTONE am
	MONSTER_ROOM D
	NETHER_FOREST_VEGETATION X
	NO_BONEMEAL_FLOWER i
	NO_OP f
	ORE K
	POINTED_DRIPSTONE an
	RANDOM_BOOLEAN_SELECTOR aj
	RANDOM_PATCH j
	RANDOM_SELECTOR ah
	REPLACE_BLOBS ac
	REPLACE_SINGLE_BLOCK n
	ROOT_SYSTEM A
	SCATTERED_ORE ag
	SEAGRASS O
	SEA_PICKLE T
	SIMPLE_BLOCK U
	SIMPLE_RANDOM_SELECTOR ai
	SPRING l
	TREE g
	TWISTING_VINES Z
	UNDERWATER_MAGMA C
	VEGETATION_PATCH y
	VINES w
	VOID_START_PLATFORM o
	WATERLOGGED_VEGETATION_PATCH z
	WEEPING_VINES Y
	configuredCodec a
	checkNeighbors (Ljava/util/function/Function;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	configured (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	configuredCodec ()Lcom/mojang/serialization/Codec; a
	isAdjacentToAir (Ljava/util/function/Function;Lnet/minecraft/core/BlockPos;)Z a
	isAir (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z b
	isDirt (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isGrassOrDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	isReplaceable (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/function/Predicate; a
	isStone (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	markAboveForPostProcessing (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/Feature;)Lnet/minecraft/world/level/levelgen/feature/Feature; a
	safeSetBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Predicate;)V a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/levelgen/feature/FeatureCountTracker cwm
	LOGGER a
	data b
	chunkDecorated (Lnet/minecraft/server/level/ServerLevel;)V a
	clearCounts ()V a
	featurePlaced (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;Ljava/util/Optional;)V a
	logCounts ()V b
net/minecraft/world/level/levelgen/feature/FeatureCountTracker$FeatureData cwm$a
	feature a
	topFeature b
	feature ()Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	topFeature ()Ljava/util/Optional; b
net/minecraft/world/level/levelgen/feature/FeatureCountTracker$LevelData cwm$b
	chunksWithFeatures b
	featureData a
	chunksWithFeatures ()Lorg/apache/commons/lang3/mutable/MutableInt; b
	featureData ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
net/minecraft/world/level/levelgen/feature/FillLayerFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureFill
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/FossilFeature net/minecraft/world/level/levelgen/feature/WorldGenFossils
	countEmptyCorners (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)I a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/GlowstoneFeature net/minecraft/world/level/levelgen/feature/WorldGenLightStone1
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature net/minecraft/world/level/levelgen/feature/WorldGenHugeMushroomBrown
	getTreeRadiusForHeight (IIII)I a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration net/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungiConfiguration
	CODEC a
	decorState e
	hatState d
	planted f
	stemState c
	validBaseState b
net/minecraft/world/level/levelgen/feature/HugeFungusFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungi
	HUGE_PROBABILITY a
	isReplaceable (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeHat (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos;IZ)V b
	placeHatBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos$MutableBlockPos;FFF)V a
	placeHatDropBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	placeStem (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos;IZ)V a
	tryPlaceWeepingVines (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;)V a
net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature net/minecraft/world/level/levelgen/feature/WorldGenHugeMushroomRed
	getTreeRadiusForHeight (IIII)I a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/IcePatchFeature net/minecraft/world/level/levelgen/feature/WorldGenPackedIce1
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/IceSpikeFeature net/minecraft/world/level/levelgen/feature/WorldGenPackedIce2
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/IcebergFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureIceburg
	belowIsAir (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	carve (IILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;ZDLnet/minecraft/core/BlockPos;II)V a
	generateCutOut (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;IILnet/minecraft/core/BlockPos;ZIDI)V a
	generateIcebergBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;IIIIIIZIDZLnet/minecraft/world/level/block/state/BlockState;)V a
	getEllipseC (III)I a
	heightDependentRadiusEllipse (III)I b
	heightDependentRadiusRound (Ljava/util/Random;III)I a
	heightDependentRadiusSteep (Ljava/util/Random;III)I b
	isIcebergState (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	removeFloatingSnowLayer (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setIcebergBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;IIZZLnet/minecraft/world/level/block/state/BlockState;)V a
	signedDistanceCircle (IILnet/minecraft/core/BlockPos;ILjava/util/Random;)D a
	signedDistanceEllipse (IILnet/minecraft/core/BlockPos;IID)D a
	smooth (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;IIZI)V a
net/minecraft/world/level/levelgen/feature/IglooFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureIgloo
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context;)V a
net/minecraft/world/level/levelgen/feature/JigsawFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureJigsaw
net/minecraft/world/level/levelgen/feature/JunglePyramidFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureJunglePyramid
	checkLocation (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;)Z a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context;)V a
net/minecraft/world/level/levelgen/feature/KelpFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureKelp
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/LakeFeature net/minecraft/world/level/levelgen/feature/WorldGenLakes
	AIR a
	canReplaceBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/LakeFeature$Configuration cxf$a
	CODEC a
	barrier c
	fluid b
	barrier ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; b
	fluid ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone cxg$a
	bluntness d
	pointingUp b
	radius c
	root a
	scale e
	getHeight ()I a
	getHeightAtRadius (F)I a
	getMaxY ()I c
	getMinY ()I b
	isSuitableForWind (Lnet/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration;)Z a
	moveBackUntilBaseIsInsideStoneAndShrinkRadiusIfNecessary (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)Z a
	placeBlocks (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)V a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter cxg$b
	originY a
	windSpeed b
	noWind ()Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter; a
	offset (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/levelgen/feature/MineshaftFeature net/minecraft/world/level/levelgen/feature/WorldGenMineshaft
	checkLocation (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;)Z a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context;)V a
net/minecraft/world/level/levelgen/feature/MineshaftFeature$Type net/minecraft/world/level/levelgen/feature/WorldGenMineshaft$Type
	$VALUES i
	BY_NAME d
	CODEC c
	MESA b
	NORMAL a
	fenceState h
	name e
	planksState g
	woodState f
	$values ()[Lnet/minecraft/world/level/levelgen/feature/MineshaftFeature$Type; f
	byId (I)Lnet/minecraft/world/level/levelgen/feature/MineshaftFeature$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/MineshaftFeature$Type; a
	getFenceState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getName ()Ljava/lang/String; a
	getPlanksState ()Lnet/minecraft/world/level/block/state/BlockState; d
	getSerializedName ()Ljava/lang/String; c
	getWoodState ()Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/world/level/levelgen/feature/MonsterRoomFeature net/minecraft/world/level/levelgen/feature/WorldGenDungeons
	AIR c
	LOGGER a
	MOBS b
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	randomEntityId (Ljava/util/Random;)Lnet/minecraft/world/entity/EntityType; a
net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureNetherForestVegetation
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/NetherFortressFeature net/minecraft/world/level/levelgen/feature/WorldGenNether
	FORTRESS_ENEMIES a
	checkLocation (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;)Z a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context;)V a
net/minecraft/world/level/levelgen/feature/NoOpFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureEmpty
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/OceanMonumentFeature net/minecraft/world/level/levelgen/feature/WorldGenMonument
	MONUMENT_ENEMIES a
	checkLocation (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;)Z a
	createTopPiece (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/WorldgenRandom;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context;)V a
	linearSeparation ()Z a
	regeneratePiecesAfterLoad (Lnet/minecraft/world/level/ChunkPos;JLnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; a
net/minecraft/world/level/levelgen/feature/OreFeature net/minecraft/world/level/levelgen/feature/WorldGenMinable
	canPlaceOre (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Function;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	doPlace (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;DDDDDDIIIII)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	shouldSkipAirCheck (Ljava/util/Random;F)Z a
net/minecraft/world/level/levelgen/feature/PillagerOutpostFeature net/minecraft/world/level/levelgen/feature/WorldGenFeaturePillagerOutpost
	OUTPOST_ENEMIES a
	checkLocation (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;)Z a
	isNearVillage (Lnet/minecraft/world/level/chunk/ChunkGenerator;JLnet/minecraft/world/level/ChunkPos;)Z a
net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureChoice
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RandomPatchFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureRandomPatch
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RandomSelectorFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureRandomChoice
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureNetherrackReplaceBlobs
	findTarget (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/core/BlockPos; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureReplaceBlock
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RuinedPortalFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureRuinedPortal
	JUNGLE_MOSSINESS B
	MIN_Y_INDEX D
	PROBABILITY_OF_AIR_POCKET y
	PROBABILITY_OF_GIANT_PORTAL x
	PROBABILITY_OF_UNDERGROUND z
	STRUCTURE_LOCATION_GIANT_PORTALS w
	STRUCTURE_LOCATION_PORTALS a
	SWAMP_MOSSINESS C
	UNDERWATER_MOSSINESS A
	findSuitableY (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;ZIILnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	getRandomWithinInterval (Ljava/util/Random;II)I a
	isCold (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome;)Z a
	pieceGeneratorSupplier (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/feature/RuinedPortalFeature$Type net/minecraft/world/level/levelgen/feature/WorldGenFeatureRuinedPortal$Type
	$VALUES k
	BY_NAME i
	CODEC h
	DESERT b
	JUNGLE c
	MOUNTAIN e
	NETHER g
	OCEAN f
	STANDARD a
	SWAMP d
	name j
	$values ()[Lnet/minecraft/world/level/levelgen/feature/RuinedPortalFeature$Type; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/RuinedPortalFeature$Type; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/feature/SeaPickleFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureSeaPickel
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SeagrassFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureSeaGrass
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ShipwreckFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureShipwreck
	checkLocation (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;)Z a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context;)V a
net/minecraft/world/level/levelgen/feature/SimpleBlockFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureBlock
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureRandom2Configuration
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureIceSnow
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SpikeFeature net/minecraft/world/level/levelgen/feature/WorldGenEnder
	NUMBER_OF_SPIKES a
	SPIKE_CACHE c
	SPIKE_DISTANCE b
	getSpikesForLevel (Lnet/minecraft/world/level/WorldGenLevel;)Ljava/util/List; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeSpike (Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration;Lnet/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike;)V a
net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike net/minecraft/world/level/levelgen/feature/WorldGenEnder$Spike
	CODEC a
	centerX b
	centerZ c
	guarded f
	height e
	radius d
	topBoundingBox g
	getCenterX ()I a
	getCenterZ ()I b
	getHeight ()I d
	getRadius ()I c
	getTopBoundingBox ()Lnet/minecraft/world/phys/AABB; f
	isCenterWithinChunk (Lnet/minecraft/core/BlockPos;)Z a
	isGuarded ()Z e
net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader cyf$b
	load (Ljava/lang/Long;)Ljava/util/List; a
net/minecraft/world/level/levelgen/feature/SpringFeature net/minecraft/world/level/levelgen/feature/WorldGenLiquids
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/StrongholdFeature net/minecraft/world/level/levelgen/feature/WorldGenStronghold
	checkLocation (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;)Z a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context;)V a
net/minecraft/world/level/levelgen/feature/StructureFeature net/minecraft/world/level/levelgen/feature/StructureGenerator
	BASTION_REMNANT t
	BURIED_TREASURE q
	DESERT_PYRAMID g
	END_CITY p
	IGLOO h
	JUNGLE_TEMPLE f
	LOGGER w
	MAX_STRUCTURE_RANGE v
	MINESHAFT d
	NETHER_BRIDGE o
	NETHER_FOSSIL s
	NOISE_AFFECTING_FEATURES u
	OCEAN_MONUMENT m
	OCEAN_RUIN n
	PILLAGER_OUTPOST c
	RUINED_PORTAL i
	SHIPWRECK j
	STEP a
	STRONGHOLD l
	STRUCTURES_REGISTRY b
	SWAMP_HUT k
	VILLAGE r
	WOODLAND_MANSION e
	configuredStructureCodec x
	pieceGenerator y
	postPlacementProcessor z
	adjustBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	bootstrap ()V c
	canGenerate (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;JLnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;Ljava/util/function/Predicate;)Z a
	configured (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature; a
	configuredStructureCodec ()Lcom/mojang/serialization/Codec; d
	generate (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;JLnet/minecraft/world/level/ChunkPos;ILnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getFeatureName ()Ljava/lang/String; f
	getLocatePos (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
	getNearestGeneratedFeature (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/core/BlockPos;IZJLnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;)Lnet/minecraft/core/BlockPos; a
	getPostPlacementProcessor ()Lnet/minecraft/world/level/levelgen/structure/PostPlacementProcessor; e
	getPotentialFeatureChunk (Lnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;JII)Lnet/minecraft/world/level/ChunkPos; a
	linearSeparation ()Z a
	loadStaticStart (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;J)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;)Lnet/minecraft/world/level/levelgen/feature/StructureFeature; a
	step ()Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; b
net/minecraft/world/level/levelgen/feature/StructurePieceType net/minecraft/world/level/levelgen/feature/WorldGenFeatureStructurePieceType
	BURIED_TREASURE_PIECE aa
	DESERT_PYRAMID_PIECE L
	END_CITY_PIECE Y
	IGLOO I
	JIGSAW ad
	JUNGLE_PYRAMID_PIECE G
	MINE_SHAFT_CORRIDOR a
	MINE_SHAFT_CROSSING b
	MINE_SHAFT_ROOM c
	MINE_SHAFT_STAIRS d
	NETHER_FORTRESS_BRIDGE_CROSSING e
	NETHER_FORTRESS_BRIDGE_END_FILLER f
	NETHER_FORTRESS_BRIDGE_STRAIGHT g
	NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS h
	NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY i
	NETHER_FORTRESS_CASTLE_ENTRANCE j
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR m
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING k
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN l
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN n
	NETHER_FORTRESS_CASTLE_STALK_ROOM o
	NETHER_FORTRESS_MONSTER_THRONE p
	NETHER_FORTRESS_ROOM_CROSSING q
	NETHER_FORTRESS_STAIRS_ROOM r
	NETHER_FORTRESS_START s
	NETHER_FOSSIL ac
	OCEAN_MONUMENT_BUILDING M
	OCEAN_MONUMENT_CORE_ROOM N
	OCEAN_MONUMENT_DOUBLE_XY_ROOM P
	OCEAN_MONUMENT_DOUBLE_X_ROOM O
	OCEAN_MONUMENT_DOUBLE_YZ_ROOM R
	OCEAN_MONUMENT_DOUBLE_Y_ROOM Q
	OCEAN_MONUMENT_DOUBLE_Z_ROOM S
	OCEAN_MONUMENT_ENTRY_ROOM T
	OCEAN_MONUMENT_PENTHOUSE U
	OCEAN_MONUMENT_SIMPLE_ROOM V
	OCEAN_MONUMENT_SIMPLE_TOP_ROOM W
	OCEAN_MONUMENT_WING_ROOM X
	OCEAN_RUIN H
	RUINED_PORTAL J
	SHIPWRECK_PIECE ab
	STRONGHOLD_CHEST_CORRIDOR t
	STRONGHOLD_FILLER_CORRIDOR u
	STRONGHOLD_FIVE_CROSSING v
	STRONGHOLD_LEFT_TURN w
	STRONGHOLD_LIBRARY x
	STRONGHOLD_PORTAL_ROOM y
	STRONGHOLD_PRISON_HALL z
	STRONGHOLD_RIGHT_TURN A
	STRONGHOLD_ROOM_CROSSING B
	STRONGHOLD_STAIRS_DOWN C
	STRONGHOLD_START D
	STRONGHOLD_STRAIGHT E
	STRONGHOLD_STRAIGHT_STAIRS_DOWN F
	SWAMPLAND_HUT K
	WOODLAND_MANSION_PIECE Z
	setFullContextPieceId (Lnet/minecraft/world/level/levelgen/feature/StructurePieceType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/StructurePieceType; a
	setPieceId (Lnet/minecraft/world/level/levelgen/feature/StructurePieceType$ContextlessType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/StructurePieceType; a
	setTemplatePieceId (Lnet/minecraft/world/level/levelgen/feature/StructurePieceType$StructureTemplateType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/StructurePieceType; a
net/minecraft/world/level/levelgen/feature/StructurePieceType$ContextlessType cyj$a
net/minecraft/world/level/levelgen/feature/StructurePieceType$StructureTemplateType cyj$b
net/minecraft/world/level/levelgen/feature/SwamplandHutFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureSwampHut
	SWAMPHUT_ANIMALS w
	SWAMPHUT_ENEMIES a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context;)V a
net/minecraft/world/level/levelgen/feature/TreeFeature net/minecraft/world/level/levelgen/feature/WorldGenTrees
	BLOCK_UPDATE_FLAGS a
	doPlace (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	getMaxFreeTreeHeight (Lnet/minecraft/world/level/LevelSimulatedReader;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	isAirOrLeaves (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z d
	isBlockWater (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z g
	isFree (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z c
	isReplaceablePlant (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z h
	isVine (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z f
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setBlockKnownShape (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	updateLeaves (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Set;Ljava/util/Set;)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; a
	validTreePos (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z e
net/minecraft/world/level/levelgen/feature/TwistingVinesFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureTwistingVines
	findFirstAirBlockAboveGround (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	isInvalidPlacementLocation (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeWeepingVinesColumn (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
net/minecraft/world/level/levelgen/feature/VillageFeature net/minecraft/world/level/levelgen/feature/WorldGenVillage
net/minecraft/world/level/levelgen/feature/VinesFeature net/minecraft/world/level/levelgen/feature/WorldGenVines
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureEndPlatform
	PLATFORM_OFFSET a
	PLATFORM_ORIGIN_CHUNK b
	PLATFORM_RADIUS c
	PLATFORM_RADIUS_CHUNKS d
	checkerboardDistance (IIII)I a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/WeepingVinesFeature net/minecraft/world/level/levelgen/feature/WorldGenFeatureWeepingVines
	DIRECTIONS a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeRoofNetherWart (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
	placeRoofWeepingVines (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V b
	placeWeepingVinesColumn (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature net/minecraft/world/level/levelgen/feature/WorldGenWoodlandMansion
	afterPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V a
	linearSeparation ()Z a
	pieceGeneratorSupplier (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer cyw$a
	CODEC a
	height b
	state c
	height ()Lnet/minecraft/util/valueproviders/IntProvider; a
	state ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; b
net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureBlockPileConfiguration
	CODEC a
	stateProvider b
net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureLakeConfiguration
	CODEC a
	state b
net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureBasaltColumnsConfiguration
	CODEC a
	height c
	reach b
	height ()Lnet/minecraft/util/valueproviders/IntProvider; b
	reach ()Lnet/minecraft/util/valueproviders/IntProvider; a
net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenDecoratorFrequencyConfiguration
	CODEC a
	count b
	count ()Lnet/minecraft/util/valueproviders/IntProvider; a
net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureDeltaConfiguration
	CODEC a
	contents b
	rim c
	rimSize e
	size d
	contents ()Lnet/minecraft/world/level/block/state/BlockState; a
	rim ()Lnet/minecraft/world/level/block/state/BlockState; b
	rimSize ()Lnet/minecraft/util/valueproviders/IntProvider; d
	size ()Lnet/minecraft/util/valueproviders/IntProvider; c
net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureCircleConfiguration
	CODEC a
	halfHeight d
	radius c
	state b
	targets e
	halfHeight ()I c
	radius ()Lnet/minecraft/util/valueproviders/IntProvider; b
	state ()Lnet/minecraft/world/level/block/state/BlockState; a
	targets ()Ljava/util/List; d
net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenEndGatewayConfiguration
	CODEC a
	exact c
	exit b
	delayedExitSearch ()Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration; a
	getExit ()Ljava/util/Optional; b
	isExitExact ()Z c
	knownExit (Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration; a
net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration
	NONE m
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureMushroomConfiguration
	CODEC a
	capProvider b
	foliageRadius d
	stemProvider c
net/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureVillageConfiguration
	CODEC a
	maxDepth c
	startPool b
	maxDepth ()I a
	startPool ()Ljava/util/function/Supplier; b
net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureFillConfiguration
	CODEC a
	height b
	state c
net/minecraft/world/level/levelgen/feature/configurations/MineshaftConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenMineshaftConfiguration
	CODEC a
	probability b
	type c
net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureEmptyConfiguration
	CODEC a
	INSTANCE b
net/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureOceanRuinConfiguration
	CODEC a
	biomeTemp b
	clusterProbability d
	largeProbability c
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureOreConfiguration
	CODEC a
	discardChanceOnAirExposure d
	size c
	targetStates b
	target (Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTest;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState; a
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState czq$a
	CODEC a
	state c
	target b
net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfigurationChance
	CODEC j
	probability k
net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureChoiceConfiguration
	CODEC a
	featureFalse c
	featureTrue b
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomChoiceConfiguration
	CODEC a
	defaultFeature c
	features b
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomPatchConfiguration
	CODEC a
	feature e
	tries b
	xzSpread c
	ySpread d
	feature ()Ljava/util/function/Supplier; d
	tries ()I a
	xzSpread ()I b
	ySpread ()I c
net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureReplaceBlockConfiguration
	CODEC a
	targetStates b
net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRadiusConfiguration
	CODEC a
	radius d
	replaceState c
	targetState b
	radius ()Lnet/minecraft/util/valueproviders/IntProvider; a
net/minecraft/world/level/levelgen/feature/configurations/RuinedPortalConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRuinedPortalConfiguration
	CODEC a
	portalType b
net/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureShipwreckConfiguration
	CODEC a
	isBeached b
net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureBlockConfiguration
	CODEC a
	toPlace b
	toPlace ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; a
net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandom2
	CODEC a
	features b
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureEndSpikeConfiguration
	CODEC a
	crystalBeamTarget d
	crystalInvulnerable b
	spikes c
	getCrystalBeamTarget ()Lnet/minecraft/core/BlockPos; c
	getSpikes ()Ljava/util/List; b
	isCrystalInvulnerable ()Z a
net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureHellFlowingLavaConfiguration
	CODEC a
	holeCount e
	requiresBlockBelow c
	rockCount d
	state b
	validBlocks f
net/minecraft/world/level/levelgen/feature/configurations/StrongholdConfiguration net/minecraft/world/level/levelgen/feature/configurations/StructureSettingsStronghold
	CODEC a
	count d
	distance b
	spread c
	count ()I c
	distance ()I a
	spread ()I b
net/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration net/minecraft/world/level/levelgen/feature/configurations/StructureSettingsFeature
	CODEC a
	salt d
	separation c
	spacing b
	salt ()I c
	separation ()I b
	spacing ()I a
net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration
	CODEC a
	decorators h
	dirtProvider c
	foliagePlacer f
	foliageProvider e
	forceDirt j
	ignoreVines i
	minimumSize g
	trunkPlacer d
	trunkProvider b
net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder dai$a
	decorators g
	dirtProvider e
	foliagePlacer d
	foliageProvider b
	forceDirt i
	ignoreVines h
	minimumSize f
	trunkPlacer c
	trunkProvider a
	build ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration; c
	decorators (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	dirt (Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	forceDirt ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; b
	ignoreVines ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeThreeLayers
	CODEC d
	limit e
	lowerSize g
	middleSize h
	upperLimit f
	upperSize i
	getSizeAtHeight (II)I a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeTwoLayers
	CODEC d
	limit e
	lowerSize f
	upperSize g
	getSizeAtHeight (II)I a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerAcacia
	CODEC a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerBlob
	CODEC a
	height b
	blobParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerBush
	CODEC c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerDarkOak
	CODEC a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	shouldSkipLocationSigned (Ljava/util/Random;IIIIZ)Z b
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerFancy
	CODEC c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacer
	CODEC d
	offset f
	radius e
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;II)V a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	foliagePlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2; b
	foliageRadius (Ljava/util/Random;I)I a
	offset (Ljava/util/Random;)I a
	placeLeavesRow (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;IIZ)V a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	shouldSkipLocationSigned (Ljava/util/Random;IIIIZ)Z b
	tryPlaceLeaf (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment dax$a
	doubleTrunk c
	pos a
	radiusOffset b
	doubleTrunk ()Z c
	pos ()Lnet/minecraft/core/BlockPos; a
	radiusOffset ()I b
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers
	ACACIA_FOLIAGE_PLACER d
	BLOB_FOLIAGE_PLACER a
	BUSH_FOLIAGE_PLACER e
	DARK_OAK_FOLIAGE_PLACER i
	FANCY_FOLIAGE_PLACER f
	MEGA_JUNGLE_FOLIAGE_PLACER g
	MEGA_PINE_FOLIAGE_PLACER h
	PINE_FOLIAGE_PLACER c
	RANDOM_SPREAD_FOLIAGE_PLACER j
	SPRUCE_FOLIAGE_PLACER b
	codec k
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerJungle
	CODEC a
	height b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerMegaPine
	CODEC a
	crownHeight b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerPine
	CODEC a
	height b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	foliageRadius (Ljava/util/Random;I)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerSpruce
	CODEC a
	trunkHeight b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider
	CODEC a
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	simple (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider; a
	simple (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders
	DUAL_NOISE_PROVIDER e
	NOISE_PROVIDER d
	NOISE_THRESHOLD_PROVIDER c
	RANDOMIZED_INT_STATE_PROVIDER g
	ROTATED_BLOCK_PROVIDER f
	SIMPLE_STATE_PROVIDER a
	WEIGHTED_STATE_PROVIDER b
	codec h
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderRotatedBlock
	CODEC b
	block c
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderSimpl
	CODEC b
	state c
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderWeighted
	CODEC b
	weightedList c
	create (Lnet/minecraft/util/random/SimpleWeightedRandomList;)Lcom/mojang/serialization/DataResult; a
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/structures/EmptyPoolElement net/minecraft/world/level/levelgen/feature/structures/WorldGenFeatureDefinedStructurePoolEmpty
	CODEC a
	INSTANCE b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
net/minecraft/world/level/levelgen/feature/structures/FeaturePoolElement net/minecraft/world/level/levelgen/feature/structures/WorldGenFeatureDefinedStructurePoolFeature
	CODEC a
	defaultJigsawNBT c
	feature b
	fillDefaultJigsawNBT ()Lnet/minecraft/nbt/CompoundTag; b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
net/minecraft/world/level/levelgen/feature/structures/JigsawJunction net/minecraft/world/level/levelgen/feature/structures/WorldGenFeatureDefinedStructureJigsawJunction
	deltaY d
	destProjection e
	sourceGroundY b
	sourceX a
	sourceZ c
	deserialize (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/levelgen/feature/structures/JigsawJunction; a
	getDeltaY ()I d
	getDestProjection ()Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection; e
	getSourceGroundY ()I b
	getSourceX ()I a
	getSourceZ ()I c
	serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement net/minecraft/world/level/levelgen/feature/structures/WorldGenFeatureDefinedStructureJigsawPlacement
	LOGGER a
	addPieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece;ILnet/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;Lnet/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory;Lnet/minecraft/core/BlockPos;ZZ)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory dbu$a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceState dbu$b
	depth c
	free b
	piece a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$Placer dbu$c
	chunkGenerator d
	factory c
	maxDepth b
	pieces f
	placing h
	pools a
	random g
	structureManager e
	tryPlacingChildren (Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece;Lorg/apache/commons/lang3/mutable/MutableObject;IZLnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/feature/structures/LegacySinglePoolElement net/minecraft/world/level/levelgen/feature/structures/WorldGenFeatureDefinedStructurePoolLegacySingle
	CODEC a
	getSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
net/minecraft/world/level/levelgen/feature/structures/ListPoolElement net/minecraft/world/level/levelgen/feature/structures/WorldGenFeatureDefinedStructurePoolList
	CODEC a
	elements b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
	setProjection (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; a
	setProjectionOnEachElement (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection;)V b
net/minecraft/world/level/levelgen/feature/structures/SinglePoolElement net/minecraft/world/level/levelgen/feature/structures/WorldGenFeatureDefinedStructurePoolSingle
	CODEC b
	TEMPLATE_CODEC a
	processors d
	template c
	encodeTemplate (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getDataMarkers (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Z)Ljava/util/List; a
	getSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
	processorsCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; b
	templateCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; c
net/minecraft/world/level/levelgen/feature/structures/StructurePoolElement net/minecraft/world/level/levelgen/feature/structures/WorldGenFeatureDefinedStructurePoolStructure
	CODEC e
	projection a
	empty ()Ljava/util/function/Function; g
	feature (Lnet/minecraft/world/level/levelgen/placement/PlacedFeature;)Ljava/util/function/Function; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getGroundLevelDelta ()I f
	getProjection ()Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection; e
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	handleDataMarker (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	legacy (Ljava/lang/String;)Ljava/util/function/Function; a
	legacy (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList;)Ljava/util/function/Function; a
	list (Ljava/util/List;)Ljava/util/function/Function; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
	projectionCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; d
	setProjection (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; a
	single (Ljava/lang/String;)Ljava/util/function/Function; b
	single (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList;)Ljava/util/function/Function; b
net/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType net/minecraft/world/level/levelgen/feature/structures/WorldGenFeatureDefinedStructurePools
	EMPTY d
	FEATURE c
	LEGACY e
	LIST b
	SINGLE a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool net/minecraft/world/level/levelgen/feature/structures/WorldGenFeatureDefinedStructurePoolTemplate
	CODEC b
	DIRECT_CODEC a
	LOGGER c
	SIZE_UNSET d
	fallback h
	maxSize i
	name e
	rawTemplates f
	templates g
	getFallback ()Lnet/minecraft/resources/ResourceLocation; a
	getMaxSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)I a
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getRandomTemplate (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; a
	getShuffledTemplates (Ljava/util/Random;)Ljava/util/List; b
	size ()I c
net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection net/minecraft/world/level/levelgen/feature/structures/WorldGenFeatureDefinedStructurePoolTemplate$Matching
	$VALUES g
	BY_NAME d
	CODEC c
	RIGID b
	TERRAIN_MATCHING a
	name e
	processors f
	$values ()[Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection; d
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection; a
	getName ()Ljava/lang/String; a
	getProcessors ()Lcom/google/common/collect/ImmutableList; b
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeAlterGround
	CODEC a
	provider b
	place (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V a
	placeBlockAt (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V b
	placeCircle (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeBeehive
	CODEC a
	probability b
	place (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeCocoa
	CODEC a
	probability b
	place (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeVineLeaves
	CODEC a
	INSTANCE b
	addHangingVine (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Ljava/util/function/BiConsumer;)V a
	place (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTree
	CODEC c
	place (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V a
	placeVine (Ljava/util/function/BiConsumer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees
	ALTER_GROUND e
	BEEHIVE d
	COCOA c
	LEAVE_VINE b
	TRUNK_VINE a
	codec f
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeVineTrunk
	CODEC a
	INSTANCE b
	place (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerDarkOak
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerFancy
	BRANCH_LENGTH_MAGIC j
	BRANCH_SLOPE i
	CLUSTER_DENSITY_MAGIC h
	CODEC a
	TRUNK_HEIGHT_SCALE b
	getLogAxis (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction$Axis; a
	getSteps (Lnet/minecraft/core/BlockPos;)I a
	makeBranches (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	makeLimb (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	treeShape (II)F b
	trimBranches (II)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords dcm$a
	attachment a
	branchBase b
	getBranchBase ()I a
net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerForking
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerGiant
	CODEC a
	placeLogIfFreeWithOffset (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;III)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerMegaJungle
	CODEC b
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerStraight
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers
	BENDING_TRUNK_PLACER g
	DARK_OAK_TRUNK_PLACER e
	FANCY_TRUNK_PLACER f
	FORKING_TRUNK_PLACER b
	GIANT_TRUNK_PLACER c
	MEGA_JUNGLE_TRUNK_PLACER d
	STRAIGHT_TRUNK_PLACER a
	codec h
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/flat/FlatLayerInfo net/minecraft/world/level/levelgen/flat/WorldGenFlatLayerInfo
	CODEC a
	block b
	height c
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getHeight ()I a
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings net/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat
	CODEC a
	LOGGER b
	addLakes j
	biome f
	biomes c
	decoration i
	layers g
	layersInfo e
	structureSettings d
	voidGen h
	getBiome ()Lnet/minecraft/world/level/biome/Biome; e
	getBiomeFromSettings ()Lnet/minecraft/world/level/biome/Biome; c
	getDefault (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	getLayers ()Ljava/util/List; g
	getLayersInfo ()Ljava/util/List; f
	setAddLakes ()V b
	setBiome (Ljava/util/function/Supplier;)V a
	setDecoration ()V a
	structureSettings ()Lnet/minecraft/world/level/levelgen/StructureSettings; d
	updateLayers ()V h
	validateHeight (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lcom/mojang/serialization/DataResult; a
	withLayers (Ljava/util/List;Lnet/minecraft/world/level/levelgen/StructureSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	withStructureSettings (Lnet/minecraft/world/level/levelgen/StructureSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
net/minecraft/world/level/levelgen/structure/BoundingBox net/minecraft/world/level/levelgen/structure/StructureBoundingBox
	CODEC a
	LOGGER b
	maxX f
	maxY g
	maxZ h
	minX c
	minY d
	minZ e
	encapsulate (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	encapsulate (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	encapsulatingBoxes (Ljava/lang/Iterable;)Ljava/util/Optional; b
	encapsulatingPositions (Ljava/lang/Iterable;)Ljava/util/Optional; a
	forAllCorners (Ljava/util/function/Consumer;)V a
	fromCorners (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getCenter ()Lnet/minecraft/core/BlockPos; f
	getLength ()Lnet/minecraft/core/Vec3i; b
	getXSpan ()I c
	getYSpan ()I d
	getZSpan ()I e
	infinite ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	inflatedBy (I)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	intersects (IIII)Z a
	intersects (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	isInside (Lnet/minecraft/core/Vec3i;)Z b
	maxX ()I j
	maxY ()I k
	maxZ ()I l
	minX ()I g
	minY ()I h
	minZ ()I i
	move (III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	move (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	moved (III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	orientBox (IIIIIIIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces net/minecraft/world/level/levelgen/structure/WorldGenBuriedTreasurePieces
net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces$BuriedTreasurePiece dei$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	isLiquid (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/DesertPyramidPiece net/minecraft/world/level/levelgen/structure/WorldGenDesertPyramidPiece
	DEPTH b
	WIDTH a
	hasPlacedChest g
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/EndCityPieces net/minecraft/world/level/levelgen/structure/WorldGenEndCityPieces
	FAT_TOWER_BRIDGES f
	FAT_TOWER_GENERATOR g
	HOUSE_TOWER_GENERATOR b
	MAX_GEN_DEPTH a
	TOWER_BRIDGES c
	TOWER_BRIDGE_GENERATOR e
	TOWER_GENERATOR d
	addHelper (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;)Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece; a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/lang/String;Lnet/minecraft/world/level/block/Rotation;Z)Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece; a
	recursiveChildren (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$SectionGenerator;ILnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/Random;)Z a
	startHouseTower (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;)V a
net/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece net/minecraft/world/level/levelgen/structure/WorldGenEndCityPieces$Piece
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeResourceLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	makeSettings (ZLnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/levelgen/structure/EndCityPieces$SectionGenerator net/minecraft/world/level/levelgen/structure/WorldGenEndCityPieces$PieceGenerator
	generate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;ILnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/Random;)Z a
	init ()V a
net/minecraft/world/level/levelgen/structure/IglooPieces net/minecraft/world/level/levelgen/structure/WorldGenIglooPiece
	GENERATION_HEIGHT a
	OFFSETS f
	PIVOTS e
	STRUCTURE_LOCATION_IGLOO b
	STRUCTURE_LOCATION_LABORATORY d
	STRUCTURE_LOCATION_LADDER c
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
net/minecraft/world/level/levelgen/structure/IglooPieces$IglooPiece del$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makePosition (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/core/BlockPos; a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/JunglePyramidPiece net/minecraft/world/level/levelgen/structure/WorldGenJunglePyramidPiece
	DEPTH b
	STONE_SELECTOR k
	WIDTH a
	placedHiddenChest h
	placedMainChest g
	placedTrap1 i
	placedTrap2 j
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/JunglePyramidPiece$MossStoneSelector dem$a
	next (Ljava/util/Random;IIIZ)V a
net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler net/minecraft/world/level/levelgen/structure/PersistentStructureLegacy
	CURRENT_TO_LEGACY_MAP a
	LEGACY_TO_CURRENT_MAP b
	currentKeys g
	dataMap d
	hasLegacyData c
	indexMap e
	legacyKeys f
	getLegacyStructureHandler (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/storage/DimensionDataStorage;)Lnet/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler; a
	hasLegacyStart (IILjava/lang/String;)Z a
	isUnhandledStructureStart (II)Z a
	populateCaches (Lnet/minecraft/world/level/storage/DimensionDataStorage;)V a
	removeIndex (J)V a
	updateFromLegacy (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	updateStructureStart (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/levelgen/structure/MineShaftPieces net/minecraft/world/level/levelgen/structure/WorldGenMineshaftPieces
	DEFAULT_SHAFT_HEIGHT d
	DEFAULT_SHAFT_LENGTH e
	DEFAULT_SHAFT_WIDTH c
	LOGGER b
	MAGIC_START_Y a
	MAX_CHAIN_HEIGHT g
	MAX_DEPTH h
	MAX_PILLAR_HEIGHT f
	createRandomShaftPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;ILnet/minecraft/world/level/levelgen/feature/MineshaftFeature$Type;)Lnet/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece; a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece; a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCorridor net/minecraft/world/level/levelgen/structure/WorldGenMineshaftPieces$WorldGenMineshaftCorridor
	hasPlacedSpider d
	hasRails b
	numSections e
	spiderCorridor c
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	canHangChainBelow (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canPlaceColumnOnTopOf (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	createChest (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;IIILnet/minecraft/resources/ResourceLocation;)Z a
	fillColumnBetween (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos$MutableBlockPos;II)V a
	fillColumnDown (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	fillPillarDownOrChainUp (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	findCorridorSize (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	hasSturdyNeighbours (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	maybePlaceCobWeb (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;FIII)V a
	placeDoubleLowerOrUpperSupport (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)V a
	placeSupport (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIILjava/util/Random;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCrossing net/minecraft/world/level/levelgen/structure/WorldGenMineshaftPieces$WorldGenMineshaftCross
	direction b
	isTwoFloored c
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	findCrossing (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	placeSupportPillar (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece deo$c
	type a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	canBeReplaced (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	edgesLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	isSupportingBox (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	setPlanksBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/block/state/BlockState;III)V a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftRoom net/minecraft/world/level/levelgen/structure/WorldGenMineshaftPieces$WorldGenMineshaftRoom
	childEntranceBoxes b
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	move (III)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftStairs net/minecraft/world/level/levelgen/structure/WorldGenMineshaftPieces$WorldGenMineshaftStairs
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	findStairs (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces
	BRIDGE_PIECE_WEIGHTS d
	CASTLE_PIECE_WEIGHTS e
	LOWEST_Y_POSITION c
	MAGIC_START_Y a
	MAX_DEPTH b
	findAndCreateBridgePieceFactory (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$PieceWeight;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece; a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeCrossing net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece1
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeEndFiller net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece2
	DEPTH c
	HEIGHT b
	WIDTH a
	selfSeed d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeEndFiller; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeStraight net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece3
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeStraight; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorStairsPiece net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece4
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorStairsPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorTBalconyPiece net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece5
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorTBalconyPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleEntrance net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece6
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleEntrance; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorCrossingPiece net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece7
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorCrossingPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorLeftTurnPiece net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece8
	DEPTH c
	HEIGHT b
	WIDTH a
	isNeedingChest d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorLeftTurnPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorPiece net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece9
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorRightTurnPiece net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece10
	DEPTH c
	HEIGHT b
	WIDTH a
	isNeedingChest d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorRightTurnPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleStalkRoom net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece11
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleStalkRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$MonsterThrone net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece12
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedSpawner d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$MonsterThrone; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;IZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateChildForward (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateChildLeft (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generateChildRight (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	generatePiece (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece; a
	isOkBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	updatePieceWeight (Ljava/util/List;)I a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$PieceWeight net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPieceWeight
	allowInRow e
	maxPlaceCount d
	pieceClass a
	placeCount c
	weight b
	doPlace (I)Z a
	isValid ()Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$RoomCrossing net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece13
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$RoomCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StairsRoom net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece14
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StairsRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece net/minecraft/world/level/levelgen/structure/WorldGenNetherPieces$WorldGenNetherPiece15
	availableBridgePieces b
	availableCastlePieces c
	pendingChildren d
	previousPiece a
net/minecraft/world/level/levelgen/structure/NetherFossilFeature net/minecraft/world/level/levelgen/structure/WorldGenFeatureNetherFossil
	pieceGeneratorSupplier (Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context;)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/structure/NetherFossilPieces net/minecraft/world/level/levelgen/structure/WorldGenNetherFossil
	FOSSILS a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherFossilPieces$NetherFossilPiece der$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPieceSelector7
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXYRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPieceSelector6
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPieceSelector5
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYZRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPieceSelector4
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleZRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPieceSelector3
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPieceSelector2
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleTopRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPieceSelector1
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentBuilding net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPiece1
	BIOME_RANGE_CHECK a
	DEPTH E
	HEIGHT D
	TOP_POSITION F
	WIDTH C
	childPieces I
	coreRoom H
	sourceRoom G
	generateEntranceArchs (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	generateEntranceWall (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	generateLowerWall (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V d
	generateMiddleWall (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V e
	generateRoofPiece (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V c
	generateRoomGraph (Ljava/util/Random;)Ljava/util/List; a
	generateUpperWall (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V f
	generateWing (ZILnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentRoomFitter net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$IWorldGenMonumentPieceSelector
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentCoreRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPiece2
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPiece3
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXYRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPiece4
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPiece5
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYZRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPiece6
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleZRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPiece7
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentEntryRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPieceEntry
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPenthouse net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPiecePenthouse
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPiece
	BASE_BLACK d
	BASE_GRAY b
	BASE_LIGHT c
	DOT_DECO_DATA e
	DO_FILL g
	FILL_BLOCK h
	FILL_KEEP i
	GRIDROOM_DEPTH k
	GRIDROOM_HEIGHT l
	GRIDROOM_LEFTWING_CONNECT_INDEX t
	GRIDROOM_RIGHTWING_CONNECT_INDEX u
	GRIDROOM_SOURCE_INDEX r
	GRIDROOM_TOP_CONNECT_INDEX s
	GRIDROOM_WIDTH j
	GRID_DEPTH n
	GRID_FLOOR_COUNT p
	GRID_HEIGHT o
	GRID_SIZE q
	GRID_WIDTH m
	LAMP_BLOCK f
	LEFTWING_INDEX v
	PENTHOUSE_INDEX x
	RIGHTWING_INDEX w
	roomDefinition y
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	chunkIntersects (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	generateBoxOnFillOnly (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;)V a
	generateDefaultFloor (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIZ)V a
	generateWaterBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIII)V a
	getRoomIndex (III)I b
	makeBoundingBox (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	spawnElder (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPieceSimple
	mainDesign a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleTopRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPieceSimpleT
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentWingRoom net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentPiece8
	mainDesign a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition net/minecraft/world/level/levelgen/structure/WorldGenMonumentPieces$WorldGenMonumentStateTracker
	claimed d
	connections b
	hasOpening c
	index a
	isSource e
	scanIndex f
	countOpenings ()I c
	findSource (I)Z a
	isSpecial ()Z b
	setConnection (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)V a
	updateOpenings ()V a
net/minecraft/world/level/levelgen/structure/OceanRuinFeature net/minecraft/world/level/levelgen/structure/WorldGenFeatureOceanRuin
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context;)V a
net/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type net/minecraft/world/level/levelgen/structure/WorldGenFeatureOceanRuin$Temperature
	$VALUES f
	BY_NAME d
	CODEC c
	COLD b
	WARM a
	name e
	$values ()[Lnet/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/OceanRuinPieces net/minecraft/world/level/levelgen/structure/WorldGenFeatureOceanRuinPieces
	BIG_RUINS_BRICK e
	BIG_RUINS_CRACKED g
	BIG_RUINS_MOSSY f
	BIG_WARM_RUINS h
	RUINS_BRICK b
	RUINS_CRACKED c
	RUINS_MOSSY d
	WARM_RUINS a
	addClusterRuins (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Ljava/util/Random;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;)V a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;ZF)V a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;)V a
	allPositions (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/List; a
	getBigWarmRuin (Ljava/util/Random;)Lnet/minecraft/resources/ResourceLocation; b
	getSmallWarmRuin (Ljava/util/Random;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/levelgen/structure/OceanRuinPieces$OceanRuinPiece dev$a
	biomeType e
	integrity f
	isLarge g
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	getHeight (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece net/minecraft/world/level/levelgen/structure/WorldGenFeaturePillagerOutpostPoolPiece
	LOGGER d
	element a
	groundLevelDelta e
	junctions f
	position b
	rotation c
	structureManager g
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addJunction (Lnet/minecraft/world/level/levelgen/feature/structures/JigsawJunction;)V a
	getElement ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; b
	getGroundLevelDelta ()I d
	getJunctions ()Ljava/util/List; e
	getPosition ()Lnet/minecraft/core/BlockPos; c
	getRotation ()Lnet/minecraft/world/level/block/Rotation; ab_
	move (III)V a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;Z)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/RuinedPortalPiece net/minecraft/world/level/levelgen/structure/WorldGenFeatureRuinedPortalPieces
	DEFAULT_MOSSINESS i
	LOGGER e
	PROBABILITY_OF_GOLD_GONE f
	PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA h
	PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK g
	properties k
	verticalPlacement j
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addNetherrackDripColumn (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V c
	addNetherrackDripColumnsBelowPortal (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;)V a
	canBlockBeReplacedByNetherrackOrMagma (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	getBlockReplaceRule (Lnet/minecraft/world/level/block/Block;FLnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getBlockReplaceRule (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getHeightMapType (Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	getLavaProcessorRule (Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$Properties;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getSurfaceY (Lnet/minecraft/world/level/LevelAccessor;IILnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;)I a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$Properties;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeSettings (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	maybeAddLeavesAbove (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	maybeAddVines (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	placeNetherrackOrMagma (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V d
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	spreadNetherrack (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;)V b
net/minecraft/world/level/levelgen/structure/RuinedPortalPiece$Properties dey$a
	CODEC a
	airPocket d
	cold b
	mossiness c
	overgrown e
	replaceWithBlackstone g
	vines f
net/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement net/minecraft/world/level/levelgen/structure/WorldGenFeatureRuinedPortalPieces$Position
	$VALUES i
	BY_NAME g
	IN_MOUNTAIN d
	IN_NETHER f
	ON_LAND_SURFACE a
	ON_OCEAN_FLOOR c
	PARTLY_BURIED b
	UNDERGROUND e
	name h
	$values ()[Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement; a
	getName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece net/minecraft/world/level/levelgen/structure/WorldGenScatteredPiece
	depth e
	height d
	heightPosition f
	width c
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	updateAverageGroundHeight (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;I)Z a
	updateHeightPositionToLowestGroundHeight (Lnet/minecraft/world/level/LevelAccessor;I)Z a
net/minecraft/world/level/levelgen/structure/ShipwreckPieces net/minecraft/world/level/levelgen/structure/WorldGenShipwreck
	MARKERS_TO_LOOT d
	PIVOT a
	STRUCTURE_LOCATION_BEACHED b
	STRUCTURE_LOCATION_OCEAN c
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration;)V a
net/minecraft/world/level/levelgen/structure/ShipwreckPieces$ShipwreckPiece dfa$a
	isBeached e
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces
	CHECK_AIR e
	LOWEST_Y_POSITION d
	MAX_DEPTH c
	SMALL_DOOR_HEIGHT b
	SMALL_DOOR_WIDTH a
	SMOOTH_STONE_SELECTOR j
	STRONGHOLD_PIECE_WEIGHTS f
	currentPieces g
	imposedPiece h
	totalWeight i
	findAndCreatePieceFactory (Ljava/lang/Class;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece; a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generatePieceFromSmallDoor (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece; a
	resetPieces ()V a
	updatePieceWeight ()Z b
net/minecraft/world/level/levelgen/structure/StrongholdPieces$ChestCorridor net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdChestCorridor
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedChest d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$ChestCorridor; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ac_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$FillerCorridor net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdCorridor
	steps a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	findPieceBox (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ac_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$FiveCrossing net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdCrossing
	DEPTH c
	HEIGHT b
	WIDTH a
	leftHigh f
	leftLow d
	rightHigh h
	rightLow g
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$FiveCrossing; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ac_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$LeftTurn net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdLeftTurn
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$LeftTurn; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$Library net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdLibrary
	DEPTH d
	HEIGHT b
	TALL_HEIGHT c
	WIDTH a
	isTall f
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$Library; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ac_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$PieceWeight net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdPieceWeight
	maxPlaceCount d
	pieceClass a
	placeCount c
	weight b
	doPlace (I)Z a
	isValid ()Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$PortalRoom net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdPortalRoom
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedSpawner d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$PortalRoom; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ac_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$PrisonHall net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdPrison
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$PrisonHall; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ac_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$RightTurn net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdRightTurn
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$RightTurn; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$RoomCrossing net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdRoomCrossing
	DEPTH c
	HEIGHT b
	WIDTH a
	type d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$RoomCrossing; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ac_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$SmoothStoneSelector net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdStones
	next (Ljava/util/Random;IIIZ)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StairsDown net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdStairs2
	DEPTH c
	HEIGHT b
	WIDTH a
	isSource d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StairsDown; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ac_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdStart
	pendingChildren c
	portalRoomPiece b
	previousPiece a
	getLocatorPosition ()Lnet/minecraft/core/BlockPos; ad_
net/minecraft/world/level/levelgen/structure/StrongholdPieces$Straight net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdStairs
	DEPTH c
	HEIGHT b
	WIDTH a
	leftChild d
	rightChild f
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$Straight; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ac_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StraightStairsDown net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdStairsStraight
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StraightStairsDown; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ac_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdPiece
	entryDoor e
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	generateSmallDoor (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType;III)V a
	generateSmallDoorChildForward (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateSmallDoorChildLeft (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generateSmallDoorChildRight (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ac_
	isOkBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	randomSmallDoor (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType; a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType net/minecraft/world/level/levelgen/structure/WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType
	$VALUES e
	GRATES c
	IRON_DOOR d
	OPENING a
	WOOD_DOOR b
	$values ()[Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType; a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$Turn dfb$q
	DEPTH c
	HEIGHT b
	WIDTH a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ac_
net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData net/minecraft/world/level/levelgen/structure/PersistentIndexed
	TAG_All_INDEXES b
	TAG_REMAINING_INDEXES a
	all c
	remaining d
	addIndex (J)V a
	getAll ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	hasStartIndex (J)Z b
	hasUnhandledIndex (J)Z c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData; b
	removeIndex (J)V d
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector net/minecraft/world/level/levelgen/structure/StructurePiece$StructurePieceBlockSelector
	next a
	getNext ()Lnet/minecraft/world/level/block/state/BlockState; a
	next (Ljava/util/Random;IIIZ)V a
net/minecraft/world/level/levelgen/structure/SwamplandHutPiece net/minecraft/world/level/levelgen/structure/WorldGenWitchHut
	spawnedCat b
	spawnedWitch a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	spawnCat (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
net/minecraft/world/level/levelgen/structure/TemplateStructurePiece net/minecraft/world/level/levelgen/structure/DefinedStructurePiece
	LOGGER e
	placeSettings c
	template b
	templateName a
	templatePosition d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; ab_
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; a
	move (III)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces net/minecraft/world/level/levelgen/structure/WorldGenWoodlandMansionPieces
	generateMansion (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;)V a
	main ([Ljava/lang/String;)V a
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FirstFloorRoomCollection dfk$a
	get1x1 (Ljava/util/Random;)Ljava/lang/String; a
	get1x1Secret (Ljava/util/Random;)Ljava/lang/String; b
	get1x2FrontEntrance (Ljava/util/Random;Z)Ljava/lang/String; b
	get1x2Secret (Ljava/util/Random;)Ljava/lang/String; c
	get1x2SideEntrance (Ljava/util/Random;Z)Ljava/lang/String; a
	get2x2 (Ljava/util/Random;)Ljava/lang/String; d
	get2x2Secret (Ljava/util/Random;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection dfk$b
	get1x1 (Ljava/util/Random;)Ljava/lang/String; a
	get1x1Secret (Ljava/util/Random;)Ljava/lang/String; b
	get1x2FrontEntrance (Ljava/util/Random;Z)Ljava/lang/String; b
	get1x2Secret (Ljava/util/Random;)Ljava/lang/String; c
	get1x2SideEntrance (Ljava/util/Random;Z)Ljava/lang/String; a
	get2x2 (Ljava/util/Random;)Ljava/lang/String; d
	get2x2Secret (Ljava/util/Random;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionGrid dfk$c
	BLOCKED g
	CLEAR b
	CORRIDOR c
	DEFAULT_SIZE a
	ROOM d
	ROOM_1x1 h
	ROOM_1x2 i
	ROOM_2x2 j
	ROOM_CORRIDOR_FLAG n
	ROOM_DOOR_FLAG l
	ROOM_ID_MASK p
	ROOM_ORIGIN_FLAG k
	ROOM_STAIRS_FLAG m
	ROOM_TYPE_MASK o
	START_ROOM e
	TEST_ROOM f
	baseGrid r
	entranceX u
	entranceY v
	floorRooms t
	random q
	thirdFloorGrid s
	cleanEdges (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;)Z a
	get1x2RoomDirection (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;IIII)Lnet/minecraft/core/Direction; b
	identifyRooms (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;)V a
	isHouse (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;II)Z a
	isRoomId (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;IIII)Z a
	print ()V a
	recursiveCorridor (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;IILnet/minecraft/core/Direction;I)V a
	setupThirdFloor ()V b
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionPiecePlacer dfk$d
	random b
	startX c
	startY d
	structureManager a
	addRoom1x1 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;)V a
	addRoom1x2 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;Z)V a
	addRoom2x2 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;)V a
	addRoom2x2Secret (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;)V a
	createMansion (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionGrid;)V a
	createRoof (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;)V a
	entrance (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V a
	traverseInnerTurn (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V d
	traverseOuterWalls (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/core/Direction;IIII)V a
	traverseTurn (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V c
	traverseWallPiece (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V b
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData dfk$e
	position b
	rotation a
	wallType c
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SecondFloorRoomCollection dfk$f
	get1x1 (Ljava/util/Random;)Ljava/lang/String; a
	get1x1Secret (Ljava/util/Random;)Ljava/lang/String; b
	get1x2FrontEntrance (Ljava/util/Random;Z)Ljava/lang/String; b
	get1x2Secret (Ljava/util/Random;)Ljava/lang/String; c
	get1x2SideEntrance (Ljava/util/Random;Z)Ljava/lang/String; a
	get2x2 (Ljava/util/Random;)Ljava/lang/String; d
	get2x2Secret (Ljava/util/Random;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid dfk$g
	grid a
	height c
	valueIfOutside d
	width b
	edgesTo (III)Z b
	get (II)I a
	set (III)V a
	set (IIIII)V a
	setif (IIII)V a
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$ThirdFloorRoomCollection dfk$h
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$WoodlandMansionPiece dfk$i
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	makeSettings (Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context dfm$a
	chunkGenerator b
	chunkPos d
	config a
	heightAccessor e
	random f
	seed g
	structureManager c
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; b
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; d
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; a
	heightAccessor ()Lnet/minecraft/world/level/LevelHeightAccessor; e
	random ()Lnet/minecraft/world/level/levelgen/WorldgenRandom; f
	seed ()J g
	structureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager; c
net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context dfn$a
	biomeSource b
	chunkGenerator a
	chunkPos d
	config e
	heightAccessor f
	registryAccess i
	seed c
	structureManager h
	validBiome g
	biomeSource ()Lnet/minecraft/world/level/biome/BiomeSource; b
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; d
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; e
	getCornerHeights (IIII)[I a
	getLowestY (II)I a
	heightAccessor ()Lnet/minecraft/world/level/LevelHeightAccessor; f
	registryAccess ()Lnet/minecraft/core/RegistryAccess; i
	seed ()J c
	structureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager; h
	validBiome ()Ljava/util/function/Predicate; g
	validBiomeOnTop (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestTrue
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestAxisAlignedLinear
	CODEC a
	axis g
	maxChance d
	maxDist f
	minChance b
	minDist e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorBlackstoneReplace
	CODEC a
	INSTANCE b
	replacements c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorBlockAge
	CODEC a
	NON_MOSSY_REPLACEMENTS e
	PROBABILITY_OF_REPLACING_FULL_BLOCK b
	PROBABILITY_OF_REPLACING_OBSIDIAN d
	PROBABILITY_OF_REPLACING_STAIRS c
	mossiness f
	getRandomBlock (Ljava/util/Random;[Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomBlock (Ljava/util/Random;[Lnet/minecraft/world/level/block/state/BlockState;[Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomFacingStairs (Ljava/util/Random;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockState; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	maybeReplaceFullStoneBlock (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; a
	maybeReplaceObsidian (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; d
	maybeReplaceSlab (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; b
	maybeReplaceStairs (Ljava/util/Random;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	maybeReplaceWall (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; c
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorBlockIgnore
	AIR c
	CODEC a
	STRUCTURE_AND_AIR d
	STRUCTURE_BLOCK b
	toIgnore e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestBlock
	CODEC a
	block b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorRotation
	CODEC a
	integrity b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestBlockState
	CODEC a
	blockState b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorGravity
	CODEC a
	heightmap b
	offset c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorJigsawReplacement
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorLavaSubmergedBlock
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestLinear
	CODEC a
	maxChance d
	maxDist f
	minChance b
	minDist e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorNop
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestTrue
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorPredicates
	CODEC a
	inputPredicate b
	locPredicate c
	outputState e
	outputTag f
	posPredicate d
	getOutputState ()Lnet/minecraft/world/level/block/state/BlockState; a
	getOutputTag ()Lnet/minecraft/nbt/CompoundTag; b
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestRandomBlock
	CODEC a
	block b
	probability d
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestRandomBlockState
	CODEC a
	blockState b
	probability d
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorRule
	CODEC a
	rules b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTest
	CODEC c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType
	ALWAYS_TRUE_TEST a
	BLOCKSTATE_TEST c
	BLOCK_TEST b
	RANDOM_BLOCKSTATE_TEST f
	RANDOM_BLOCK_TEST e
	TAG_TEST d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureManager net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureManager
	LOGGER a
	STRUCTURE_DIRECTORY_NAME b
	STRUCTURE_FILE_EXTENSION c
	STRUCTURE_TEXT_FILE_EXTENSION d
	fixerUpper f
	generatedDir h
	resourceManager g
	structureRepository e
	createAndValidatePathToStructure (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; b
	createPathToStructure (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getOrCreate (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	loadFromGenerated (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; f
	loadFromResource (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; e
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	readStructure (Ljava/io/InputStream;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	readStructure (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	remove (Lnet/minecraft/resources/ResourceLocation;)V d
	save (Lnet/minecraft/resources/ResourceLocation;)Z c
net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo
	boundingBox e
	finalizeEntities k
	ignoreEntities d
	keepLiquids f
	knownShape j
	mirror a
	palette h
	processors i
	random g
	rotation b
	rotationPivot c
	addProcessor (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	clearProcessors ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	copy ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; g
	getKnownShape ()Z h
	getMirror ()Lnet/minecraft/world/level/block/Mirror; c
	getProcessors ()Ljava/util/List; i
	getRandom (Lnet/minecraft/core/BlockPos;)Ljava/util/Random; b
	getRandomPalette (Ljava/util/List;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; d
	getRotationPivot ()Lnet/minecraft/core/BlockPos; e
	isIgnoreEntities ()Z f
	popProcessor (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	setBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setFinalizeEntities (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; d
	setIgnoreEntities (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setKeepLiquids (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	setKnownShape (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; c
	setMirror (Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRandom (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRotation (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRotationPivot (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	shouldFinalizeEntities ()Z k
	shouldKeepLiquids ()Z j
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessor
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorList
	list a
	list ()Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType
	BLACKSTONE_REPLACE h
	BLOCK_AGE g
	BLOCK_IGNORE a
	BLOCK_ROT b
	DIRECT_CODEC m
	GRAVITY c
	JIGSAW_REPLACEMENT d
	LAVA_SUBMERGED_BLOCK i
	LIST_CODEC n
	LIST_OBJECT_CODEC l
	NOP f
	PROTECTED_BLOCKS j
	RULE e
	SINGLE_CODEC k
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure
	BLOCKS_TAG d
	BLOCK_TAG_NBT g
	BLOCK_TAG_POS e
	BLOCK_TAG_STATE f
	CHUNK_SIZE l
	ENTITIES_TAG c
	ENTITY_TAG_BLOCKPOS i
	ENTITY_TAG_NBT j
	ENTITY_TAG_POS h
	PALETTE_LIST_TAG b
	PALETTE_TAG a
	SIZE_TAG k
	author p
	entityInfoList n
	palettes m
	size o
	addToLists (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V a
	buildInfoList (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	calculateConnectedPosition (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	calculateRelativePosition (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	createEntityIgnoreException (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	fillEntityList (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V a
	fillFromWorld (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;ZLnet/minecraft/world/level/block/Block;)V a
	filterBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
	filterBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/world/level/block/Block;Z)Ljava/util/List; a
	getAuthor ()Ljava/lang/String; b
	getBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getSize ()Lnet/minecraft/core/Vec3i; a
	getSize (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getZeroPositionWithTransform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getZeroPositionWithTransform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;II)Lnet/minecraft/core/BlockPos; a
	load (Lnet/minecraft/nbt/CompoundTag;)V b
	loadPalette (Lnet/minecraft/nbt/ListTag;Lnet/minecraft/nbt/ListTag;)V a
	newDoubleList ([D)Lnet/minecraft/nbt/ListTag; a
	newIntegerList ([I)Lnet/minecraft/nbt/ListTag; a
	placeEntities (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)V a
	placeInWorld (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/Random;I)Z a
	processBlockInfos (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/List;)Ljava/util/List; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setAuthor (Ljava/lang/String;)V a
	transform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	transform (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	updateShapeAtEdge (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/world/phys/shapes/DiscreteVoxelShape;III)V a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette dgu$a
	blocks a
	cache b
	blocks ()Ljava/util/List; a
	blocks (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette dgu$b
	DEFAULT_BLOCK_STATE a
	ids b
	lastId c
	addMapping (Lnet/minecraft/world/level/block/state/BlockState;I)V a
	idFor (Lnet/minecraft/world/level/block/state/BlockState;)I a
	stateFor (I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo
	nbt c
	pos a
	state b
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$EntityInfo
	blockPos b
	nbt c
	pos a
net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestTag
	CODEC a
	tag b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/synth/ImprovedNoise net/minecraft/world/level/levelgen/synth/NoiseGeneratorPerlin
	SHIFT_UP_EPSILON d
	p e
	xo a
	yo b
	zo c
	gradDot (IDDD)D a
	noise (DDD)D a
	noise (DDDDD)D a
	noiseWithDerivative (DDD[D)D a
	p (I)I a
	parityConfigString (Ljava/lang/StringBuilder;)V a
	sampleAndLerp (IIIDDDD)D a
	sampleWithDerivative (IIIDDD[D)D a
net/minecraft/world/level/levelgen/synth/NormalNoise net/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal
	INPUT_FACTOR a
	TARGET_DEVIATION b
	first d
	second e
	valueFactor c
	create (Lnet/minecraft/world/level/levelgen/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	create (Lnet/minecraft/world/level/levelgen/RandomSource;I[D)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	create (Lnet/minecraft/world/level/levelgen/RandomSource;Lnet/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; b
	createLegacyNetherBiome (Lnet/minecraft/world/level/levelgen/RandomSource;Lnet/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	expectedDeviation (I)D a
	getValue (DDD)D a
	parameters ()Lnet/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters; a
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters dha$a
	CODEC b
	DIRECT_CODEC a
	amplitudes d
	firstOctave c
	amplitudes ()Lit/unimi/dsi/fastutil/doubles/DoubleList; b
	firstOctave ()I a
net/minecraft/world/level/levelgen/synth/PerlinNoise net/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves
	ROUND_OFF a
	amplitudes d
	firstOctave c
	lowestFreqInputFactor f
	lowestFreqValueFactor e
	noiseLevels b
	amplitudes ()Lit/unimi/dsi/fastutil/doubles/DoubleList; b
	create (Lnet/minecraft/world/level/levelgen/RandomSource;ID[D)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	create (Lnet/minecraft/world/level/levelgen/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; b
	create (Lnet/minecraft/world/level/levelgen/RandomSource;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	create (Lnet/minecraft/world/level/levelgen/RandomSource;Ljava/util/stream/IntStream;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; b
	createLegacyForBlendedNoise (Lnet/minecraft/world/level/levelgen/RandomSource;Ljava/util/stream/IntStream;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	createLegacyForLegacyNormalNoise (Lnet/minecraft/world/level/levelgen/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	firstOctave ()I a
	getOctaveNoise (I)Lnet/minecraft/world/level/levelgen/synth/ImprovedNoise; a
	getValue (DDD)D a
	getValue (DDDDDZ)D a
	makeAmplitudes (Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair; a
	parityConfigString (Ljava/lang/StringBuilder;)V a
	skipOctave (Lnet/minecraft/world/level/levelgen/RandomSource;)V a
	wrap (D)D a
net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise net/minecraft/world/level/levelgen/synth/NoiseGenerator3
	highestFreqInputFactor c
	highestFreqValueFactor b
	noiseLevels a
	getValue (DDZ)D a
net/minecraft/world/level/levelgen/synth/SimplexNoise net/minecraft/world/level/levelgen/synth/NoiseGenerator3Handler
	F2 f
	G2 g
	GRADIENT a
	SQRT_3 e
	p h
	xo b
	yo c
	zo d
	dot ([IDDD)D a
	getCornerNoise3D (IDDDD)D a
	getValue (DD)D a
	getValue (DDD)D a
	p (I)I a
net/minecraft/world/level/lighting/BlockLightEngine net/minecraft/world/level/lighting/LightEngineBlock
	DIRECTIONS f
	pos g
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLightEmission (J)I d
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
net/minecraft/world/level/lighting/BlockLightSectionStorage net/minecraft/world/level/lighting/LightEngineStorageBlock
	getLightValue (J)I d
net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap dhg$a
	copy ()Lnet/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap; a
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
net/minecraft/world/level/lighting/DataLayerStorageMap net/minecraft/world/level/lighting/LightEngineStorageArray
	CACHE_SIZE b
	cacheEnabled e
	lastSectionKeys c
	lastSections d
	map a
	clearCache ()V c
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
	copyDataLayer (J)V a
	disableCache ()V d
	getLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; c
	hasLayer (J)Z b
	removeLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; d
	setLayer (JLnet/minecraft/world/level/chunk/DataLayer;)V a
net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint net/minecraft/world/level/lighting/LightEngineGraph
	NO_COMPUTED_LEVEL a
	computedLevels d
	firstQueuedLevel e
	hasWork f
	levelCount b
	queues c
	checkEdge (JJIIIZ)V a
	checkEdge (JJIZ)V a
	checkFirstQueuedLevel (I)V a
	checkNeighbor (JJIZ)V b
	checkNeighborsAfterUpdate (JIZ)V a
	checkNode (J)V f
	computeLevelFromNeighbor (JJI)I b
	dequeue (JIIZ)V a
	enqueue (JII)V a
	getComputedLevel (JJI)I a
	getKey (II)I a
	getLevel (J)I c
	getQueueSize ()I c
	hasWork ()Z b
	isSource (J)Z a
	removeFromQueue (J)V e
	removeIf (Ljava/util/function/LongPredicate;)V a
	runUpdates (I)I b
	setLevel (JI)V a
net/minecraft/world/level/lighting/LayerLightEngine net/minecraft/world/level/lighting/LightEngineLayer
	CACHE_SIZE h
	DIRECTIONS f
	SELF_SOURCE a
	chunkSource b
	lastChunk j
	lastChunkPos i
	layer c
	pos e
	runningLightUpdates g
	storage d
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	checkNode (J)V f
	clearCache ()V d
	computeLevelFromNeighbor (JJI)I b
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getChunk (II)Lnet/minecraft/world/level/BlockGetter; a
	getComputedLevel (JJI)I a
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDebugData (J)Ljava/lang/String; b
	getLevel (J)I c
	getLevel (Lnet/minecraft/world/level/chunk/DataLayer;J)I a
	getLightBlockInto (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;I)I a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;JLnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateAndOpacity (JLorg/apache/commons/lang3/mutable/MutableInt;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasLightWork ()Z A_
	isSource (J)Z a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (JLnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runUpdates (IZZ)I a
	setLevel (JI)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LayerLightEventListener net/minecraft/world/level/lighting/LightEngineLayerEventListener
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener net/minecraft/world/level/lighting/LightEngineLayerEventListener$Void
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener; b
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
	hasLightWork ()Z A_
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LayerLightSectionStorage net/minecraft/world/level/lighting/LightEngineStorage
	DIRECTIONS n
	EMPTY c
	EMPTY_DATA d
	LIGHT_AND_DATA a
	LIGHT_ONLY b
	changedSections j
	chunkSource p
	columnsToRetainQueuedDataFor r
	dataSectionSet e
	hasToRemove m
	layer o
	queuedSections l
	sectionsAffectedByLightUpdates k
	toMarkData g
	toMarkNoData f
	toRemove s
	untrustedSections q
	updatingSectionData i
	visibleSectionData h
	checkEdgesForSection (Lnet/minecraft/world/level/lighting/LayerLightEngine;J)V b
	clearQueuedSectionBlocks (Lnet/minecraft/world/level/lighting/LayerLightEngine;J)V a
	createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; j
	enableLightSources (JZ)V b
	getDataLayer (JZ)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDataLayer (Lnet/minecraft/world/level/lighting/DataLayerStorageMap;J)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDataLayerData (J)Lnet/minecraft/world/level/chunk/DataLayer; h
	getLevel (J)I c
	getLevelFromSource (J)I b
	getLightValue (J)I d
	getStoredLevel (J)I i
	hasInconsistencies ()Z a
	markNewInconsistencies (Lnet/minecraft/world/level/lighting/LayerLightEngine;ZZ)V a
	onNodeAdded (J)V k
	onNodeRemoved (J)V l
	queueSectionData (JLnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (JZ)V c
	runAllUpdates ()V d
	setLevel (JI)V a
	setStoredLevel (JI)V b
	storingLightForSection (J)Z g
	swapSectionMap ()V e
	updateSectionStatus (JZ)V d
net/minecraft/world/level/lighting/LevelLightEngine net/minecraft/world/level/lighting/LightEngine
	LIGHT_SECTION_PADDING b
	MAX_SOURCE_LEVEL a
	blockEngine d
	levelHeightAccessor c
	skyEngine e
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getDebugData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)Ljava/lang/String; a
	getLayerListener (Lnet/minecraft/world/level/LightLayer;)Lnet/minecraft/world/level/lighting/LayerLightEventListener; a
	getLightSectionCount ()I b
	getMaxLightSection ()I d
	getMinLightSection ()I c
	getRawBrightness (Lnet/minecraft/core/BlockPos;I)I b
	hasLightWork ()Z A_
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LightEventListener net/minecraft/world/level/lighting/ILightEngine
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	hasLightWork ()Z A_
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/BlockPos;Z)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/SkyLightEngine net/minecraft/world/level/lighting/LightEngineSky
	DIRECTIONS f
	HORIZONTALS g
	checkNeighborsAfterUpdate (JIZ)V a
	checkNode (J)V f
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getDebugData (J)Ljava/lang/String; b
net/minecraft/world/level/lighting/SkyLightSectionStorage net/minecraft/world/level/lighting/LightEngineStorageSky
	HORIZONTALS n
	columnsWithSkySources r
	hasSourceInconsistencies s
	sectionsToAddSourcesTo p
	sectionsToRemoveSourcesFrom q
	sectionsWithSources o
	createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; j
	enableLightSources (JZ)V b
	getLightValue (J)I d
	getLightValue (JZ)I e
	hasInconsistencies ()Z a
	hasSectionsBelow (I)Z a
	isAboveData (J)Z m
	lightOnInSection (J)Z n
	markNewInconsistencies (Lnet/minecraft/world/level/lighting/LayerLightEngine;ZZ)V a
	onNodeAdded (J)V k
	onNodeRemoved (J)V l
	queueAddSource (J)V p
	queueRemoveSource (J)V o
	recheckInconsistencyFlag ()V f
	repeatFirstLayer (Lnet/minecraft/world/level/chunk/DataLayer;)Lnet/minecraft/world/level/chunk/DataLayer; a
net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap dhp$a
	currentLowestY b
	topSections c
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
	copy ()Lnet/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap; a
net/minecraft/world/level/lighting/SpatialLongSet dhq
	map a
net/minecraft/world/level/lighting/SpatialLongSet$InternalMap dhq$a
	OUTER_MASK h
	X_BITS a
	X_OFFSET g
	Y_BITS c
	Y_OFFSET d
	Z_BITS b
	Z_OFFSET e
	lastOuterKey j
	lastPos i
	minSize k
	addBit (J)Z c
	getFullKey (JI)J a
	getInnerKey (J)I b
	getOuterKey (J)J a
	removeBit (J)Z d
	removeFirstBit ()J a
	removeFromEntry (IJ)Z b
	removeFromNullEntry (J)Z e
	replaceBit (IJ)Z a
net/minecraft/world/level/material/EmptyFluid net/minecraft/world/level/material/FluidTypeEmpty
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getBucket ()Lnet/minecraft/world/item/Item; a
	getExplosionResistance ()F c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	isEmpty ()Z b
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/FlowingFluid net/minecraft/world/level/material/FluidTypeFlowing
	CACHE_SIZE e
	FALLING a
	LEVEL b
	OCCLUSION_CACHE f
	shapes g
	affectsFlow (Lnet/minecraft/world/level/material/FluidState;)Z g
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canConvertToSource ()Z f
	canHoldFluid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canPassThrough (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	canPassThroughWall (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canSpreadTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/Fluid;)Z a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getCacheKey (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)S a
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getFlowing (IZ)Lnet/minecraft/world/level/material/FluidState; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getLegacyLevel (Lnet/minecraft/world/level/material/FluidState;)I e
	getNewLiquid (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSlopeDistance (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I a
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getSource (Z)Lnet/minecraft/world/level/material/FluidState; a
	getSpread (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Map; b
	getSpreadDelay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)I a
	hasSameAbove (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	isSolidFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isSourceBlockOfThisType (Lnet/minecraft/world/level/material/FluidState;)Z h
	isWaterHole (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	sourceNeighborCount (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)I a
	spread (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
	spreadTo (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)V a
	spreadToSides (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/Fluid net/minecraft/world/level/material/FluidType
	FLUID_STATE_REGISTRY c
	defaultFluidState a
	stateDefinition d
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	defaultFluidState ()Lnet/minecraft/world/level/material/FluidState; h
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getExplosionResistance ()F c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getPickupSound ()Ljava/util/Optional; k
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; g
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	is (Lnet/minecraft/tags/Tag;)Z a
	isEmpty ()Z b
	isRandomlyTicking ()Z j
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V b
	registerDefaultState (Lnet/minecraft/world/level/material/FluidState;)V f
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/FluidState net/minecraft/world/level/material/Fluid
	AMOUNT_FULL g
	AMOUNT_MAX b
	CODEC a
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createLegacyBlock ()Lnet/minecraft/world/level/block/state/BlockState; g
	getAmount ()I e
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	getExplosionResistance ()F i
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; c
	getHeight (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight ()F d
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getType ()Lnet/minecraft/world/level/material/Fluid; a
	is (Lnet/minecraft/tags/Tag;)Z a
	is (Lnet/minecraft/world/level/material/Fluid;)Z b
	isEmpty ()Z c
	isRandomlyTicking ()Z f
	isSource ()Z b
	isSourceOfType (Lnet/minecraft/world/level/material/Fluid;)Z a
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	shouldRenderBackwardUpFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/material/Fluids net/minecraft/world/level/material/FluidTypes
	EMPTY a
	FLOWING_LAVA d
	FLOWING_WATER b
	LAVA e
	WATER c
	register (Ljava/lang/String;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/material/Fluid; a
net/minecraft/world/level/material/FogType dhx
	$VALUES e
	LAVA a
	NONE d
	POWDER_SNOW c
	WATER b
	$values ()[Lnet/minecraft/world/level/material/FogType; a
net/minecraft/world/level/material/LavaFluid net/minecraft/world/level/material/FluidTypeLava
	MIN_LEVEL_CUTOFF e
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V a
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	canConvertToSource ()Z f
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	fizz (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getExplosionResistance ()F c
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getPickupSound ()Ljava/util/Optional; k
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getSpreadDelay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)I a
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	hasFlammableNeighbours (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isFlammable (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isRandomlyTicking ()Z j
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V b
	spreadTo (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/LavaFluid$Flowing dhy$a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/LavaFluid$Source dhy$b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/Material$Builder dhz$a
	blocksMotion b
	color g
	flammable c
	liquid d
	pushReaction a
	replaceable e
	solid f
	solidBlocking h
	build ()Lnet/minecraft/world/level/material/Material; h
	destroyOnPush ()Lnet/minecraft/world/level/material/Material$Builder; f
	flammable ()Lnet/minecraft/world/level/material/Material$Builder; d
	liquid ()Lnet/minecraft/world/level/material/Material$Builder; a
	noCollider ()Lnet/minecraft/world/level/material/Material$Builder; c
	nonSolid ()Lnet/minecraft/world/level/material/Material$Builder; b
	notPushable ()Lnet/minecraft/world/level/material/Material$Builder; g
	notSolidBlocking ()Lnet/minecraft/world/level/material/Material$Builder; i
	replaceable ()Lnet/minecraft/world/level/material/Material$Builder; e
net/minecraft/world/level/material/MaterialColor net/minecraft/world/level/material/MaterialMapColor
	CLAY j
	COLOR_BLACK D
	COLOR_BLUE z
	COLOR_BROWN A
	COLOR_CYAN x
	COLOR_GRAY v
	COLOR_GREEN B
	COLOR_LIGHT_BLUE r
	COLOR_LIGHT_GRAY w
	COLOR_LIGHT_GREEN t
	COLOR_MAGENTA q
	COLOR_ORANGE p
	COLOR_PINK u
	COLOR_PURPLE y
	COLOR_RED C
	COLOR_YELLOW s
	CRIMSON_HYPHAE ac
	CRIMSON_NYLIUM aa
	CRIMSON_STEM ab
	DEEPSLATE ah
	DIAMOND F
	DIRT k
	EMERALD H
	FIRE e
	GLOW_LICHEN aj
	GOLD E
	GRASS b
	ICE f
	LAPIS G
	MATERIAL_COLORS am
	METAL g
	NETHER J
	NONE a
	PLANT h
	PODZOL I
	QUARTZ o
	RAW_IRON ai
	SAND c
	SNOW i
	STONE l
	TERRACOTTA_BLACK Z
	TERRACOTTA_BLUE V
	TERRACOTTA_BROWN W
	TERRACOTTA_CYAN T
	TERRACOTTA_GRAY R
	TERRACOTTA_GREEN X
	TERRACOTTA_LIGHT_BLUE N
	TERRACOTTA_LIGHT_GRAY S
	TERRACOTTA_LIGHT_GREEN P
	TERRACOTTA_MAGENTA M
	TERRACOTTA_ORANGE L
	TERRACOTTA_PINK Q
	TERRACOTTA_PURPLE U
	TERRACOTTA_RED Y
	TERRACOTTA_WHITE K
	TERRACOTTA_YELLOW O
	WARPED_HYPHAE af
	WARPED_NYLIUM ad
	WARPED_STEM ae
	WARPED_WART_BLOCK ag
	WATER m
	WOOD n
	WOOL d
	col ak
	id al
	byId (I)Lnet/minecraft/world/level/material/MaterialColor; a
	byIdUnsafe (I)Lnet/minecraft/world/level/material/MaterialColor; c
	calculateRGBColor (Lnet/minecraft/world/level/material/MaterialColor$Brightness;)I a
	getColorFromPackedId (I)I b
	getPackedId (Lnet/minecraft/world/level/material/MaterialColor$Brightness;)B b
net/minecraft/world/level/material/MaterialColor$Brightness dia$a
	$VALUES h
	HIGH c
	LOW a
	LOWEST d
	NORMAL b
	VALUES g
	id e
	modifier f
	$values ()[Lnet/minecraft/world/level/material/MaterialColor$Brightness; a
	byId (I)Lnet/minecraft/world/level/material/MaterialColor$Brightness; a
	byIdUnsafe (I)Lnet/minecraft/world/level/material/MaterialColor$Brightness; b
net/minecraft/world/level/material/PushReaction net/minecraft/world/level/material/EnumPistonReaction
	$VALUES f
	BLOCK c
	DESTROY b
	IGNORE d
	NORMAL a
	PUSH_ONLY e
	$values ()[Lnet/minecraft/world/level/material/PushReaction; a
net/minecraft/world/level/material/WaterFluid net/minecraft/world/level/material/FluidTypeWater
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V a
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	canConvertToSource ()Z f
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getExplosionResistance ()F c
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getPickupSound ()Ljava/util/Optional; k
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
net/minecraft/world/level/material/WaterFluid$Flowing dic$a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/WaterFluid$Source dic$b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/pathfinder/BinaryHeap net/minecraft/world/level/pathfinder/Path
	heap a
	size b
	changeCost (Lnet/minecraft/world/level/pathfinder/Node;F)V a
	clear ()V a
	downHeap (I)V b
	getHeap ()[Lnet/minecraft/world/level/pathfinder/Node; f
	insert (Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Node; a
	isEmpty ()Z e
	peek ()Lnet/minecraft/world/level/pathfinder/Node; b
	pop ()Lnet/minecraft/world/level/pathfinder/Node; c
	remove (Lnet/minecraft/world/level/pathfinder/Node;)V b
	size ()I d
	upHeap (I)V a
net/minecraft/world/level/pathfinder/BlockPathTypes net/minecraft/world/level/pathfinder/PathType
	$VALUES A
	BLOCKED a
	BREACH v
	COCOA y
	DAMAGE_CACTUS p
	DAMAGE_FIRE n
	DAMAGE_OTHER r
	DANGER_CACTUS o
	DANGER_FIRE m
	DANGER_OTHER q
	DOOR_IRON_CLOSED u
	DOOR_OPEN s
	DOOR_WOOD_CLOSED t
	FENCE g
	LAVA h
	LEAVES w
	OPEN b
	POWDER_SNOW f
	RAIL k
	STICKY_HONEY x
	TRAPDOOR e
	UNPASSABLE_RAIL l
	WALKABLE c
	WALKABLE_DOOR d
	WATER i
	WATER_BORDER j
	malus z
	$values ()[Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getMalus ()F a
net/minecraft/world/level/pathfinder/FlyNodeEvaluator net/minecraft/world/level/pathfinder/PathfinderFlying
	pathTypeByPosCache l
	done ()V a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getCachedBlockPathType (III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	hasMalus (Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isOpen (Lnet/minecraft/world/level/pathfinder/Node;)Z b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/Node net/minecraft/world/level/pathfinder/PathPoint
	cameFrom h
	closed i
	costMalus k
	f g
	g e
	h f
	hash m
	heapIdx d
	type l
	walkedDistance j
	x a
	y b
	z c
	asBlockPos ()Lnet/minecraft/core/BlockPos; a
	asVec3 ()Lnet/minecraft/world/phys/Vec3; b
	cloneAndMove (III)Lnet/minecraft/world/level/pathfinder/Node; a
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Node; b
	createHash (III)I b
	distanceManhattan (Lnet/minecraft/core/BlockPos;)F c
	distanceManhattan (Lnet/minecraft/world/level/pathfinder/Node;)F c
	distanceTo (Lnet/minecraft/core/BlockPos;)F a
	distanceTo (Lnet/minecraft/world/level/pathfinder/Node;)F a
	distanceToSqr (Lnet/minecraft/core/BlockPos;)F b
	distanceToSqr (Lnet/minecraft/world/level/pathfinder/Node;)F b
	inOpenSet ()Z c
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/NodeEvaluator net/minecraft/world/level/pathfinder/PathfinderAbstract
	canFloat i
	canOpenDoors h
	canPassDoors g
	entityDepth f
	entityHeight e
	entityWidth d
	level a
	mob b
	nodes c
	canFloat ()Z f
	canOpenDoors ()Z e
	canPassDoors ()Z d
	done ()V a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getNode (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/Node; b
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
	setCanFloat (Z)V c
	setCanOpenDoors (Z)V b
	setCanPassDoors (Z)V a
net/minecraft/world/level/pathfinder/Path net/minecraft/world/level/pathfinder/PathEntity
	closedSet c
	distToTarget g
	nextNodeIndex e
	nodes a
	openSet b
	reached h
	target f
	targetNodes d
	advance ()V a
	canReach ()Z j
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Path; b
	getClosedSet ()[Lnet/minecraft/world/level/pathfinder/Node; l
	getDistToTarget ()F n
	getEndNode ()Lnet/minecraft/world/level/pathfinder/Node; d
	getEntityPosAtNode (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/phys/Vec3; a
	getNextEntityPos (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; a
	getNextNode ()Lnet/minecraft/world/level/pathfinder/Node; h
	getNextNodeIndex ()I f
	getNextNodePos ()Lnet/minecraft/core/BlockPos; g
	getNode (I)Lnet/minecraft/world/level/pathfinder/Node; a
	getNodeCount ()I e
	getNodePos (I)Lnet/minecraft/core/BlockPos; d
	getOpenSet ()[Lnet/minecraft/world/level/pathfinder/Node; k
	getPreviousNode ()Lnet/minecraft/world/level/pathfinder/Node; i
	getTarget ()Lnet/minecraft/core/BlockPos; m
	isDone ()Z c
	notStarted ()Z b
	replaceNode (ILnet/minecraft/world/level/pathfinder/Node;)V a
	sameAs (Lnet/minecraft/world/level/pathfinder/Path;)Z a
	setDebug ([Lnet/minecraft/world/level/pathfinder/Node;[Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;)V a
	setNextNodeIndex (I)V c
	truncateNodes (I)V b
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/PathComputationType net/minecraft/world/level/pathfinder/PathMode
	$VALUES d
	AIR c
	LAND a
	WATER b
	$values ()[Lnet/minecraft/world/level/pathfinder/PathComputationType; a
net/minecraft/world/level/pathfinder/PathFinder net/minecraft/world/level/pathfinder/Pathfinder
	DEBUG e
	FUDGING a
	maxVisitedNodes c
	neighbors b
	nodeEvaluator d
	openSet f
	findPath (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Map;FIF)Lnet/minecraft/world/level/pathfinder/Path; a
	findPath (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;Ljava/util/Set;FIF)Lnet/minecraft/world/level/pathfinder/Path; a
	getBestH (Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;)F a
	reconstructPath (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/pathfinder/Path; a
net/minecraft/world/level/pathfinder/SwimNodeEvaluator net/minecraft/world/level/pathfinder/PathfinderWater
	allowBreaching j
	pathTypesByPosCache k
	done ()V a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getCachedBlockType (III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	isDiagonalNodeValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isNodeValid (Lnet/minecraft/world/level/pathfinder/Node;)Z a
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/Target net/minecraft/world/level/pathfinder/PathDestination
	bestHeuristic m
	bestNode n
	reached o
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Target; c
	getBestNode ()Lnet/minecraft/world/level/pathfinder/Node; d
	isReached ()Z f
	setReached ()V e
	updateBest (FLnet/minecraft/world/level/pathfinder/Node;)V a
net/minecraft/world/level/pathfinder/WalkNodeEvaluator net/minecraft/world/level/pathfinder/PathfinderNormal
	SPACE_BETWEEN_WALL_POSTS j
	collisionCache m
	oldWaterCost k
	pathTypesByPosCache l
	canReachWithoutCollision (Lnet/minecraft/world/level/pathfinder/Node;)Z a
	checkNeighbourBlocks (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	done ()V a
	evaluateBlockPathType (Lnet/minecraft/world/level/BlockGetter;ZZLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	findAcceptedNode (IIIIDLnet/minecraft/core/Direction;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/Node; a
	getBlockPathType (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathTypeRaw (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getBlockPathTypeStatic (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathTypes (Lnet/minecraft/world/level/BlockGetter;IIIIIIZZLjava/util/EnumSet;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getCachedBlockType (Lnet/minecraft/world/entity/Mob;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getFloorLevel (Lnet/minecraft/core/BlockPos;)D a
	getFloorLevel (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)D a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	hasCollisions (Lnet/minecraft/world/phys/AABB;)Z a
	hasPositiveMalus (Lnet/minecraft/core/BlockPos;)Z c
	isAmphibious ()Z c
	isBurningBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDiagonalValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isNeighborValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/portal/PortalForcer net/minecraft/world/level/portal/PortalTravelAgent
	CREATE_RADIUS c
	FRAME_BOX f
	FRAME_BOX_END l
	FRAME_BOX_START k
	FRAME_HEIGHT d
	FRAME_HEIGHT_END h
	FRAME_HEIGHT_START g
	FRAME_WIDTH e
	FRAME_WIDTH_END j
	FRAME_WIDTH_START i
	NOTHING_FOUND m
	SEARCH_RADIUS b
	TICKET_RADIUS a
	level n
	canHostFrame (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;I)Z a
	createPortal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	findPortalAround (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; a
net/minecraft/world/level/portal/PortalInfo net/minecraft/world/level/portal/ShapeDetectorShape
	pos a
	speed b
	xRot d
	yRot c
net/minecraft/world/level/portal/PortalShape net/minecraft/world/level/portal/BlockPortalShape
	FRAME e
	MAX_HEIGHT b
	MAX_WIDTH a
	MIN_HEIGHT d
	MIN_WIDTH c
	axis g
	bottomLeft j
	height k
	level f
	numPortalBlocks i
	rightDir h
	width l
	calculateBottomLeft (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	calculateHeight ()I e
	calculateWidth ()I d
	createPortalBlocks ()V b
	createPortalInfo (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/BlockUtil$FoundRectangle;Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/EntityDimensions;Lnet/minecraft/world/phys/Vec3;FF)Lnet/minecraft/world/level/portal/PortalInfo; a
	findEmptyPortalShape (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	findPortalShape (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	getDistanceUntilEdgeAboveFrame (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getDistanceUntilTop (Lnet/minecraft/core/BlockPos$MutableBlockPos;)I a
	getRelativePosition (Lnet/minecraft/BlockUtil$FoundRectangle;Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/EntityDimensions;)Lnet/minecraft/world/phys/Vec3; a
	hasTopFrame (Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Z a
	isComplete ()Z c
	isEmpty (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValid ()Z a
net/minecraft/world/level/redstone/Redstone diw
	SIGNAL_MAX b
	SIGNAL_MIN a
	SIGNAL_NONE c
net/minecraft/world/level/saveddata/SavedData net/minecraft/world/level/saveddata/PersistentBase
	LOGGER a
	dirty b
	isDirty ()Z c
	save (Ljava/io/File;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setDirty ()V b
	setDirty (Z)V a
net/minecraft/world/level/saveddata/maps/MapBanner net/minecraft/world/level/saveddata/maps/MapIconBanner
	color b
	name c
	pos a
	fromWorld (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/saveddata/maps/MapBanner; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	getDecoration ()Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; c
	getId ()Ljava/lang/String; f
	getName ()Lnet/minecraft/network/chat/Component; d
	getPos ()Lnet/minecraft/core/BlockPos; a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapBanner; a
	save ()Lnet/minecraft/nbt/CompoundTag; e
net/minecraft/world/level/saveddata/maps/MapDecoration net/minecraft/world/level/saveddata/maps/MapIcon
	name e
	rot d
	type a
	x b
	y c
	getImage ()B a
	getName ()Lnet/minecraft/network/chat/Component; g
	getRot ()B e
	getType ()Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; b
	getX ()B c
	getY ()B d
	renderOnFrame ()Z f
net/minecraft/world/level/saveddata/maps/MapDecoration$Type net/minecraft/world/level/saveddata/maps/MapIcon$Type
	$VALUES F
	BANNER_BLACK z
	BANNER_BLUE v
	BANNER_BROWN w
	BANNER_CYAN t
	BANNER_GRAY r
	BANNER_GREEN x
	BANNER_LIGHT_BLUE n
	BANNER_LIGHT_GRAY s
	BANNER_LIME p
	BANNER_MAGENTA m
	BANNER_ORANGE l
	BANNER_PINK q
	BANNER_PURPLE u
	BANNER_RED y
	BANNER_WHITE k
	BANNER_YELLOW o
	BLUE_MARKER d
	FRAME b
	MANSION i
	MONUMENT j
	PLAYER a
	PLAYER_OFF_LIMITS h
	PLAYER_OFF_MAP g
	RED_MARKER c
	RED_X A
	TARGET_POINT f
	TARGET_X e
	icon B
	mapColor D
	renderedOnFrame C
	trackCount E
	$values ()[Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; f
	byIcon (B)Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; a
	getIcon ()B a
	getMapColor ()I d
	hasMapColor ()Z c
	isRenderedOnFrame ()Z b
	shouldTrackCount ()Z e
net/minecraft/world/level/saveddata/maps/MapFrame net/minecraft/world/level/saveddata/maps/WorldMapFrame
	entityId c
	pos a
	rotation b
	frameId (Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	getEntityId ()I d
	getId ()Ljava/lang/String; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	getRotation ()I c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapFrame; a
	save ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/saveddata/maps/MapIndex net/minecraft/world/level/saveddata/maps/PersistentIdCounts
	FILE_NAME a
	usedAuxIds b
	getFreeAuxValueForMap ()I a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapIndex; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/saveddata/maps/MapItemSavedData net/minecraft/world/level/saveddata/maps/WorldMap
	HALF_MAP_SIZE k
	LOGGER i
	MAP_SIZE j
	MAX_SCALE a
	TRACKED_DECORATION_LIMIT b
	bannerMarkers p
	carriedBy n
	carriedByPlayers o
	colors g
	decorations q
	dimension e
	frameMarkers r
	locked h
	scale f
	trackedDecorationCount s
	trackingPosition l
	unlimitedTracking m
	x c
	z d
	addClientSideDecorations (Ljava/util/List;)V a
	addDecoration (Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;Lnet/minecraft/world/level/LevelAccessor;Ljava/lang/String;DDDLnet/minecraft/network/chat/Component;)V a
	addTargetDecoration (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;)V a
	checkBanners (Lnet/minecraft/world/level/BlockGetter;II)V a
	createForClient (BZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	createFresh (DDBZZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getBanners ()Ljava/util/Collection; d
	getDecorations ()Ljava/lang/Iterable; f
	getHoldingPlayer (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer; a
	getUpdatePacket (ILnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	isExplorationMap ()Z e
	isTrackedCountOverLimit (I)Z b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; b
	locked ()Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	removeDecoration (Ljava/lang/String;)V a
	removedFromFrame (Lnet/minecraft/core/BlockPos;I)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	scaled (I)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	setColor (IIB)V b
	setColorsDirty (II)V a
	setDecorationsDirty ()V g
	tickCarriedBy (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	toggleBanner (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	updateColor (IIB)Z a
net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer net/minecraft/world/level/saveddata/maps/WorldMap$WorldMapHumanTracker
	dirtyData d
	dirtyDecorations i
	maxDirtyX g
	maxDirtyY h
	minDirtyX e
	minDirtyY f
	player a
	step b
	tick j
	createPatch ()Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch; a
	markColorsDirty (II)V a
	markDecorationsDirty ()V b
	nextUpdatePacket (I)Lnet/minecraft/network/protocol/Packet; a
net/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch djd$b
	height d
	mapColors e
	startX a
	startY b
	width c
	applyToMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
net/minecraft/world/level/storage/CommandStorage net/minecraft/world/level/storage/PersistentCommandStorage
	ID_PREFIX a
	namespaces b
	storage c
	createId (Ljava/lang/String;)Ljava/lang/String; b
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/nbt/CompoundTag; a
	keys ()Ljava/util/stream/Stream; a
	newStorage (Ljava/lang/String;)Lnet/minecraft/world/level/storage/CommandStorage$Container; a
	set (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/storage/CommandStorage$Container djg$a
	TAG_CONTENTS a
	storage b
	get (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	getKeys (Ljava/lang/String;)Ljava/util/stream/Stream; b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/storage/CommandStorage$Container; b
	put (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/storage/DerivedLevelData net/minecraft/world/level/storage/SecondaryWorldData
	worldData a
	wrapped b
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getLevelName ()Ljava/lang/String; g
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getSpawnAngle ()F d
	getThunderTime ()I j
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isInitialized ()Z p
	isRaining ()Z k
	isThundering ()Z i
	setClearWeatherTime (I)V a
	setDayTime (J)V b
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setRainTime (I)V f
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/world/level/storage/DimensionDataStorage net/minecraft/world/level/storage/WorldPersistentData
	LOGGER a
	cache b
	dataFolder d
	fixerUpper c
	computeIfAbsent (Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; a
	get (Ljava/util/function/Function;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; a
	getDataFile (Ljava/lang/String;)Ljava/io/File; a
	isGzip (Ljava/io/PushbackInputStream;)Z a
	readSavedData (Ljava/util/function/Function;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; b
	readTagFromDisk (Ljava/lang/String;I)Lnet/minecraft/nbt/CompoundTag; a
	save ()V a
	set (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/SavedData;)V a
net/minecraft/world/level/storage/LevelData net/minecraft/world/level/storage/WorldData
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getSpawnAngle ()F d
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isRaining ()Z k
	isThundering ()Z i
	setRaining (Z)V b
net/minecraft/world/level/storage/LevelResource net/minecraft/world/level/storage/SavedFile
	DATAPACK_DIR g
	GENERATED_DIR f
	LEVEL_DATA_FILE e
	MAP_RESOURCE_FILE h
	PLAYER_ADVANCEMENTS_DIR a
	PLAYER_DATA_DIR c
	PLAYER_OLD_DATA_DIR d
	PLAYER_STATS_DIR b
	ROOT i
	id j
	getId ()Ljava/lang/String; a
net/minecraft/world/level/storage/LevelStorageSource net/minecraft/world/level/storage/Convertable
	FORMATTER b
	ICON_FILENAME c
	LOGGER a
	OLD_SETTINGS_KEYS d
	backupDir f
	baseDir e
	fixerUpper g
	createAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess; c
	createDefault (Ljava/nio/file/Path;)Lnet/minecraft/world/level/storage/LevelStorageSource; a
	getBackupPath ()Ljava/nio/file/Path; d
	getBaseDir ()Ljava/nio/file/Path; c
	getDataPacks (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/world/level/DataPackConfig; a
	getLevelData (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/DataPackConfig;)Ljava/util/function/BiFunction; a
	getLevelList ()Ljava/util/List; b
	getName ()Ljava/lang/String; a
	getStorageVersion ()I e
	isNewLevelIdAcceptable (Ljava/lang/String;)Z a
	levelExists (Ljava/lang/String;)Z b
	levelSummaryReader (Ljava/io/File;Z)Ljava/util/function/BiFunction; a
	readDataPackConfig (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/DataPackConfig; a
	readLevelData (Ljava/io/File;Ljava/util/function/BiFunction;)Ljava/lang/Object; a
	readWorldGenSettings (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess net/minecraft/world/level/storage/Convertable$ConversionSession
	levelId d
	levelPath c
	lock b
	resources e
	checkLock ()V h
	createPlayerStorage ()Lnet/minecraft/world/level/storage/PlayerDataStorage; b
	deleteLevel ()V f
	getDataPacks ()Lnet/minecraft/world/level/DataPackConfig; d
	getDataTag (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/storage/WorldData; a
	getDimensionPath (Lnet/minecraft/resources/ResourceKey;)Ljava/nio/file/Path; a
	getIconFile ()Ljava/util/Optional; e
	getLevelId ()Ljava/lang/String; a
	getLevelPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
	getSummary ()Lnet/minecraft/world/level/storage/LevelSummary; c
	makeWorldBackup ()J g
	renameLevel (Ljava/lang/String;)V a
	saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;)V a
	saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/storage/LevelSummary net/minecraft/world/level/storage/WorldInfo
	icon f
	info g
	levelId c
	levelVersion b
	locked e
	requiresManualConversion d
	settings a
	askToOpenWorld ()Z m
	backupStatus ()Lnet/minecraft/world/level/storage/LevelSummary$BackupStatus; n
	compareTo (Lnet/minecraft/world/level/storage/LevelSummary;)I a
	createInfo ()Lnet/minecraft/network/chat/Component; s
	getGameMode ()Lnet/minecraft/world/level/GameType; g
	getIcon ()Ljava/io/File; c
	getInfo ()Lnet/minecraft/network/chat/Component; r
	getLastPlayed ()J e
	getLevelId ()Ljava/lang/String; a
	getLevelName ()Ljava/lang/String; b
	getSettings ()Lnet/minecraft/world/level/LevelSettings; f
	getWorldVersionName ()Lnet/minecraft/network/chat/MutableComponent; j
	hasCheats ()Z i
	isCompatible ()Z q
	isDisabled ()Z p
	isHardcore ()Z h
	isLocked ()Z o
	levelVersion ()Lnet/minecraft/world/level/storage/LevelVersion; k
	markVersionInList ()Z l
	requiresManualConversion ()Z d
net/minecraft/world/level/storage/LevelSummary$BackupStatus djo$a
	$VALUES g
	DOWNGRADE b
	NONE a
	UPGRADE_TO_SNAPSHOT c
	severe e
	shouldBackup d
	translationKey f
	$values ()[Lnet/minecraft/world/level/storage/LevelSummary$BackupStatus; d
	getTranslationKey ()Ljava/lang/String; c
	isSevere ()Z b
	shouldBackup ()Z a
net/minecraft/world/level/storage/PlayerDataStorage net/minecraft/world/level/storage/WorldNBTStorage
	LOGGER b
	fixerUpper a
	playerDir c
	getSeenPlayers ()[Ljava/lang/String; a
	load (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/nbt/CompoundTag; b
	save (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/storage/PrimaryLevelData net/minecraft/world/level/storage/WorldDataServer
	LOGGER d
	WORLD_GEN_SETTINGS a
	clearWeatherTime s
	customBossEvents B
	dayTime m
	difficultyLocked y
	endDragonFightData A
	fixerUpper n
	gameTime l
	initialized x
	knownServerBrands F
	loadedPlayerTag q
	playerDataVersion o
	rainTime u
	raining t
	scheduledEvents H
	settings e
	spawnAngle k
	thunderTime w
	thundering v
	upgradedPlayerTag p
	version r
	wanderingTraderId E
	wanderingTraderSpawnChance D
	wanderingTraderSpawnDelay C
	wasModded G
	worldBorder z
	worldGenSettings f
	worldGenSettingsLifecycle g
	xSpawn h
	ySpawn i
	zSpawn j
	createTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	endDragonFightData ()Lnet/minecraft/nbt/CompoundTag; C
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getCustomBossEvents ()Lnet/minecraft/nbt/CompoundTag; E
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; D
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getKnownServerBrands ()Ljava/util/Set; G
	getLevelName ()Ljava/lang/String; g
	getLevelSettings ()Lnet/minecraft/world/level/LevelSettings; I
	getLoadedPlayerTag ()Lnet/minecraft/nbt/CompoundTag; y
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getSpawnAngle ()F d
	getThunderTime ()I j
	getVersion ()I z
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isInitialized ()Z p
	isRaining ()Z k
	isThundering ()Z i
	overworldData ()Lnet/minecraft/world/level/storage/ServerLevelData; H
	parse (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/world/level/storage/LevelVersion;Lnet/minecraft/world/level/levelgen/WorldGenSettings;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/world/level/storage/PrimaryLevelData; a
	setClearWeatherTime (I)V a
	setCustomBossEvents (Lnet/minecraft/nbt/CompoundTag;)V b
	setDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)V a
	setDayTime (J)V b
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V d
	setEndDragonFightData (Lnet/minecraft/nbt/CompoundTag;)V a
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setModdedInfo (Ljava/lang/String;Z)V a
	setRainTime (I)V f
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setTagData (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/CompoundTag;)V a
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
	updatePlayerTag ()V J
	wasModded ()Z F
	worldGenSettings ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; A
	worldGenSettingsLifecycle ()Lcom/mojang/serialization/Lifecycle; B
net/minecraft/world/level/storage/ServerLevelData net/minecraft/world/level/storage/IWorldDataServer
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getLevelName ()Ljava/lang/String; g
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getThunderTime ()I j
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	isInitialized ()Z p
	setClearWeatherTime (I)V a
	setDayTime (J)V b
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setRainTime (I)V f
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
net/minecraft/world/level/storage/WorldData net/minecraft/world/level/storage/SaveData
	ANVIL_VERSION_ID b
	MCREGION_VERSION_ID c
	createTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	endDragonFightData ()Lnet/minecraft/nbt/CompoundTag; C
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAllowCommands ()Z o
	getCustomBossEvents ()Lnet/minecraft/nbt/CompoundTag; E
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; D
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getKnownServerBrands ()Ljava/util/Set; G
	getLevelName ()Ljava/lang/String; g
	getLevelSettings ()Lnet/minecraft/world/level/LevelSettings; I
	getLoadedPlayerTag ()Lnet/minecraft/nbt/CompoundTag; y
	getStorageVersionName (I)Ljava/lang/String; i
	getVersion ()I z
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	overworldData ()Lnet/minecraft/world/level/storage/ServerLevelData; H
	setCustomBossEvents (Lnet/minecraft/nbt/CompoundTag;)V b
	setDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)V a
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V d
	setEndDragonFightData (Lnet/minecraft/nbt/CompoundTag;)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setModdedInfo (Ljava/lang/String;Z)V a
	wasModded ()Z F
	worldGenSettings ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; A
	worldGenSettingsLifecycle ()Lcom/mojang/serialization/Lifecycle; B
net/minecraft/world/level/storage/WritableLevelData net/minecraft/world/level/storage/WorldDataMutable
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/world/level/storage/loot/BuiltInLootTables net/minecraft/world/level/storage/loot/LootTables
	ABANDONED_MINESHAFT u
	ARMORER_GIFT al
	BASTION_BRIDGE N
	BASTION_HOGLIN_STABLE O
	BASTION_OTHER M
	BASTION_TREASURE L
	BURIED_TREASURE G
	BUTCHER_GIFT am
	CARTOGRAPHER_GIFT an
	CAT_MORNING_GIFT ak
	CLERIC_GIFT ao
	DESERT_PYRAMID z
	EMPTY a
	END_CITY_TREASURE c
	FARMER_GIFT ap
	FISHERMAN_GIFT aq
	FISHING ag
	FISHING_FISH aj
	FISHING_JUNK ah
	FISHING_TREASURE ai
	FLETCHER_GIFT ar
	IGLOO_CHEST C
	IMMUTABLE_LOCATIONS aA
	JUNGLE_TEMPLE A
	JUNGLE_TEMPLE_DISPENSER B
	LEATHERWORKER_GIFT as
	LIBRARIAN_GIFT at
	LOCATIONS az
	MASON_GIFT au
	NETHER_BRIDGE v
	PIGLIN_BARTERING ay
	PILLAGER_OUTPOST K
	RUINED_PORTAL P
	SHEEP_BLACK af
	SHEEP_BLUE ab
	SHEEP_BROWN ac
	SHEEP_CYAN Z
	SHEEP_GRAY X
	SHEEP_GREEN ad
	SHEEP_LIGHT_BLUE T
	SHEEP_LIGHT_GRAY Y
	SHEEP_LIME V
	SHEEP_MAGENTA S
	SHEEP_ORANGE R
	SHEEP_PINK W
	SHEEP_PURPLE aa
	SHEEP_RED ae
	SHEEP_WHITE Q
	SHEEP_YELLOW U
	SHEPHERD_GIFT av
	SHIPWRECK_MAP H
	SHIPWRECK_SUPPLY I
	SHIPWRECK_TREASURE J
	SIMPLE_DUNGEON d
	SPAWN_BONUS_CHEST b
	STRONGHOLD_CORRIDOR y
	STRONGHOLD_CROSSING x
	STRONGHOLD_LIBRARY w
	TOOLSMITH_GIFT aw
	UNDERWATER_RUIN_BIG F
	UNDERWATER_RUIN_SMALL E
	VILLAGE_ARMORER g
	VILLAGE_BUTCHER k
	VILLAGE_CARTOGRAPHER h
	VILLAGE_DESERT_HOUSE p
	VILLAGE_FISHER m
	VILLAGE_FLETCHER l
	VILLAGE_MASON i
	VILLAGE_PLAINS_HOUSE q
	VILLAGE_SAVANNA_HOUSE t
	VILLAGE_SHEPHERD j
	VILLAGE_SNOWY_HOUSE s
	VILLAGE_TAIGA_HOUSE r
	VILLAGE_TANNERY n
	VILLAGE_TEMPLE o
	VILLAGE_TOOLSMITH f
	VILLAGE_WEAPONSMITH e
	WEAPONSMITH_GIFT ax
	WOODLAND_MANSION D
	all ()Ljava/util/Set; a
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	register (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/Deserializers net/minecraft/world/level/storage/loot/LootSerialization
	createConditionSerializer ()Lcom/google/gson/GsonBuilder; a
	createFunctionSerializer ()Lcom/google/gson/GsonBuilder; b
	createLootTableSerializer ()Lcom/google/gson/GsonBuilder; c
net/minecraft/world/level/storage/loot/GsonAdapterFactory net/minecraft/world/level/storage/loot/JsonRegistry
	builder (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder djx$a
	defaultType f
	elementName b
	inlineType e
	registry a
	typeGetter d
	typeKey c
	build ()Ljava/lang/Object; a
	withDefaultType (Lnet/minecraft/world/level/storage/loot/SerializerType;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
	withInlineSerializer (Lnet/minecraft/world/level/storage/loot/SerializerType;Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$InlineSerializer;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$InlineSerializer djx$b
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$JsonAdapter djx$c
	defaultType e
	elementName b
	inlineType f
	registry a
	typeGetter d
	typeKey c
net/minecraft/world/level/storage/loot/IntRange$IntChecker djy$a
net/minecraft/world/level/storage/loot/IntRange$IntLimiter djy$b
net/minecraft/world/level/storage/loot/IntRange$Serializer djy$c
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/IntRange; a
	serialize (Lnet/minecraft/world/level/storage/loot/IntRange;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/ItemModifierManager$FunctionSequence djz$a
	compositeFunction b
	functions a
	apply (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
net/minecraft/world/level/storage/loot/LootContext net/minecraft/world/level/storage/loot/LootTableInfo
	conditions f
	dynamicDrops i
	level c
	lootTables d
	luck b
	params h
	random a
	visitedConditions g
	visitedTables e
	addDynamicDrops (Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Consumer;)V a
	addVisitedCondition (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z a
	addVisitedTable (Lnet/minecraft/world/level/storage/loot/LootTable;)Z a
	getCondition (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; b
	getLevel ()Lnet/minecraft/server/level/ServerLevel; c
	getLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	getLuck ()F b
	getParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	getParamOrNull (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; c
	getRandom ()Ljava/util/Random; a
	hasParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
	removeVisitedCondition (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)V b
	removeVisitedTable (Lnet/minecraft/world/level/storage/loot/LootTable;)V b
net/minecraft/world/level/storage/loot/LootContext$Builder net/minecraft/world/level/storage/loot/LootTableInfo$Builder
	dynamicDrops c
	level a
	luck e
	params b
	random d
	create (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/LootContext; a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	getParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; a
	withDynamicDrop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootContext$DynamicDrop;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withLuck (F)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; b
	withOptionalRandomSeed (J)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withOptionalRandomSeed (JLjava/util/Random;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withRandom (Ljava/util/Random;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
net/minecraft/world/level/storage/loot/LootContext$DynamicDrop dka$b
net/minecraft/world/level/storage/loot/LootContext$EntityTarget net/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget
	$VALUES g
	DIRECT_KILLER c
	KILLER b
	KILLER_PLAYER d
	THIS a
	name e
	param f
	$values ()[Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; b
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; a
	getParam ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam; a
net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer dka$c$a
	read (Lcom/google/gson/stream/JsonReader;)Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; a
	write (Lcom/google/gson/stream/JsonWriter;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)V a
net/minecraft/world/level/storage/loot/LootContextUser net/minecraft/world/level/storage/loot/LootItemUser
	getReferencedContextParams ()Ljava/util/Set; b
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootPool net/minecraft/world/level/storage/loot/LootSelector
	bonusRolls g
	compositeCondition c
	compositeFunction e
	conditions b
	entries a
	functions d
	rolls f
	addRandomItem (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V b
	addRandomItems (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	lootPool ()Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootPool$Builder dkc$a
	bonusRolls e
	conditions b
	entries a
	functions c
	rolls d
	add (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/LootPool; b
	setBonusRolls (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; b
	setRolls (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
net/minecraft/world/level/storage/loot/LootPool$Serializer dkc$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/LootPool; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootPool;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/LootTable$Builder dkd$a
	functions b
	paramSet c
	pools a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/LootTable; b
	setParamSet (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	withPool (Lnet/minecraft/world/level/storage/loot/LootPool$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
net/minecraft/world/level/storage/loot/LootTable$Serializer dkd$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootTable;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/LootTables net/minecraft/world/level/storage/loot/LootTableRegistry
	GSON b
	LOGGER a
	predicateManager d
	tables c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	getIds ()Ljava/util/Set; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootTable;)Lcom/google/gson/JsonElement; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootTable;)V a
net/minecraft/world/level/storage/loot/PredicateManager net/minecraft/world/level/storage/loot/LootPredicateManager
	GSON b
	LOGGER a
	conditions c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
	getKeys ()Ljava/util/Set; a
net/minecraft/world/level/storage/loot/PredicateManager$CompositePredicate dkf$a
	composedPredicate b
	terms a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/Serializer net/minecraft/world/level/storage/loot/LootSerializer
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/SerializerType net/minecraft/world/level/storage/loot/LootSerializerType
	serializer a
	getSerializer ()Lnet/minecraft/world/level/storage/loot/Serializer; a
net/minecraft/world/level/storage/loot/ValidationContext net/minecraft/world/level/storage/loot/LootCollector
	conditionResolver d
	context b
	contextCache h
	params c
	problems a
	tableResolver f
	visitedConditions e
	visitedTables g
	enterCondition (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/ValidationContext; b
	enterTable (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	forChild (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/ValidationContext; b
	getContext ()Ljava/lang/String; b
	getProblems ()Lcom/google/common/collect/Multimap; a
	hasVisitedCondition (Lnet/minecraft/resources/ResourceLocation;)Z b
	hasVisitedTable (Lnet/minecraft/resources/ResourceLocation;)Z a
	reportProblem (Ljava/lang/String;)V a
	resolveCondition (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; d
	resolveLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; c
	setParams (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	validateUser (Lnet/minecraft/world/level/storage/loot/LootContextUser;)V a
net/minecraft/world/level/storage/loot/entries/AlternativesEntry net/minecraft/world/level/storage/loot/entries/LootEntryAlternatives
	alternatives ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder dkj$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	otherwise (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer net/minecraft/world/level/storage/loot/entries/LootEntryChildren
	ALWAYS_FALSE a
	ALWAYS_TRUE b
net/minecraft/world/level/storage/loot/entries/CompositeEntryBase net/minecraft/world/level/storage/loot/entries/LootEntryChildrenAbstract
	children c
	composedChildren e
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	createSerializer (Lnet/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor dkl$a
net/minecraft/world/level/storage/loot/entries/DynamicLoot net/minecraft/world/level/storage/loot/entries/LootSelectorDynamic
	name i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	dynamicEntry (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer dkm$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/DynamicLoot; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/DynamicLoot;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/EmptyLootItem net/minecraft/world/level/storage/loot/entries/LootSelectorEmpty
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	emptyItem ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer dkn$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/EmptyLootItem; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
net/minecraft/world/level/storage/loot/entries/EntryGroup net/minecraft/world/level/storage/loot/entries/LootEntryGroup
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	list ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; a
net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder dko$a
	entries a
	append (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; b
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
net/minecraft/world/level/storage/loot/entries/LootItem$Serializer dkp$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootItem; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootItem;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntries net/minecraft/world/level/storage/loot/entries/LootEntries
	ALTERNATIVES f
	DYNAMIC d
	EMPTY a
	GROUP h
	ITEM b
	REFERENCE c
	SEQUENCE g
	TAG e
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/LootPoolEntry net/minecraft/world/level/storage/loot/entries/LootEntry
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getWeight (F)I a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer net/minecraft/world/level/storage/loot/entries/LootEntryAbstract
	compositeCondition c
	conditions d
	canRun (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder dks$a
	conditions a
	append (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; b
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getConditions ()[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; f
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	otherwise (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	then (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; c
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; e
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer net/minecraft/world/level/storage/loot/entries/LootEntryAbstract$Serializer
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryType net/minecraft/world/level/storage/loot/entries/LootEntryType
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer net/minecraft/world/level/storage/loot/entries/LootSelectorEntry
	DEFAULT_QUALITY e
	DEFAULT_WEIGHT c
	compositeFunction i
	entry j
	functions h
	quality g
	weight f
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	simpleBuilder (Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder dku$a
	functions c
	quality b
	weight a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	getFunctions ()[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; a
	setQuality (I)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	setWeight (I)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder dku$b
	constructor c
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder; g
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase dku$c
	getWeight (F)I a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor dku$d
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer dku$e
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootTableReference net/minecraft/world/level/storage/loot/entries/LootSelectorLootTable
	name i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	lootTableReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer dkv$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootTableReference; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootTableReference;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/SequentialEntry net/minecraft/world/level/storage/loot/entries/LootEntrySequence
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	sequential ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; a
net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder dkw$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; a
	then (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; c
net/minecraft/world/level/storage/loot/entries/TagEntry net/minecraft/world/level/storage/loot/entries/LootSelectorTag
	expand j
	tag i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	expandTag (Lnet/minecraft/tags/Tag;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	expandTag (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)Z a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	tagContents (Lnet/minecraft/tags/Tag;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer dkx$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/TagEntry; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/TagEntry;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount net/minecraft/world/level/storage/loot/functions/LootItemFunctionApplyBonus
	FORMULAS a
	enchantment b
	formula c
	addBonusBinomialDistributionCount (Lnet/minecraft/world/item/enchantment/Enchantment;FI)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	addOreBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; b
	addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;I)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount dkz$a
	TYPE a
	extraRounds b
	probability c
	calculateNewCount (Ljava/util/Random;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula dkz$b
	calculateNewCount (Ljava/util/Random;II)I a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer dkz$c
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops dkz$d
	TYPE a
	calculateNewCount (Ljava/util/Random;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer dkz$e
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount dkz$f
	TYPE a
	bonusMultiplier b
	calculateNewCount (Ljava/util/Random;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay net/minecraft/world/level/storage/loot/functions/LootItemFunctionExplosionDecay
	explosionDecay ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer dla$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
net/minecraft/world/level/storage/loot/functions/CopyBlockState net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyState
	block a
	properties b
	copyState (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	serialize (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/String; a
net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder dlb$a
	block a
	properties b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	copy (Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer dlb$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName
	source a
	copyName (Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName$Source
	$VALUES g
	BLOCK_ENTITY d
	KILLER b
	KILLER_PLAYER c
	THIS a
	name e
	param f
	$values ()[Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource; a
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource; a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer dlc$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyNBT
	operations b
	source a
	compileNbtPath (Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	copyData (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	copyData (Lnet/minecraft/world/level/storage/loot/providers/nbt/NbtProvider;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder dld$a
	ops b
	source a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	copy (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	copy (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation dld$b
	op e
	sourcePath b
	sourcePathText a
	targetPath d
	targetPathText c
	apply (Ljava/util/function/Supplier;Lnet/minecraft/nbt/Tag;)V a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation; a
	toJson ()Lcom/google/gson/JsonObject; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyNBT$Action
	$VALUES e
	APPEND b
	MERGE c
	REPLACE a
	name d
	$values ()[Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy; a
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy; a
	merge (Lnet/minecraft/nbt/Tag;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/List;)V a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer dld$d
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction net/minecraft/world/level/storage/loot/functions/LootItemFunctionEnchant
	LOGGER a
	enchantments b
	enchantItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/Enchantment;Ljava/util/Random;)Lnet/minecraft/world/item/ItemStack; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	randomApplicableEnchantment ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	randomEnchantment ()Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; c
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder dle$a
	enchantments a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	withEnchantment (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer dle$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction net/minecraft/world/level/storage/loot/functions/LootEnchantLevel
	levels a
	treasure b
	enchantWithLevels (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder dlf$a
	levels a
	treasure b
	allowTreasure ()Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; e
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer dlf$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction net/minecraft/world/level/storage/loot/functions/LootItemFunctionExplorationMap
	DEFAULT_DECORATION c
	DEFAULT_DECORATION_NAME b
	DEFAULT_FEATURE a
	DEFAULT_SEARCH_RADIUS e
	DEFAULT_SKIP_EXISTING f
	DEFAULT_ZOOM d
	LOGGER h
	destination i
	mapDecoration j
	searchRadius l
	skipKnownStructures m
	zoom k
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	makeExplorationMap ()Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; c
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder dlg$a
	destination a
	mapDecoration b
	searchRadius d
	skipKnownStructures e
	zoom c
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	setDestination (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setMapDecoration (Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setSearchRadius (I)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setSkipKnownStructures (Z)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setZoom (B)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer dlg$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	readStructure (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/levelgen/feature/StructureFeature; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/FillPlayerHead net/minecraft/world/level/storage/loot/functions/LootItemFunctionFillPlayerHead
	entityTarget a
	fillPlayerHead (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer dlh$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/FillPlayerHead; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/FillPlayerHead;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder net/minecraft/world/level/storage/loot/functions/LootItemFunctionUser
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	unwrap ()Ljava/lang/Object; c
net/minecraft/world/level/storage/loot/functions/LimitCount net/minecraft/world/level/storage/loot/functions/LootItemFunctionLimitCount
	limiter a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	limitCount (Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer dlj$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LimitCount; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LimitCount;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction net/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional
	compositePredicates a
	predicates g
	apply (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	simpleBuilder (Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder dlk$a
	conditions a
	getConditions ()[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; g
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; f
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder dlk$b
	constructor a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder; a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer dlk$c
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder dll$a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction net/minecraft/world/level/storage/loot/functions/LootEnchantFunction
	NO_LIMIT a
	limit c
	value b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	hasLimit ()Z c
	lootingMultiplier (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder dlo$a
	count a
	limit b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
	setLimit (I)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer dlo$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetAttribute
	modifiers a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	modifier (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/Attribute;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setAttributes ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder dlp$a
	modifiers a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; a
	withModifier (Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier dlp$b
	amount d
	attribute b
	id e
	name a
	operation c
	slots f
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier; a
	operationFromString (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; a
	operationToString (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/lang/String; a
	serialize (Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder dlp$c
	amount d
	attribute b
	id e
	name a
	operation c
	slots f
	build ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier; a
	forSlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
	withUuid (Ljava/util/UUID;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer dlp$d
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder dlq$a
	append b
	patterns a
	addPattern (Lnet/minecraft/world/level/block/entity/BannerPattern;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Serializer dlq$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerContents net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetContents
	entries a
	type b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setContents (Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder dlr$a
	entries a
	type b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
	withEntry (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer dlr$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerLootTable net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetTable
	name a
	seed b
	type c
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
	withLootTable (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	withLootTable (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/resources/ResourceLocation;J)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer dls$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerLootTable; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetContainerLootTable;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder dlt$a
	add b
	enchantments a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder; a
	withEnchantment (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Serializer dlt$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetItemCountFunction net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetCount
	add b
	value a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setCount (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setCount (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Z)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer dlu$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetItemCountFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetItemCountFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetDamage
	LOGGER a
	add c
	damage b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setDamage (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setDamage (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Z)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer dlv$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetItemDamageFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetItemDamageFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetLoreFunction net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetLore
	lore b
	replace a
	resolutionContext c
	getLoreTag (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/nbt/ListTag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setLore ()Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder dlw$a
	lore c
	replace a
	resolutionContext b
	addLine (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	setReplace (Z)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	setResolutionContext (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer dlw$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetNameFunction net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetName
	LOGGER a
	name b
	resolutionContext c
	createResolver (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Ljava/util/function/UnaryOperator; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setName (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer dlx$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetNameFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetNameFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetNbtFunction net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetTag
	tag a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer dly$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetNbtFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetNbtFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetPotionFunction$Serializer dlz$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetPotionFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetPotionFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetStewEffect
	effectDurationMap a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	stewEffect ()Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder dma$a
	effectDurationMap a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; a
	withEffect (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer dma$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SmeltItemFunction net/minecraft/world/level/storage/loot/functions/LootItemFunctionSmelt
	LOGGER a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	smelted ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer dmb$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SmeltItemFunction; a
net/minecraft/world/level/storage/loot/parameters/LootContextParam net/minecraft/world/level/storage/loot/parameters/LootContextParameter
	name a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSet net/minecraft/world/level/storage/loot/parameters/LootContextParameterSet
	all b
	required a
	builder ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; c
	getAllowed ()Ljava/util/Set; b
	getRequired ()Ljava/util/Set; a
	isAllowed (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
	validateUser (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/world/level/storage/loot/LootContextUser;)V a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder net/minecraft/world/level/storage/loot/parameters/LootContextParameterSet$Builder
	optional b
	required a
	build ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	optional (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; b
	required (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSets net/minecraft/world/level/storage/loot/parameters/LootContextParameterSets
	ADVANCEMENT_ENTITY j
	ADVANCEMENT_REWARD i
	ALL_PARAMS k
	BLOCK l
	CHEST b
	COMMAND c
	EMPTY a
	ENTITY f
	FISHING e
	GIFT g
	PIGLIN_BARTER h
	REGISTRY m
	SELECTOR d
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	getKey (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/resources/ResourceLocation; a
	register (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
net/minecraft/world/level/storage/loot/parameters/LootContextParams net/minecraft/world/level/storage/loot/parameters/LootContextParameters
	BLOCK_ENTITY h
	BLOCK_STATE g
	DAMAGE_SOURCE c
	DIRECT_KILLER_ENTITY e
	EXPLOSION_RADIUS j
	KILLER_ENTITY d
	LAST_DAMAGE_PLAYER b
	ORIGIN f
	THIS_ENTITY a
	TOOL i
	create (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam; a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition net/minecraft/world/level/storage/loot/predicates/LootItemConditionAlternative
	composedPredicate b
	terms a
	alternative ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder dmj$a
	terms a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Serializer dmj$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition net/minecraft/world/level/storage/loot/predicates/LootItemConditionTableBonus
	enchantment a
	values b
	bonusLevelFlatChance (Lnet/minecraft/world/item/enchantment/Enchantment;[F)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer dmk$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionReference net/minecraft/world/level/storage/loot/predicates/LootItemConditionReference
	LOGGER a
	name b
	conditionReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionReference$Serializer dml$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionReference; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ConditionReference;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder net/minecraft/world/level/storage/loot/predicates/LootItemConditionUser
	unwrap ()Ljava/lang/Object; c
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition net/minecraft/world/level/storage/loot/predicates/LootItemConditionDamageSourceProperties
	predicate a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasDamageSource (Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer dmn$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/DamageSourceCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/DamageSourceCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition net/minecraft/world/level/storage/loot/predicates/LootItemConditionEntityScore
	entityTarget b
	scores a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasScore (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/scores/Scoreboard;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/IntRange;)Z a
	hasScores (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder dmo$a
	entityTarget b
	scores a
	withScore (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer dmo$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ExplosionCondition net/minecraft/world/level/storage/loot/predicates/LootItemConditionSurvivesExplosion
	INSTANCE a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	survivesExplosion ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer dmp$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ExplosionCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ExplosionCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition net/minecraft/world/level/storage/loot/predicates/LootItemConditionInverted
	term a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	invert (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer dmq$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LocationCheck net/minecraft/world/level/storage/loot/predicates/LootItemConditionLocationCheck
	offset b
	predicate a
	checkLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	checkLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer dmr$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LocationCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LocationCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition net/minecraft/world/level/storage/loot/predicates/LootItemConditionBlockStateProperty
	block a
	properties b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasBlockStateProperties (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder dms$a
	block a
	properties b
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer dms$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder dmt$a
net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition net/minecraft/world/level/storage/loot/predicates/LootItemConditionEntityProperty
	entityTarget b
	predicate a
	entityPresent (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasProperties (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	hasProperties (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer dmw$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition net/minecraft/world/level/storage/loot/predicates/LootItemConditionKilledByPlayer
	INSTANCE a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	killedByPlayer ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer dmx$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition net/minecraft/world/level/storage/loot/predicates/LootItemConditionRandomChance
	probability a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	randomChance (F)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer dmy$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition net/minecraft/world/level/storage/loot/predicates/LootItemConditionRandomChanceWithLooting
	lootingMultiplier b
	percent a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	randomChanceAndLootingBoost (FF)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer dmz$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/MatchTool net/minecraft/world/level/storage/loot/predicates/LootItemConditionMatchTool
	predicate a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	toolMatches (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer dna$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/MatchTool; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/MatchTool;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/TimeCheck net/minecraft/world/level/storage/loot/predicates/LootItemConditionTimeCheck
	period a
	value b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	time (Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder; a
net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder dnb$a
	period a
	value b
	build ()Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck; a
	setPeriod (J)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder; a
net/minecraft/world/level/storage/loot/predicates/TimeCheck$Serializer dnb$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition$Serializer dnc$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ValueCheckCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ValueCheckCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/WeatherCheck net/minecraft/world/level/storage/loot/predicates/LootItemConditionWeatherCheck
	isRaining a
	isThundering b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	weather ()Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; c
net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder dnd$a
	isRaining a
	isThundering b
	build ()Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck; a
	setRaining (Ljava/lang/Boolean;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; a
	setThundering (Ljava/lang/Boolean;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; b
net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer dnd$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter dnf$a
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getId ()Ljava/lang/String; a
	getReferencedContextParams ()Ljava/util/Set; b
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$InlineSerializer dnf$b
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; b
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serialize (Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Serializer dnf$c
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider$Serializer dnj$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator$Serializer dnl$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/ConstantValue$InlineSerializer dnm$a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; b
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serialize (Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/providers/number/ConstantValue$Serializer dnm$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue$Serializer dnq$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/UniformGenerator$Serializer dnr$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$InlineSerializer dnt$a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider; b
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serialize (Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$Serializer dnt$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider$Serializer dnu$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/timers/FunctionCallback net/minecraft/world/level/timers/CustomFunctionCallback
	functionId a
	handle (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/FunctionCallback$Serializer doa$a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/FunctionCallback; a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/FunctionCallback;)V a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/FunctionTagCallback net/minecraft/world/level/timers/CustomFunctionCallbackTag
	tagId a
	handle (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/FunctionTagCallback$Serializer dob$a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/FunctionTagCallback; a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/FunctionTagCallback;)V a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/TimerCallback net/minecraft/world/level/timers/CustomFunctionCallbackTimer
net/minecraft/world/level/timers/TimerCallback$Serializer doc$a
	cls b
	id a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	getCls ()Ljava/lang/Class; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/TimerCallbacks net/minecraft/world/level/timers/CustomFunctionCallbackTimers
	LOGGER b
	SERVER_CALLBACKS a
	classToSerializer d
	idToSerializer c
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; a
	getSerializer (Ljava/lang/Class;)Lnet/minecraft/world/level/timers/TimerCallback$Serializer; a
	register (Lnet/minecraft/world/level/timers/TimerCallback$Serializer;)Lnet/minecraft/world/level/timers/TimerCallbacks; a
	serialize (Lnet/minecraft/world/level/timers/TimerCallback;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/timers/TimerQueue net/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue
	CALLBACK_DATA_TAG b
	LOGGER a
	TIMER_NAME_TAG c
	TIMER_TRIGGER_TIME_TAG d
	callbacksRegistry e
	events h
	queue f
	sequentialId g
	createComparator ()Ljava/util/Comparator; c
	getEventsIds ()Ljava/util/Set; a
	loadEvent (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Ljava/lang/String;)I a
	schedule (Ljava/lang/String;JLnet/minecraft/world/level/timers/TimerCallback;)V a
	store ()Lnet/minecraft/nbt/ListTag; b
	storeEvent (Lnet/minecraft/world/level/timers/TimerQueue$Event;)Lnet/minecraft/nbt/CompoundTag; a
	tick (Ljava/lang/Object;J)V a
net/minecraft/world/level/timers/TimerQueue$Event doe$a
	callback d
	id c
	sequentialId b
	triggerTime a
net/minecraft/world/phys/AABB net/minecraft/world/phys/AxisAlignedBB
	EPSILON g
	maxX d
	maxY e
	maxZ f
	minX a
	minY b
	minZ c
	clip (Ljava/lang/Iterable;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	clip (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; b
	clipPoint ([DLnet/minecraft/core/Direction;DDDDDDDDLnet/minecraft/core/Direction;DDD)Lnet/minecraft/core/Direction; a
	contains (DDD)Z e
	contains (Lnet/minecraft/world/phys/Vec3;)Z d
	contract (DDD)Lnet/minecraft/world/phys/AABB; a
	deflate (D)Lnet/minecraft/world/phys/AABB; h
	deflate (DDD)Lnet/minecraft/world/phys/AABB; f
	expandTowards (DDD)Lnet/minecraft/world/phys/AABB; b
	expandTowards (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; b
	getCenter ()Lnet/minecraft/world/phys/Vec3; f
	getDirection (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/Vec3;[DLnet/minecraft/core/Direction;DDD)Lnet/minecraft/core/Direction; a
	getSize ()D a
	getXsize ()D b
	getYsize ()D c
	getZsize ()D d
	hasNaN ()Z e
	inflate (D)Lnet/minecraft/world/phys/AABB; g
	inflate (DDD)Lnet/minecraft/world/phys/AABB; c
	intersect (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; a
	intersects (DDDDDD)Z a
	intersects (Lnet/minecraft/world/phys/AABB;)Z c
	intersects (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	max (Lnet/minecraft/core/Direction$Axis;)D b
	min (Lnet/minecraft/core/Direction$Axis;)D a
	minmax (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; b
	move (DDD)Lnet/minecraft/world/phys/AABB; d
	move (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	move (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; c
	of (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/phys/AABB; a
	ofSize (Lnet/minecraft/world/phys/Vec3;DDD)Lnet/minecraft/world/phys/AABB; a
	setMaxX (D)Lnet/minecraft/world/phys/AABB; d
	setMaxY (D)Lnet/minecraft/world/phys/AABB; e
	setMaxZ (D)Lnet/minecraft/world/phys/AABB; f
	setMinX (D)Lnet/minecraft/world/phys/AABB; a
	setMinY (D)Lnet/minecraft/world/phys/AABB; b
	setMinZ (D)Lnet/minecraft/world/phys/AABB; c
	unitCubeFromLowerCorner (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/phys/BlockHitResult net/minecraft/world/phys/MovingObjectPositionBlock
	blockPos c
	direction b
	inside e
	miss d
	getBlockPos ()Lnet/minecraft/core/BlockPos; a
	getDirection ()Lnet/minecraft/core/Direction; b
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
	isInside ()Z d
	miss (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	withDirection (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/BlockHitResult; a
	withPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
net/minecraft/world/phys/EntityHitResult net/minecraft/world/phys/MovingObjectPositionEntity
	entity b
	getEntity ()Lnet/minecraft/world/entity/Entity; a
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
net/minecraft/world/phys/HitResult net/minecraft/world/phys/MovingObjectPosition
	location a
	distanceTo (Lnet/minecraft/world/entity/Entity;)D a
	getLocation ()Lnet/minecraft/world/phys/Vec3; e
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
net/minecraft/world/phys/HitResult$Type net/minecraft/world/phys/MovingObjectPosition$EnumMovingObjectType
	$VALUES d
	BLOCK b
	ENTITY c
	MISS a
	$values ()[Lnet/minecraft/world/phys/HitResult$Type; a
net/minecraft/world/phys/Vec2 net/minecraft/world/phys/Vec2F
	MAX g
	MIN h
	NEG_UNIT_X d
	NEG_UNIT_Y f
	ONE b
	UNIT_X c
	UNIT_Y e
	ZERO a
	x i
	y j
	add (F)Lnet/minecraft/world/phys/Vec2; b
	add (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/world/phys/Vec2; b
	distanceToSqr (Lnet/minecraft/world/phys/Vec2;)F d
	dot (Lnet/minecraft/world/phys/Vec2;)F a
	equals (Lnet/minecraft/world/phys/Vec2;)Z c
	length ()F b
	lengthSquared ()F c
	negated ()Lnet/minecraft/world/phys/Vec2; d
	normalized ()Lnet/minecraft/world/phys/Vec2; a
	scale (F)Lnet/minecraft/world/phys/Vec2; a
net/minecraft/world/phys/Vec3 net/minecraft/world/phys/Vec3D
	ZERO a
	x b
	y c
	z d
	add (DDD)Lnet/minecraft/world/phys/Vec3; b
	add (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; e
	align (Ljava/util/EnumSet;)Lnet/minecraft/world/phys/Vec3; a
	atBottomCenterOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; c
	atCenterOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; a
	atLowerCornerOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; b
	closerThan (Lnet/minecraft/core/Position;D)Z a
	cross (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; c
	directionFromRotation (FF)Lnet/minecraft/world/phys/Vec3; a
	directionFromRotation (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/world/phys/Vec3; a
	distanceTo (Lnet/minecraft/world/phys/Vec3;)D f
	distanceToSqr (DDD)D c
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D g
	dot (Lnet/minecraft/world/phys/Vec3;)D b
	fromRGB24 (I)Lnet/minecraft/world/phys/Vec3; a
	get (Lnet/minecraft/core/Direction$Axis;)D a
	horizontalDistance ()D h
	horizontalDistanceSqr ()D i
	length ()D f
	lengthSqr ()D g
	lerp (Lnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	multiply (DDD)Lnet/minecraft/world/phys/Vec3; d
	multiply (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; h
	normalize ()Lnet/minecraft/world/phys/Vec3; d
	reverse ()Lnet/minecraft/world/phys/Vec3; e
	scale (D)Lnet/minecraft/world/phys/Vec3; a
	subtract (DDD)Lnet/minecraft/world/phys/Vec3; a
	subtract (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; d
	upFromBottomCenterOf (Lnet/minecraft/core/Vec3i;D)Lnet/minecraft/world/phys/Vec3; a
	vectorTo (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	with (Lnet/minecraft/core/Direction$Axis;D)Lnet/minecraft/world/phys/Vec3; a
	x ()D a
	xRot (F)Lnet/minecraft/world/phys/Vec3; a
	y ()D b
	yRot (F)Lnet/minecraft/world/phys/Vec3; b
	z ()D c
	zRot (F)Lnet/minecraft/world/phys/Vec3; c
net/minecraft/world/phys/shapes/ArrayVoxelShape net/minecraft/world/phys/shapes/VoxelShapeArray
	xs b
	ys c
	zs d
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape net/minecraft/world/phys/shapes/VoxelShapeBitSet
	storage d
	xMax h
	xMin e
	yMax i
	yMin f
	zMax j
	zMin g
	clearZStrip (IIII)V b
	fill (III)V c
	fillUpdateBounds (IIIZ)V a
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V a
	getIndex (III)I a
	isEmpty ()Z a
	isFull (III)Z b
	isXZRectangleFull (IIIII)Z a
	isZStripFull (IIII)Z a
	join (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape; a
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	withFilledBounds (IIIIIIIII)Lnet/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape; a
net/minecraft/world/phys/shapes/BooleanOp net/minecraft/world/phys/shapes/OperatorBoolean
	AND i
	CAUSED_BY n
	CAUSES l
	FALSE a
	FIRST m
	NOT_AND h
	NOT_FIRST d
	NOT_OR b
	NOT_SAME g
	NOT_SECOND f
	ONLY_FIRST e
	ONLY_SECOND c
	OR o
	SAME j
	SECOND k
	TRUE p
net/minecraft/world/phys/shapes/CollisionContext net/minecraft/world/phys/shapes/VoxelShapeCollision
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FlowingFluid;)Z a
	empty ()Lnet/minecraft/world/phys/shapes/CollisionContext; a
	isAbove (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPos;Z)Z a
	isDescending ()Z b
	isHoldingItem (Lnet/minecraft/world/item/Item;)Z a
	of (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/shapes/CollisionContext; a
net/minecraft/world/phys/shapes/CubePointRange net/minecraft/world/phys/shapes/VoxelShapeCubePoint
	parts a
net/minecraft/world/phys/shapes/CubeVoxelShape net/minecraft/world/phys/shapes/VoxelShapeCube
	findIndex (Lnet/minecraft/core/Direction$Axis;D)I a
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/DiscreteCubeMerger net/minecraft/world/phys/shapes/VoxelShapeCubeMerger
	firstDiv b
	result a
	secondDiv c
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/DiscreteVoxelShape net/minecraft/world/phys/shapes/VoxelShapeDiscrete
	AXIS_VALUES d
	xSize a
	ySize b
	zSize c
	fill (III)V c
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	firstFull (Lnet/minecraft/core/Direction$Axis;II)I a
	forAllAxisEdges (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Lnet/minecraft/core/AxisCycle;Z)V a
	forAllAxisFaces (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer;Lnet/minecraft/core/AxisCycle;)V a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V b
	forAllEdges (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V a
	forAllFaces (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer;)V a
	getSize (Lnet/minecraft/core/Direction$Axis;)I c
	getXSize ()I b
	getYSize ()I c
	getZSize ()I d
	isEmpty ()Z a
	isFull (III)Z b
	isFull (Lnet/minecraft/core/AxisCycle;III)Z b
	isFullWide (III)Z d
	isFullWide (Lnet/minecraft/core/AxisCycle;III)Z a
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	lastFull (Lnet/minecraft/core/Direction$Axis;II)I b
net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer dov$a
net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer dov$b
net/minecraft/world/phys/shapes/EntityCollisionContext net/minecraft/world/phys/shapes/VoxelShapeCollisionEntity
	EMPTY a
	canStandOnFluid e
	descending b
	entity f
	entityBottom c
	heldItem d
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FlowingFluid;)Z a
	getEntity ()Lnet/minecraft/world/entity/Entity; c
	isAbove (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPos;Z)Z a
	isDescending ()Z b
	isHoldingItem (Lnet/minecraft/world/item/Item;)Z a
net/minecraft/world/phys/shapes/IdenticalMerger net/minecraft/world/phys/shapes/VoxelShapeMergerIdentical
	coords a
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IndexMerger net/minecraft/world/phys/shapes/VoxelShapeMerger
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer doy$a
net/minecraft/world/phys/shapes/IndirectMerger net/minecraft/world/phys/shapes/VoxelShapeMergerList
	EMPTY a
	firstIndices c
	result b
	resultLength e
	secondIndices d
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/NonOverlappingMerger net/minecraft/world/phys/shapes/VoxelShapeMergerDisjoint
	lower a
	swap c
	upper b
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	forNonSwappedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z b
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/OffsetDoubleList net/minecraft/world/phys/shapes/DoubleListOffset
	delegate a
	offset b
net/minecraft/world/phys/shapes/Shapes net/minecraft/world/phys/shapes/VoxelShapes
	BIG_EPSILON b
	BLOCK d
	EMPTY e
	EPSILON a
	INFINITY c
	block ()Lnet/minecraft/world/phys/shapes/VoxelShape; b
	blockOccudes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z a
	box (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;Ljava/lang/Iterable;D)D a
	create (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	create (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	createIndexMerger (ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lnet/minecraft/world/phys/shapes/IndexMerger; a
	empty ()Lnet/minecraft/world/phys/shapes/VoxelShape; a
	faceShapeOccludes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z b
	findBits (DD)I a
	getFaceShape (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	join (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	joinIsNotEmpty (Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Z a
	joinIsNotEmpty (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Z c
	joinUnoptimized (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	lcm (II)J a
	mergedFaceOccludes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z b
	or (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	or (Lnet/minecraft/world/phys/shapes/VoxelShape;[Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer dpc$a
net/minecraft/world/phys/shapes/SliceShape net/minecraft/world/phys/shapes/VoxelShapeSlice
	SLICE_COORDS d
	axis c
	delegate b
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
	makeSlice (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; a
net/minecraft/world/phys/shapes/SubShape net/minecraft/world/phys/shapes/VoxelShapeDiscreteSlice
	endX h
	endY i
	endZ j
	parent d
	startX e
	startY f
	startZ g
	clampToShape (Lnet/minecraft/core/Direction$Axis;I)I a
	fill (III)V c
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	isFull (III)Z b
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
net/minecraft/world/scores/Objective net/minecraft/world/scores/ScoreboardObjective
	criteria c
	displayName d
	formattedDisplayName e
	name b
	renderType f
	scoreboard a
	createFormattedDisplayName ()Lnet/minecraft/network/chat/Component; g
	getCriteria ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getFormattedDisplayName ()Lnet/minecraft/network/chat/Component; e
	getName ()Ljava/lang/String; b
	getRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; f
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; a
	setDisplayName (Lnet/minecraft/network/chat/Component;)V a
	setRenderType (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)V a
net/minecraft/world/scores/PlayerTeam net/minecraft/world/scores/ScoreboardTeam
	BIT_FRIENDLY_FIRE a
	BIT_SEE_INVISIBLES b
	allowFriendlyFire i
	collisionRule n
	color m
	deathMessageVisibility l
	displayName f
	displayNameStyle o
	name d
	nameTagVisibility k
	playerPrefix g
	playerSuffix h
	players e
	scoreboard c
	seeFriendlyInvisibles j
	canSeeFriendlyInvisibles ()Z i
	formatNameForTeam (Lnet/minecraft/world/scores/Team;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	getCollisionRule ()Lnet/minecraft/world/scores/Team$CollisionRule; l
	getColor ()Lnet/minecraft/ChatFormatting; n
	getDeathMessageVisibility ()Lnet/minecraft/world/scores/Team$Visibility; k
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getFormattedDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
	getFormattedName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; d
	getName ()Ljava/lang/String; b
	getNameTagVisibility ()Lnet/minecraft/world/scores/Team$Visibility; j
	getPlayerPrefix ()Lnet/minecraft/network/chat/Component; e
	getPlayerSuffix ()Lnet/minecraft/network/chat/Component; f
	getPlayers ()Ljava/util/Collection; g
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; a
	isAllowFriendlyFire ()Z h
	packOptions ()I m
	setAllowFriendlyFire (Z)V a
	setCollisionRule (Lnet/minecraft/world/scores/Team$CollisionRule;)V a
	setColor (Lnet/minecraft/ChatFormatting;)V a
	setDeathMessageVisibility (Lnet/minecraft/world/scores/Team$Visibility;)V b
	setDisplayName (Lnet/minecraft/network/chat/Component;)V a
	setNameTagVisibility (Lnet/minecraft/world/scores/Team$Visibility;)V a
	setPlayerPrefix (Lnet/minecraft/network/chat/Component;)V b
	setPlayerSuffix (Lnet/minecraft/network/chat/Component;)V c
	setSeeFriendlyInvisibles (Z)V b
	unpackOptions (I)V a
net/minecraft/world/scores/Score net/minecraft/world/scores/ScoreboardScore
	SCORE_COMPARATOR a
	count e
	forceUpdate g
	locked f
	objective c
	owner d
	scoreboard b
	add (I)V a
	getObjective ()Lnet/minecraft/world/scores/Objective; d
	getOwner ()Ljava/lang/String; e
	getScore ()I b
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; f
	increment ()V a
	isLocked ()Z g
	reset ()V c
	setLocked (Z)V a
	setScore (I)V b
net/minecraft/world/scores/ScoreboardSaveData net/minecraft/world/scores/PersistentScoreboard
	FILE_ID a
	scoreboard b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/scores/ScoreboardSaveData; b
	loadDisplaySlots (Lnet/minecraft/nbt/CompoundTag;)V c
	loadObjectives (Lnet/minecraft/nbt/ListTag;)V b
	loadTeamPlayers (Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/nbt/ListTag;)V a
	loadTeams (Lnet/minecraft/nbt/ListTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	saveDisplaySlots (Lnet/minecraft/nbt/CompoundTag;)V d
	saveObjectives ()Lnet/minecraft/nbt/ListTag; d
	saveTeams ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/world/scores/Team net/minecraft/world/scores/ScoreboardTeamBase
	canSeeFriendlyInvisibles ()Z i
	getCollisionRule ()Lnet/minecraft/world/scores/Team$CollisionRule; l
	getColor ()Lnet/minecraft/ChatFormatting; n
	getDeathMessageVisibility ()Lnet/minecraft/world/scores/Team$Visibility; k
	getFormattedName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; d
	getName ()Ljava/lang/String; b
	getNameTagVisibility ()Lnet/minecraft/world/scores/Team$Visibility; j
	getPlayers ()Ljava/util/Collection; g
	isAlliedTo (Lnet/minecraft/world/scores/Team;)Z a
	isAllowFriendlyFire ()Z h
net/minecraft/world/scores/Team$CollisionRule net/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush
	$VALUES h
	ALWAYS a
	BY_NAME g
	NEVER b
	PUSH_OTHER_TEAMS c
	PUSH_OWN_TEAM d
	id f
	name e
	$values ()[Lnet/minecraft/world/scores/Team$CollisionRule; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/scores/Team$CollisionRule; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/scores/Team$Visibility net/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility
	$VALUES h
	ALWAYS a
	BY_NAME g
	HIDE_FOR_OTHER_TEAMS c
	HIDE_FOR_OWN_TEAM d
	NEVER b
	id f
	name e
	$values ()[Lnet/minecraft/world/scores/Team$Visibility; c
	byName (Ljava/lang/String;)Lnet/minecraft/world/scores/Team$Visibility; a
	getAllNames ()[Ljava/lang/String; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
net/minecraft/world/scores/criteria/ObjectiveCriteria net/minecraft/world/scores/criteria/IScoreboardCriteria
	AIR h
	ARMOR i
	CRITERIA_CACHE o
	CUSTOM_CRITERIA n
	DEATH_COUNT c
	DUMMY a
	EXPERIENCE j
	FOOD g
	HEALTH f
	KILLED_BY_TEAM m
	KILL_COUNT_ALL e
	KILL_COUNT_PLAYERS d
	LEVEL k
	TEAM_KILL l
	TRIGGER b
	name p
	readOnly q
	renderType r
	byName (Ljava/lang/String;)Ljava/util/Optional; a
	getCustomCriteriaNames ()Ljava/util/Set; c
	getDefaultRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; f
	getName ()Ljava/lang/String; d
	getStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	isReadOnly ()Z e
	registerCustom (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; b
	registerCustom (Ljava/lang/String;ZLnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType net/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay
	$VALUES e
	BY_ID d
	HEARTS b
	INTEGER a
	id c
	$values ()[Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; b
	byId (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; a
	getId ()Ljava/lang/String; a
net/minecraft/world/ticks/BlackholeTickAccess net/minecraft/world/ticks/TickListEmpty
	CONTAINER_BLACKHOLE a
	LEVEL_BLACKHOLE b
	emptyContainer ()Lnet/minecraft/world/ticks/TickContainerAccess; a
	emptyLevelList ()Lnet/minecraft/world/ticks/LevelTickAccess; b
net/minecraft/world/ticks/LevelTicks net/minecraft/world/ticks/TickListServer
	CONTAINER_DRAIN_ORDER a
	allContainers d
	alreadyRunThisTick h
	chunkScheduleUpdater j
	containersToTick f
	nextTickForContainer e
	profiler c
	tickCheck b
	toRunThisTick g
	toRunThisTickSet i
	addContainer (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/ticks/LevelChunkTicks;)V a
	calculateTickSetIfNeeded ()V d
	canScheduleMoreTicks (I)Z a
	cleanupAfterTick ()V c
	clearArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	collectTicks (JILnet/minecraft/util/profiling/ProfilerFiller;)V a
	copyArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/Vec3i;)V a
	count ()I a
	drainContainers (JI)V a
	drainFromCurrentContainer (Ljava/util/Queue;Lnet/minecraft/world/ticks/LevelChunkTicks;JI)V a
	forContainersInArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer;)V a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	removeContainer (Lnet/minecraft/world/level/ChunkPos;)V a
	rescheduleLeftoverContainers ()V b
	runCollectedTicks (Ljava/util/function/BiConsumer;)V a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	scheduleForThisTick (Lnet/minecraft/world/ticks/ScheduledTick;)V c
	sortContainersToTick (J)V a
	tick (JILjava/util/function/BiConsumer;)V a
	updateContainerScheduling (Lnet/minecraft/world/ticks/ScheduledTick;)V b
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer dpt$a
net/minecraft/world/ticks/ProtoChunkTicks net/minecraft/world/ticks/ProtoChunkTickList
	ticks a
	ticksPerPosition b
	count ()I a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	load (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/ticks/ProtoChunkTicks; a
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/Tag; b
	schedule (Lnet/minecraft/world/ticks/SavedTick;)V a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	scheduledTicks ()Ljava/util/List; b
net/minecraft/world/ticks/SavedTick net/minecraft/world/ticks/TickListChunk
	TAG_DELAY j
	TAG_ID f
	TAG_PRIORITY k
	TAG_X g
	TAG_Y h
	TAG_Z i
	UNIQUE_TICK_HASH a
	delay d
	pos c
	priority e
	type b
	delay ()I c
	loadTickList (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkPos;Ljava/util/function/Consumer;)V a
	pos ()Lnet/minecraft/core/BlockPos; b
	priority ()Lnet/minecraft/world/ticks/TickPriority; d
	probe (Ljava/lang/Object;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/ticks/SavedTick; a
	save (Ljava/util/function/Function;)Lnet/minecraft/nbt/CompoundTag; a
	saveTick (Ljava/lang/String;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/ticks/TickPriority;)Lnet/minecraft/nbt/CompoundTag; a
	saveTick (Lnet/minecraft/world/ticks/ScheduledTick;Ljava/util/function/Function;J)Lnet/minecraft/nbt/CompoundTag; a
	type ()Ljava/lang/Object; a
	unpack (JJ)Lnet/minecraft/world/ticks/ScheduledTick; a
net/minecraft/world/ticks/ScheduledTick net/minecraft/world/ticks/NextTickListEntry
	DRAIN_ORDER a
	INTRA_TICK_DRAIN_ORDER b
	UNIQUE_TICK_HASH c
	pos e
	priority g
	subTickOrder h
	triggerTick f
	type d
	pos ()Lnet/minecraft/core/BlockPos; b
	priority ()Lnet/minecraft/world/ticks/TickPriority; d
	probe (Ljava/lang/Object;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/ticks/ScheduledTick; a
	subTickOrder ()J e
	triggerTick ()J c
	type ()Ljava/lang/Object; a
net/minecraft/world/ticks/TickAccess net/minecraft/world/ticks/TickList
	count ()I a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
net/minecraft/world/ticks/TickPriority net/minecraft/world/ticks/TickListPriority
	$VALUES i
	EXTREMELY_HIGH a
	EXTREMELY_LOW g
	HIGH c
	LOW e
	NORMAL d
	VERY_HIGH b
	VERY_LOW f
	value h
	$values ()[Lnet/minecraft/world/ticks/TickPriority; b
	byValue (I)Lnet/minecraft/world/ticks/TickPriority; a
	getValue ()I a
net/minecraft/world/ticks/WorldGenTickAccess net/minecraft/world/ticks/TickListWorldGen
	containerGetter a
	count ()I a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
com/mojang/math/Matrix3f com/mojang/math/Matrix3f
	CS l
	G k
	ORDER j
	SQ2 n
	SS m
	m00 a
	m01 b
	m02 c
	m10 d
	m11 e
	m12 f
	m20 g
	m21 h
	m22 i
	add (Lcom/mojang/math/Matrix3f;)V c
	adjugateAndDet ()F d
	approxGivensQuat (FFF)Lcom/mojang/datafixers/util/Pair; b
	bufferIndex (II)I a
	copy ()Lcom/mojang/math/Matrix3f; h
	createScaleMatrix (FFF)Lcom/mojang/math/Matrix3f; a
	determinant ()F e
	invert ()Z f
	load (Lcom/mojang/math/Matrix3f;)V a
	load (Ljava/nio/FloatBuffer;)V a
	load (Ljava/nio/FloatBuffer;Z)V a
	loadTransposed (Ljava/nio/FloatBuffer;)V b
	mul (F)V a
	mul (Lcom/mojang/math/Matrix3f;)V b
	mul (Lcom/mojang/math/Quaternion;)V a
	qrGivensQuat (FF)Lcom/mojang/datafixers/util/Pair; a
	set (IIF)V a
	setIdentity ()V c
	sortSingularValues (Lcom/mojang/math/Matrix3f;Lcom/mojang/math/Quaternion;)V a
	stepJacobi (Lcom/mojang/math/Matrix3f;)Lcom/mojang/math/Quaternion; e
	store (Ljava/nio/FloatBuffer;)V c
	store (Ljava/nio/FloatBuffer;Z)V b
	storeTransposed (Ljava/nio/FloatBuffer;)V d
	sub (Lcom/mojang/math/Matrix3f;)V d
	svdDecompose ()Lorg/apache/commons/lang3/tuple/Triple; b
	trace ()F g
	transpose ()V a
com/mojang/math/Matrix4f com/mojang/math/Matrix4f
	ORDER q
	m00 a
	m01 b
	m02 c
	m03 d
	m10 e
	m11 f
	m12 g
	m13 h
	m20 i
	m21 j
	m22 k
	m23 l
	m30 m
	m31 n
	m32 o
	m33 p
	add (Lcom/mojang/math/Matrix4f;)V c
	adjugateAndDet ()F c
	bufferIndex (II)I a
	copy ()Lcom/mojang/math/Matrix4f; h
	createScaleMatrix (FFF)Lcom/mojang/math/Matrix4f; b
	createTranslateMatrix (FFF)Lcom/mojang/math/Matrix4f; c
	determinant ()F d
	invert ()Z f
	isInteger ()Z a
	isInteger (F)Z b
	load (Lcom/mojang/math/Matrix4f;)V a
	load (Ljava/nio/FloatBuffer;)V a
	load (Ljava/nio/FloatBuffer;Z)V a
	loadTransposed (Ljava/nio/FloatBuffer;)V b
	multiply (F)V a
	multiply (Lcom/mojang/math/Matrix4f;)V b
	multiply (Lcom/mojang/math/Quaternion;)V a
	multiplyWithTranslation (FFF)V a
	orthographic (FFFF)Lcom/mojang/math/Matrix4f; a
	orthographic (FFFFFF)Lcom/mojang/math/Matrix4f; a
	perspective (DFFF)Lcom/mojang/math/Matrix4f; a
	setIdentity ()V b
	store (Ljava/nio/FloatBuffer;)V c
	store (Ljava/nio/FloatBuffer;Z)V b
	storeTransposed (Ljava/nio/FloatBuffer;)V d
	subtract (Lcom/mojang/math/Matrix4f;)V d
	trace ()F g
	translate (Lcom/mojang/math/Vector3f;)V a
	transpose ()V e
com/mojang/math/Quaternion com/mojang/math/Quaternion
	ONE a
	i b
	j c
	k d
	r e
	conj ()V i
	copy ()Lcom/mojang/math/Quaternion; k
	cos (F)F b
	fromXYZ (FFF)Lcom/mojang/math/Quaternion; b
	fromXYZ (Lcom/mojang/math/Vector3f;)Lcom/mojang/math/Quaternion; b
	fromXYZDegrees (Lcom/mojang/math/Vector3f;)Lcom/mojang/math/Quaternion; a
	fromYXZ (FFF)Lcom/mojang/math/Quaternion; a
	i ()F e
	j ()F f
	k ()F g
	mul (F)V a
	mul (Lcom/mojang/math/Quaternion;)V a
	normalize ()V j
	r ()F h
	set (FFFF)V a
	sin (F)F c
	slerp (Lcom/mojang/math/Quaternion;F)V a
	toXYZ ()Lcom/mojang/math/Vector3f; a
	toXYZDegrees ()Lcom/mojang/math/Vector3f; b
	toYXZ ()Lcom/mojang/math/Vector3f; c
	toYXZDegrees ()Lcom/mojang/math/Vector3f; d
com/mojang/math/Vector4f com/mojang/math/Vector4f
	w d
	x a
	y b
	z c
	add (FFFF)V b
	dot (Lcom/mojang/math/Vector4f;)F a
	lerp (Lcom/mojang/math/Vector4f;F)V a
	mul (F)V a
	mul (Lcom/mojang/math/Vector3f;)V a
	normalize ()Z e
	perspectiveDivide ()V f
	set (FFFF)V a
	transform (Lcom/mojang/math/Matrix4f;)V a
	transform (Lcom/mojang/math/Quaternion;)V a
	w ()F d
	x ()F a
	y ()F b
	z ()F c
net/minecraft/BlockUtil$IntBounds net/minecraft/BlockUtil$IntBounds
	max b
	min a
net/minecraft/CrashReport net/minecraft/CrashReport
	LOGGER a
	details d
	exception c
	saveFile e
	systemReport h
	title b
	trackingStackTrace f
	uncategorizedStackTrace g
	addCategory (Ljava/lang/String;)Lnet/minecraft/CrashReportCategory; a
	addCategory (Ljava/lang/String;I)Lnet/minecraft/CrashReportCategory; a
	forThrowable (Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/CrashReport; a
	getDetails ()Ljava/lang/String; c
	getDetails (Ljava/lang/StringBuilder;)V a
	getErrorComment ()Ljava/lang/String; i
	getException ()Ljava/lang/Throwable; b
	getExceptionMessage ()Ljava/lang/String; d
	getFriendlyReport ()Ljava/lang/String; e
	getSaveFile ()Ljava/io/File; f
	getSystemReport ()Lnet/minecraft/SystemReport; g
	getTitle ()Ljava/lang/String; a
	preload ()V h
	saveToFile (Ljava/io/File;)Z a
net/minecraft/DefaultUncaughtExceptionHandler net/minecraft/DefaultUncaughtExceptionHandler
	logger a
net/minecraft/ReportedException net/minecraft/ReportedException
	report a
	getReport ()Lnet/minecraft/CrashReport; a
net/minecraft/SharedConstants net/minecraft/SharedConstants
	AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK aR
	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY aT
	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE aS
	CHECK_DATA_FIXER_SCHEMA aI
	CNC_PART_2_ITEMS_AND_BLOCKS l
	COMMAND_STACK_TRACES aC
	CURRENT_VERSION aV
	DATA_PACK_FORMAT j
	DATA_VERSION_TAG k
	DEBUG_ALLOW_LOW_SIM_DISTANCE s
	DEBUG_AQUIFERS ag
	DEBUG_BEES S
	DEBUG_BLOCK_BREAK U
	DEBUG_BRAIN R
	DEBUG_CARVERS ab
	DEBUG_CHUNKS G
	DEBUG_COLLISION z
	DEBUG_DISABLE_AQUIFERS am
	DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION av
	DEBUG_DISABLE_BLENDING au
	DEBUG_DISABLE_CARVERS ap
	DEBUG_DISABLE_FEATURES ar
	DEBUG_DISABLE_FLUID_GENERATION al
	DEBUG_DISABLE_LIQUID_SPREADING af
	DEBUG_DISABLE_NOISE_CAVES an
	DEBUG_DISABLE_NOODLE_CAVES at
	DEBUG_DISABLE_ORE_VEINS as
	DEBUG_DISABLE_STRUCTURES aq
	DEBUG_DISABLE_SURFACE ao
	DEBUG_DONT_SAVE_WORLD Y
	DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES J
	DEBUG_DUMP_TEXTURE_ATLAS I
	DEBUG_FEATURE_COUNT aG
	DEBUG_GAME_EVENT_LISTENERS H
	DEBUG_GOAL_SELECTOR P
	DEBUG_HEIGHTMAP y
	DEBUG_HOTKEYS t
	DEBUG_IGNORE_LOCAL_MOB_CAP ad
	DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING ah
	DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN X
	DEBUG_LARGE_DRIPSTONE Z
	DEBUG_LIGHT D
	DEBUG_MONITOR_TICK_TIMES W
	DEBUG_NAMED_RUNNABLES O
	DEBUG_NEIGHBORSUPDATE B
	DEBUG_ONLY_GENERATE_HALF_THE_WORLD ak
	DEBUG_OPEN_INCOMPATIBLE_WORLDS r
	DEBUG_ORE_VEINS ac
	DEBUG_PACKET_SERIALIZATION aa
	DEBUG_PATHFINDING w
	DEBUG_RAIDS T
	DEBUG_RENDER v
	DEBUG_RESOURCE_LOAD_TIMES V
	DEBUG_SAVE_STRUCTURES_AS_SNBT L
	DEBUG_SHAPES A
	DEBUG_SHOW_SERVER_DEBUG_VALUES aE
	DEBUG_SMALL_SPAWN ae
	DEBUG_SOLID_FACE F
	DEBUG_STORE_CHUNK_STACKTRACES aF
	DEBUG_STRUCTURES C
	DEBUG_STRUCTURE_EDIT_MODE K
	DEBUG_SUBTITLES ay
	DEBUG_SYNCHRONOUS_GL_LOGS M
	DEBUG_UI_NARRATION u
	DEBUG_VERBOSE_SERVER_EVENTS N
	DEBUG_VILLAGE_SECTIONS Q
	DEBUG_WATER x
	DEBUG_WORLDGENATTEMPT E
	DEBUG_WORLD_RECREATE aD
	DEFAULT_MINECRAFT_PORT aw
	FAKE_MS_JITTER aA
	FAKE_MS_LATENCY az
	FIX_SAND_DUPE p
	FIX_TNT_DUPE o
	ILLEGAL_FILE_CHARACTERS aN
	INGAME_DEBUG_OUTPUT ax
	IS_RUNNING_IN_IDE aJ
	MAXIMUM_TICK_TIME_NANOS aH
	MAX_CHAT_LENGTH aL
	MAX_COMMAND_LENGTH aM
	MULTITHREADED_RENDERING n
	NETTY_LEAK_DETECTION aB
	RELEASE_NETWORK_PROTOCOL_VERSION f
	RELEASE_TARGET e
	RESOURCE_PACK_FORMAT i
	SERIES c
	SNAPSHOT a
	SNAPSHOT_NETWORK_PROTOCOL_VERSION g
	SNAPSHOT_PROTOCOL_BIT aU
	SNBT_NAG_VERSION h
	TICKS_PER_GAME_DAY aQ
	TICKS_PER_MINUTE aP
	TICKS_PER_SECOND aO
	USE_DEBUG_FEATURES q
	USE_NEW_RENDERSYSTEM m
	VERSION_STRING d
	WORLD_RESOLUTION aK
	WORLD_VERSION b
	debugGenerateSquareTerrainWithoutNoise ai
	debugGenerateStripedTerrainWithoutNoise aj
	debugVoidTerrain (Lnet/minecraft/world/level/ChunkPos;)Z a
	filterText (Ljava/lang/String;)Ljava/lang/String; a
	getCurrentVersion ()Lnet/minecraft/WorldVersion; b
	getProtocolVersion ()I c
	isAllowedChatCharacter (C)Z a
	setVersion (Lnet/minecraft/WorldVersion;)V a
	tryDetectVersion ()V a
net/minecraft/SystemReport net/minecraft/SystemReport
	BYTES_PER_MEBIBYTE a
	JAVA_VERSION e
	JAVA_VM_VERSION f
	LOGGER c
	ONE_GIGA b
	OPERATING_SYSTEM d
	entries g
	appendToCrashReportString (Ljava/lang/StringBuilder;)V a
	ignoreErrors (Ljava/lang/String;Ljava/lang/Runnable;)V a
	putGraphics (Ljava/util/List;)V b
	putHardware (Loshi/SystemInfo;)V a
	putMemory (Loshi/hardware/GlobalMemory;)V a
	putPhysicalMemory (Ljava/util/List;)V a
	putProcessor (Loshi/hardware/CentralProcessor;)V a
	putVirtualMemory (Loshi/hardware/VirtualMemory;)V a
	setDetail (Ljava/lang/String;Ljava/lang/String;)V a
	setDetail (Ljava/lang/String;Ljava/util/function/Supplier;)V a
	toLineSeparatedString ()Ljava/lang/String; a
net/minecraft/advancements/Advancement net/minecraft/advancements/Advancement
	chatComponent h
	children g
	criteria e
	display b
	id d
	parent a
	requirements f
	rewards c
	addChild (Lnet/minecraft/advancements/Advancement;)V a
	deconstruct ()Lnet/minecraft/advancements/Advancement$Builder; a
	getChatComponent ()Lnet/minecraft/network/chat/Component; j
	getChildren ()Ljava/lang/Iterable; e
	getCriteria ()Ljava/util/Map; f
	getDisplay ()Lnet/minecraft/advancements/DisplayInfo; c
	getId ()Lnet/minecraft/resources/ResourceLocation; h
	getMaxCriteraRequired ()I g
	getParent ()Lnet/minecraft/advancements/Advancement; b
	getRequirements ()[[Ljava/lang/String; i
	getRewards ()Lnet/minecraft/advancements/AdvancementRewards; d
net/minecraft/advancements/AdvancementProgress net/minecraft/advancements/AdvancementProgress
	criteria a
	requirements b
	compareTo (Lnet/minecraft/advancements/AdvancementProgress;)I a
	countCompletedRequirements ()I h
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/AdvancementProgress; b
	getCompletedCriteria ()Ljava/lang/Iterable; f
	getCriterion (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; c
	getFirstProgressDate ()Ljava/util/Date; g
	getPercent ()F c
	getProgressText ()Ljava/lang/String; d
	getRemainingCriteria ()Ljava/lang/Iterable; e
	grantProgress (Ljava/lang/String;)Z a
	hasProgress ()Z b
	isDone ()Z a
	revokeProgress (Ljava/lang/String;)Z b
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	update (Ljava/util/Map;[[Ljava/lang/String;)V a
net/minecraft/advancements/AdvancementRewards net/minecraft/advancements/AdvancementRewards
	EMPTY a
	experience b
	function e
	loot c
	recipes d
	deserialize (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/AdvancementRewards; a
	getRecipes ()[Lnet/minecraft/resources/ResourceLocation; a
	grant (Lnet/minecraft/server/level/ServerPlayer;)V a
	serializeToJson ()Lcom/google/gson/JsonElement; b
net/minecraft/advancements/Criterion net/minecraft/advancements/Criterion
	trigger a
	criteriaFromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Ljava/util/Map; b
	criteriaFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/util/Map; c
	criterionFromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/Criterion; a
	criterionFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/Criterion; b
	getTrigger ()Lnet/minecraft/advancements/CriterionTriggerInstance; a
	serializeToJson ()Lcom/google/gson/JsonElement; b
	serializeToNetwork (Ljava/util/Map;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/CriterionProgress net/minecraft/advancements/CriterionProgress
	DATE_FORMAT a
	obtained b
	fromJson (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/CriterionProgress; b
	getObtained ()Ljava/util/Date; d
	grant ()V b
	isDone ()Z a
	revoke ()V c
	serializeToJson ()Lcom/google/gson/JsonElement; e
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/critereon/DistanceTrigger net/minecraft/advancements/critereon/DistanceTrigger
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/advancements/critereon/LighthingBoltPredicate net/minecraft/advancements/critereon/LighthingBoltPredicate
	ANY a
	BLOCKS_SET_ON_FIRE_KEY b
	ENTITY_STRUCK_KEY c
	blocksSetOnFire d
	entityStruck e
	blockSetOnFire (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/LighthingBoltPredicate; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/LighthingBoltPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/LightningStrikeTrigger net/minecraft/advancements/critereon/LightningStrikeTrigger
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/LightningBolt;Ljava/util/List;)V a
net/minecraft/advancements/critereon/StartRidingTrigger net/minecraft/advancements/critereon/StartRidingTrigger
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/UsingItemTrigger net/minecraft/advancements/critereon/UsingItemTrigger
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/client/ClientBrandRetriever net/minecraft/client/ClientBrandRetriever
	VANILLA_NAME a
net/minecraft/client/main/Main net/minecraft/client/main/Main
	LOGGER a
	emptyStringToEmptyOptional (Ljava/lang/String;)Ljava/util/Optional; a
	ofNullable (Ljava/lang/Integer;)Ljava/util/OptionalInt; a
	parseArgument (Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object; a
	stringHasValue (Ljava/lang/String;)Z b
net/minecraft/commands/arguments/selector/EntitySelector net/minecraft/commands/arguments/selector/EntitySelector
	ANY_TYPE b
	INFINITE a
	aabb i
	currentEntity k
	entityUUID m
	includesEntities d
	maxResults c
	order j
	playerName l
	position h
	predicate f
	range g
	type n
	usesSelector o
	worldLimited e
	addEntities (Ljava/util/List;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Ljava/util/function/Predicate;)V a
	checkPermissions (Lnet/minecraft/commands/CommandSourceStack;)V e
	findEntities (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; b
	findPlayers (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; d
	findSingleEntity (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/entity/Entity; a
	findSinglePlayer (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/server/level/ServerPlayer; c
	getMaxResults ()I a
	getPredicate (Lnet/minecraft/world/phys/Vec3;)Ljava/util/function/Predicate; a
	includesEntities ()Z b
	isSelfSelector ()Z c
	isWorldLimited ()Z d
	joinNames (Ljava/util/List;)Lnet/minecraft/network/chat/Component; a
	sortAndLimit (Lnet/minecraft/world/phys/Vec3;Ljava/util/List;)Ljava/util/List; a
	usesSelector ()Z e
net/minecraft/core/GlobalPos net/minecraft/core/GlobalPos
	CODEC a
	dimension b
	pos c
	dimension ()Lnet/minecraft/resources/ResourceKey; a
	of (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/GlobalPos; a
	pos ()Lnet/minecraft/core/BlockPos; b
net/minecraft/core/NonNullList net/minecraft/core/NonNullList
	defaultValue b
	list a
	create ()Lnet/minecraft/core/NonNullList; a
	createWithCapacity (I)Lnet/minecraft/core/NonNullList; a
	of (Ljava/lang/Object;[Ljava/lang/Object;)Lnet/minecraft/core/NonNullList; a
	withSize (ILjava/lang/Object;)Lnet/minecraft/core/NonNullList; a
net/minecraft/core/QuartPos net/minecraft/core/QuartPos
	BITS a
	MASK c
	SECTION_TO_QUARTS_BITS d
	SIZE b
	fromBlock (I)I a
	fromSection (I)I d
	quartLocal (I)I b
	toBlock (I)I c
	toSection (I)I e
net/minecraft/core/cauldron/CauldronInteraction net/minecraft/core/cauldron/CauldronInteraction
	BANNER i
	DYED_ITEM j
	EMPTY a
	FILL_LAVA f
	FILL_POWDER_SNOW g
	FILL_WATER e
	LAVA c
	POWDER_SNOW d
	SHULKER_BOX h
	WATER b
	addDefaultInteractions (Ljava/util/Map;)V a
	bootStrap ()V b
	emptyBucket (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/InteractionResult; a
	fillBucket (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/InteractionResult; a
	newInteractionMap ()Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap; a
net/minecraft/core/particles/DustColorTransitionOptions net/minecraft/core/particles/DustColorTransitionOptions
	CODEC c
	DESERIALIZER d
	SCULK_PARTICLE_COLOR a
	SCULK_TO_REDSTONE b
	toColor i
	getFromColor ()Lcom/mojang/math/Vector3f; c
	getToColor ()Lcom/mojang/math/Vector3f; d
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/DustParticleOptionsBase net/minecraft/core/particles/DustParticleOptionsBase
	MAX_SCALE f
	MIN_SCALE e
	color g
	scale h
	getColor ()Lcom/mojang/math/Vector3f; e
	getScale ()F f
	readVector3f (Lcom/mojang/brigadier/StringReader;)Lcom/mojang/math/Vector3f; a
	readVector3f (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/math/Vector3f; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/VibrationParticleOption net/minecraft/core/particles/VibrationParticleOption
	CODEC a
	DESERIALIZER b
	vibrationPath c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	getVibrationPath ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationPath; c
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/data/HashCache net/minecraft/data/HashCache
	LOGGER a
	cachePath c
	hits d
	keep g
	newCache f
	oldCache e
	path b
	getHash (Ljava/nio/file/Path;)Ljava/lang/String; a
	had (Ljava/nio/file/Path;)Z b
	keep (Ljava/nio/file/Path;)V c
	purgeStaleAndWrite ()V a
	putNew (Ljava/nio/file/Path;Ljava/lang/String;)V a
	removeStale ()V b
	walkOutputFiles ()Ljava/util/stream/Stream; c
net/minecraft/data/structures/SnbtToNbt net/minecraft/data/structures/SnbtToNbt
	DUMP_SNBT_TO b
	LOGGER c
	filters e
	generator d
	addFilter (Lnet/minecraft/data/structures/SnbtToNbt$Filter;)Lnet/minecraft/data/structures/SnbtToNbt; a
	applyFilters (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getName ()Ljava/lang/String; a
	getName (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	readStructure (Ljava/nio/file/Path;Ljava/lang/String;)Lnet/minecraft/data/structures/SnbtToNbt$TaskResult; a
	run (Lnet/minecraft/data/HashCache;)V a
	storeStructureIfChanged (Lnet/minecraft/data/HashCache;Lnet/minecraft/data/structures/SnbtToNbt$TaskResult;Ljava/nio/file/Path;)V a
net/minecraft/data/structures/StructureUpdater net/minecraft/data/structures/StructureUpdater
	LOGGER a
	patchVersion (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	update (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	updateStructure (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/data/worldgen/ProcessorLists net/minecraft/data/worldgen/ProcessorLists
	ADD_GILDED_BLACKSTONE H
	BASTION_GENERIC_DEGRADATION x
	BOTTOM_RAMPART s
	BRIDGE A
	EMPTY a
	ENTRANCE_REPLACEMENT z
	FARM_DESERT q
	FARM_PLAINS m
	FARM_SAVANNA n
	FARM_SNOWY o
	FARM_TAIGA p
	FOSSIL_COAL F
	FOSSIL_DIAMONDS G
	FOSSIL_ROT E
	HIGH_RAMPART D
	HIGH_WALL C
	HOUSING u
	MOSSIFY_10_PERCENT g
	MOSSIFY_20_PERCENT h
	MOSSIFY_70_PERCENT i
	OUTPOST_ROT r
	RAMPART_DEGRADATION y
	REMOVE_GILDED_BLACKSTONE I
	ROOF B
	SIDE_WALL_DEGRADATION v
	STABLE_DEGRADATION w
	STREET_PLAINS j
	STREET_SAVANNA k
	STREET_SNOWY_OR_TAIGA l
	TREASURE_ROOMS t
	ZOMBIE_DESERT f
	ZOMBIE_PLAINS b
	ZOMBIE_SAVANNA c
	ZOMBIE_SNOWY d
	ZOMBIE_TAIGA e
	register (Ljava/lang/String;Lcom/google/common/collect/ImmutableList;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList; a
net/minecraft/data/worldgen/StructureFeatures net/minecraft/data/worldgen/StructureFeatures
	BASTION_REMNANT s
	BURIED_TREASURE r
	DESERT_PYRAMID g
	END_CITY q
	IGLOO h
	JUNGLE_TEMPLE f
	MINESHAFT c
	MINESHAFT_MESA d
	NETHER_BRIDGE o
	NETHER_FOSSIL p
	OCEAN_MONUMENT l
	OCEAN_RUIN_COLD m
	OCEAN_RUIN_WARM n
	PILLAGER_OUTPOST b
	RUINED_PORTAL_DESERT z
	RUINED_PORTAL_JUNGLE A
	RUINED_PORTAL_MOUNTAIN C
	RUINED_PORTAL_NETHER E
	RUINED_PORTAL_OCEAN D
	RUINED_PORTAL_STANDARD y
	RUINED_PORTAL_SWAMP B
	SHIPWRECK i
	SHIPWRECK_BEACHED j
	STRONGHOLD a
	SWAMP_HUT k
	VILLAGE_DESERT u
	VILLAGE_PLAINS t
	VILLAGE_SAVANNA v
	VILLAGE_SNOWY w
	VILLAGE_TAIGA x
	WOODLAND_MANSION e
	bootstrap ()Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature; a
	register (Ljava/util/function/BiConsumer;Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;Ljava/util/Set;)V a
	register (Ljava/util/function/BiConsumer;Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;Lnet/minecraft/resources/ResourceKey;)V a
	registerStructures (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/worldgen/SurfaceRuleData net/minecraft/data/worldgen/SurfaceRuleData
	AIR a
	BASALT B
	BEDROCK b
	BLACKSTONE C
	CALCITE o
	COARSE_DIRT l
	CRIMSON_NYLIUM G
	DEEPSLATE i
	DIRT j
	ENDSTONE H
	GRASS_BLOCK n
	GRAVEL p
	ICE v
	LAVA x
	MYCELIUM m
	NETHERRACK y
	NETHER_WART_BLOCK F
	ORANGE_TERRACOTTA d
	PACKED_ICE s
	PODZOL k
	POWDER_SNOW u
	RED_SAND f
	RED_SANDSTONE g
	SAND q
	SANDSTONE r
	SNOW_BLOCK t
	SOUL_SAND z
	SOUL_SOIL A
	STONE h
	TERRACOTTA e
	WARPED_NYLIUM E
	WARPED_WART_BLOCK D
	WATER w
	WHITE_TERRACOTTA c
	end ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; c
	makeStateRule (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	nether ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; b
	overworld ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	overworldLike (ZZZ)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	surfaceNoiseAbove (D)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
net/minecraft/data/worldgen/biome/OverworldBiomes net/minecraft/data/worldgen/biome/OverworldBiomes
	NORMAL_MUSIC d
	NORMAL_WATER_COLOR a
	NORMAL_WATER_FOG_COLOR b
	OVERWORLD_FOG_COLOR c
	badlands (Z)Lnet/minecraft/world/level/biome/Biome; c
	bambooJungle ()Lnet/minecraft/world/level/biome/Biome; c
	baseJungle (FZZZLnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	baseOcean (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;IILnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	baseOceanGeneration ()Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; r
	beach (ZZ)Lnet/minecraft/world/level/biome/Biome; b
	biome (Lnet/minecraft/world/level/biome/Biome$Precipitation;Lnet/minecraft/world/level/biome/Biome$BiomeCategory;FFIILnet/minecraft/world/level/biome/MobSpawnSettings$Builder;Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/Biome; a
	biome (Lnet/minecraft/world/level/biome/Biome$Precipitation;Lnet/minecraft/world/level/biome/Biome$BiomeCategory;FFLnet/minecraft/world/level/biome/MobSpawnSettings$Builder;Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/Biome; a
	calculateSkyColor (F)I a
	coldOcean (Z)Lnet/minecraft/world/level/biome/Biome; d
	darkForest ()Lnet/minecraft/world/level/biome/Biome; g
	desert ()Lnet/minecraft/world/level/biome/Biome; d
	dripstoneCaves ()Lnet/minecraft/world/level/biome/Biome; q
	forest (ZZZ)Lnet/minecraft/world/level/biome/Biome; b
	frozenOcean (Z)Lnet/minecraft/world/level/biome/Biome; g
	frozenPeaks ()Lnet/minecraft/world/level/biome/Biome; k
	globalOverworldGeneration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V a
	grove ()Lnet/minecraft/world/level/biome/Biome; o
	jaggedPeaks ()Lnet/minecraft/world/level/biome/Biome; l
	jungle ()Lnet/minecraft/world/level/biome/Biome; b
	lukeWarmOcean (Z)Lnet/minecraft/world/level/biome/Biome; f
	lushCaves ()Lnet/minecraft/world/level/biome/Biome; p
	meadow ()Lnet/minecraft/world/level/biome/Biome; j
	mushroomFields ()Lnet/minecraft/world/level/biome/Biome; e
	ocean (Z)Lnet/minecraft/world/level/biome/Biome; e
	oldGrowthTaiga (Z)Lnet/minecraft/world/level/biome/Biome; a
	plains (ZZZ)Lnet/minecraft/world/level/biome/Biome; a
	river (Z)Lnet/minecraft/world/level/biome/Biome; i
	savanna (ZZ)Lnet/minecraft/world/level/biome/Biome; a
	snowySlopes ()Lnet/minecraft/world/level/biome/Biome; n
	sparseJungle ()Lnet/minecraft/world/level/biome/Biome; a
	stonyPeaks ()Lnet/minecraft/world/level/biome/Biome; m
	swamp ()Lnet/minecraft/world/level/biome/Biome; h
	taiga (Z)Lnet/minecraft/world/level/biome/Biome; h
	theVoid ()Lnet/minecraft/world/level/biome/Biome; i
	warmOcean ()Lnet/minecraft/world/level/biome/Biome; f
	windsweptHills (Z)Lnet/minecraft/world/level/biome/Biome; b
net/minecraft/data/worldgen/features/AquaticFeatures net/minecraft/data/worldgen/features/AquaticFeatures
	KELP g
	SEAGRASS_MID c
	SEAGRASS_SHORT a
	SEAGRASS_SIMPLE f
	SEAGRASS_SLIGHTLY_LESS_SHORT b
	SEAGRASS_TALL d
	SEA_PICKLE e
	WARM_OCEAN_VEGETATION h
net/minecraft/data/worldgen/features/CaveFeatures net/minecraft/data/worldgen/features/CaveFeatures
	AMETHYST_GEODE u
	CAVE_VINE j
	CAVE_VINES_BODY_PROVIDER x
	CAVE_VINES_HEAD_PROVIDER y
	CAVE_VINE_IN_MOSS k
	CLAY_POOL_WITH_DRIPLEAVES q
	CLAY_WITH_DRIPLEAVES p
	DRIPLEAF o
	DRIPSTONE_CLUSTER d
	FOSSIL_COAL b
	FOSSIL_COAL_STRUCTURES w
	FOSSIL_DIAMONDS c
	FOSSIL_STRUCTURES v
	GLOW_LICHEN h
	LARGE_DRIPSTONE e
	LUSH_CAVES_CLAY r
	MONSTER_ROOM a
	MOSS_PATCH m
	MOSS_PATCH_BONEMEAL n
	MOSS_PATCH_CEILING s
	MOSS_VEGETATION l
	POINTED_DRIPSTONE f
	ROOTED_AZALEA_TREE i
	SPORE_BLOSSOM t
	UNDERWATER_MAGMA g
	makeDripleaf (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/placement/PlacedFeature; a
	makeSmallDripleaf ()Lnet/minecraft/world/level/levelgen/placement/PlacedFeature; a
net/minecraft/data/worldgen/features/EndFeatures net/minecraft/data/worldgen/features/EndFeatures
	CHORUS_PLANT d
	END_GATEWAY_DELAYED c
	END_GATEWAY_RETURN b
	END_ISLAND e
	END_SPIKE a
net/minecraft/data/worldgen/features/MiscOverworldFeatures net/minecraft/data/worldgen/features/MiscOverworldFeatures
	BLUE_ICE f
	BONUS_CHEST l
	DESERT_WELL n
	DISK_CLAY h
	DISK_GRAVEL i
	DISK_SAND j
	FOREST_ROCK c
	FREEZE_TOP_LAYER k
	ICEBERG_BLUE e
	ICEBERG_PACKED d
	ICE_PATCH b
	ICE_SPIKE a
	LAKE_LAVA g
	SPRING_LAVA_FROZEN p
	SPRING_LAVA_OVERWORLD o
	SPRING_WATER q
	VOID_START_PLATFORM m
net/minecraft/data/worldgen/features/NetherFeatures net/minecraft/data/worldgen/features/NetherFeatures
	BASALT_BLOBS d
	BASALT_PILLAR s
	BLACKSTONE_BLOBS e
	CRIMSON_FOREST_VEGETATION h
	CRIMSON_FOREST_VEGETATION_BONEMEAL i
	CRIMSON_VEGETATION_PROVIDER g
	DELTA a
	GLOWSTONE_EXTRA f
	LARGE_BASALT_COLUMNS c
	NETHER_SPROUTS m
	NETHER_SPROUTS_BONEMEAL n
	PATCH_CRIMSON_ROOTS r
	PATCH_FIRE w
	PATCH_SOUL_FIRE x
	SMALL_BASALT_COLUMNS b
	SPRING_LAVA_NETHER t
	SPRING_NETHER_CLOSED u
	SPRING_NETHER_OPEN v
	TWISTING_VINES o
	TWISTING_VINES_BONEMEAL p
	WARPED_FOREST_VEGETATION_BONEMEAL l
	WARPED_FOREST_VEGETION k
	WARPED_VEGETATION_PROVIDER j
	WEEPING_VINES q
net/minecraft/data/worldgen/features/OreFeatures net/minecraft/data/worldgen/features/OreFeatures
	DEEPSLATE_ORE_REPLACEABLES c
	NATURAL_STONE a
	NETHERRACK d
	NETHER_ORE_REPLACEABLES e
	ORE_ANCIENT_DEBRIS_LARGE L
	ORE_ANCIENT_DEBRIS_SMALL M
	ORE_ANDESITE v
	ORE_BLACKSTONE q
	ORE_CLAY P
	ORE_COAL x
	ORE_COAL_BURIED y
	ORE_COAL_TARGET_LIST k
	ORE_COPPER_LARGE O
	ORE_COPPER_TARGET_LIST j
	ORE_COPPPER_SMALL N
	ORE_DIAMOND_BURIED G
	ORE_DIAMOND_LARGE F
	ORE_DIAMOND_SMALL E
	ORE_DIAMOND_TARGET_LIST h
	ORE_DIORITE u
	ORE_DIRT r
	ORE_EMERALD K
	ORE_GOLD B
	ORE_GOLD_BURIED C
	ORE_GOLD_TARGET_LIST g
	ORE_GRANITE t
	ORE_GRAVEL s
	ORE_GRAVEL_NETHER p
	ORE_INFESTED J
	ORE_IRON z
	ORE_IRON_SMALL A
	ORE_IRON_TARGET_LIST f
	ORE_LAPIS H
	ORE_LAPIS_BURIED I
	ORE_LAPIS_TARGET_LIST i
	ORE_MAGMA l
	ORE_NETHER_GOLD n
	ORE_QUARTZ o
	ORE_REDSTONE D
	ORE_SOUL_SAND m
	ORE_TUFF w
	STONE_ORE_REPLACEABLES b
net/minecraft/data/worldgen/features/PileFeatures net/minecraft/data/worldgen/features/PileFeatures
	PILE_HAY a
	PILE_ICE d
	PILE_MELON b
	PILE_PUMPKIN e
	PILE_SNOW c
net/minecraft/data/worldgen/features/TreeFeatures net/minecraft/data/worldgen/features/TreeFeatures
	ACACIA j
	AZALEA_TREE w
	BEEHIVE K
	BEEHIVE_0002 H
	BEEHIVE_002 I
	BEEHIVE_005 J
	BIRCH i
	BIRCH_BEES_0002 A
	BIRCH_BEES_002 B
	BIRCH_BEES_005 C
	CRIMSON_FUNGUS a
	CRIMSON_FUNGUS_PLANTED b
	DARK_OAK h
	FANCY_OAK n
	FANCY_OAK_BEES G
	FANCY_OAK_BEES_0002 D
	FANCY_OAK_BEES_002 E
	FANCY_OAK_BEES_005 F
	HUGE_BROWN_MUSHROOM e
	HUGE_RED_MUSHROOM f
	JUNGLE_BUSH v
	JUNGLE_TREE m
	JUNGLE_TREE_NO_VINE o
	MEGA_JUNGLE_TREE p
	MEGA_PINE r
	MEGA_SPRUCE q
	OAK g
	OAK_BEES_0002 x
	OAK_BEES_002 y
	OAK_BEES_005 z
	PINE l
	SPRUCE k
	SUPER_BIRCH_BEES t
	SUPER_BIRCH_BEES_0002 s
	SWAMP_OAK u
	WARPED_FUNGUS c
	WARPED_FUNGUS_PLANTED d
	createBirch ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; b
	createFancyOak ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; e
	createJungleTree ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; d
	createOak ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	createStraightBlobTree (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;IIII)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	createSuperBirch ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; c
net/minecraft/data/worldgen/features/VegetationFeatures net/minecraft/data/worldgen/features/VegetationFeatures
	BAMBOO_NO_PODZOL a
	BAMBOO_SOME_PODZOL b
	BAMBOO_VEGETATION O
	BIRCH_TALL F
	DARK_FOREST_VEGETATION z
	FLOWER_DEFAULT t
	FLOWER_FLOWER_FOREST u
	FLOWER_MEADOW x
	FLOWER_PLAIN w
	FLOWER_SWAMP v
	FOREST_FLOWERS y
	MEADOW_TREES B
	MUSHROOM_ISLAND_VEGETATION P
	PATCH_BERRY_BUSH h
	PATCH_BROWN_MUSHROOM d
	PATCH_CACTUS r
	PATCH_DEAD_BUSH m
	PATCH_GRASS j
	PATCH_GRASS_JUNGLE k
	PATCH_LARGE_FERN q
	PATCH_MELON n
	PATCH_PUMPKIN g
	PATCH_RED_MUSHROOM e
	PATCH_SUGAR_CANE s
	PATCH_SUNFLOWER f
	PATCH_TAIGA_GRASS i
	PATCH_TALL_GRASS p
	PATCH_WATERLILY o
	SINGLE_PIECE_OF_GRASS l
	TREES_BIRCH_AND_OAK I
	TREES_FLOWER_FOREST A
	TREES_GROVE D
	TREES_JUNGLE N
	TREES_OLD_GROWTH_PINE_TAIGA M
	TREES_OLD_GROWTH_SPRUCE_TAIGA L
	TREES_PLAINS J
	TREES_SAVANNA E
	TREES_SPARSE_JUNGLE K
	TREES_TAIGA C
	TREES_WATER H
	TREES_WINDSWEPT_HILLS G
	VINES c
	grassPatch (Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
net/minecraft/data/worldgen/placement/AquaticPlacements net/minecraft/data/worldgen/placement/AquaticPlacements
	KELP_COLD k
	KELP_WARM l
	SEAGRASS_COLD c
	SEAGRASS_DEEP g
	SEAGRASS_DEEP_COLD h
	SEAGRASS_DEEP_WARM f
	SEAGRASS_NORMAL b
	SEAGRASS_RIVER d
	SEAGRASS_SIMPLE i
	SEAGRASS_SWAMP e
	SEAGRASS_WARM a
	SEA_PICKLE j
	WARM_OCEAN_VEGETATION m
	seagrassPlacement (I)Ljava/util/List; a
net/minecraft/data/worldgen/placement/CavePlacements net/minecraft/data/worldgen/placement/CavePlacements
	AMETHYST_GEODE q
	CAVE_VINES k
	CLASSIC_VINES p
	DRIPSTONE_CLUSTER e
	FOSSIL_LOWER d
	FOSSIL_UPPER c
	GLOW_LICHEN i
	LARGE_DRIPSTONE f
	LUSH_CAVES_CEILING_VEGETATION n
	LUSH_CAVES_CLAY m
	LUSH_CAVES_VEGETATION l
	MONSTER_ROOM a
	MONSTER_ROOM_DEEP b
	POINTED_DRIPSTONE g
	ROOTED_AZALEA_TREE j
	SPORE_BLOSSOM o
	UNDERWATER_MAGMA h
net/minecraft/data/worldgen/placement/EndPlacements net/minecraft/data/worldgen/placement/EndPlacements
	CHORUS_PLANT c
	END_GATEWAY_RETURN b
	END_ISLAND_DECORATED d
	END_SPIKE a
net/minecraft/data/worldgen/placement/MiscOverworldPlacements net/minecraft/data/worldgen/placement/MiscOverworldPlacements
	BLUE_ICE f
	DESERT_WELL n
	DISK_CLAY i
	DISK_GRAVEL j
	DISK_SAND k
	FOREST_ROCK c
	FREEZE_TOP_LAYER l
	ICEBERG_BLUE e
	ICEBERG_PACKED d
	ICE_PATCH b
	ICE_SPIKE a
	LAKE_LAVA_SURFACE h
	LAKE_LAVA_UNDERGROUND g
	SPRING_LAVA o
	SPRING_LAVA_FROZEN p
	SPRING_WATER q
	VOID_START_PLATFORM m
net/minecraft/data/worldgen/placement/NetherPlacements net/minecraft/data/worldgen/placement/NetherPlacements
	BASALT_BLOBS d
	BASALT_PILLAR n
	BLACKSTONE_BLOBS e
	CRIMSON_FOREST_VEGETATION h
	DELTA a
	FIRE_PLACEMENT s
	GLOWSTONE g
	GLOWSTONE_EXTRA f
	LARGE_BASALT_COLUMNS c
	NETHER_SPROUTS j
	PATCH_CRIMSON_ROOTS m
	PATCH_FIRE u
	PATCH_SOUL_FIRE t
	SMALL_BASALT_COLUMNS b
	SPRING_CLOSED p
	SPRING_CLOSED_DOUBLE q
	SPRING_DELTA o
	SPRING_OPEN r
	TWISTING_VINES k
	WARPED_FOREST_VEGETATION i
	WEEPING_VINES l
net/minecraft/data/worldgen/placement/OrePlacements net/minecraft/data/worldgen/placement/OrePlacements
	ORE_ANCIENT_DEBRIS_LARGE I
	ORE_ANCIENT_DEBRIS_SMALL J
	ORE_ANDESITE_LOWER p
	ORE_ANDESITE_UPPER o
	ORE_BLACKSTONE h
	ORE_CLAY M
	ORE_COAL_LOWER s
	ORE_COAL_UPPER r
	ORE_COPPER K
	ORE_COPPER_LARGE L
	ORE_DIAMOND B
	ORE_DIAMOND_BURIED D
	ORE_DIAMOND_LARGE C
	ORE_DIORITE_LOWER n
	ORE_DIORITE_UPPER m
	ORE_DIRT i
	ORE_EMERALD H
	ORE_GOLD x
	ORE_GOLD_DELTAS c
	ORE_GOLD_EXTRA w
	ORE_GOLD_LOWER y
	ORE_GOLD_NETHER e
	ORE_GRANITE_LOWER l
	ORE_GRANITE_UPPER k
	ORE_GRAVEL j
	ORE_GRAVEL_NETHER g
	ORE_INFESTED G
	ORE_IRON_MIDDLE u
	ORE_IRON_SMALL v
	ORE_IRON_UPPER t
	ORE_LAPIS E
	ORE_LAPIS_BURIED F
	ORE_MAGMA a
	ORE_QUARTZ_DELTAS d
	ORE_QUARTZ_NETHER f
	ORE_REDSTONE z
	ORE_REDSTONE_LOWER A
	ORE_SOUL_SAND b
	ORE_TUFF q
	commonOrePlacement (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	orePlacement (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	rareOrePlacement (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; b
net/minecraft/data/worldgen/placement/PlacementUtils net/minecraft/data/worldgen/placement/PlacementUtils
	FULL_RANGE e
	HEIGHTMAP a
	HEIGHTMAP_OCEAN_FLOOR d
	HEIGHTMAP_TOP_SOLID b
	HEIGHTMAP_WORLD_SURFACE c
	RANGE_10_10 f
	RANGE_4_4 h
	RANGE_8_8 g
	RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT i
	bootstrap ()Lnet/minecraft/world/level/levelgen/placement/PlacedFeature; a
	countExtra (IFI)Lnet/minecraft/world/level/levelgen/placement/PlacementModifier; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/placement/PlacedFeature;)Lnet/minecraft/world/level/levelgen/placement/PlacedFeature; a
net/minecraft/data/worldgen/placement/TreePlacements net/minecraft/data/worldgen/placement/TreePlacements
	ACACIA_CHECKED f
	BIRCH_BEES_0002_PLACED w
	BIRCH_BEES_002 x
	BIRCH_CHECKED e
	CRIMSON_FUNGI a
	DARK_OAK_CHECKED d
	FANCY_OAK_BEES A
	FANCY_OAK_BEES_0002 y
	FANCY_OAK_BEES_002 z
	FANCY_OAK_CHECKED n
	JUNGLE_BUSH r
	JUNGLE_TREE_CHECKED m
	MEGA_JUNGLE_TREE_CHECKED o
	MEGA_PINE_CHECKED q
	MEGA_SPRUCE_CHECKED p
	OAK_BEES_0002 u
	OAK_BEES_002 v
	OAK_CHECKED c
	PINE_CHECKED l
	PINE_ON_SNOW j
	SNOW_TREE_FILTER_DECORATOR i
	SNOW_TREE_PREDICATE h
	SPRUCE_CHECKED g
	SPRUCE_ON_SNOW k
	SUPER_BIRCH_BEES t
	SUPER_BIRCH_BEES_0002 s
	WARPED_FUNGI b
net/minecraft/data/worldgen/placement/VegetationPlacements net/minecraft/data/worldgen/placement/VegetationPlacements
	BAMBOO b
	BAMBOO_LIGHT a
	BAMBOO_VEGETATION at
	BIRCH_TALL aj
	BROWN_MUSHROOM_NETHER F
	BROWN_MUSHROOM_NORMAL H
	BROWN_MUSHROOM_OLD_GROWTH L
	BROWN_MUSHROOM_SWAMP N
	BROWN_MUSHROOM_TAIGA J
	DARK_FOREST_VEGETATION X
	FLOWER_DEFAULT Q
	FLOWER_FLOWER_FOREST R
	FLOWER_FOREST_FLOWERS Y
	FLOWER_MEADOW U
	FLOWER_PLAINS T
	FLOWER_SWAMP S
	FLOWER_WARM P
	FOREST_FLOWERS Z
	GRASS_BONEMEAL n
	MUSHROOM_ISLAND_VEGETATION au
	PATCH_BERRY_COMMON t
	PATCH_BERRY_RARE u
	PATCH_CACTUS_DECORATED A
	PATCH_CACTUS_DESERT z
	PATCH_DEAD_BUSH p
	PATCH_DEAD_BUSH_2 o
	PATCH_DEAD_BUSH_BADLANDS q
	PATCH_GRASS_BADLANDS h
	PATCH_GRASS_FOREST g
	PATCH_GRASS_JUNGLE m
	PATCH_GRASS_NORMAL j
	PATCH_GRASS_PLAIN f
	PATCH_GRASS_SAVANNA i
	PATCH_GRASS_TAIGA l
	PATCH_GRASS_TAIGA_2 k
	PATCH_LARGE_FERN y
	PATCH_MELON r
	PATCH_MELON_SPARSE s
	PATCH_PUMPKIN e
	PATCH_SUGAR_CANE E
	PATCH_SUGAR_CANE_BADLANDS D
	PATCH_SUGAR_CANE_DESERT C
	PATCH_SUGAR_CANE_SWAMP B
	PATCH_SUNFLOWER d
	PATCH_TALL_GRASS x
	PATCH_TALL_GRASS_2 w
	PATCH_WATERLILY v
	RED_MUSHROOM_NETHER G
	RED_MUSHROOM_NORMAL I
	RED_MUSHROOM_OLD_GROWTH M
	RED_MUSHROOM_SWAMP O
	RED_MUSHROOM_TAIGA K
	TREES_BADLANDS ae
	TREES_BIRCH ak
	TREES_BIRCH_AND_OAK ao
	TREES_FLOWER_FOREST aa
	TREES_GROVE ad
	TREES_JUNGLE as
	TREES_MEADOW ab
	TREES_OLD_GROWTH_PINE_TAIGA ar
	TREES_OLD_GROWTH_SPRUCE_TAIGA aq
	TREES_PLAINS W
	TREES_SAVANNA ai
	TREES_SNOWY af
	TREES_SPARSE_JUNGLE ap
	TREES_SWAMP ag
	TREES_TAIGA ac
	TREES_WATER an
	TREES_WINDSWEPT_FOREST al
	TREES_WINDSWEPT_HILLS am
	TREES_WINDSWEPT_SAVANNA ah
	TREE_THRESHOLD V
	VINES c
	getMushroomPlacement (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	treePlacement (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	treePlacement (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
	treePlacementBase (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lcom/google/common/collect/ImmutableList$Builder; b
	worldSurfaceSquaredWithCount (I)Ljava/util/List; a
net/minecraft/data/worldgen/placement/VillagePlacements net/minecraft/data/worldgen/placement/VillagePlacements
	ACACIA_VILLAGE g
	FLOWER_PLAIN_VILLAGE k
	OAK_VILLAGE f
	PATCH_BERRY_BUSH_VILLAGE m
	PATCH_CACTUS_VILLAGE j
	PATCH_TAIGA_GRASS_VILLAGE l
	PILE_HAY_VILLAGE a
	PILE_ICE_VILLAGE d
	PILE_MELON_VILLAGE b
	PILE_PUMPKIN_VILLAGE e
	PILE_SNOW_VILLAGE c
	PINE_VILLAGE i
	SPRUCE_VILLAGE h
net/minecraft/gametest/framework/GlobalTestReporter net/minecraft/gametest/framework/GlobalTestReporter
	DELEGATE a
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	replaceWith (Lnet/minecraft/gametest/framework/TestReporter;)V a
net/minecraft/gametest/framework/ReportGameListener net/minecraft/gametest/framework/ReportGameListener
	attempts a
	originalTestInfo c
	structurePos e
	successes b
	testTicker d
	createBook (Ljava/lang/String;ZLjava/lang/String;)Lnet/minecraft/world/item/ItemStack; a
	reportFailure (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/Throwable;)V a
	reportPassed (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V a
	rerunTest ()V a
	say (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/ChatFormatting;Ljava/lang/String;)V a
	showRedBox (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/lang/String;)V a
	spawnBeacon (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/world/level/block/Block;)V a
	spawnLectern (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V c
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	visualizeFailedTest (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/Throwable;)V b
	visualizePassedTest (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V b
net/minecraft/nbt/SnbtPrinterTagVisitor net/minecraft/nbt/SnbtPrinterTagVisitor
	ELEMENT_SEPARATOR e
	ELEMENT_SPACING i
	KEY_ORDER a
	LIST_CLOSE g
	LIST_OPEN f
	LIST_TYPE_SEPARATOR h
	NAME_VALUE_SEPARATOR d
	NEWLINE l
	NO_INDENTATION b
	SIMPLE_VALUE c
	STRUCT_CLOSE k
	STRUCT_OPEN j
	depth n
	indentation m
	path o
	result p
	getKeys (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; b
	handleEscapePretty (Ljava/lang/String;)Ljava/lang/String; a
	pathString ()Ljava/lang/String; a
	popPath ()V b
	pushPath (Ljava/lang/String;)V b
	visit (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/StringTagVisitor net/minecraft/nbt/StringTagVisitor
	SIMPLE_VALUE a
	builder b
	handleEscape (Ljava/lang/String;)Ljava/lang/String; a
	visit (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/TextComponentTagVisitor net/minecraft/nbt/TextComponentTagVisitor
	ELEMENT_SEPARATOR j
	ELEMENT_SPACING n
	INLINE_ELEMENT_TYPES c
	INLINE_LIST_THRESHOLD b
	LIST_CLOSE l
	LIST_OPEN k
	LIST_TYPE_SEPARATOR m
	LOGGER a
	NAME_VALUE_SEPARATOR i
	NEWLINE q
	SIMPLE_VALUE h
	STRUCT_CLOSE p
	STRUCT_OPEN o
	SYNTAX_HIGHLIGHTING_KEY d
	SYNTAX_HIGHLIGHTING_NUMBER f
	SYNTAX_HIGHLIGHTING_NUMBER_TYPE g
	SYNTAX_HIGHLIGHTING_STRING e
	depth s
	indentation r
	result t
	handleEscapePretty (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	visit (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/visitors/CollectFields net/minecraft/nbt/visitors/CollectFields
	fieldsToGetCount a
	stack c
	wantedTypes b
	getMissingFieldCount ()I c
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/nbt/visitors/CollectToTag net/minecraft/nbt/visitors/CollectToTag
	consumerStack c
	lastId a
	rootTag b
	appendEntry (Lnet/minecraft/nbt/Tag;)V a
	depth ()I e
	enterContainerIfNeeded (Lnet/minecraft/nbt/TagType;)V c
	getResult ()Lnet/minecraft/nbt/Tag; d
	visit (B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (D)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (F)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (S)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitElement (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; b
	visitEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitList (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/network/PacketDecoder net/minecraft/network/PacketDecoder
	LOGGER a
	MARKER b
	flow c
net/minecraft/network/PacketEncoder net/minecraft/network/PacketEncoder
	LOGGER a
	MARKER b
	flow c
	encode (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddVibrationSignalPacket net/minecraft/network/protocol/game/ClientboundAddVibrationSignalPacket
	vibrationPath a
	getVibrationPath ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationPath; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundClearTitlesPacket net/minecraft/network/protocol/game/ClientboundClearTitlesPacket
	resetTimes a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldResetTimes ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket
	lerpTime e
	newAbsoluteMaxSize f
	newCenterX a
	newCenterZ b
	newSize d
	oldSize c
	warningBlocks g
	warningTime h
	getLerpTime ()J f
	getNewAbsoluteMaxSize ()I g
	getNewCenterX ()D b
	getNewCenterZ ()D c
	getNewSize ()D d
	getOldSize ()D e
	getWarningBlocks ()I i
	getWarningTime ()I h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData
	TWO_MEGABYTES a
	blockEntitiesData d
	buffer c
	heightmaps b
	calculateChunkSize (Lnet/minecraft/world/level/chunk/LevelChunk;)I a
	extractChunkData (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	getBlockEntitiesTags (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput;II)V a
	getBlockEntitiesTagsConsumer (II)Ljava/util/function/Consumer; a
	getHeightmaps ()Lnet/minecraft/nbt/CompoundTag; b
	getReadBuffer ()Lnet/minecraft/network/FriendlyByteBuf; a
	getWriteBuffer ()Lio/netty/buffer/ByteBuf; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket
	chunkData c
	lightData d
	x a
	z b
	getChunkData ()Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData; d
	getLightData ()Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData; e
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData
	blockUpdates f
	blockYMask b
	emptyBlockYMask d
	emptySkyYMask c
	skyUpdates e
	skyYMask a
	trustEdges g
	getBlockUpdates ()Ljava/util/List; f
	getBlockYMask ()Ljava/util/BitSet; d
	getEmptyBlockYMask ()Ljava/util/BitSet; e
	getEmptySkyYMask ()Ljava/util/BitSet; b
	getSkyUpdates ()Ljava/util/List; c
	getSkyYMask ()Ljava/util/BitSet; a
	getTrustEdges ()Z g
	prepareSectionData (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/lighting/LevelLightEngine;Lnet/minecraft/world/level/LightLayer;ILjava/util/BitSet;Ljava/util/BitSet;Ljava/util/List;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPingPacket net/minecraft/network/protocol/game/ClientboundPingPacket
	id a
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket
	duration b
	killerId a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket
	killerId b
	message c
	playerId a
	getKillerId ()I b
	getMessage ()Lnet/minecraft/network/chat/Component; d
	getPlayerId ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket
	text a
	getText ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket
	newCenterX a
	newCenterZ b
	getNewCenterX ()D c
	getNewCenterZ ()D b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket
	lerpTime c
	newSize b
	oldSize a
	getLerpTime ()J d
	getNewSize ()D c
	getOldSize ()D b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket
	size a
	getSize ()D b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket
	warningDelay a
	getWarningDelay ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket
	warningBlocks a
	getWarningBlocks ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket
	simulationDistance a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	simulationDistance ()I b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket
	text a
	getText ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket
	text a
	getText ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket
	fadeIn a
	fadeOut c
	stay b
	getFadeIn ()I b
	getFadeOut ()I d
	getStay ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/DebugEntityNameGenerator net/minecraft/network/protocol/game/DebugEntityNameGenerator
	NAMES_FIRST_PART a
	NAMES_SECOND_PART b
	getEntityName (Ljava/util/UUID;)Ljava/lang/String; a
	getEntityName (Lnet/minecraft/world/entity/Entity;)Ljava/lang/String; a
	getRandom (Ljava/util/UUID;)Ljava/util/Random; b
	getRandomString (Ljava/util/Random;[Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/network/protocol/game/ServerboundPongPacket net/minecraft/network/protocol/game/ServerboundPongPacket
	id a
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/resources/RegistryDataPackCodec net/minecraft/resources/RegistryDataPackCodec
	directCodec a
	elementCodec c
	registryKey b
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lnet/minecraft/resources/RegistryDataPackCodec; a
	encode (Lnet/minecraft/core/MappedRegistry;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryFileCodec net/minecraft/resources/RegistryFileCodec
	allowInline c
	elementCodec b
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lnet/minecraft/resources/RegistryFileCodec; a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lnet/minecraft/resources/RegistryFileCodec; a
	encode (Ljava/util/function/Supplier;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	homogeneousList (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
net/minecraft/resources/RegistryLookupCodec net/minecraft/resources/RegistryLookupCodec
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/RegistryLookupCodec; a
	encode (Lnet/minecraft/core/Registry;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; a
net/minecraft/resources/RegistryReadOps net/minecraft/resources/RegistryReadOps
	jsonOps e
	readCache d
	registryAccess c
	resources b
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/RegistryResourceAccess;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/resources/RegistryReadOps; b
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/resources/RegistryReadOps; b
	createAndLoad (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/RegistryResourceAccess;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/resources/RegistryReadOps; a
	createAndLoad (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/resources/RegistryReadOps; a
	createPlaceholderGetter (Lnet/minecraft/core/WritableRegistry;Lnet/minecraft/resources/ResourceKey;)Ljava/util/function/Supplier; a
	createRegistryGetter (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;)Ljava/util/function/Supplier; a
	decodeElement (Ljava/lang/Object;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/DataResult; a
	decodeElements (Lnet/minecraft/core/MappedRegistry;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult; a
	readAndRegisterElement (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Lcom/mojang/serialization/Codec;Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/DataResult; a
	readCache (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/RegistryReadOps$ReadCache; b
	registry (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryResourceAccess$InMemoryStorage$Entry net/minecraft/resources/RegistryResourceAccess$InMemoryStorage$Entry
	data a
	id b
	lifecycle c
	data ()Lcom/google/gson/JsonElement; a
	id ()I b
	lifecycle ()Lcom/mojang/serialization/Lifecycle; c
net/minecraft/resources/RegistryResourceAccess$InMemoryStorage net/minecraft/resources/RegistryResourceAccess$InMemoryStorage
	LOGGER a
	entries b
	add (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Encoder;ILjava/lang/Object;Lcom/mojang/serialization/Lifecycle;)V a
	listResources (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Collection; a
	parseElement (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Decoder;)Ljava/util/Optional; a
net/minecraft/resources/RegistryResourceAccess$ParsedEntry net/minecraft/resources/RegistryResourceAccess$ParsedEntry
	fixedId b
	value a
	createWithId (Ljava/lang/Object;I)Lnet/minecraft/resources/RegistryResourceAccess$ParsedEntry; a
	createWithoutId (Ljava/lang/Object;)Lnet/minecraft/resources/RegistryResourceAccess$ParsedEntry; a
	fixedId ()Ljava/util/OptionalInt; b
	value ()Ljava/lang/Object; a
net/minecraft/resources/RegistryWriteOps net/minecraft/resources/RegistryWriteOps
	registryAccess b
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/resources/RegistryWriteOps; a
	encode (Ljava/lang/Object;Ljava/lang/Object;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/ResourceKey net/minecraft/resources/ResourceKey
	VALUES a
	location c
	registryName b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; c
	codec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; a
	create (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	createRegistryKey (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	elementKey (Lnet/minecraft/resources/ResourceKey;)Ljava/util/function/Function; d
	isFor (Lnet/minecraft/resources/ResourceKey;)Z b
	location ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/server/Main net/minecraft/server/Main
	LOGGER a
	forceUpgrade (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
net/minecraft/server/MinecraftServer net/minecraft/server/MinecraftServer
	ABSOLUTE_MAX_WORLD_SIZE i
	ANONYMOUS_PLAYER_PROFILE k
	AUTOSAVE_INTERVAL z
	AVERAGE_TICK_TIME_SMOOTHING s
	DELAYED_TASKS_TICK_EXTENSION B
	DEMO_SETTINGS j
	LEVEL_STORAGE_PROTOCOL d
	LEVEL_STORAGE_SCHEMA e
	LOGGER r
	MAP_RESOURCE_FILE f
	MAX_STATUS_PLAYER_SAMPLE x
	MAX_TICK_LATENCY A
	MS_PER_TICK c
	OVERLOADED_THRESHOLD u
	OVERLOADED_WARNING_INTERVAL v
	START_CHUNK_RADIUS h
	START_TICKING_CHUNK_COUNT y
	STATUS_EXPIRE_TIME_NS w
	TICK_STATS_SPAN t
	USERID_CACHE_FILE g
	VANILLA_BRAND b
	allowFlight Z
	averageTickTime ay
	commandStorage at
	connection K
	customBossEvents au
	debugCommandProfiler I
	debugCommandProfilerDelayStart J
	delayedTasksMaxNextTickTime ap
	enforceWhitelist ax
	executor az
	fixerUpper O
	frameTimer aw
	functionManager av
	isDemo ae
	isReady ah
	isSaving aD
	keyPair ac
	lastOverloadWarning ai
	lastServerStatus am
	levels R
	localIp P
	mayHaveDelayedTasks aq
	metricsRecorder D
	motd aa
	nextTickTime ao
	onMetricsRecordingFinished G
	onMetricsRecordingStopped F
	onlineMode W
	packRepository ar
	playerDataStorage m
	playerIdleTimeout ab
	playerList S
	port Q
	preventProxyConnections X
	profileCache al
	profileRepository ak
	profiler E
	progressListenerFactory L
	proxy o
	pvp Y
	random N
	registryHolder n
	resourcePack af
	resourcePackHash ag
	resources aB
	running T
	scoreboard as
	serverId aA
	serverThread an
	sessionService aj
	singleplayerName ad
	status M
	stopped U
	storageSource l
	structureManager aC
	tickCount V
	tickTimes p
	tickables C
	willStartRecordingMetrics H
	worldData q
	acceptsFailure ()Z j_
	acceptsSuccess ()Z i_
	addTickable (Ljava/lang/Runnable;)V b
	areNpcsEnabled ()Z X
	configurePackRepository (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/DataPackConfig;Z)Lnet/minecraft/world/level/DataPackConfig; a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; aB
	createGameModeForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/level/ServerPlayerGameMode; b
	createLevels (Lnet/minecraft/server/level/progress/ChunkProgressListener;)V a
	createTextFilterForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/network/TextFilter; a
	detectBundledResources ()V g_
	doRunTask (Ljava/lang/Runnable;)V c
	doRunTask (Lnet/minecraft/server/TickTask;)V b
	dumpClasspath (Ljava/nio/file/Path;)V e
	dumpGameRules (Ljava/nio/file/Path;)V d
	dumpMiscStats (Ljava/nio/file/Path;)V c
	dumpNativeModules (Ljava/nio/file/Path;)V g
	dumpServerProperties (Ljava/nio/file/Path;)V a
	dumpThreads (Ljava/nio/file/Path;)V f
	endMetricsRecordingTick ()V bi
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	fillSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; b
	finishRecordingMetrics ()V aR
	forceDifficulty ()V q
	forceSynchronousWrites ()Z aS
	getAbsoluteMaxWorldSize ()I ar
	getAdvancements ()Lnet/minecraft/server/ServerAdvancementManager; ax
	getAllLevels ()Ljava/lang/Iterable; F
	getAverageTickTime ()F aM
	getCommandStorage ()Lnet/minecraft/world/level/storage/CommandStorage; aF
	getCommands ()Lnet/minecraft/commands/Commands; aA
	getCompressionThreshold ()I au
	getConnection ()Lnet/minecraft/server/network/ServerConnectionListener; ad
	getCustomBossEvents ()Lnet/minecraft/server/bossevents/CustomBossEvents; aK
	getDefaultGameType ()Lnet/minecraft/world/level/GameType; h_
	getFile (Ljava/lang/String;)Ljava/io/File; c
	getFixerUpper ()Lcom/mojang/datafixers/DataFixer; aw
	getForcedGameType ()Lnet/minecraft/world/level/GameType; aX
	getFrameTimer ()Lnet/minecraft/util/FrameTimer; aN
	getFunctionCompilationLevel ()I i
	getFunctions ()Lnet/minecraft/server/ServerFunctionManager; ay
	getGameRules ()Lnet/minecraft/world/level/GameRules; aJ
	getItemModifierManager ()Lnet/minecraft/world/level/storage/loot/ItemModifierManager; aI
	getKeyPair ()Ljava/security/KeyPair; L
	getLevel (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/server/level/ServerLevel; a
	getLocalIp ()Ljava/lang/String; u
	getLootTables ()Lnet/minecraft/world/level/storage/loot/LootTables; aG
	getMaxPlayers ()I I
	getModdedStatus ()Lnet/minecraft/util/ModCheck; K
	getMotd ()Ljava/lang/String; aa
	getNextTickTime ()J av
	getOperatorUserPermissionLevel ()I h
	getPackRepository ()Lnet/minecraft/server/packs/repository/PackRepository; az
	getPlayerCount ()I H
	getPlayerIdleTimeout ()I al
	getPlayerList ()Lnet/minecraft/server/players/PlayerList; ac
	getPlayerNames ()[Ljava/lang/String; J
	getPort ()I M
	getPredicateManager ()Lnet/minecraft/world/level/storage/loot/PredicateManager; aH
	getPreventProxyConnections ()Z V
	getProfileCache ()Lnet/minecraft/server/players/GameProfileCache; ao
	getProfilePermissions (Lcom/mojang/authlib/GameProfile;)I b
	getProfileRepository ()Lcom/mojang/authlib/GameProfileRepository; an
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; aO
	getProxy ()Ljava/net/Proxy; ak
	getRateLimitPacketsPerSecond ()I l
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; aC
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; aY
	getResourcePack ()Ljava/lang/String; S
	getResourcePackHash ()Ljava/lang/String; T
	getResourcePackPrompt ()Lnet/minecraft/network/chat/Component; aZ
	getRunningThread ()Ljava/lang/Thread; at
	getScaledTrackingDistance (I)I b
	getScoreboard ()Lnet/minecraft/server/ServerScoreboard; aE
	getSelectedPacks (Lnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/world/level/DataPackConfig; a
	getServerDirectory ()Ljava/io/File; A
	getServerVersion ()Ljava/lang/String; G
	getSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; am
	getSingleplayerName ()Ljava/lang/String; N
	getSpawnProtectionRadius ()I ah
	getSpawnRadius (Lnet/minecraft/server/level/ServerLevel;)I a
	getStatus ()Lnet/minecraft/network/protocol/status/ServerStatus; ap
	getStructureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager; aT
	getTags ()Lnet/minecraft/tags/TagContainer; aD
	getTickCount ()I ag
	getWorldData ()Lnet/minecraft/world/level/storage/WorldData; aU
	getWorldPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
	getWorldScreenshotFile ()Ljava/util/Optional; z
	halt (Z)V a
	hasGui ()Z af
	haveTime ()Z be
	hidesOnlinePlayers ()Z aj
	initServer ()Z e
	initializeKeyPair ()V P
	invalidateStatus ()V aq
	isCommandBlockEnabled ()Z n
	isCurrentlySaving ()Z ba
	isDedicatedServer ()Z k
	isDemo ()Z R
	isEnforceWhitelist ()Z aL
	isEpollEnabled ()Z m
	isFlightAllowed ()Z Z
	isHardcore ()Z g
	isNetherEnabled ()Z B
	isPublished ()Z o
	isPvpAllowed ()Z Y
	isReady ()Z ae
	isRecordingMetrics ()Z aP
	isResourcePackRequired ()Z aW
	isRunning ()Z v
	isShutdown ()Z C
	isSingleplayer ()Z O
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSpawningAnimals ()Z W
	isSpawningMonsters ()Z Q
	isStopped ()Z ab
	isTimeProfilerRunning ()Z bb
	isUnderSpawnProtection (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	kickUnlistedPlayers (Lnet/minecraft/commands/CommandSourceStack;)V a
	levelKeys ()Ljava/util/Set; E
	loadLevel ()V f_
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	onServerExit ()V f
	overworld ()Lnet/minecraft/server/level/ServerLevel; D
	pollTask ()Z y
	pollTaskInternal ()Z bf
	prepareLevels (Lnet/minecraft/server/level/progress/ChunkProgressListener;)V b
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	readScoreboard (Lnet/minecraft/world/level/storage/DimensionDataStorage;)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; aV
	reloadResources (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
	repliesToStatus ()Z ai
	runServer ()V w
	saveAllChunks (ZZZ)Z a
	saveDebugReport (Ljava/nio/file/Path;)V b
	saveEverything (ZZZ)Z b
	scheduleExecutables ()Z as
	sendDifficultyUpdate (Lnet/minecraft/server/level/ServerPlayer;)V c
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	setDefaultGameType (Lnet/minecraft/world/level/GameType;)V a
	setDemo (Z)V c
	setDifficulty (Lnet/minecraft/world/Difficulty;Z)V a
	setDifficultyLocked (Z)V b
	setEnforceWhitelist (Z)V h
	setFlightAllowed (Z)V g
	setId (Ljava/lang/String;)V b
	setInitialSpawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/storage/ServerLevelData;ZZ)V a
	setLocalIp (Ljava/lang/String;)V a_
	setMotd (Ljava/lang/String;)V e
	setPlayerIdleTimeout (I)V c
	setPlayerList (Lnet/minecraft/server/players/PlayerList;)V a
	setPort (I)V a
	setPreventProxyConnections (Z)V e
	setPvpAllowed (Z)V f
	setResourcePack (Ljava/lang/String;Ljava/lang/String;)V a
	setSingleplayerName (Ljava/lang/String;)V d
	setUsesAuthentication (Z)V d
	setupDebugLevel (Lnet/minecraft/world/level/storage/WorldData;)V a
	shouldInformAdmins ()Z F_
	shouldRconBroadcast ()Z j
	shouldRun (Ljava/lang/Runnable;)Z d
	shouldRun (Lnet/minecraft/server/TickTask;)Z a
	spin (Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer; a
	startMetricsRecordingTick ()V bh
	startRecordingMetrics (Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V a
	startTimeProfiler ()V bc
	stopRecordingMetrics ()V aQ
	stopServer ()V t
	stopTimeProfiler ()Lnet/minecraft/util/profiling/ProfileResults; bd
	tickChildren (Ljava/util/function/BooleanSupplier;)V b
	tickServer (Ljava/util/function/BooleanSupplier;)V a
	updateMobSpawningFlags ()V bg
	updateStatusIcon (Lnet/minecraft/network/protocol/status/ServerStatus;)V a
	usesAuthentication ()Z U
	waitUntilNextTick ()V x
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
	wrapRunnable (Ljava/lang/Runnable;)Lnet/minecraft/server/TickTask; a
net/minecraft/server/TickTask net/minecraft/server/TickTask
	runnable b
	tick a
	getTick ()I a
net/minecraft/server/commands/ItemCommands net/minecraft/server/commands/ItemCommands
	ERROR_SOURCE_INAPPLICABLE_SLOT d
	ERROR_SOURCE_NOT_A_CONTAINER c
	ERROR_TARGET_INAPPLICABLE_SLOT b
	ERROR_TARGET_NOT_A_CONTAINER a
	ERROR_TARGET_NO_CHANGES e
	ERROR_TARGET_NO_CHANGES_KNOWN_ITEM f
	SUGGEST_MODIFIER g
	applyModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	blockToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos;I)I a
	blockToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	blockToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILjava/util/Collection;I)I a
	blockToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILjava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	entityToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILnet/minecraft/core/BlockPos;I)I a
	entityToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	entityToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILjava/util/Collection;I)I a
	entityToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILjava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	getBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/item/ItemStack; a
	getContainer (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;)Lnet/minecraft/world/Container; a
	getEntityItem (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/item/ItemStack; a
	modifyBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	modifyEntityItem (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/item/ItemStack;)I a
	setEntityItem (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/world/item/ItemStack;)I a
net/minecraft/server/commands/JfrCommand net/minecraft/server/commands/JfrCommand
	DUMP_FAILED b
	START_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	startJfr (Lnet/minecraft/commands/CommandSourceStack;)I a
	stopJfr (Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/commands/PerfCommand net/minecraft/server/commands/PerfCommand
	ERROR_ALREADY_RUNNING c
	ERROR_NOT_RUNNING b
	LOGGER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	saveResults (Lnet/minecraft/commands/CommandSourceStack;Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftServer;)V a
	startProfilingDedicatedServer (Lnet/minecraft/commands/CommandSourceStack;)I a
	stopProfilingDedicatedServer (Lnet/minecraft/commands/CommandSourceStack;)I b
	whenStopped (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/util/profiling/ProfileResults;)V a
net/minecraft/server/dedicated/DedicatedPlayerList net/minecraft/server/dedicated/DedicatedPlayerList
	LOGGER a
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z d
	deop (Lcom/mojang/authlib/GameProfile;)V b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getServer ()Lnet/minecraft/server/dedicated/DedicatedServer; b
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z c
	loadIpBanList ()V y
	loadOps ()V A
	loadUserBanList ()V z
	loadWhiteList ()V C
	op (Lcom/mojang/authlib/GameProfile;)V a
	reloadWhiteList ()V a
	saveIpBanList ()V w
	saveOps ()V B
	saveUserBanList ()V x
	saveWhiteList ()V D
	setUsingWhiteList (Z)V a
net/minecraft/server/dedicated/DedicatedServer net/minecraft/server/dedicated/DedicatedServer
	CONVERSION_RETRIES t
	CONVERSION_RETRY_DELAY_MS s
	LOGGER r
	SHA1 u
	consoleInput v
	gui A
	queryThreadGs4 w
	rconConsoleSource x
	rconThread y
	resourcePackPrompt C
	settings z
	textFilterClient B
	areNpcsEnabled ()Z X
	convertOldUsers ()Z bi
	createTextFilterForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/network/TextFilter; a
	dumpServerProperties (Ljava/nio/file/Path;)V a
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	forceDifficulty ()V q
	forceSynchronousWrites ()Z aS
	getAbsoluteMaxWorldSize ()I ar
	getCompressionThreshold ()I au
	getForcedGameType ()Lnet/minecraft/world/level/GameType; aX
	getFunctionCompilationLevel ()I i
	getLevelIdName ()Ljava/lang/String; r
	getMaxTickLength ()J bj
	getOperatorUserPermissionLevel ()I h
	getPackHash ()Ljava/lang/String; be
	getPlayerList ()Lnet/minecraft/server/dedicated/DedicatedPlayerList; bg
	getPlayerList ()Lnet/minecraft/server/players/PlayerList; ac
	getPluginNames ()Ljava/lang/String; s
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getRateLimitPacketsPerSecond ()I l
	getResourcePackPrompt ()Lnet/minecraft/network/chat/Component; aZ
	getScaledTrackingDistance (I)I b
	getServerIp ()Ljava/lang/String; b
	getServerName ()Ljava/lang/String; p
	getServerPort ()I d
	getSpawnProtectionRadius ()I ah
	handleConsoleInput (Ljava/lang/String;Lnet/minecraft/commands/CommandSourceStack;)V a
	handleConsoleInputs ()V bf
	hasGui ()Z af
	hidesOnlinePlayers ()Z aj
	initServer ()Z e
	isCommandBlockEnabled ()Z n
	isDedicatedServer ()Z k
	isEpollEnabled ()Z m
	isHardcore ()Z g
	isNetherEnabled ()Z B
	isPublished ()Z o
	isResourcePackRequired ()Z aW
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSpawningAnimals ()Z W
	isSpawningMonsters ()Z Q
	isUnderSpawnProtection (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	onServerExit ()V f
	parseResourcePackPrompt (Lnet/minecraft/server/dedicated/DedicatedServerSettings;)Lnet/minecraft/network/chat/Component; a
	repliesToStatus ()Z ai
	runCommand (Ljava/lang/String;)Ljava/lang/String; a
	setPlayerIdleTimeout (I)V c
	shouldInformAdmins ()Z F_
	shouldRconBroadcast ()Z j
	showGui ()V bh
	stopServer ()V t
	storeUsingWhiteList (Z)V i
	tickChildren (Ljava/util/function/BooleanSupplier;)V b
	waitForRetry ()V bs
net/minecraft/server/dedicated/DedicatedServerProperties net/minecraft/server/dedicated/DedicatedServerProperties
	allowFlight g
	allowNether A
	announcePlayerAchievements r
	broadcastConsoleToOps O
	broadcastRconToOps N
	difficulty n
	enableCommandBlock D
	enableJmxMonitoring R
	enableQuery s
	enableRcon u
	enableStatus S
	enforceWhitelist m
	entityBroadcastRangePercentage U
	forceGameMode l
	functionPermissionLevel G
	gamemode o
	hardcore z
	hideOnlinePlayers T
	levelName p
	maxPlayers L
	maxTickTime H
	maxWorldSize P
	motd k
	networkCompressionThreshold M
	onlineMode a
	opPermissionLevel F
	playerIdleTimeout W
	preventProxyConnections b
	pvp f
	queryPort t
	rateLimitPacketsPerSecond I
	rconPassword w
	rconPort v
	requireResourcePack i
	resourcePack h
	resourcePackHash x
	resourcePackPrompt j
	resourcePackSha1 y
	serverIp c
	serverPort q
	simulationDistance K
	spawnAnimals d
	spawnMonsters B
	spawnNpcs e
	spawnProtection E
	syncChunkWrites Q
	textFilteringConfig V
	useNativeTransport C
	viewDistance J
	whiteList X
	worldGenSettings Z
	fromFile (Ljava/nio/file/Path;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getWorldGenSettings (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/Settings; b
net/minecraft/server/dedicated/DedicatedServerSettings net/minecraft/server/dedicated/DedicatedServerSettings
	properties b
	source a
	forceSave ()V b
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	update (Ljava/util/function/UnaryOperator;)Lnet/minecraft/server/dedicated/DedicatedServerSettings; a
net/minecraft/server/level/PlayerMap net/minecraft/server/level/PlayerMap
	players a
	addPlayer (JLnet/minecraft/server/level/ServerPlayer;Z)V a
	getPlayers (J)Ljava/util/Set; a
	ignorePlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	ignored (Lnet/minecraft/server/level/ServerPlayer;)Z d
	ignoredOrUnknown (Lnet/minecraft/server/level/ServerPlayer;)Z c
	removePlayer (JLnet/minecraft/server/level/ServerPlayer;)V a
	unIgnorePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	updatePlayer (JJLnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/server/level/Ticket net/minecraft/server/level/Ticket
	createdTick d
	key c
	ticketLevel b
	type a
	compareTo (Lnet/minecraft/server/level/Ticket;)I a
	getTicketLevel ()I b
	getType ()Lnet/minecraft/server/level/TicketType; a
	setCreatedTick (J)V a
	timedOut (J)Z b
net/minecraft/server/level/TicketType net/minecraft/server/level/TicketType
	DRAGON b
	FORCED d
	LIGHT e
	PLAYER c
	PORTAL f
	POST_TELEPORT g
	START a
	UNKNOWN h
	comparator j
	name i
	timeout k
	create (Ljava/lang/String;Ljava/util/Comparator;)Lnet/minecraft/server/level/TicketType; a
	create (Ljava/lang/String;Ljava/util/Comparator;I)Lnet/minecraft/server/level/TicketType; a
	getComparator ()Ljava/util/Comparator; a
	timeout ()J b
net/minecraft/server/level/TickingTracker net/minecraft/server/level/TickingTracker
	INITIAL_TICKET_LIST_CAPACITY b
	chunks a
	tickets c
	addTicket (JLnet/minecraft/server/level/Ticket;)V a
	addTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	getLevel (J)I c
	getLevel (Lnet/minecraft/world/level/ChunkPos;)I a
	getLevelFromSource (J)I b
	getTicketDebugString (J)Ljava/lang/String; d
	getTicketLevelAt (Lnet/minecraft/util/SortedArraySet;)I a
	getTickets (J)Lnet/minecraft/util/SortedArraySet; g
	removeTicket (JLnet/minecraft/server/level/Ticket;)V b
	removeTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	replacePlayerTicketsLevel (I)V a
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl
	connection b
	server a
	getConnection ()Lnet/minecraft/network/Connection; a
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/packs/repository/PackSource net/minecraft/server/packs/repository/PackSource
	BUILT_IN b
	DEFAULT a
	SERVER d
	WORLD c
	decorating (Ljava/lang/String;)Lnet/minecraft/server/packs/repository/PackSource; a
	passThrough ()Lnet/minecraft/server/packs/repository/PackSource; a
net/minecraft/server/players/PlayerList net/minecraft/server/players/PlayerList
	ALLOW_LOGOUTIVATOR x
	BAN_DATE_FORMAT h
	IPBANLIST_FILE c
	LOGGER a
	OPLIST_FILE d
	SEND_PLAYER_INFO_INTERVAL g
	USERBANLIST_FILE b
	WHITELIST_FILE e
	advancements q
	allowCheatsForAllPlayers w
	bans l
	doWhiteList s
	ipBans m
	maxPlayers f
	ops n
	playerIo r
	players j
	playersByUUID k
	registryHolder t
	sendAllPlayerInfoIn y
	server i
	simulationDistance v
	stats p
	viewDistance u
	whitelist o
	addWorldborderListener (Lnet/minecraft/server/level/ServerLevel;)V a
	broadcast (Lnet/minecraft/world/entity/player/Player;DDDDLnet/minecraft/resources/ResourceKey;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAll (Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAll (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/resources/ResourceKey;)V a
	broadcastMessage (Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;Lnet/minecraft/network/chat/ChatType;Ljava/util/UUID;)V a
	broadcastMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType;Ljava/util/UUID;)V a
	broadcastToAllExceptTeam (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V b
	broadcastToTeam (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V a
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z d
	canPlayerLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	deop (Lcom/mojang/authlib/GameProfile;)V b
	getBans ()Lnet/minecraft/server/players/UserBanList; f
	getIpBans ()Lnet/minecraft/server/players/IpBanList; g
	getMaxPlayers ()I n
	getOpNames ()[Ljava/lang/String; l
	getOps ()Lnet/minecraft/server/players/ServerOpList; k
	getPlayer (Ljava/util/UUID;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerAdvancements (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/PlayerAdvancements; f
	getPlayerByName (Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerCount ()I m
	getPlayerForLogin (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/level/ServerPlayer; e
	getPlayerNamesArray ()[Ljava/lang/String; e
	getPlayerStats (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/stats/ServerStatsCounter; a
	getPlayers ()Ljava/util/List; t
	getPlayersWithAddress (Ljava/lang/String;)Ljava/util/List; b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getSimulationDistance ()I q
	getSingleplayerData ()Lnet/minecraft/nbt/CompoundTag; r
	getViewDistance ()I p
	getWhiteList ()Lnet/minecraft/server/players/UserWhiteList; i
	getWhiteListNames ()[Ljava/lang/String; j
	isAllowCheatsForAllPlayers ()Z v
	isOp (Lcom/mojang/authlib/GameProfile;)Z f
	isUsingWhitelist ()Z o
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z c
	load (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/nbt/CompoundTag; a
	op (Lcom/mojang/authlib/GameProfile;)V a
	placeNewPlayer (Lnet/minecraft/network/Connection;Lnet/minecraft/server/level/ServerPlayer;)V a
	reloadResources ()V u
	reloadWhiteList ()V a
	remove (Lnet/minecraft/server/level/ServerPlayer;)V c
	removeAll ()V s
	respawn (Lnet/minecraft/server/level/ServerPlayer;Z)Lnet/minecraft/server/level/ServerPlayer; a
	save (Lnet/minecraft/server/level/ServerPlayer;)V b
	saveAll ()V h
	sendAllPlayerInfo (Lnet/minecraft/server/level/ServerPlayer;)V e
	sendLevelInfo (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/level/ServerLevel;)V a
	sendPlayerPermissionLevel (Lnet/minecraft/server/level/ServerPlayer;)V d
	sendPlayerPermissionLevel (Lnet/minecraft/server/level/ServerPlayer;I)V a
	setAllowCheatsForAllPlayers (Z)V b
	setSimulationDistance (I)V b
	setUsingWhiteList (Z)V a
	setViewDistance (I)V a
	tick ()V d
	updateEntireScoreboard (Lnet/minecraft/server/ServerScoreboard;Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/server/players/SleepStatus net/minecraft/server/players/SleepStatus
	activePlayers a
	sleepingPlayers b
	amountSleeping ()I b
	areEnoughDeepSleeping (ILjava/util/List;)Z a
	areEnoughSleeping (I)Z a
	removeAllSleepers ()V a
	sleepersNeeded (I)I b
	update (Ljava/util/List;)Z a
net/minecraft/sounds/Music net/minecraft/sounds/Music
	CODEC a
	event b
	maxDelay d
	minDelay c
	replaceCurrentMusic e
	getEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getMaxDelay ()I c
	getMinDelay ()I b
	replaceCurrentMusic ()Z d
net/minecraft/sounds/Musics net/minecraft/sounds/Musics
	CREATIVE b
	CREDITS c
	END e
	END_BOSS d
	FIVE_MINUTES l
	GAME g
	MENU a
	ONE_SECOND h
	TEN_MINUTES j
	THIRTY_SECONDS i
	TWENTY_MINUTES k
	UNDER_WATER f
	createGameMusic (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/sounds/Music; a
net/minecraft/stats/RecipeBook net/minecraft/stats/RecipeBook
	bookSettings c
	highlight b
	known a
	add (Lnet/minecraft/resources/ResourceLocation;)V a
	add (Lnet/minecraft/world/item/crafting/Recipe;)V a
	addHighlight (Lnet/minecraft/resources/ResourceLocation;)V d
	addHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V f
	contains (Lnet/minecraft/resources/ResourceLocation;)Z b
	contains (Lnet/minecraft/world/item/crafting/Recipe;)Z b
	copyOverData (Lnet/minecraft/stats/RecipeBook;)V a
	getBookSettings ()Lnet/minecraft/stats/RecipeBookSettings; a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookMenu;)Z a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookType;)Z b
	isOpen (Lnet/minecraft/world/inventory/RecipeBookType;)Z a
	remove (Lnet/minecraft/resources/ResourceLocation;)V c
	remove (Lnet/minecraft/world/item/crafting/Recipe;)V c
	removeHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V e
	setBookSetting (Lnet/minecraft/world/inventory/RecipeBookType;ZZ)V a
	setBookSettings (Lnet/minecraft/stats/RecipeBookSettings;)V a
	setFiltering (Lnet/minecraft/world/inventory/RecipeBookType;Z)V b
	setOpen (Lnet/minecraft/world/inventory/RecipeBookType;Z)V a
	willHighlight (Lnet/minecraft/world/item/crafting/Recipe;)Z d
net/minecraft/stats/RecipeBookSettings net/minecraft/stats/RecipeBookSettings
	TAG_FIELDS a
	states b
	copy ()Lnet/minecraft/stats/RecipeBookSettings; a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookType;)Z b
	isOpen (Lnet/minecraft/world/inventory/RecipeBookType;)Z a
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/stats/RecipeBookSettings; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/stats/RecipeBookSettings; a
	replaceFrom (Lnet/minecraft/stats/RecipeBookSettings;)V a
	setFiltering (Lnet/minecraft/world/inventory/RecipeBookType;Z)V b
	setOpen (Lnet/minecraft/world/inventory/RecipeBookType;Z)V a
	write (Lnet/minecraft/nbt/CompoundTag;)V b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/tags/GameEventTags net/minecraft/tags/GameEventTags
	HELPER a
	IGNORE_VIBRATIONS_SNEAKING c
	VIBRATIONS b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; a
net/minecraft/util/DebugBuffer net/minecraft/util/DebugBuffer
	data a
	index b
	dump ()Ljava/util/List; a
	push (Ljava/lang/Object;)V a
net/minecraft/util/ExtraCodecs net/minecraft/util/ExtraCodecs
	NON_NEGATIVE_INT a
	POSITIVE_FLOAT c
	POSITIVE_INT b
	checkRangeMinExclusiveWithMessage (Ljava/lang/Number;Ljava/lang/Number;Ljava/util/function/Function;)Ljava/util/function/Function; b
	checkRangeWithMessage (Ljava/lang/Number;Ljava/lang/Number;Ljava/util/function/Function;)Ljava/util/function/Function; a
	floatRangeMinExclusiveWithMessage (FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	idResolverCodec (Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;I)Lcom/mojang/serialization/Codec; a
	intRangeWithMessage (IILjava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	intervalCodec (Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	lazyInitializedCodec (Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec; a
	nonEmptyList (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	nonEmptyListCheck ()Ljava/util/function/Function; a
	nonNullSupplierCheck ()Ljava/util/function/Function; c
	nonNullSupplierListCheck ()Ljava/util/function/Function; b
	orCompressed (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	orElsePartial (Ljava/lang/Object;)Lcom/mojang/serialization/Codec$ResultFunction; a
	overrideLifecycle (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	stringResolverCodec (Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	xor (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
net/minecraft/util/FastBufferedInputStream net/minecraft/util/FastBufferedInputStream
	DEFAULT_BUFFER_SIZE a
	buffer c
	in b
	limit d
	position e
	bytesInBuffer ()I a
	fill ()V b
net/minecraft/util/FileZipper net/minecraft/util/FileZipper
	LOGGER a
	fs d
	outputFile b
	tempFile c
	add (Ljava/nio/file/Path;)V a
	add (Ljava/nio/file/Path;Ljava/io/File;)V a
	add (Ljava/nio/file/Path;Ljava/lang/String;)V a
net/minecraft/util/InclusiveRange net/minecraft/util/InclusiveRange
	INT a
	maxInclusive c
	minInclusive b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	codec (Lcom/mojang/serialization/Codec;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/Codec; a
	contains (Lnet/minecraft/util/InclusiveRange;)Z a
	create (Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/DataResult; a
	isValueInRange (Ljava/lang/Comparable;)Z a
	maxInclusive ()Ljava/lang/Comparable; b
	minInclusive ()Ljava/lang/Comparable; a
net/minecraft/util/LinearCongruentialGenerator net/minecraft/util/LinearCongruentialGenerator
	INCREMENT b
	MULTIPLIER a
	next (JJ)J a
net/minecraft/util/MemoryReserve net/minecraft/util/MemoryReserve
	reserve a
	allocate ()V a
	release ()V b
net/minecraft/util/ModCheck net/minecraft/util/ModCheck
	confidence a
	description b
	confidence ()Lnet/minecraft/util/ModCheck$Confidence; c
	description ()Ljava/lang/String; d
	fullDescription ()Ljava/lang/String; b
	identify (Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/util/ModCheck; a
	merge (Lnet/minecraft/util/ModCheck;)Lnet/minecraft/util/ModCheck; a
	shouldReportAsModified ()Z a
net/minecraft/util/NativeModuleLister net/minecraft/util/NativeModuleLister
	CODEPAGE_MASK d
	DEFAULT_CODEPAGE e
	DEFAULT_LANG c
	LANG_MASK b
	LOGGER a
	addCrashSection (Lnet/minecraft/CrashReportCategory;)V a
	findLangAndCodepage ([I)Ljava/util/OptionalInt; a
	langTableKey (Ljava/lang/String;II)Ljava/lang/String; a
	listModules ()Ljava/util/List; a
	queryVersionString (Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Ljava/lang/String; b
	queryVersionValue (Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Lcom/sun/jna/Pointer; a
	tryGetVersion (Ljava/lang/String;)Ljava/util/Optional; a
net/minecraft/util/SimpleBitStorage net/minecraft/util/SimpleBitStorage
	MAGIC a
	bits c
	data b
	divideAdd h
	divideMul g
	divideShift i
	mask d
	size e
	valuesPerLong f
	cellIndex (I)I b
	copy ()Lnet/minecraft/util/BitStorage; d
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
	unpack ([I)V a
net/minecraft/util/StringDecomposer net/minecraft/util/StringDecomposer
	REPLACEMENT_CHAR a
	STOP_ITERATION b
	feedChar (Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;IC)Z a
	filterBrokenSurrogates (Ljava/lang/String;)Ljava/lang/String; a
	getPlainText (Lnet/minecraft/network/chat/FormattedText;)Ljava/lang/String; a
	iterate (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateBackwards (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z b
	iterateFormatted (Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateFormatted (Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateFormatted (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z c
	iterateFormatted (Lnet/minecraft/network/chat/FormattedText;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
net/minecraft/util/ThreadingDetector net/minecraft/util/ThreadingDetector
	LOGGER a
	fullException f
	lock c
	name b
	stackTraceLock d
	threadThatFailedToAcquire e
	checkAndLock ()V a
	checkAndUnlock ()V b
	makeThreadingException (Ljava/lang/String;Ljava/lang/Thread;)Lnet/minecraft/ReportedException; a
	stackTrace (Ljava/lang/Thread;)Ljava/lang/String; a
net/minecraft/util/Unit net/minecraft/util/Unit
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/util/Unit; a
net/minecraft/util/ZeroBitStorage net/minecraft/util/ZeroBitStorage
	RAW a
	size b
	copy ()Lnet/minecraft/util/BitStorage; d
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
	unpack ([I)V a
net/minecraft/util/datafix/DataFixTypes net/minecraft/util/datafix/DataFixTypes
	$VALUES n
	ADVANCEMENTS i
	CHUNK c
	ENTITY_CHUNK l
	HOTBAR d
	LEVEL a
	OPTIONS e
	PLAYER b
	POI_CHUNK j
	SAVED_DATA h
	STATS g
	STRUCTURE f
	WORLD_GEN_SETTINGS k
	type m
	$values ()[Lnet/minecraft/util/datafix/DataFixTypes; b
	getType ()Lcom/mojang/datafixers/DSL$TypeReference; a
net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix
	flagKey c
	flagValue b
	name a
	typeReference d
net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; b
net/minecraft/util/datafix/fixes/CavesAndCliffsRenames net/minecraft/util/datafix/fixes/CavesAndCliffsRenames
	RENAMES a
net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix
	BIOMES_BY_ID s
	BIOME_CONTAINER_LAYER_SIZE p
	BIOME_CONTAINER_SIZE q
	BIOME_CONTAINER_TOP_LAYER_OFFSET r
	BLOCKS_BEFORE_FEATURE_STATUS o
	BLOCKS_PER_SECTION b
	DATAFIXER_CONTEXT_TAG a
	DEFAULT_BIOME c
	HEIGHTMAP_BITS i
	HEIGHTMAP_MASK j
	HEIGHTMAP_OFFSET k
	HEIGHTMAP_TYPES l
	LONGS_PER_SECTION h
	NAME d
	NEW_MIN_SECTION_Y g
	NEW_SECTION_COUNT f
	OLD_SECTION_COUNT e
	STATUS_IS_OR_AFTER_NOISE n
	STATUS_IS_OR_AFTER_SURFACE m
	addPaddingEntries (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	ceillog2 (I)I a
	getBiomeContainers (Lcom/mojang/serialization/Dynamic;ZILorg/apache/commons/lang3/mutable/MutableBoolean;)[Lcom/mojang/serialization/Dynamic; a
	getFixedHeightmap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	getOldBiome ([II)I a
	makeBiomeContainer (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lcom/mojang/serialization/Dynamic; a
	makeOptimizedPalettedContainer (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	makePalettedContainer (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	makePalettedContainer (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	padPaletteEntries (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/util/List;)Lcom/mojang/serialization/Dynamic; a
	predictChunkStatusBeforeSurface (Lcom/mojang/serialization/Dynamic;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic; a
	shiftUpgradeData (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateCarvingMasks (Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	updateChunkTag (Lcom/mojang/serialization/Dynamic;ZZZLjava/util/function/Supplier;)Lcom/mojang/serialization/Dynamic; a
	updateHeightmaps (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/ChunkProtoTickListFix net/minecraft/util/datafix/fixes/ChunkProtoTickListFix
	ALWAYS_WATERLOGGED b
	SECTION_WIDTH a
	createTick (Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIIILjava/util/function/Function;)Lcom/mojang/serialization/Dynamic; a
	getBlock (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; a
	getLiquid (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; b
	makeTickList (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;BIILjava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix
	FEATURES c
	INDEX_PATTERN a
	PIECE_TYPE b
	fixFeature (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	get (Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic; a
	getReplacement (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; a
	updateChildren (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateChildren (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/StatsRenameFix net/minecraft/util/datafix/fixes/StatsRenameFix
	name a
	renames b
	createCriteriaRule ()Lcom/mojang/datafixers/TypeRewriteRule; a
	createStatRule ()Lcom/mojang/datafixers/TypeRewriteRule; b
net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix
	NAME b
	WAS_PREVIOUSLY_INCREASED_KEY a
	updateLayers (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/profiling/jfr/Environment net/minecraft/util/profiling/jfr/Environment
	$VALUES d
	CLIENT a
	SERVER b
	description c
	$values ()[Lnet/minecraft/util/profiling/jfr/Environment; b
	from (Lnet/minecraft/server/MinecraftServer;)Lnet/minecraft/util/profiling/jfr/Environment; a
	getDescription ()Ljava/lang/String; a
net/minecraft/util/profiling/jfr/JfrProfiler net/minecraft/util/profiling/jfr/JfrProfiler
	CUSTOM_EVENTS g
	DATE_TIME_FORMATTER i
	FLIGHT_RECORDER_CONFIG h
	INSTANCE j
	LOGGER f
	NETWORK_CATEGORY d
	ROOT_CATEGORY a
	TICK_CATEGORY c
	WORLD_GEN_CATEGORY b
	currentAverageTickTime l
	networkTrafficByAddress m
	recording k
	getInstance ()Lnet/minecraft/util/profiling/jfr/JfrProfiler; a
	isAvailable ()Z d
	isRunning ()Z c
	networkStatFor (Ljava/net/SocketAddress;)Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation; a
	onChunkGenerate (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; a
	onPacketReceived (IILjava/net/SocketAddress;I)V a
	onPacketSent (IILjava/net/SocketAddress;I)V b
	onServerTick (F)V a
	onWorldLoadedStarted ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; e
	setupSummaryListener ()V f
	start (Ljava/io/Reader;Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	start (Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	stop ()Ljava/nio/file/Path; b
net/minecraft/util/profiling/jfr/JvmProfiler net/minecraft/util/profiling/jfr/JvmProfiler
	INSTANCE e
	isAvailable ()Z d
	isRunning ()Z c
	onChunkGenerate (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; a
	onPacketReceived (IILjava/net/SocketAddress;I)V a
	onPacketSent (IILjava/net/SocketAddress;I)V b
	onServerTick (F)V a
	onWorldLoadedStarted ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; e
	start (Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	stop ()Ljava/nio/file/Path; b
net/minecraft/util/profiling/jfr/Percentiles net/minecraft/util/profiling/jfr/Percentiles
	DEFAULT_INDEXES a
	evaluate ([D)Ljava/util/Map; a
	evaluate ([J)Ljava/util/Map; a
	sorted (Ljava/util/Map;)Ljava/util/Map; a
net/minecraft/util/profiling/jfr/SummaryReporter net/minecraft/util/profiling/jfr/SummaryReporter
	LOGGER a
	onDeregistration b
	infoWithFallback (Lorg/apache/logging/log4j/util/Supplier;)V a
	log4jIsActive ()Z a
	recordingStopped (Ljava/nio/file/Path;)V a
	warnWithFallback (Lorg/apache/logging/log4j/util/Supplier;Ljava/lang/Throwable;)V a
net/minecraft/util/profiling/jfr/parse/JfrStatsParser net/minecraft/util/profiling/jfr/parse/JfrStatsParser
	chunkGenStats c
	cpuLoadStat d
	fileReads h
	fileWrites g
	garbageCollections i
	gcHeapStats k
	gcTotalDuration j
	receivedPackets e
	recordingEnded b
	recordingStarted a
	sentPackets f
	threadAllocationStats l
	tickTimes m
	worldCreationDuration n
	appendFileIO (Ljdk/jfr/consumer/RecordedEvent;Ljava/util/List;Ljava/lang/String;)V a
	capture (Ljava/util/stream/Stream;)V a
	collectPacketStats (Ljava/time/Duration;Ljava/util/Map;)Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; a
	incrementPacket (Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V a
	parse (Ljava/nio/file/Path;)Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult; a
	results ()Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult; a
net/minecraft/util/profiling/jfr/parse/JfrStatsResult net/minecraft/util/profiling/jfr/parse/JfrStatsResult
	chunkGenStats m
	cpuLoadStats f
	fileReads l
	fileWrites k
	heapSummary g
	receivedPacketsSummary i
	recordingDuration c
	recordingEnded b
	recordingStarted a
	sentPacketsSummary j
	threadAllocationSummary h
	tickTimes e
	worldCreationDuration d
	asJson ()Ljava/lang/String; b
	chunkGenStats ()Ljava/util/List; o
	chunkGenSummary ()Ljava/util/List; a
	cpuLoadStats ()Ljava/util/List; h
	fileReads ()Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary; n
	fileWrites ()Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary; m
	heapSummary ()Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary; i
	receivedPacketsSummary ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; k
	recordingDuration ()Ljava/time/Duration; e
	recordingEnded ()Ljava/time/Instant; d
	recordingStarted ()Ljava/time/Instant; c
	sentPacketsSummary ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; l
	threadAllocationSummary ()Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary; j
	tickTimes ()Ljava/util/List; g
	worldCreationDuration ()Ljava/time/Duration; f
net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer
	BYTES_PER_SECOND b
	COUNT c
	COUNT_PER_SECOND f
	DURATION_NANOS_TOTAL d
	TOTAL_BYTES e
	gson a
	chunkGen (Ljava/util/List;)Lcom/google/gson/JsonElement; a
	cpu (Ljava/util/List;)Lcom/google/gson/JsonElement; c
	fileIO (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Lcom/google/gson/JsonElement; b
	fileIoSummary (Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary;)Lcom/google/gson/JsonElement; a
	format (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Ljava/lang/String; a
	heap (Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary;)Lcom/google/gson/JsonElement; a
	network (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Lcom/google/gson/JsonElement; c
	packets (Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary;)Lcom/google/gson/JsonElement; a
	serverTicks (Ljava/util/List;)Lcom/google/gson/JsonElement; b
	threadAllocations (Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary;)Lcom/google/gson/JsonElement; a
net/minecraft/util/profiling/jfr/stats/ChunkGenStat net/minecraft/util/profiling/jfr/stats/ChunkGenStat
	chunkPos b
	duration a
	level e
	status d
	worldPos c
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; b
	duration ()Ljava/time/Duration; a
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/ChunkGenStat; a
	level ()Ljava/lang/String; e
	status ()Lnet/minecraft/world/level/chunk/ChunkStatus; d
	worldPos ()Lnet/minecraft/server/level/ColumnPos; c
net/minecraft/util/profiling/jfr/stats/CpuLoadStat net/minecraft/util/profiling/jfr/stats/CpuLoadStat
	jvm a
	system c
	userJvm b
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/CpuLoadStat; a
	jvm ()D a
	system ()D c
	userJvm ()D b
net/minecraft/util/profiling/jfr/stats/FileIOStat net/minecraft/util/profiling/jfr/stats/FileIOStat
	bytes c
	duration a
	path b
	bytes ()J c
	duration ()Ljava/time/Duration; a
	path ()Ljava/lang/String; b
	summary (Ljava/time/Duration;Ljava/util/List;)Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary; a
net/minecraft/util/profiling/jfr/stats/GcHeapStat net/minecraft/util/profiling/jfr/stats/GcHeapStat
	heapUsed b
	timestamp a
	timing c
	calculateAllocationRatePerSecond (Ljava/util/List;)D a
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat; a
	heapUsed ()J b
	summary (Ljava/time/Duration;Ljava/util/List;Ljava/time/Duration;I)Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary; a
	timestamp ()Ljava/time/Instant; a
	timing ()Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing; c
net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary
	largestSizeContributors b
	recordingDuration c
	totalPacketCountAndSize a
	getCountsPerSecond ()D a
	getSizePerSecond ()D b
	getTotalCount ()J c
	getTotalSize ()J d
	largestSizeContributors ()Ljava/util/List; e
net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat
	UNKNOWN_THREAD d
	threadName b
	timestamp a
	totalBytes c
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat; a
	summary (Ljava/util/List;)Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary; a
	threadName ()Ljava/lang/String; b
	timestamp ()Ljava/time/Instant; a
	totalBytes ()J c
net/minecraft/util/profiling/jfr/stats/TickTimeStat net/minecraft/util/profiling/jfr/stats/TickTimeStat
	currentAverage b
	timestamp a
	currentAverage ()Ljava/time/Duration; b
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/TickTimeStat; a
	timestamp ()Ljava/time/Instant; a
net/minecraft/util/profiling/jfr/stats/TimedStatSummary net/minecraft/util/profiling/jfr/stats/TimedStatSummary
	count d
	fastest a
	percentilesNanos e
	secondSlowest c
	slowest b
	totalDuration f
	count ()I d
	fastest ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; a
	percentilesNanos ()Ljava/util/Map; e
	secondSlowest ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; c
	slowest ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; b
	summary (Ljava/util/List;)Lnet/minecraft/util/profiling/jfr/stats/TimedStatSummary; a
	totalDuration ()Ljava/time/Duration; f
net/minecraft/util/profiling/metrics/MetricCategory net/minecraft/util/profiling/metrics/MetricCategory
	$VALUES j
	CHUNK_RENDERING f
	CHUNK_RENDERING_DISPATCHING g
	CPU h
	EVENT_LOOPS b
	JVM e
	MAIL_BOXES c
	PATH_FINDING a
	TICK_LOOP d
	description i
	$values ()[Lnet/minecraft/util/profiling/metrics/MetricCategory; b
	getDescription ()Ljava/lang/String; a
net/minecraft/util/profiling/metrics/MetricSampler net/minecraft/util/profiling/metrics/MetricSampler
	beforeTick h
	category c
	currentValue i
	isRunning g
	name b
	sampler d
	thresholdTest a
	ticks e
	values f
	builder (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
	create (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	create (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/function/DoubleSupplier;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	getCategory ()Lnet/minecraft/util/profiling/metrics/MetricCategory; e
	getName ()Ljava/lang/String; d
	getSampler ()Ljava/util/function/DoubleSupplier; c
	onEndTick (I)V a
	onFinished ()V b
	onStartTick ()V a
	result ()Lnet/minecraft/util/profiling/metrics/MetricSampler$SamplerResult; f
	triggersThreshold ()Z g
	verifyRunning ()V h
net/minecraft/util/profiling/metrics/MetricsRegistry net/minecraft/util/profiling/metrics/MetricsRegistry
	INSTANCE a
	measuredInstances b
	add (Lnet/minecraft/util/profiling/metrics/ProfilerMeasured;)V a
	aggregateDuplicates (Ljava/util/Map;)Ljava/util/List; a
	getRegisteredSamplers ()Ljava/util/List; a
net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder
	PROFILING_MAX_DURATION_SECONDS a
	currentTick l
	deadlineNano k
	deviationsBySampler c
	globalOnReportFinished b
	ioExecutor e
	killSwitch n
	metricsPersister f
	metricsSamplerProvider i
	onProfilingEnd g
	onReportFinished h
	singleTickProfiler m
	taskProfiler d
	thisTickSamplers o
	wallTimeSource j
	createStarted (Lnet/minecraft/util/profiling/metrics/MetricsSamplerProvider;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lnet/minecraft/util/profiling/metrics/storage/MetricsPersister;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lnet/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder; a
	end ()V a
	endTick ()V c
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; e
	isRecording ()Z d
	registerGlobalCompletionCallback (Ljava/util/function/Consumer;)V a
	scheduleSaveResults (Lnet/minecraft/util/profiling/ProfileResults;)V a
	startTick ()V b
	verifyStarted ()V f
net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder
	INSTANCE a
	end ()V a
	endTick ()V c
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; e
	isRecording ()Z d
	startTick ()V b
net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter
	previouslyFoundSamplerNames a
	newSamplersFoundInProfiler (Ljava/util/function/Supplier;)Ljava/util/Set; a
	samplerForProfilingPath (Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider
	LOGGER a
	samplerFactory c
	samplers b
	runtimeIndependentSamplers ()Ljava/util/Set; a
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
	tickTimeSampler (Ljava/util/function/LongSupplier;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
net/minecraft/util/profiling/metrics/storage/MetricsPersister net/minecraft/util/profiling/metrics/storage/MetricsPersister
	DEVIATIONS_DIR_NAME c
	LOGGER e
	METRICS_DIR_NAME b
	PROFILING_RESULTS_DIR a
	PROFILING_RESULT_FILENAME d
	rootFolderName f
	saveCategory (Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/List;Ljava/nio/file/Path;)V a
	saveDeviations (Ljava/util/Map;Ljava/nio/file/Path;)V a
	saveMetrics (Ljava/util/Set;Ljava/nio/file/Path;)V a
	saveProfilingTaskExecutionResult (Lnet/minecraft/util/profiling/ProfileResults;Ljava/nio/file/Path;)V a
	saveReports (Ljava/util/Set;Ljava/util/Map;Lnet/minecraft/util/profiling/ProfileResults;)Ljava/nio/file/Path; a
net/minecraft/util/profiling/metrics/storage/RecordedDeviation net/minecraft/util/profiling/metrics/storage/RecordedDeviation
	profilerResultAtTick c
	tick b
	timestamp a
net/minecraft/util/random/Weight net/minecraft/util/random/Weight
	CODEC a
	LOGGER c
	ONE b
	value d
	asInt ()I a
	of (I)Lnet/minecraft/util/random/Weight; a
	validateWeight (I)V b
net/minecraft/util/random/WeightedRandomList net/minecraft/util/random/WeightedRandomList
	items b
	totalWeight a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; c
	create ()Lnet/minecraft/util/random/WeightedRandomList; c
	create (Ljava/util/List;)Lnet/minecraft/util/random/WeightedRandomList; a
	create ([Lnet/minecraft/util/random/WeightedEntry;)Lnet/minecraft/util/random/WeightedRandomList; a
	getRandom (Ljava/util/Random;)Ljava/util/Optional; b
	isEmpty ()Z d
	unwrap ()Ljava/util/List; e
net/minecraft/util/valueproviders/BiasedToBottomInt net/minecraft/util/valueproviders/BiasedToBottomInt
	CODEC a
	maxInclusive f
	minInclusive b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (II)Lnet/minecraft/util/valueproviders/BiasedToBottomInt; a
	sample (Ljava/util/Random;)I a
net/minecraft/util/valueproviders/ClampedInt net/minecraft/util/valueproviders/ClampedInt
	CODEC a
	maxInclusive g
	minInclusive f
	source b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (Lnet/minecraft/util/valueproviders/IntProvider;II)Lnet/minecraft/util/valueproviders/ClampedInt; a
	sample (Ljava/util/Random;)I a
net/minecraft/util/valueproviders/ClampedNormalFloat net/minecraft/util/valueproviders/ClampedNormalFloat
	CODEC a
	deviation d
	max f
	mean b
	min e
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FFFF)Lnet/minecraft/util/valueproviders/ClampedNormalFloat; a
	sample (Ljava/util/Random;)F a
	sample (Ljava/util/Random;FFFF)F a
net/minecraft/util/valueproviders/ClampedNormalInt net/minecraft/util/valueproviders/ClampedNormalInt
	CODEC a
	deviation f
	max_inclusive h
	mean b
	min_inclusive g
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (FFII)Lnet/minecraft/util/valueproviders/ClampedNormalInt; a
	sample (Ljava/util/Random;)I a
	sample (Ljava/util/Random;FFFF)I a
net/minecraft/util/valueproviders/ConstantFloat net/minecraft/util/valueproviders/ConstantFloat
	CODEC b
	ZERO a
	value d
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	getValue ()F d
	of (F)Lnet/minecraft/util/valueproviders/ConstantFloat; a
	sample (Ljava/util/Random;)F a
net/minecraft/util/valueproviders/ConstantInt net/minecraft/util/valueproviders/ConstantInt
	CODEC b
	ZERO a
	value f
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	getValue ()I d
	of (I)Lnet/minecraft/util/valueproviders/ConstantInt; a
	sample (Ljava/util/Random;)I a
net/minecraft/util/valueproviders/FloatProvider net/minecraft/util/valueproviders/FloatProvider
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	codec (FF)Lcom/mojang/serialization/Codec; a
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	sample (Ljava/util/Random;)F a
net/minecraft/util/valueproviders/FloatProviderType net/minecraft/util/valueproviders/FloatProviderType
	CLAMPED_NORMAL c
	CONSTANT a
	TRAPEZOID d
	UNIFORM b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/valueproviders/FloatProviderType; a
net/minecraft/util/valueproviders/IntProvider net/minecraft/util/valueproviders/IntProvider
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	NON_NEGATIVE_CODEC d
	POSITIVE_CODEC e
	codec (II)Lcom/mojang/serialization/Codec; b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	sample (Ljava/util/Random;)I a
net/minecraft/util/valueproviders/IntProviderType net/minecraft/util/valueproviders/IntProviderType
	BIASED_TO_BOTTOM c
	CLAMPED d
	CLAMPED_NORMAL f
	CONSTANT a
	UNIFORM b
	WEIGHTED_LIST e
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/valueproviders/IntProviderType; a
net/minecraft/util/valueproviders/TrapezoidFloat net/minecraft/util/valueproviders/TrapezoidFloat
	CODEC a
	max d
	min b
	plateau e
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FFF)Lnet/minecraft/util/valueproviders/TrapezoidFloat; a
	sample (Ljava/util/Random;)F a
net/minecraft/util/valueproviders/UniformFloat net/minecraft/util/valueproviders/UniformFloat
	CODEC a
	maxExclusive d
	minInclusive b
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FF)Lnet/minecraft/util/valueproviders/UniformFloat; b
	sample (Ljava/util/Random;)F a
net/minecraft/util/valueproviders/UniformInt net/minecraft/util/valueproviders/UniformInt
	CODEC a
	maxInclusive f
	minInclusive b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (II)Lnet/minecraft/util/valueproviders/UniformInt; a
	sample (Ljava/util/Random;)I a
net/minecraft/util/valueproviders/WeightedListInt net/minecraft/util/valueproviders/WeightedListInt
	CODEC a
	distribution b
	maxValue g
	minValue f
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	sample (Ljava/util/Random;)I a
net/minecraft/util/worldupdate/WorldUpgrader net/minecraft/util/worldupdate/WorldUpgrader
	LOGGER a
	REGEX p
	THREAD_FACTORY b
	converted l
	dataFixer g
	eraseCache d
	finished i
	levelStorage e
	overworldDataStorage q
	progress j
	progressMap n
	running h
	skipped m
	status o
	thread f
	totalChunks k
	worldGenSettings c
	cancel ()V a
	dimensionProgress (Lnet/minecraft/resources/ResourceKey;)F a
	getAllChunkPos (Lnet/minecraft/resources/ResourceKey;)Ljava/util/List; b
	getConverted ()I f
	getProgress ()F d
	getSkipped ()I g
	getStatus ()Lnet/minecraft/network/chat/Component; h
	getTotalChunks ()I e
	isFinished ()Z b
	levels ()Lcom/google/common/collect/ImmutableSet; c
	work ()V i
net/minecraft/world/damagesource/CombatEntry net/minecraft/world/damagesource/CombatEntry
	damage c
	fallDistance f
	health d
	location e
	source a
	time b
	getAttacker ()Lnet/minecraft/world/entity/Entity; i
	getAttackerName ()Lnet/minecraft/network/chat/Component; h
	getDamage ()F c
	getFallDistance ()F j
	getHealthAfterDamage ()F e
	getHealthBeforeDamage ()F d
	getLocation ()Ljava/lang/String; g
	getSource ()Lnet/minecraft/world/damagesource/DamageSource; a
	getTime ()I b
	isCombatRelated ()Z f
net/minecraft/world/damagesource/CombatTracker net/minecraft/world/damagesource/CombatTracker
	RESET_COMBAT_STATUS_TIME b
	RESET_DAMAGE_STATUS_TIME a
	combatEndTime g
	combatStartTime f
	entries c
	inCombat h
	lastDamageTime e
	mob d
	nextLocation j
	takingDamage i
	getCombatDuration ()I f
	getDeathMessage ()Lnet/minecraft/network/chat/Component; b
	getFallLocation (Lnet/minecraft/world/damagesource/CombatEntry;)Ljava/lang/String; a
	getKiller ()Lnet/minecraft/world/entity/LivingEntity; c
	getKillerId ()I j
	getLastEntry ()Lnet/minecraft/world/damagesource/CombatEntry; i
	getMob ()Lnet/minecraft/world/entity/LivingEntity; h
	getMostSignificantFall ()Lnet/minecraft/world/damagesource/CombatEntry; k
	isInCombat ()Z e
	isTakingDamage ()Z d
	prepareForDamage ()V a
	recheckStatus ()V g
	recordDamage (Lnet/minecraft/world/damagesource/DamageSource;FF)V a
	resetPreparedStatus ()V l
net/minecraft/world/damagesource/DamageSource net/minecraft/world/damagesource/DamageSource
	ANVIL q
	CACTUS j
	CRAMMING g
	DRAGON_BREATH s
	DROWN h
	DRY_OUT t
	FALL k
	FALLING_BLOCK r
	FALLING_STALACTITE w
	FLY_INTO_WALL l
	FREEZE v
	GENERIC n
	HOT_FLOOR e
	IN_FIRE a
	IN_WALL f
	LAVA d
	LIGHTNING_BOLT b
	MAGIC o
	ON_FIRE c
	OUT_OF_WORLD m
	STALAGMITE x
	STARVE i
	SWEET_BERRY_BUSH u
	WITHER p
	bypassArmor A
	bypassInvul B
	bypassMagic C
	damageHelmet z
	exhaustion D
	isExplosion I
	isFall J
	isFireSource E
	isMagic H
	isProjectile F
	msgId y
	noAggro K
	scalesWithDifficulty G
	arrow (Lnet/minecraft/world/entity/projectile/AbstractArrow;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	badRespawnPointExplosion ()Lnet/minecraft/world/damagesource/DamageSource; a
	bypassArmor ()Lnet/minecraft/world/damagesource/DamageSource; m
	bypassInvul ()Lnet/minecraft/world/damagesource/DamageSource; o
	bypassMagic ()Lnet/minecraft/world/damagesource/DamageSource; p
	damageHelmet ()Lnet/minecraft/world/damagesource/DamageSource; n
	explosion (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; d
	explosion (Lnet/minecraft/world/level/Explosion;)Lnet/minecraft/world/damagesource/DamageSource; a
	fireball (Lnet/minecraft/world/entity/projectile/Fireball;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	fireworks (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	getDirectEntity ()Lnet/minecraft/world/entity/Entity; k
	getEntity ()Lnet/minecraft/world/entity/Entity; l
	getFoodExhaustion ()F h
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
	getMsgId ()Ljava/lang/String; u
	getSourcePosition ()Lnet/minecraft/world/phys/Vec3; C
	indirectMagic (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; c
	indirectMobAttack (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; a
	isBypassArmor ()Z f
	isBypassInvul ()Z i
	isBypassMagic ()Z j
	isCreativePlayer ()Z B
	isDamageHelmet ()Z g
	isExplosion ()Z d
	isFall ()Z z
	isFire ()Z s
	isMagic ()Z x
	isNoAggro ()Z t
	isProjectile ()Z b
	mobAttack (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; c
	playerAttack (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/damagesource/DamageSource; a
	scalesWithDifficulty ()Z w
	setExplosion ()Lnet/minecraft/world/damagesource/DamageSource; e
	setIsFall ()Lnet/minecraft/world/damagesource/DamageSource; A
	setIsFire ()Lnet/minecraft/world/damagesource/DamageSource; q
	setMagic ()Lnet/minecraft/world/damagesource/DamageSource; y
	setNoAggro ()Lnet/minecraft/world/damagesource/DamageSource; r
	setProjectile ()Lnet/minecraft/world/damagesource/DamageSource; c
	setScalesWithDifficulty ()Lnet/minecraft/world/damagesource/DamageSource; v
	sting (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; b
	thorns (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	thrown (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; b
	trident (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	witherSkull (Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
net/minecraft/world/damagesource/EntityDamageSource net/minecraft/world/damagesource/EntityDamageSource
	entity z
	isThorns A
	getEntity ()Lnet/minecraft/world/entity/Entity; l
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
	getSourcePosition ()Lnet/minecraft/world/phys/Vec3; C
	isThorns ()Z E
	scalesWithDifficulty ()Z w
	setThorns ()Lnet/minecraft/world/damagesource/EntityDamageSource; D
net/minecraft/world/effect/MobEffects net/minecraft/world/effect/MobEffects
	ABSORPTION v
	BAD_OMEN E
	BLINDNESS o
	CONDUIT_POWER C
	CONFUSION i
	DAMAGE_BOOST e
	DAMAGE_RESISTANCE k
	DIG_SLOWDOWN d
	DIG_SPEED c
	DOLPHINS_GRACE D
	FIRE_RESISTANCE l
	GLOWING x
	HARM g
	HEAL f
	HEALTH_BOOST u
	HERO_OF_THE_VILLAGE F
	HUNGER q
	INVISIBILITY n
	JUMP h
	LEVITATION y
	LUCK z
	MOVEMENT_SLOWDOWN b
	MOVEMENT_SPEED a
	NIGHT_VISION p
	POISON s
	REGENERATION j
	SATURATION w
	SLOW_FALLING B
	UNLUCK A
	WATER_BREATHING m
	WEAKNESS r
	WITHER t
	register (ILjava/lang/String;Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/world/entity/Entity$MovementEmission net/minecraft/world/entity/Entity$MovementEmission
	$VALUES g
	ALL d
	EVENTS c
	NONE a
	SOUNDS b
	events f
	sounds e
	$values ()[Lnet/minecraft/world/entity/Entity$MovementEmission; d
	emitsAnything ()Z a
	emitsEvents ()Z b
	emitsSounds ()Z c
net/minecraft/world/entity/Entity$RemovalReason net/minecraft/world/entity/Entity$RemovalReason
	$VALUES h
	CHANGED_DIMENSION e
	DISCARDED b
	KILLED a
	UNLOADED_TO_CHUNK c
	UNLOADED_WITH_PLAYER d
	destroy f
	save g
	$values ()[Lnet/minecraft/world/entity/Entity$RemovalReason; c
	shouldDestroy ()Z a
	shouldSave ()Z b
net/minecraft/world/entity/Entity net/minecraft/world/entity/Entity
	BASE_TICKS_REQUIRED_TO_FREEZE o
	BOARDING_COOLDOWN j
	BREATHING_DISTANCE_BELOW_EYES n
	DATA_AIR_SUPPLY_ID aK
	DATA_CUSTOM_NAME aL
	DATA_CUSTOM_NAME_VISIBLE aM
	DATA_NO_GRAVITY aO
	DATA_POSE ae
	DATA_SHARED_FLAGS_ID aa
	DATA_SILENT aN
	DATA_TICKS_FROZEN aP
	DEFAULT_BB_HEIGHT G
	DEFAULT_BB_WIDTH F
	DELTA_AFFECTED_BY_BLOCKS_BELOW m
	EMPTY_LIST c
	ENTITY_COUNTER b
	FLAG_FALL_FLYING ad
	FLAG_GLOWING ac
	FLAG_INVISIBLE aJ
	FLAG_ONFIRE ab
	FLAG_SHIFT_KEY_DOWN aG
	FLAG_SPRINTING aH
	FLAG_SWIMMING aI
	FREEZE_HURT_FREQUENCY p
	ID_TAG h
	INITIAL_AABB d
	LAVA_FAST_FLOW_SCALE ap
	LAVA_SLOW_FLOW_SCALE aq
	LOGGER g
	MAX_ENTITY_TAG_COUNT l
	PASSENGERS_TAG i
	TOTAL_AIR_SUPPLY k
	UUID_TAG q
	WATER_FLOW_SCALE e
	bb aC
	blockPosition ax
	blocksBuilding r
	boardingCooldown s
	chunkPosition ay
	crystalSoundIntensity ba
	deltaMovement az
	dimensions aY
	entityData Z
	eyeHeight aZ
	fallDistance L
	feetBlockState bd
	firstTick Y
	fluidHeight U
	fluidOnEyes W
	flyDist K
	hasGlowingTag aU
	hasImpulse ag
	hasVisualFire bc
	horizontalCollision A
	hurtMarked D
	id at
	invulnerable aT
	invulnerableTime X
	isInPowderSnow am
	isInsidePortal ah
	lastCrystalSoundPlayTick bb
	level t
	levelCallback aQ
	maxUpStep P
	minorHorizontalCollision C
	moveDist J
	nextStep aE
	noCulling af
	noPhysics Q
	onGround z
	packetCoordinates aR
	passengers au
	pistonDeltas aW
	pistonDeltasGameTime aX
	portalCooldown aS
	portalEntrancePos aj
	portalTime ai
	position aw
	random R
	remainingFireTicks aF
	removalReason aD
	stringUUID al
	stuckSpeedMultiplier E
	tags aV
	tickCount S
	type as
	uuid ak
	vehicle av
	verticalCollision B
	viewScale ar
	walkDist I
	walkDistO H
	wasEyeInWater V
	wasInPowderSnow an
	wasOnFire ao
	wasTouchingWater T
	xOld M
	xRot aB
	xRotO y
	xo u
	yOld N
	yRot aA
	yRotO x
	yo v
	zOld O
	zo w
	absMoveTo (DDD)V g
	absMoveTo (DDDFF)V a
	acceptsFailure ()Z j_
	acceptsSuccess ()Z i_
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addPassenger (Lnet/minecraft/world/entity/Entity;)V m
	addTag (Ljava/lang/String;)Z a
	animateHurt ()V bA
	applyPistonMovementRestriction (Lnet/minecraft/core/Direction$Axis;D)D a
	awardKillScore (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V a
	baseTick ()V an
	blockPosition ()Lnet/minecraft/core/BlockPos; cW
	broadcastToPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z a
	calculateUpVector (FF)Lnet/minecraft/world/phys/Vec3; c
	calculateViewVector (FF)Lnet/minecraft/world/phys/Vec3; b
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z o
	canBeCollidedWith ()Z bn
	canChangeDimensions ()Z ci
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	canEnterPose (Lnet/minecraft/world/entity/Pose;)Z c
	canFreeze ()Z dl
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	canSpawnSprintParticle ()Z ba
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	checkDespawn ()V dj
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkInsideBlocks ()V aI
	checkOutOfWorld ()V ao
	chunkPosition ()Lnet/minecraft/world/level/ChunkPos; cZ
	clearFire ()V au
	closerThan (Lnet/minecraft/world/entity/Entity;D)Z a
	collide (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; h
	collideBoundingBox (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/Level;Ljava/util/List;)Lnet/minecraft/world/phys/Vec3; a
	collideWithShapes (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/List;)Lnet/minecraft/world/phys/Vec3; a
	copyPosition (Lnet/minecraft/world/entity/Entity;)V s
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; cQ
	createHoverEvent ()Lnet/minecraft/network/chat/HoverEvent; cv
	defineSynchedData ()V a_
	discard ()V ah
	dismountTo (DDD)V a
	displayFireAnimation ()Z cl
	distanceTo (Lnet/minecraft/world/entity/Entity;)F e
	distanceToSqr (DDD)D h
	distanceToSqr (Lnet/minecraft/world/entity/Entity;)D f
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D f
	doEnchantDamageEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V a
	doWaterSplashEffect ()V aY
	ejectPassengers ()V bs
	eyeBlockPosition ()Lnet/minecraft/core/BlockPos; cY
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	findDimensionEntryPoint (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/portal/PortalInfo; a
	fireImmune ()Z aP
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAirSupply ()I bY
	getAllSlots ()Ljava/lang/Iterable; bD
	getArmorSlots ()Ljava/lang/Iterable; bC
	getBbHeight ()F cU
	getBbWidth ()F cT
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getBlockJumpFactor ()F aB
	getBlockPosBelowThatAffectsMyMovement ()Lnet/minecraft/core/BlockPos; aD
	getBlockSpeedFactor ()F aC
	getBlockStateOn ()Lnet/minecraft/world/level/block/state/BlockState; aZ
	getBlockX ()I db
	getBlockY ()I dd
	getBlockZ ()I dh
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; cw
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cx
	getBoundingBoxForPose (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/phys/AABB; d
	getBrightness ()F bd
	getCollisionHorizontalEscapeVector (DDF)Lnet/minecraft/world/phys/Vec3; a
	getCommandSenderWorld ()Lnet/minecraft/world/level/Level; cA
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cE
	getCustomName ()Lnet/minecraft/network/chat/Component; Z
	getDeltaMovement ()Lnet/minecraft/world/phys/Vec3; da
	getDimensionChangingDelay ()I bz
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDirection ()Lnet/minecraft/core/Direction; ct
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; C_
	getEncodeId ()Ljava/lang/String; bk
	getEntityData ()Lnet/minecraft/network/syncher/SynchedEntityData; ai
	getExitPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; a
	getEyeHeight ()F cy
	getEyeHeight (Lnet/minecraft/world/entity/Pose;)F e
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getEyePosition ()Lnet/minecraft/world/phys/Vec3; bg
	getEyePosition (F)Lnet/minecraft/world/phys/Vec3; i
	getEyeY ()D dg
	getFeetBlockState ()Lnet/minecraft/world/level/block/state/BlockState; cX
	getFireImmuneTicks ()I cP
	getFirstPassenger ()Lnet/minecraft/world/entity/Entity; cG
	getFluidHeight (Lnet/minecraft/tags/Tag;)D b
	getFluidJumpThreshold ()D cS
	getForward ()Lnet/minecraft/world/phys/Vec3; bx
	getGameEventListenerRegistrar ()Lnet/minecraft/world/level/gameevent/GameEventListenerRegistrar; bV
	getHandSlots ()Ljava/lang/Iterable; bB
	getId ()I ae
	getIndirectPassengers ()Ljava/lang/Iterable; cJ
	getIndirectPassengersStream ()Ljava/util/stream/Stream; n
	getInputVector (Lnet/minecraft/world/phys/Vec3;FF)Lnet/minecraft/world/phys/Vec3; a
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cz
	getLevel ()Lnet/minecraft/world/level/Level; W
	getLightProbePosition (F)Lnet/minecraft/world/phys/Vec3; j
	getLookAngle ()Lnet/minecraft/world/phys/Vec3; bv
	getMaxAirSupply ()I bX
	getMaxFallDistance ()I cj
	getMotionDirection ()Lnet/minecraft/core/Direction; cu
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aN
	getMyRidingOffset ()D bp
	getName ()Lnet/minecraft/network/chat/Component; X
	getOnPos ()Lnet/minecraft/core/BlockPos; aA
	getPacketCoordinates ()Lnet/minecraft/world/phys/Vec3; ac
	getPassengers ()Ljava/util/List; cF
	getPassengersAndSelf ()Ljava/util/stream/Stream; cI
	getPassengersRidingOffset ()D bq
	getPercentFrozen ()F ca
	getPermissionLevel ()I B
	getPickRadius ()F bu
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dk
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; c_
	getPortalWaitTime ()I ar
	getPose ()Lnet/minecraft/world/entity/Pose; ak
	getPosition (F)Lnet/minecraft/world/phys/Vec3; k
	getRandomX (D)D d
	getRandomY ()D df
	getRandomZ (D)D g
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getRemainingFireTicks ()I at
	getRemovalReason ()Lnet/minecraft/world/entity/Entity$RemovalReason; dp
	getRootVehicle ()Lnet/minecraft/world/entity/Entity; cL
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getRotationVector ()Lnet/minecraft/world/phys/Vec2; bw
	getScoreboardName ()Ljava/lang/String; co
	getSelfAndPassengers ()Ljava/util/stream/Stream; cH
	getServer ()Lnet/minecraft/server/MinecraftServer; cB
	getSharedFlag (I)Z h
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cO
	getStringUUID ()Ljava/lang/String; cn
	getSwimHighSpeedSplashSound ()Lnet/minecraft/sounds/SoundEvent; aH
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aF
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aG
	getTags ()Ljava/util/Set; af
	getTeam ()Lnet/minecraft/world/scores/Team; bW
	getTeamColor ()I aa
	getTicksFrozen ()I bZ
	getTicksRequiredToFreeze ()I cc
	getType ()Lnet/minecraft/world/entity/EntityType; ad
	getTypeName ()Lnet/minecraft/network/chat/Component; cd
	getUUID ()Ljava/util/UUID; cm
	getUpVector (F)Lnet/minecraft/world/phys/Vec3; h
	getVehicle ()Lnet/minecraft/world/entity/Entity; cN
	getViewScale ()D cq
	getViewVector (F)Lnet/minecraft/world/phys/Vec3; e
	getViewXRot (F)F f
	getViewYRot (F)F g
	getX ()D dc
	getX (D)D c
	getXRot ()F dn
	getY ()D de
	getY (D)D e
	getYHeadRot ()F ce
	getYRot ()F dm
	getZ ()D di
	getZ (D)D f
	handleEntityEvent (B)V a
	handleInsidePortal (Lnet/minecraft/core/BlockPos;)V d
	handleNetherPortal ()V by
	hasCustomName ()Z Y
	hasExactlyOnePlayerPassenger ()Z cK
	hasGlowingTag ()Z bS
	hasIndirectPassenger (Lnet/minecraft/world/entity/Entity;)Z w
	hasPassenger (Ljava/util/function/Predicate;)Z a
	hasPassenger (Lnet/minecraft/world/entity/Entity;)Z u
	hasPermissions (I)Z l
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion ()Z cC
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	is (Lnet/minecraft/world/entity/Entity;)Z q
	isAlive ()Z bl
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	isAlliedTo (Lnet/minecraft/world/scores/Team;)Z a
	isAlwaysTicking ()Z ds
	isAttackable ()Z cf
	isColliding (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isControlledByLocalInstance ()Z cM
	isCrouching ()Z bN
	isCurrentlyGlowing ()Z bT
	isCustomNameVisible ()Z cr
	isDescending ()Z bM
	isDiscrete ()Z bL
	isEyeInFluid (Lnet/minecraft/tags/Tag;)Z a
	isFlapping ()Z aK
	isFree (DDD)Z f
	isFree (Lnet/minecraft/world/phys/AABB;)Z b
	isFullyFrozen ()Z cb
	isHorizontalCollisionMinor (Lnet/minecraft/world/phys/Vec3;)Z c
	isIgnoringBlockTriggers ()Z ck
	isInBubbleColumn ()Z j
	isInLava ()Z bc
	isInRain ()Z i
	isInWall ()Z bm
	isInWater ()Z aQ
	isInWaterOrBubble ()Z aT
	isInWaterOrRain ()Z aR
	isInWaterRainOrBubble ()Z aS
	isInvisible ()Z bU
	isInvisibleTo (Lnet/minecraft/world/entity/player/Player;)Z c
	isInvulnerable ()Z cg
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isNoGravity ()Z aM
	isOnFire ()Z bE
	isOnGround ()Z aw
	isOnPortalCooldown ()Z aq
	isPassenger ()Z bF
	isPassengerOfSameVehicle (Lnet/minecraft/world/entity/Entity;)Z v
	isPickable ()Z bh
	isPushable ()Z bi
	isPushedByFluid ()Z cp
	isRemoved ()Z do
	isShiftKeyDown ()Z bI
	isSilent ()Z aL
	isSpectator ()Z B_
	isSprinting ()Z bO
	isSteppingCarefully ()Z bJ
	isSuppressingBounce ()Z bK
	isSwimming ()Z bP
	isUnderWater ()Z aU
	isVehicle ()Z bG
	isVisuallyCrawling ()Z bR
	isVisuallySwimming ()Z bQ
	kill ()V ag
	killed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	lavaHurt ()V as
	lerpHeadTo (FI)V a
	lerpMotion (DDD)V k
	lerpTo (DDDFFIZ)V a
	limitPistonMovement (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; d
	load (Lnet/minecraft/nbt/CompoundTag;)V g
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	makeBoundingBox ()Lnet/minecraft/world/phys/AABB; al
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	markHurt ()V bf
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	maybeBackOffFromEdge (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/MoverType;)Lnet/minecraft/world/phys/Vec3; a
	mirror (Lnet/minecraft/world/level/block/Mirror;)F a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	moveRelative (FLnet/minecraft/world/phys/Vec3;)V a
	moveTo (DDD)V c
	moveTo (DDDFF)V b
	moveTo (Lnet/minecraft/core/BlockPos;FF)V a
	moveTo (Lnet/minecraft/world/phys/Vec3;)V e
	moveTowardsClosestSpace (DDD)V l
	newDoubleList ([D)Lnet/minecraft/nbt/ListTag; a
	newFloatList ([F)Lnet/minecraft/nbt/ListTag; a
	nextStep ()F aE
	occludesVibrations ()Z aO
	onAboveBubbleCol (Z)V k
	onClientRemoval ()V aj
	onFlap ()V aJ
	onInsideBlock (Lnet/minecraft/world/level/block/state/BlockState;)V a
	onInsideBubbleColumn (Z)V l
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V j
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onlyOpCanSetNbt ()Z cD
	outOfWorld ()V av
	pick (DFZ)Lnet/minecraft/world/phys/HitResult; a
	playAmethystStepSound (Lnet/minecraft/world/level/block/state/BlockState;)V b
	playEntityOnFireExtinguishedSound ()V ay
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playSwimSound (F)V d
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b
	position ()Lnet/minecraft/world/phys/Vec3; cV
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	processFlappingMovement ()V az
	processPortalCooldown ()V H
	push (DDD)V i
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reapplyPosition ()V am
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	refreshDimensions ()V z_
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeAction (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; b
	removeAfterChangingDimensions ()V ch
	removePassenger (Lnet/minecraft/world/entity/Entity;)V n
	removeTag (Ljava/lang/String;)Z b
	removeVehicle ()V bt
	repositionEntityAfterLoad ()Z bj
	resetFallDistance ()V m
	restoreFrom (Lnet/minecraft/world/entity/Entity;)V t
	rideTick ()V bo
	rideableUnderWater ()Z bH
	rotate (Lnet/minecraft/world/level/block/Rotation;)F a
	save (Lnet/minecraft/nbt/CompoundTag;)Z e
	saveAsPassenger (Lnet/minecraft/nbt/CompoundTag;)Z d
	saveWithoutId (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; f
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	setAirSupply (I)V i
	setBoundingBox (Lnet/minecraft/world/phys/AABB;)V a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setCustomNameVisible (Z)V n
	setDeltaMovement (DDD)V n
	setDeltaMovement (Lnet/minecraft/world/phys/Vec3;)V g
	setGlowingTag (Z)V i
	setId (I)V e
	setInvisible (Z)V j
	setInvulnerable (Z)V m
	setIsInPowderSnow (Z)V o
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLevelCallback (Lnet/minecraft/world/level/entity/EntityInLevelCallback;)V a
	setNoGravity (Z)V e
	setOldPosAndRot ()V be
	setOnGround (Z)V c
	setPacketCoordinates (DDD)V d
	setPacketCoordinates (Lnet/minecraft/world/phys/Vec3;)V a_
	setPortalCooldown ()V ap
	setPos (DDD)V e
	setPos (Lnet/minecraft/world/phys/Vec3;)V b
	setPosRaw (DDD)V o
	setPose (Lnet/minecraft/world/entity/Pose;)V b
	setRemainingFireTicks (I)V g
	setRemoved (Lnet/minecraft/world/entity/Entity$RemovalReason;)V b
	setRot (FF)V a
	setSecondsOnFire (I)V f
	setSharedFlag (IZ)V b
	setSharedFlagOnFire (Z)V a_
	setShiftKeyDown (Z)V f
	setSilent (Z)V d
	setSprinting (Z)V g
	setSwimming (Z)V h
	setTicksFrozen (I)V j
	setUUID (Ljava/util/UUID;)V a_
	setViewScale (D)V b
	setXRot (F)V p
	setYBodyRot (F)V m
	setYHeadRot (F)V l
	setYRot (F)V o
	shouldBeSaved ()Z dr
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	shouldInformAdmins ()Z F_
	shouldRender (DDD)Z j
	shouldRenderAtSqrDistance (D)Z a
	shouldShowName ()Z cs
	showVehicleHealth ()Z br
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z r
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/item/ItemEntity; b
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnSprintParticle ()V bb
	startRiding (Lnet/minecraft/world/entity/Entity;)Z k
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	stopRiding ()V p
	stopSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
	teleportTo (DDD)V b
	teleportToWithTicket (DDD)V m
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
	touchingUnloadedChunk ()Z cR
	tryCheckInsideBlocks ()V ax
	turn (DD)V a
	unRide ()V ab
	unsetRemoved ()V dq
	updateFluidHeightAndDoFluidPushing (Lnet/minecraft/tags/Tag;D)Z a
	updateFluidOnEyes ()V l
	updateInWaterStateAndDoFluidPushing ()Z aW
	updateInWaterStateAndDoWaterCurrentPushing ()V aX
	updateSwimming ()V aV
net/minecraft/world/entity/GlowSquid net/minecraft/world/entity/GlowSquid
	DATA_DARK_TICKS_REMAINING ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V w_
	checkGlowSquideSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getDarkTicksRemaining ()I t
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInkParticle ()Lnet/minecraft/core/particles/ParticleOptions; n
	getSquirtSound ()Lnet/minecraft/sounds/SoundEvent; q
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setDarkTicks (I)V b
net/minecraft/world/entity/Marker net/minecraft/world/entity/Marker
	DATA_TAG b
	data c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addPassenger (Lnet/minecraft/world/entity/Entity;)V m
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; c_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V k
net/minecraft/world/entity/SlotAccess net/minecraft/world/entity/SlotAccess
	NULL a
	forContainer (Lnet/minecraft/world/Container;I)Lnet/minecraft/world/entity/SlotAccess; a
	forContainer (Lnet/minecraft/world/Container;ILjava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	forEquipmentSlot (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/entity/SlotAccess; a
	forEquipmentSlot (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	get ()Lnet/minecraft/world/item/ItemStack; a
	set (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation
	$VALUES f
	ADDITION a
	MULTIPLY_BASE b
	MULTIPLY_TOTAL c
	OPERATIONS d
	value e
	$values ()[Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; b
	fromValue (I)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; a
	toValue ()I a
net/minecraft/world/entity/ai/attributes/AttributeModifier net/minecraft/world/entity/ai/attributes/AttributeModifier
	LOGGER a
	amount b
	id e
	nameGetter d
	operation c
	getAmount ()D d
	getId ()Ljava/util/UUID; a
	getName ()Ljava/lang/String; b
	getOperation ()Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	save ()Lnet/minecraft/nbt/CompoundTag; e
net/minecraft/world/entity/ai/behavior/AnimalPanic net/minecraft/world/entity/ai/behavior/AnimalPanic
	PANIC_DISTANCE_HORIZONTAL d
	PANIC_DISTANCE_VERTICAL e
	PANIC_MAX_DURATION c
	PANIC_MIN_DURATION a
	speedMultiplier f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z a
	getPanicPos (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/phys/Vec3; a
	lookForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)Ljava/util/Optional; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V c
net/minecraft/world/entity/ai/behavior/Behavior$Status net/minecraft/world/entity/ai/behavior/Behavior$Status
	$VALUES c
	RUNNING b
	STOPPED a
	$values ()[Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
net/minecraft/world/entity/ai/behavior/Behavior net/minecraft/world/entity/ai/behavior/Behavior
	DEFAULT_DURATION a
	endTimestamp d
	entryCondition b
	maxDuration f
	minDuration e
	status c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	hasRequiredMemories (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	timedOut (J)Z a
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks
	cooldownTicks a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	getCooldownTickMemory (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/FollowTemptation net/minecraft/world/entity/ai/behavior/FollowTemptation
	CLOSE_ENOUGH_DIST c
	TEMPTATION_COOLDOWN a
	speedModifier d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z a
	getSpeedModifier (Lnet/minecraft/world/entity/PathfinderMob;)F a
	getTemptingPlayer (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/LongJumpMidJump net/minecraft/world/entity/ai/behavior/LongJumpMidJump
	TIME_OUT_DURATION a
	landingSound d
	timeBetweenLongJumps c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos
	FIND_JUMP_TRIES c
	MIN_PATHFIND_DISTANCE_TO_VALID_JUMP e
	PREPARE_JUMP_DURATION d
	TIME_OUT_DURATION a
	chosenJump l
	findJumpTries m
	getJumpSound o
	initialPosition k
	jumpCandidates j
	maxJumpVelocity i
	maxLongJumpHeight g
	maxLongJumpWidth h
	prepareJumpStart n
	timeBetweenLongJumps f
	calculateJumpVectorForAngle (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;I)Ljava/util/Optional; a
	calculateOptimalJumpVector (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	isClearTransition (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget
	TIME_OUT_DURATION a
	getCooldownOnFail c
	getPrepareRamSound i
	maxRamDistance e
	minRamDistance d
	ramCandidate k
	ramPrepareTime h
	ramTargeting g
	reachedRamPositionTimestamp j
	walkSpeed f
	calculateRammingStartPosition (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z c
	chooseRamPosition (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V b
	getEdgeOfBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	isWalkableBlock (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V d
net/minecraft/world/entity/ai/behavior/RamTarget net/minecraft/world/entity/ai/behavior/RamTarget
	RAM_SPEED_FORCE_FACTOR c
	TIME_OUT_DURATION a
	getImpactSound i
	getKnockbackForce g
	getTimeBetweenRams d
	ramDirection h
	ramTargeting e
	speed f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	finishRam (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)V b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V c
net/minecraft/world/entity/ai/behavior/RandomSwim net/minecraft/world/entity/ai/behavior/RandomSwim
	XY_DISTANCE_TIERS d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	getTargetPos (Lnet/minecraft/world/entity/PathfinderMob;)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/behavior/ShufflingList net/minecraft/world/entity/ai/behavior/ShufflingList
	entries a
	random b
	add (Ljava/lang/Object;I)Lnet/minecraft/world/entity/ai/behavior/ShufflingList; a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	shuffle ()Lnet/minecraft/world/entity/ai/behavior/ShufflingList; a
	stream ()Ljava/util/stream/Stream; b
net/minecraft/world/entity/ai/behavior/TryFindWater net/minecraft/world/entity/ai/behavior/TryFindWater
	nextOkStartTime d
	range a
	speedModifier c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl
	HEAD_TILT_X i
	HEAD_TILT_Y j
	maxYRotFromCenter h
	tick ()V a
net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl
	applyGravity p
	inWaterSpeedModifier n
	maxTurnX l
	maxTurnY m
	outsideWaterSpeedModifier o
	tick ()V a
net/minecraft/world/entity/ai/memory/MemoryModuleType net/minecraft/world/entity/ai/memory/MemoryModuleType
	ADMIRING_DISABLED aa
	ADMIRING_ITEM X
	ANGRY_AT V
	ATE_RECENTLY ap
	ATTACK_COOLING_DOWN p
	ATTACK_TARGET o
	AVOID_TARGET z
	BREED_TARGET r
	CANT_REACH_WALK_TARGET_SINCE E
	CELEBRATE_LOCATION ac
	DANCING ad
	DISABLE_WALK_TO_ADMIRE_ITEM Z
	DOORS_TO_CLOSE v
	DUMMY a
	GOLEM_DETECTED_RECENTLY F
	HAS_HUNTING_COOLDOWN S
	HEARD_BELL_TIME D
	HIDING_PLACE C
	HOME b
	HUNTED_RECENTLY ab
	HURT_BY x
	HURT_BY_ENTITY y
	INTERACTABLE_DOORS u
	INTERACTION_TARGET q
	IS_TEMPTED P
	JOB_SITE c
	LAST_SLEPT G
	LAST_WOKEN H
	LAST_WORKED_AT_POI I
	LONG_JUMP_COOLDOWN_TICKS Q
	LONG_JUMP_MID_JUMP R
	LOOK_TARGET n
	MEETING_POINT e
	NEARBY_ADULT_PIGLINS ah
	NEAREST_ATTACKABLE B
	NEAREST_BED w
	NEAREST_HOSTILE A
	NEAREST_LIVING_ENTITIES g
	NEAREST_PLAYERS j
	NEAREST_PLAYER_HOLDING_WANTED_ITEM ao
	NEAREST_REPELLENT aq
	NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD ag
	NEAREST_VISIBLE_ADULT J
	NEAREST_VISIBLE_ADULT_HOGLINS aj
	NEAREST_VISIBLE_ADULT_PIGLIN ak
	NEAREST_VISIBLE_ADULT_PIGLINS ai
	NEAREST_VISIBLE_ATTACKABLE_PLAYER l
	NEAREST_VISIBLE_BABY_HOGLIN af
	NEAREST_VISIBLE_HUNTABLE_HOGLIN ae
	NEAREST_VISIBLE_LIVING_ENTITIES h
	NEAREST_VISIBLE_NEMESIS L
	NEAREST_VISIBLE_PLAYER k
	NEAREST_VISIBLE_WANTED_ITEM K
	NEAREST_VISIBLE_ZOMBIFIED al
	PACIFIED ar
	PATH t
	PLAY_DEAD_TICKS M
	POTENTIAL_JOB_SITE d
	RAM_COOLDOWN_TICKS T
	RAM_TARGET U
	RIDE_TARGET s
	SECONDARY_JOB_SITE f
	TEMPTATION_COOLDOWN_TICKS O
	TEMPTING_PLAYER N
	TIME_TRYING_TO_REACH_ADMIRE_ITEM Y
	UNIVERSAL_ANGER W
	VISIBLE_ADULT_HOGLIN_COUNT an
	VISIBLE_ADULT_PIGLIN_COUNT am
	VISIBLE_VILLAGER_BABIES i
	WALK_TARGET m
	codec as
	getCodec ()Ljava/util/Optional; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/memory/MemoryStatus net/minecraft/world/entity/ai/memory/MemoryStatus
	$VALUES d
	REGISTERED c
	VALUE_ABSENT b
	VALUE_PRESENT a
	$values ()[Lnet/minecraft/world/entity/ai/memory/MemoryStatus; a
net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities
	EMPTY a
	lineOfSightTest c
	nearbyEntities b
	contains (Ljava/util/function/Predicate;)Z d
	contains (Lnet/minecraft/world/entity/LivingEntity;)Z a
	empty ()Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities; a
	find (Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	findAll (Ljava/util/function/Predicate;)Ljava/lang/Iterable; b
	findClosest (Ljava/util/function/Predicate;)Ljava/util/Optional; a
net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor
	TARGET_DETECTION_DISTANCE a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	isClose (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z f
	isHostileTarget (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isHuntTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z e
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/sensing/Sensor net/minecraft/world/entity/ai/sensing/Sensor
	ATTACK_TARGET_CONDITIONS f
	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_AND_LINE_OF_SIGHT i
	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING g
	ATTACK_TARGET_CONDITIONS_IGNORE_LINE_OF_SIGHT h
	DEFAULT_SCAN_RATE c
	RANDOM a
	TARGETING_RANGE b
	TARGET_CONDITIONS d
	TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING e
	scanRate j
	timeToTick k
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	isEntityAttackable (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z c
	isEntityAttackableIgnoringLineOfSight (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z d
	isEntityTargetable (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z b
	requires ()Ljava/util/Set; a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/ai/sensing/SensorType net/minecraft/world/entity/ai/sensing/SensorType
	AXOLOTL_ATTACKABLES o
	AXOLOTL_TEMPTATIONS p
	DUMMY a
	GOAT_TEMPTATIONS q
	GOLEM_DETECTED j
	HOGLIN_SPECIFIC_SENSOR m
	HURT_BY f
	NEAREST_ADULT n
	NEAREST_BED e
	NEAREST_ITEMS b
	NEAREST_LIVING_ENTITIES c
	NEAREST_PLAYERS d
	PIGLIN_BRUTE_SPECIFIC_SENSOR l
	PIGLIN_SPECIFIC_SENSOR k
	SECONDARY_POIS i
	VILLAGER_BABIES h
	VILLAGER_HOSTILES g
	factory r
	create ()Lnet/minecraft/world/entity/ai/sensing/Sensor; a
	register (Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/world/entity/ai/sensing/SensorType; a
net/minecraft/world/entity/ai/sensing/TemptingSensor net/minecraft/world/entity/ai/sensing/TemptingSensor
	TEMPTATION_RANGE a
	TEMPT_TARGETING c
	temptations d
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)V a
	isTemptation (Lnet/minecraft/world/item/ItemStack;)Z a
	playerHoldingTemptation (Lnet/minecraft/world/entity/player/Player;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/village/VillageSiege$State net/minecraft/world/entity/ai/village/VillageSiege$State
	$VALUES d
	SIEGE_CAN_ACTIVATE a
	SIEGE_DONE c
	SIEGE_TONIGHT b
	$values ()[Lnet/minecraft/world/entity/ai/village/VillageSiege$State; a
net/minecraft/world/entity/ai/village/VillageSiege net/minecraft/world/entity/ai/village/VillageSiege
	LOGGER a
	hasSetupSiege b
	nextSpawnTime e
	siegeState c
	spawnX f
	spawnY g
	spawnZ h
	zombiesToSpawn d
	findRandomSpawnPos (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
	trySpawn (Lnet/minecraft/server/level/ServerLevel;)V b
	tryToSetupSiege (Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/animal/axolotl/Axolotl$Variant net/minecraft/world/entity/animal/axolotl/Axolotl$Variant
	$VALUES j
	BLUE e
	BY_ID f
	CYAN d
	GOLD c
	LUCY a
	WILD b
	common i
	id g
	name h
	$values ()[Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; c
	getCommonSpawnVariant (Ljava/util/Random;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
	getId ()I a
	getName ()Ljava/lang/String; b
	getRareSpawnVariant (Ljava/util/Random;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; b
	getSpawnVariant (Ljava/util/Random;Z)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
net/minecraft/world/entity/animal/axolotl/Axolotl net/minecraft/world/entity/animal/axolotl/Axolotl
	AXOLOTL_TOTAL_AIR_SUPPLY cg
	DATA_PLAYING_DEAD ce
	DATA_VARIANT cd
	FROM_BUCKET cf
	MEMORY_TYPES bZ
	PLAYER_REGEN_DETECTION_RANGE ca
	RARE_VARIANT_CHANCE cb
	REGEN_BUFF_BASE_DURATION ck
	REGEN_BUFF_MAX_DURATION ci
	REHYDRATE_AIR_SUPPLY ch
	SENSOR_TYPES bX
	TOTAL_PLAYDEAD_TIME bW
	VARIANT_TAG cc
	modelRotationValues cj
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applySupportingEffects (Lnet/minecraft/world/entity/player/Player;)V f
	baseTick ()V an
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; du
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBeSeenAsEnemy ()Z dS
	canBreatheUnderwater ()Z dw
	checkAxolotlSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fG
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V R
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	fromBucket ()Z q
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dt
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxAirSupply ()I bX
	getMaxHeadXRot ()I T
	getMaxHeadYRot ()I U
	getMeleeAttackRangeSqr (Lnet/minecraft/world/entity/LivingEntity;)D i
	getMobType ()Lnet/minecraft/world/entity/MobType; eq
	getModelRotationValues ()Ljava/util/Map; a
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; t
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aF
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aG
	getVariant ()Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; fz
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleAirSupply (I)V t
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isPlayingDead ()Z fA
	isPushedByFluid ()Z cp
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onStopAttacking (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V a
	playAmbientSound ()V K
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rehydrate ()V fy
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z O
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V m
	sendDebugPackets ()V Q
	setFromBucket (Z)V v
	setPlayingDead (Z)V w
	setVariant (Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	useRareVariant (Ljava/util/Random;)Z a
net/minecraft/world/entity/animal/axolotl/AxolotlAi net/minecraft/world/entity/animal/axolotl/AxolotlAi
	ADULT_FOLLOW_RANGE a
	SPEED_MULTIPLIER_ON_LAND c
	SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER e
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER f
	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER d
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE b
	canSetWalkTargetFromLookTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Ljava/util/Optional; b
	getSpeedModifier (Lnet/minecraft/world/entity/LivingEntity;)F d
	getSpeedModifierChasing (Lnet/minecraft/world/entity/LivingEntity;)F b
	getSpeedModifierFollowingAdult (Lnet/minecraft/world/entity/LivingEntity;)F c
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initPlayDeadActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	isBreeding (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Z c
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V a
net/minecraft/world/entity/animal/goat/Goat net/minecraft/world/entity/animal/goat/Goat
	ADULT_ATTACK_DAMAGE cc
	BABY_ATTACK_DAMAGE cd
	DATA_IS_SCREAMING_GOAT ce
	GOAT_FALL_DAMAGE_REDUCTION ca
	GOAT_SCREAMING_CHANCE cb
	LONG_JUMPING_DIMENSIONS bW
	MEMORY_TYPES bZ
	SENSOR_TYPES bX
	isLoweringHead cf
	lowerHeadTick cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V n
	aiStep ()V w_
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; du
	calculateFallDamage (FF)I d
	checkGoatSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V R
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; r
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dt
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/goat/Goat; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; x_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; e
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxHeadYRot ()I U
	getMilkingSound ()Lnet/minecraft/sounds/SoundEvent; t
	getRammingXHeadRot ()F fz
	handleEntityEvent (B)V a
	isScreamingGoat ()Z fy
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V Q
	setScreamingGoat (Z)V v
	setYHeadRot (F)V l
net/minecraft/world/entity/animal/goat/GoatAi net/minecraft/world/entity/animal/goat/GoatAi
	ADULT_FOLLOW_RANGE i
	ADULT_RAM_KNOCKBACK_FORCE g
	BABY_RAM_KNOCKBACK_FORCE h
	MAX_JUMP_VELOCITY e
	MAX_LONG_JUMP_HEIGHT c
	MAX_LONG_JUMP_WIDTH d
	RAM_MAX_DISTANCE b
	RAM_MIN_DISTANCE f
	RAM_PREPARE_TIME a
	RAM_TARGET_CONDITIONS s
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT l
	SPEED_MULTIPLIER_WHEN_IDLING k
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE j
	SPEED_MULTIPLIER_WHEN_PANICKING n
	SPEED_MULTIPLIER_WHEN_PREPARING_TO_RAM o
	SPEED_MULTIPLIER_WHEN_RAMMING t
	SPEED_MULTIPLIER_WHEN_TEMPTED m
	TIME_BETWEEN_LONG_JUMPS p
	TIME_BETWEEN_RAMS q
	TIME_BETWEEN_RAMS_SCREAMER r
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initLongJumpActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initMemories (Lnet/minecraft/world/entity/animal/goat/Goat;)V a
	initRamActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/goat/Goat;)V b
net/minecraft/world/entity/npc/VillagerData net/minecraft/world/entity/npc/VillagerData
	CODEC c
	MAX_VILLAGER_LEVEL b
	MIN_VILLAGER_LEVEL a
	NEXT_LEVEL_XP_THRESHOLDS d
	level g
	profession f
	type e
	canLevelUp (I)Z d
	getLevel ()I c
	getMaxXpPerLevel (I)I c
	getMinXpPerLevel (I)I b
	getProfession ()Lnet/minecraft/world/entity/npc/VillagerProfession; b
	getType ()Lnet/minecraft/world/entity/npc/VillagerType; a
	setLevel (I)Lnet/minecraft/world/entity/npc/VillagerData; a
	setProfession (Lnet/minecraft/world/entity/npc/VillagerProfession;)Lnet/minecraft/world/entity/npc/VillagerData; a
	setType (Lnet/minecraft/world/entity/npc/VillagerType;)Lnet/minecraft/world/entity/npc/VillagerData; a
net/minecraft/world/entity/npc/VillagerProfession net/minecraft/world/entity/npc/VillagerProfession
	ARMORER b
	BUTCHER c
	CARTOGRAPHER d
	CLERIC e
	FARMER f
	FISHERMAN g
	FLETCHER h
	LEATHERWORKER i
	LIBRARIAN j
	MASON k
	NITWIT l
	NONE a
	SHEPHERD m
	TOOLSMITH n
	WEAPONSMITH o
	jobPoiType q
	name p
	requestedItems r
	secondaryPoi s
	workSound t
	getJobPoiType ()Lnet/minecraft/world/entity/ai/village/poi/PoiType; b
	getName ()Ljava/lang/String; a
	getRequestedItems ()Lcom/google/common/collect/ImmutableSet; c
	getSecondaryPoi ()Lcom/google/common/collect/ImmutableSet; d
	getWorkSound ()Lnet/minecraft/sounds/SoundEvent; e
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
net/minecraft/world/entity/npc/VillagerTrades net/minecraft/world/entity/npc/VillagerTrades
	COMMON_ITEMS_SUPPLY d
	DEFAULT_SUPPLY c
	HIGH_TIER_PRICE_MULTIPLIER p
	LOW_TIER_PRICE_MULTIPLIER o
	TRADES a
	UNCOMMON_ITEMS_SUPPLY e
	WANDERING_TRADER_TRADES b
	XP_LEVEL_1_BUY g
	XP_LEVEL_1_SELL f
	XP_LEVEL_2_BUY i
	XP_LEVEL_2_SELL h
	XP_LEVEL_3_BUY k
	XP_LEVEL_3_SELL j
	XP_LEVEL_4_BUY m
	XP_LEVEL_4_SELL l
	XP_LEVEL_5_TRADE n
	toIntMap (Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; a
net/minecraft/world/entity/npc/VillagerType net/minecraft/world/entity/npc/VillagerType
	BY_BIOME i
	DESERT a
	JUNGLE b
	PLAINS c
	SAVANNA d
	SNOW e
	SWAMP f
	TAIGA g
	name h
	byBiome (Ljava/util/Optional;)Lnet/minecraft/world/entity/npc/VillagerType; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/npc/VillagerType; a
net/minecraft/world/entity/player/PlayerModelPart net/minecraft/world/entity/player/PlayerModelPart
	$VALUES l
	CAPE a
	HAT g
	JACKET b
	LEFT_PANTS_LEG e
	LEFT_SLEEVE c
	RIGHT_PANTS_LEG f
	RIGHT_SLEEVE d
	bit h
	id j
	mask i
	name k
	$values ()[Lnet/minecraft/world/entity/player/PlayerModelPart; e
	getBit ()I b
	getId ()Ljava/lang/String; c
	getMask ()I a
	getName ()Lnet/minecraft/network/chat/Component; d
net/minecraft/world/entity/raid/Raid net/minecraft/world/entity/raid/Raid
	ATTEMPT_RAID_CLOSE j
	ATTEMPT_RAID_FARTHEST i
	ATTEMPT_RAID_INSIDE k
	DEFAULT_MAX_BAD_OMEN_LEVEL e
	DEFAULT_PRE_RAID_TICKS r
	DEFEAT w
	HERO_OF_THE_VILLAGE_DURATION z
	LOW_MOB_THRESHOLD t
	MAX_CELEBRATION_TICKS c
	MAX_NO_ACTION_TIME b
	NUM_SPAWN_ATTEMPTS n
	OMINOUS_BANNER_PATTERN_NAME o
	OUTSIDE_RAID_BOUNDS_TIMEOUT s
	POST_RAID_TICK_LIMIT q
	RAIDERS_REMAINING p
	RAID_BAR_DEFEAT_COMPONENT y
	RAID_BAR_VICTORY_COMPONENT x
	RAID_NAME_COMPONENT u
	RAID_REMOVAL_THRESHOLD_SQR g
	RAID_TIMEOUT_TICKS m
	SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER h
	TICKS_PER_DAY d
	VALID_RAID_RADIUS_SQR f
	VICTORY v
	VILLAGE_RADIUS_BUFFER a
	VILLAGE_SEARCH_RADIUS l
	active K
	badOmenLevel J
	celebrationTicks S
	center E
	groupRaiderMap B
	groupToLeaderMap A
	groupsSpawned L
	heroesOfTheVillage C
	id H
	level F
	numGroups Q
	postRaidTicks N
	raidCooldownTicks O
	raidEvent M
	random P
	started G
	status R
	ticksActive D
	totalHealth I
	waveSpawnPos T
	absorbBadOmen (Lnet/minecraft/world/entity/player/Player;)V a
	addHeroOfTheVillage (Lnet/minecraft/world/entity/Entity;)V a
	addWaveMob (ILnet/minecraft/world/entity/raid/Raider;)Z b
	addWaveMob (ILnet/minecraft/world/entity/raid/Raider;Z)Z a
	findRandomSpawnPos (II)Lnet/minecraft/core/BlockPos; a
	getAllRaiders ()Ljava/util/Set; h
	getBadOmenLevel ()I m
	getCenter ()Lnet/minecraft/core/BlockPos; t
	getDefaultNumSpawns (Lnet/minecraft/world/entity/raid/Raid$RaiderType;IZ)I a
	getEnchantOdds ()F w
	getGroupsSpawned ()I k
	getHealthOfLivingRaiders ()F q
	getId ()I u
	getLeader (I)Lnet/minecraft/world/entity/raid/Raider; b
	getLeaderBannerInstance ()Lnet/minecraft/world/item/ItemStack; s
	getLevel ()Lnet/minecraft/world/level/Level; i
	getMaxBadOmenLevel ()I l
	getNumGroups (Lnet/minecraft/world/Difficulty;)I a
	getPotentialBonusSpawns (Lnet/minecraft/world/entity/raid/Raid$RaiderType;Ljava/util/Random;ILnet/minecraft/world/DifficultyInstance;Z)I a
	getTotalHealth ()F g
	getTotalRaidersAlive ()I r
	getValidSpawnPos (I)Ljava/util/Optional; d
	hasBonusWave ()Z C
	hasFirstWaveSpawned ()Z c
	hasMoreWaves ()Z A
	hasSpawnedBonusWave ()Z D
	isActive ()Z v
	isBetweenWaves ()Z b
	isFinalWave ()Z B
	isLoss ()Z f
	isOver ()Z a
	isStarted ()Z j
	isStopped ()Z d
	isVictory ()Z e
	joinRaid (ILnet/minecraft/world/entity/raid/Raider;Lnet/minecraft/core/BlockPos;Z)V a
	moveRaidCenterToNearbyVillageSection ()V z
	playSound (Lnet/minecraft/core/BlockPos;)V a
	removeFromRaid (Lnet/minecraft/world/entity/raid/Raider;Z)V a
	removeLeader (I)V c
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setBadOmenLevel (I)V a
	setCenter (Lnet/minecraft/core/BlockPos;)V c
	setDirty ()V H
	setLeader (ILnet/minecraft/world/entity/raid/Raider;)V a
	shouldSpawnBonusGroup ()Z E
	shouldSpawnGroup ()Z G
	spawnGroup (Lnet/minecraft/core/BlockPos;)V b
	stop ()V n
	tick ()V o
	updateBossbar ()V p
	updatePlayers ()V y
	updateRaiders ()V F
	validPlayer ()Ljava/util/function/Predicate; x
net/minecraft/world/entity/schedule/Activity net/minecraft/world/entity/schedule/Activity
	ADMIRE_ITEM m
	AVOID n
	CELEBRATE l
	CORE a
	FIGHT k
	HIDE j
	IDLE b
	LONG_JUMP q
	MEET f
	PANIC g
	PLAY d
	PLAY_DEAD p
	PRE_RAID i
	RAID h
	RAM r
	REST e
	RIDE o
	WORK c
	hashCode t
	name s
	getName ()Ljava/lang/String; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/Activity; a
net/minecraft/world/entity/schedule/Schedule net/minecraft/world/entity/schedule/Schedule
	EMPTY c
	SIMPLE d
	TOTAL_WORK_TIME b
	VILLAGER_BABY e
	VILLAGER_DEFAULT f
	WORK_START_TIME a
	timelines g
	ensureTimelineExistsFor (Lnet/minecraft/world/entity/schedule/Activity;)V a
	getActivityAt (I)Lnet/minecraft/world/entity/schedule/Activity; a
	getAllTimelinesExceptFor (Lnet/minecraft/world/entity/schedule/Activity;)Ljava/util/List; c
	getTimelineFor (Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/Timeline; b
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; a
net/minecraft/world/entity/schedule/ScheduleBuilder net/minecraft/world/entity/schedule/ScheduleBuilder
	schedule a
	transitions b
	build ()Lnet/minecraft/world/entity/schedule/Schedule; a
	changeActivityAt (ILnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; a
net/minecraft/world/food/Foods net/minecraft/world/food/Foods
	APPLE a
	BAKED_POTATO b
	BEEF c
	BEETROOT d
	BEETROOT_SOUP e
	BREAD f
	CARROT g
	CHICKEN h
	CHORUS_FRUIT i
	COD j
	COOKED_BEEF k
	COOKED_CHICKEN l
	COOKED_COD m
	COOKED_MUTTON n
	COOKED_PORKCHOP o
	COOKED_RABBIT p
	COOKED_SALMON q
	COOKIE r
	DRIED_KELP s
	ENCHANTED_GOLDEN_APPLE t
	GLOW_BERRIES M
	GOLDEN_APPLE u
	GOLDEN_CARROT v
	HONEY_BOTTLE w
	MELON_SLICE x
	MUSHROOM_STEW y
	MUTTON z
	POISONOUS_POTATO A
	PORKCHOP B
	POTATO C
	PUFFERFISH D
	PUMPKIN_PIE E
	RABBIT F
	RABBIT_STEW G
	ROTTEN_FLESH H
	SALMON I
	SPIDER_EYE J
	SUSPICIOUS_STEW K
	SWEET_BERRIES L
	TROPICAL_FISH N
	stew (I)Lnet/minecraft/world/food/FoodProperties$Builder; a
net/minecraft/world/inventory/ClickAction net/minecraft/world/inventory/ClickAction
	$VALUES c
	PRIMARY a
	SECONDARY b
	$values ()[Lnet/minecraft/world/inventory/ClickAction; a
net/minecraft/world/inventory/RecipeBookType net/minecraft/world/inventory/RecipeBookType
	$VALUES e
	BLAST_FURNACE c
	CRAFTING a
	FURNACE b
	SMOKER d
	$values ()[Lnet/minecraft/world/inventory/RecipeBookType; a
net/minecraft/world/inventory/Slot net/minecraft/world/inventory/Slot
	container c
	index d
	slot a
	x e
	y f
	allowModification (Lnet/minecraft/world/entity/player/Player;)Z b
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	getContainerSlot ()I g
	getItem ()Lnet/minecraft/world/item/ItemStack; e
	getMaxStackSize ()I a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	getNoItemIcon ()Lcom/mojang/datafixers/util/Pair; c
	hasItem ()Z f
	isActive ()Z b
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	onSwapCraft (I)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	safeInsert (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; e
	safeInsert (Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; b
	safeTake (IILnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	set (Lnet/minecraft/world/item/ItemStack;)V d
	setChanged ()V d
	tryRemove (IILnet/minecraft/world/entity/player/Player;)Ljava/util/Optional; a
net/minecraft/world/inventory/tooltip/BundleTooltip net/minecraft/world/inventory/tooltip/BundleTooltip
	items a
	weight b
	getItems ()Lnet/minecraft/core/NonNullList; a
	getWeight ()I b
net/minecraft/world/item/AdventureModeCheck net/minecraft/world/item/AdventureModeCheck
	PREDICATE_PARSER a
	checksBlockEntity e
	lastCheckedBlock c
	lastResult d
	tagName b
	areSameBlocks (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;Z)Z a
	test (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/tags/TagContainer;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/world/item/BundleItem net/minecraft/world/item/BundleItem
	BAR_COLOR d
	BUNDLE_IN_BUNDLE_WEIGHT c
	MAX_WEIGHT a
	TAG_ITEMS b
	add (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)I b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	dropContents (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Z a
	getBarColor (Lnet/minecraft/world/item/ItemStack;)I g
	getBarWidth (Lnet/minecraft/world/item/ItemStack;)I f
	getContentWeight (Lnet/minecraft/world/item/ItemStack;)I o
	getContents (Lnet/minecraft/world/item/ItemStack;)Ljava/util/stream/Stream; q
	getFullnessDisplay (Lnet/minecraft/world/item/ItemStack;)F d
	getMatchingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/nbt/ListTag;)Ljava/util/Optional; a
	getTooltipImage (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; h
	getWeight (Lnet/minecraft/world/item/ItemStack;)I k
	isBarVisible (Lnet/minecraft/world/item/ItemStack;)Z e
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	playDropContentsSound (Lnet/minecraft/world/entity/Entity;)V c
	playInsertSound (Lnet/minecraft/world/entity/Entity;)V b
	playRemoveOneSound (Lnet/minecraft/world/entity/Entity;)V a
	removeOne (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; p
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/CreativeModeTab net/minecraft/world/item/CreativeModeTab
	TABS a
	TAB_BREWING k
	TAB_BUILDING_BLOCKS b
	TAB_COMBAT j
	TAB_DECORATIONS c
	TAB_FOOD h
	TAB_HOTBAR m
	TAB_INVENTORY n
	TAB_MATERIALS l
	TAB_MISC f
	TAB_REDSTONE d
	TAB_SEARCH g
	TAB_TOOLS i
	TAB_TRANSPORTATION e
	backgroundSuffix s
	canScroll t
	displayName q
	enchantmentCategories v
	iconItemStack w
	id o
	langId p
	recipeFolderName r
	showTitle u
	canScroll ()Z i
	fillItemList (Lnet/minecraft/core/NonNullList;)V a
	getBackgroundSuffix ()Ljava/lang/String; f
	getColumn ()I k
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getEnchantmentCategories ()[Lnet/minecraft/world/item/enchantment/EnchantmentCategory; n
	getIconItem ()Lnet/minecraft/world/item/ItemStack; d
	getId ()I a
	getRecipeFolderName ()Ljava/lang/String; b
	hasEnchantmentCategory (Lnet/minecraft/world/item/enchantment/EnchantmentCategory;)Z a
	hideScroll ()Lnet/minecraft/world/item/CreativeModeTab; j
	hideTitle ()Lnet/minecraft/world/item/CreativeModeTab; h
	isAlignedRight ()Z m
	isTopRow ()Z l
	makeIcon ()Lnet/minecraft/world/item/ItemStack; e
	setBackgroundSuffix (Ljava/lang/String;)Lnet/minecraft/world/item/CreativeModeTab; a
	setEnchantmentCategories ([Lnet/minecraft/world/item/enchantment/EnchantmentCategory;)Lnet/minecraft/world/item/CreativeModeTab; a
	setRecipeFolderName (Ljava/lang/String;)Lnet/minecraft/world/item/CreativeModeTab; b
	showTitle ()Z g
net/minecraft/world/item/HoneycombItem net/minecraft/world/item/HoneycombItem
	WAXABLES a
	WAX_OFF_BY_BLOCK b
	getWaxed (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/Item net/minecraft/world/item/Item
	BASE_ATTACK_DAMAGE_UUID l
	BASE_ATTACK_SPEED_UUID m
	BY_BLOCK k
	EAT_DURATION o
	LOGGER a
	MAX_BAR_WIDTH p
	MAX_STACK_SIZE n
	category q
	craftingRemainingItem f
	descriptionId g
	foodProperties h
	isFireResistant e
	maxDamage d
	maxStackSize c
	rarity b
	allowdedIn (Lnet/minecraft/world/item/CreativeModeTab;)Z a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	asItem ()Lnet/minecraft/world/item/Item; k
	byBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	byId (I)Lnet/minecraft/world/item/Item; b
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	canBeDepleted ()Z n
	canBeHurtBy (Lnet/minecraft/world/damagesource/DamageSource;)Z a
	canFitInsideContainerItems ()Z Q_
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getBarColor (Lnet/minecraft/world/item/ItemStack;)I g
	getBarWidth (Lnet/minecraft/world/item/ItemStack;)I f
	getCraftingRemainingItem ()Lnet/minecraft/world/item/Item; r
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; O_
	getDescription ()Lnet/minecraft/network/chat/Component; o
	getDescriptionId ()Ljava/lang/String; a
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; P_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; h
	getEnchantmentValue ()I c
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; g
	getFoodProperties ()Lnet/minecraft/world/food/FoodProperties; v
	getId (Lnet/minecraft/world/item/Item;)I a
	getItemCategory ()Lnet/minecraft/world/item/CreativeModeTab; t
	getMaxDamage ()I m
	getMaxStackSize ()I l
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	getOrCreateDescriptionId ()Ljava/lang/String; p
	getPlayerPOVHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/ClipContext$Fluid;)Lnet/minecraft/world/phys/BlockHitResult; a
	getRarity (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/Rarity; n
	getTooltipImage (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; h
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	hasCraftingRemainingItem ()Z s
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isBarVisible (Lnet/minecraft/world/item/ItemStack;)Z e
	isComplex ()Z N_
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isEdible ()Z u
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z c_
	isFireResistant ()Z w
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	onCraftedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)V b
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	shouldOverrideMultiplayerNbt ()Z q
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
	useOnRelease (Lnet/minecraft/world/item/ItemStack;)Z l
	verifyTagAfterLoad (Lnet/minecraft/nbt/CompoundTag;)V b
net/minecraft/world/item/ItemStack net/minecraft/world/item/ItemStack
	ATTRIBUTE_MODIFIER_FORMAT c
	CODEC a
	DONT_HIDE_TOOLTIP p
	EMPTY b
	LOGGER j
	LORE_STYLE q
	TAG_CAN_DESTROY_BLOCK_LIST m
	TAG_CAN_PLACE_ON_BLOCK_LIST n
	TAG_COLOR i
	TAG_DAMAGE h
	TAG_DISPLAY e
	TAG_DISPLAY_NAME f
	TAG_ENCH d
	TAG_HIDE_FLAGS o
	TAG_LORE g
	TAG_REPAIR_COST l
	TAG_UNBREAKABLE k
	adventureBreakCheck x
	adventurePlaceCheck y
	count r
	emptyCacheFlag v
	entityRepresentation w
	item t
	popTime s
	tag u
	addAttributeModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;Lnet/minecraft/world/entity/EquipmentSlot;)V a
	addTagElement (Ljava/lang/String;Lnet/minecraft/nbt/Tag;)V a
	appendEnchantmentNames (Ljava/util/List;Lnet/minecraft/nbt/ListTag;)V a
	copy ()Lnet/minecraft/world/item/ItemStack; m
	enchant (Lnet/minecraft/world/item/enchantment/Enchantment;I)V a
	expandBlockState (Ljava/lang/String;)Ljava/util/Collection; d
	finishUsingItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getBarColor ()I l
	getBarWidth ()I k
	getBaseRepairCost ()I F
	getCount ()I I
	getDamageValue ()I h
	getDescriptionId ()Ljava/lang/String; n
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F a
	getDisplayName ()Lnet/minecraft/network/chat/Component; G
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; K
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; L
	getEnchantmentTags ()Lnet/minecraft/nbt/ListTag; u
	getEntityRepresentation ()Lnet/minecraft/world/entity/Entity; E
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; M
	getFrame ()Lnet/minecraft/world/entity/decoration/ItemFrame; D
	getHideFlags ()I O
	getHoverName ()Lnet/minecraft/network/chat/Component; v
	getItem ()Lnet/minecraft/world/item/Item; c
	getMaxDamage ()I i
	getMaxStackSize ()I d
	getOrCreateTag ()Lnet/minecraft/nbt/CompoundTag; t
	getOrCreateTagElement (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	getPopTime ()I H
	getRarity ()Lnet/minecraft/world/item/Rarity; z
	getTag ()Lnet/minecraft/nbt/CompoundTag; s
	getTagElement (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; b
	getTooltipImage ()Ljava/util/Optional; a
	getTooltipLines (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/TooltipFlag;)Ljava/util/List; a
	getUseAnimation ()Lnet/minecraft/world/item/UseAnim; p
	getUseDuration ()I o
	grow (I)V f
	hasAdventureModeBreakTagForBlock (Lnet/minecraft/tags/TagContainer;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z b
	hasAdventureModePlaceTagForBlock (Lnet/minecraft/tags/TagContainer;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
	hasCustomHoverName ()Z x
	hasFoil ()Z y
	hasTag ()Z r
	hideTooltipPart (Lnet/minecraft/world/item/ItemStack$TooltipPart;)V a
	hurt (ILjava/util/Random;Lnet/minecraft/server/level/ServerPlayer;)Z a
	hurtAndBreak (ILnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Consumer;)V a
	hurtEnemy (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/player/Player;)V a
	interactLivingEntity (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	inventoryTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	is (Lnet/minecraft/tags/Tag;)Z a
	is (Lnet/minecraft/world/item/Item;)Z a
	isBarVisible ()Z j
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isDamageableItem ()Z f
	isDamaged ()Z g
	isEdible ()Z J
	isEmpty ()Z b
	isEnchantable ()Z A
	isEnchanted ()Z B
	isFramed ()Z C
	isSame (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isSameIgnoreDurability (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z d
	isSameItemSameTags (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z e
	isStackable ()Z e
	matches (Lnet/minecraft/world/item/ItemStack;)Z c
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	mineBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	of (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/ItemStack; a
	onCraftedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;I)V a
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V b
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	releaseUsing (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	removeTagKey (Ljava/lang/String;)V c
	resetHoverName ()V w
	sameItem (Lnet/minecraft/world/item/ItemStack;)Z a
	sameItemStackIgnoreDurability (Lnet/minecraft/world/item/ItemStack;)Z b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setCount (I)V e
	setDamageValue (I)V b
	setEntityRepresentation (Lnet/minecraft/world/entity/Entity;)V a
	setHoverName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/item/ItemStack; a
	setPopTime (I)V d
	setRepairCost (I)V c
	setTag (Lnet/minecraft/nbt/CompoundTag;)V c
	shouldShowInTooltip (ILnet/minecraft/world/item/ItemStack$TooltipPart;)Z a
	shrink (I)V g
	split (I)Lnet/minecraft/world/item/ItemStack; a
	tagMatches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	updateEmptyCacheFlag ()V N
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
	useOnRelease ()Z q
net/minecraft/world/item/Items net/minecraft/world/item/Items
	ACACIA_BOAT lY
	ACACIA_BUTTON kR
	ACACIA_DOOR lm
	ACACIA_FENCE eb
	ACACIA_FENCE_GATE lD
	ACACIA_LEAVES bH
	ACACIA_LOG bb
	ACACIA_PLANKS A
	ACACIA_PRESSURE_PLATE ld
	ACACIA_SAPLING I
	ACACIA_SIGN nS
	ACACIA_SLAB da
	ACACIA_STAIRS gB
	ACACIA_TRAPDOOR lv
	ACACIA_WOOD bz
	ACTIVATOR_RAIL lK
	AIR a
	ALLIUM cu
	AMETHYST_BLOCK al
	AMETHYST_CLUSTER uh
	AMETHYST_SHARD mo
	ANCIENT_DEBRIS ag
	ANDESITE g
	ANDESITE_SLAB ke
	ANDESITE_STAIRS jN
	ANDESITE_WALL fw
	ANVIL fI
	APPLE mf
	ARMOR_STAND rK
	ARROW mh
	AXOLOTL_BUCKET oh
	AXOLOTL_SPAWN_EGG pP
	AZALEA bW
	AZALEA_LEAVES bJ
	AZURE_BLUET cv
	BAKED_POTATO rn
	BAMBOO cV
	BARREL td
	BARRIER gg
	BASALT el
	BAT_SPAWN_EGG pQ
	BEACON fm
	BEDROCK K
	BEEF pv
	BEEHIVE tv
	BEETROOT sn
	BEETROOT_SEEDS so
	BEETROOT_SOUP sp
	BEE_NEST tu
	BEE_SPAWN_EGG pR
	BELL tl
	BIG_DRIPLEAF cT
	BIRCH_BOAT lW
	BIRCH_BUTTON kP
	BIRCH_DOOR lk
	BIRCH_FENCE dZ
	BIRCH_FENCE_GATE lB
	BIRCH_LEAVES bF
	BIRCH_LOG aZ
	BIRCH_PLANKS y
	BIRCH_PRESSURE_PLATE lb
	BIRCH_SAPLING G
	BIRCH_SIGN nQ
	BIRCH_SLAB cY
	BIRCH_STAIRS fh
	BIRCH_TRAPDOOR lt
	BIRCH_WOOD bx
	BLACKSTONE tA
	BLACKSTONE_SLAB tB
	BLACKSTONE_STAIRS tC
	BLACKSTONE_WALL fB
	BLACK_BANNER sj
	BLACK_BED pn
	BLACK_CANDLE ud
	BLACK_CARPET gy
	BLACK_CONCRETE iF
	BLACK_CONCRETE_POWDER iV
	BLACK_DYE oT
	BLACK_GLAZED_TERRACOTTA ip
	BLACK_SHULKER_BOX hZ
	BLACK_STAINED_GLASS gZ
	BLACK_STAINED_GLASS_PANE hp
	BLACK_TERRACOTTA gf
	BLACK_WOOL cq
	BLAST_FURNACE tf
	BLAZE_POWDER pJ
	BLAZE_ROD pB
	BLAZE_SPAWN_EGG pS
	BLUE_BANNER sf
	BLUE_BED pj
	BLUE_CANDLE tZ
	BLUE_CARPET gu
	BLUE_CONCRETE iB
	BLUE_CONCRETE_POWDER iR
	BLUE_DYE oP
	BLUE_GLAZED_TERRACOTTA il
	BLUE_ICE jB
	BLUE_ORCHID ct
	BLUE_SHULKER_BOX hV
	BLUE_STAINED_GLASS gV
	BLUE_STAINED_GLASS_PANE hl
	BLUE_TERRACOTTA gb
	BLUE_WOOL cm
	BONE oV
	BONE_BLOCK hH
	BONE_MEAL oU
	BOOK om
	BOOKSHELF dz
	BOW mg
	BOWL nc
	BRAIN_CORAL ji
	BRAIN_CORAL_BLOCK jd
	BRAIN_CORAL_FAN js
	BREAD nj
	BREWING_STAND pL
	BRICK oi
	BRICKS dy
	BRICK_SLAB dk
	BRICK_STAIRS eP
	BRICK_WALL fp
	BROWN_BANNER sg
	BROWN_BED pk
	BROWN_CANDLE ua
	BROWN_CARPET gv
	BROWN_CONCRETE iC
	BROWN_CONCRETE_POWDER iS
	BROWN_DYE oQ
	BROWN_GLAZED_TERRACOTTA im
	BROWN_MUSHROOM cF
	BROWN_MUSHROOM_BLOCK eG
	BROWN_SHULKER_BOX hW
	BROWN_STAINED_GLASS gW
	BROWN_STAINED_GLASS_PANE hm
	BROWN_TERRACOTTA gc
	BROWN_WOOL cn
	BUBBLE_CORAL jj
	BUBBLE_CORAL_BLOCK je
	BUBBLE_CORAL_FAN jt
	BUCKET nW
	BUDDING_AMETHYST am
	BUNDLE oq
	CACTUS dU
	CAKE oX
	CALCITE l
	CAMPFIRE tq
	CANDLE tN
	CARROT rl
	CARROT_ON_A_STICK lR
	CARTOGRAPHY_TABLE tg
	CARVED_PUMPKIN eg
	CAT_SPAWN_EGG pT
	CAULDRON pM
	CAVE_SPIDER_SPAWN_EGG pU
	CHAIN eK
	CHAINMAIL_BOOTS nr
	CHAINMAIL_CHESTPLATE np
	CHAINMAIL_HELMET no
	CHAINMAIL_LEGGINGS nq
	CHAIN_COMMAND_BLOCK hC
	CHARCOAL mj
	CHEST dL
	CHEST_MINECART lN
	CHICKEN px
	CHICKEN_SPAWN_EGG pV
	CHIPPED_ANVIL fJ
	CHISELED_DEEPSLATE eF
	CHISELED_NETHER_BRICKS eV
	CHISELED_POLISHED_BLACKSTONE tH
	CHISELED_QUARTZ_BLOCK fL
	CHISELED_RED_SANDSTONE hy
	CHISELED_SANDSTONE bR
	CHISELED_STONE_BRICKS eA
	CHORUS_FLOWER dF
	CHORUS_FRUIT sl
	CHORUS_PLANT dE
	CLAY dV
	CLAY_BALL oj
	CLOCK os
	COAL mi
	COAL_BLOCK ah
	COAL_ORE O
	COARSE_DIRT q
	COBBLED_DEEPSLATE j
	COBBLED_DEEPSLATE_SLAB ki
	COBBLED_DEEPSLATE_STAIRS jR
	COBBLED_DEEPSLATE_WALL fE
	COBBLESTONE v
	COBBLESTONE_SLAB dj
	COBBLESTONE_STAIRS dQ
	COBBLESTONE_WALL fn
	COBWEB bT
	COCOA_BEANS oD
	COD ov
	COD_BUCKET of
	COD_SPAWN_EGG pW
	COMMAND_BLOCK fl
	COMMAND_BLOCK_MINECART rR
	COMPARATOR kr
	COMPASS op
	COMPOSTER tc
	CONDUIT jC
	COOKED_BEEF pw
	COOKED_CHICKEN py
	COOKED_COD oz
	COOKED_MUTTON rT
	COOKED_PORKCHOP nK
	COOKED_RABBIT rG
	COOKED_SALMON oA
	COOKIE po
	COPPER_BLOCK ao
	COPPER_INGOT ms
	COPPER_ORE S
	CORNFLOWER cB
	COW_SPAWN_EGG pX
	CRACKED_DEEPSLATE_BRICKS eC
	CRACKED_DEEPSLATE_TILES eE
	CRACKED_NETHER_BRICKS eU
	CRACKED_POLISHED_BLACKSTONE_BRICKS tL
	CRACKED_STONE_BRICKS ez
	CRAFTING_TABLE dM
	CREEPER_BANNER_PATTERN sX
	CREEPER_HEAD rv
	CREEPER_SPAWN_EGG pY
	CRIMSON_BUTTON kT
	CRIMSON_DOOR lo
	CRIMSON_FENCE ed
	CRIMSON_FENCE_GATE lF
	CRIMSON_FUNGUS cH
	CRIMSON_HYPHAE bB
	CRIMSON_NYLIUM t
	CRIMSON_PLANKS C
	CRIMSON_PRESSURE_PLATE lf
	CRIMSON_ROOTS cJ
	CRIMSON_SIGN nU
	CRIMSON_SLAB dc
	CRIMSON_STAIRS fj
	CRIMSON_STEM bd
	CRIMSON_TRAPDOOR lx
	CROSSBOW sT
	CRYING_OBSIDIAN tz
	CUT_COPPER av
	CUT_COPPER_SLAB aD
	CUT_COPPER_STAIRS az
	CUT_RED_SANDSTONE hz
	CUT_RED_SANDSTONE_SLAB dp
	CUT_SANDSTONE bS
	CUT_STANDSTONE_SLAB dh
	CYAN_BANNER sd
	CYAN_BED ph
	CYAN_CANDLE tX
	CYAN_CARPET gs
	CYAN_CONCRETE iz
	CYAN_CONCRETE_POWDER iP
	CYAN_DYE oN
	CYAN_GLAZED_TERRACOTTA ij
	CYAN_SHULKER_BOX hT
	CYAN_STAINED_GLASS gT
	CYAN_STAINED_GLASS_PANE hj
	CYAN_TERRACOTTA fZ
	CYAN_WOOL ck
	DAMAGED_ANVIL fK
	DANDELION cr
	DARK_OAK_BOAT lZ
	DARK_OAK_BUTTON kS
	DARK_OAK_DOOR ln
	DARK_OAK_FENCE ec
	DARK_OAK_FENCE_GATE lE
	DARK_OAK_LEAVES bI
	DARK_OAK_LOG bc
	DARK_OAK_PLANKS B
	DARK_OAK_PRESSURE_PLATE le
	DARK_OAK_SAPLING J
	DARK_OAK_SIGN nT
	DARK_OAK_SLAB db
	DARK_OAK_STAIRS gC
	DARK_OAK_TRAPDOOR lw
	DARK_OAK_WOOD bA
	DARK_PRISMARINE hs
	DARK_PRISMARINE_SLAB dt
	DARK_PRISMARINE_STAIRS hv
	DAYLIGHT_DETECTOR kE
	DEAD_BRAIN_CORAL jm
	DEAD_BRAIN_CORAL_BLOCK iY
	DEAD_BRAIN_CORAL_FAN jx
	DEAD_BUBBLE_CORAL jn
	DEAD_BUBBLE_CORAL_BLOCK iZ
	DEAD_BUBBLE_CORAL_FAN jy
	DEAD_BUSH bY
	DEAD_FIRE_CORAL jo
	DEAD_FIRE_CORAL_BLOCK ja
	DEAD_FIRE_CORAL_FAN jz
	DEAD_HORN_CORAL jp
	DEAD_HORN_CORAL_BLOCK jb
	DEAD_HORN_CORAL_FAN jA
	DEAD_TUBE_CORAL jq
	DEAD_TUBE_CORAL_BLOCK iX
	DEAD_TUBE_CORAL_FAN jw
	DEBUG_STICK sA
	DEEPSLATE i
	DEEPSLATE_BRICKS eB
	DEEPSLATE_BRICK_SLAB kk
	DEEPSLATE_BRICK_STAIRS jT
	DEEPSLATE_BRICK_WALL fG
	DEEPSLATE_COAL_ORE P
	DEEPSLATE_COPPER_ORE T
	DEEPSLATE_DIAMOND_ORE ad
	DEEPSLATE_EMERALD_ORE Z
	DEEPSLATE_GOLD_ORE V
	DEEPSLATE_IRON_ORE R
	DEEPSLATE_LAPIS_ORE ab
	DEEPSLATE_REDSTONE_ORE X
	DEEPSLATE_TILES eD
	DEEPSLATE_TILE_SLAB kl
	DEEPSLATE_TILE_STAIRS jU
	DEEPSLATE_TILE_WALL fH
	DETECTOR_RAIL lI
	DIAMOND mk
	DIAMOND_AXE mU
	DIAMOND_BLOCK aq
	DIAMOND_BOOTS nz
	DIAMOND_CHESTPLATE nx
	DIAMOND_HELMET nw
	DIAMOND_HOE mV
	DIAMOND_HORSE_ARMOR rN
	DIAMOND_LEGGINGS ny
	DIAMOND_ORE ac
	DIAMOND_PICKAXE mT
	DIAMOND_SHOVEL mS
	DIAMOND_SWORD mR
	DIORITE e
	DIORITE_SLAB kh
	DIORITE_STAIRS jQ
	DIORITE_WALL fA
	DIRT p
	DIRT_PATH gD
	DISPENSER ky
	DOLPHIN_SPAWN_EGG pZ
	DONKEY_SPAWN_EGG qa
	DRAGON_BREATH sq
	DRAGON_EGG fc
	DRAGON_HEAD rw
	DRIED_KELP ps
	DRIED_KELP_BLOCK ok
	DRIPSTONE_BLOCK n
	DROPPER kz
	DROWNED_SPAWN_EGG qb
	EGG oo
	ELDER_GUARDIAN_SPAWN_EGG qc
	ELYTRA lT
	EMERALD ml
	EMERALD_BLOCK ff
	EMERALD_ORE Y
	ENCHANTED_BOOK rB
	ENCHANTED_GOLDEN_APPLE nN
	ENCHANTING_TABLE eY
	ENDERMAN_SPAWN_EGG qd
	ENDERMITE_SPAWN_EGG qe
	ENDER_CHEST fe
	ENDER_EYE pN
	ENDER_PEARL pA
	END_CRYSTAL sk
	END_PORTAL_FRAME eZ
	END_ROD dD
	END_STONE fa
	END_STONE_BRICKS fb
	END_STONE_BRICK_SLAB ka
	END_STONE_BRICK_STAIRS jI
	END_STONE_BRICK_WALL fz
	EVOKER_SPAWN_EGG qf
	EXPERIENCE_BOTTLE re
	EXPOSED_COPPER as
	EXPOSED_CUT_COPPER aw
	EXPOSED_CUT_COPPER_SLAB aE
	EXPOSED_CUT_COPPER_STAIRS aA
	FARMLAND dN
	FEATHER nf
	FERMENTED_SPIDER_EYE pI
	FERN bV
	FILLED_MAP pp
	FIREWORK_ROCKET rz
	FIREWORK_STAR rA
	FIRE_CHARGE rf
	FIRE_CORAL jk
	FIRE_CORAL_BLOCK jf
	FIRE_CORAL_FAN ju
	FISHING_ROD or
	FLETCHING_TABLE th
	FLINT nI
	FLINT_AND_STEEL me
	FLOWERING_AZALEA bX
	FLOWERING_AZALEA_LEAVES bK
	FLOWER_BANNER_PATTERN sW
	FLOWER_POT rk
	FOX_SPAWN_EGG qg
	FURNACE dO
	FURNACE_MINECART lO
	GHAST_SPAWN_EGG qh
	GHAST_TEAR pC
	GILDED_BLACKSTONE tD
	GLASS bN
	GLASS_BOTTLE pG
	GLASS_PANE eL
	GLISTERING_MELON_SLICE pO
	GLOBE_BANNER_PATTERN ta
	GLOWSTONE ep
	GLOWSTONE_DUST ou
	GLOW_BERRIES tp
	GLOW_INK_SAC oC
	GLOW_ITEM_FRAME rj
	GLOW_LICHEN eO
	GLOW_SQUID_SPAWN_EGG qi
	GOAT_SPAWN_EGG qj
	GOLDEN_APPLE nM
	GOLDEN_AXE mK
	GOLDEN_BOOTS nD
	GOLDEN_CARROT rq
	GOLDEN_CHESTPLATE nB
	GOLDEN_HELMET nA
	GOLDEN_HOE mL
	GOLDEN_HORSE_ARMOR rM
	GOLDEN_LEGGINGS nC
	GOLDEN_PICKAXE mJ
	GOLDEN_SHOVEL mI
	GOLDEN_SWORD mH
	GOLD_BLOCK ap
	GOLD_INGOT mu
	GOLD_NUGGET pD
	GOLD_ORE U
	GRANITE c
	GRANITE_SLAB kd
	GRANITE_STAIRS jM
	GRANITE_WALL ft
	GRASS bU
	GRASS_BLOCK o
	GRAVEL N
	GRAY_BANNER sb
	GRAY_BED pf
	GRAY_CANDLE tV
	GRAY_CARPET gq
	GRAY_CONCRETE ix
	GRAY_CONCRETE_POWDER iN
	GRAY_DYE oL
	GRAY_GLAZED_TERRACOTTA ih
	GRAY_SHULKER_BOX hR
	GRAY_STAINED_GLASS gR
	GRAY_STAINED_GLASS_PANE hh
	GRAY_TERRACOTTA fX
	GRAY_WOOL ci
	GREEN_BANNER sh
	GREEN_BED pl
	GREEN_CANDLE ub
	GREEN_CARPET gw
	GREEN_CONCRETE iD
	GREEN_CONCRETE_POWDER iT
	GREEN_DYE oR
	GREEN_GLAZED_TERRACOTTA in
	GREEN_SHULKER_BOX hX
	GREEN_STAINED_GLASS gX
	GREEN_STAINED_GLASS_PANE hn
	GREEN_TERRACOTTA gd
	GREEN_WOOL co
	GRINDSTONE ti
	GUARDIAN_SPAWN_EGG qk
	GUNPOWDER ng
	HANGING_ROOTS cS
	HAY_BLOCK gi
	HEART_OF_THE_SEA sS
	HEAVY_WEIGHTED_PRESSURE_PLATE kY
	HOGLIN_SPAWN_EGG ql
	HONEYCOMB tt
	HONEYCOMB_BLOCK tx
	HONEY_BLOCK kv
	HONEY_BOTTLE tw
	HOPPER kx
	HOPPER_MINECART lQ
	HORN_CORAL jl
	HORN_CORAL_BLOCK jg
	HORN_CORAL_FAN jv
	HORSE_SPAWN_EGG qm
	HUSK_SPAWN_EGG qn
	ICE dS
	INFESTED_CHISELED_STONE_BRICKS ev
	INFESTED_COBBLESTONE er
	INFESTED_CRACKED_STONE_BRICKS eu
	INFESTED_DEEPSLATE ew
	INFESTED_MOSSY_STONE_BRICKS et
	INFESTED_STONE eq
	INFESTED_STONE_BRICKS es
	INK_SAC oB
	IRON_AXE mP
	IRON_BARS eJ
	IRON_BLOCK an
	IRON_BOOTS nv
	IRON_CHESTPLATE nt
	IRON_DOOR lh
	IRON_HELMET ns
	IRON_HOE mQ
	IRON_HORSE_ARMOR rL
	IRON_INGOT mq
	IRON_LEGGINGS nu
	IRON_NUGGET sy
	IRON_ORE Q
	IRON_PICKAXE mO
	IRON_SHOVEL mN
	IRON_SWORD mM
	IRON_TRAPDOOR lq
	ITEM_FRAME ri
	JACK_O_LANTERN eh
	JIGSAW mb
	JUKEBOX dW
	JUNGLE_BOAT lX
	JUNGLE_BUTTON kQ
	JUNGLE_DOOR ll
	JUNGLE_FENCE ea
	JUNGLE_FENCE_GATE lC
	JUNGLE_LEAVES bG
	JUNGLE_LOG ba
	JUNGLE_PLANKS z
	JUNGLE_PRESSURE_PLATE lc
	JUNGLE_SAPLING H
	JUNGLE_SIGN nR
	JUNGLE_SLAB cZ
	JUNGLE_STAIRS fi
	JUNGLE_TRAPDOOR lu
	JUNGLE_WOOD by
	KELP cP
	KNOWLEDGE_BOOK sz
	LADDER dP
	LANTERN tm
	LAPIS_BLOCK bP
	LAPIS_LAZULI mm
	LAPIS_ORE aa
	LARGE_AMETHYST_BUD ug
	LARGE_FERN gJ
	LAVA_BUCKET nY
	LEAD rP
	LEATHER ob
	LEATHER_BOOTS nn
	LEATHER_CHESTPLATE nl
	LEATHER_HELMET nk
	LEATHER_HORSE_ARMOR rO
	LEATHER_LEGGINGS nm
	LECTERN kA
	LEVER kC
	LIGHT gh
	LIGHTNING_ROD kD
	LIGHT_BLUE_BANNER rX
	LIGHT_BLUE_BED pb
	LIGHT_BLUE_CANDLE tR
	LIGHT_BLUE_CARPET gm
	LIGHT_BLUE_CONCRETE it
	LIGHT_BLUE_CONCRETE_POWDER iJ
	LIGHT_BLUE_DYE oH
	LIGHT_BLUE_GLAZED_TERRACOTTA id
	LIGHT_BLUE_SHULKER_BOX hN
	LIGHT_BLUE_STAINED_GLASS gN
	LIGHT_BLUE_STAINED_GLASS_PANE hd
	LIGHT_BLUE_TERRACOTTA fT
	LIGHT_BLUE_WOOL ce
	LIGHT_GRAY_BANNER sc
	LIGHT_GRAY_BED pg
	LIGHT_GRAY_CANDLE tW
	LIGHT_GRAY_CARPET gr
	LIGHT_GRAY_CONCRETE iy
	LIGHT_GRAY_CONCRETE_POWDER iO
	LIGHT_GRAY_DYE oM
	LIGHT_GRAY_GLAZED_TERRACOTTA ii
	LIGHT_GRAY_SHULKER_BOX hS
	LIGHT_GRAY_STAINED_GLASS gS
	LIGHT_GRAY_STAINED_GLASS_PANE hi
	LIGHT_GRAY_TERRACOTTA fY
	LIGHT_GRAY_WOOL cj
	LIGHT_WEIGHTED_PRESSURE_PLATE kX
	LILAC gF
	LILY_OF_THE_VALLEY cC
	LILY_PAD eS
	LIME_BANNER rZ
	LIME_BED pd
	LIME_CANDLE tT
	LIME_CARPET go
	LIME_CONCRETE iv
	LIME_CONCRETE_POWDER iL
	LIME_DYE oJ
	LIME_GLAZED_TERRACOTTA if
	LIME_SHULKER_BOX hP
	LIME_STAINED_GLASS gP
	LIME_STAINED_GLASS_PANE hf
	LIME_TERRACOTTA fV
	LIME_WOOL cg
	LINGERING_POTION su
	LLAMA_SPAWN_EGG qo
	LODESTONE ty
	LOOM sV
	MAGENTA_BANNER rW
	MAGENTA_BED pa
	MAGENTA_CANDLE tQ
	MAGENTA_CARPET gl
	MAGENTA_CONCRETE is
	MAGENTA_CONCRETE_POWDER iI
	MAGENTA_DYE oG
	MAGENTA_GLAZED_TERRACOTTA ic
	MAGENTA_SHULKER_BOX hM
	MAGENTA_STAINED_GLASS gM
	MAGENTA_STAINED_GLASS_PANE hc
	MAGENTA_TERRACOTTA fS
	MAGENTA_WOOL cd
	MAGMA_BLOCK hD
	MAGMA_CREAM pK
	MAGMA_CUBE_SPAWN_EGG qp
	MAP rp
	MEDIUM_AMETHYST_BUD uf
	MELON eM
	MELON_SEEDS pu
	MELON_SLICE pr
	MILK_BUCKET oc
	MINECART lM
	MOJANG_BANNER_PATTERN sZ
	MOOSHROOM_SPAWN_EGG qq
	MOSSY_COBBLESTONE dA
	MOSSY_COBBLESTONE_SLAB jZ
	MOSSY_COBBLESTONE_STAIRS jH
	MOSSY_COBBLESTONE_WALL fo
	MOSSY_STONE_BRICKS ey
	MOSSY_STONE_BRICK_SLAB jX
	MOSSY_STONE_BRICK_STAIRS jF
	MOSSY_STONE_BRICK_WALL fs
	MOSS_BLOCK cR
	MOSS_CARPET cQ
	MULE_SPAWN_EGG qr
	MUSHROOM_STEM eI
	MUSHROOM_STEW nd
	MUSIC_DISC_11 sL
	MUSIC_DISC_13 sB
	MUSIC_DISC_BLOCKS sD
	MUSIC_DISC_CAT sC
	MUSIC_DISC_CHIRP sE
	MUSIC_DISC_FAR sF
	MUSIC_DISC_MALL sG
	MUSIC_DISC_MELLOHI sH
	MUSIC_DISC_OTHERSIDE sN
	MUSIC_DISC_PIGSTEP sO
	MUSIC_DISC_STAL sI
	MUSIC_DISC_STRAD sJ
	MUSIC_DISC_WAIT sM
	MUSIC_DISC_WARD sK
	MUTTON rS
	MYCELIUM eR
	NAME_TAG rQ
	NAUTILUS_SHELL sR
	NETHERITE_AXE mZ
	NETHERITE_BLOCK ar
	NETHERITE_BOOTS nH
	NETHERITE_CHESTPLATE nF
	NETHERITE_HELMET nE
	NETHERITE_HOE na
	NETHERITE_INGOT mv
	NETHERITE_LEGGINGS nG
	NETHERITE_PICKAXE mY
	NETHERITE_SCRAP mw
	NETHERITE_SHOVEL mX
	NETHERITE_SWORD mW
	NETHERRACK ei
	NETHER_BRICK rC
	NETHER_BRICKS eT
	NETHER_BRICK_FENCE eW
	NETHER_BRICK_SLAB dm
	NETHER_BRICK_STAIRS eX
	NETHER_BRICK_WALL fv
	NETHER_GOLD_ORE ae
	NETHER_QUARTZ_ORE af
	NETHER_SPROUTS cL
	NETHER_STAR rx
	NETHER_WART pE
	NETHER_WART_BLOCK hE
	NOTE_BLOCK kK
	OAK_BOAT lU
	OAK_BUTTON kN
	OAK_DOOR li
	OAK_FENCE dX
	OAK_FENCE_GATE lz
	OAK_LEAVES bD
	OAK_LOG aX
	OAK_PLANKS w
	OAK_PRESSURE_PLATE kZ
	OAK_SAPLING E
	OAK_SIGN nO
	OAK_SLAB cW
	OAK_STAIRS dK
	OAK_TRAPDOOR lr
	OAK_WOOD bv
	OBSERVER kw
	OBSIDIAN dB
	OCELOT_SPAWN_EGG qs
	ORANGE_BANNER rV
	ORANGE_BED oZ
	ORANGE_CANDLE tP
	ORANGE_CARPET gk
	ORANGE_CONCRETE ir
	ORANGE_CONCRETE_POWDER iH
	ORANGE_DYE oF
	ORANGE_GLAZED_TERRACOTTA ib
	ORANGE_SHULKER_BOX hL
	ORANGE_STAINED_GLASS gL
	ORANGE_STAINED_GLASS_PANE hb
	ORANGE_TERRACOTTA fR
	ORANGE_TULIP cx
	ORANGE_WOOL cc
	OXEYE_DAISY cA
	OXIDIZED_COPPER au
	OXIDIZED_CUT_COPPER ay
	OXIDIZED_CUT_COPPER_SLAB aG
	OXIDIZED_CUT_COPPER_STAIRS aC
	PACKED_ICE gA
	PAINTING nL
	PANDA_SPAWN_EGG qt
	PAPER ol
	PARROT_SPAWN_EGG qu
	PEONY gH
	PETRIFIED_OAK_SLAB di
	PHANTOM_MEMBRANE sQ
	PHANTOM_SPAWN_EGG qv
	PIGLIN_BANNER_PATTERN tb
	PIGLIN_BRUTE_SPAWN_EGG qy
	PIGLIN_SPAWN_EGG qx
	PIG_SPAWN_EGG qw
	PILLAGER_SPAWN_EGG qz
	PINK_BANNER sa
	PINK_BED pe
	PINK_CANDLE tU
	PINK_CARPET gp
	PINK_CONCRETE iw
	PINK_CONCRETE_POWDER iM
	PINK_DYE oK
	PINK_GLAZED_TERRACOTTA ig
	PINK_SHULKER_BOX hQ
	PINK_STAINED_GLASS gQ
	PINK_STAINED_GLASS_PANE hg
	PINK_TERRACOTTA fW
	PINK_TULIP cz
	PINK_WOOL ch
	PISTON ks
	PLAYER_HEAD rt
	PODZOL r
	POINTED_DRIPSTONE ui
	POISONOUS_POTATO ro
	POLAR_BEAR_SPAWN_EGG qA
	POLISHED_ANDESITE h
	POLISHED_ANDESITE_SLAB kg
	POLISHED_ANDESITE_STAIRS jP
	POLISHED_BASALT em
	POLISHED_BLACKSTONE tE
	POLISHED_BLACKSTONE_BRICKS tI
	POLISHED_BLACKSTONE_BRICK_SLAB tJ
	POLISHED_BLACKSTONE_BRICK_STAIRS tK
	POLISHED_BLACKSTONE_BRICK_WALL fD
	POLISHED_BLACKSTONE_BUTTON kM
	POLISHED_BLACKSTONE_PRESSURE_PLATE kW
	POLISHED_BLACKSTONE_SLAB tF
	POLISHED_BLACKSTONE_STAIRS tG
	POLISHED_BLACKSTONE_WALL fC
	POLISHED_DEEPSLATE k
	POLISHED_DEEPSLATE_SLAB kj
	POLISHED_DEEPSLATE_STAIRS jS
	POLISHED_DEEPSLATE_WALL fF
	POLISHED_DIORITE f
	POLISHED_DIORITE_SLAB jY
	POLISHED_DIORITE_STAIRS jG
	POLISHED_GRANITE d
	POLISHED_GRANITE_SLAB jV
	POLISHED_GRANITE_STAIRS jD
	POPPED_CHORUS_FRUIT sm
	POPPY cs
	PORKCHOP nJ
	POTATO rm
	POTION pF
	POWDER_SNOW_BUCKET nZ
	POWERED_RAIL lH
	PRISMARINE hq
	PRISMARINE_BRICKS hr
	PRISMARINE_BRICK_SLAB ds
	PRISMARINE_BRICK_STAIRS hu
	PRISMARINE_CRYSTALS rE
	PRISMARINE_SHARD rD
	PRISMARINE_SLAB dr
	PRISMARINE_STAIRS ht
	PRISMARINE_WALL fq
	PUFFERFISH oy
	PUFFERFISH_BUCKET od
	PUFFERFISH_SPAWN_EGG qB
	PUMPKIN ef
	PUMPKIN_PIE ry
	PUMPKIN_SEEDS pt
	PURPLE_BANNER se
	PURPLE_BED pi
	PURPLE_CANDLE tY
	PURPLE_CARPET gt
	PURPLE_CONCRETE iA
	PURPLE_CONCRETE_POWDER iQ
	PURPLE_DYE oO
	PURPLE_GLAZED_TERRACOTTA ik
	PURPLE_SHULKER_BOX hU
	PURPLE_STAINED_GLASS gU
	PURPLE_STAINED_GLASS_PANE hk
	PURPLE_TERRACOTTA ga
	PURPLE_WOOL cl
	PURPUR_BLOCK dG
	PURPUR_PILLAR dH
	PURPUR_SLAB dq
	PURPUR_STAIRS dI
	QUARTZ mn
	QUARTZ_BLOCK fM
	QUARTZ_BRICKS fN
	QUARTZ_PILLAR fO
	QUARTZ_SLAB dn
	QUARTZ_STAIRS fP
	RABBIT rF
	RABBIT_FOOT rI
	RABBIT_HIDE rJ
	RABBIT_SPAWN_EGG qC
	RABBIT_STEW rH
	RAIL lJ
	RAVAGER_SPAWN_EGG qD
	RAW_COPPER mr
	RAW_COPPER_BLOCK aj
	RAW_GOLD mt
	RAW_GOLD_BLOCK ak
	RAW_IRON mp
	RAW_IRON_BLOCK ai
	REDSTONE kn
	REDSTONE_BLOCK kp
	REDSTONE_LAMP kJ
	REDSTONE_ORE W
	REDSTONE_TORCH ko
	RED_BANNER si
	RED_BED pm
	RED_CANDLE uc
	RED_CARPET gx
	RED_CONCRETE iE
	RED_CONCRETE_POWDER iU
	RED_DYE oS
	RED_GLAZED_TERRACOTTA io
	RED_MUSHROOM cG
	RED_MUSHROOM_BLOCK eH
	RED_NETHER_BRICKS hG
	RED_NETHER_BRICK_SLAB kf
	RED_NETHER_BRICK_STAIRS jO
	RED_NETHER_BRICK_WALL fx
	RED_SAND M
	RED_SANDSTONE hx
	RED_SANDSTONE_SLAB do
	RED_SANDSTONE_STAIRS hA
	RED_SANDSTONE_WALL fr
	RED_SHULKER_BOX hY
	RED_STAINED_GLASS gY
	RED_STAINED_GLASS_PANE ho
	RED_TERRACOTTA ge
	RED_TULIP cw
	RED_WOOL cp
	REPEATER kq
	REPEATING_COMMAND_BLOCK hB
	RESPAWN_ANCHOR tM
	ROOTED_DIRT s
	ROSE_BUSH gG
	ROTTEN_FLESH pz
	SADDLE lL
	SALMON ow
	SALMON_BUCKET oe
	SALMON_SPAWN_EGG qE
	SAND L
	SANDSTONE bQ
	SANDSTONE_SLAB dg
	SANDSTONE_STAIRS fd
	SANDSTONE_WALL fy
	SCAFFOLDING km
	SCULK_SENSOR kF
	SCUTE md
	SEAGRASS bZ
	SEA_LANTERN hw
	SEA_PICKLE ca
	SHEARS pq
	SHEEP_SPAWN_EGG qF
	SHIELD sv
	SHROOMLIGHT ts
	SHULKER_BOX hJ
	SHULKER_SHELL sx
	SHULKER_SPAWN_EGG qG
	SILVERFISH_SPAWN_EGG qH
	SKELETON_HORSE_SPAWN_EGG qJ
	SKELETON_SKULL rr
	SKELETON_SPAWN_EGG qI
	SKULL_BANNER_PATTERN sY
	SLIME_BALL on
	SLIME_BLOCK ku
	SLIME_SPAWN_EGG qK
	SMALL_AMETHYST_BUD ue
	SMALL_DRIPLEAF cU
	SMITHING_TABLE tj
	SMOKER te
	SMOOTH_BASALT en
	SMOOTH_QUARTZ du
	SMOOTH_QUARTZ_SLAB kc
	SMOOTH_QUARTZ_STAIRS jL
	SMOOTH_RED_SANDSTONE dv
	SMOOTH_RED_SANDSTONE_SLAB jW
	SMOOTH_RED_SANDSTONE_STAIRS jE
	SMOOTH_SANDSTONE dw
	SMOOTH_SANDSTONE_SLAB kb
	SMOOTH_SANDSTONE_STAIRS jK
	SMOOTH_STONE dx
	SMOOTH_STONE_SLAB df
	SNOW dR
	SNOWBALL oa
	SNOW_BLOCK dT
	SOUL_CAMPFIRE tr
	SOUL_LANTERN tn
	SOUL_SAND ej
	SOUL_SOIL ek
	SOUL_TORCH eo
	SPAWNER dJ
	SPECTRAL_ARROW ss
	SPIDER_EYE pH
	SPIDER_SPAWN_EGG qL
	SPLASH_POTION sr
	SPONGE bL
	SPORE_BLOSSOM cE
	SPRUCE_BOAT lV
	SPRUCE_BUTTON kO
	SPRUCE_DOOR lj
	SPRUCE_FENCE dY
	SPRUCE_FENCE_GATE lA
	SPRUCE_LEAVES bE
	SPRUCE_LOG aY
	SPRUCE_PLANKS x
	SPRUCE_PRESSURE_PLATE la
	SPRUCE_SAPLING F
	SPRUCE_SIGN nP
	SPRUCE_SLAB cX
	SPRUCE_STAIRS fg
	SPRUCE_TRAPDOOR ls
	SPRUCE_WOOD bw
	SPYGLASS ot
	SQUID_SPAWN_EGG qM
	STICK nb
	STICKY_PISTON kt
	STONE b
	STONECUTTER tk
	STONE_AXE mF
	STONE_BRICKS ex
	STONE_BRICK_SLAB dl
	STONE_BRICK_STAIRS eQ
	STONE_BRICK_WALL fu
	STONE_BUTTON kL
	STONE_HOE mG
	STONE_PICKAXE mE
	STONE_PRESSURE_PLATE kV
	STONE_SHOVEL mD
	STONE_SLAB de
	STONE_STAIRS jJ
	STONE_SWORD mC
	STRAY_SPAWN_EGG qN
	STRIDER_SPAWN_EGG qO
	STRING ne
	STRIPPED_ACACIA_LOG bj
	STRIPPED_ACACIA_WOOD br
	STRIPPED_BIRCH_LOG bh
	STRIPPED_BIRCH_WOOD bp
	STRIPPED_CRIMSON_HYPHAE bt
	STRIPPED_CRIMSON_STEM bl
	STRIPPED_DARK_OAK_LOG bk
	STRIPPED_DARK_OAK_WOOD bs
	STRIPPED_JUNGLE_LOG bi
	STRIPPED_JUNGLE_WOOD bq
	STRIPPED_OAK_LOG bf
	STRIPPED_OAK_WOOD bn
	STRIPPED_SPRUCE_LOG bg
	STRIPPED_SPRUCE_WOOD bo
	STRIPPED_WARPED_HYPHAE bu
	STRIPPED_WARPED_STEM bm
	STRUCTURE_BLOCK ma
	STRUCTURE_VOID hI
	SUGAR oW
	SUGAR_CANE cO
	SUNFLOWER gE
	SUSPICIOUS_STEW sU
	SWEET_BERRIES to
	TALL_GRASS gI
	TARGET kB
	TERRACOTTA gz
	TINTED_GLASS bO
	TIPPED_ARROW st
	TNT kI
	TNT_MINECART lP
	TORCH dC
	TOTEM_OF_UNDYING sw
	TRADER_LLAMA_SPAWN_EGG qP
	TRAPPED_CHEST kH
	TRIDENT sP
	TRIPWIRE_HOOK kG
	TROPICAL_FISH ox
	TROPICAL_FISH_BUCKET og
	TROPICAL_FISH_SPAWN_EGG qQ
	TUBE_CORAL jh
	TUBE_CORAL_BLOCK jc
	TUBE_CORAL_FAN jr
	TUFF m
	TURTLE_EGG iW
	TURTLE_HELMET mc
	TURTLE_SPAWN_EGG qR
	TWISTING_VINES cN
	VEX_SPAWN_EGG qS
	VILLAGER_SPAWN_EGG qT
	VINDICATOR_SPAWN_EGG qU
	VINE eN
	WANDERING_TRADER_SPAWN_EGG qV
	WARPED_BUTTON kU
	WARPED_DOOR lp
	WARPED_FENCE ee
	WARPED_FENCE_GATE lG
	WARPED_FUNGUS cI
	WARPED_FUNGUS_ON_A_STICK lS
	WARPED_HYPHAE bC
	WARPED_NYLIUM u
	WARPED_PLANKS D
	WARPED_PRESSURE_PLATE lg
	WARPED_ROOTS cK
	WARPED_SIGN nV
	WARPED_SLAB dd
	WARPED_STAIRS fk
	WARPED_STEM be
	WARPED_TRAPDOOR ly
	WARPED_WART_BLOCK hF
	WATER_BUCKET nX
	WAXED_COPPER_BLOCK aH
	WAXED_CUT_COPPER aL
	WAXED_CUT_COPPER_SLAB aT
	WAXED_CUT_COPPER_STAIRS aP
	WAXED_EXPOSED_COPPER aI
	WAXED_EXPOSED_CUT_COPPER aM
	WAXED_EXPOSED_CUT_COPPER_SLAB aU
	WAXED_EXPOSED_CUT_COPPER_STAIRS aQ
	WAXED_OXIDIZED_COPPER aK
	WAXED_OXIDIZED_CUT_COPPER aO
	WAXED_OXIDIZED_CUT_COPPER_SLAB aW
	WAXED_OXIDIZED_CUT_COPPER_STAIRS aS
	WAXED_WEATHERED_COPPER aJ
	WAXED_WEATHERED_CUT_COPPER aN
	WAXED_WEATHERED_CUT_COPPER_SLAB aV
	WAXED_WEATHERED_CUT_COPPER_STAIRS aR
	WEATHERED_COPPER at
	WEATHERED_CUT_COPPER ax
	WEATHERED_CUT_COPPER_SLAB aF
	WEATHERED_CUT_COPPER_STAIRS aB
	WEEPING_VINES cM
	WET_SPONGE bM
	WHEAT ni
	WHEAT_SEEDS nh
	WHITE_BANNER rU
	WHITE_BED oY
	WHITE_CANDLE tO
	WHITE_CARPET gj
	WHITE_CONCRETE iq
	WHITE_CONCRETE_POWDER iG
	WHITE_DYE oE
	WHITE_GLAZED_TERRACOTTA ia
	WHITE_SHULKER_BOX hK
	WHITE_STAINED_GLASS gK
	WHITE_STAINED_GLASS_PANE ha
	WHITE_TERRACOTTA fQ
	WHITE_TULIP cy
	WHITE_WOOL cb
	WITCH_SPAWN_EGG qW
	WITHER_ROSE cD
	WITHER_SKELETON_SKULL rs
	WITHER_SKELETON_SPAWN_EGG qX
	WOLF_SPAWN_EGG qY
	WOODEN_AXE mA
	WOODEN_HOE mB
	WOODEN_PICKAXE mz
	WOODEN_SHOVEL my
	WOODEN_SWORD mx
	WRITABLE_BOOK rg
	WRITTEN_BOOK rh
	YELLOW_BANNER rY
	YELLOW_BED pc
	YELLOW_CANDLE tS
	YELLOW_CARPET gn
	YELLOW_CONCRETE iu
	YELLOW_CONCRETE_POWDER iK
	YELLOW_DYE oI
	YELLOW_GLAZED_TERRACOTTA ie
	YELLOW_SHULKER_BOX hO
	YELLOW_STAINED_GLASS gO
	YELLOW_STAINED_GLASS_PANE he
	YELLOW_TERRACOTTA fU
	YELLOW_WOOL cf
	ZOGLIN_SPAWN_EGG qZ
	ZOMBIE_HEAD ru
	ZOMBIE_HORSE_SPAWN_EGG rb
	ZOMBIE_SPAWN_EGG ra
	ZOMBIE_VILLAGER_SPAWN_EGG rc
	ZOMBIFIED_PIGLIN_SPAWN_EGG rd
	ifPart2 (Ljava/lang/Object;)Ljava/util/Optional; a
	registerBlock (Lnet/minecraft/world/item/BlockItem;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Ljava/util/Optional;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/CreativeModeTab;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/CreativeModeTab;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerItem (Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerItem (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
net/minecraft/world/item/MobBucketItem net/minecraft/world/item/MobBucketItem
	emptySound b
	type a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	playEmptySound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/item/SolidBucketItem net/minecraft/world/item/SolidBucketItem
	placeSound b
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
	getDescriptionId ()Ljava/lang/String; a
	getPlaceSound (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/sounds/SoundEvent; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SpyglassItem net/minecraft/world/item/SpyglassItem
	USE_DURATION a
	ZOOM_FOV_MODIFIER b
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	stopUsing (Lnet/minecraft/world/entity/LivingEntity;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/alchemy/Potions net/minecraft/world/item/alchemy/Potions
	AWKWARD e
	EMPTY a
	FIRE_RESISTANCE m
	HARMING B
	HEALING z
	INVISIBILITY h
	LEAPING j
	LONG_FIRE_RESISTANCE n
	LONG_INVISIBILITY i
	LONG_LEAPING k
	LONG_NIGHT_VISION g
	LONG_POISON E
	LONG_REGENERATION H
	LONG_SLOWNESS s
	LONG_SLOW_FALLING Q
	LONG_STRENGTH K
	LONG_SWIFTNESS p
	LONG_TURTLE_MASTER v
	LONG_WATER_BREATHING y
	LONG_WEAKNESS N
	LUCK O
	MUNDANE c
	NIGHT_VISION f
	POISON D
	REGENERATION G
	SLOWNESS r
	SLOW_FALLING P
	STRENGTH J
	STRONG_HARMING C
	STRONG_HEALING A
	STRONG_LEAPING l
	STRONG_POISON F
	STRONG_REGENERATION I
	STRONG_SLOWNESS t
	STRONG_STRENGTH L
	STRONG_SWIFTNESS q
	STRONG_TURTLE_MASTER w
	SWIFTNESS o
	THICK d
	TURTLE_MASTER u
	WATER b
	WATER_BREATHING x
	WEAKNESS M
	register (Ljava/lang/String;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/alchemy/Potion; a
net/minecraft/world/item/crafting/RecipeSerializer net/minecraft/world/item/crafting/RecipeSerializer
	ARMOR_DYE c
	BANNER_DUPLICATE k
	BLASTING_RECIPE q
	BOOK_CLONING d
	CAMPFIRE_COOKING_RECIPE s
	FIREWORK_ROCKET g
	FIREWORK_STAR h
	FIREWORK_STAR_FADE i
	MAP_CLONING e
	MAP_EXTENDING f
	REPAIR_ITEM o
	SHAPED_RECIPE a
	SHAPELESS_RECIPE b
	SHIELD_DECORATION l
	SHULKER_BOX_COLORING m
	SMELTING_RECIPE p
	SMITHING u
	SMOKING_RECIPE r
	STONECUTTER t
	SUSPICIOUS_STEW n
	TIPPED_ARROW j
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	register (Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;)Lnet/minecraft/world/item/crafting/RecipeSerializer; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/enchantment/Enchantment$Rarity net/minecraft/world/item/enchantment/Enchantment$Rarity
	$VALUES f
	COMMON a
	RARE c
	UNCOMMON b
	VERY_RARE d
	weight e
	$values ()[Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; b
	getWeight ()I a
net/minecraft/world/item/enchantment/Enchantment net/minecraft/world/item/enchantment/Enchantment
	category e
	descriptionId f
	rarity b
	slots a
	byId (I)Lnet/minecraft/world/item/enchantment/Enchantment; c
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V a
	doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V b
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I a
	getDescriptionId ()Ljava/lang/String; g
	getFullname (I)Lnet/minecraft/network/chat/Component; d
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	getMinLevel ()I e
	getOrCreateDescriptionId ()Ljava/lang/String; f
	getRarity ()Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; d
	getSlotItems (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map; a
	isCompatibleWith (Lnet/minecraft/world/item/enchantment/Enchantment;)Z b
	isCurse ()Z c
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/Enchantments net/minecraft/world/item/enchantment/Enchantments
	ALL_DAMAGE_PROTECTION a
	AQUA_AFFINITY g
	ARMOR_SLOTS M
	BANE_OF_ARTHROPODS o
	BINDING_CURSE k
	BLAST_PROTECTION d
	BLOCK_EFFICIENCY t
	BLOCK_FORTUNE w
	CHANNELING G
	DEPTH_STRIDER i
	FALL_PROTECTION c
	FIRE_ASPECT q
	FIRE_PROTECTION b
	FISHING_LUCK B
	FISHING_SPEED C
	FLAMING_ARROWS z
	FROST_WALKER j
	IMPALING E
	INFINITY_ARROWS A
	KNOCKBACK p
	LOYALTY D
	MENDING K
	MOB_LOOTING r
	MULTISHOT H
	PIERCING J
	POWER_ARROWS x
	PROJECTILE_PROTECTION e
	PUNCH_ARROWS y
	QUICK_CHARGE I
	RESPIRATION f
	RIPTIDE F
	SHARPNESS m
	SILK_TOUCH u
	SMITE n
	SOUL_SPEED l
	SWEEPING_EDGE s
	THORNS h
	UNBREAKING v
	VANISHING_CURSE L
	register (Ljava/lang/String;Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/item/enchantment/Enchantment; a
net/minecraft/world/level/ClipBlockStateContext net/minecraft/world/level/ClipBlockStateContext
	block c
	from a
	to b
	getFrom ()Lnet/minecraft/world/phys/Vec3; b
	getTo ()Lnet/minecraft/world/phys/Vec3; a
	isTargetBlock ()Ljava/util/function/Predicate; c
net/minecraft/world/level/Explosion net/minecraft/world/level/Explosion
	EXPLOSION_DAMAGE_CALCULATOR a
	MAX_DROPS_PER_COMBINED_STACK b
	blockInteraction d
	damageCalculator m
	damageSource l
	fire c
	hitPlayers o
	level f
	radius k
	random e
	source j
	toBlow n
	x g
	y h
	z i
	addBlockDrops (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	clearToBlow ()V e
	explode ()V a
	finalizeExplosion (Z)V a
	getDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; b
	getHitPlayers ()Ljava/util/Map; c
	getSeenPercent (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;)F a
	getSourceMob ()Lnet/minecraft/world/entity/LivingEntity; d
	getToBlow ()Ljava/util/List; f
	makeDamageCalculator (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/ExplosionDamageCalculator; a
net/minecraft/world/level/FoliageColor net/minecraft/world/level/FoliageColor
	pixels a
	get (DD)I a
	getBirchColor ()I b
	getDefaultColor ()I c
	getEvergreenColor ()I a
	init ([I)V a
net/minecraft/world/level/GameRules net/minecraft/world/level/GameRules
	DEFAULT_RANDOM_TICK_SPEED a
	GAME_RULE_TYPES L
	LOGGER K
	RULE_ANNOUNCE_ADVANCEMENTS x
	RULE_COMMANDBLOCKOUTPUT i
	RULE_DAYLIGHT k
	RULE_DISABLE_ELYTRA_MOVEMENT_CHECK s
	RULE_DISABLE_RAIDS y
	RULE_DOBLOCKDROPS g
	RULE_DOENTITYDROPS h
	RULE_DOFIRETICK b
	RULE_DOINSOMNIA z
	RULE_DOMOBLOOT f
	RULE_DOMOBSPAWNING e
	RULE_DO_IMMEDIATE_RESPAWN A
	RULE_DO_PATROL_SPAWNING F
	RULE_DO_TRADER_SPAWNING G
	RULE_DROWNING_DAMAGE B
	RULE_FALL_DAMAGE C
	RULE_FIRE_DAMAGE D
	RULE_FORGIVE_DEAD_PLAYERS H
	RULE_FREEZE_DAMAGE E
	RULE_KEEPINVENTORY d
	RULE_LIMITED_CRAFTING v
	RULE_LOGADMINCOMMANDS l
	RULE_MAX_COMMAND_CHAIN_LENGTH w
	RULE_MAX_ENTITY_CRAMMING t
	RULE_MOBGRIEFING c
	RULE_NATURAL_REGENERATION j
	RULE_PLAYERS_SLEEPING_PERCENTAGE J
	RULE_RANDOMTICKING n
	RULE_REDUCEDDEBUGINFO p
	RULE_SENDCOMMANDFEEDBACK o
	RULE_SHOWDEATHMESSAGES m
	RULE_SPAWN_RADIUS r
	RULE_SPECTATORSGENERATECHUNKS q
	RULE_UNIVERSAL_ANGER I
	RULE_WEATHER_CYCLE u
	rules M
	assignCap (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V a
	assignFrom (Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V a
	callVisitorCap (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V a
	copy ()Lnet/minecraft/world/level/GameRules; b
	createTag ()Lnet/minecraft/nbt/CompoundTag; a
	getBoolean (Lnet/minecraft/world/level/GameRules$Key;)Z b
	getInt (Lnet/minecraft/world/level/GameRules$Key;)I c
	getRule (Lnet/minecraft/world/level/GameRules$Key;)Lnet/minecraft/world/level/GameRules$Value; a
	loadFromTag (Lcom/mojang/serialization/DynamicLike;)V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/GameRules$Category;Lnet/minecraft/world/level/GameRules$Type;)Lnet/minecraft/world/level/GameRules$Key; a
	visitGameRuleTypes (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;)V a
net/minecraft/world/level/GrassColor net/minecraft/world/level/GrassColor
	pixels a
	get (DD)I a
	init ([I)V a
net/minecraft/world/level/LocalMobCapCalculator net/minecraft/world/level/LocalMobCapCalculator
	chunkMap c
	playerMobCounts b
	playersNearChunk a
	addMob (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/MobCategory;)V a
	canSpawn (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/ChunkPos;)Z a
	getPlayersNear (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/List; a
net/minecraft/world/level/biome/BiomeManager net/minecraft/world/level/biome/BiomeManager
	CHUNK_CENTER_QUART a
	ZOOM c
	ZOOM_BITS b
	ZOOM_MASK d
	biomeZoomSeed f
	noiseBiomeSource e
	getBiome (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome; a
	getFiddle (J)D b
	getFiddledDistance (JIIIDDD)D a
	getNoiseBiomeAtPosition (DDD)Lnet/minecraft/world/level/biome/Biome; a
	getNoiseBiomeAtPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome; b
	getNoiseBiomeAtQuart (III)Lnet/minecraft/world/level/biome/Biome; a
	obfuscateSeed (J)J a
	withDifferentSource (Lnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/BiomeManager; a
net/minecraft/world/level/biome/Biomes net/minecraft/world/level/biome/Biomes
	BADLANDS z
	BAMBOO_JUNGLE y
	BASALT_DELTAS ad
	BEACH K
	BIRCH_FOREST j
	COLD_OCEAN S
	CRIMSON_FOREST ab
	DARK_FOREST k
	DEEP_COLD_OCEAN T
	DEEP_FROZEN_OCEAN V
	DEEP_LUKEWARM_OCEAN P
	DEEP_OCEAN R
	DESERT f
	DRIPSTONE_CAVES X
	END_BARRENS ai
	END_HIGHLANDS af
	END_MIDLANDS ag
	ERODED_BADLANDS A
	FLOWER_FOREST i
	FOREST h
	FROZEN_OCEAN U
	FROZEN_PEAKS F
	FROZEN_RIVER J
	GROVE D
	ICE_SPIKES e
	JAGGED_PEAKS G
	JUNGLE w
	LUKEWARM_OCEAN O
	LUSH_CAVES Y
	MEADOW C
	MUSHROOM_FIELDS W
	NETHER_WASTES Z
	OCEAN Q
	OLD_GROWTH_BIRCH_FOREST l
	OLD_GROWTH_PINE_TAIGA m
	OLD_GROWTH_SPRUCE_TAIGA n
	PLAINS b
	RIVER I
	SAVANNA q
	SAVANNA_PLATEAU r
	SMALL_END_ISLANDS ah
	SNOWY_BEACH L
	SNOWY_PLAINS d
	SNOWY_SLOPES E
	SNOWY_TAIGA p
	SOUL_SAND_VALLEY ac
	SPARSE_JUNGLE x
	STONY_PEAKS H
	STONY_SHORE M
	SUNFLOWER_PLAINS c
	SWAMP g
	TAIGA o
	THE_END ae
	THE_VOID a
	WARM_OCEAN N
	WARPED_FOREST aa
	WINDSWEPT_FOREST u
	WINDSWEPT_GRAVELLY_HILLS t
	WINDSWEPT_HILLS s
	WINDSWEPT_SAVANNA v
	WOODED_BADLANDS B
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/biome/Climate net/minecraft/world/level/biome/Climate
	DEBUG_SLOW_BIOME_SEARCH b
	PARAMETER_COUNT a
	QUANTIZATION_FACTOR c
	findSpawnPosition (Ljava/util/List;Lnet/minecraft/world/level/levelgen/NoiseSampler;)Lnet/minecraft/core/BlockPos; a
	parameters (FFFFFFF)Lnet/minecraft/world/level/biome/Climate$ParameterPoint; a
	parameters (Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;F)Lnet/minecraft/world/level/biome/Climate$ParameterPoint; a
	quantizeCoord (F)J a
	target (FFFFFF)Lnet/minecraft/world/level/biome/Climate$TargetPoint; a
	unquantizeCoord (J)F a
net/minecraft/world/level/biome/OverworldBiomeBuilder net/minecraft/world/level/biome/OverworldBiomeBuilder
	EROSION_INDEX_1_START f
	EROSION_INDEX_2_START g
	EXTREME_HILLS F
	FAR_INLAND_START e
	FROZEN_RANGE q
	FULL_RANGE m
	HIGH_END j
	HIGH_START a
	LOW_START i
	MIDDLE_BIOMES B
	MIDDLE_BIOMES_VARIANT C
	MID_INLAND_START d
	NEAR_INLAND_START c
	OCEANS A
	PEAK_END l
	PEAK_SIZE k
	PEAK_START b
	PLATEAU_BIOMES D
	PLATEAU_BIOMES_VARIANT E
	UNFROZEN_RANGE r
	VALLEY_SIZE h
	coastContinentalness v
	deepOceanContinentalness t
	erosions p
	farInlandContinentalness z
	humidities o
	inlandContinentalness w
	midInlandContinentalness y
	mushroomFieldsContinentalness s
	nearInlandContinentalness x
	oceanContinentalness u
	temperatures n
	addBiomes (Ljava/util/function/Consumer;)V a
	addHighSlice (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V b
	addInlandBiomes (Ljava/util/function/Consumer;)V c
	addLowSlice (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V d
	addMidSlice (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V c
	addOffCoastBiomes (Ljava/util/function/Consumer;)V b
	addPeaks (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V a
	addSurfaceBiome (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;FLnet/minecraft/resources/ResourceKey;)V a
	addUndergroundBiome (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;FLnet/minecraft/resources/ResourceKey;)V b
	addUndergroundBiomes (Ljava/util/function/Consumer;)V d
	addValleys (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V e
	getDebugStringForContinentalness (D)Ljava/lang/String; b
	getDebugStringForErosion (D)Ljava/lang/String; c
	getDebugStringForHumidity (D)Ljava/lang/String; e
	getDebugStringForNoiseValue (D[Lnet/minecraft/world/level/biome/Climate$Parameter;)Ljava/lang/String; a
	getDebugStringForPeaksAndValleys (D)Ljava/lang/String; a
	getDebugStringForTemperature (D)Ljava/lang/String; d
	maybePickShatteredBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; a
	pickBadlandsBiome (ILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; a
	pickBeachBiome (II)Lnet/minecraft/resources/ResourceKey; a
	pickExtremeHillsBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; h
	pickMiddleBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; a
	pickMiddleBiomeOrBadlandsIfHot (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; b
	pickMiddleBiomeOrBadlandsIfHotOrSlopeIfCold (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; c
	pickPeakBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; f
	pickPlateauBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; e
	pickShatteredCoastBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; d
	pickSlopeBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; g
	spawnTarget ()Ljava/util/List; a
net/minecraft/world/level/biome/TerrainShaper net/minecraft/world/level/biome/TerrainShaper
	CODEC a
	GLOBAL_OFFSET c
	NO_TRANSFORM d
	SPLINE_CODEC b
	factorSampler f
	jaggednessSampler g
	offsetSampler e
	addDebugBiomesToVisualizeSplinePoints (Ljava/util/function/Consumer;)V a
	buildErosionJaggednessSpline (FFFFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildErosionOffsetSpline (FFFFFFZZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildMountainRidgeSplineWithPoints (FZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; b
	buildRidgeJaggednessSpline (FFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildWeirdnessJaggednessSpline (FLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	calculateMountainRidgeZeroContinentalnessPoint (F)F e
	calculateSlope (FFFF)F a
	factor (Lnet/minecraft/world/level/biome/TerrainShaper$Point;)F b
	factorSampler ()Lnet/minecraft/util/CubicSpline; b
	getAmplifiedFactor (F)F c
	getAmplifiedJaggedness (F)F d
	getAmplifiedOffset (F)F b
	getErosionFactor (FZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	jaggedness (Lnet/minecraft/world/level/biome/TerrainShaper$Point;)F c
	jaggednessSampler ()Lnet/minecraft/util/CubicSpline; c
	makePoint (FFF)Lnet/minecraft/world/level/biome/TerrainShaper$Point; a
	mountainContinentalness (FFF)F b
	offset (Lnet/minecraft/world/level/biome/TerrainShaper$Point;)F a
	offsetSampler ()Lnet/minecraft/util/CubicSpline; a
	overworld (Z)Lnet/minecraft/world/level/biome/TerrainShaper; a
	peaksAndValleys (F)F a
	ridgeSpline (FFFFFFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
net/minecraft/world/level/block/AbstractCandleBlock net/minecraft/world/level/block/AbstractCandleBlock
	LIGHT_PER_CANDLE a
	LIT b
	addParticlesAndSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;Ljava/util/Random;)V a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeLit (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	extinguish (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; a
	isLit (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	setLit (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Z)V a
net/minecraft/world/level/block/AbstractCauldronBlock net/minecraft/world/level/block/AbstractCauldronBlock
	FLOOR_LEVEL a
	INSIDE g
	LEG_DEPTH f
	LEG_HEIGHT e
	LEG_WIDTH d
	SHAPE b
	SIDE_THICKNESS c
	interactions h
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isEntityInsideContent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AmethystClusterBlock net/minecraft/world/level/block/AmethystClusterBlock
	FACING b
	WATERLOGGED a
	downAabb h
	eastAabb e
	northAabb c
	southAabb d
	upAabb g
	westAabb f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/AzaleaBlock net/minecraft/world/level/block/AzaleaBlock
	SHAPE b
	TREE_GROWER a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BigDripleafBlock net/minecraft/world/level/block/BigDripleafBlock
	DELAY_UNTIL_NEXT_TILT_STATE d
	ENTITY_DETECTION_MIN_Y g
	LEAF_SHAPES i
	LOWEST_LEAF_TOP h
	MAX_GEN_HEIGHT e
	NO_TICK c
	STEM_SHAPES k
	STEM_SLICER j
	STEM_WIDTH f
	TILT b
	WATERLOGGED a
	shapesCache l
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canEntityTilt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	canPlaceAt (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canReplace (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/core/Direction;)Z a
	placeWithRandomHeight (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	playTiltSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;)V a
	resetTilt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	setTilt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Tilt;)V a
	setTiltAndScheduleTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Tilt;Lnet/minecraft/sounds/SoundEvent;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BigDripleafStemBlock net/minecraft/world/level/block/BigDripleafStemBlock
	EAST_SHAPE c
	NORTH_SHAPE a
	SOUTH_SHAPE b
	STEM_WIDTH f
	WATERLOGGED e
	WEST_SHAPE d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/core/Direction;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/Block net/minecraft/world/level/block/Block
	BLOCK_STATE_REGISTRY p
	CACHE_SIZE e
	INDESTRUCTIBLE B
	INSTANT C
	LOGGER o
	OCCLUSION_CACHE f
	SHAPE_FULL_BLOCK_CACHE a
	UPDATE_ALL z
	UPDATE_ALL_IMMEDIATE A
	UPDATE_CLIENTS r
	UPDATE_IMMEDIATE t
	UPDATE_INVISIBLE s
	UPDATE_KNOWN_SHAPE u
	UPDATE_LIMIT D
	UPDATE_MOVE_BY_PISTON w
	UPDATE_NEIGHBORS q
	UPDATE_NONE y
	UPDATE_SUPPRESS_DROPS v
	UPDATE_SUPPRESS_LIGHT x
	defaultBlockState b
	descriptionId c
	item d
	stateDefinition E
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	asBlock ()Lnet/minecraft/world/level/block/Block; p
	asItem ()Lnet/minecraft/world/item/Item; k
	box (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	byItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/block/Block; a
	canSupportCenter (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSupportRigidBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	copyProperty (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/block/state/BlockState; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	defaultBlockState ()Lnet/minecraft/world/level/block/state/BlockState; n
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	dropFromExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)V a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)V b
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDescriptionId ()Ljava/lang/String; h
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)Ljava/util/List; a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getExplosionResistance ()F f
	getFriction ()F i
	getId (Lnet/minecraft/world/level/block/state/BlockState;)I i
	getJumpFactor ()F l
	getName ()Lnet/minecraft/network/chat/MutableComponent; g
	getShapeForEachState (Ljava/util/function/Function;)Lcom/google/common/collect/ImmutableMap; a
	getSoundType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/SoundType; m
	getSpeedFactor ()F j
	getStateDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; m
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	hasDynamicShape ()Z o
	isExceptionForConnection (Lnet/minecraft/world/level/block/state/BlockState;)Z j
	isFaceFull (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z a
	isPossibleToRespawnInThis ()Z X_
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isShapeFullBlock (Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	popExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)V a
	popResource (Lnet/minecraft/world/level/Level;Ljava/util/function/Supplier;Lnet/minecraft/world/item/ItemStack;)V a
	popResource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	popResourceFromFace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	pushEntitiesUp (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	registerDefaultState (Lnet/minecraft/world/level/block/state/BlockState;)V k
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	shouldRenderFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Z a
	spawnDestroyParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	stateById (I)Lnet/minecraft/world/level/block/state/BlockState; a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
	updateFromNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	updateOrDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	updateOrDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
	withPropertiesOf (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; l
net/minecraft/world/level/block/Blocks net/minecraft/world/level/block/Blocks
	ACACIA_BUTTON fn
	ACACIA_DOOR iI
	ACACIA_FENCE iD
	ACACIA_FENCE_GATE iy
	ACACIA_LEAVES ao
	ACACIA_LOG Q
	ACACIA_PLANKS r
	ACACIA_PRESSURE_PLATE cD
	ACACIA_SAPLING x
	ACACIA_SIGN cj
	ACACIA_SLAB ic
	ACACIA_STAIRS gy
	ACACIA_TRAPDOOR dA
	ACACIA_WALL_SIGN ct
	ACACIA_WOOD ac
	ACTIVATOR_RAIL fQ
	AIR a
	ALLIUM by
	AMETHYST_BLOCK oF
	AMETHYST_CLUSTER oH
	ANCIENT_DEBRIS nv
	ANDESITE g
	ANDESITE_SLAB lO
	ANDESITE_STAIRS lB
	ANDESITE_WALL lZ
	ANVIL fB
	ATTACHED_MELON_STEM dU
	ATTACHED_PUMPKIN_STEM dT
	AZALEA pE
	AZALEA_LEAVES aq
	AZURE_BLUET bz
	BAMBOO lm
	BAMBOO_SAPLING ll
	BARREL mg
	BARRIER gB
	BASALT cW
	BEACON eF
	BEDROCK z
	BEEHIVE nr
	BEETROOTS iR
	BEE_NEST nq
	BELL mp
	BIG_DRIPLEAF pI
	BIG_DRIPLEAF_STEM pJ
	BIRCH_BUTTON fl
	BIRCH_DOOR iG
	BIRCH_FENCE iB
	BIRCH_FENCE_GATE iw
	BIRCH_LEAVES am
	BIRCH_LOG O
	BIRCH_PLANKS p
	BIRCH_PRESSURE_PLATE cB
	BIRCH_SAPLING v
	BIRCH_SIGN ci
	BIRCH_SLAB ia
	BIRCH_STAIRS eC
	BIRCH_TRAPDOOR dy
	BIRCH_WALL_SIGN cs
	BIRCH_WOOD aa
	BLACKSTONE nD
	BLACKSTONE_SLAB nG
	BLACKSTONE_STAIRS nE
	BLACKSTONE_WALL nF
	BLACK_BANNER hD
	BLACK_BED aS
	BLACK_CANDLE on
	BLACK_CANDLE_CAKE oE
	BLACK_CARPET he
	BLACK_CONCRETE jZ
	BLACK_CONCRETE_POWDER kp
	BLACK_GLAZED_TERRACOTTA jJ
	BLACK_SHULKER_BOX jt
	BLACK_STAINED_GLASS dv
	BLACK_STAINED_GLASS_PANE gx
	BLACK_TERRACOTTA gh
	BLACK_WALL_BANNER hT
	BLACK_WOOL bt
	BLAST_FURNACE mi
	BLUE_BANNER hz
	BLUE_BED aO
	BLUE_CANDLE oj
	BLUE_CANDLE_CAKE oA
	BLUE_CARPET ha
	BLUE_CONCRETE jV
	BLUE_CONCRETE_POWDER kl
	BLUE_GLAZED_TERRACOTTA jF
	BLUE_ICE lj
	BLUE_ORCHID bx
	BLUE_SHULKER_BOX jp
	BLUE_STAINED_GLASS dr
	BLUE_STAINED_GLASS_PANE gt
	BLUE_TERRACOTTA gd
	BLUE_WALL_BANNER hP
	BLUE_WOOL bp
	BONE_BLOCK ja
	BOOKSHELF bO
	BRAIN_CORAL kK
	BRAIN_CORAL_BLOCK kA
	BRAIN_CORAL_FAN kU
	BRAIN_CORAL_WALL_FAN le
	BREWING_STAND ej
	BRICKS bM
	BRICK_SLAB ik
	BRICK_STAIRS ea
	BRICK_WALL lS
	BROWN_BANNER hA
	BROWN_BED aP
	BROWN_CANDLE ok
	BROWN_CANDLE_CAKE oB
	BROWN_CARPET hb
	BROWN_CONCRETE jW
	BROWN_CONCRETE_POWDER km
	BROWN_GLAZED_TERRACOTTA jG
	BROWN_MUSHROOM bI
	BROWN_MUSHROOM_BLOCK dM
	BROWN_SHULKER_BOX jq
	BROWN_STAINED_GLASS ds
	BROWN_STAINED_GLASS_PANE gu
	BROWN_TERRACOTTA ge
	BROWN_WALL_BANNER hQ
	BROWN_WOOL bq
	BUBBLE_COLUMN lq
	BUBBLE_CORAL kL
	BUBBLE_CORAL_BLOCK kB
	BUBBLE_CORAL_FAN kV
	BUBBLE_CORAL_WALL_FAN lf
	BUDDING_AMETHYST oG
	CACTUS cN
	CAKE de
	CALCITE oM
	CAMPFIRE ms
	CANDLE nX
	CANDLE_CAKE oo
	CARROTS fh
	CARTOGRAPHY_TABLE mj
	CARVED_PUMPKIN dc
	CAULDRON ek
	CAVE_AIR lp
	CAVE_VINES pB
	CAVE_VINES_PLANT pC
	CHAIN dQ
	CHAIN_COMMAND_BLOCK iV
	CHEST bX
	CHIPPED_ANVIL fC
	CHISELED_DEEPSLATE qe
	CHISELED_NETHER_BRICKS nU
	CHISELED_POLISHED_BLACKSTONE nK
	CHISELED_QUARTZ_BLOCK fN
	CHISELED_RED_SANDSTONE hV
	CHISELED_SANDSTONE aA
	CHISELED_STONE_BRICKS dF
	CHORUS_FLOWER iM
	CHORUS_PLANT iL
	CLAY cO
	COAL_BLOCK hg
	COAL_ORE J
	COARSE_DIRT k
	COBBLED_DEEPSLATE pO
	COBBLED_DEEPSLATE_SLAB pQ
	COBBLED_DEEPSLATE_STAIRS pP
	COBBLED_DEEPSLATE_WALL pR
	COBBLESTONE m
	COBBLESTONE_SLAB ij
	COBBLESTONE_STAIRS cp
	COBBLESTONE_WALL eG
	COBWEB aW
	COCOA et
	COMMAND_BLOCK eE
	COMPARATOR fH
	COMPOSTER no
	CONDUIT lk
	COPPER_BLOCK oT
	COPPER_ORE oU
	CORNFLOWER bF
	CRACKED_DEEPSLATE_BRICKS qf
	CRACKED_DEEPSLATE_TILES qg
	CRACKED_NETHER_BRICKS nV
	CRACKED_POLISHED_BLACKSTONE_BRICKS nJ
	CRACKED_STONE_BRICKS dE
	CRAFTING_TABLE cc
	CREEPER_HEAD fx
	CREEPER_WALL_HEAD fy
	CRIMSON_BUTTON ne
	CRIMSON_DOOR ng
	CRIMSON_FENCE mW
	CRIMSON_FENCE_GATE na
	CRIMSON_FUNGUS mJ
	CRIMSON_HYPHAE mG
	CRIMSON_NYLIUM mI
	CRIMSON_PLANKS mQ
	CRIMSON_PRESSURE_PLATE mU
	CRIMSON_ROOTS mP
	CRIMSON_SIGN ni
	CRIMSON_SLAB mS
	CRIMSON_STAIRS nc
	CRIMSON_STEM mE
	CRIMSON_TRAPDOOR mY
	CRIMSON_WALL_SIGN nk
	CRYING_OBSIDIAN nw
	CUT_COPPER oZ
	CUT_COPPER_SLAB ph
	CUT_COPPER_STAIRS pd
	CUT_RED_SANDSTONE hW
	CUT_RED_SANDSTONE_SLAB ip
	CUT_SANDSTONE aB
	CUT_SANDSTONE_SLAB ih
	CYAN_BANNER hx
	CYAN_BED aM
	CYAN_CANDLE oh
	CYAN_CANDLE_CAKE oy
	CYAN_CARPET gY
	CYAN_CONCRETE jT
	CYAN_CONCRETE_POWDER kj
	CYAN_GLAZED_TERRACOTTA jD
	CYAN_SHULKER_BOX jn
	CYAN_STAINED_GLASS dp
	CYAN_STAINED_GLASS_PANE gr
	CYAN_TERRACOTTA gb
	CYAN_WALL_BANNER hN
	CYAN_WOOL bn
	DAMAGED_ANVIL fD
	DANDELION bv
	DARK_OAK_BUTTON fo
	DARK_OAK_DOOR iJ
	DARK_OAK_FENCE iE
	DARK_OAK_FENCE_GATE iz
	DARK_OAK_LEAVES ap
	DARK_OAK_LOG R
	DARK_OAK_PLANKS s
	DARK_OAK_PRESSURE_PLATE cE
	DARK_OAK_SAPLING y
	DARK_OAK_SIGN cl
	DARK_OAK_SLAB id
	DARK_OAK_STAIRS gz
	DARK_OAK_TRAPDOOR dB
	DARK_OAK_WALL_SIGN cv
	DARK_OAK_WOOD ad
	DARK_PRISMARINE gG
	DARK_PRISMARINE_SLAB gM
	DARK_PRISMARINE_STAIRS gJ
	DAYLIGHT_DETECTOR fI
	DEAD_BRAIN_CORAL kF
	DEAD_BRAIN_CORAL_BLOCK kv
	DEAD_BRAIN_CORAL_FAN kP
	DEAD_BRAIN_CORAL_WALL_FAN kZ
	DEAD_BUBBLE_CORAL kG
	DEAD_BUBBLE_CORAL_BLOCK kw
	DEAD_BUBBLE_CORAL_FAN kQ
	DEAD_BUBBLE_CORAL_WALL_FAN la
	DEAD_BUSH aZ
	DEAD_FIRE_CORAL kH
	DEAD_FIRE_CORAL_BLOCK kx
	DEAD_FIRE_CORAL_FAN kR
	DEAD_FIRE_CORAL_WALL_FAN lb
	DEAD_HORN_CORAL kI
	DEAD_HORN_CORAL_BLOCK ky
	DEAD_HORN_CORAL_FAN kS
	DEAD_HORN_CORAL_WALL_FAN lc
	DEAD_TUBE_CORAL kE
	DEAD_TUBE_CORAL_BLOCK ku
	DEAD_TUBE_CORAL_FAN kO
	DEAD_TUBE_CORAL_WALL_FAN kY
	DEEPSLATE pN
	DEEPSLATE_BRICKS qa
	DEEPSLATE_BRICK_SLAB qc
	DEEPSLATE_BRICK_STAIRS qb
	DEEPSLATE_BRICK_WALL qd
	DEEPSLATE_COAL_ORE K
	DEEPSLATE_COPPER_ORE oV
	DEEPSLATE_DIAMOND_ORE ca
	DEEPSLATE_EMERALD_ORE ew
	DEEPSLATE_GOLD_ORE G
	DEEPSLATE_IRON_ORE I
	DEEPSLATE_LAPIS_ORE aw
	DEEPSLATE_REDSTONE_ORE cG
	DEEPSLATE_TILES pW
	DEEPSLATE_TILE_SLAB pY
	DEEPSLATE_TILE_STAIRS pX
	DEEPSLATE_TILE_WALL pZ
	DETECTOR_RAIL aU
	DIAMOND_BLOCK cb
	DIAMOND_ORE bZ
	DIORITE e
	DIORITE_SLAB lR
	DIORITE_STAIRS lE
	DIORITE_WALL md
	DIRT j
	DIRT_PATH iS
	DISPENSER ay
	DRAGON_EGG er
	DRAGON_HEAD fz
	DRAGON_WALL_HEAD fA
	DRIED_KELP_BLOCK ks
	DRIPSTONE_BLOCK pA
	DROPPER fR
	EMERALD_BLOCK eA
	EMERALD_ORE ev
	ENCHANTING_TABLE ei
	ENDER_CHEST ex
	END_GATEWAY iT
	END_PORTAL eo
	END_PORTAL_FRAME ep
	END_ROD iK
	END_STONE eq
	END_STONE_BRICKS iQ
	END_STONE_BRICK_SLAB lK
	END_STONE_BRICK_STAIRS lw
	END_STONE_BRICK_WALL mc
	EXPOSED_COPPER oS
	EXPOSED_CUT_COPPER oY
	EXPOSED_CUT_COPPER_SLAB pg
	EXPOSED_CUT_COPPER_STAIRS pc
	FARMLAND ce
	FERN aY
	FIRE bT
	FIRE_CORAL kM
	FIRE_CORAL_BLOCK kC
	FIRE_CORAL_FAN kW
	FIRE_CORAL_WALL_FAN lg
	FLETCHING_TABLE mk
	FLOWERING_AZALEA pF
	FLOWERING_AZALEA_LEAVES ar
	FLOWER_POT eI
	FROSTED_ICE iW
	FURNACE cf
	GILDED_BLACKSTONE nO
	GLASS au
	GLASS_PANE dR
	GLOWSTONE da
	GLOW_LICHEN dY
	GOLD_BLOCK bK
	GOLD_ORE F
	GRANITE c
	GRANITE_SLAB lN
	GRANITE_STAIRS lA
	GRANITE_WALL lW
	GRASS aX
	GRASS_BLOCK i
	GRAVEL E
	GRAY_BANNER hv
	GRAY_BED aK
	GRAY_CANDLE of
	GRAY_CANDLE_CAKE ow
	GRAY_CARPET gW
	GRAY_CONCRETE jR
	GRAY_CONCRETE_POWDER kh
	GRAY_GLAZED_TERRACOTTA jB
	GRAY_SHULKER_BOX jl
	GRAY_STAINED_GLASS dn
	GRAY_STAINED_GLASS_PANE gp
	GRAY_TERRACOTTA fZ
	GRAY_WALL_BANNER hL
	GRAY_WOOL bl
	GREEN_BANNER hB
	GREEN_BED aQ
	GREEN_CANDLE ol
	GREEN_CANDLE_CAKE oC
	GREEN_CARPET hc
	GREEN_CONCRETE jX
	GREEN_CONCRETE_POWDER kn
	GREEN_GLAZED_TERRACOTTA jH
	GREEN_SHULKER_BOX jr
	GREEN_STAINED_GLASS dt
	GREEN_STAINED_GLASS_PANE gv
	GREEN_TERRACOTTA gf
	GREEN_WALL_BANNER hR
	GREEN_WOOL br
	GRINDSTONE ml
	HANGING_ROOTS pL
	HAY_BLOCK gO
	HEAVY_WEIGHTED_PRESSURE_PLATE fG
	HONEYCOMB_BLOCK nt
	HONEY_BLOCK ns
	HOPPER fL
	HORN_CORAL kN
	HORN_CORAL_BLOCK kD
	HORN_CORAL_FAN kX
	HORN_CORAL_WALL_FAN lh
	ICE cL
	INFESTED_CHISELED_STONE_BRICKS dL
	INFESTED_COBBLESTONE dH
	INFESTED_CRACKED_STONE_BRICKS dK
	INFESTED_DEEPSLATE qh
	INFESTED_MOSSY_STONE_BRICKS dJ
	INFESTED_STONE dG
	INFESTED_STONE_BRICKS dI
	IRON_BARS dP
	IRON_BLOCK bL
	IRON_DOOR cy
	IRON_ORE H
	IRON_TRAPDOOR gD
	JACK_O_LANTERN dd
	JIGSAW nn
	JUKEBOX cQ
	JUNGLE_BUTTON fm
	JUNGLE_DOOR iH
	JUNGLE_FENCE iC
	JUNGLE_FENCE_GATE ix
	JUNGLE_LEAVES an
	JUNGLE_LOG P
	JUNGLE_PLANKS q
	JUNGLE_PRESSURE_PLATE cC
	JUNGLE_SAPLING w
	JUNGLE_SIGN ck
	JUNGLE_SLAB ib
	JUNGLE_STAIRS eD
	JUNGLE_TRAPDOOR dz
	JUNGLE_WALL_SIGN cu
	JUNGLE_WOOD ab
	KELP kq
	KELP_PLANT kr
	LADDER cn
	LANTERN mq
	LAPIS_BLOCK ax
	LAPIS_ORE av
	LARGE_AMETHYST_BUD oI
	LARGE_FERN hn
	LAVA B
	LAVA_CAULDRON em
	LECTERN mm
	LEVER cw
	LIGHT gC
	LIGHTNING_ROD py
	LIGHT_BLUE_BANNER hr
	LIGHT_BLUE_BED aG
	LIGHT_BLUE_CANDLE ob
	LIGHT_BLUE_CANDLE_CAKE os
	LIGHT_BLUE_CARPET gS
	LIGHT_BLUE_CONCRETE jN
	LIGHT_BLUE_CONCRETE_POWDER kd
	LIGHT_BLUE_GLAZED_TERRACOTTA jx
	LIGHT_BLUE_SHULKER_BOX jh
	LIGHT_BLUE_STAINED_GLASS dj
	LIGHT_BLUE_STAINED_GLASS_PANE gl
	LIGHT_BLUE_TERRACOTTA fV
	LIGHT_BLUE_WALL_BANNER hH
	LIGHT_BLUE_WOOL bh
	LIGHT_GRAY_BANNER hw
	LIGHT_GRAY_BED aL
	LIGHT_GRAY_CANDLE og
	LIGHT_GRAY_CANDLE_CAKE ox
	LIGHT_GRAY_CARPET gX
	LIGHT_GRAY_CONCRETE jS
	LIGHT_GRAY_CONCRETE_POWDER ki
	LIGHT_GRAY_GLAZED_TERRACOTTA jC
	LIGHT_GRAY_SHULKER_BOX jm
	LIGHT_GRAY_STAINED_GLASS do
	LIGHT_GRAY_STAINED_GLASS_PANE gq
	LIGHT_GRAY_TERRACOTTA ga
	LIGHT_GRAY_WALL_BANNER hM
	LIGHT_GRAY_WOOL bm
	LIGHT_WEIGHTED_PRESSURE_PLATE fF
	LILAC hj
	LILY_OF_THE_VALLEY bH
	LILY_PAD ed
	LIME_BANNER ht
	LIME_BED aI
	LIME_CANDLE od
	LIME_CANDLE_CAKE ou
	LIME_CARPET gU
	LIME_CONCRETE jP
	LIME_CONCRETE_POWDER kf
	LIME_GLAZED_TERRACOTTA jz
	LIME_SHULKER_BOX jj
	LIME_STAINED_GLASS dl
	LIME_STAINED_GLASS_PANE gn
	LIME_TERRACOTTA fX
	LIME_WALL_BANNER hJ
	LIME_WOOL bj
	LODESTONE nC
	LOOM mf
	MAGENTA_BANNER hq
	MAGENTA_BED aF
	MAGENTA_CANDLE oa
	MAGENTA_CANDLE_CAKE or
	MAGENTA_CARPET gR
	MAGENTA_CONCRETE jM
	MAGENTA_CONCRETE_POWDER kc
	MAGENTA_GLAZED_TERRACOTTA jw
	MAGENTA_SHULKER_BOX jg
	MAGENTA_STAINED_GLASS di
	MAGENTA_STAINED_GLASS_PANE gk
	MAGENTA_TERRACOTTA fU
	MAGENTA_WALL_BANNER hG
	MAGENTA_WOOL bg
	MAGMA_BLOCK iX
	MEDIUM_AMETHYST_BUD oJ
	MELON dS
	MELON_STEM dW
	MOSSY_COBBLESTONE bP
	MOSSY_COBBLESTONE_SLAB lJ
	MOSSY_COBBLESTONE_STAIRS lv
	MOSSY_COBBLESTONE_WALL eH
	MOSSY_STONE_BRICKS dD
	MOSSY_STONE_BRICK_SLAB lH
	MOSSY_STONE_BRICK_STAIRS lt
	MOSSY_STONE_BRICK_WALL lV
	MOSS_BLOCK pH
	MOSS_CARPET pG
	MOVING_PISTON bu
	MUSHROOM_STEM dO
	MYCELIUM ec
	NETHERITE_BLOCK nu
	NETHERRACK cT
	NETHER_BRICKS ee
	NETHER_BRICK_FENCE ef
	NETHER_BRICK_SLAB im
	NETHER_BRICK_STAIRS eg
	NETHER_BRICK_WALL lY
	NETHER_GOLD_ORE L
	NETHER_PORTAL db
	NETHER_QUARTZ_ORE fK
	NETHER_SPROUTS mD
	NETHER_WART eh
	NETHER_WART_BLOCK iY
	NOTE_BLOCK aC
	OAK_BUTTON fj
	OAK_DOOR cm
	OAK_FENCE cR
	OAK_FENCE_GATE dZ
	OAK_LEAVES ak
	OAK_LOG M
	OAK_PLANKS n
	OAK_PRESSURE_PLATE cz
	OAK_SAPLING t
	OAK_SIGN cg
	OAK_SLAB hY
	OAK_STAIRS bW
	OAK_TRAPDOOR dw
	OAK_WALL_SIGN cq
	OAK_WOOD Y
	OBSERVER jc
	OBSIDIAN bQ
	ORANGE_BANNER hp
	ORANGE_BED aE
	ORANGE_CANDLE nZ
	ORANGE_CANDLE_CAKE oq
	ORANGE_CARPET gQ
	ORANGE_CONCRETE jL
	ORANGE_CONCRETE_POWDER kb
	ORANGE_GLAZED_TERRACOTTA jv
	ORANGE_SHULKER_BOX jf
	ORANGE_STAINED_GLASS dh
	ORANGE_STAINED_GLASS_PANE gj
	ORANGE_TERRACOTTA fT
	ORANGE_TULIP bB
	ORANGE_WALL_BANNER hF
	ORANGE_WOOL bf
	OXEYE_DAISY bE
	OXIDIZED_COPPER oQ
	OXIDIZED_CUT_COPPER oW
	OXIDIZED_CUT_COPPER_SLAB pe
	OXIDIZED_CUT_COPPER_STAIRS pa
	PACKED_ICE hh
	PEONY hl
	PETRIFIED_OAK_SLAB ii
	PINK_BANNER hu
	PINK_BED aJ
	PINK_CANDLE oe
	PINK_CANDLE_CAKE ov
	PINK_CARPET gV
	PINK_CONCRETE jQ
	PINK_CONCRETE_POWDER kg
	PINK_GLAZED_TERRACOTTA jA
	PINK_SHULKER_BOX jk
	PINK_STAINED_GLASS dm
	PINK_STAINED_GLASS_PANE go
	PINK_TERRACOTTA fY
	PINK_TULIP bD
	PINK_WALL_BANNER hK
	PINK_WOOL bk
	PISTON bc
	PISTON_HEAD bd
	PLAYER_HEAD fv
	PLAYER_WALL_HEAD fw
	PODZOL l
	POINTED_DRIPSTONE pz
	POLISHED_ANDESITE h
	POLISHED_ANDESITE_SLAB lQ
	POLISHED_ANDESITE_STAIRS lD
	POLISHED_BASALT cX
	POLISHED_BLACKSTONE nH
	POLISHED_BLACKSTONE_BRICKS nI
	POLISHED_BLACKSTONE_BRICK_SLAB nL
	POLISHED_BLACKSTONE_BRICK_STAIRS nM
	POLISHED_BLACKSTONE_BRICK_WALL nN
	POLISHED_BLACKSTONE_BUTTON nS
	POLISHED_BLACKSTONE_PRESSURE_PLATE nR
	POLISHED_BLACKSTONE_SLAB nQ
	POLISHED_BLACKSTONE_STAIRS nP
	POLISHED_BLACKSTONE_WALL nT
	POLISHED_DEEPSLATE pS
	POLISHED_DEEPSLATE_SLAB pU
	POLISHED_DEEPSLATE_STAIRS pT
	POLISHED_DEEPSLATE_WALL pV
	POLISHED_DIORITE f
	POLISHED_DIORITE_SLAB lI
	POLISHED_DIORITE_STAIRS lu
	POLISHED_GRANITE d
	POLISHED_GRANITE_SLAB lF
	POLISHED_GRANITE_STAIRS lr
	POPPY bw
	POTATOES fi
	POTTED_ACACIA_SAPLING eN
	POTTED_ALLIUM eT
	POTTED_AZALEA qm
	POTTED_AZURE_BLUET eU
	POTTED_BAMBOO ln
	POTTED_BIRCH_SAPLING eL
	POTTED_BLUE_ORCHID eS
	POTTED_BROWN_MUSHROOM fe
	POTTED_CACTUS fg
	POTTED_CORNFLOWER fa
	POTTED_CRIMSON_FUNGUS ny
	POTTED_CRIMSON_ROOTS nA
	POTTED_DANDELION eQ
	POTTED_DARK_OAK_SAPLING eO
	POTTED_DEAD_BUSH ff
	POTTED_FERN eP
	POTTED_FLOWERING_AZALEA qn
	POTTED_JUNGLE_SAPLING eM
	POTTED_LILY_OF_THE_VALLEY fb
	POTTED_OAK_SAPLING eJ
	POTTED_ORANGE_TULIP eW
	POTTED_OXEYE_DAISY eZ
	POTTED_PINK_TULIP eY
	POTTED_POPPY eR
	POTTED_RED_MUSHROOM fd
	POTTED_RED_TULIP eV
	POTTED_SPRUCE_SAPLING eK
	POTTED_WARPED_FUNGUS nz
	POTTED_WARPED_ROOTS nB
	POTTED_WHITE_TULIP eX
	POTTED_WITHER_ROSE fc
	POWDER_SNOW oO
	POWDER_SNOW_CAULDRON en
	POWERED_RAIL aT
	PRISMARINE gE
	PRISMARINE_BRICKS gF
	PRISMARINE_BRICK_SLAB gL
	PRISMARINE_BRICK_STAIRS gI
	PRISMARINE_SLAB gK
	PRISMARINE_STAIRS gH
	PRISMARINE_WALL lT
	PUMPKIN cS
	PUMPKIN_STEM dV
	PURPLE_BANNER hy
	PURPLE_BED aN
	PURPLE_CANDLE oi
	PURPLE_CANDLE_CAKE oz
	PURPLE_CARPET gZ
	PURPLE_CONCRETE jU
	PURPLE_CONCRETE_POWDER kk
	PURPLE_GLAZED_TERRACOTTA jE
	PURPLE_SHULKER_BOX jo
	PURPLE_STAINED_GLASS dq
	PURPLE_STAINED_GLASS_PANE gs
	PURPLE_TERRACOTTA gc
	PURPLE_WALL_BANNER hO
	PURPLE_WOOL bo
	PURPUR_BLOCK iN
	PURPUR_PILLAR iO
	PURPUR_SLAB iq
	PURPUR_STAIRS iP
	QUARTZ_BLOCK fM
	QUARTZ_BRICKS nW
	QUARTZ_PILLAR fO
	QUARTZ_SLAB in
	QUARTZ_STAIRS fP
	RAIL co
	RAW_COPPER_BLOCK qk
	RAW_GOLD_BLOCK ql
	RAW_IRON_BLOCK qj
	REDSTONE_BLOCK fJ
	REDSTONE_LAMP es
	REDSTONE_ORE cF
	REDSTONE_TORCH cH
	REDSTONE_WALL_TORCH cI
	REDSTONE_WIRE bY
	RED_BANNER hC
	RED_BED aR
	RED_CANDLE om
	RED_CANDLE_CAKE oD
	RED_CARPET hd
	RED_CONCRETE jY
	RED_CONCRETE_POWDER ko
	RED_GLAZED_TERRACOTTA jI
	RED_MUSHROOM bJ
	RED_MUSHROOM_BLOCK dN
	RED_NETHER_BRICKS iZ
	RED_NETHER_BRICK_SLAB lP
	RED_NETHER_BRICK_STAIRS lC
	RED_NETHER_BRICK_WALL ma
	RED_SAND D
	RED_SANDSTONE hU
	RED_SANDSTONE_SLAB io
	RED_SANDSTONE_STAIRS hX
	RED_SANDSTONE_WALL lU
	RED_SHULKER_BOX js
	RED_STAINED_GLASS du
	RED_STAINED_GLASS_PANE gw
	RED_TERRACOTTA gg
	RED_TULIP bA
	RED_WALL_BANNER hS
	RED_WOOL bs
	REPEATER df
	REPEATING_COMMAND_BLOCK iU
	RESPAWN_ANCHOR nx
	ROOTED_DIRT pM
	ROSE_BUSH hk
	SAND C
	SANDSTONE az
	SANDSTONE_SLAB ig
	SANDSTONE_STAIRS eu
	SANDSTONE_WALL mb
	SCAFFOLDING me
	SCULK_SENSOR oP
	SEAGRASS ba
	SEA_LANTERN gN
	SEA_PICKLE li
	SHROOMLIGHT mK
	SHULKER_BOX jd
	SKELETON_SKULL fp
	SKELETON_WALL_SKULL fq
	SLIME_BLOCK gA
	SMALL_AMETHYST_BUD oK
	SMALL_DRIPLEAF pK
	SMITHING_TABLE mn
	SMOKER mh
	SMOOTH_BASALT qi
	SMOOTH_QUARTZ it
	SMOOTH_QUARTZ_SLAB lM
	SMOOTH_QUARTZ_STAIRS lz
	SMOOTH_RED_SANDSTONE iu
	SMOOTH_RED_SANDSTONE_SLAB lG
	SMOOTH_RED_SANDSTONE_STAIRS ls
	SMOOTH_SANDSTONE is
	SMOOTH_SANDSTONE_SLAB lL
	SMOOTH_SANDSTONE_STAIRS ly
	SMOOTH_STONE ir
	SMOOTH_STONE_SLAB if
	SNOW cK
	SNOW_BLOCK cM
	SOUL_CAMPFIRE mt
	SOUL_FIRE bU
	SOUL_LANTERN mr
	SOUL_SAND cU
	SOUL_SOIL cV
	SOUL_TORCH cY
	SOUL_WALL_TORCH cZ
	SPAWNER bV
	SPONGE as
	SPORE_BLOSSOM pD
	SPRUCE_BUTTON fk
	SPRUCE_DOOR iF
	SPRUCE_FENCE iA
	SPRUCE_FENCE_GATE iv
	SPRUCE_LEAVES al
	SPRUCE_LOG N
	SPRUCE_PLANKS o
	SPRUCE_PRESSURE_PLATE cA
	SPRUCE_SAPLING u
	SPRUCE_SIGN ch
	SPRUCE_SLAB hZ
	SPRUCE_STAIRS eB
	SPRUCE_TRAPDOOR dx
	SPRUCE_WALL_SIGN cr
	SPRUCE_WOOD Z
	STICKY_PISTON aV
	STONE b
	STONECUTTER mo
	STONE_BRICKS dC
	STONE_BRICK_SLAB il
	STONE_BRICK_STAIRS eb
	STONE_BRICK_WALL lX
	STONE_BUTTON cJ
	STONE_PRESSURE_PLATE cx
	STONE_SLAB ie
	STONE_STAIRS lx
	STRIPPED_ACACIA_LOG V
	STRIPPED_ACACIA_WOOD ai
	STRIPPED_BIRCH_LOG T
	STRIPPED_BIRCH_WOOD ag
	STRIPPED_CRIMSON_HYPHAE mH
	STRIPPED_CRIMSON_STEM mF
	STRIPPED_DARK_OAK_LOG W
	STRIPPED_DARK_OAK_WOOD aj
	STRIPPED_JUNGLE_LOG U
	STRIPPED_JUNGLE_WOOD ah
	STRIPPED_OAK_LOG X
	STRIPPED_OAK_WOOD ae
	STRIPPED_SPRUCE_LOG S
	STRIPPED_SPRUCE_WOOD af
	STRIPPED_WARPED_HYPHAE my
	STRIPPED_WARPED_STEM mw
	STRUCTURE_BLOCK nm
	STRUCTURE_VOID jb
	SUGAR_CANE cP
	SUNFLOWER hi
	SWEET_BERRY_BUSH mu
	TALL_GRASS hm
	TALL_SEAGRASS bb
	TARGET np
	TERRACOTTA hf
	TINTED_GLASS oN
	TNT bN
	TORCH bR
	TRAPPED_CHEST fE
	TRIPWIRE ez
	TRIPWIRE_HOOK ey
	TUBE_CORAL kJ
	TUBE_CORAL_BLOCK kz
	TUBE_CORAL_FAN kT
	TUBE_CORAL_WALL_FAN ld
	TUFF oL
	TURTLE_EGG kt
	TWISTING_VINES mN
	TWISTING_VINES_PLANT mO
	VINE dX
	VOID_AIR lo
	WALL_TORCH bS
	WARPED_BUTTON nf
	WARPED_DOOR nh
	WARPED_FENCE mX
	WARPED_FENCE_GATE nb
	WARPED_FUNGUS mA
	WARPED_HYPHAE mx
	WARPED_NYLIUM mz
	WARPED_PLANKS mR
	WARPED_PRESSURE_PLATE mV
	WARPED_ROOTS mC
	WARPED_SIGN nj
	WARPED_SLAB mT
	WARPED_STAIRS nd
	WARPED_STEM mv
	WARPED_TRAPDOOR mZ
	WARPED_WALL_SIGN nl
	WARPED_WART_BLOCK mB
	WATER A
	WATER_CAULDRON el
	WAXED_COPPER_BLOCK pi
	WAXED_CUT_COPPER pp
	WAXED_CUT_COPPER_SLAB px
	WAXED_CUT_COPPER_STAIRS pt
	WAXED_EXPOSED_COPPER pk
	WAXED_EXPOSED_CUT_COPPER po
	WAXED_EXPOSED_CUT_COPPER_SLAB pw
	WAXED_EXPOSED_CUT_COPPER_STAIRS ps
	WAXED_OXIDIZED_COPPER pl
	WAXED_OXIDIZED_CUT_COPPER pm
	WAXED_OXIDIZED_CUT_COPPER_SLAB pu
	WAXED_OXIDIZED_CUT_COPPER_STAIRS pq
	WAXED_WEATHERED_COPPER pj
	WAXED_WEATHERED_CUT_COPPER pn
	WAXED_WEATHERED_CUT_COPPER_SLAB pv
	WAXED_WEATHERED_CUT_COPPER_STAIRS pr
	WEATHERED_COPPER oR
	WEATHERED_CUT_COPPER oX
	WEATHERED_CUT_COPPER_SLAB pf
	WEATHERED_CUT_COPPER_STAIRS pb
	WEEPING_VINES mL
	WEEPING_VINES_PLANT mM
	WET_SPONGE at
	WHEAT cd
	WHITE_BANNER ho
	WHITE_BED aD
	WHITE_CANDLE nY
	WHITE_CANDLE_CAKE op
	WHITE_CARPET gP
	WHITE_CONCRETE jK
	WHITE_CONCRETE_POWDER ka
	WHITE_GLAZED_TERRACOTTA ju
	WHITE_SHULKER_BOX je
	WHITE_STAINED_GLASS dg
	WHITE_STAINED_GLASS_PANE gi
	WHITE_TERRACOTTA fS
	WHITE_TULIP bC
	WHITE_WALL_BANNER hE
	WHITE_WOOL be
	WITHER_ROSE bG
	WITHER_SKELETON_SKULL fr
	WITHER_SKELETON_WALL_SKULL fs
	YELLOW_BANNER hs
	YELLOW_BED aH
	YELLOW_CANDLE oc
	YELLOW_CANDLE_CAKE ot
	YELLOW_CARPET gT
	YELLOW_CONCRETE jO
	YELLOW_CONCRETE_POWDER ke
	YELLOW_GLAZED_TERRACOTTA jy
	YELLOW_SHULKER_BOX ji
	YELLOW_STAINED_GLASS dk
	YELLOW_STAINED_GLASS_PANE gm
	YELLOW_TERRACOTTA fW
	YELLOW_WALL_BANNER hI
	YELLOW_WOOL bi
	ZOMBIE_HEAD ft
	ZOMBIE_WALL_HEAD fu
	always (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	always (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; b
	bed (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/BedBlock; a
	leaves (Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/LeavesBlock; a
	litBlockEmission (I)Ljava/util/function/ToIntFunction; a
	log (Lnet/minecraft/world/level/material/MaterialColor;Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/RotatedPillarBlock; a
	netherStem (Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/Block; a
	never (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	never (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; a
	ocelotOrParrot (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; c
	pistonBase (Z)Lnet/minecraft/world/level/block/piston/PistonBaseBlock; a
	rebuildCache ()V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; a
	shulkerBox (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)Lnet/minecraft/world/level/block/ShulkerBoxBlock; a
	stainedGlass (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/StainedGlassBlock; b
net/minecraft/world/level/block/BuddingAmethystBlock net/minecraft/world/level/block/BuddingAmethystBlock
	DIRECTIONS b
	GROWTH_CHANCE a
	canClusterGrowAtState (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/CandleBlock net/minecraft/world/level/block/CandleBlock
	CANDLES e
	FOUR_AABB m
	LIGHT_EMISSION h
	LIT f
	MAX_CANDLES d
	MIN_CANDLES c
	ONE_AABB j
	PARTICLE_OFFSETS i
	THREE_AABB l
	TWO_AABB k
	WATERLOGGED g
	canBeLit (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CandleCakeBlock net/minecraft/world/level/block/CandleCakeBlock
	AABB_OFFSET d
	BY_CANDLE h
	CAKE_SHAPE e
	CANDLE_SHAPE f
	LIT c
	PARTICLE_OFFSETS i
	SHAPE g
	byCandle (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockState; a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	candleHit (Lnet/minecraft/world/phys/BlockHitResult;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarpetBlock net/minecraft/world/level/block/CarpetBlock
	SHAPE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CaveVines net/minecraft/world/level/block/CaveVines
	BERRIES p_
	SHAPE o_
	emission (I)Ljava/util/function/ToIntFunction; c_
	hasGlowBerries (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/InteractionResult; a_
net/minecraft/world/level/block/CaveVinesBlock net/minecraft/world/level/block/CaveVinesBlock
	CHANCE_OF_BERRIES_ON_GROWTH f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; c
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getGrowIntoState (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateBodyAfterConvertedFromHead (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChangeOverTimeBlock net/minecraft/world/level/block/ChangeOverTimeBlock
	SCAN_DISTANCE s_
	applyChangeOverTime (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V c
	getAge ()Ljava/lang/Enum; b
	getChanceModifier ()F a
	getNext (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; a
	onRandomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a_
net/minecraft/world/level/block/GlowLichenBlock net/minecraft/world/level/block/GlowLichenBlock
	WATERLOGGED b
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	emission (I)Ljava/util/function/ToIntFunction; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HangingRootsBlock net/minecraft/world/level/block/HangingRootsBlock
	SHAPE a
	WATERLOGGED b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; T_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LayeredCauldronBlock net/minecraft/world/level/block/LayeredCauldronBlock
	BASE_CONTENT_HEIGHT h
	HEIGHT_PER_LEVEL i
	LEVEL e
	MAX_FILL_LEVEL d
	MIN_FILL_LEVEL c
	RAIN f
	SNOW g
	fillPredicate j
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D a
	handleEntityOnFireInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	lowerFillLevel (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
net/minecraft/world/level/block/LightBlock net/minecraft/world/level/block/LightBlock
	LEVEL b
	LIGHT_EMISSION d
	MAX_LEVEL a
	WATERLOGGED c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/LightningRodBlock net/minecraft/world/level/block/LightningRodBlock
	ACTIVATION_TICKS j
	POWERED c
	RANGE d
	SPARK_CYCLE k
	WATERLOGGED b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onLightningStrike (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MultifaceBlock net/minecraft/world/level/block/MultifaceBlock
	AABB_OFFSET b
	DIRECTIONS a
	DOWN_AABB d
	EAST_AABB f
	NORTH_AABB g
	PROPERTY_BY_DIRECTION i
	SHAPE_BY_DIRECTION j
	SOUTH_AABB h
	UP_AABB c
	WEST_AABB e
	canMirrorX m
	canMirrorZ n
	canRotate l
	shapesCache k
	calculateMultifaceShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; o
	canAttachTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSpread (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z d
	canSpreadInto (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	canSpreadToFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDefaultMultifaceState (Lnet/minecraft/world/level/block/state/StateDefinition;)Lnet/minecraft/world/level/block/state/BlockState; a
	getFaceProperty (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSpreadFromFaceTowardDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Ljava/util/Optional; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; c
	hasAnyFace (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	hasAnyVacantFace (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	hasFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isFaceSupported (Lnet/minecraft/core/Direction;)Z a
	isWaterloggable ()Z q
	mapDirections (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	removeFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	spreadFromFaceTowardDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Z)Z a
	spreadFromFaceTowardRandomDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Ljava/util/Random;Z)Z a
	spreadFromRandomFaceTowardRandomDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	spreadToFace (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PointedDripstoneBlock net/minecraft/world/level/block/PointedDripstoneBlock
	AVERAGE_DAYS_PER_GROWTH I
	BASE_SHAPE S
	DELAY_BEFORE_FALLING f
	DRIP_PROBABILITY_PER_ANIMATE_TICK g
	DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE h
	FRUSTUM_SHAPE Q
	GROWTH_PROBABILITY_PER_RANDOM_TICK J
	LAVA_CAULDRON_FILL_PROBABILITY_PER_RANDOM_TICK k
	MAX_GROWTH_LENGTH K
	MAX_HORIZONTAL_OFFSET T
	MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON i
	MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE d
	MAX_SEARCH_LENGTH_WHEN_LOOKING_FOR_TIP_OF_FALLING_STALACTITE e
	MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION F
	MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING L
	MIDDLE_SHAPE R
	MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE l
	STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE m
	STALACTITE_DRIP_START_PIXEL M
	STALACTITE_MAX_DAMAGE n
	STALAGMITE_FALL_DAMAGE_MODIFIER H
	STALAGMITE_FALL_DISTANCE_OFFSET G
	THICKNESS b
	TIP_DIRECTION a
	TIP_MERGE_SHAPE N
	TIP_SHAPE_DOWN P
	TIP_SHAPE_UP O
	WATERLOGGED c
	WATER_CAULDRON_FILL_PROBABILITY_PER_RANDOM_TICK j
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	calculateDripstoneThickness (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/level/block/state/properties/DripstoneThickness; a
	calculateTipDirection (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; b
	canDrip (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canFillCauldron (Lnet/minecraft/world/level/material/Fluid;)Z a
	canGrow (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canTipGrow (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createDripstone (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)V a
	createMergedTips (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V c
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	findBlockVertical (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$AxisDirection;Ljava/util/function/Predicate;Ljava/util/function/Predicate;I)Ljava/util/Optional; a
	findFillableCauldronBelowStalactiteTip (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/core/BlockPos; a
	findRootBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Ljava/util/Optional; a
	findStalactiteTipAboveCauldron (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findTip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	getCauldronFillFluidType (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/Fluid; b
	getDripFluid (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/material/Fluid; a
	getFallDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; b
	getFluidAboveStalactite (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getHurtsEntitySelector ()Ljava/util/function/Predicate; U_
	getMaxHorizontalOffset ()F V_
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; T_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStalactiteSizeFromTip (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)I b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	grow (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	growStalactiteOrStalagmiteIfPossible (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V c
	growStalagmiteBelow (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isPointedDripstoneWithDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z b
	isStalactite (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isStalactiteStartPos (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isStalagmite (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isTip (Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	isUnmergedTipWithDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isValidPointedDripstonePlacement (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z c
	maybeFillCauldron (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;F)V a
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	scheduleStalactiteFallTicks (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	spawnDripParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	spawnDripParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)V a
	spawnFallingStalactite (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PowderSnowBlock net/minecraft/world/level/block/PowderSnowBlock
	FALLING_COLLISION_SHAPE e
	HORIZONTAL_PARTICLE_MOMENTUM_FACTOR a
	IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER b
	IN_BLOCK_VERTICAL_SPEED_MULTIPLIER c
	MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND g
	MINIMUM_FALL_DISTANCE_FOR_SOUND f
	NUM_BLOCKS_TO_FALL_INTO_BLOCK d
	canEntityWalkOnPowderSnow (Lnet/minecraft/world/entity/Entity;)Z a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getPickupSound ()Ljava/util/Optional; W_
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/RodBlock net/minecraft/world/level/block/RodBlock
	AABB_MAX f
	AABB_MIN e
	X_AXIS_AABB i
	Y_AXIS_AABB g
	Z_AXIS_AABB h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SculkSensorBlock net/minecraft/world/level/block/SculkSensorBlock
	ACTIVE_TICKS a
	COOLDOWN_TICKS b
	PHASE d
	POWER e
	SHAPE g
	VIBRATION_STRENGTH_FOR_EVENT c
	WATERLOGGED f
	listenerRange h
	activate (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canActivate (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	deactivate (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getListener (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; a
	getListenerRange ()I e
	getPhase (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/properties/SculkSensorPhase; h
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighbours (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SeagrassBlock net/minecraft/world/level/block/SeagrassBlock
	AABB_OFFSET a
	SHAPE b
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SmallDripleafBlock net/minecraft/world/level/block/SmallDripleafBlock
	AABB_OFFSET c
	FACING b
	SHAPE d
	WATERLOGGED e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getMaxVerticalOffset ()F Y_
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; T_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SporeBlossomBlock net/minecraft/world/level/block/SporeBlossomBlock
	ADD_PARTICLE_ATTEMPTS b
	PARTICLE_XZ_RADIUS c
	PARTICLE_Y_MAX d
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/TallSeagrassBlock net/minecraft/world/level/block/TallSeagrassBlock
	AABB_OFFSET c
	HALF b
	SHAPE d
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/WeatheringCopper net/minecraft/world/level/block/WeatheringCopper
	NEXT_BY_BLOCK q_
	PREVIOUS_BY_BLOCK r_
	getChanceModifier ()F a
	getFirst (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; b
	getFirst (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; c
	getNext (Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; c
	getNext (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; a
	getPrevious (Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
	getPrevious (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
net/minecraft/world/level/block/WeatheringCopperFullBlock net/minecraft/world/level/block/WeatheringCopperFullBlock
	weatherState d
	getAge ()Ljava/lang/Enum; b
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; c
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/WeatheringCopperSlabBlock net/minecraft/world/level/block/WeatheringCopperSlabBlock
	weatherState e
	getAge ()Ljava/lang/Enum; b
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; q
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/WeatheringCopperStairBlock net/minecraft/world/level/block/WeatheringCopperStairBlock
	weatherState H
	getAge ()Ljava/lang/Enum; b
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; q
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/entity/ChestLidController net/minecraft/world/level/block/entity/ChestLidController
	oOpenness c
	openness b
	shouldBeOpen a
	getOpenness (F)F a
	shouldBeOpen (Z)V a
	tickLid ()V a
net/minecraft/world/level/block/entity/ContainerOpenersCounter net/minecraft/world/level/block/entity/ContainerOpenersCounter
	CHECK_TICK_DELAY a
	openCount b
	decrementOpeners (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	getOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOpenerCount ()I a
	incrementOpeners (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	isOwnContainer (Lnet/minecraft/world/entity/player/Player;)Z a
	onClose (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	onOpen (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	openerCountChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
	recheckOpeners (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	scheduleRecheck (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
net/minecraft/world/level/block/entity/SculkSensorBlockEntity net/minecraft/world/level/block/entity/SculkSensorBlockEntity
	lastVibrationFrequency b
	listener a
	getLastVibrationFrequency ()I d
	getListener ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationListener; c
	getRedstoneStrengthForDistance (II)I b
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onSignalReceive (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/world/level/gameevent/GameEvent;I)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	shouldListen (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/level/block/state/predicate/BlockPredicate net/minecraft/world/level/block/state/predicate/BlockPredicate
	block a
	forBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockPredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/state/predicate/BlockStatePredicate net/minecraft/world/level/block/state/predicate/BlockStatePredicate
	ANY a
	definition b
	properties c
	applies (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;)Z a
	forBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	where (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
net/minecraft/world/level/block/state/properties/DripstoneThickness net/minecraft/world/level/block/state/properties/DripstoneThickness
	$VALUES g
	BASE e
	FRUSTUM c
	MIDDLE d
	TIP b
	TIP_MERGE a
	name f
	$values ()[Lnet/minecraft/world/level/block/state/properties/DripstoneThickness; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/SculkSensorPhase net/minecraft/world/level/block/state/properties/SculkSensorPhase
	$VALUES e
	ACTIVE b
	COOLDOWN c
	INACTIVE a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/SculkSensorPhase; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/Tilt net/minecraft/world/level/block/state/properties/Tilt
	$VALUES g
	FULL d
	NONE a
	PARTIAL c
	UNSTABLE b
	causesVibration f
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/Tilt; b
	causesVibration ()Z a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/border/BorderStatus net/minecraft/world/level/border/BorderStatus
	$VALUES e
	GROWING a
	SHRINKING b
	STATIONARY c
	color d
	$values ()[Lnet/minecraft/world/level/border/BorderStatus; b
	getColor ()I a
net/minecraft/world/level/border/WorldBorder net/minecraft/world/level/border/WorldBorder
	DEFAULT_SETTINGS e
	MAX_CENTER_COORDINATE d
	MAX_SIZE c
	absoluteMaxSize k
	centerX i
	centerZ j
	damagePerBlock b
	damageSafeZone f
	extent l
	listeners a
	warningBlocks h
	warningTime g
	addListener (Lnet/minecraft/world/level/border/BorderChangeListener;)V a
	applySettings (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	clampToBounds (DDD)Lnet/minecraft/core/BlockPos; b
	createSettings ()Lnet/minecraft/world/level/border/WorldBorder$Settings; t
	getAbsoluteMaxSize ()I m
	getCenterX ()D a
	getCenterZ ()D b
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDamagePerBlock ()D o
	getDamageSafeZone ()D n
	getDistanceToBorder (DD)D b
	getDistanceToBorder (Lnet/minecraft/world/entity/Entity;)D a
	getLerpRemainingTime ()J j
	getLerpSpeed ()D p
	getLerpTarget ()D k
	getListeners ()Ljava/util/List; l
	getMaxX ()D g
	getMaxZ ()D h
	getMinX ()D e
	getMinZ ()D f
	getSize ()D i
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; d
	getWarningBlocks ()I r
	getWarningTime ()I q
	isInsideCloseToBorder (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z a
	isWithinBounds (DD)Z a
	isWithinBounds (DDD)Z a
	isWithinBounds (Lnet/minecraft/core/BlockPos;)Z a
	isWithinBounds (Lnet/minecraft/world/level/ChunkPos;)Z a
	isWithinBounds (Lnet/minecraft/world/phys/AABB;)Z a
	lerpSizeBetween (DDJ)V a
	removeListener (Lnet/minecraft/world/level/border/BorderChangeListener;)V b
	setAbsoluteMaxSize (I)V a
	setCenter (DD)V c
	setDamagePerBlock (D)V c
	setDamageSafeZone (D)V b
	setSize (D)V a
	setWarningBlocks (I)V c
	setWarningTime (I)V b
	tick ()V s
net/minecraft/world/level/chunk/BulkSectionAccess net/minecraft/world/level/chunk/BulkSectionAccess
	acquiredSections b
	lastSection c
	lastSectionKey d
	level a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getSection (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/LevelChunkSection; a
net/minecraft/world/level/chunk/CarvingMask net/minecraft/world/level/chunk/CarvingMask
	additionalMask c
	mask b
	minY a
	get (III)Z b
	getIndex (III)I c
	set (III)V a
	setAdditionalMask (Lnet/minecraft/world/level/chunk/CarvingMask$Mask;)V a
	stream (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/stream/Stream; a
	toArray ()[J a
net/minecraft/world/level/chunk/ChunkGenerator net/minecraft/world/level/chunk/ChunkGenerator
	CODEC a
	biomeSource b
	runtimeBiomeSource c
	settings d
	strongholdPositions f
	strongholdSeed e
	applyBiomeDecoration (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/StructureFeatureManager;)V a
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	climateSampler ()Lnet/minecraft/world/level/biome/Climate$Sampler; c
	codec ()Lcom/mojang/serialization/Codec; a
	createBiomes (Lnet/minecraft/core/Registry;Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	createReferences (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	createStructures (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;J)V a
	fetchReferences (Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)I a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	findNearestMapFeature (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	generateStrongholds ()V i
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	getBiomeSource ()Lnet/minecraft/world/level/biome/BiomeSource; e
	getFirstFreeHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;)I b
	getFirstOccupiedHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;)I c
	getGenDepth ()I f
	getMinY ()I h
	getMobsAt (Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/util/random/WeightedRandomList; a
	getSeaLevel ()I g
	getSettings ()Lnet/minecraft/world/level/levelgen/StructureSettings; d
	getSpawnHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	getTypeNameForDataFixer ()Ljava/util/Optional; b
	getWritableArea (Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	hasStronghold (Lnet/minecraft/world/level/ChunkPos;)Z a
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	validBiome (Lnet/minecraft/core/Registry;Ljava/util/function/Predicate;Lnet/minecraft/world/level/biome/Biome;)Z a
	validStrongholdBiome (Lnet/minecraft/world/level/biome/Biome;)Z a
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/chunk/ChunkStatus net/minecraft/world/level/chunk/ChunkStatus
	BIOMES f
	CARVERS i
	EMPTY c
	FEATURES k
	FULL o
	HEIGHTMAPS n
	LIGHT l
	LIQUID_CARVERS j
	MAX_STRUCTURE_DISTANCE a
	NOISE g
	PASSTHROUGH_LOAD_TASK q
	POST_FEATURES b
	PRE_FEATURES p
	RANGE_BY_STATUS s
	SPAWN m
	STATUS_BY_RANGE r
	STRUCTURE_REFERENCES e
	STRUCTURE_STARTS d
	SURFACE h
	chunkType z
	generationTask w
	heightmapsAfter A
	index u
	loadingTask x
	name t
	parent v
	range y
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	generate (Ljava/util/concurrent/Executor;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Ljava/util/function/Function;Ljava/util/List;Z)Ljava/util/concurrent/CompletableFuture; a
	getChunkType ()Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; g
	getDistance (Lnet/minecraft/world/level/chunk/ChunkStatus;)I a
	getIndex ()I c
	getName ()Ljava/lang/String; d
	getParent ()Lnet/minecraft/world/level/chunk/ChunkStatus; e
	getRange ()I f
	getStatusAroundFullChunk (I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	getStatusList ()Ljava/util/List; a
	heightmapsAfter ()Ljava/util/EnumSet; h
	isLighted (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	isOrAfter (Lnet/minecraft/world/level/chunk/ChunkStatus;)Z b
	lightChunk (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	load (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	maxDistance ()I b
	register (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;Lnet/minecraft/world/level/chunk/ChunkStatus$LoadingTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	registerSimple (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
net/minecraft/world/level/chunk/ProtoChunk net/minecraft/world/level/chunk/ProtoChunk
	belowZeroRetrogen q
	blockTicks r
	carvingMasks p
	entities n
	fluidTicks s
	lightEngine l
	lights o
	status m
	addEntity (Lnet/minecraft/nbt/CompoundTag;)V b
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addLight (Lnet/minecraft/core/BlockPos;)V j
	addLight (SI)V b
	addPackedPostProcess (SI)V a
	getBelowZeroRetrogen ()Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; x
	getBlockEntities ()Ljava/util/Map; C
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; i
	getBlockEntityNbts ()Ljava/util/Map; E
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; a
	getEntities ()Ljava/util/List; D
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getHeightAccessorForGeneration ()Lnet/minecraft/world/level/LevelHeightAccessor; z
	getLights ()Ljava/util/stream/Stream; n
	getOrCreateCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; b
	getPackedLights ()[Lit/unimi/dsi/fastutil/shorts/ShortList; B
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	packOffsetCoordinates (Lnet/minecraft/core/BlockPos;)S k
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setBelowZeroRetrogen (Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Lnet/minecraft/world/level/chunk/CarvingMask;)V a
	setLightEngine (Lnet/minecraft/world/level/lighting/LevelLightEngine;)V a
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	unpackBlockTicks ()Lnet/minecraft/world/ticks/LevelChunkTicks; F
	unpackFluidTicks ()Lnet/minecraft/world/ticks/LevelChunkTicks; G
	unpackOffsetCoordinates (SILnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
	unpackTicks (Lnet/minecraft/world/ticks/ProtoChunkTicks;)Lnet/minecraft/world/ticks/LevelChunkTicks; a
net/minecraft/world/level/chunk/SingleValuePalette net/minecraft/world/level/chunk/SingleValuePalette
	registry a
	resizeHandler c
	value b
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/storage/EntityStorage net/minecraft/world/level/chunk/storage/EntityStorage
	ENTITIES_TAG c
	LOGGER b
	POSITION_TAG d
	emptyChunks g
	entityDeserializerQueue h
	fixerUpper a
	level e
	worker f
	emptyChunk (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/entity/ChunkEntities; b
	flush (Z)V a
	getVersion (Lnet/minecraft/nbt/CompoundTag;)I a
	loadEntities (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; a
	readChunkPos (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/ChunkPos; b
	storeEntities (Lnet/minecraft/world/level/entity/ChunkEntities;)V a
	upgradeChunkTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; c
	writeChunkPos (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/chunk/storage/IOWorker$Priority net/minecraft/world/level/chunk/storage/IOWorker$Priority
	$VALUES d
	BACKGROUND b
	FOREGROUND a
	SHUTDOWN c
	$values ()[Lnet/minecraft/world/level/chunk/storage/IOWorker$Priority; a
net/minecraft/world/level/chunk/storage/IOWorker net/minecraft/world/level/chunk/storage/IOWorker
	LOGGER a
	mailbox c
	pendingWrites e
	shutdownRequested b
	storage d
	load (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	loadAsync (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; b
	runStore (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/storage/IOWorker$PendingStore;)V a
	scanChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/StreamTagVisitor;)Ljava/util/concurrent/CompletableFuture; a
	store (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/concurrent/CompletableFuture; a
	storePendingChunk ()V a
	submitTask (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; a
	synchronize (Z)Ljava/util/concurrent/CompletableFuture; a
	tellStorePending ()V b
net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer
	pos b
net/minecraft/world/level/chunk/storage/RegionFile net/minecraft/world/level/chunk/storage/RegionFile
	CHUNK_HEADER_SIZE e
	CHUNK_NOT_PRESENT k
	EXTERNAL_CHUNK_THRESHOLD j
	EXTERNAL_FILE_EXTENSION h
	EXTERNAL_STREAM_FLAG i
	HEADER_OFFSET f
	LOGGER c
	PADDING_BUFFER g
	SECTOR_BYTES d
	SECTOR_INTS a
	externalFileDir m
	file l
	header o
	offsets p
	timestamps q
	usedSectors b
	version n
	clear (Lnet/minecraft/world/level/ChunkPos;)V d
	createChunkInputStream (Lnet/minecraft/world/level/ChunkPos;BLjava/io/InputStream;)Ljava/io/DataInputStream; a
	createExternalChunkInputStream (Lnet/minecraft/world/level/ChunkPos;B)Ljava/io/DataInputStream; a
	createExternalStub ()Ljava/nio/ByteBuffer; c
	createStream (Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream; a
	doesChunkExist (Lnet/minecraft/world/level/ChunkPos;)Z b
	flush ()V a
	getChunkDataInputStream (Lnet/minecraft/world/level/ChunkPos;)Ljava/io/DataInputStream; a
	getChunkDataOutputStream (Lnet/minecraft/world/level/ChunkPos;)Ljava/io/DataOutputStream; c
	getExternalChunkPath (Lnet/minecraft/world/level/ChunkPos;)Ljava/nio/file/Path; f
	getExternalChunkVersion (B)B b
	getNumSectors (I)I a
	getOffset (Lnet/minecraft/world/level/ChunkPos;)I g
	getOffsetIndex (Lnet/minecraft/world/level/ChunkPos;)I h
	getSectorNumber (I)I b
	getTimestamp ()I b
	hasChunk (Lnet/minecraft/world/level/ChunkPos;)Z e
	isExternalStreamChunk (B)Z a
	packSectorOffset (II)I a
	padToFullSector ()V e
	sizeToSectors (I)I c
	write (Lnet/minecraft/world/level/ChunkPos;Ljava/nio/ByteBuffer;)V a
	writeHeader ()V d
	writeToExternalFile (Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lnet/minecraft/world/level/chunk/storage/RegionFile$CommitOp; a
net/minecraft/world/level/entity/ChunkEntities net/minecraft/world/level/entity/ChunkEntities
	entities b
	pos a
	getEntities ()Ljava/util/stream/Stream; b
	getPos ()Lnet/minecraft/world/level/ChunkPos; a
	isEmpty ()Z c
net/minecraft/world/level/entity/EntityInLevelCallback net/minecraft/world/level/entity/EntityInLevelCallback
	NULL a
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
net/minecraft/world/level/entity/EntityLookup net/minecraft/world/level/entity/EntityLookup
	LOGGER a
	byId b
	byUuid c
	add (Lnet/minecraft/world/level/entity/EntityAccess;)V a
	count ()I b
	getAllEntities ()Ljava/lang/Iterable; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Consumer;)V a
	getEntity (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	getEntity (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	remove (Lnet/minecraft/world/level/entity/EntityAccess;)V b
net/minecraft/world/level/entity/EntitySection net/minecraft/world/level/entity/EntitySection
	LOGGER a
	chunkStatus c
	storage b
	add (Lnet/minecraft/world/level/entity/EntityAccess;)V a
	getEntities ()Ljava/util/stream/Stream; b
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getEntities (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getStatus ()Lnet/minecraft/world/level/entity/Visibility; c
	isEmpty ()Z a
	remove (Lnet/minecraft/world/level/entity/EntityAccess;)Z b
	size ()I d
	updateChunkStatus (Lnet/minecraft/world/level/entity/Visibility;)Lnet/minecraft/world/level/entity/Visibility; a
net/minecraft/world/level/entity/EntitySectionStorage net/minecraft/world/level/entity/EntitySectionStorage
	entityClass a
	intialSectionVisibility b
	sectionIds d
	sections c
	count ()I b
	createSection (J)Lnet/minecraft/world/level/entity/EntitySection; g
	forEachAccessibleNonEmptySection (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getAllChunksWithExistingSections ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	getChunkKeyFromSectionKey (J)J f
	getChunkSections (II)Lit/unimi/dsi/fastutil/longs/LongSortedSet; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getEntities (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V b
	getExistingSectionPositionsInChunk (J)Ljava/util/stream/LongStream; a
	getExistingSectionsInChunk (J)Ljava/util/stream/Stream; b
	getOrCreateSection (J)Lnet/minecraft/world/level/entity/EntitySection; c
	getSection (J)Lnet/minecraft/world/level/entity/EntitySection; d
	remove (J)V e
net/minecraft/world/level/entity/EntityTickList net/minecraft/world/level/entity/EntityTickList
	active a
	iterated c
	passive b
	add (Lnet/minecraft/world/entity/Entity;)V a
	contains (Lnet/minecraft/world/entity/Entity;)Z c
	ensureActiveIsNotIterated ()V a
	forEach (Ljava/util/function/Consumer;)V a
	remove (Lnet/minecraft/world/entity/Entity;)V b
net/minecraft/world/level/entity/LevelEntityGetterAdapter net/minecraft/world/level/entity/LevelEntityGetterAdapter
	sectionStorage b
	visibleEntities a
	get (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Consumer;)V a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	get (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getAll ()Ljava/lang/Iterable; a
net/minecraft/world/level/entity/PersistentEntitySectionManager net/minecraft/world/level/entity/PersistentEntitySectionManager
	LOGGER a
	callbacks c
	chunkLoadStatuses i
	chunkVisibility h
	chunksToUnload j
	entityGetter g
	knownUuids b
	loadingInbox k
	permanentStorage d
	sectionStorage f
	visibleEntityStorage e
	addEntity (Lnet/minecraft/world/level/entity/EntityAccess;Z)Z a
	addEntityUuid (Lnet/minecraft/world/level/entity/EntityAccess;)Z b
	addLegacyChunkEntities (Ljava/util/stream/Stream;)V a
	addNewEntity (Lnet/minecraft/world/level/entity/EntityAccess;)Z a
	addWorldGenChunkEntities (Ljava/util/stream/Stream;)V b
	areEntitiesLoaded (J)Z a
	autoSave ()V b
	dumpSections (Ljava/io/Writer;)V a
	ensureChunkQueuedForLoad (J)V b
	gatherStats ()Ljava/lang/String; e
	getAllChunksToSave ()Lit/unimi/dsi/fastutil/longs/LongSet; h
	getEffectiveStatus (Lnet/minecraft/world/level/entity/EntityAccess;Lnet/minecraft/world/level/entity/Visibility;)Lnet/minecraft/world/level/entity/Visibility; a
	getEntityGetter ()Lnet/minecraft/world/level/entity/LevelEntityGetter; d
	isLoaded (Ljava/util/UUID;)Z a
	isPositionTicking (Lnet/minecraft/core/BlockPos;)Z a
	isPositionTicking (Lnet/minecraft/world/level/ChunkPos;)Z a
	processChunkUnload (J)Z d
	processPendingLoads ()V g
	processUnloads ()V f
	removeSectionIfEmpty (JLnet/minecraft/world/level/entity/EntitySection;)V a
	requestChunkLoad (J)V c
	saveAll ()V c
	startTicking (Lnet/minecraft/world/level/entity/EntityAccess;)V c
	startTracking (Lnet/minecraft/world/level/entity/EntityAccess;)V e
	stopTicking (Lnet/minecraft/world/level/entity/EntityAccess;)V d
	stopTracking (Lnet/minecraft/world/level/entity/EntityAccess;)V f
	storeChunkSections (JLjava/util/function/Consumer;)Z a
	tick ()V a
	unloadEntity (Lnet/minecraft/world/level/entity/EntityAccess;)V g
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)V a
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/entity/Visibility;)V a
net/minecraft/world/level/entity/Visibility net/minecraft/world/level/entity/Visibility
	$VALUES f
	HIDDEN a
	TICKING c
	TRACKED b
	accessible d
	ticking e
	$values ()[Lnet/minecraft/world/level/entity/Visibility; c
	fromFullChunkStatus (Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)Lnet/minecraft/world/level/entity/Visibility; a
	isAccessible ()Z b
	isTicking ()Z a
net/minecraft/world/level/gameevent/BlockPositionSource net/minecraft/world/level/gameevent/BlockPositionSource
	CODEC a
	pos c
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
net/minecraft/world/level/gameevent/EntityPositionSource net/minecraft/world/level/gameevent/EntityPositionSource
	CODEC a
	sourceEntity d
	sourceEntityId c
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
net/minecraft/world/level/gameevent/EuclideanGameEventDispatcher net/minecraft/world/level/gameevent/EuclideanGameEventDispatcher
	level c
	listeners b
	isEmpty ()Z a
	post (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	postToListener (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEventListener;)Z a
	register (Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	unregister (Lnet/minecraft/world/level/gameevent/GameEventListener;)V b
net/minecraft/world/level/gameevent/GameEvent net/minecraft/world/level/gameevent/GameEvent
	BLOCK_ATTACH a
	BLOCK_CHANGE b
	BLOCK_CLOSE c
	BLOCK_DESTROY d
	BLOCK_DETACH e
	BLOCK_OPEN f
	BLOCK_PLACE g
	BLOCK_PRESS h
	BLOCK_SWITCH i
	BLOCK_UNPRESS j
	BLOCK_UNSWITCH k
	CONTAINER_CLOSE l
	CONTAINER_OPEN m
	DEFAULT_NOTIFICATION_RADIUS T
	DISPENSE_FAIL n
	DRINKING_FINISH o
	EAT p
	ELYTRA_FREE_FALL q
	ENTITY_DAMAGED r
	ENTITY_KILLED s
	ENTITY_PLACE t
	EQUIP u
	EXPLODE v
	FISHING_ROD_CAST w
	FISHING_ROD_REEL_IN x
	FLAP y
	FLUID_PICKUP z
	FLUID_PLACE A
	HIT_GROUND B
	LIGHTNING_STRIKE D
	MINECART_MOVING E
	MOB_INTERACT C
	PISTON_CONTRACT F
	PISTON_EXTEND G
	PRIME_FUSE H
	PROJECTILE_LAND I
	PROJECTILE_SHOOT J
	RAVAGER_ROAR K
	RING_BELL L
	SHEAR M
	SHULKER_CLOSE N
	SHULKER_OPEN O
	SPLASH P
	STEP Q
	SWIM R
	WOLF_SHAKING S
	name U
	notificationRadius V
	getName ()Ljava/lang/String; a
	getNotificationRadius ()I b
	register (Ljava/lang/String;)Lnet/minecraft/world/level/gameevent/GameEvent; a
	register (Ljava/lang/String;I)Lnet/minecraft/world/level/gameevent/GameEvent; a
net/minecraft/world/level/gameevent/GameEventDispatcher net/minecraft/world/level/gameevent/GameEventDispatcher
	NOOP a
	isEmpty ()Z a
	post (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	register (Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	unregister (Lnet/minecraft/world/level/gameevent/GameEventListener;)V b
net/minecraft/world/level/gameevent/GameEventListenerRegistrar net/minecraft/world/level/gameevent/GameEventListenerRegistrar
	listener a
	sectionPos b
	ifEventDispatcherExists (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/SectionPos;Ljava/util/function/Consumer;)V a
	onListenerMove (Lnet/minecraft/world/level/Level;)V b
	onListenerRemoved (Lnet/minecraft/world/level/Level;)V a
net/minecraft/world/level/gameevent/PositionSource net/minecraft/world/level/gameevent/PositionSource
	CODEC b
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
net/minecraft/world/level/gameevent/PositionSourceType net/minecraft/world/level/gameevent/PositionSourceType
	BLOCK a
	ENTITY b
	codec ()Lcom/mojang/serialization/Codec; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; c
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	register (Ljava/lang/String;Lnet/minecraft/world/level/gameevent/PositionSourceType;)Lnet/minecraft/world/level/gameevent/PositionSourceType; a
	toNetwork (Lnet/minecraft/world/level/gameevent/PositionSource;Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/vibrations/VibrationListener net/minecraft/world/level/gameevent/vibrations/VibrationListener
	config c
	listenerRange b
	listenerSource a
	receivingDistance e
	receivingEvent d
	travelTimeInTicks f
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	handleGameEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)Z a
	isOccluded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	isValidVibration (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)Z a
	sendSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V a
	tick (Lnet/minecraft/world/level/Level;)V a
net/minecraft/world/level/gameevent/vibrations/VibrationPath net/minecraft/world/level/gameevent/vibrations/VibrationPath
	CODEC a
	arrivalInTicks d
	destination c
	origin b
	getArrivalInTicks ()I a
	getDestination ()Lnet/minecraft/world/level/gameevent/PositionSource; c
	getOrigin ()Lnet/minecraft/core/BlockPos; b
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/vibrations/VibrationPath; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/vibrations/VibrationPath;)V a
net/minecraft/world/level/levelgen/Beardifier net/minecraft/world/level/levelgen/Beardifier
	BEARD_KERNEL c
	BEARD_KERNEL_RADIUS a
	BEARD_KERNEL_SIZE b
	junctionIterator g
	junctions e
	pieceIterator f
	rigids d
	computeBeardContribution (III)D c
	getBeardContribution (III)D b
	getBuryContribution (III)D a
net/minecraft/world/level/levelgen/BelowZeroRetrogen net/minecraft/world/level/levelgen/BelowZeroRetrogen
	BITSET_CODEC d
	CODEC a
	EMPTY c
	NON_EMPTY_CHUNK_STATUS e
	RETAINED_RETROGEN_BIOMES f
	UPGRADE_HEIGHT_ACCESSOR b
	missingBedrock h
	targetStatus g
	applyBedrockMask (Lnet/minecraft/world/level/chunk/ProtoChunk;)V b
	getBiomeResolver (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/biome/BiomeResolver; a
	hasBedrockHole (II)Z a
	hasBedrockHoles ()Z b
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; a
	replaceOldBedrock (Lnet/minecraft/world/level/chunk/ProtoChunk;)V a
	targetStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; a
net/minecraft/world/level/levelgen/BitRandomSource net/minecraft/world/level/levelgen/BitRandomSource
	DOUBLE_MULTIPLIER b
	FLOAT_MULTIPLIER a
	next (I)I a
net/minecraft/world/level/levelgen/GeodeBlockSettings net/minecraft/world/level/levelgen/GeodeBlockSettings
	CODEC i
	alternateInnerLayerProvider c
	cannotReplace g
	fillingProvider a
	innerLayerProvider b
	innerPlacements f
	invalidBlocks h
	middleLayerProvider d
	outerLayerProvider e
net/minecraft/world/level/levelgen/GeodeCrackSettings net/minecraft/world/level/levelgen/GeodeCrackSettings
	CODEC a
	baseCrackSize c
	crackPointOffset d
	generateCrackChance b
net/minecraft/world/level/levelgen/GeodeLayerSettings net/minecraft/world/level/levelgen/GeodeLayerSettings
	CODEC a
	LAYER_RANGE f
	filling b
	innerLayer c
	middleLayer d
	outerLayer e
net/minecraft/world/level/levelgen/LegacyRandomSource net/minecraft/world/level/levelgen/LegacyRandomSource
	INCREMENT f
	MODULUS_BITS c
	MODULUS_MASK d
	MULTIPLIER e
	gaussianSource h
	seed g
	fork ()Lnet/minecraft/world/level/levelgen/RandomSource; a
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; b
	next (I)I a
net/minecraft/world/level/levelgen/MarsagliaPolarGaussian net/minecraft/world/level/levelgen/MarsagliaPolarGaussian
	haveNextNextGaussian c
	nextNextGaussian b
	randomSource a
	nextGaussian ()D b
	reset ()V a
net/minecraft/world/level/levelgen/NoiseChunk net/minecraft/world/level/levelgen/NoiseChunk
	aquifer m
	baseNoise n
	blender p
	cellCountXZ c
	cellCountY d
	cellNoiseMinY e
	firstCellX f
	firstCellZ g
	firstNoiseX h
	firstNoiseZ i
	interpolators j
	noiseData k
	noiseSettings b
	oreVeins o
	preliminarySurfaceLevel l
	sampler a
	advanceCellX (I)V a
	aquifer ()Lnet/minecraft/world/level/levelgen/Aquifer; d
	computePreliminarySurfaceLevel (J)I a
	createNoiseInterpolator (Lnet/minecraft/world/level/levelgen/NoiseChunk$NoiseFiller;)Lnet/minecraft/world/level/levelgen/NoiseChunk$NoiseInterpolator; a
	forChunk (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseSampler;Ljava/util/function/Supplier;Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;Lnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;Lnet/minecraft/world/level/levelgen/blending/Blender;)Lnet/minecraft/world/level/levelgen/NoiseChunk; a
	forColumn (IIIILnet/minecraft/world/level/levelgen/NoiseSampler;Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;Lnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;)Lnet/minecraft/world/level/levelgen/NoiseChunk; a
	getBlender ()Lnet/minecraft/world/level/levelgen/blending/Blender; a
	initializeForFirstCellX ()V b
	noiseData (II)Lnet/minecraft/world/level/levelgen/NoiseSampler$FlatNoiseData; a
	oreVeinify (III)Lnet/minecraft/world/level/block/state/BlockState; b
	preliminarySurfaceLevel (II)I b
	selectCellYZ (II)V c
	swapSlices ()V c
	updateForX (D)V b
	updateForY (D)V a
	updateForZ (D)V c
	updateNoiseAndGenerateBaseState (III)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/NoiseSampler net/minecraft/world/level/levelgen/NoiseSampler
	CHANCE_OF_RAW_ORE_BLOCK k
	EDGE_ROUNDOFF_BEGIN e
	MAX_EDGE_ROUNDOFF f
	MAX_RICHNESS i
	MAX_RICHNESS_THRESHOLD j
	MIN_RICHNESS h
	NOODLE_SPACING_AND_STRAIGHTNESS m
	ORE_THICKNESS b
	ORE_VEIN_RARITY a
	SKIP_ORE_IF_GAP_NOISE_IS_BELOW l
	VEININESS_FREQUENCY d
	VEININESS_THRESHOLD c
	VEIN_SOLIDNESS g
	amplified af
	aquiferPositionalRandomFactory ab
	barrierNoise t
	baseNoise p
	bigEntranceNoiseSource L
	blendedNoise q
	cheeseNoiseSource M
	continentalnessNoise P
	depthBasedLayerPositionalRandomFactory ad
	erosionNoise Q
	fluidLevelFloodednessNoise u
	fluidLevelSpreadNoise v
	gapNoise T
	humidityNoise O
	isNoiseCavesEnabled o
	islandNoise r
	jaggedNoise s
	lavaNoise w
	layerNoiseSource x
	noiseSettings n
	noodleRidgeA Z
	noodleRidgeB aa
	noodleThickness Y
	noodleToggle X
	offsetNoise S
	oreVeinsPositionalRandomFactory ac
	pillarNoiseSource y
	pillarRarenessModulator z
	pillarThicknessModulator A
	spaghetti2DElevationModulator C
	spaghetti2DNoiseSource B
	spaghetti2DRarityModulator D
	spaghetti2DThicknessModulator E
	spaghetti3DNoiseSource1 F
	spaghetti3DNoiseSource2 G
	spaghetti3DRarityModulator H
	spaghetti3DThicknessModulator I
	spaghettiRoughnessModulator K
	spaghettiRoughnessNoise J
	spawnTarget ae
	temperatureNoise N
	veinA V
	veinB W
	veininess U
	weirdnessNoise R
	applySlide (DI)D a
	calculateBaseNoise (IIILnet/minecraft/world/level/levelgen/TerrainInfo;DZZLnet/minecraft/world/level/levelgen/blending/Blender;)D a
	calculateBaseNoise (IIILnet/minecraft/world/level/levelgen/TerrainInfo;Lnet/minecraft/world/level/levelgen/blending/Blender;)D a
	clampToUnit (D)D a
	computeBaseDensity (ILnet/minecraft/world/level/levelgen/TerrainInfo;)D a
	createAquifer (Lnet/minecraft/world/level/levelgen/NoiseChunk;IIIILnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;Z)Lnet/minecraft/world/level/levelgen/Aquifer; a
	findSpawnPosition ()Lnet/minecraft/core/BlockPos; a
	getBigEntrances (III)D b
	getContinentalness (DDD)D a
	getDepthBasedLayerPositionalRandom ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; b
	getErosion (DDD)D b
	getHumidity (DDD)D f
	getLayerizedCaverns (III)D d
	getOffset (III)D a
	getPillars (III)D c
	getPreliminarySurfaceLevel (IILnet/minecraft/world/level/levelgen/TerrainInfo;)I a
	getSpaghetti2D (III)D f
	getSpaghetti3D (III)D e
	getTemperature (DDD)D e
	getVeinType (DI)Lnet/minecraft/world/level/levelgen/NoiseSampler$VeinType; b
	getWeirdness (DDD)D c
	isVein (DD)Z a
	makeBaseNoiseFiller (Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/world/level/levelgen/NoiseChunk$NoiseFiller;Z)Lnet/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller; a
	makeOreVeinifier (Lnet/minecraft/world/level/levelgen/NoiseChunk;Z)Lnet/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller; a
	noiseData (IILnet/minecraft/world/level/levelgen/blending/Blender;)Lnet/minecraft/world/level/levelgen/NoiseSampler$FlatNoiseData; a
	sampleJaggedNoise (DDD)D d
	sampleWithRarity (Lnet/minecraft/world/level/levelgen/synth/NormalNoise;DDDD)D a
	spaghettiRoughness (III)D g
	target (IIILnet/minecraft/world/level/levelgen/NoiseSampler$FlatNoiseData;)Lnet/minecraft/world/level/biome/Climate$TargetPoint; a
	terrainInfo (IIFFFLnet/minecraft/world/level/levelgen/blending/Blender;)Lnet/minecraft/world/level/levelgen/TerrainInfo; a
	yLimitedInterpolatableNoise (Lnet/minecraft/world/level/levelgen/synth/NormalNoise;IIID)Lnet/minecraft/world/level/levelgen/NoiseChunk$InterpolatableNoise; a
net/minecraft/world/level/levelgen/NoiseSamplingSettings net/minecraft/world/level/levelgen/NoiseSamplingSettings
	CODEC a
	SCALE_RANGE b
	xzFactor e
	xzScale c
	yFactor f
	yScale d
	xzFactor ()D c
	xzScale ()D a
	yFactor ()D d
	yScale ()D b
net/minecraft/world/level/levelgen/NoiseSettings net/minecraft/world/level/levelgen/NoiseSettings
	CODEC a
	bottomSlideSettings f
	height c
	isAmplified j
	islandNoiseOverride i
	largeBiomes k
	minY b
	noiseSamplingSettings d
	noiseSizeHorizontal g
	noiseSizeVertical h
	terrainShaper l
	topSlideSettings e
	bottomSlideSettings ()Lnet/minecraft/world/level/levelgen/NoiseSlider; l
	create (IILnet/minecraft/world/level/levelgen/NoiseSamplingSettings;Lnet/minecraft/world/level/levelgen/NoiseSlider;Lnet/minecraft/world/level/levelgen/NoiseSlider;IIZZZLnet/minecraft/world/level/biome/TerrainShaper;)Lnet/minecraft/world/level/levelgen/NoiseSettings; a
	getCellCountY ()I f
	getCellHeight ()I d
	getCellWidth ()I e
	getMinCellY ()I g
	guardY (Lnet/minecraft/world/level/levelgen/NoiseSettings;)Lcom/mojang/serialization/DataResult; a
	height ()I i
	isAmplified ()Z b
	islandNoiseOverride ()Z a
	largeBiomes ()Z c
	minY ()I h
	noiseSamplingSettings ()Lnet/minecraft/world/level/levelgen/NoiseSamplingSettings; j
	noiseSizeHorizontal ()I m
	noiseSizeVertical ()I n
	terrainShaper ()Lnet/minecraft/world/level/biome/TerrainShaper; o
	topSlideSettings ()Lnet/minecraft/world/level/levelgen/NoiseSlider; k
net/minecraft/world/level/levelgen/NoiseSlider net/minecraft/world/level/levelgen/NoiseSlider
	CODEC a
	offset d
	size c
	target b
	applySlide (DI)D a
net/minecraft/world/level/levelgen/Noises net/minecraft/world/level/levelgen/Noises
	AQUIFER_BARRIER k
	AQUIFER_FLUID_LEVEL_FLOODEDNESS l
	AQUIFER_FLUID_LEVEL_SPREAD n
	AQUIFER_LAVA m
	BADLANDS_PILLAR Q
	BADLANDS_PILLAR_ROOF R
	BADLANDS_SURFACE S
	CALCITE X
	CAVE_CHEESE D
	CAVE_ENTRANCE B
	CAVE_LAYER C
	CLAY_BANDS_OFFSET P
	CONTINENTALNESS c
	CONTINENTALNESS_LARGE g
	EROSION d
	EROSION_LARGE h
	GRAVEL Y
	GRAVEL_LAYER ad
	ICE ab
	ICEBERG_PILLAR T
	ICEBERG_PILLAR_ROOF U
	ICEBERG_SURFACE V
	JAGGED M
	NETHERRACK af
	NETHER_STATE_SELECTOR ah
	NETHER_WART ag
	NOODLE I
	NOODLE_RIDGE_A K
	NOODLE_RIDGE_B L
	NOODLE_THICKNESS J
	ORE_GAP H
	ORE_VEININESS E
	ORE_VEIN_A F
	ORE_VEIN_B G
	PACKED_ICE aa
	PATCH ae
	PILLAR o
	PILLAR_RARENESS p
	PILLAR_THICKNESS q
	POWDER_SNOW Z
	RIDGE i
	SHIFT j
	SOUL_SAND_LAYER ac
	SPAGHETTI_2D r
	SPAGHETTI_2D_ELEVATION s
	SPAGHETTI_2D_MODULATOR t
	SPAGHETTI_2D_THICKNESS u
	SPAGHETTI_3D_1 v
	SPAGHETTI_3D_2 w
	SPAGHETTI_3D_RARITY x
	SPAGHETTI_3D_THICKNESS y
	SPAGHETTI_ROUGHNESS z
	SPAGHETTI_ROUGHNESS_MODULATOR A
	SURFACE N
	SURFACE_SECONDARY O
	SWAMP W
	TEMPERATURE a
	TEMPERATURE_LARGE e
	VEGETATION b
	VEGETATION_LARGE f
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	instantiate (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
net/minecraft/world/level/levelgen/RandomSupport net/minecraft/world/level/levelgen/RandomSupport
	GOLDEN_RATIO_64 a
	SEED_UNIQUIFIER c
	SILVER_RATIO_64 b
	mixStafford13 (J)J a
	seedUniquifier ()J a
	upgradeSeedTo128bit (J)Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; b
net/minecraft/world/level/levelgen/StructureSettings net/minecraft/world/level/levelgen/StructureSettings
	CODEC a
	DEFAULTS b
	DEFAULT_STRONGHOLD c
	configuredStructures e
	stronghold f
	structureConfig d
	getConfig (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration; a
	stronghold ()Lnet/minecraft/world/level/levelgen/feature/configurations/StrongholdConfiguration; b
	structureConfig ()Ljava/util/Map; a
	structures (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lcom/google/common/collect/ImmutableMultimap; b
net/minecraft/world/level/levelgen/SurfaceRules net/minecraft/world/level/levelgen/SurfaceRules
	ON_CEILING c
	ON_FLOOR a
	UNDER_CEILING d
	UNDER_FLOOR b
	abovePreliminarySurface ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; c
	bandlands ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; e
	hole ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
	ifTrue (Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	isBiome (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource; a
	isBiome ([Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	noiseCondition (Lnet/minecraft/resources/ResourceKey;D)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	noiseCondition (Lnet/minecraft/resources/ResourceKey;DD)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	not (Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	sequence ([Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	state (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	steep ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	stoneDepthCheck (IZZLnet/minecraft/world/level/levelgen/placement/CaveSurface;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	temperature ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; d
	verticalGradient (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	waterBlockCheck (II)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	waterStartCheck (II)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
	yBlockCheck (Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	yStartCheck (Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
net/minecraft/world/level/levelgen/SurfaceSystem net/minecraft/world/level/levelgen/SurfaceSystem
	BROWN_TERRACOTTA e
	LIGHT_GRAY_TERRACOTTA g
	ORANGE_TERRACOTTA b
	PACKED_ICE h
	RED_TERRACOTTA f
	SNOW_BLOCK i
	TERRACOTTA c
	WHITE_TERRACOTTA a
	YELLOW_TERRACOTTA d
	badlandsPillarNoise n
	badlandsPillarRoofNoise o
	badlandsSurfaceNoise p
	clayBands l
	clayBandsOffsetNoise m
	defaultBlock j
	icebergPillarNoise q
	icebergPillarRoofNoise r
	icebergSurfaceNoise s
	noiseIntances u
	noises t
	positionalRandoms v
	randomFactory w
	seaLevel k
	surfaceNoise x
	surfaceSecondaryNoise y
	buildSurface (Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/core/Registry;ZLnet/minecraft/world/level/levelgen/WorldGenerationContext;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;)V a
	erodedBadlandsExtension (Lnet/minecraft/world/level/chunk/BlockColumn;IIILnet/minecraft/world/level/LevelHeightAccessor;)V a
	frozenOceanExtension (ILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/chunk/BlockColumn;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
	generateBands (Lnet/minecraft/world/level/levelgen/RandomSource;)[Lnet/minecraft/world/level/block/state/BlockState; a
	getBand (III)Lnet/minecraft/world/level/block/state/BlockState; a
	getOrCreateNoise (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	getOrCreateRandomFactory (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; a
	getSurfaceDepth (II)I a
	getSurfaceDepth (Lnet/minecraft/world/level/levelgen/synth/NormalNoise;II)I a
	getSurfaceSecondaryDepth (II)I b
	isStone (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	makeBands (Lnet/minecraft/world/level/levelgen/RandomSource;[Lnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/world/level/block/state/BlockState;)V a
	topMaterial (Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/TerrainInfo net/minecraft/world/level/levelgen/TerrainInfo
	factor b
	jaggedness c
	offset a
	factor ()D b
	jaggedness ()D c
	offset ()D a
net/minecraft/world/level/levelgen/VerticalAnchor net/minecraft/world/level/levelgen/VerticalAnchor
	BOTTOM b
	CODEC a
	TOP c
	value d
	aboveBottom (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	absolute (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	belowTop (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; c
	bottom ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	merge (Lcom/mojang/datafixers/util/Either;)Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
	split (Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lcom/mojang/datafixers/util/Either; a
	top ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	value ()I c
net/minecraft/world/level/levelgen/WorldGenerationContext net/minecraft/world/level/levelgen/WorldGenerationContext
	height b
	minY a
	getGenDepth ()I b
	getMinGenY ()I a
net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus
	seedHi b
	seedLo a
	nextLong ()J a
net/minecraft/world/level/levelgen/XoroshiroRandomSource net/minecraft/world/level/levelgen/XoroshiroRandomSource
	DOUBLE_UNIT b
	FLOAT_UNIT a
	gaussianSource d
	randomNumberGenerator c
	consumeCount (I)V b
	fork ()Lnet/minecraft/world/level/levelgen/RandomSource; a
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; b
	nextBits (I)J a
net/minecraft/world/level/levelgen/blending/Blender net/minecraft/world/level/levelgen/blending/Blender
	BLENDING_FACTOR g
	BLENDING_JAGGEDNESS h
	DENSITY_BLENDING_RANGE_CELLS e
	DENSITY_BLENDING_RANGE_CHUNKS f
	EMPTY a
	HEIGHT_BLENDING_RANGE_CELLS c
	HEIGHT_BLENDING_RANGE_CHUNKS d
	OLD_CHUNK_CENTER_Y j
	OLD_CHUNK_XZ_RADIUS k
	OLD_CHUNK_Y_RADIUS i
	SHIFT_NOISE b
	densityData n
	heightData m
	region l
	addAroundOldChunksCarvingMaskFilter (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ProtoChunk;)V a
	blendBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	blendDensity (IIID)D a
	blendOffsetAndFactor (IILnet/minecraft/world/level/levelgen/TerrainInfo;)Lnet/minecraft/world/level/levelgen/TerrainInfo; a
	distanceToCube (DDDDDD)D a
	empty ()Lnet/minecraft/world/level/levelgen/blending/Blender; a
	generateBorderTick (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;)V a
	generateBorderTicks (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	getBiomeResolver (Lnet/minecraft/world/level/biome/BiomeResolver;)Lnet/minecraft/world/level/biome/BiomeResolver; a
	getBlendingDataValue (IIILnet/minecraft/world/level/levelgen/blending/Blender$CellValueGetter;)D a
	getBlendingDataValue (Lnet/minecraft/world/level/levelgen/blending/Blender$CellValueGetter;IIIII)D a
	heightToOffset (D)D a
	makeOffsetOldChunkDistanceGetter (Lnet/minecraft/core/Direction8;)Lnet/minecraft/world/level/levelgen/blending/Blender$DistanceGetter; a
	makeOldChunkDistanceGetter (ZLjava/util/Set;)Lnet/minecraft/world/level/levelgen/blending/Blender$DistanceGetter; a
	of (Lnet/minecraft/server/level/WorldGenRegion;)Lnet/minecraft/world/level/levelgen/blending/Blender; a
net/minecraft/world/level/levelgen/blending/BlendingData net/minecraft/world/level/levelgen/blending/BlendingData
	AREA_WITH_OLD_GENERATION a
	BLENDING_DENSITY_FACTOR g
	CELLS_PER_SECTION_Y h
	CELL_COLUMN_COUNT n
	CELL_COLUMN_INSIDE_COUNT l
	CELL_COLUMN_OUTSIDE_COUNT m
	CELL_HEIGHT c
	CELL_HORIZONTAL_FLOOR_COUNT o
	CELL_HORIZONTAL_MAX_INDEX_INSIDE j
	CELL_HORIZONTAL_MAX_INDEX_OUTSIDE k
	CELL_RATIO d
	CELL_WIDTH b
	CODEC f
	DOUBLE_ARRAY_CODEC v
	NO_VALUE e
	QUARTS_PER_SECTION i
	SURFACE_BLOCKS p
	densities t
	floorDensities u
	hasCalculatedData r
	heights s
	oldNoise q
	addValuesForColumn (ILnet/minecraft/world/level/chunk/ChunkAccess;II)V a
	calculateData (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Set;)V a
	cellCountPerColumn ()I b
	getColumnMinY ()I c
	getDensity (III)D b
	getDensity ([DI)D a
	getDensityColumn (Lnet/minecraft/world/level/chunk/ChunkAccess;III)[D a
	getFloorIndex (II)I a
	getFloorX (I)I a
	getFloorZ (I)I b
	getHeight (III)D a
	getHeightAtXZ (Lnet/minecraft/world/level/chunk/ChunkAccess;II)I a
	getInsideIndex (II)I b
	getMinY ()I d
	getOrUpdateBlendingData (Lnet/minecraft/server/level/WorldGenRegion;II)Lnet/minecraft/world/level/levelgen/blending/BlendingData; a
	getOutsideIndex (II)I c
	getX (I)I c
	getZ (I)I d
	isGround (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;)Z a
	iterateDensities (IIIILnet/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer;)V a
	iterateHeights (IILnet/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer;)V a
	oldNoise ()Z a
	read1 (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;)D a
	read7 (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;)D b
	sideByGenerationAge (Lnet/minecraft/world/level/WorldGenLevel;IIZ)Ljava/util/Set; a
	validateArraySize (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)Lcom/mojang/serialization/DataResult; a
	zeroIfNegative (I)I e
net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate
	CODEC a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate
	CODEC a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate
	CODEC b
	ONLY_IN_AIR_OR_WATER_PREDICATE d
	ONLY_IN_AIR_PREDICATE c
	allOf (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	allOf (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	allOf ([Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	alwaysTrue ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; d
	anyOf (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	anyOf (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	anyOf ([Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	hasSturdyFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	hasSturdyFace (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	insideWorld (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	matchesBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesBlocks (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	matchesBlocks (Ljava/util/List;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesFluid (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesFluids (Ljava/util/List;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	matchesTag (Lnet/minecraft/tags/Tag;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesTag (Lnet/minecraft/tags/Tag;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	not (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	replaceable ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	replaceable (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	solid ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	solid (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
	wouldSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType
	ALL_OF j
	ANY_OF i
	HAS_STURDY_FACE d
	INSIDE_WORLD_BOUNDS h
	MATCHING_BLOCKS a
	MATCHING_BLOCK_TAG b
	MATCHING_FLUIDS c
	NOT k
	REPLACEABLE f
	SOLID e
	TRUE l
	WOULD_SURVIVE g
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate
	predicates e
	codec (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate
	CODEC a
	direction f
	offset e
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate
	CODEC a
	offset e
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate
	CODEC e
	tag a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate
	CODEC a
	blocks e
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate
	CODEC a
	fluids e
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/NotPredicate net/minecraft/world/level/levelgen/blockpredicates/NotPredicate
	CODEC a
	predicate e
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate
	CODEC a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate
	CODEC a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate
	offset f
	stateTestingCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1; a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate
	CODEC e
	INSTANCE a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate
	CODEC a
	offset e
	state f
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration
	CODEC a
	shape c
	verticalRotation b
net/minecraft/world/level/levelgen/carver/CarverDebugSettings net/minecraft/world/level/levelgen/carver/CarverDebugSettings
	CODEC b
	DEFAULT a
	airState d
	barrierState g
	debugMode c
	lavaState f
	waterState e
	getAirState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getBarrierState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getLavaState ()Lnet/minecraft/world/level/block/state/BlockState; d
	getWaterState ()Lnet/minecraft/world/level/block/state/BlockState; c
	isDebugMode ()Z a
	of (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
	of (ZLnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
	of (ZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
net/minecraft/world/level/levelgen/carver/CarvingContext net/minecraft/world/level/levelgen/carver/CarvingContext
	generator a
	noiseChunk c
	registryAccess b
	registryAccess ()Lnet/minecraft/core/RegistryAccess; c
	topMaterial (Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration
	CODEC a
	floorLevel i
	horizontalRadiusMultiplier b
	verticalRadiusMultiplier c
net/minecraft/world/level/levelgen/feature/FeaturePlaceContext net/minecraft/world/level/levelgen/feature/FeaturePlaceContext
	chunkGenerator c
	config f
	level b
	origin e
	random d
	topFeature a
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; c
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; f
	level ()Lnet/minecraft/world/level/WorldGenLevel; b
	origin ()Lnet/minecraft/core/BlockPos; e
	random ()Ljava/util/Random; d
	topFeature ()Ljava/util/Optional; a
net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration
	CODEC a
	fossilProcessors d
	fossilStructures b
	maxEmptyCornersAllowed f
	overlayProcessors e
	overlayStructures c
net/minecraft/world/level/levelgen/feature/GeodeFeature net/minecraft/world/level/levelgen/feature/GeodeFeature
	DIRECTIONS a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/NoiseEffect net/minecraft/world/level/levelgen/feature/NoiseEffect
	$VALUES d
	BEARD c
	BURY b
	NONE a
	$values ()[Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; a
net/minecraft/world/level/levelgen/feature/ScatteredOreFeature net/minecraft/world/level/levelgen/feature/ScatteredOreFeature
	MAX_DIST_FROM_ORIGIN a
	getRandomPlacementInOneAxisRelativeToOrigin (Ljava/util/Random;I)I a
	offsetTargetPos (Lnet/minecraft/core/BlockPos$MutableBlockPos;Ljava/util/Random;Lnet/minecraft/core/BlockPos;I)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature
	CODEC a
	chance c
	feature b
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration
	CODEC a
	allowedPlacement d
	direction c
	layers b
	prioritizeTip e
	allowedPlacement ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	direction ()Lnet/minecraft/core/Direction; b
	layer (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer; a
	layers ()Ljava/util/List; a
	prioritizeTip ()Z d
	simple (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration; b
net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration
	CODEC a
	chanceOfDripstoneColumnAtMaxDistanceFromCenter j
	density h
	dripstoneBlockLayerThickness g
	floorToCeilingSearchRange b
	height c
	heightDeviation f
	maxDistanceFromCenterAffectingHeightBias l
	maxDistanceFromEdgeAffectingChanceOfDripstoneColumn k
	maxStalagmiteStalactiteHeightDiff e
	radius d
	wetness i
net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration
	CHANCE_RANGE a
	CODEC b
	distributionPoints j
	geodeBlockSettings c
	geodeCrackSettings e
	geodeLayerSettings d
	invalidBlocksThreshold p
	maxGenOffset n
	minGenOffset l
	noiseMultiplier o
	outerWallDistance i
	placementsRequireLayer0Alternate h
	pointOffset k
	useAlternateLayer0Chance g
	usePotentialPlacementsChance f
net/minecraft/world/level/levelgen/feature/configurations/GlowLichenConfiguration net/minecraft/world/level/levelgen/feature/configurations/GlowLichenConfiguration
	CODEC a
	canBePlacedOn g
	canPlaceOnCeiling d
	canPlaceOnFloor c
	canPlaceOnWall e
	chanceOfSpreading f
	searchRange b
	validDirections h
net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration
	CODEC a
	columnRadius c
	floorToCeilingSearchRange b
	heightScale d
	maxColumnRadiusToCaveHeightRatio e
	minBluntnessForWind j
	minRadiusForWind i
	stalactiteBluntness f
	stalagmiteBluntness g
	windSpeed h
net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig
	CODEC c
	spreadHeight e
	spreadWidth d
net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration
	CODEC a
	chanceOfDirectionalSpread c
	chanceOfSpreadRadius2 d
	chanceOfSpreadRadius3 e
	chanceOfTallerDripstone b
net/minecraft/world/level/levelgen/feature/configurations/RangeConfiguration net/minecraft/world/level/levelgen/feature/configurations/RangeConfiguration
	CODEC a
	height b
net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration
	CODEC a
	allowedTreePosition o
	allowedVerticalWaterForTree n
	hangingRootPlacementAttempts l
	hangingRootRadius i
	hangingRootStateProvider k
	hangingRootsVerticalSpan j
	requiredVerticalSpaceForTree c
	rootColumnMaxHeight h
	rootPlacementAttempts g
	rootRadius d
	rootReplaceable e
	rootStateProvider f
	treeFeature b
net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig
	CODEC a
	maxHeight d
	spreadHeight c
	spreadWidth b
	maxHeight ()I c
	spreadHeight ()I b
	spreadWidth ()I a
net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration
	CODEC a
	floorSearchRange b
	placementProbabilityPerValidPosition d
	placementRadiusAroundFloor c
net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration
	CODEC a
	depth f
	extraBottomBlockChance g
	extraEdgeColumnChance k
	groundState c
	replaceable b
	surface e
	vegetationChance i
	vegetationFeature d
	verticalRange h
	xzRadius j
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize
	CODEC a
	MAX_WIDTH b
	minClippedHeight c
	getSizeAtHeight (II)I a
	minClippedHeight ()Ljava/util/OptionalInt; c
	minClippedHeightCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType
	THREE_LAYERS_FEATURE_SIZE b
	TWO_LAYERS_FEATURE_SIZE a
	codec c
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer
	CODEC a
	foliageHeight b
	leafPlacementAttempts c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider
	CODEC b
	slowNoise l
	slowNoiseParameters j
	slowScale k
	variety i
	getSlowNoiseValue (Lnet/minecraft/core/BlockPos;)D a
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider
	noise f
	parameters d
	scale e
	seed c
	getNoiseValue (Lnet/minecraft/core/BlockPos;D)D a
	noiseCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider
	CODEC g
	states h
	getRandomState (Ljava/util/List;D)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomState (Ljava/util/List;Lnet/minecraft/core/BlockPos;D)Lnet/minecraft/world/level/block/state/BlockState; a
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	noiseProviderCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4; b
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider
	CODEC b
	defaultState i
	highChance h
	highStates k
	lowStates j
	threshold g
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider
	CODEC b
	property e
	propertyName d
	source c
	values f
	findProperty (Lnet/minecraft/world/level/block/state/BlockState;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer
	CODEC a
	bendLength h
	minHeightForLeaves b
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer
	CODEC c
	MAX_BASE_HEIGHT a
	MAX_HEIGHT d
	MAX_RAND b
	baseHeight e
	heightRandA f
	heightRandB g
	getTreeHeight (Ljava/util/Random;)I a
	isDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	placeLog (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z b
	placeLog (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Ljava/util/function/Function;)Z a
	placeLogIfFree (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	setDirtAt (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	trunkPlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight
	CODEC a
	LOGGER b
	inner f
	maxInclusive e
	minInclusive d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight; a
	sample (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/ConstantHeight net/minecraft/world/level/levelgen/heightproviders/ConstantHeight
	CODEC b
	ZERO a
	value d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	getValue ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/ConstantHeight; a
	sample (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/HeightProvider net/minecraft/world/level/levelgen/heightproviders/HeightProvider
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	sample (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/HeightProviderType net/minecraft/world/level/levelgen/heightproviders/HeightProviderType
	BIASED_TO_BOTTOM c
	CONSTANT a
	TRAPEZOID e
	UNIFORM b
	VERY_BIASED_TO_BOTTOM d
	WEIGHTED_LIST f
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight
	CODEC a
	LOGGER b
	maxInclusive e
	minInclusive d
	plateau f
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight; a
	sample (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/UniformHeight net/minecraft/world/level/levelgen/heightproviders/UniformHeight
	CODEC a
	LOGGER b
	maxInclusive e
	minInclusive d
	warnedFor f
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/UniformHeight; a
	sample (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight
	CODEC a
	LOGGER b
	inner f
	maxInclusive e
	minInclusive d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight; a
	sample (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight
	CODEC a
	distribution b
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	sample (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/material/MaterialRuleList net/minecraft/world/level/levelgen/material/MaterialRuleList
	materialRuleList a
net/minecraft/world/level/levelgen/placement/BiomeFilter net/minecraft/world/level/levelgen/placement/BiomeFilter
	CODEC a
	INSTANCE c
	biome ()Lnet/minecraft/world/level/levelgen/placement/BiomeFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/BlockPredicateFilter net/minecraft/world/level/levelgen/placement/BlockPredicateFilter
	CODEC a
	predicate c
	forPredicate (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/placement/BlockPredicateFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement
	CODEC a
	step c
	forStep (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/levelgen/placement/CarvingMaskPlacement; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/CaveSurface net/minecraft/world/level/levelgen/placement/CaveSurface
	$VALUES h
	CEILING a
	CODEC c
	FLOOR b
	VALUES g
	direction d
	id f
	y e
	$values ()[Lnet/minecraft/world/level/levelgen/placement/CaveSurface; d
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/placement/CaveSurface; a
	getDirection ()Lnet/minecraft/core/Direction; a
	getSerializedName ()Ljava/lang/String; c
	getY ()I b
net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement
	CODEC a
	count c
	findOnGroundYPosition (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;IIII)I a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	isEmpty (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	of (I)Lnet/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement; a
	of (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/CountPlacement net/minecraft/world/level/levelgen/placement/CountPlacement
	CODEC a
	count c
	count (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)I a
	of (I)Lnet/minecraft/world/level/levelgen/placement/CountPlacement; a
	of (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/CountPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement
	CODEC a
	allowedSearchCondition e
	directionOfSearch c
	maxSteps f
	targetCondition d
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	scanningFor (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;I)Lnet/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement; a
	scanningFor (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;I)Lnet/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/HeightRangePlacement net/minecraft/world/level/levelgen/placement/HeightRangePlacement
	CODEC a
	height c
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	of (Lnet/minecraft/world/level/levelgen/heightproviders/HeightProvider;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; a
	triangle (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; b
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
	uniform (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; a
net/minecraft/world/level/levelgen/placement/HeightmapPlacement net/minecraft/world/level/levelgen/placement/HeightmapPlacement
	CODEC a
	heightmap c
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	onHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/placement/HeightmapPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/InSquarePlacement net/minecraft/world/level/levelgen/placement/InSquarePlacement
	CODEC a
	INSTANCE c
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	spread ()Lnet/minecraft/world/level/levelgen/placement/InSquarePlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement
	CODEC a
	noiseFactor d
	noiseOffset e
	noiseToCountRatio c
	count (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)I a
	of (IDD)Lnet/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement
	CODEC a
	aboveNoise e
	belowNoise d
	noiseLevel c
	count (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)I a
	of (DII)Lnet/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/PlacedFeature net/minecraft/world/level/levelgen/placement/PlacedFeature
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	feature d
	placement e
	getFeatures ()Ljava/util/stream/Stream; a
	getPlacement ()Ljava/util/List; b
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
	placeWithBiomeCheck (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z b
	placeWithContext (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/placement/PlacementContext net/minecraft/world/level/levelgen/placement/PlacementContext
	generator b
	level a
	topFeature c
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; f
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getCarvingMask (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; a
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/world/level/WorldGenLevel; d
	getMinBuildHeight ()I c
	topFeature ()Ljava/util/Optional; e
net/minecraft/world/level/levelgen/placement/PlacementModifier net/minecraft/world/level/levelgen/placement/PlacementModifier
	CODEC b
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/PlacementModifierType net/minecraft/world/level/levelgen/placement/PlacementModifierType
	BIOME_FILTER e
	BLOCK_PREDICATE_FILTER a
	CARVING_MASK_PLACEMENT o
	COUNT f
	COUNT_ON_EVERY_LAYER i
	ENVIRONMENT_SCAN j
	HEIGHTMAP k
	HEIGHT_RANGE l
	IN_SQUARE m
	NOISE_BASED_COUNT g
	NOISE_THRESHOLD_COUNT h
	RANDOM_OFFSET n
	RARITY_FILTER b
	SURFACE_RELATIVE_THRESHOLD_FILTER c
	SURFACE_WATER_DEPTH_FILTER d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; a
net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement
	CODEC a
	xzSpread c
	ySpread d
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	horizontal (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; b
	of (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
	vertical (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; a
net/minecraft/world/level/levelgen/placement/RarityFilter net/minecraft/world/level/levelgen/placement/RarityFilter
	CODEC a
	chance c
	onAverageOnceEvery (I)Lnet/minecraft/world/level/levelgen/placement/RarityFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter
	CODEC a
	heightmap c
	maxInclusive e
	minInclusive d
	of (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)Lnet/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter
	CODEC a
	maxWaterDepth c
	forMaxDepth (I)Lnet/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/structure/PostPlacementProcessor net/minecraft/world/level/levelgen/structure/PostPlacementProcessor
	NONE a
net/minecraft/world/level/levelgen/structure/StructureCheck net/minecraft/world/level/levelgen/structure/StructureCheck
	LOGGER a
	NO_STRUCTURE b
	biomeSource j
	biomes e
	chunkGenerator h
	dimension g
	featureChecks n
	fixerUpper l
	heightAccessor i
	loadedChunks m
	registryAccess d
	seed k
	storageAccess c
	structureManager f
	canCreateStructure (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;Ljava/util/Collection;)Z a
	checkStart (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
	checkStructureInfo (Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
	deduplicateEmptyMap (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
	incrementReference (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)V a
	loadStructures (Lnet/minecraft/nbt/CompoundTag;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
	onStructureLoad (Lnet/minecraft/world/level/ChunkPos;Ljava/util/Map;)V a
	storeFullResults (JLit/unimi/dsi/fastutil/objects/Object2IntMap;)V a
	tryLoadFromStorage (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;ZJ)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
net/minecraft/world/level/levelgen/structure/StructureCheckResult net/minecraft/world/level/levelgen/structure/StructureCheckResult
	$VALUES d
	CHUNK_LOAD_NEEDED c
	START_NOT_PRESENT b
	START_PRESENT a
	$values ()[Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
net/minecraft/world/level/levelgen/structure/StructurePiece net/minecraft/world/level/levelgen/structure/StructurePiece
	CAVE_AIR z
	LOGGER a
	SHAPE_CHECK_BLOCKS f
	boundingBox A
	genDepth B
	mirror c
	orientation b
	rotation d
	type e
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	canBeReplaced (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	createBoundingBox (Ljava/util/stream/Stream;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	createChest (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	createChest (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;IIILnet/minecraft/resources/ResourceLocation;)Z a
	createDispenser (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;IIILnet/minecraft/core/Direction;Lnet/minecraft/resources/ResourceLocation;)Z a
	createTag (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/nbt/CompoundTag; a
	fillColumnDown (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	findCollisionPiece (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateAirBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIII)V b
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIIZLjava/util/Random;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector;)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ZLjava/util/Random;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector;)V a
	generateMaybeBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;FIIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;ZZ)V a
	generateUpperHalfSphere (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Z)V a
	getBlock (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/block/state/BlockState; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; f
	getGenDepth ()I g
	getLocatorPosition ()Lnet/minecraft/core/BlockPos; ad_
	getMirror ()Lnet/minecraft/world/level/block/Mirror; i
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ac_
	getOrientation ()Lnet/minecraft/core/Direction; h
	getRandomHorizontalDirection (Ljava/util/Random;)Lnet/minecraft/core/Direction; b
	getRotation ()Lnet/minecraft/world/level/block/Rotation; ab_
	getType ()Lnet/minecraft/world/level/levelgen/feature/StructurePieceType; j
	getWorldPos (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	getWorldX (II)I a
	getWorldY (I)I a
	getWorldZ (II)I b
	isCloseToChunk (Lnet/minecraft/world/level/ChunkPos;I)Z a
	isInterior (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z b
	isReplaceableByStructures (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	makeBoundingBox (IIILnet/minecraft/core/Direction;III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	maybeGenerateBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;FIIILnet/minecraft/world/level/block/state/BlockState;)V a
	move (III)V a
	placeBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V c
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	reorient (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	setOrientation (Lnet/minecraft/core/Direction;)V a
net/minecraft/world/level/levelgen/structure/StructureStart net/minecraft/world/level/levelgen/structure/StructureStart
	INVALID_START b
	INVALID_START_ID a
	cachedBoundingBox g
	chunkPos e
	feature c
	pieceContainer d
	references f
	addReference ()V e
	canBeReferenced ()Z d
	createTag (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getChunkPos ()Lnet/minecraft/world/level/ChunkPos; c
	getFeature ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature; h
	getMaxReferences ()I g
	getPieces ()Ljava/util/List; i
	getReferences ()I f
	isValid ()Z b
	placeInChunk (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer
	JIGSAW_RENAME c
	LOGGER b
	RENAMES d
	pieces a
	calculateBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	isEmpty ()Z a
	isInsidePiece (Lnet/minecraft/core/BlockPos;)Z a
	load (Lnet/minecraft/nbt/ListTag;Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; a
	pieces ()Ljava/util/List; c
	save (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/nbt/Tag; a
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext
	registryAccess b
	resourceManager a
	structureManager c
	fromLevel (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext; a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; b
	resourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; a
	structureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager; c
net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder
	pieces a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;)V a
	build ()Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; a
	clear ()V b
	findCollisionPiece (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; d
	isEmpty ()Z c
	moveBelowSeaLevel (IILjava/util/Random;I)V a
	moveInsideHeights (Ljava/util/Random;II)V a
	offsetPiecesVertically (I)V a
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest
	CODEC c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType
	ALWAYS_TRUE_TEST a
	AXIS_ALIGNED_LINEAR_POS_TEST c
	LINEAR_POS_TEST b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor
	CODEC b
	cannotReplace a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/synth/BlendedNoise net/minecraft/world/level/levelgen/synth/BlendedNoise
	cellHeight i
	cellWidth h
	mainNoise c
	maxLimitNoise b
	minLimitNoise a
	xzMainScale f
	xzScale d
	yMainScale g
	yScale e
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/material/Material net/minecraft/world/level/material/Material
	AIR a
	AMETHYST T
	BAMBOO C
	BAMBOO_SAPLING B
	BARRIER N
	BUBBLE_COLUMN k
	BUILDABLE_GLASS r
	CACTUS I
	CAKE S
	CLAY s
	CLOTH_DECORATION d
	DECORATION o
	DIRT t
	EGG R
	EXPLOSIVE E
	FIRE n
	GLASS G
	GRASS u
	HEAVY_METAL M
	ICE H
	ICE_SOLID v
	LAVA l
	LEAVES F
	METAL K
	MOSS P
	NETHER_WOOD A
	PISTON O
	PLANT e
	PORTAL c
	POWDER_SNOW U
	REPLACEABLE_FIREPROOF_PLANT h
	REPLACEABLE_PLANT g
	REPLACEABLE_WATER_PLANT i
	SAND w
	SCULK q
	SHULKER_SHELL y
	SNOW L
	SPONGE x
	STONE J
	STRUCTURAL_AIR b
	TOP_SNOW m
	VEGETABLE Q
	WATER j
	WATER_PLANT f
	WEB p
	WOOD z
	WOOL D
	blocksMotion X
	color V
	flammable Y
	liquid Z
	pushReaction W
	replaceable ab
	solid ac
	solidBlocking aa
	blocksMotion ()Z c
	getColor ()Lnet/minecraft/world/level/material/MaterialColor; h
	getPushReaction ()Lnet/minecraft/world/level/material/PushReaction; g
	isFlammable ()Z d
	isLiquid ()Z a
	isReplaceable ()Z e
	isSolid ()Z b
	isSolidBlocking ()Z f
net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator
	oldWalkableCost m
	oldWaterBorderCost n
	prefersShallowSwimming l
	done ()V a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getFloorLevel (Lnet/minecraft/core/BlockPos;)D a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	isAmphibious ()Z c
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/storage/DataVersion net/minecraft/world/level/storage/DataVersion
	MAIN_SERIES a
	series c
	version b
	getSeries ()Ljava/lang/String; b
	getVersion ()I c
	isCompatible (Lnet/minecraft/world/level/storage/DataVersion;)Z a
	isSideSeries ()Z a
net/minecraft/world/level/storage/LevelVersion net/minecraft/world/level/storage/LevelVersion
	lastPlayed b
	levelDataVersion a
	minecraftVersion d
	minecraftVersionName c
	snapshot e
	lastPlayed ()J b
	levelDataVersion ()I a
	minecraftVersion ()Lnet/minecraft/world/level/storage/DataVersion; d
	minecraftVersionName ()Ljava/lang/String; c
	parse (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/storage/LevelVersion; a
	snapshot ()Z e
net/minecraft/world/level/storage/loot/IntRange net/minecraft/world/level/storage/loot/IntRange
	limiter c
	max b
	min a
	predicate d
	clamp (Lnet/minecraft/world/level/storage/loot/LootContext;I)I a
	exact (I)Lnet/minecraft/world/level/storage/loot/IntRange; a
	getReferencedContextParams ()Ljava/util/Set; a
	lowerBound (I)Lnet/minecraft/world/level/storage/loot/IntRange; b
	range (II)Lnet/minecraft/world/level/storage/loot/IntRange; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;I)Z b
	upperBound (I)Lnet/minecraft/world/level/storage/loot/IntRange; c
net/minecraft/world/level/storage/loot/ItemModifierManager net/minecraft/world/level/storage/loot/ItemModifierManager
	GSON b
	LOGGER a
	functions e
	lootTables d
	predicateManager c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; a
	get (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; a
	getKeys ()Ljava/util/Set; a
net/minecraft/world/level/storage/loot/LootTable net/minecraft/world/level/storage/loot/LootTable
	DEFAULT_PARAM_SET b
	EMPTY a
	LOGGER c
	compositeFunction g
	functions f
	paramSet d
	pools e
	createStackSplitter (Ljava/util/function/Consumer;)Ljava/util/function/Consumer; a
	fill (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getAvailableSlots (Lnet/minecraft/world/Container;Ljava/util/Random;)Ljava/util/List; a
	getParamSet ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/util/List; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V b
	getRandomItemsRaw (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V a
	lootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	shuffleAndSplitItems (Ljava/util/List;ILjava/util/Random;)V a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootItem net/minecraft/world/level/storage/loot/entries/LootItem
	item i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	lootTableItem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/functions/LootItemFunctions net/minecraft/world/level/storage/loot/functions/LootItemFunctions
	APPLY_BONUS q
	COPY_NAME n
	COPY_NBT v
	COPY_STATE w
	ENCHANT_RANDOMLY d
	ENCHANT_WITH_LEVELS c
	EXPLORATION_MAP l
	EXPLOSION_DECAY s
	FILL_PLAYER_HEAD u
	FURNACE_SMELT g
	IDENTITY a
	LIMIT_COUNT p
	LOOTING_ENCHANT h
	SET_ATTRIBUTES j
	SET_BANNER_PATTERN x
	SET_CONTENTS o
	SET_COUNT b
	SET_DAMAGE i
	SET_ENCHANTMENTS e
	SET_LOOT_TABLE r
	SET_LORE t
	SET_NAME k
	SET_NBT f
	SET_POTION y
	SET_STEW_EFFECT m
	compose ([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; a
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction
	append b
	patterns a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setBannerPattern (Z)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction
	add b
	enchantments a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	updateEnchantment (Ljava/util/Map;Lnet/minecraft/world/item/enchantment/Enchantment;I)V a
net/minecraft/world/level/storage/loot/functions/SetPotionFunction net/minecraft/world/level/storage/loot/functions/SetPotionFunction
	potion a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setPotion (Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/predicates/LootItemConditions net/minecraft/world/level/storage/loot/predicates/LootItemConditions
	ALTERNATIVE b
	BLOCK_STATE_PROPERTY h
	DAMAGE_SOURCE_PROPERTIES l
	ENTITY_PROPERTIES e
	ENTITY_SCORES g
	INVERTED a
	KILLED_BY_PLAYER f
	LOCATION_CHECK m
	MATCH_TOOL i
	RANDOM_CHANCE c
	RANDOM_CHANCE_WITH_LOOTING d
	REFERENCE o
	SURVIVES_EXPLOSION k
	TABLE_BONUS j
	TIME_CHECK p
	VALUE_CHECK q
	WEATHER_CHECK n
	andConditions ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; a
	createGsonAdapter ()Ljava/lang/Object; a
	orConditions ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; b
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition
	provider a
	range b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasValue (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider
	BLOCK_ENTITY a
	BLOCK_ENTITY_ID b
	BLOCK_ENTITY_PROVIDER c
	getter d
	createFromContext (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; a
	forContextEntity (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/nbt/NbtProvider; a
	forEntity (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter; b
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders
	CONTEXT b
	STORAGE a
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider
	id a
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator
	n a
	p b
	binomial (IF)Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/ConstantValue net/minecraft/world/level/storage/loot/providers/number/ConstantValue
	value a
	exactly (F)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/NumberProviders net/minecraft/world/level/storage/loot/providers/number/NumberProviders
	BINOMIAL c
	CONSTANT a
	SCORE d
	UNIFORM b
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue
	scale c
	score b
	target a
	fromScoreboard (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; a
	fromScoreboard (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Ljava/lang/String;F)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/UniformGenerator net/minecraft/world/level/storage/loot/providers/number/UniformGenerator
	max b
	min a
	between (FF)Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider
	target a
	forTarget (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; a
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreboardName (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/lang/String; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider
	name a
	forName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; a
	getName ()Ljava/lang/String; c
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreboardName (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/lang/String; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders
	CONTEXT b
	FIXED a
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/phys/shapes/VoxelShape net/minecraft/world/phys/shapes/VoxelShape
	faces b
	shape a
	bounds ()Lnet/minecraft/world/phys/AABB; a
	calculateFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	clip (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	closestPointTo (Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;D)D a
	collideX (Lnet/minecraft/core/AxisCycle;Lnet/minecraft/world/phys/AABB;D)D a
	findIndex (Lnet/minecraft/core/Direction$Axis;D)I a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer;)V b
	forAllEdges (Lnet/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer;)V a
	get (Lnet/minecraft/core/Direction$Axis;I)D a
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
	getFaceShape (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isEmpty ()Z b
	max (Lnet/minecraft/core/Direction$Axis;)D c
	max (Lnet/minecraft/core/Direction$Axis;DD)D b
	min (Lnet/minecraft/core/Direction$Axis;)D b
	min (Lnet/minecraft/core/Direction$Axis;DD)D a
	move (DDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	optimize ()Lnet/minecraft/world/phys/shapes/VoxelShape; c
	toAabbs ()Ljava/util/List; d
net/minecraft/world/scores/Scoreboard net/minecraft/world/scores/Scoreboard
	DISPLAY_SLOTS f
	DISPLAY_SLOT_BELOW_NAME c
	DISPLAY_SLOT_LIST a
	DISPLAY_SLOT_SIDEBAR b
	DISPLAY_SLOT_TEAMS_SIDEBAR_END e
	DISPLAY_SLOT_TEAMS_SIDEBAR_START d
	LOGGER g
	displayObjectives k
	displaySlotNames n
	objectivesByCriteria i
	objectivesByName h
	playerScores j
	teamsByName l
	teamsByPlayer m
	addObjective (Ljava/lang/String;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)Lnet/minecraft/world/scores/Objective; a
	addPlayerTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; g
	addPlayerToTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)Z a
	entityRemoved (Lnet/minecraft/world/entity/Entity;)V a
	forAllObjectives (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V a
	getDisplayObjective (I)Lnet/minecraft/world/scores/Objective; a
	getDisplaySlotByName (Ljava/lang/String;)I j
	getDisplaySlotName (I)Ljava/lang/String; b
	getDisplaySlotNames ()[Ljava/lang/String; h
	getObjective (Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; d
	getObjectiveNames ()Ljava/util/Collection; d
	getObjectives ()Ljava/util/Collection; c
	getOrCreateObjective (Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; c
	getOrCreatePlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/Score; c
	getPlayerScores (Ljava/lang/String;)Ljava/util/Map; e
	getPlayerScores (Lnet/minecraft/world/scores/Objective;)Ljava/util/Collection; i
	getPlayerTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; f
	getPlayerTeams ()Ljava/util/Collection; g
	getPlayersTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; i
	getTeamNames ()Ljava/util/Collection; f
	getTrackedPlayers ()Ljava/util/Collection; e
	hasObjective (Ljava/lang/String;)Z b
	hasPlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)Z b
	loadPlayerScores (Lnet/minecraft/nbt/ListTag;)V a
	onObjectiveAdded (Lnet/minecraft/world/scores/Objective;)V a
	onObjectiveChanged (Lnet/minecraft/world/scores/Objective;)V b
	onObjectiveRemoved (Lnet/minecraft/world/scores/Objective;)V c
	onPlayerRemoved (Ljava/lang/String;)V a
	onPlayerScoreRemoved (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V a
	onScoreChanged (Lnet/minecraft/world/scores/Score;)V a
	onTeamAdded (Lnet/minecraft/world/scores/PlayerTeam;)V a
	onTeamChanged (Lnet/minecraft/world/scores/PlayerTeam;)V b
	onTeamRemoved (Lnet/minecraft/world/scores/PlayerTeam;)V c
	removeObjective (Lnet/minecraft/world/scores/Objective;)V j
	removePlayerFromTeam (Ljava/lang/String;)Z h
	removePlayerFromTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V b
	removePlayerTeam (Lnet/minecraft/world/scores/PlayerTeam;)V d
	resetPlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V d
	savePlayerScores ()Lnet/minecraft/nbt/ListTag; i
	setDisplayObjective (ILnet/minecraft/world/scores/Objective;)V a
net/minecraft/world/ticks/LevelChunkTicks net/minecraft/world/ticks/LevelChunkTicks
	onTickAdded d
	pendingTicks b
	tickQueue a
	ticksPerPosition c
	count ()I a
	getAll ()Ljava/util/stream/Stream; d
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	load (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/ticks/LevelChunkTicks; a
	peek ()Lnet/minecraft/world/ticks/ScheduledTick; b
	poll ()Lnet/minecraft/world/ticks/ScheduledTick; c
	removeIf (Ljava/util/function/Predicate;)V a
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/ListTag; a
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/Tag; b
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	scheduleUnchecked (Lnet/minecraft/world/ticks/ScheduledTick;)V b
	setOnTickAdded (Ljava/util/function/BiConsumer;)V a
	unpack (J)V a
net/minecraft/BlockUtil net/minecraft/BlockUtil
	getLargestRectangleAround (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;ILnet/minecraft/core/Direction$Axis;ILjava/util/function/Predicate;)Lnet/minecraft/BlockUtil$FoundRectangle; a
	getLimit (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;I)I a
	getMaxRectangleLocation ([I)Lcom/mojang/datafixers/util/Pair; a
	getTopConnectedBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
net/minecraft/WorldVersion net/minecraft/WorldVersion
	getDataVersion ()Lnet/minecraft/world/level/storage/DataVersion; b
net/minecraft/advancements/CriterionTrigger net/minecraft/advancements/CriterionTrigger
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/commands/synchronization/ArgumentSerializer net/minecraft/commands/synchronization/ArgumentSerializer
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/data/Main net/minecraft/data/Main
	createStandardGenerator (Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZ)Lnet/minecraft/data/DataGenerator; a
net/minecraft/data/worldgen/NoiseData net/minecraft/data/worldgen/NoiseData
	bootstrap ()Lnet/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters; a
	register (Lnet/minecraft/resources/ResourceKey;ID[D)V a
	registerBiomeNoises (ILnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V a
net/minecraft/data/worldgen/TerrainProvider net/minecraft/data/worldgen/TerrainProvider
	caves ()Lnet/minecraft/world/level/biome/TerrainShaper; a
	end ()Lnet/minecraft/world/level/biome/TerrainShaper; d
	floatingIslands ()Lnet/minecraft/world/level/biome/TerrainShaper; b
	nether ()Lnet/minecraft/world/level/biome/TerrainShaper; c
	overworld (Z)Lnet/minecraft/world/level/biome/TerrainShaper; a
net/minecraft/data/worldgen/biome/EndBiomes net/minecraft/data/worldgen/biome/EndBiomes
	baseEndBiome (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	endBarrens ()Lnet/minecraft/world/level/biome/Biome; a
	endHighlands ()Lnet/minecraft/world/level/biome/Biome; d
	endMidlands ()Lnet/minecraft/world/level/biome/Biome; c
	smallEndIslands ()Lnet/minecraft/world/level/biome/Biome; e
	theEnd ()Lnet/minecraft/world/level/biome/Biome; b
net/minecraft/data/worldgen/biome/NetherBiomes net/minecraft/data/worldgen/biome/NetherBiomes
	basaltDeltas ()Lnet/minecraft/world/level/biome/Biome; c
	crimsonForest ()Lnet/minecraft/world/level/biome/Biome; d
	netherWastes ()Lnet/minecraft/world/level/biome/Biome; a
	soulSandValley ()Lnet/minecraft/world/level/biome/Biome; b
	warpedForest ()Lnet/minecraft/world/level/biome/Biome; e
net/minecraft/data/worldgen/features/FeatureUtils net/minecraft/data/worldgen/features/FeatureUtils
	bootstrap ()Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	simplePatchConfiguration (Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
	simplePatchConfiguration (Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
	simplePatchConfiguration (Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;Ljava/util/List;I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
	simplePatchPredicate (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	simpleRandomPatchConfiguration (ILnet/minecraft/world/level/levelgen/placement/PlacedFeature;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
net/minecraft/gametest/framework/AfterBatch net/minecraft/gametest/framework/AfterBatch
	batch ()Ljava/lang/String; a
net/minecraft/gametest/framework/BeforeBatch net/minecraft/gametest/framework/BeforeBatch
	batch ()Ljava/lang/String; a
net/minecraft/gametest/framework/GameTest net/minecraft/gametest/framework/GameTest
	attempts ()I g
	batch ()Ljava/lang/String; b
	required ()Z d
	requiredSuccesses ()I h
	rotationSteps ()I c
	setupTicks ()J f
	template ()Ljava/lang/String; e
	timeoutTicks ()I a
net/minecraft/nbt/StreamTagVisitor net/minecraft/nbt/StreamTagVisitor
	visit (B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (D)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (F)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (S)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitElement (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; b
	visitEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitList (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/nbt/TagVisitor net/minecraft/nbt/TagVisitor
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/network/PacketListener net/minecraft/network/PacketListener
	getConnection ()Lnet/minecraft/network/Connection; a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/network/protocol/Packet net/minecraft/network/protocol/Packet
	handle (Lnet/minecraft/network/PacketListener;)V a
	isSkippable ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/resources/RegistryResourceAccess net/minecraft/resources/RegistryResourceAccess
	forResourceManager (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/resources/RegistryResourceAccess; a
	listResources (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Collection; a
	parseElement (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Decoder;)Ljava/util/Optional; a
net/minecraft/server/network/ServerPlayerConnection net/minecraft/server/network/ServerPlayerConnection
	getPlayer ()Lnet/minecraft/server/level/ServerPlayer; d
	send (Lnet/minecraft/network/protocol/Packet;)V a
net/minecraft/server/packs/resources/ResourceProvider net/minecraft/server/packs/resources/ResourceProvider
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
net/minecraft/server/players/IpBanList net/minecraft/server/players/IpBanList
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	get (Ljava/net/SocketAddress;)Lnet/minecraft/server/players/IpBanListEntry; b
	getIpFromAddress (Ljava/net/SocketAddress;)Ljava/lang/String; c
	isBanned (Ljava/lang/String;)Z a
	isBanned (Ljava/net/SocketAddress;)Z a
net/minecraft/tags/Tag net/minecraft/tags/Tag
	codec (Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec; a
	contains (Ljava/lang/Object;)Z a
	fromSet (Ljava/util/Set;)Lnet/minecraft/tags/Tag; b
	getRandomElement (Ljava/util/Random;)Ljava/lang/Object; a
	getValues ()Ljava/util/List; b
net/minecraft/util/CubicSpline net/minecraft/util/CubicSpline
	builder (Lnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline$Builder; a
	builder (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline$Builder; a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	constant (F)Lnet/minecraft/util/CubicSpline; a
	parityString ()Ljava/lang/String; a
net/minecraft/util/Graph net/minecraft/util/Graph
	depthFirstSearch (Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/function/Consumer;Ljava/lang/Object;)Z a
net/minecraft/util/ParticleUtils net/minecraft/util/ParticleUtils
	spawnParticleOnFace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/particles/ParticleOptions;)V a
	spawnParticlesAlongAxis (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;DLnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/util/valueproviders/UniformInt;)V a
	spawnParticlesOnBlockFaces (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/util/valueproviders/UniformInt;)V a
net/minecraft/util/Tuple net/minecraft/util/Tuple
	getA ()Ljava/lang/Object; a
	getB ()Ljava/lang/Object; b
	setA (Ljava/lang/Object;)V a
	setB (Ljava/lang/Object;)V b
net/minecraft/util/datafix/fixes/AbstractArrowPickupFix net/minecraft/util/datafix/fixes/AbstractArrowPickupFix
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updatePickup (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateProjectiles (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/CauldronRenameFix net/minecraft/util/datafix/fixes/CauldronRenameFix
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkRenamesFix net/minecraft/util/datafix/fixes/ChunkRenamesFix
	appendChunkName (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	mergeRemainders (Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	renameField (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; a
	renameFieldHelper (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/SpawnerDataFix net/minecraft/util/datafix/fixes/SpawnerDataFix
	wrapEntityToSpawnData (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	wrapSpawnPotentialsToWeightedEntries (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; b
net/minecraft/util/datafix/schemas/V2571 net/minecraft/util/datafix/schemas/V2571
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2686 net/minecraft/util/datafix/schemas/V2686
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2688 net/minecraft/util/datafix/schemas/V2688
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2704 net/minecraft/util/datafix/schemas/V2704
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2707 net/minecraft/util/datafix/schemas/V2707
	registerEntity (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/profiling/jfr/stats/TimedStat net/minecraft/util/profiling/jfr/stats/TimedStat
	duration ()Ljava/time/Duration; a
net/minecraft/util/profiling/metrics/MetricsSamplerProvider net/minecraft/util/profiling/metrics/MetricsSamplerProvider
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
net/minecraft/util/profiling/metrics/ProfilerMeasured net/minecraft/util/profiling/metrics/ProfilerMeasured
	profiledMetrics ()Ljava/util/List; bk
net/minecraft/util/profiling/metrics/profiling/MetricsRecorder net/minecraft/util/profiling/metrics/profiling/MetricsRecorder
	end ()V a
	endTick ()V c
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; e
	isRecording ()Z d
	startTick ()V b
net/minecraft/util/random/SimpleWeightedRandomList net/minecraft/util/random/SimpleWeightedRandomList
	builder ()Lnet/minecraft/util/random/SimpleWeightedRandomList$Builder; a
	empty ()Lnet/minecraft/util/random/SimpleWeightedRandomList; b
	getRandomValue (Ljava/util/Random;)Ljava/util/Optional; a
	single (Ljava/lang/Object;)Lnet/minecraft/util/random/SimpleWeightedRandomList; a
	wrappedCodec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	wrappedCodecAllowingEmpty (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
net/minecraft/util/random/WeightedEntry net/minecraft/util/random/WeightedEntry
	getWeight ()Lnet/minecraft/util/random/Weight; a
	wrap (Ljava/lang/Object;I)Lnet/minecraft/util/random/WeightedEntry$Wrapper; a
net/minecraft/world/Clearable net/minecraft/world/Clearable
	clearContent ()V a
	tryClear (Ljava/lang/Object;)V a
net/minecraft/world/effect/MobEffectUtil net/minecraft/world/effect/MobEffectUtil
	formatDuration (Lnet/minecraft/world/effect/MobEffectInstance;F)Ljava/lang/String; a
	getDigSpeedAmplification (Lnet/minecraft/world/entity/LivingEntity;)I b
	hasDigSpeed (Lnet/minecraft/world/entity/LivingEntity;)Z a
	hasWaterBreathing (Lnet/minecraft/world/entity/LivingEntity;)Z c
net/minecraft/world/entity/LerpingModel net/minecraft/world/entity/LerpingModel
	getModelRotationValues ()Ljava/util/Map; a
net/minecraft/world/entity/OwnableEntity net/minecraft/world/entity/OwnableEntity
	getOwner ()Lnet/minecraft/world/entity/Entity; e
	getOwnerUUID ()Ljava/util/UUID; d
net/minecraft/world/entity/PowerableMob net/minecraft/world/entity/PowerableMob
	isPowered ()Z a
net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	getNearestEntity (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; b
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/util/AirAndWaterRandomPos net/minecraft/world/entity/ai/util/AirAndWaterRandomPos
	generateRandomPos (Lnet/minecraft/world/entity/PathfinderMob;IIIDDDZ)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IIIDDD)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/AirRandomPos net/minecraft/world/entity/ai/util/AirRandomPos
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IIILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/DefaultRandomPos net/minecraft/world/entity/ai/util/DefaultRandomPos
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;IZLnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getPosAway (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/HoverRandomPos net/minecraft/world/entity/ai/util/HoverRandomPos
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IIDDFII)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/LandRandomPos net/minecraft/world/entity/ai/util/LandRandomPos
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;IZLnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IILjava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3; a
	getPosAway (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getPosInDirection (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;Z)Lnet/minecraft/world/phys/Vec3; a
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	movePosUpOutOfSolid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/entity/animal/Bucketable net/minecraft/world/entity/animal/Bucketable
	bucketMobPickup (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	fromBucket ()Z q
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; t
	loadDefaultDataFromBucketTag (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/nbt/CompoundTag;)V a
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	saveDefaultDataToBucketTag (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/item/ItemStack;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V m
	setFromBucket (Z)V v
net/minecraft/world/entity/animal/axolotl/PlayDead net/minecraft/world/entity/animal/axolotl/PlayDead
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)V b
net/minecraft/world/entity/animal/axolotl/ValidatePlayDead net/minecraft/world/entity/animal/axolotl/ValidatePlayDead
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)V a
net/minecraft/world/entity/decoration/GlowItemFrame net/minecraft/world/entity/decoration/GlowItemFrame
	getAddItemSound ()Lnet/minecraft/sounds/SoundEvent; l
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; i
	getFrameItemStack ()Lnet/minecraft/world/item/ItemStack; o
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; j
	getRemoveItemSound ()Lnet/minecraft/sounds/SoundEvent; h
	getRotateItemSound ()Lnet/minecraft/sounds/SoundEvent; n
net/minecraft/world/entity/npc/InventoryCarrier net/minecraft/world/entity/npc/InventoryCarrier
	getInventory ()Lnet/minecraft/world/Container; fI
net/minecraft/world/entity/npc/VillagerDataHolder net/minecraft/world/entity/npc/VillagerDataHolder
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; fJ
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
net/minecraft/world/entity/projectile/ItemSupplier net/minecraft/world/entity/projectile/ItemSupplier
	getItem ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/inventory/ContainerSynchronizer net/minecraft/world/inventory/ContainerSynchronizer
	sendCarriedChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/world/item/ItemStack;)V a
	sendDataChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	sendInitialData (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/core/NonNullList;Lnet/minecraft/world/item/ItemStack;[I)V a
	sendSlotChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/RecipeHolder net/minecraft/world/inventory/RecipeHolder
	awardUsedRecipes (Lnet/minecraft/world/entity/player/Player;)V b
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; d
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	setRecipeUsed (Lnet/minecraft/world/level/Level;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;)Z a
net/minecraft/world/item/ArmorMaterial net/minecraft/world/item/ArmorMaterial
	getDefenseForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I b
	getDurabilityForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I a
	getEnchantmentValue ()I a
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; b
	getKnockbackResistance ()F f
	getName ()Ljava/lang/String; d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; c
	getToughness ()F e
net/minecraft/world/item/DispensibleContainerItem net/minecraft/world/item/DispensibleContainerItem
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
net/minecraft/world/item/TooltipFlag net/minecraft/world/item/TooltipFlag
	isAdvanced ()Z a
net/minecraft/world/level/ExplosionDamageCalculator net/minecraft/world/level/ExplosionDamageCalculator
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
net/minecraft/world/level/LevelHeightAccessor net/minecraft/world/level/LevelHeightAccessor
	create (II)Lnet/minecraft/world/level/LevelHeightAccessor; e
	getHeight ()I v_
	getMaxBuildHeight ()I ag
	getMaxSection ()I aj
	getMinBuildHeight ()I u_
	getMinSection ()I ai
	getSectionIndex (I)I e
	getSectionIndexFromSectionY (I)I f
	getSectionYFromSectionIndex (I)I g
	getSectionsCount ()I ah
	isOutsideBuildHeight (I)Z d
	isOutsideBuildHeight (Lnet/minecraft/core/BlockPos;)Z u
net/minecraft/world/level/biome/Climate$Sampler net/minecraft/world/level/biome/Climate$Sampler
	findSpawnPosition ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/block/AmethystBlock net/minecraft/world/level/block/AmethystBlock
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
net/minecraft/world/level/block/CaveVinesPlantBlock net/minecraft/world/level/block/CaveVinesPlantBlock
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; d
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateHeadAfterConvertedFromBody (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/Fallable net/minecraft/world/level/block/Fallable
	getFallDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; b
	getHurtsEntitySelector ()Ljava/util/function/Predicate; U_
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
net/minecraft/world/level/block/InfestedRotatedPillarBlock net/minecraft/world/level/block/InfestedRotatedPillarBlock
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LavaCauldronBlock net/minecraft/world/level/block/LavaCauldronBlock
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z c
net/minecraft/world/level/block/MossBlock net/minecraft/world/level/block/MossBlock
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/PowderSnowCauldronBlock net/minecraft/world/level/block/PowderSnowCauldronBlock
	handleEntityOnFireInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
net/minecraft/world/level/block/RootedDirtBlock net/minecraft/world/level/block/RootedDirtBlock
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TintedGlassBlock net/minecraft/world/level/block/TintedGlassBlock
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/entity/LidBlockEntity net/minecraft/world/level/block/entity/LidBlockEntity
	getOpenNess (F)F a
net/minecraft/world/level/block/entity/TickingBlockEntity net/minecraft/world/level/block/entity/TickingBlockEntity
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	tick ()V a
net/minecraft/world/level/block/grower/AzaleaTreeGrower net/minecraft/world/level/block/grower/AzaleaTreeGrower
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/chunk/BlockColumn net/minecraft/world/level/chunk/BlockColumn
	getBlock (I)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlock (ILnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/chunk/storage/ChunkScanAccess net/minecraft/world/level/chunk/storage/ChunkScanAccess
	scanChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/StreamTagVisitor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/world/level/entity/EntityAccess net/minecraft/world/level/entity/EntityAccess
	blockPosition ()Lnet/minecraft/core/BlockPos; cW
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; cw
	getId ()I ae
	getPassengersAndSelf ()Ljava/util/stream/Stream; cI
	getSelfAndPassengers ()Ljava/util/stream/Stream; cH
	getUUID ()Ljava/util/UUID; cm
	isAlwaysTicking ()Z ds
	setLevelCallback (Lnet/minecraft/world/level/entity/EntityInLevelCallback;)V a
	setRemoved (Lnet/minecraft/world/entity/Entity$RemovalReason;)V b
	shouldBeSaved ()Z dr
net/minecraft/world/level/entity/EntityPersistentStorage net/minecraft/world/level/entity/EntityPersistentStorage
	flush (Z)V a
	loadEntities (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; a
	storeEntities (Lnet/minecraft/world/level/entity/ChunkEntities;)V a
net/minecraft/world/level/entity/EntityTypeTest net/minecraft/world/level/entity/EntityTypeTest
	forClass (Ljava/lang/Class;)Lnet/minecraft/world/level/entity/EntityTypeTest; a
	getBaseClass ()Ljava/lang/Class; a
	tryCast (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/world/level/entity/LevelCallback net/minecraft/world/level/entity/LevelCallback
	onCreated (Ljava/lang/Object;)V f
	onDestroyed (Ljava/lang/Object;)V e
	onTickingEnd (Ljava/lang/Object;)V c
	onTickingStart (Ljava/lang/Object;)V d
	onTrackingEnd (Ljava/lang/Object;)V a
	onTrackingStart (Ljava/lang/Object;)V b
net/minecraft/world/level/entity/LevelEntityGetter net/minecraft/world/level/entity/LevelEntityGetter
	get (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Consumer;)V a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	get (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getAll ()Ljava/lang/Iterable; a
net/minecraft/world/level/gameevent/GameEventListener net/minecraft/world/level/gameevent/GameEventListener
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	handleGameEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/Aquifer net/minecraft/world/level/levelgen/Aquifer
	computeSubstance (IIIDD)Lnet/minecraft/world/level/block/state/BlockState; a
	create (Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/synth/NormalNoise;Lnet/minecraft/world/level/levelgen/synth/NormalNoise;Lnet/minecraft/world/level/levelgen/synth/NormalNoise;Lnet/minecraft/world/level/levelgen/synth/NormalNoise;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;IILnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;)Lnet/minecraft/world/level/levelgen/Aquifer; a
	createDisabled (Lnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;)Lnet/minecraft/world/level/levelgen/Aquifer; a
	shouldScheduleFluidUpdate ()Z a
net/minecraft/world/level/levelgen/Column net/minecraft/world/level/levelgen/Column
	above (I)Lnet/minecraft/world/level/levelgen/Column; c
	around (II)Lnet/minecraft/world/level/levelgen/Column$Range; a
	below (I)Lnet/minecraft/world/level/levelgen/Column; a
	create (Ljava/util/OptionalInt;Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; a
	fromHighest (I)Lnet/minecraft/world/level/levelgen/Column; b
	fromLowest (I)Lnet/minecraft/world/level/levelgen/Column; d
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
	inside (II)Lnet/minecraft/world/level/levelgen/Column$Range; b
	line ()Lnet/minecraft/world/level/levelgen/Column; a
	scan (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/Optional; a
	scanDirection (Lnet/minecraft/world/level/LevelSimulatedReader;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos$MutableBlockPos;ILnet/minecraft/core/Direction;)Ljava/util/OptionalInt; a
	withCeiling (Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; b
	withFloor (Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; a
net/minecraft/world/level/levelgen/PositionalRandomFactory net/minecraft/world/level/levelgen/PositionalRandomFactory
	at (III)Lnet/minecraft/world/level/levelgen/RandomSource; a
	at (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/RandomSource; a
	fromHashOf (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/RandomSource; a
	fromHashOf (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/RandomSource; a
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/RandomSource net/minecraft/world/level/levelgen/RandomSource
	consumeCount (I)V b
	fork ()Lnet/minecraft/world/level/levelgen/RandomSource; a
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; b
	nextIntBetweenInclusive (II)I a
net/minecraft/world/level/levelgen/feature/BlockColumnFeature net/minecraft/world/level/levelgen/feature/BlockColumnFeature
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	truncate ([IIIZ)V a
net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature
	canBeAdjacentToWater (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	canPlacePool (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z b
	getChanceOfStalagmiteOrStalactite (IIIILnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)D a
	getDripstoneHeight (Ljava/util/Random;IIFILnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)I a
	isLava (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeColumn (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;IIFDIFLnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)V a
	randomBetweenBiased (Ljava/util/Random;FFFF)F a
	replaceBlocksWithDripstoneBlocks (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;)V a
net/minecraft/world/level/levelgen/feature/DripstoneUtils net/minecraft/world/level/levelgen/feature/DripstoneUtils
	buildBaseToTipColumn (Lnet/minecraft/core/Direction;IZLjava/util/function/Consumer;)V a
	createPointedDripstone (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDripstoneHeight (DDDD)D a
	growPointedDripstone (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;IZ)V a
	isCircleMostlyEmbeddedInStone (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;I)Z a
	isDripstoneBase (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isDripstoneBaseOrLava (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isEmptyOrWater (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isEmptyOrWater (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	isEmptyOrWaterOrLava (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z b
	isEmptyOrWaterOrLava (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	placeDripstoneBlockIfPossible (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/levelgen/feature/GlowLichenFeature net/minecraft/world/level/levelgen/feature/GlowLichenFeature
	getShuffledDirections (Lnet/minecraft/world/level/levelgen/feature/configurations/GlowLichenConfiguration;Ljava/util/Random;)Ljava/util/List; a
	getShuffledDirectionsExcept (Lnet/minecraft/world/level/levelgen/feature/configurations/GlowLichenConfiguration;Ljava/util/Random;Lnet/minecraft/core/Direction;)Ljava/util/List; a
	isAirOrWater (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeGlowLichenIfPossible (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/levelgen/feature/configurations/GlowLichenConfiguration;Ljava/util/Random;Ljava/util/List;)Z a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature
	makeDripstone (Lnet/minecraft/core/BlockPos;ZLjava/util/Random;ILnet/minecraft/util/valueproviders/FloatProvider;Lnet/minecraft/util/valueproviders/FloatProvider;)Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeDebugMarkers (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/Column$Range;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)V a
net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature
	createPatchOfDripstoneBlocks (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration;)V a
	getTipDirection (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Ljava/util/Optional; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RootSystemFeature net/minecraft/world/level/levelgen/feature/RootSystemFeature
	isAllowedTreeSpace (Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeDirt (Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Ljava/util/Random;)V a
	placeDirtAndTree (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos;)Z a
	placeRootedDirt (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Ljava/util/Random;IILnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	placeRoots (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	spaceForTree (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature
	getFloorY (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration;)Ljava/util/OptionalInt; a
	isValidPlacement (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z b
	isWaterOrAir (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/VegetationPatchFeature net/minecraft/world/level/levelgen/feature/VegetationPatchFeature
	distributeVegetation (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Ljava/util/Random;Ljava/util/Set;II)V a
	getReplaceableTag (Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;)Ljava/util/function/Predicate; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeGround (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Ljava/util/function/Predicate;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Z a
	placeGroundPatch (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;II)Ljava/util/Set; a
	placeVegetation (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature
	isExposed (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Set;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	isExposedDirection (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;)Z a
	placeGroundPatch (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;II)Ljava/util/Set; a
	placeVegetation (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/placement/PlacementFilter net/minecraft/world/level/levelgen/placement/PlacementFilter
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/placement/RepeatingPlacement net/minecraft/world/level/levelgen/placement/RepeatingPlacement
	count (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)I a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
net/minecraft/world/level/levelgen/structure/NoiseAffectingStructureFeature net/minecraft/world/level/levelgen/structure/NoiseAffectingStructureFeature
	adjustBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
net/minecraft/world/level/levelgen/structure/StructurePieceAccessor net/minecraft/world/level/levelgen/structure/StructurePieceAccessor
	addPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;)V a
	findCollisionPiece (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
net/minecraft/world/level/levelgen/synth/NoiseUtils net/minecraft/world/level/levelgen/synth/NoiseUtils
	biasTowardsExtreme (DD)D a
	parityNoiseOctaveConfigString (Ljava/lang/StringBuilder;DDD[B)V a
	parityNoiseOctaveConfigString (Ljava/lang/StringBuilder;DDD[I)V a
	sampleNoiseAndMapToRange (Lnet/minecraft/world/level/levelgen/synth/NormalNoise;DDDDD)D a
net/minecraft/world/level/storage/loot/functions/LootItemFunction net/minecraft/world/level/storage/loot/functions/LootItemFunction
	decorate (Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/util/function/Consumer; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
net/minecraft/world/level/storage/loot/predicates/LootItemCondition net/minecraft/world/level/storage/loot/predicates/LootItemCondition
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/number/NumberProvider net/minecraft/world/level/storage/loot/providers/number/NumberProvider
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreboardName (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/lang/String; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/ticks/LevelTickAccess net/minecraft/world/ticks/LevelTickAccess
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/ticks/SerializableTickContainer net/minecraft/world/ticks/SerializableTickContainer
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/Tag; b
